erl_lint
[{lists,member,2},{lists,map,2},{lists,foldl,3},{lists,foldr,3},{lists,mapfoldl,3},{lists,all,2},{lists,reverse,1}]
[]
[{function,48,bool_option,4,
  [{clause,48,
    [{var,48,'On'},{var,48,'Off'},{var,48,'Default'},{var,48,'Opts'}],
    [],
    [{call,49,
      {atom,49,foldl},
      [{'fun',49,
        {clauses,
         [{clause,49,
           [{var,49,'Opt'},{var,49,'_Def'}],
           [[{op,49,'=:=',{var,49,'Opt'},{var,49,'On'}}]],
           [{atom,49,true}]},
          {clause,50,
           [{var,50,'Opt'},{var,50,'_Def'}],
           [[{op,50,'=:=',{var,50,'Opt'},{var,50,'Off'}}]],
           [{atom,50,false}]},
          {clause,51,[{var,51,'_Opt'},{var,51,'Def'}],[],[{var,51,'Def'}]}]}},
       {var,52,'Default'},
       {var,52,'Opts'}]}]}]},
 {function,54,value_option,3,
  [{clause,54,
    [{var,54,'Flag'},{var,54,'Default'},{var,54,'Opts'}],
    [],
    [{call,55,
      {atom,55,foldl},
      [{'fun',55,
        {clauses,
         [{clause,55,
           [{tuple,55,[{var,55,'Opt'},{var,55,'Val'}]},{var,55,'_Def'}],
           [[{op,55,'=:=',{var,55,'Opt'},{var,55,'Flag'}}]],
           [{var,55,'Val'}]},
          {clause,56,[{var,56,'_Opt'},{var,56,'Def'}],[],[{var,56,'Def'}]}]}},
       {var,57,'Default'},
       {var,57,'Opts'}]}]}]},
 {function,59,value_option,7,
  [{clause,59,
    [{var,59,'Flag'},
     {var,59,'Default'},
     {var,59,'On'},
     {var,59,'OnVal'},
     {var,59,'Off'},
     {var,59,'OffVal'},
     {var,59,'Opts'}],
    [],
    [{call,60,
      {atom,60,foldl},
      [{'fun',60,
        {clauses,
         [{clause,60,
           [{tuple,60,[{var,60,'Opt'},{var,60,'Val'}]},{var,60,'_Def'}],
           [[{op,60,'=:=',{var,60,'Opt'},{var,60,'Flag'}}]],
           [{var,60,'Val'}]},
          {clause,61,
           [{var,61,'Opt'},{var,61,'_Def'}],
           [[{op,61,'=:=',{var,61,'Opt'},{var,61,'On'}}]],
           [{var,61,'OnVal'}]},
          {clause,62,
           [{var,62,'Opt'},{var,62,'_Def'}],
           [[{op,62,'=:=',{var,62,'Opt'},{var,62,'Off'}}]],
           [{var,62,'OffVal'}]},
          {clause,63,[{var,63,'_Opt'},{var,63,'Def'}],[],[{var,63,'Def'}]}]}},
       {var,64,'Default'},
       {var,64,'Opts'}]}]}]},
 {function,155,format_error,1,
  [{clause,155,
    [{atom,155,undefined_module}],
    [],
    [{string,156,"no module definition"}]},
   {clause,157,
    [{atom,157,redefine_module}],
    [],
    [{string,158,"redefining module"}]},
   {clause,159,
    [{atom,159,pmod_unsupported}],
    [],
    [{string,160,"parameterized modules are no longer supported"}]},
   {clause,164,
    [{atom,164,invalid_call}],
    [],
    [{string,165,"invalid function call"}]},
   {clause,166,
    [{atom,166,invalid_record}],
    [],
    [{string,167,"invalid record expression"}]},
   {clause,169,
    [{tuple,169,[{atom,169,attribute},{var,169,'A'}]}],
    [],
    [{call,170,
      {remote,170,{atom,170,io_lib},{atom,170,format}},
      [{string,170,"attribute '~w' after function definitions"},
       {cons,170,{var,170,'A'},{nil,170}}]}]},
   {clause,171,
    [{tuple,171,[{atom,171,missing_qlc_hrl},{var,171,'A'}]}],
    [],
    [{call,172,
      {remote,172,{atom,172,io_lib},{atom,172,format}},
      [{string,172,"qlc:q/~w called, but \"qlc.hrl\" not included"},
       {cons,172,{var,172,'A'},{nil,172}}]}]},
   {clause,173,
    [{tuple,173,
      [{atom,173,redefine_import},
       {tuple,173,
        [{tuple,173,[{var,173,'F'},{var,173,'A'}]},{var,173,'M'}]}]}],
    [],
    [{call,174,
      {remote,174,{atom,174,io_lib},{atom,174,format}},
      [{string,174,"function ~w/~w already imported from ~w"},
       {cons,174,
        {var,174,'F'},
        {cons,174,{var,174,'A'},{cons,174,{var,174,'M'},{nil,174}}}}]}]},
   {clause,175,
    [{tuple,175,
      [{atom,175,bad_inline},{tuple,175,[{var,175,'F'},{var,175,'A'}]}]}],
    [],
    [{call,176,
      {remote,176,{atom,176,io_lib},{atom,176,format}},
      [{string,176,"inlined function ~w/~w undefined"},
       {cons,176,{var,176,'F'},{cons,176,{var,176,'A'},{nil,176}}}]}]},
   {clause,177,
    [{tuple,177,[{atom,177,invalid_deprecated},{var,177,'D'}]}],
    [],
    [{call,178,
      {remote,178,{atom,178,io_lib},{atom,178,format}},
      [{string,178,"badly formed deprecated attribute ~w"},
       {cons,178,{var,178,'D'},{nil,178}}]}]},
   {clause,179,
    [{tuple,179,
      [{atom,179,bad_deprecated},{tuple,179,[{var,179,'F'},{var,179,'A'}]}]}],
    [],
    [{call,180,
      {remote,180,{atom,180,io_lib},{atom,180,format}},
      [{string,180,"deprecated function ~w/~w undefined or not exported"},
       {cons,180,{var,180,'F'},{cons,180,{var,180,'A'},{nil,180}}}]}]},
   {clause,181,
    [{tuple,181,
      [{atom,181,bad_nowarn_unused_function},
       {tuple,181,[{var,181,'F'},{var,181,'A'}]}]}],
    [],
    [{call,182,
      {remote,182,{atom,182,io_lib},{atom,182,format}},
      [{string,182,"function ~w/~w undefined"},
       {cons,182,{var,182,'F'},{cons,182,{var,182,'A'},{nil,182}}}]}]},
   {clause,183,
    [{tuple,183,
      [{atom,183,bad_nowarn_bif_clash},
       {tuple,183,[{var,183,'F'},{var,183,'A'}]}]}],
    [],
    [{call,184,
      {remote,184,{atom,184,io_lib},{atom,184,format}},
      [{string,184,"function ~w/~w undefined"},
       {cons,184,{var,184,'F'},{cons,184,{var,184,'A'},{nil,184}}}]}]},
   {clause,185,
    [{atom,185,disallowed_nowarn_bif_clash}],
    [],
    [{call,186,
      {remote,186,{atom,186,io_lib},{atom,186,format}},
      [{string,186,
        "compile directive nowarn_bif_clash is no longer allowed,~n - use explicit module names or -compile({no_auto_import, [F/A]})"},
       {nil,187}]}]},
   {clause,188,
    [{tuple,188,
      [{atom,188,bad_nowarn_deprecated_function},
       {tuple,188,[{var,188,'M'},{var,188,'F'},{var,188,'A'}]}]}],
    [],
    [{call,189,
      {remote,189,{atom,189,io_lib},{atom,189,format}},
      [{string,189,"~w:~w/~w is not a deprecated function"},
       {cons,189,
        {var,189,'M'},
        {cons,189,{var,189,'F'},{cons,189,{var,189,'A'},{nil,189}}}}]}]},
   {clause,190,
    [{tuple,190,[{atom,190,bad_on_load},{var,190,'Term'}]}],
    [],
    [{call,191,
      {remote,191,{atom,191,io_lib},{atom,191,format}},
      [{string,191,"badly formed on_load attribute: ~w"},
       {cons,191,{var,191,'Term'},{nil,191}}]}]},
   {clause,192,
    [{atom,192,multiple_on_loads}],
    [],
    [{string,193,"more than one on_load attribute"}]},
   {clause,194,
    [{tuple,194,
      [{atom,194,bad_on_load_arity},
       {tuple,194,[{var,194,'F'},{var,194,'A'}]}]}],
    [],
    [{call,195,
      {remote,195,{atom,195,io_lib},{atom,195,format}},
      [{string,195,"function ~w/~w has wrong arity (must be 0)"},
       {cons,195,{var,195,'F'},{cons,195,{var,195,'A'},{nil,195}}}]}]},
   {clause,196,
    [{tuple,196,
      [{atom,196,undefined_on_load},
       {tuple,196,[{var,196,'F'},{var,196,'A'}]}]}],
    [],
    [{call,197,
      {remote,197,{atom,197,io_lib},{atom,197,format}},
      [{string,197,"function ~w/~w undefined"},
       {cons,197,{var,197,'F'},{cons,197,{var,197,'A'},{nil,197}}}]}]},
   {clause,199,
    [{atom,199,export_all}],
    [],
    [{string,200,"export_all flag enabled - all functions will be exported"}]},
   {clause,201,
    [{tuple,201,
      [{atom,201,duplicated_export},
       {tuple,201,[{var,201,'F'},{var,201,'A'}]}]}],
    [],
    [{call,202,
      {remote,202,{atom,202,io_lib},{atom,202,format}},
      [{string,202,"function ~w/~w already exported"},
       {cons,202,{var,202,'F'},{cons,202,{var,202,'A'},{nil,202}}}]}]},
   {clause,203,
    [{tuple,203,
      [{atom,203,unused_import},
       {tuple,203,
        [{tuple,203,[{var,203,'F'},{var,203,'A'}]},{var,203,'M'}]}]}],
    [],
    [{call,204,
      {remote,204,{atom,204,io_lib},{atom,204,format}},
      [{string,204,"import ~w:~w/~w is unused"},
       {cons,204,
        {var,204,'M'},
        {cons,204,{var,204,'F'},{cons,204,{var,204,'A'},{nil,204}}}}]}]},
   {clause,205,
    [{tuple,205,
      [{atom,205,undefined_function},
       {tuple,205,[{var,205,'F'},{var,205,'A'}]}]}],
    [],
    [{call,206,
      {remote,206,{atom,206,io_lib},{atom,206,format}},
      [{string,206,"function ~w/~w undefined"},
       {cons,206,{var,206,'F'},{cons,206,{var,206,'A'},{nil,206}}}]}]},
   {clause,207,
    [{tuple,207,
      [{atom,207,redefine_function},
       {tuple,207,[{var,207,'F'},{var,207,'A'}]}]}],
    [],
    [{call,208,
      {remote,208,{atom,208,io_lib},{atom,208,format}},
      [{string,208,"function ~w/~w already defined"},
       {cons,208,{var,208,'F'},{cons,208,{var,208,'A'},{nil,208}}}]}]},
   {clause,209,
    [{tuple,209,
      [{atom,209,define_import},{tuple,209,[{var,209,'F'},{var,209,'A'}]}]}],
    [],
    [{call,210,
      {remote,210,{atom,210,io_lib},{atom,210,format}},
      [{string,210,"defining imported function ~w/~w"},
       {cons,210,{var,210,'F'},{cons,210,{var,210,'A'},{nil,210}}}]}]},
   {clause,211,
    [{tuple,211,
      [{atom,211,unused_function},{tuple,211,[{var,211,'F'},{var,211,'A'}]}]}],
    [],
    [{call,212,
      {remote,212,{atom,212,io_lib},{atom,212,format}},
      [{string,212,"function ~w/~w is unused"},
       {cons,212,{var,212,'F'},{cons,212,{var,212,'A'},{nil,212}}}]}]},
   {clause,213,
    [{tuple,213,
      [{atom,213,call_to_redefined_bif},
       {tuple,213,[{var,213,'F'},{var,213,'A'}]}]}],
    [],
    [{call,214,
      {remote,214,{atom,214,io_lib},{atom,214,format}},
      [{string,214,
        "ambiguous call of overridden auto-imported BIF ~w/~w~n - use erlang:~w/~w or \"-compile({no_auto_import,[~w/~w]}).\" to resolve name clash"},
       {cons,216,
        {var,216,'F'},
        {cons,216,
         {var,216,'A'},
         {cons,216,
          {var,216,'F'},
          {cons,216,
           {var,216,'A'},
           {cons,216,{var,216,'F'},{cons,216,{var,216,'A'},{nil,216}}}}}}}]}]},
   {clause,217,
    [{tuple,217,
      [{atom,217,call_to_redefined_old_bif},
       {tuple,217,[{var,217,'F'},{var,217,'A'}]}]}],
    [],
    [{call,218,
      {remote,218,{atom,218,io_lib},{atom,218,format}},
      [{string,218,
        "ambiguous call of overridden pre R14 auto-imported BIF ~w/~w~n - use erlang:~w/~w or \"-compile({no_auto_import,[~w/~w]}).\" to resolve name clash"},
       {cons,220,
        {var,220,'F'},
        {cons,220,
         {var,220,'A'},
         {cons,220,
          {var,220,'F'},
          {cons,220,
           {var,220,'A'},
           {cons,220,{var,220,'F'},{cons,220,{var,220,'A'},{nil,220}}}}}}}]}]},
   {clause,221,
    [{tuple,221,
      [{atom,221,redefine_old_bif_import},
       {tuple,221,[{var,221,'F'},{var,221,'A'}]}]}],
    [],
    [{call,222,
      {remote,222,{atom,222,io_lib},{atom,222,format}},
      [{string,222,
        "import directive overrides pre R14 auto-imported BIF ~w/~w~n - use \"-compile({no_auto_import,[~w/~w]}).\" to resolve name clash"},
       {cons,224,
        {var,224,'F'},
        {cons,224,
         {var,224,'A'},
         {cons,224,{var,224,'F'},{cons,224,{var,224,'A'},{nil,224}}}}}]}]},
   {clause,225,
    [{tuple,225,
      [{atom,225,redefine_bif_import},
       {tuple,225,[{var,225,'F'},{var,225,'A'}]}]}],
    [],
    [{call,226,
      {remote,226,{atom,226,io_lib},{atom,226,format}},
      [{string,226,
        "import directive overrides auto-imported BIF ~w/~w~n - use \"-compile({no_auto_import,[~w/~w]}).\" to resolve name clash"},
       {cons,227,
        {var,227,'F'},
        {cons,227,
         {var,227,'A'},
         {cons,227,{var,227,'F'},{cons,227,{var,227,'A'},{nil,227}}}}}]}]},
   {clause,229,
    [{tuple,229,
      [{atom,229,deprecated},
       {var,229,'MFA'},
       {var,229,'ReplacementMFA'},
       {var,229,'Rel'}]}],
    [],
    [{call,230,
      {remote,230,{atom,230,io_lib},{atom,230,format}},
      [{string,230,"~s is deprecated and will be removed in ~s; use ~s"},
       {cons,231,
        {call,231,{atom,231,format_mfa},[{var,231,'MFA'}]},
        {cons,231,
         {var,231,'Rel'},
         {cons,231,
          {call,231,{atom,231,format_mfa},[{var,231,'ReplacementMFA'}]},
          {nil,231}}}}]}]},
   {clause,232,
    [{tuple,232,
      [{atom,232,deprecated},
       {tuple,232,[{var,232,'M1'},{var,232,'F1'},{var,232,'A1'}]},
       {var,232,'String'}]}],
    [[{call,232,{atom,232,is_list},[{var,232,'String'}]}]],
    [{call,233,
      {remote,233,{atom,233,io_lib},{atom,233,format}},
      [{string,233,"~p:~p/~p: ~s"},
       {cons,233,
        {var,233,'M1'},
        {cons,233,
         {var,233,'F1'},
         {cons,233,
          {var,233,'A1'},
          {cons,233,{var,233,'String'},{nil,233}}}}}]}]},
   {clause,234,
    [{tuple,234,
      [{atom,234,deprecated_type},
       {tuple,234,[{var,234,'M1'},{var,234,'F1'},{var,234,'A1'}]},
       {var,234,'String'}]}],
    [[{call,234,{atom,234,is_list},[{var,234,'String'}]}]],
    [{call,235,
      {remote,235,{atom,235,io_lib},{atom,235,format}},
      [{string,235,"~p:~p~s: ~s"},
       {cons,235,
        {var,235,'M1'},
        {cons,235,
         {var,235,'F1'},
         {cons,235,
          {call,235,{atom,235,gen_type_paren},[{var,235,'A1'}]},
          {cons,235,{var,235,'String'},{nil,235}}}}}]}]},
   {clause,236,
    [{tuple,236,
      [{atom,236,removed},
       {var,236,'MFA'},
       {var,236,'ReplacementMFA'},
       {var,236,'Rel'}]}],
    [],
    [{call,237,
      {remote,237,{atom,237,io_lib},{atom,237,format}},
      [{string,237,"call to ~s will fail, since it was removed in ~s; use ~s"},
       {cons,238,
        {call,238,{atom,238,format_mfa},[{var,238,'MFA'}]},
        {cons,238,
         {var,238,'Rel'},
         {cons,238,
          {call,238,{atom,238,format_mfa},[{var,238,'ReplacementMFA'}]},
          {nil,238}}}}]}]},
   {clause,239,
    [{tuple,239,[{atom,239,removed},{var,239,'MFA'},{var,239,'String'}]}],
    [[{call,239,{atom,239,is_list},[{var,239,'String'}]}]],
    [{call,240,
      {remote,240,{atom,240,io_lib},{atom,240,format}},
      [{string,240,"~s: ~s"},
       {cons,240,
        {call,240,{atom,240,format_mfa},[{var,240,'MFA'}]},
        {cons,240,{var,240,'String'},{nil,240}}}]}]},
   {clause,241,
    [{tuple,241,
      [{atom,241,obsolete_guard},{tuple,241,[{var,241,'F'},{var,241,'A'}]}]}],
    [],
    [{call,242,
      {remote,242,{atom,242,io_lib},{atom,242,format}},
      [{string,242,"~p/~p obsolete"},
       {cons,242,{var,242,'F'},{cons,242,{var,242,'A'},{nil,242}}}]}]},
   {clause,243,
    [{tuple,243,[{atom,243,too_many_arguments},{var,243,'Arity'}]}],
    [],
    [{call,244,
      {remote,244,{atom,244,io_lib},{atom,244,format}},
      [{string,244,"too many arguments (~w) - maximum allowed is ~w"},
       {cons,245,{var,245,'Arity'},{cons,68,{integer,68,255},{nil,245}}}]}]},
   {clause,247,
    [{atom,247,illegal_pattern}],
    [],
    [{string,247,"illegal pattern"}]},
   {clause,248,
    [{atom,248,illegal_map_key}],
    [],
    [{string,248,"illegal map key in pattern"}]},
   {clause,249,
    [{atom,249,illegal_bin_pattern}],
    [],
    [{string,250,"binary patterns cannot be matched in parallel using '='"}]},
   {clause,251,
    [{atom,251,illegal_expr}],
    [],
    [{string,251,"illegal expression"}]},
   {clause,252,
    [{tuple,252,
      [{atom,252,illegal_guard_local_call},
       {tuple,252,[{var,252,'F'},{var,252,'A'}]}]}],
    [],
    [{call,253,
      {remote,253,{atom,253,io_lib},{atom,253,format}},
      [{string,253,
        "call to local/imported function ~w/~w is illegal in guard"},
       {cons,254,{var,254,'F'},{cons,254,{var,254,'A'},{nil,254}}}]}]},
   {clause,255,
    [{atom,255,illegal_guard_expr}],
    [],
    [{string,255,"illegal guard expression"}]},
   {clause,257,
    [{atom,257,illegal_map_construction}],
    [],
    [{string,258,
      "only association operators '=>' are allowed in map construction"}]},
   {clause,260,
    [{tuple,260,[{atom,260,undefined_record},{var,260,'T'}]}],
    [],
    [{call,261,
      {remote,261,{atom,261,io_lib},{atom,261,format}},
      [{string,261,"record ~w undefined"},
       {cons,261,{var,261,'T'},{nil,261}}]}]},
   {clause,262,
    [{tuple,262,[{atom,262,redefine_record},{var,262,'T'}]}],
    [],
    [{call,263,
      {remote,263,{atom,263,io_lib},{atom,263,format}},
      [{string,263,"record ~w already defined"},
       {cons,263,{var,263,'T'},{nil,263}}]}]},
   {clause,264,
    [{tuple,264,[{atom,264,redefine_field},{var,264,'T'},{var,264,'F'}]}],
    [],
    [{call,265,
      {remote,265,{atom,265,io_lib},{atom,265,format}},
      [{string,265,"field ~w already defined in record ~w"},
       {cons,265,{var,265,'F'},{cons,265,{var,265,'T'},{nil,265}}}]}]},
   {clause,266,
    [{tuple,266,[{atom,266,undefined_field},{var,266,'T'},{var,266,'F'}]}],
    [],
    [{call,267,
      {remote,267,{atom,267,io_lib},{atom,267,format}},
      [{string,267,"field ~w undefined in record ~w"},
       {cons,267,{var,267,'F'},{cons,267,{var,267,'T'},{nil,267}}}]}]},
   {clause,268,
    [{atom,268,illegal_record_info}],
    [],
    [{string,269,"illegal record info"}]},
   {clause,270,
    [{tuple,270,
      [{atom,270,field_name_is_variable},{var,270,'T'},{var,270,'F'}]}],
    [],
    [{call,271,
      {remote,271,{atom,271,io_lib},{atom,271,format}},
      [{string,271,"field ~w is not an atom or _ in record ~w"},
       {cons,271,{var,271,'F'},{cons,271,{var,271,'T'},{nil,271}}}]}]},
   {clause,272,
    [{tuple,272,[{atom,272,wildcard_in_update},{var,272,'T'}]}],
    [],
    [{call,273,
      {remote,273,{atom,273,io_lib},{atom,273,format}},
      [{string,273,"meaningless use of _ in update of record ~w"},
       {cons,273,{var,273,'T'},{nil,273}}]}]},
   {clause,274,
    [{tuple,274,[{atom,274,unused_record},{var,274,'T'}]}],
    [],
    [{call,275,
      {remote,275,{atom,275,io_lib},{atom,275,format}},
      [{string,275,"record ~w is unused"},
       {cons,275,{var,275,'T'},{nil,275}}]}]},
   {clause,276,
    [{tuple,276,[{atom,276,untyped_record},{var,276,'T'}]}],
    [],
    [{call,277,
      {remote,277,{atom,277,io_lib},{atom,277,format}},
      [{string,277,"record ~w has field(s) without type information"},
       {cons,277,{var,277,'T'},{nil,277}}]}]},
   {clause,279,
    [{tuple,279,[{atom,279,unbound_var},{var,279,'V'}]}],
    [],
    [{call,280,
      {remote,280,{atom,280,io_lib},{atom,280,format}},
      [{string,280,"variable ~w is unbound"},
       {cons,280,{var,280,'V'},{nil,280}}]}]},
   {clause,281,
    [{tuple,281,
      [{atom,281,unsafe_var},
       {var,281,'V'},
       {tuple,281,[{var,281,'What'},{var,281,'Where'}]}]}],
    [],
    [{call,282,
      {remote,282,{atom,282,io_lib},{atom,282,format}},
      [{string,282,"variable ~w unsafe in ~w ~s"},
       {cons,283,
        {var,283,'V'},
        {cons,283,
         {var,283,'What'},
         {cons,283,
          {call,283,{atom,283,format_where},[{var,283,'Where'}]},
          {nil,283}}}}]}]},
   {clause,284,
    [{tuple,284,
      [{atom,284,exported_var},
       {var,284,'V'},
       {tuple,284,[{var,284,'What'},{var,284,'Where'}]}]}],
    [],
    [{call,285,
      {remote,285,{atom,285,io_lib},{atom,285,format}},
      [{string,285,"variable ~w exported from ~w ~s"},
       {cons,286,
        {var,286,'V'},
        {cons,286,
         {var,286,'What'},
         {cons,286,
          {call,286,{atom,286,format_where},[{var,286,'Where'}]},
          {nil,286}}}}]}]},
   {clause,287,
    [{tuple,287,[{atom,287,shadowed_var},{var,287,'V'},{var,287,'In'}]}],
    [],
    [{call,288,
      {remote,288,{atom,288,io_lib},{atom,288,format}},
      [{string,288,"variable ~w shadowed in ~w"},
       {cons,288,{var,288,'V'},{cons,288,{var,288,'In'},{nil,288}}}]}]},
   {clause,289,
    [{tuple,289,[{atom,289,unused_var},{var,289,'V'}]}],
    [],
    [{call,290,
      {remote,290,{atom,290,io_lib},{atom,290,format}},
      [{string,290,"variable ~w is unused"},
       {cons,290,{var,290,'V'},{nil,290}}]}]},
   {clause,291,
    [{tuple,291,[{atom,291,variable_in_record_def},{var,291,'V'}]}],
    [],
    [{call,292,
      {remote,292,{atom,292,io_lib},{atom,292,format}},
      [{string,292,"variable ~w in record definition"},
       {cons,292,{var,292,'V'},{nil,292}}]}]},
   {clause,294,
    [{tuple,294,[{atom,294,undefined_bittype},{var,294,'Type'}]}],
    [],
    [{call,295,
      {remote,295,{atom,295,io_lib},{atom,295,format}},
      [{string,295,"bit type ~w undefined"},
       {cons,295,{var,295,'Type'},{nil,295}}]}]},
   {clause,296,
    [{atom,296,bittype_unit}],
    [],
    [{string,297,
      "a bit unit size must not be specified unless a size is specified too"}]},
   {clause,298,
    [{atom,298,illegal_bitsize}],
    [],
    [{string,299,"illegal bit size"}]},
   {clause,300,
    [{atom,300,unsized_binary_not_at_end}],
    [],
    [{string,301,
      "a binary field without size is only allowed at the end of a binary pattern"}]},
   {clause,302,
    [{atom,302,typed_literal_string}],
    [],
    [{string,303,
      "a literal string in a binary pattern must not have a type or a size"}]},
   {clause,304,
    [{atom,304,utf_bittype_size_or_unit}],
    [],
    [{string,305,
      "neither size nor unit must be given for segments of type utf8/utf16/utf32"}]},
   {clause,306,
    [{tuple,306,[{atom,306,bad_bitsize},{var,306,'Type'}]}],
    [],
    [{call,307,
      {remote,307,{atom,307,io_lib},{atom,307,format}},
      [{string,307,"bad ~s bit size"},
       {cons,307,{var,307,'Type'},{nil,307}}]}]},
   {clause,308,
    [{atom,308,unsized_binary_in_bin_gen_pattern}],
    [],
    [{string,309,
      "binary fields without size are not allowed in patterns of bit string generators"}]},
   {clause,311,
    [{tuple,311,
      [{atom,311,conflicting_behaviours},
       {tuple,311,[{var,311,'Name'},{var,311,'Arity'}]},
       {var,311,'B'},
       {var,311,'FirstL'},
       {var,311,'FirstB'}]}],
    [],
    [{call,312,
      {remote,312,{atom,312,io_lib},{atom,312,format}},
      [{string,312,
        "conflicting behaviours - callback ~w/~w required by both '~p' and '~p' ~s"},
       {cons,313,
        {var,313,'Name'},
        {cons,313,
         {var,313,'Arity'},
         {cons,313,
          {var,313,'B'},
          {cons,313,
           {var,313,'FirstB'},
           {cons,313,
            {call,313,{atom,313,format_where},[{var,313,'FirstL'}]},
            {nil,313}}}}}}]}]},
   {clause,314,
    [{tuple,314,
      [{atom,314,undefined_behaviour_func},
       {tuple,314,[{var,314,'Func'},{var,314,'Arity'}]},
       {var,314,'Behaviour'}]}],
    [],
    [{call,315,
      {remote,315,{atom,315,io_lib},{atom,315,format}},
      [{string,315,"undefined callback function ~w/~w (behaviour '~w')"},
       {cons,316,
        {var,316,'Func'},
        {cons,316,
         {var,316,'Arity'},
         {cons,316,{var,316,'Behaviour'},{nil,316}}}}]}]},
   {clause,317,
    [{tuple,317,[{atom,317,undefined_behaviour},{var,317,'Behaviour'}]}],
    [],
    [{call,318,
      {remote,318,{atom,318,io_lib},{atom,318,format}},
      [{string,318,"behaviour ~w undefined"},
       {cons,318,{var,318,'Behaviour'},{nil,318}}]}]},
   {clause,319,
    [{tuple,319,
      [{atom,319,undefined_behaviour_callbacks},{var,319,'Behaviour'}]}],
    [],
    [{call,320,
      {remote,320,{atom,320,io_lib},{atom,320,format}},
      [{string,320,"behaviour ~w callback functions are undefined"},
       {cons,321,{var,321,'Behaviour'},{nil,321}}]}]},
   {clause,322,
    [{tuple,322,
      [{atom,322,ill_defined_behaviour_callbacks},{var,322,'Behaviour'}]}],
    [],
    [{call,323,
      {remote,323,{atom,323,io_lib},{atom,323,format}},
      [{string,323,"behaviour ~w callback functions erroneously defined"},
       {cons,324,{var,324,'Behaviour'},{nil,324}}]}]},
   {clause,325,
    [{tuple,325,
      [{atom,325,ill_defined_optional_callbacks},{var,325,'Behaviour'}]}],
    [],
    [{call,326,
      {remote,326,{atom,326,io_lib},{atom,326,format}},
      [{string,326,
        "behaviour ~w optional callback functions erroneously defined"},
       {cons,327,{var,327,'Behaviour'},{nil,327}}]}]},
   {clause,328,
    [{tuple,328,
      [{atom,328,behaviour_info},
       {tuple,328,[{var,328,'_M'},{var,328,'F'},{var,328,'A'}]}]}],
    [],
    [{call,329,
      {remote,329,{atom,329,io_lib},{atom,329,format}},
      [{string,329,
        "cannot define callback attibute for ~w/~w when behaviour_info is defined"},
       {cons,330,{var,330,'F'},{cons,330,{var,330,'A'},{nil,330}}}]}]},
   {clause,331,
    [{tuple,331,
      [{atom,331,redefine_optional_callback},
       {tuple,331,[{var,331,'F'},{var,331,'A'}]}]}],
    [],
    [{call,332,
      {remote,332,{atom,332,io_lib},{atom,332,format}},
      [{string,332,"optional callback ~w/~w duplicated"},
       {cons,332,{var,332,'F'},{cons,332,{var,332,'A'},{nil,332}}}]}]},
   {clause,333,
    [{tuple,333,
      [{atom,333,undefined_callback},
       {tuple,333,[{var,333,'_M'},{var,333,'F'},{var,333,'A'}]}]}],
    [],
    [{call,334,
      {remote,334,{atom,334,io_lib},{atom,334,format}},
      [{string,334,"callback ~w/~w is undefined"},
       {cons,334,{var,334,'F'},{cons,334,{var,334,'A'},{nil,334}}}]}]},
   {clause,336,
    [{tuple,336,[{atom,336,singleton_typevar},{var,336,'Name'}]}],
    [],
    [{call,337,
      {remote,337,{atom,337,io_lib},{atom,337,format}},
      [{string,337,"type variable ~w is only used once (is unbound)"},
       {cons,337,{var,337,'Name'},{nil,337}}]}]},
   {clause,338,
    [{tuple,338,[{atom,338,bad_export_type},{var,338,'_ETs'}]}],
    [],
    [{call,339,
      {remote,339,{atom,339,io_lib},{atom,339,format}},
      [{string,339,"bad export_type declaration"},{nil,339}]}]},
   {clause,340,
    [{tuple,340,
      [{atom,340,duplicated_export_type},
       {tuple,340,[{var,340,'T'},{var,340,'A'}]}]}],
    [],
    [{call,341,
      {remote,341,{atom,341,io_lib},{atom,341,format}},
      [{string,341,"type ~w/~w already exported"},
       {cons,341,{var,341,'T'},{cons,341,{var,341,'A'},{nil,341}}}]}]},
   {clause,342,
    [{tuple,342,
      [{atom,342,undefined_type},
       {tuple,342,[{var,342,'TypeName'},{var,342,'Arity'}]}]}],
    [],
    [{call,343,
      {remote,343,{atom,343,io_lib},{atom,343,format}},
      [{string,343,"type ~w~s undefined"},
       {cons,343,
        {var,343,'TypeName'},
        {cons,343,
         {call,343,{atom,343,gen_type_paren},[{var,343,'Arity'}]},
         {nil,343}}}]}]},
   {clause,344,
    [{tuple,344,
      [{atom,344,unused_type},
       {tuple,344,[{var,344,'TypeName'},{var,344,'Arity'}]}]}],
    [],
    [{call,345,
      {remote,345,{atom,345,io_lib},{atom,345,format}},
      [{string,345,"type ~w~s is unused"},
       {cons,345,
        {var,345,'TypeName'},
        {cons,345,
         {call,345,{atom,345,gen_type_paren},[{var,345,'Arity'}]},
         {nil,345}}}]}]},
   {clause,346,
    [{tuple,346,
      [{atom,346,new_builtin_type},
       {tuple,346,[{var,346,'TypeName'},{var,346,'Arity'}]}]}],
    [],
    [{call,347,
      {remote,347,{atom,347,io_lib},{atom,347,format}},
      [{string,347,
        "type ~w~s is a new builtin type; its (re)definition is allowed only until the next release"},
       {cons,349,
        {var,349,'TypeName'},
        {cons,349,
         {call,349,{atom,349,gen_type_paren},[{var,349,'Arity'}]},
         {nil,349}}}]}]},
   {clause,350,
    [{tuple,350,
      [{atom,350,builtin_type},
       {tuple,350,[{var,350,'TypeName'},{var,350,'Arity'}]}]}],
    [],
    [{call,351,
      {remote,351,{atom,351,io_lib},{atom,351,format}},
      [{string,351,"type ~w~s is a builtin type; it cannot be redefined"},
       {cons,352,
        {var,352,'TypeName'},
        {cons,352,
         {call,352,{atom,352,gen_type_paren},[{var,352,'Arity'}]},
         {nil,352}}}]}]},
   {clause,353,
    [{tuple,353,
      [{atom,353,renamed_type},{var,353,'OldName'},{var,353,'NewName'}]}],
    [],
    [{call,354,
      {remote,354,{atom,354,io_lib},{atom,354,format}},
      [{string,354,
        "type ~w() is now called ~w(); please use the new name instead"},
       {cons,355,
        {var,355,'OldName'},
        {cons,355,{var,355,'NewName'},{nil,355}}}]}]},
   {clause,356,
    [{tuple,356,
      [{atom,356,redefine_type},
       {tuple,356,[{var,356,'TypeName'},{var,356,'Arity'}]}]}],
    [],
    [{call,357,
      {remote,357,{atom,357,io_lib},{atom,357,format}},
      [{string,357,"type ~w~s already defined"},
       {cons,358,
        {var,358,'TypeName'},
        {cons,358,
         {call,358,{atom,358,gen_type_paren},[{var,358,'Arity'}]},
         {nil,358}}}]}]},
   {clause,359,
    [{tuple,359,[{atom,359,type_syntax},{var,359,'Constr'}]}],
    [],
    [{call,360,
      {remote,360,{atom,360,io_lib},{atom,360,format}},
      [{string,360,"bad ~w type"},{cons,360,{var,360,'Constr'},{nil,360}}]}]},
   {clause,361,
    [{tuple,361,
      [{atom,361,redefine_spec},
       {tuple,361,[{var,361,'M'},{var,361,'F'},{var,361,'A'}]}]}],
    [],
    [{call,362,
      {remote,362,{atom,362,io_lib},{atom,362,format}},
      [{string,362,"spec for ~w:~w/~w already defined"},
       {cons,362,
        {var,362,'M'},
        {cons,362,{var,362,'F'},{cons,362,{var,362,'A'},{nil,362}}}}]}]},
   {clause,363,
    [{tuple,363,
      [{atom,363,redefine_spec},{tuple,363,[{var,363,'F'},{var,363,'A'}]}]}],
    [],
    [{call,364,
      {remote,364,{atom,364,io_lib},{atom,364,format}},
      [{string,364,"spec for ~w/~w already defined"},
       {cons,364,{var,364,'F'},{cons,364,{var,364,'A'},{nil,364}}}]}]},
   {clause,365,
    [{tuple,365,
      [{atom,365,redefine_callback},
       {tuple,365,[{var,365,'F'},{var,365,'A'}]}]}],
    [],
    [{call,366,
      {remote,366,{atom,366,io_lib},{atom,366,format}},
      [{string,366,"callback ~w/~w already defined"},
       {cons,366,{var,366,'F'},{cons,366,{var,366,'A'},{nil,366}}}]}]},
   {clause,367,
    [{tuple,367,
      [{atom,367,bad_callback},
       {tuple,367,[{var,367,'M'},{var,367,'F'},{var,367,'A'}]}]}],
    [],
    [{call,368,
      {remote,368,{atom,368,io_lib},{atom,368,format}},
      [{string,368,"explicit module not allowed for callback ~w:~w/~w "},
       {cons,368,
        {var,368,'M'},
        {cons,368,{var,368,'F'},{cons,368,{var,368,'A'},{nil,368}}}}]}]},
   {clause,369,
    [{tuple,369,
      [{atom,369,spec_fun_undefined},
       {tuple,369,[{var,369,'F'},{var,369,'A'}]}]}],
    [],
    [{call,370,
      {remote,370,{atom,370,io_lib},{atom,370,format}},
      [{string,370,"spec for undefined function ~w/~w"},
       {cons,370,{var,370,'F'},{cons,370,{var,370,'A'},{nil,370}}}]}]},
   {clause,371,
    [{tuple,371,
      [{atom,371,missing_spec},{tuple,371,[{var,371,'F'},{var,371,'A'}]}]}],
    [],
    [{call,372,
      {remote,372,{atom,372,io_lib},{atom,372,format}},
      [{string,372,"missing specification for function ~w/~w"},
       {cons,372,{var,372,'F'},{cons,372,{var,372,'A'},{nil,372}}}]}]},
   {clause,373,
    [{atom,373,spec_wrong_arity}],
    [],
    [{string,374,"spec has the wrong arity"}]},
   {clause,375,
    [{atom,375,callback_wrong_arity}],
    [],
    [{string,376,"callback has the wrong arity"}]},
   {clause,377,
    [{tuple,377,
      [{atom,377,deprecated_builtin_type},
       {tuple,377,[{var,377,'Name'},{var,377,'Arity'}]},
       {var,378,'Replacement'},
       {var,378,'Rel'}]}],
    [],
    [{match,379,
      {var,379,'UseS'},
      {'case',379,
       {var,379,'Replacement'},
       [{clause,380,
         [{tuple,380,[{var,380,'Mod'},{var,380,'NewName'}]}],
         [],
         [{call,381,
           {remote,381,{atom,381,io_lib},{atom,381,format}},
           [{string,381,"use ~w:~w/~w"},
            {cons,381,
             {var,381,'Mod'},
             {cons,381,
              {var,381,'NewName'},
              {cons,381,{var,381,'Arity'},{nil,381}}}}]}]},
        {clause,382,
         [{tuple,382,
           [{var,382,'Mod'},{var,382,'NewName'},{var,382,'NewArity'}]}],
         [],
         [{call,383,
           {remote,383,{atom,383,io_lib},{atom,383,format}},
           [{string,383,"use ~w:~w/~w or preferably ~w:~w/~w"},
            {cons,384,
             {var,384,'Mod'},
             {cons,384,
              {var,384,'NewName'},
              {cons,384,
               {var,384,'Arity'},
               {cons,385,
                {var,385,'Mod'},
                {cons,385,
                 {var,385,'NewName'},
                 {cons,385,{var,385,'NewArity'},{nil,385}}}}}}}]}]}]}},
     {call,387,
      {remote,387,{atom,387,io_lib},{atom,387,format}},
      [{string,387,
        "type ~w/~w is deprecated and will be removed in ~s; use ~s"},
       {cons,389,
        {var,389,'Name'},
        {cons,389,
         {var,389,'Arity'},
         {cons,389,
          {var,389,'Rel'},
          {cons,389,{var,389,'UseS'},{nil,389}}}}}]}]},
   {clause,390,
    [{tuple,390,
      [{atom,390,not_exported_opaque},
       {tuple,390,[{var,390,'TypeName'},{var,390,'Arity'}]}]}],
    [],
    [{call,391,
      {remote,391,{atom,391,io_lib},{atom,391,format}},
      [{string,391,"opaque type ~w~s is not exported"},
       {cons,392,
        {var,392,'TypeName'},
        {cons,392,
         {call,392,{atom,392,gen_type_paren},[{var,392,'Arity'}]},
         {nil,392}}}]}]},
   {clause,393,
    [{tuple,393,
      [{atom,393,underspecified_opaque},
       {tuple,393,[{var,393,'TypeName'},{var,393,'Arity'}]}]}],
    [],
    [{call,394,
      {remote,394,{atom,394,io_lib},{atom,394,format}},
      [{string,394,
        "opaque type ~w~s is underspecified and therefore meaningless"},
       {cons,395,
        {var,395,'TypeName'},
        {cons,395,
         {call,395,{atom,395,gen_type_paren},[{var,395,'Arity'}]},
         {nil,395}}}]}]},
   {clause,397,
    [{tuple,397,
      [{atom,397,format_error},
       {tuple,397,[{var,397,'Fmt'},{var,397,'Args'}]}]}],
    [],
    [{call,398,
      {remote,398,{atom,398,io_lib},{atom,398,format}},
      [{var,398,'Fmt'},{var,398,'Args'}]}]}]},
 {function,400,gen_type_paren,1,
  [{clause,400,
    [{var,400,'Arity'}],
    [[{call,400,{atom,400,is_integer},[{var,400,'Arity'}]},
      {op,400,'>=',{var,400,'Arity'},{integer,400,0}}]],
    [{call,401,
      {atom,401,gen_type_paren_1},
      [{var,401,'Arity'},{string,401,")"}]}]}]},
 {function,403,gen_type_paren_1,2,
  [{clause,403,
    [{integer,403,0},{var,403,'Acc'}],
    [],
    [{op,403,'++',{string,403,"("},{var,403,'Acc'}}]},
   {clause,404,
    [{integer,404,1},{var,404,'Acc'}],
    [],
    [{op,404,'++',{string,404,"(_"},{var,404,'Acc'}}]},
   {clause,405,
    [{var,405,'N'},{var,405,'Acc'}],
    [],
    [{call,405,
      {atom,405,gen_type_paren_1},
      [{op,405,'-',{var,405,'N'},{integer,405,1}},
       {op,405,'++',{string,405,",_"},{var,405,'Acc'}}]}]}]},
 {function,407,format_mfa,1,
  [{clause,407,
    [{tuple,407,
      [{var,407,'M'},
       {var,407,'F'},
       {match,407,{cons,407,{var,407,'_'},{var,407,'_'}},{var,407,'As'}}]}],
    [],
    [{match,408,
      {op,408,'++',{string,408,","},{var,408,'ArityString'}},
      {call,408,
       {remote,408,{atom,408,lists},{atom,408,append}},
       [{lc,408,
         {cons,408,
          {char,408,44},
          {call,408,{atom,408,integer_to_list},[{var,408,'A'}]}},
         [{generate,408,{var,408,'A'},{var,408,'As'}}]}]}},
     {call,409,
      {atom,409,format_mf},
      [{var,409,'M'},{var,409,'F'},{var,409,'ArityString'}]}]},
   {clause,410,
    [{tuple,410,[{var,410,'M'},{var,410,'F'},{var,410,'A'}]}],
    [[{call,410,{atom,410,is_integer},[{var,410,'A'}]}]],
    [{call,411,
      {atom,411,format_mf},
      [{var,411,'M'},
       {var,411,'F'},
       {call,411,{atom,411,integer_to_list},[{var,411,'A'}]}]}]}]},
 {function,413,format_mf,3,
  [{clause,413,
    [{var,413,'M'},{var,413,'F'},{var,413,'ArityString'}],
    [[{call,413,{atom,413,is_atom},[{var,413,'M'}]},
      {call,413,{atom,413,is_atom},[{var,413,'F'}]}]],
    [{op,414,'++',
      {call,414,{atom,414,atom_to_list},[{var,414,'M'}]},
      {op,414,'++',
       {string,414,":"},
       {op,414,'++',
        {call,414,{atom,414,atom_to_list},[{var,414,'F'}]},
        {op,414,'++',{string,414,"/"},{var,414,'ArityString'}}}}}]}]},
 {function,416,format_where,1,
  [{clause,416,
    [{var,416,'L'}],
    [[{call,416,{atom,416,is_integer},[{var,416,'L'}]}]],
    [{call,417,
      {remote,417,{atom,417,io_lib},{atom,417,format}},
      [{string,417,"(line ~p)"},{cons,417,{var,417,'L'},{nil,417}}]}]},
   {clause,418,
    [{tuple,418,[{var,418,'L'},{var,418,'C'}]}],
    [[{call,418,{atom,418,is_integer},[{var,418,'L'}]},
      {call,418,{atom,418,is_integer},[{var,418,'C'}]}]],
    [{call,419,
      {remote,419,{atom,419,io_lib},{atom,419,format}},
      [{string,419,"(line ~p, column ~p)"},
       {cons,419,{var,419,'L'},{cons,419,{var,419,'C'},{nil,419}}}]}]}]},
 {function,423,pseudolocals,0,
  [{clause,423,[],[],
    [{cons,424,
      {tuple,424,[{atom,424,module_info},{integer,424,0}]},
      {cons,424,
       {tuple,424,[{atom,424,module_info},{integer,424,1}]},
       {cons,424,
        {tuple,424,[{atom,424,record_info},{integer,424,2}]},
        {nil,424}}}}]}]},
 {function,429,exprs,2,
  [{clause,429,
    [{var,429,'Exprs'},{var,429,'BindingsList'}],
    [],
    [{call,430,
      {atom,430,exprs_opt},
      [{var,430,'Exprs'},{var,430,'BindingsList'},{nil,430}]}]}]},
 {function,432,exprs_opt,3,
  [{clause,432,
    [{var,432,'Exprs'},{var,432,'BindingsList'},{var,432,'Opts'}],
    [],
    [{match,433,
      {tuple,433,[{var,433,'St0'},{var,433,'Vs'}]},
      {call,433,
       {atom,433,foldl},
       [{'fun',433,
         {clauses,
          [{clause,433,
            [{tuple,433,
              [{tuple,433,
                [{atom,433,record},
                 {var,433,'_SequenceNumber'},
                 {var,433,'_Name'}]},
               {var,433,'Attr0'}]},
             {tuple,433,[{var,433,'St1'},{var,433,'Vs1'}]}],
            [],
            [{match,434,
              {var,434,'Attr'},
              {call,434,
               {atom,434,set_file},
               [{var,434,'Attr0'},{string,434,"none"}]}},
             {tuple,435,
              [{call,435,
                {atom,435,attribute_state},
                [{var,435,'Attr'},{var,435,'St1'}]},
               {var,435,'Vs1'}]}]},
           {clause,436,
            [{tuple,436,[{var,436,'V'},{var,436,'_'}]},
             {tuple,436,[{var,436,'St1'},{var,436,'Vs1'}]}],
            [],
            [{tuple,437,
              [{var,437,'St1'},
               {cons,437,
                {tuple,437,
                 [{var,437,'V'},
                  {tuple,437,[{atom,437,bound},{atom,437,unused},{nil,437}]}]},
                {var,437,'Vs1'}}]}]}]}},
        {tuple,438,
         [{call,438,{atom,438,start},[{string,438,"nofile"},{var,438,'Opts'}]},
          {nil,438}]},
        {var,438,'BindingsList'}]}},
     {match,439,
      {var,439,'Vt'},
      {call,439,
       {remote,439,{atom,439,orddict},{atom,439,from_list}},
       [{var,439,'Vs'}]}},
     {match,440,
      {tuple,440,[{var,440,'_Evt'},{var,440,'St'}]},
      {call,440,
       {atom,440,exprs},
       [{call,440,
         {atom,440,set_file},
         [{var,440,'Exprs'},{string,440,"nofile"}]},
        {var,440,'Vt'},
        {var,440,'St0'}]}},
     {call,441,{atom,441,return_status},[{var,441,'St'}]}]}]},
 {function,443,used_vars,2,
  [{clause,443,
    [{var,443,'Exprs'},{var,443,'BindingsList'}],
    [],
    [{match,444,
      {var,444,'Vs'},
      {call,444,
       {atom,444,foldl},
       [{'fun',444,
         {clauses,
          [{clause,444,
            [{tuple,444,
              [{tuple,444,
                [{atom,444,record},
                 {var,444,'_SequenceNumber'},
                 {var,444,'_Name'}]},
               {var,444,'_Attr'}]},
             {var,444,'Vs0'}],
            [],
            [{var,444,'Vs0'}]},
           {clause,445,
            [{tuple,445,[{var,445,'V'},{var,445,'_Val'}]},{var,445,'Vs0'}],
            [],
            [{cons,445,
              {tuple,445,
               [{var,445,'V'},
                {tuple,445,[{atom,445,bound},{atom,445,unused},{nil,445}]}]},
              {var,445,'Vs0'}}]}]}},
        {nil,446},
        {var,446,'BindingsList'}]}},
     {match,447,
      {var,447,'Vt'},
      {call,447,
       {remote,447,{atom,447,orddict},{atom,447,from_list}},
       [{var,447,'Vs'}]}},
     {match,448,
      {tuple,448,[{var,448,'Evt'},{var,448,'_St'}]},
      {call,448,
       {atom,448,exprs},
       [{call,448,
         {atom,448,set_file},
         [{var,448,'Exprs'},{string,448,"nofile"}]},
        {var,448,'Vt'},
        {call,448,{atom,448,start},[]}]}},
     {tuple,449,
      [{atom,449,ok},
       {call,449,
        {atom,449,foldl},
        [{'fun',449,
          {clauses,
           [{clause,449,
             [{tuple,449,
               [{var,449,'V'},
                {tuple,449,[{var,449,'_'},{atom,449,used},{var,449,'_'}]}]},
              {var,449,'L'}],
             [],
             [{cons,449,{var,449,'V'},{var,449,'L'}}]},
            {clause,450,[{var,450,'_'},{var,450,'L'}],[],[{var,450,'L'}]}]}},
         {nil,451},
         {var,451,'Evt'}]}]}]}]},
 {function,467,module,1,
  [{clause,467,
    [{var,467,'Forms'}],
    [],
    [{match,468,
      {var,468,'Opts'},
      {call,468,{atom,468,compiler_options},[{var,468,'Forms'}]}},
     {match,469,
      {var,469,'St'},
      {call,469,
       {atom,469,forms},
       [{var,469,'Forms'},
        {call,469,
         {atom,469,start},
         [{string,469,"nofile"},{var,469,'Opts'}]}]}},
     {call,470,{atom,470,return_status},[{var,470,'St'}]}]}]},
 {function,480,module,2,
  [{clause,480,
    [{var,480,'Forms'},{var,480,'FileName'}],
    [],
    [{match,481,
      {var,481,'Opts'},
      {call,481,{atom,481,compiler_options},[{var,481,'Forms'}]}},
     {match,482,
      {var,482,'St'},
      {call,482,
       {atom,482,forms},
       [{var,482,'Forms'},
        {call,482,{atom,482,start},[{var,482,'FileName'},{var,482,'Opts'}]}]}},
     {call,483,{atom,483,return_status},[{var,483,'St'}]}]}]},
 {function,494,module,3,
  [{clause,494,
    [{var,494,'Forms'},{var,494,'FileName'},{var,494,'Opts0'}],
    [],
    [{match,497,
      {var,497,'Opts'},
      {op,497,'++',
       {call,497,{atom,497,compiler_options},[{var,497,'Forms'}]},
       {var,497,'Opts0'}}},
     {match,498,
      {var,498,'St'},
      {call,498,
       {atom,498,forms},
       [{var,498,'Forms'},
        {call,498,{atom,498,start},[{var,498,'FileName'},{var,498,'Opts'}]}]}},
     {call,499,{atom,499,return_status},[{var,499,'St'}]}]}]},
 {function,501,compiler_options,1,
  [{clause,501,
    [{var,501,'Forms'}],
    [],
    [{call,502,
      {remote,502,{atom,502,lists},{atom,502,flatten}},
      [{lc,502,
        {var,502,'C'},
        [{generate,502,
          {tuple,502,
           [{atom,502,attribute},
            {var,502,'_'},
            {atom,502,compile},
            {var,502,'C'}]},
          {var,502,'Forms'}}]}]}]}]},
 {function,507,start,0,
  [{clause,507,[],[],
    [{call,508,{atom,508,start},[{string,508,"nofile"},{nil,508}]}]}]},
 {function,510,start,2,
  [{clause,510,
    [{var,510,'File'},{var,510,'Opts'}],
    [],
    [{match,511,
      {var,511,'Enabled0'},
      {cons,512,
       {tuple,512,
        [{atom,512,unused_vars},
         {call,513,
          {atom,513,bool_option},
          [{atom,513,warn_unused_vars},
           {atom,513,nowarn_unused_vars},
           {atom,514,true},
           {var,514,'Opts'}]}]},
       {cons,515,
        {tuple,515,
         [{atom,515,export_all},
          {call,516,
           {atom,516,bool_option},
           [{atom,516,warn_export_all},
            {atom,516,nowarn_export_all},
            {atom,517,false},
            {var,517,'Opts'}]}]},
        {cons,518,
         {tuple,518,
          [{atom,518,export_vars},
           {call,519,
            {atom,519,bool_option},
            [{atom,519,warn_export_vars},
             {atom,519,nowarn_export_vars},
             {atom,520,false},
             {var,520,'Opts'}]}]},
         {cons,521,
          {tuple,521,
           [{atom,521,shadow_vars},
            {call,522,
             {atom,522,bool_option},
             [{atom,522,warn_shadow_vars},
              {atom,522,nowarn_shadow_vars},
              {atom,523,true},
              {var,523,'Opts'}]}]},
          {cons,524,
           {tuple,524,
            [{atom,524,unused_import},
             {call,525,
              {atom,525,bool_option},
              [{atom,525,warn_unused_import},
               {atom,525,nowarn_unused_import},
               {atom,526,false},
               {var,526,'Opts'}]}]},
           {cons,527,
            {tuple,527,
             [{atom,527,unused_function},
              {call,528,
               {atom,528,bool_option},
               [{atom,528,warn_unused_function},
                {atom,528,nowarn_unused_function},
                {atom,529,true},
                {var,529,'Opts'}]}]},
            {cons,530,
             {tuple,530,
              [{atom,530,bif_clash},
               {call,531,
                {atom,531,bool_option},
                [{atom,531,warn_bif_clash},
                 {atom,531,nowarn_bif_clash},
                 {atom,532,true},
                 {var,532,'Opts'}]}]},
             {cons,533,
              {tuple,533,
               [{atom,533,unused_record},
                {call,534,
                 {atom,534,bool_option},
                 [{atom,534,warn_unused_record},
                  {atom,534,nowarn_unused_record},
                  {atom,535,true},
                  {var,535,'Opts'}]}]},
              {cons,536,
               {tuple,536,
                [{atom,536,deprecated_function},
                 {call,537,
                  {atom,537,bool_option},
                  [{atom,537,warn_deprecated_function},
                   {atom,537,nowarn_deprecated_function},
                   {atom,538,true},
                   {var,538,'Opts'}]}]},
               {cons,539,
                {tuple,539,
                 [{atom,539,deprecated_type},
                  {call,540,
                   {atom,540,bool_option},
                   [{atom,540,warn_deprecated_type},
                    {atom,540,nowarn_deprecated_type},
                    {atom,541,true},
                    {var,541,'Opts'}]}]},
                {cons,542,
                 {tuple,542,
                  [{atom,542,obsolete_guard},
                   {call,543,
                    {atom,543,bool_option},
                    [{atom,543,warn_obsolete_guard},
                     {atom,543,nowarn_obsolete_guard},
                     {atom,544,true},
                     {var,544,'Opts'}]}]},
                 {cons,545,
                  {tuple,545,
                   [{atom,545,untyped_record},
                    {call,546,
                     {atom,546,bool_option},
                     [{atom,546,warn_untyped_record},
                      {atom,546,nowarn_untyped_record},
                      {atom,547,false},
                      {var,547,'Opts'}]}]},
                  {cons,548,
                   {tuple,548,
                    [{atom,548,missing_spec},
                     {call,549,
                      {atom,549,bool_option},
                      [{atom,549,warn_missing_spec},
                       {atom,549,nowarn_missing_spec},
                       {atom,550,false},
                       {var,550,'Opts'}]}]},
                   {cons,551,
                    {tuple,551,
                     [{atom,551,missing_spec_all},
                      {call,552,
                       {atom,552,bool_option},
                       [{atom,552,warn_missing_spec_all},
                        {atom,552,nowarn_missing_spec_all},
                        {atom,553,false},
                        {var,553,'Opts'}]}]},
                    {nil,554}}}}}}}}}}}}}}}},
     {match,555,
      {var,555,'Enabled1'},
      {lc,555,
       {var,555,'Category'},
       [{generate,555,
         {tuple,555,[{var,555,'Category'},{atom,555,true}]},
         {var,555,'Enabled0'}}]}},
     {match,556,
      {var,556,'Enabled'},
      {call,556,
       {remote,556,{atom,556,ordsets},{atom,556,from_list}},
       [{var,556,'Enabled1'}]}},
     {match,557,
      {var,557,'Calls'},
      {'case',557,
       {call,557,
        {remote,557,{atom,557,ordsets},{atom,557,is_element}},
        [{atom,557,unused_function},{var,557,'Enabled'}]},
       [{clause,558,
         [{atom,558,true}],
         [],
         [{call,559,
           {remote,559,{atom,559,dict},{atom,559,from_list}},
           [{cons,559,
             {tuple,559,
              [{tuple,559,[{atom,559,module_info},{integer,559,1}]},
               {call,559,{atom,559,pseudolocals},[]}]},
             {nil,559}}]}]},
        {clause,560,[{atom,560,false}],[],[{atom,561,undefined}]}]}},
     {tuple,563,
      [{atom,563,lint},
       {atom,563,start},
       {nil,103},
       {nil,104},
       {call,564,
        {remote,564,{atom,564,gb_sets},{atom,564,from_list}},
        [{cons,564,
          {tuple,564,[{atom,564,module_info},{integer,564,0}]},
          {cons,564,
           {tuple,564,[{atom,564,module_info},{integer,564,1}]},
           {nil,564}}}]},
       {nil,106},
       {var,565,'Opts'},
       {call,108,{remote,108,{atom,108,dict},{atom,108,new}},[]},
       {call,110,{remote,110,{atom,110,gb_sets},{atom,110,empty}},[]},
       {call,112,{remote,112,{atom,112,gb_sets},{atom,112,empty}},[]},
       {call,567,
        {remote,567,{atom,567,gb_sets},{atom,567,from_list}},
        [{call,567,{atom,567,pseudolocals},[]}]},
       {nil,116},
       {call,117,
        {remote,117,{atom,117,erl_anno},{atom,117,new}},
        [{integer,117,0}]},
       {nil,119},
       {nil,120},
       {nil,121},
       {call,570,
        {atom,570,value_option},
        [{atom,570,warn_format},
         {integer,570,1},
         {atom,570,warn_format},
         {integer,570,1},
         {atom,571,nowarn_format},
         {integer,571,0},
         {var,571,'Opts'}]},
       {var,572,'Enabled'},
       {call,573,
        {atom,573,nowarn_function},
        [{atom,573,nowarn_bif_clash},{var,573,'Opts'}]},
       {nil,125},
       {nil,126},
       {var,574,'File'},
       {atom,128,false},
       {atom,130,false},
       {lc,568,
        {tuple,568,[{var,568,'F'},{integer,568,0}]},
        [{generate,568,{var,568,'F'},{call,568,{atom,568,pseudolocals},[]}}]},
       {tuple,569,
        [{atom,569,usage},
         {var,569,'Calls'},
         {nil,92},
         {call,93,{remote,93,{atom,93,sets},{atom,93,new}},[]},
         {call,95,{remote,95,{atom,95,dict},{atom,95,new}},[]}]},
       {call,133,{remote,133,{atom,133,dict},{atom,133,new}},[]},
       {call,135,{remote,135,{atom,135,dict},{atom,135,new}},[]},
       {call,137,{remote,137,{atom,137,dict},{atom,137,new}},[]},
       {call,139,{remote,139,{atom,139,dict},{atom,139,new}},[]},
       {call,141,{remote,141,{atom,141,gb_sets},{atom,141,empty}},[]}]}]}]},
 {function,579,is_warn_enabled,2,
  [{clause,579,
    [{var,579,'Type'},
     {tuple,579,
      [{atom,579,lint},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'Enabled'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'},
       {var,579,'_'}]}],
    [],
    [{call,580,
      {remote,580,{atom,580,ordsets},{atom,580,is_element}},
      [{var,580,'Type'},{var,580,'Enabled'}]}]}]},
 {function,586,return_status,1,
  [{clause,586,
    [{var,586,'St'}],
    [],
    [{match,587,
      {var,587,'Ws'},
      {call,587,
       {atom,587,pack_warnings},
       [{call,587,
         {remote,587,{atom,587,erlang},{atom,587,element}},
         [{integer,587,21},{var,587,'St'}]}]}},
     {'case',588,
      {call,588,
       {atom,588,pack_errors},
       [{call,588,
         {remote,588,{atom,588,erlang},{atom,588,element}},
         [{integer,588,20},{var,588,'St'}]}]},
      [{clause,589,
        [{nil,589}],
        [],
        [{tuple,589,[{atom,589,ok},{var,589,'Ws'}]}]},
       {clause,590,
        [{var,590,'Es'}],
        [],
        [{tuple,590,[{atom,590,error},{var,590,'Es'},{var,590,'Ws'}]}]}]}]}]},
 {function,596,pack_errors,1,
  [{clause,596,
    [{var,596,'Es'}],
    [],
    [{match,597,
      {tuple,597,[{var,597,'Es1'},{var,597,'_'}]},
      {call,597,
       {atom,597,mapfoldl},
       [{'fun',597,
         {clauses,
          [{clause,597,
            [{tuple,597,[{var,597,'File'},{var,597,'E'}]},{var,597,'I'}],
            [],
            [{tuple,597,
              [{tuple,597,
                [{var,597,'File'},{tuple,597,[{var,597,'I'},{var,597,'E'}]}]},
               {op,597,'-',{var,597,'I'},{integer,597,1}}]}]}]}},
        {op,597,'-',{integer,597,1}},
        {var,597,'Es'}]}},
     {call,598,
      {atom,598,map},
      [{'fun',598,
        {clauses,
         [{clause,598,
           [{tuple,598,[{var,598,'File'},{var,598,'EIs'}]}],
           [],
           [{tuple,598,
             [{var,598,'File'},
              {call,598,
               {atom,598,map},
               [{'fun',598,
                 {clauses,
                  [{clause,598,
                    [{tuple,598,[{var,598,'_I'},{var,598,'E'}]}],
                    [],
                    [{var,598,'E'}]}]}},
                {var,598,'EIs'}]}]}]}]}},
       {call,599,{atom,599,pack_warnings},[{var,599,'Es1'}]}]}]}]},
 {function,604,pack_warnings,1,
  [{clause,604,
    [{var,604,'Ws'}],
    [],
    [{lc,605,
      {tuple,605,
       [{var,605,'File'},
        {call,605,
         {remote,605,{atom,605,lists},{atom,605,sort}},
         [{lc,605,
           {var,605,'W'},
           [{generate,605,
             {tuple,605,[{var,605,'F'},{var,605,'W'}]},
             {var,605,'Ws'}},
            {op,605,'=:=',{var,605,'F'},{var,605,'File'}}]}]}]},
      [{generate,606,
        {var,606,'File'},
        {call,606,
         {remote,606,{atom,606,lists},{atom,606,usort}},
         [{lc,606,
           {var,606,'F'},
           [{generate,606,
             {tuple,606,[{var,606,'F'},{var,606,'_'}]},
             {var,606,'Ws'}}]}]}}]}]}]},
 {function,613,add_error,2,
  [{clause,613,
    [{var,613,'E'},{var,613,'St'}],
    [],
    [{call,613,
      {atom,613,add_lint_error},
      [{var,613,'E'},
       {call,613,
        {remote,613,{atom,613,erlang},{atom,613,element}},
        [{integer,613,22},{var,613,'St'}]},
       {var,613,'St'}]}]}]},
 {function,615,add_error,3,
  [{clause,615,
    [{var,615,'Anno'},{var,615,'E'},{var,615,'St'}],
    [],
    [{match,616,
      {tuple,616,[{var,616,'File'},{var,616,'Location'}]},
      {call,616,{atom,616,loc},[{var,616,'Anno'},{var,616,'St'}]}},
     {call,617,
      {atom,617,add_lint_error},
      [{tuple,617,[{var,617,'Location'},{atom,617,erl_lint},{var,617,'E'}]},
       {var,617,'File'},
       {var,617,'St'}]}]}]},
 {function,619,add_lint_error,3,
  [{clause,619,
    [{var,619,'E'},{var,619,'File'},{var,619,'St'}],
    [],
    [{call,620,
      {remote,620,{atom,620,erlang},{atom,620,setelement}},
      [{integer,620,20},
       {var,620,'St'},
       {cons,620,
        {tuple,620,[{var,620,'File'},{var,620,'E'}]},
        {call,620,
         {remote,620,{atom,620,erlang},{atom,620,element}},
         [{integer,620,20},{var,620,'St'}]}}]}]}]},
 {function,622,add_warning,2,
  [{clause,622,
    [{var,622,'W'},{var,622,'St'}],
    [],
    [{call,622,
      {atom,622,add_lint_warning},
      [{var,622,'W'},
       {call,622,
        {remote,622,{atom,622,erlang},{atom,622,element}},
        [{integer,622,22},{var,622,'St'}]},
       {var,622,'St'}]}]}]},
 {function,624,add_warning,3,
  [{clause,624,
    [{var,624,'FileLine'},{var,624,'W'},{var,624,'St'}],
    [],
    [{match,625,
      {tuple,625,[{var,625,'File'},{var,625,'Location'}]},
      {call,625,{atom,625,loc},[{var,625,'FileLine'},{var,625,'St'}]}},
     {call,626,
      {atom,626,add_lint_warning},
      [{tuple,626,[{var,626,'Location'},{atom,626,erl_lint},{var,626,'W'}]},
       {var,626,'File'},
       {var,626,'St'}]}]}]},
 {function,628,add_lint_warning,3,
  [{clause,628,
    [{var,628,'W'},{var,628,'File'},{var,628,'St'}],
    [],
    [{call,629,
      {remote,629,{atom,629,erlang},{atom,629,setelement}},
      [{integer,629,21},
       {var,629,'St'},
       {cons,629,
        {tuple,629,[{var,629,'File'},{var,629,'W'}]},
        {call,629,
         {remote,629,{atom,629,erlang},{atom,629,element}},
         [{integer,629,21},{var,629,'St'}]}}]}]}]},
 {function,631,loc,2,
  [{clause,631,
    [{var,631,'Anno'},{var,631,'St'}],
    [],
    [{match,632,
      {var,632,'Location'},
      {call,632,
       {remote,632,{atom,632,erl_anno},{atom,632,location}},
       [{var,632,'Anno'}]}},
     {'case',633,
      {call,633,
       {remote,633,{atom,633,erl_anno},{atom,633,file}},
       [{var,633,'Anno'}]},
      [{clause,634,
        [{atom,634,undefined}],
        [],
        [{tuple,634,
          [{call,634,
            {remote,634,{atom,634,erlang},{atom,634,element}},
            [{integer,634,22},{var,634,'St'}]},
           {var,634,'Location'}]}]},
       {clause,635,
        [{var,635,'File'}],
        [],
        [{tuple,635,[{var,635,'File'},{var,635,'Location'}]}]}]}]}]},
 {function,640,forms,2,
  [{clause,640,
    [{var,640,'Forms0'},{var,640,'St0'}],
    [],
    [{match,641,
      {var,641,'Forms'},
      {call,641,
       {atom,641,eval_file_attribute},
       [{var,641,'Forms0'},{var,641,'St0'}]}},
     {match,643,
      {var,643,'Locals'},
      {call,643,{atom,643,local_functions},[{var,643,'Forms'}]}},
     {match,644,
      {var,644,'AutoImportSuppressed'},
      {call,644,
       {atom,644,auto_import_suppressed},
       [{call,644,
         {remote,644,{atom,644,erlang},{atom,644,element}},
         [{integer,644,7},{var,644,'St0'}]}]}},
     {match,645,
      {var,645,'StDeprecated'},
      {call,645,
       {atom,645,disallowed_compile_flags},
       [{var,645,'Forms'},{var,645,'St0'}]}},
     {match,646,
      {var,646,'St1'},
      {call,646,
       {atom,646,includes_qlc_hrl},
       [{var,646,'Forms'},
        {call,646,
         {remote,646,{atom,646,erlang},{atom,646,setelement}},
         [{integer,646,10},
          {call,646,
           {remote,646,{atom,646,erlang},{atom,646,setelement}},
           [{integer,646,9},{var,646,'StDeprecated'},{var,646,'Locals'}]},
          {var,647,'AutoImportSuppressed'}]}]}},
     {match,648,
      {var,648,'St2'},
      {call,648,{atom,648,bif_clashes},[{var,648,'Forms'},{var,648,'St1'}]}},
     {match,649,
      {var,649,'St3'},
      {call,649,
       {atom,649,not_deprecated},
       [{var,649,'Forms'},{var,649,'St2'}]}},
     {match,650,
      {var,650,'St4'},
      {call,650,
       {atom,650,foldl},
       [{'fun',650,{function,form,2}},
        {call,650,{atom,650,pre_scan},[{var,650,'Forms'},{var,650,'St3'}]},
        {var,650,'Forms'}]}},
     {call,651,
      {atom,651,post_traversal_check},
      [{var,651,'Forms'},{var,651,'St4'}]}]}]},
 {function,653,pre_scan,2,
  [{clause,653,
    [{cons,653,
      {tuple,653,
       [{atom,653,attribute},{var,653,'L'},{atom,653,compile},{var,653,'C'}]},
      {var,653,'Fs'}},
     {var,653,'St'}],
    [],
    [{'case',654,
      {op,654,'andalso',
       {call,654,
        {atom,654,is_warn_enabled},
        [{atom,654,export_all},{var,654,'St'}]},
       {call,655,
        {atom,655,member},
        [{atom,655,export_all},
         {call,655,
          {remote,655,{atom,655,lists},{atom,655,flatten}},
          [{cons,655,{var,655,'C'},{nil,655}}]}]}},
      [{clause,656,
        [{atom,656,true}],
        [],
        [{call,657,
          {atom,657,pre_scan},
          [{var,657,'Fs'},
           {call,657,
            {atom,657,add_warning},
            [{var,657,'L'},{atom,657,export_all},{var,657,'St'}]}]}]},
       {clause,658,
        [{atom,658,false}],
        [],
        [{call,659,{atom,659,pre_scan},[{var,659,'Fs'},{var,659,'St'}]}]}]}]},
   {clause,661,
    [{cons,661,{var,661,'_'},{var,661,'Fs'}},{var,661,'St'}],
    [],
    [{call,662,{atom,662,pre_scan},[{var,662,'Fs'},{var,662,'St'}]}]},
   {clause,663,[{nil,663},{var,663,'St'}],[],[{var,664,'St'}]}]},
 {function,666,includes_qlc_hrl,2,
  [{clause,666,
    [{var,666,'Forms'},{var,666,'St'}],
    [],
    [{match,669,
      {var,669,'QH'},
      {lc,669,
       {var,669,'File'},
       [{generate,669,
         {tuple,669,
          [{atom,669,attribute},
           {var,669,'_'},
           {atom,669,file},
           {tuple,669,[{var,669,'File'},{var,669,'_line'}]}]},
         {var,669,'Forms'}},
        {op,670,'=:=',
         {call,670,
          {remote,670,{atom,670,filename},{atom,670,basename}},
          [{var,670,'File'}]},
         {string,670,"qlc.hrl"}}]}},
     {call,671,
      {remote,671,{atom,671,erlang},{atom,671,setelement}},
      [{integer,671,24},
       {var,671,'St'},
       {op,671,'=/=',{var,671,'QH'},{nil,671}}]}]}]},
 {function,673,eval_file_attribute,2,
  [{clause,673,
    [{var,673,'Forms'},{var,673,'St'}],
    [],
    [{call,674,
      {atom,674,eval_file_attr},
      [{var,674,'Forms'},
       {call,674,
        {remote,674,{atom,674,erlang},{atom,674,element}},
        [{integer,674,22},{var,674,'St'}]}]}]}]},
 {function,676,eval_file_attr,2,
  [{clause,676,
    [{cons,676,
      {match,676,
       {tuple,676,
        [{atom,676,attribute},
         {var,676,'_L'},
         {atom,676,file},
         {tuple,676,[{var,676,'File'},{var,676,'_Line'}]}]},
       {var,676,'Form'}},
      {var,676,'Forms'}},
     {var,676,'_File'}],
    [],
    [{cons,677,
      {var,677,'Form'},
      {call,677,
       {atom,677,eval_file_attr},
       [{var,677,'Forms'},{var,677,'File'}]}}]},
   {clause,678,
    [{cons,678,{var,678,'Form0'},{var,678,'Forms'}},{var,678,'File'}],
    [],
    [{match,679,
      {var,679,'Form'},
      {call,679,
       {atom,679,set_form_file},
       [{var,679,'Form0'},{var,679,'File'}]}},
     {cons,680,
      {var,680,'Form'},
      {call,680,
       {atom,680,eval_file_attr},
       [{var,680,'Forms'},{var,680,'File'}]}}]},
   {clause,681,[{nil,681},{var,681,'_File'}],[],[{nil,682}]}]},
 {function,687,set_form_file,2,
  [{clause,687,
    [{tuple,687,
      [{atom,687,attribute},{var,687,'L'},{var,687,'K'},{var,687,'V'}]},
     {var,687,'File'}],
    [],
    [{tuple,688,
      [{atom,688,attribute},
       {call,688,
        {remote,688,{atom,688,erl_anno},{atom,688,set_file}},
        [{var,688,'File'},{var,688,'L'}]},
       {var,688,'K'},
       {var,688,'V'}]}]},
   {clause,689,
    [{tuple,689,
      [{atom,689,function},
       {var,689,'L'},
       {var,689,'N'},
       {var,689,'A'},
       {var,689,'C'}]},
     {var,689,'File'}],
    [],
    [{tuple,690,
      [{atom,690,function},
       {call,690,
        {remote,690,{atom,690,erl_anno},{atom,690,set_file}},
        [{var,690,'File'},{var,690,'L'}]},
       {var,690,'N'},
       {var,690,'A'},
       {var,690,'C'}]}]},
   {clause,691,[{var,691,'Form'},{var,691,'_File'}],[],[{var,692,'Form'}]}]},
 {function,694,set_file,2,
  [{clause,694,
    [{var,694,'T'},{var,694,'File'}],
    [],
    [{match,695,
      {var,695,'F'},
      {'fun',695,
       {clauses,
        [{clause,695,
          [{var,695,'Anno'}],
          [],
          [{call,695,
            {remote,695,{atom,695,erl_anno},{atom,695,set_file}},
            [{var,695,'File'},{var,695,'Anno'}]}]}]}}},
     {call,696,
      {remote,696,{atom,696,erl_parse},{atom,696,map_anno}},
      [{var,696,'F'},{var,696,'T'}]}]}]},
 {function,701,form,2,
  [{clause,701,
    [{tuple,701,[{atom,701,error},{var,701,'E'}]},{var,701,'St'}],
    [],
    [{call,701,{atom,701,add_error},[{var,701,'E'},{var,701,'St'}]}]},
   {clause,702,
    [{tuple,702,[{atom,702,warning},{var,702,'W'}]},{var,702,'St'}],
    [],
    [{call,702,{atom,702,add_warning},[{var,702,'W'},{var,702,'St'}]}]},
   {clause,703,
    [{tuple,703,
      [{atom,703,attribute},
       {var,703,'_L'},
       {atom,703,file},
       {tuple,703,[{var,703,'File'},{var,703,'_Line'}]}]},
     {var,703,'St'}],
    [],
    [{call,704,
      {remote,704,{atom,704,erlang},{atom,704,setelement}},
      [{integer,704,22},{var,704,'St'},{var,704,'File'}]}]},
   {clause,705,
    [{tuple,705,
      [{atom,705,attribute},{var,705,'_L'},{atom,705,compile},{var,705,'_'}]},
     {var,705,'St'}],
    [],
    [{var,706,'St'}]},
   {clause,707,
    [{var,707,'Form'},
     {match,707,
      {tuple,707,
       [{atom,707,lint},
        {var,707,'State'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'},
        {var,707,'_'}]},
      {var,707,'St'}}],
    [],
    [{'case',708,
      {var,708,'State'},
      [{clause,709,
        [{atom,709,start}],
        [],
        [{call,709,{atom,709,start_state},[{var,709,'Form'},{var,709,'St'}]}]},
       {clause,710,
        [{atom,710,attribute}],
        [],
        [{call,710,
          {atom,710,attribute_state},
          [{var,710,'Form'},{var,710,'St'}]}]},
       {clause,711,
        [{atom,711,function}],
        [],
        [{call,711,
          {atom,711,function_state},
          [{var,711,'Form'},{var,711,'St'}]}]}]}]}]},
 {function,716,start_state,2,
  [{clause,716,
    [{match,716,
      {tuple,716,
       [{atom,716,attribute},
        {var,716,'Line'},
        {atom,716,module},
        {tuple,716,[{var,716,'_'},{var,716,'_'}]}]},
      {var,716,'Form'}},
     {var,716,'St0'}],
    [],
    [{match,717,
      {var,717,'St1'},
      {call,717,
       {atom,717,add_error},
       [{var,717,'Line'},{atom,717,pmod_unsupported},{var,717,'St0'}]}},
     {call,718,
      {atom,718,attribute_state},
      [{var,718,'Form'},
       {call,718,
        {remote,718,{atom,718,erlang},{atom,718,setelement}},
        [{integer,718,2},{var,718,'St1'},{atom,718,attribute}]}]}]},
   {clause,719,
    [{tuple,719,
      [{atom,719,attribute},{var,719,'_'},{atom,719,module},{var,719,'M'}]},
     {var,719,'St0'}],
    [],
    [{match,720,
      {var,720,'St1'},
      {call,720,
       {remote,720,{atom,720,erlang},{atom,720,setelement}},
       [{integer,720,3},{var,720,'St0'},{var,720,'M'}]}},
     {call,721,
      {remote,721,{atom,721,erlang},{atom,721,setelement}},
      [{integer,721,2},{var,721,'St1'},{atom,721,attribute}]}]},
   {clause,722,
    [{var,722,'Form'},{var,722,'St'}],
    [],
    [{match,723,
      {var,723,'St1'},
      {call,723,
       {atom,723,add_error},
       [{call,723,{atom,723,element},[{integer,723,2},{var,723,'Form'}]},
        {atom,723,undefined_module},
        {var,723,'St'}]}},
     {call,724,
      {atom,724,attribute_state},
      [{var,724,'Form'},
       {call,724,
        {remote,724,{atom,724,erlang},{atom,724,setelement}},
        [{integer,724,2},{var,724,'St1'},{atom,724,attribute}]}]}]}]},
 {function,729,attribute_state,2,
  [{clause,729,
    [{tuple,729,
      [{atom,729,attribute},{var,729,'_L'},{atom,729,module},{var,729,'_M'}]},
     {match,729,
      {tuple,729,
       [{atom,729,lint},
        {var,729,'_'},
        {nil,729},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'},
        {var,729,'_'}]},
      {var,729,'St'}}],
    [],
    [{var,730,'St'}]},
   {clause,731,
    [{tuple,731,
      [{atom,731,attribute},{var,731,'L'},{atom,731,module},{var,731,'_M'}]},
     {var,731,'St'}],
    [],
    [{call,732,
      {atom,732,add_error},
      [{var,732,'L'},{atom,732,redefine_module},{var,732,'St'}]}]},
   {clause,733,
    [{tuple,733,
      [{atom,733,attribute},{var,733,'L'},{atom,733,export},{var,733,'Es'}]},
     {var,733,'St'}],
    [],
    [{call,734,
      {atom,734,export},
      [{var,734,'L'},{var,734,'Es'},{var,734,'St'}]}]},
   {clause,735,
    [{tuple,735,
      [{atom,735,attribute},
       {var,735,'L'},
       {atom,735,export_type},
       {var,735,'Es'}]},
     {var,735,'St'}],
    [],
    [{call,736,
      {atom,736,export_type},
      [{var,736,'L'},{var,736,'Es'},{var,736,'St'}]}]},
   {clause,737,
    [{tuple,737,
      [{atom,737,attribute},{var,737,'L'},{atom,737,import},{var,737,'Is'}]},
     {var,737,'St'}],
    [],
    [{call,738,
      {atom,738,import},
      [{var,738,'L'},{var,738,'Is'},{var,738,'St'}]}]},
   {clause,739,
    [{tuple,739,
      [{atom,739,attribute},
       {var,739,'L'},
       {atom,739,record},
       {tuple,739,[{var,739,'Name'},{var,739,'Fields'}]}]},
     {var,739,'St'}],
    [],
    [{call,740,
      {atom,740,record_def},
      [{var,740,'L'},{var,740,'Name'},{var,740,'Fields'},{var,740,'St'}]}]},
   {clause,741,
    [{tuple,741,
      [{atom,741,attribute},
       {var,741,'La'},
       {atom,741,behaviour},
       {var,741,'Behaviour'}]},
     {var,741,'St'}],
    [],
    [{call,742,
      {remote,742,{atom,742,erlang},{atom,742,setelement}},
      [{integer,742,4},
       {var,742,'St'},
       {op,742,'++',
        {call,742,
         {remote,742,{atom,742,erlang},{atom,742,element}},
         [{integer,742,4},{var,742,'St'}]},
        {cons,742,
         {tuple,742,[{var,742,'La'},{var,742,'Behaviour'}]},
         {nil,742}}}]}]},
   {clause,743,
    [{tuple,743,
      [{atom,743,attribute},
       {var,743,'La'},
       {atom,743,behavior},
       {var,743,'Behaviour'}]},
     {var,743,'St'}],
    [],
    [{call,744,
      {remote,744,{atom,744,erlang},{atom,744,setelement}},
      [{integer,744,4},
       {var,744,'St'},
       {op,744,'++',
        {call,744,
         {remote,744,{atom,744,erlang},{atom,744,element}},
         [{integer,744,4},{var,744,'St'}]},
        {cons,744,
         {tuple,744,[{var,744,'La'},{var,744,'Behaviour'}]},
         {nil,744}}}]}]},
   {clause,745,
    [{tuple,745,
      [{atom,745,attribute},
       {var,745,'L'},
       {atom,745,type},
       {tuple,745,
        [{var,745,'TypeName'},{var,745,'TypeDef'},{var,745,'Args'}]}]},
     {var,745,'St'}],
    [],
    [{call,746,
      {atom,746,type_def},
      [{atom,746,type},
       {var,746,'L'},
       {var,746,'TypeName'},
       {var,746,'TypeDef'},
       {var,746,'Args'},
       {var,746,'St'}]}]},
   {clause,747,
    [{tuple,747,
      [{atom,747,attribute},
       {var,747,'L'},
       {atom,747,opaque},
       {tuple,747,
        [{var,747,'TypeName'},{var,747,'TypeDef'},{var,747,'Args'}]}]},
     {var,747,'St'}],
    [],
    [{call,748,
      {atom,748,type_def},
      [{atom,748,opaque},
       {var,748,'L'},
       {var,748,'TypeName'},
       {var,748,'TypeDef'},
       {var,748,'Args'},
       {var,748,'St'}]}]},
   {clause,749,
    [{tuple,749,
      [{atom,749,attribute},
       {var,749,'L'},
       {atom,749,spec},
       {tuple,749,[{var,749,'Fun'},{var,749,'Types'}]}]},
     {var,749,'St'}],
    [],
    [{call,750,
      {atom,750,spec_decl},
      [{var,750,'L'},{var,750,'Fun'},{var,750,'Types'},{var,750,'St'}]}]},
   {clause,751,
    [{tuple,751,
      [{atom,751,attribute},
       {var,751,'L'},
       {atom,751,callback},
       {tuple,751,[{var,751,'Fun'},{var,751,'Types'}]}]},
     {var,751,'St'}],
    [],
    [{call,752,
      {atom,752,callback_decl},
      [{var,752,'L'},{var,752,'Fun'},{var,752,'Types'},{var,752,'St'}]}]},
   {clause,753,
    [{tuple,753,
      [{atom,753,attribute},
       {var,753,'L'},
       {atom,753,optional_callbacks},
       {var,753,'Es'}]},
     {var,753,'St'}],
    [],
    [{call,754,
      {atom,754,optional_callbacks},
      [{var,754,'L'},{var,754,'Es'},{var,754,'St'}]}]},
   {clause,755,
    [{tuple,755,
      [{atom,755,attribute},{var,755,'L'},{atom,755,on_load},{var,755,'Val'}]},
     {var,755,'St'}],
    [],
    [{call,756,
      {atom,756,on_load},
      [{var,756,'L'},{var,756,'Val'},{var,756,'St'}]}]},
   {clause,757,
    [{tuple,757,
      [{atom,757,attribute},
       {var,757,'_L'},
       {var,757,'_Other'},
       {var,757,'_Val'}]},
     {var,757,'St'}],
    [],
    [{var,758,'St'}]},
   {clause,759,
    [{var,759,'Form'},{var,759,'St'}],
    [],
    [{call,760,
      {atom,760,function_state},
      [{var,760,'Form'},
       {call,760,
        {remote,760,{atom,760,erlang},{atom,760,setelement}},
        [{integer,760,2},{var,760,'St'},{atom,760,function}]}]}]}]},
 {function,769,function_state,2,
  [{clause,769,
    [{tuple,769,
      [{atom,769,attribute},
       {var,769,'L'},
       {atom,769,record},
       {tuple,769,[{var,769,'Name'},{var,769,'Fields'}]}]},
     {var,769,'St'}],
    [],
    [{call,770,
      {atom,770,record_def},
      [{var,770,'L'},{var,770,'Name'},{var,770,'Fields'},{var,770,'St'}]}]},
   {clause,771,
    [{tuple,771,
      [{atom,771,attribute},
       {var,771,'L'},
       {atom,771,type},
       {tuple,771,
        [{var,771,'TypeName'},{var,771,'TypeDef'},{var,771,'Args'}]}]},
     {var,771,'St'}],
    [],
    [{call,772,
      {atom,772,type_def},
      [{atom,772,type},
       {var,772,'L'},
       {var,772,'TypeName'},
       {var,772,'TypeDef'},
       {var,772,'Args'},
       {var,772,'St'}]}]},
   {clause,773,
    [{tuple,773,
      [{atom,773,attribute},
       {var,773,'L'},
       {atom,773,opaque},
       {tuple,773,
        [{var,773,'TypeName'},{var,773,'TypeDef'},{var,773,'Args'}]}]},
     {var,773,'St'}],
    [],
    [{call,774,
      {atom,774,type_def},
      [{atom,774,opaque},
       {var,774,'L'},
       {var,774,'TypeName'},
       {var,774,'TypeDef'},
       {var,774,'Args'},
       {var,774,'St'}]}]},
   {clause,775,
    [{tuple,775,
      [{atom,775,attribute},
       {var,775,'L'},
       {atom,775,spec},
       {tuple,775,[{var,775,'Fun'},{var,775,'Types'}]}]},
     {var,775,'St'}],
    [],
    [{call,776,
      {atom,776,spec_decl},
      [{var,776,'L'},{var,776,'Fun'},{var,776,'Types'},{var,776,'St'}]}]},
   {clause,777,
    [{tuple,777,
      [{atom,777,attribute},
       {var,777,'_L'},
       {atom,777,dialyzer},
       {var,777,'_Val'}]},
     {var,777,'St'}],
    [],
    [{var,778,'St'}]},
   {clause,779,
    [{tuple,779,
      [{atom,779,attribute},{var,779,'La'},{var,779,'Attr'},{var,779,'_Val'}]},
     {var,779,'St'}],
    [],
    [{call,780,
      {atom,780,add_error},
      [{var,780,'La'},
       {tuple,780,[{atom,780,attribute},{var,780,'Attr'}]},
       {var,780,'St'}]}]},
   {clause,781,
    [{tuple,781,
      [{atom,781,function},
       {var,781,'L'},
       {var,781,'N'},
       {var,781,'A'},
       {var,781,'Cs'}]},
     {var,781,'St'}],
    [],
    [{call,782,
      {atom,782,function},
      [{var,782,'L'},
       {var,782,'N'},
       {var,782,'A'},
       {var,782,'Cs'},
       {var,782,'St'}]}]},
   {clause,783,
    [{tuple,783,[{atom,783,eof},{var,783,'L'}]},{var,783,'St'}],
    [],
    [{call,783,{atom,783,eof},[{var,783,'L'},{var,783,'St'}]}]}]},
 {function,788,eof,2,
  [{clause,788,[{var,788,'_Line'},{var,788,'St0'}],[],[{var,789,'St0'}]}]},
 {function,793,bif_clashes,2,
  [{clause,793,
    [{var,793,'Forms'},
     {match,793,
      {tuple,793,
       [{atom,793,lint},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'Nowarn'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'},
        {var,793,'_'}]},
      {var,793,'St'}}],
    [],
    [{match,794,
      {var,794,'Clashes0'},
      {lc,794,
       {tuple,794,[{var,794,'Name'},{var,794,'Arity'}]},
       [{generate,794,
         {tuple,794,
          [{atom,794,function},
           {var,794,'_L'},
           {var,794,'Name'},
           {var,794,'Arity'},
           {var,794,'_Cs'}]},
         {var,794,'Forms'}},
        {call,795,
         {remote,795,{atom,795,erl_internal},{atom,795,bif}},
         [{var,795,'Name'},{var,795,'Arity'}]}]}},
     {match,796,
      {var,796,'Clashes'},
      {call,796,
       {remote,796,{atom,796,ordsets},{atom,796,subtract}},
       [{call,796,
         {remote,796,{atom,796,ordsets},{atom,796,from_list}},
         [{var,796,'Clashes0'}]},
        {var,796,'Nowarn'}]}},
     {call,797,
      {remote,797,{atom,797,erlang},{atom,797,setelement}},
      [{integer,797,14},{var,797,'St'},{var,797,'Clashes'}]}]}]},
 {function,801,not_deprecated,2,
  [{clause,801,
    [{var,801,'Forms'},{var,801,'St0'}],
    [],
    [{match,803,
      {var,803,'MFAsL'},
      {lc,803,
       {tuple,803,[{var,803,'MFA'},{var,803,'L'}]},
       [{generate,804,
         {tuple,804,
          [{atom,804,attribute},
           {var,804,'L'},
           {atom,804,compile},
           {var,804,'Args'}]},
         {var,804,'Forms'}},
        {generate,805,
         {tuple,805,[{atom,805,nowarn_deprecated_function},{var,805,'MFAs0'}]},
         {call,805,
          {remote,805,{atom,805,lists},{atom,805,flatten}},
          [{cons,805,{var,805,'Args'},{nil,805}}]}},
        {generate,806,
         {var,806,'MFA'},
         {call,806,
          {remote,806,{atom,806,lists},{atom,806,flatten}},
          [{cons,806,{var,806,'MFAs0'},{nil,806}}]}}]}},
     {match,807,
      {var,807,'Nowarn'},
      {lc,807,
       {var,807,'MFA'},
       [{generate,807,
         {tuple,807,[{var,807,'MFA'},{var,807,'_L'}]},
         {var,807,'MFAsL'}}]}},
     {match,808,
      {var,808,'Bad'},
      {lc,808,
       {var,808,'MFAL'},
       [{generate,808,
         {match,808,
          {tuple,808,
           [{tuple,808,[{var,808,'M'},{var,808,'F'},{var,808,'A'}]},
            {var,808,'_L'}]},
          {var,808,'MFAL'}},
         {var,808,'MFAsL'}},
        {op,809,'=:=',
         {call,809,
          {remote,809,{atom,809,otp_internal},{atom,809,obsolete}},
          [{var,809,'M'},{var,809,'F'},{var,809,'A'}]},
         {atom,809,no}}]}},
     {match,810,
      {var,810,'St1'},
      {call,810,
       {atom,810,func_line_warning},
       [{atom,810,bad_nowarn_deprecated_function},
        {var,810,'Bad'},
        {var,810,'St0'}]}},
     {call,811,
      {remote,811,{atom,811,erlang},{atom,811,setelement}},
      [{integer,811,15},
       {var,811,'St1'},
       {call,811,
        {remote,811,{atom,811,ordsets},{atom,811,from_list}},
        [{var,811,'Nowarn'}]}]}]}]},
 {function,814,disallowed_compile_flags,2,
  [{clause,814,
    [{var,814,'Forms'},{var,814,'St0'}],
    [],
    [{match,816,
      {var,816,'Errors0'},
      {lc,816,
       {tuple,816,
        [{call,816,
          {remote,816,{atom,816,erlang},{atom,816,element}},
          [{integer,816,22},{var,816,'St0'}]},
         {tuple,816,
          [{var,816,'L'},
           {atom,816,erl_lint},
           {atom,816,disallowed_nowarn_bif_clash}]}]},
       [{generate,817,
         {tuple,817,
          [{atom,817,attribute},
           {var,817,'A'},
           {atom,817,compile},
           {atom,817,nowarn_bif_clash}]},
         {var,817,'Forms'}},
        {generate,818,
         {tuple,818,[{var,818,'_'},{var,818,'L'}]},
         {cons,818,
          {call,818,{atom,818,loc},[{var,818,'A'},{var,818,'St0'}]},
          {nil,818}}}]}},
     {match,819,
      {var,819,'Errors1'},
      {lc,819,
       {tuple,819,
        [{call,819,
          {remote,819,{atom,819,erlang},{atom,819,element}},
          [{integer,819,22},{var,819,'St0'}]},
         {tuple,819,
          [{var,819,'L'},
           {atom,819,erl_lint},
           {atom,819,disallowed_nowarn_bif_clash}]}]},
       [{generate,820,
         {tuple,820,
          [{atom,820,attribute},
           {var,820,'A'},
           {atom,820,compile},
           {tuple,820,
            [{atom,820,nowarn_bif_clash},
             {tuple,820,[{var,820,'_'},{var,820,'_'}]}]}]},
         {var,820,'Forms'}},
        {generate,821,
         {tuple,821,[{var,821,'_'},{var,821,'L'}]},
         {cons,821,
          {call,821,{atom,821,loc},[{var,821,'A'},{var,821,'St0'}]},
          {nil,821}}}]}},
     {match,822,
      {var,822,'Disabled'},
      {op,822,'not',
       {call,822,
        {atom,822,is_warn_enabled},
        [{atom,822,bif_clash},{var,822,'St0'}]}}},
     {match,823,
      {var,823,'Errors'},
      {'if',823,
       [{clause,824,[],
         [[{op,824,'andalso',
            {var,824,'Disabled'},
            {op,824,'=:=',{var,824,'Errors0'},{nil,824}}}]],
         [{cons,825,
           {tuple,825,
            [{call,825,
              {remote,825,{atom,825,erlang},{atom,825,element}},
              [{integer,825,22},{var,825,'St0'}]},
             {tuple,825,
              [{atom,825,erl_lint},{atom,825,disallowed_nowarn_bif_clash}]}]},
           {call,825,
            {remote,825,{atom,825,erlang},{atom,825,element}},
            [{integer,825,20},{var,825,'St0'}]}}]},
        {clause,826,[],
         [[{var,826,'Disabled'}]],
         [{op,827,'++',
           {var,827,'Errors0'},
           {op,827,'++',
            {var,827,'Errors1'},
            {call,827,
             {remote,827,{atom,827,erlang},{atom,827,element}},
             [{integer,827,20},{var,827,'St0'}]}}}]},
        {clause,828,[],
         [[{atom,828,true}]],
         [{op,829,'++',
           {var,829,'Errors1'},
           {call,829,
            {remote,829,{atom,829,erlang},{atom,829,element}},
            [{integer,829,20},{var,829,'St0'}]}}]}]}},
     {call,831,
      {remote,831,{atom,831,erlang},{atom,831,setelement}},
      [{integer,831,20},{var,831,'St0'},{var,831,'Errors'}]}]}]},
 {function,837,post_traversal_check,2,
  [{clause,837,
    [{var,837,'Forms'},{var,837,'St0'}],
    [],
    [{match,838,
      {var,838,'St1'},
      {call,838,{atom,838,check_behaviour},[{var,838,'St0'}]}},
     {match,839,
      {var,839,'St2'},
      {call,839,
       {atom,839,check_deprecated},
       [{var,839,'Forms'},{var,839,'St1'}]}},
     {match,840,
      {var,840,'St3'},
      {call,840,{atom,840,check_imports},[{var,840,'Forms'},{var,840,'St2'}]}},
     {match,841,
      {var,841,'St4'},
      {call,841,{atom,841,check_inlines},[{var,841,'Forms'},{var,841,'St3'}]}},
     {match,842,
      {var,842,'St5'},
      {call,842,{atom,842,check_undefined_functions},[{var,842,'St4'}]}},
     {match,843,
      {var,843,'St6'},
      {call,843,
       {atom,843,check_unused_functions},
       [{var,843,'Forms'},{var,843,'St5'}]}},
     {match,844,
      {var,844,'St7'},
      {call,844,
       {atom,844,check_bif_clashes},
       [{var,844,'Forms'},{var,844,'St6'}]}},
     {match,845,
      {var,845,'St8'},
      {call,845,{atom,845,check_specs_without_function},[{var,845,'St7'}]}},
     {match,846,
      {var,846,'St9'},
      {call,846,
       {atom,846,check_functions_without_spec},
       [{var,846,'Forms'},{var,846,'St8'}]}},
     {match,847,
      {var,847,'StA'},
      {call,847,{atom,847,check_undefined_types},[{var,847,'St9'}]}},
     {match,848,
      {var,848,'StB'},
      {call,848,
       {atom,848,check_unused_types},
       [{var,848,'Forms'},{var,848,'StA'}]}},
     {match,849,
      {var,849,'StC'},
      {call,849,
       {atom,849,check_untyped_records},
       [{var,849,'Forms'},{var,849,'StB'}]}},
     {match,850,
      {var,850,'StD'},
      {call,850,{atom,850,check_on_load},[{var,850,'StC'}]}},
     {match,851,
      {var,851,'StE'},
      {call,851,
       {atom,851,check_unused_records},
       [{var,851,'Forms'},{var,851,'StD'}]}},
     {match,852,
      {var,852,'StF'},
      {call,852,{atom,852,check_local_opaque_types},[{var,852,'StE'}]}},
     {call,853,{atom,853,check_callback_information},[{var,853,'StF'}]}]}]},
 {function,858,check_behaviour,1,
  [{clause,858,
    [{var,858,'St0'}],
    [],
    [{call,859,
      {atom,859,behaviour_check},
      [{call,859,
        {remote,859,{atom,859,erlang},{atom,859,element}},
        [{integer,859,4},{var,859,'St0'}]},
       {var,859,'St0'}]}]}]},
 {function,864,behaviour_check,2,
  [{clause,864,
    [{var,864,'Bs'},{var,864,'St0'}],
    [],
    [{match,865,
      {tuple,865,[{var,865,'AllBfs0'},{var,865,'St1'}]},
      {call,865,
       {atom,865,all_behaviour_callbacks},
       [{var,865,'Bs'},{nil,865},{var,865,'St0'}]}},
     {match,866,
      {var,866,'St'},
      {call,866,
       {atom,866,behaviour_missing_callbacks},
       [{var,866,'AllBfs0'},{var,866,'St1'}]}},
     {match,867,
      {var,867,'Exports'},
      {call,867,{atom,867,exports},[{var,867,'St0'}]}},
     {match,868,
      {var,868,'F'},
      {'fun',868,
       {clauses,
        [{clause,868,
          [{var,868,'Bfs'},{var,868,'OBfs'}],
          [],
          [{lc,869,
            {var,869,'B'},
            [{generate,869,{var,869,'B'},{var,869,'Bfs'}},
             {op,871,'orelse',
              {op,870,'not',
               {call,870,
                {remote,870,{atom,870,lists},{atom,870,member}},
                [{var,870,'B'},{var,870,'OBfs'}]}},
              {call,871,
               {remote,871,{atom,871,gb_sets},{atom,871,is_member}},
               [{var,871,'B'},{var,871,'Exports'}]}}]}]}]}}},
     {match,874,
      {var,874,'AllBfs'},
      {lc,874,
       {tuple,874,
        [{var,874,'Item'},
         {call,874,{var,874,'F'},[{var,874,'Bfs0'},{var,874,'OBfs0'}]}]},
       [{generate,874,
         {tuple,874,[{var,874,'Item'},{var,874,'Bfs0'},{var,874,'OBfs0'}]},
         {var,874,'AllBfs0'}}]}},
     {call,875,
      {atom,875,behaviour_conflicting},
      [{var,875,'AllBfs'},{var,875,'St'}]}]}]},
 {function,877,all_behaviour_callbacks,3,
  [{clause,877,
    [{cons,877,{tuple,877,[{var,877,'Line'},{var,877,'B'}]},{var,877,'Bs'}},
     {var,877,'Acc'},
     {var,877,'St0'}],
    [],
    [{match,878,
      {tuple,878,[{var,878,'Bfs0'},{var,878,'OBfs0'},{var,878,'St'}]},
      {call,878,
       {atom,878,behaviour_callbacks},
       [{var,878,'Line'},{var,878,'B'},{var,878,'St0'}]}},
     {call,879,
      {atom,879,all_behaviour_callbacks},
      [{var,879,'Bs'},
       {cons,879,
        {tuple,879,
         [{tuple,879,[{var,879,'Line'},{var,879,'B'}]},
          {var,879,'Bfs0'},
          {var,879,'OBfs0'}]},
        {var,879,'Acc'}},
       {var,879,'St'}]}]},
   {clause,880,
    [{nil,880},{var,880,'Acc'},{var,880,'St'}],
    [],
    [{tuple,880,
      [{call,880,{atom,880,reverse},[{var,880,'Acc'}]},{var,880,'St'}]}]}]},
 {function,882,behaviour_callbacks,3,
  [{clause,882,
    [{var,882,'Line'},{var,882,'B'},{var,882,'St0'}],
    [],
    [{'try',883,
      [{call,883,
        {remote,883,{var,883,'B'},{atom,883,behaviour_info}},
        [{atom,883,callbacks}]}],
      [{clause,884,
        [{atom,884,undefined}],
        [],
        [{match,885,
          {var,885,'St1'},
          {call,885,
           {atom,885,add_warning},
           [{var,885,'Line'},
            {tuple,885,
             [{atom,885,undefined_behaviour_callbacks},{var,885,'B'}]},
            {var,885,'St0'}]}},
         {tuple,886,[{nil,886},{nil,886},{var,886,'St1'}]}]},
       {clause,887,
        [{var,887,'Funcs'}],
        [],
        [{'case',888,
          {call,888,{atom,888,is_fa_list},[{var,888,'Funcs'}]},
          [{clause,889,
            [{atom,889,true}],
            [],
            [{'try',890,
              [{call,890,
                {remote,890,{var,890,'B'},{atom,890,behaviour_info}},
                [{atom,890,optional_callbacks}]}],
              [{clause,891,
                [{atom,891,undefined}],
                [],
                [{tuple,892,[{var,892,'Funcs'},{nil,892},{var,892,'St0'}]}]},
               {clause,893,
                [{var,893,'OptFuncs'}],
                [],
                [{'case',896,
                  {call,896,{atom,896,is_fa_list},[{var,896,'OptFuncs'}]},
                  [{clause,897,
                    [{atom,897,true}],
                    [],
                    [{tuple,898,
                      [{var,898,'Funcs'},
                       {var,898,'OptFuncs'},
                       {var,898,'St0'}]}]},
                   {clause,899,
                    [{atom,899,false}],
                    [],
                    [{match,900,
                      {var,900,'W'},
                      {tuple,900,
                       [{atom,900,ill_defined_optional_callbacks},
                        {var,900,'B'}]}},
                     {match,901,
                      {var,901,'St1'},
                      {call,901,
                       {atom,901,add_warning},
                       [{var,901,'Line'},{var,901,'W'},{var,901,'St0'}]}},
                     {tuple,902,
                      [{var,902,'Funcs'},{nil,902},{var,902,'St1'}]}]}]}]}],
              [{clause,905,
                [{tuple,905,[{var,905,'_'},{var,905,'_'},{var,905,'_'}]}],
                [],
                [{tuple,906,[{var,906,'Funcs'},{nil,906},{var,906,'St0'}]}]}],
              []}]},
           {clause,908,
            [{atom,908,false}],
            [],
            [{match,909,
              {var,909,'St1'},
              {call,909,
               {atom,909,add_warning},
               [{var,909,'Line'},
                {tuple,910,
                 [{atom,910,ill_defined_behaviour_callbacks},{var,910,'B'}]},
                {var,911,'St0'}]}},
             {tuple,912,[{nil,912},{nil,912},{var,912,'St1'}]}]}]}]}],
      [{clause,915,
        [{tuple,915,[{var,915,'_'},{var,915,'_'},{var,915,'_'}]}],
        [],
        [{match,916,
          {var,916,'St1'},
          {call,916,
           {atom,916,add_warning},
           [{var,916,'Line'},
            {tuple,916,[{atom,916,undefined_behaviour},{var,916,'B'}]},
            {var,916,'St0'}]}},
         {tuple,917,[{nil,917},{nil,917},{var,917,'St1'}]}]}],
      []}]}]},
 {function,920,behaviour_missing_callbacks,2,
  [{clause,920,
    [{cons,920,
      {tuple,920,
       [{tuple,920,[{var,920,'Line'},{var,920,'B'}]},
        {var,920,'Bfs0'},
        {var,920,'OBfs'}]},
      {var,920,'T'}},
     {var,920,'St0'}],
    [],
    [{match,921,
      {var,921,'Bfs'},
      {call,921,
       {remote,921,{atom,921,ordsets},{atom,921,subtract}},
       [{call,921,
         {remote,921,{atom,921,ordsets},{atom,921,from_list}},
         [{var,921,'Bfs0'}]},
        {call,921,
         {remote,921,{atom,921,ordsets},{atom,921,from_list}},
         [{var,921,'OBfs'}]}]}},
     {match,922,
      {var,922,'Exports'},
      {call,922,
       {remote,922,{atom,922,gb_sets},{atom,922,to_list}},
       [{call,922,{atom,922,exports},[{var,922,'St0'}]}]}},
     {match,923,
      {var,923,'Missing'},
      {call,923,
       {remote,923,{atom,923,ordsets},{atom,923,subtract}},
       [{var,923,'Bfs'},{var,923,'Exports'}]}},
     {match,924,
      {var,924,'St'},
      {call,924,
       {atom,924,foldl},
       [{'fun',924,
         {clauses,
          [{clause,924,
            [{var,924,'F'},{var,924,'S0'}],
            [],
            [{'case',925,
              {call,925,{atom,925,is_fa},[{var,925,'F'}]},
              [{clause,926,
                [{atom,926,true}],
                [],
                [{match,927,
                  {var,927,'M'},
                  {tuple,927,
                   [{atom,927,undefined_behaviour_func},
                    {var,927,'F'},
                    {var,927,'B'}]}},
                 {call,928,
                  {atom,928,add_warning},
                  [{var,928,'Line'},{var,928,'M'},{var,928,'S0'}]}]},
               {clause,929,[{atom,929,false}],[],[{var,930,'S0'}]}]}]}]}},
        {var,932,'St0'},
        {var,932,'Missing'}]}},
     {call,933,
      {atom,933,behaviour_missing_callbacks},
      [{var,933,'T'},{var,933,'St'}]}]},
   {clause,934,[{nil,934},{var,934,'St'}],[],[{var,934,'St'}]}]},
 {function,936,behaviour_conflicting,2,
  [{clause,936,
    [{var,936,'AllBfs'},{var,936,'St'}],
    [],
    [{match,937,
      {var,937,'R0'},
      {call,937,
       {remote,937,{atom,937,sofs},{atom,937,relation}},
       [{var,937,'AllBfs'},
        {cons,937,
         {tuple,937,
          [{atom,937,item},{cons,937,{atom,937,callback},{nil,937}}]},
         {nil,937}}]}},
     {match,938,
      {var,938,'R1'},
      {call,938,
       {remote,938,{atom,938,sofs},{atom,938,family_to_relation}},
       [{var,938,'R0'}]}},
     {match,939,
      {var,939,'R2'},
      {call,939,
       {remote,939,{atom,939,sofs},{atom,939,converse}},
       [{var,939,'R1'}]}},
     {match,940,
      {var,940,'R3'},
      {call,940,
       {remote,940,{atom,940,sofs},{atom,940,relation_to_family}},
       [{var,940,'R2'}]}},
     {match,941,
      {var,941,'R4'},
      {call,941,
       {remote,941,{atom,941,sofs},{atom,941,family_specification}},
       [{'fun',941,
         {clauses,
          [{clause,941,
            [{var,941,'S'}],
            [],
            [{op,941,'>',
              {call,941,
               {remote,941,{atom,941,sofs},{atom,941,no_elements}},
               [{var,941,'S'}]},
              {integer,941,1}}]}]}},
        {var,941,'R3'}]}},
     {match,942,
      {var,942,'R'},
      {call,942,
       {remote,942,{atom,942,sofs},{atom,942,to_external}},
       [{var,942,'R4'}]}},
     {call,943,
      {atom,943,behaviour_add_conflicts},
      [{var,943,'R'},{var,943,'St'}]}]}]},
 {function,945,behaviour_add_conflicts,2,
  [{clause,945,
    [{cons,945,
      {tuple,945,
       [{var,945,'Cb'},
        {cons,945,
         {tuple,945,[{var,945,'FirstLoc'},{var,945,'FirstB'}]},
         {var,945,'Cs'}}]},
      {var,945,'T'}},
     {var,945,'St0'}],
    [],
    [{match,946,
      {var,946,'FirstL'},
      {call,946,
       {atom,946,element},
       [{integer,946,2},
        {call,946,{atom,946,loc},[{var,946,'FirstLoc'},{var,946,'St0'}]}]}},
     {match,947,
      {var,947,'St'},
      {call,947,
       {atom,947,behaviour_add_conflict},
       [{var,947,'Cs'},
        {var,947,'Cb'},
        {var,947,'FirstL'},
        {var,947,'FirstB'},
        {var,947,'St0'}]}},
     {call,948,
      {atom,948,behaviour_add_conflicts},
      [{var,948,'T'},{var,948,'St'}]}]},
   {clause,949,[{nil,949},{var,949,'St'}],[],[{var,949,'St'}]}]},
 {function,951,behaviour_add_conflict,5,
  [{clause,951,
    [{cons,951,{tuple,951,[{var,951,'Line'},{var,951,'B'}]},{var,951,'Cs'}},
     {var,951,'Cb'},
     {var,951,'FirstL'},
     {var,951,'FirstB'},
     {var,951,'St0'}],
    [],
    [{match,952,
      {var,952,'St'},
      {call,952,
       {atom,952,add_warning},
       [{var,952,'Line'},
        {tuple,952,
         [{atom,952,conflicting_behaviours},
          {var,952,'Cb'},
          {var,952,'B'},
          {var,952,'FirstL'},
          {var,952,'FirstB'}]},
        {var,952,'St0'}]}},
     {call,953,
      {atom,953,behaviour_add_conflict},
      [{var,953,'Cs'},
       {var,953,'Cb'},
       {var,953,'FirstL'},
       {var,953,'FirstB'},
       {var,953,'St'}]}]},
   {clause,954,
    [{nil,954},{var,954,'_'},{var,954,'_'},{var,954,'_'},{var,954,'St'}],
    [],
    [{var,954,'St'}]}]},
 {function,958,check_deprecated,2,
  [{clause,958,
    [{var,958,'Forms'},{var,958,'St0'}],
    [],
    [{match,960,
      {var,960,'Exports'},
      {'case',960,
       {call,960,
        {atom,960,member},
        [{atom,960,export_all},
         {call,960,
          {remote,960,{atom,960,erlang},{atom,960,element}},
          [{integer,960,7},{var,960,'St0'}]}]},
       [{clause,961,
         [{atom,961,true}],
         [],
         [{call,961,
           {remote,961,{atom,961,erlang},{atom,961,element}},
           [{integer,961,11},{var,961,'St0'}]}]},
        {clause,962,
         [{atom,962,false}],
         [],
         [{call,962,
           {remote,962,{atom,962,erlang},{atom,962,element}},
           [{integer,962,5},{var,962,'St0'}]}]}]}},
     {match,964,
      {var,964,'X'},
      {call,964,
       {remote,964,{atom,964,gb_sets},{atom,964,to_list}},
       [{var,964,'Exports'}]}},
     {match,965,
      {tuple,965,
       [{atom,965,lint},
        {var,965,'_'},
        {var,965,'Mod'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'},
        {var,965,'_'}]},
      {var,965,'St0'}},
     {match,966,
      {var,966,'Bad'},
      {lc,966,
       {tuple,966,[{var,966,'E'},{var,966,'L'}]},
       [{generate,966,
         {tuple,966,
          [{atom,966,attribute},
           {var,966,'L'},
           {atom,966,deprecated},
           {var,966,'Depr'}]},
         {var,966,'Forms'}},
        {generate,967,
         {var,967,'D'},
         {call,967,
          {remote,967,{atom,967,lists},{atom,967,flatten}},
          [{cons,967,{var,967,'Depr'},{nil,967}}]}},
        {generate,968,
         {var,968,'E'},
         {call,968,
          {atom,968,depr_cat},
          [{var,968,'D'},{var,968,'X'},{var,968,'Mod'}]}}]}},
     {call,969,
      {atom,969,foldl},
      [{'fun',969,
        {clauses,
         [{clause,969,
           [{tuple,969,[{var,969,'E'},{var,969,'L'}]},{var,969,'St1'}],
           [],
           [{call,970,
             {atom,970,add_error},
             [{var,970,'L'},{var,970,'E'},{var,970,'St1'}]}]}]}},
       {var,971,'St0'},
       {var,971,'Bad'}]}]}]},
 {function,973,depr_cat,3,
  [{clause,973,
    [{match,973,
      {tuple,973,[{var,973,'F'},{var,973,'A'},{var,973,'Flg'}]},
      {var,973,'D'}},
     {var,973,'X'},
     {var,973,'Mod'}],
    [],
    [{'case',974,
      {call,974,{atom,974,deprecated_flag},[{var,974,'Flg'}]},
      [{clause,975,
        [{atom,975,false}],
        [],
        [{cons,975,
          {tuple,975,[{atom,975,invalid_deprecated},{var,975,'D'}]},
          {nil,975}}]},
       {clause,976,
        [{atom,976,true}],
        [],
        [{call,976,
          {atom,976,depr_fa},
          [{var,976,'F'},{var,976,'A'},{var,976,'X'},{var,976,'Mod'}]}]}]}]},
   {clause,978,
    [{tuple,978,[{var,978,'F'},{var,978,'A'}]},{var,978,'X'},{var,978,'Mod'}],
    [],
    [{call,979,
      {atom,979,depr_fa},
      [{var,979,'F'},{var,979,'A'},{var,979,'X'},{var,979,'Mod'}]}]},
   {clause,980,
    [{atom,980,module},{var,980,'_X'},{var,980,'_Mod'}],
    [],
    [{nil,981}]},
   {clause,982,
    [{var,982,'D'},{var,982,'_X'},{var,982,'_Mod'}],
    [],
    [{cons,983,
      {tuple,983,[{atom,983,invalid_deprecated},{var,983,'D'}]},
      {nil,983}}]}]},
 {function,985,depr_fa,4,
  [{clause,985,
    [{atom,985,'_'},{atom,985,'_'},{var,985,'_X'},{var,985,'_Mod'}],
    [],
    [{nil,986}]},
   {clause,987,
    [{var,987,'F'},{atom,987,'_'},{var,987,'X'},{var,987,'_Mod'}],
    [[{call,987,{atom,987,is_atom},[{var,987,'F'}]}]],
    [{'case',989,
      {call,989,
       {remote,989,{atom,989,lists},{atom,989,filter}},
       [{'fun',989,
         {clauses,
          [{clause,989,
            [{tuple,989,[{var,989,'F1'},{var,989,'_'}]}],
            [],
            [{op,989,'=:=',{var,989,'F1'},{var,989,'F'}}]}]}},
        {var,989,'X'}]},
      [{clause,990,
        [{nil,990}],
        [],
        [{cons,990,
          {tuple,990,
           [{atom,990,bad_deprecated},
            {tuple,990,[{var,990,'F'},{atom,990,'_'}]}]},
          {nil,990}}]},
       {clause,991,[{var,991,'_'}],[],[{nil,991}]}]}]},
   {clause,993,
    [{var,993,'F'},{var,993,'A'},{var,993,'X'},{var,993,'Mod'}],
    [[{call,993,{atom,993,is_atom},[{var,993,'F'}]},
      {call,993,{atom,993,is_integer},[{var,993,'A'}]},
      {op,993,'>=',{var,993,'A'},{integer,993,0}}]],
    [{'case',994,
      {call,994,
       {remote,994,{atom,994,lists},{atom,994,member}},
       [{tuple,994,[{var,994,'F'},{var,994,'A'}]},{var,994,'X'}]},
      [{clause,995,[{atom,995,true}],[],[{nil,995}]},
       {clause,996,
        [{atom,996,false}],
        [],
        [{'case',997,
          {call,997,
           {remote,997,{atom,997,erlang},{atom,997,is_builtin}},
           [{var,997,'Mod'},{var,997,'F'},{var,997,'A'}]},
          [{clause,998,[{atom,998,true}],[],[{nil,998}]},
           {clause,999,
            [{atom,999,false}],
            [],
            [{cons,999,
              {tuple,999,
               [{atom,999,bad_deprecated},
                {tuple,999,[{var,999,'F'},{var,999,'A'}]}]},
              {nil,999}}]}]}]}]}]},
   {clause,1002,
    [{var,1002,'F'},{var,1002,'A'},{var,1002,'_X'},{var,1002,'_Mod'}],
    [],
    [{cons,1003,
      {tuple,1003,
       [{atom,1003,invalid_deprecated},
        {tuple,1003,[{var,1003,'F'},{var,1003,'A'}]}]},
      {nil,1003}}]}]},
 {function,1005,deprecated_flag,1,
  [{clause,1005,[{atom,1005,next_version}],[],[{atom,1005,true}]},
   {clause,1006,[{atom,1006,next_major_release}],[],[{atom,1006,true}]},
   {clause,1007,[{atom,1007,eventually}],[],[{atom,1007,true}]},
   {clause,1008,[{var,1008,'_'}],[],[{atom,1008,false}]}]},
 {function,1012,check_imports,2,
  [{clause,1012,
    [{var,1012,'Forms'},{var,1012,'St0'}],
    [],
    [{'case',1013,
      {call,1013,
       {atom,1013,is_warn_enabled},
       [{atom,1013,unused_import},{var,1013,'St0'}]},
      [{clause,1014,[{atom,1014,false}],[],[{var,1015,'St0'}]},
       {clause,1016,
        [{atom,1016,true}],
        [],
        [{match,1017,
          {var,1017,'Usage'},
          {call,1017,
           {remote,1017,{atom,1017,erlang},{atom,1017,element}},
           [{integer,1017,26},{var,1017,'St0'}]}},
         {match,1018,
          {var,1018,'Unused'},
          {call,1018,
           {remote,1018,{atom,1018,ordsets},{atom,1018,subtract}},
           [{call,1018,
             {remote,1018,{atom,1018,erlang},{atom,1018,element}},
             [{integer,1018,6},{var,1018,'St0'}]},
            {call,1018,
             {remote,1018,{atom,1018,erlang},{atom,1018,element}},
             [{integer,1018,3},{var,1018,'Usage'}]}]}},
         {match,1019,
          {var,1019,'Imports'},
          {lc,1019,
           {tuple,1019,
            [{tuple,1019,[{var,1019,'FA'},{var,1019,'Mod'}]},{var,1019,'L'}]},
           [{generate,1020,
             {tuple,1020,
              [{atom,1020,attribute},
               {var,1020,'L'},
               {atom,1020,import},
               {tuple,1020,[{var,1020,'Mod'},{var,1020,'Fs'}]}]},
             {var,1020,'Forms'}},
            {generate,1021,
             {var,1021,'FA'},
             {call,1021,
              {remote,1021,{atom,1021,lists},{atom,1021,usort}},
              [{var,1021,'Fs'}]}}]}},
         {match,1022,
          {var,1022,'Bad'},
          {lc,1022,
           {tuple,1022,[{var,1022,'FM'},{var,1022,'L'}]},
           [{generate,1022,{var,1022,'FM'},{var,1022,'Unused'}},
            {generate,1022,
             {tuple,1022,[{var,1022,'FM2'},{var,1022,'L'}]},
             {var,1022,'Imports'}},
            {op,1022,'=:=',{var,1022,'FM'},{var,1022,'FM2'}}]}},
         {call,1023,
          {atom,1023,func_line_warning},
          [{atom,1023,unused_import},
           {var,1023,'Bad'},
           {var,1023,'St0'}]}]}]}]}]},
 {function,1028,check_inlines,2,
  [{clause,1028,
    [{var,1028,'Forms'},{var,1028,'St0'}],
    [],
    [{call,1029,
      {atom,1029,check_option_functions},
      [{var,1029,'Forms'},
       {atom,1029,inline},
       {atom,1029,bad_inline},
       {var,1029,'St0'}]}]}]},
 {function,1033,check_unused_functions,2,
  [{clause,1033,
    [{var,1033,'Forms'},{var,1033,'St0'}],
    [],
    [{match,1034,
      {var,1034,'St1'},
      {call,1034,
       {atom,1034,check_option_functions},
       [{var,1034,'Forms'},
        {atom,1034,nowarn_unused_function},
        {atom,1035,bad_nowarn_unused_function},
        {var,1035,'St0'}]}},
     {match,1036,
      {var,1036,'Opts'},
      {call,1036,
       {remote,1036,{atom,1036,erlang},{atom,1036,element}},
       [{integer,1036,7},{var,1036,'St1'}]}},
     {'case',1037,
      {op,1037,'orelse',
       {call,1037,
        {atom,1037,member},
        [{atom,1037,export_all},{var,1037,'Opts'}]},
       {op,1038,'not',
        {call,1038,
         {atom,1038,is_warn_enabled},
         [{atom,1038,unused_function},{var,1038,'St1'}]}}},
      [{clause,1039,[{atom,1039,true}],[],[{var,1040,'St1'}]},
       {clause,1041,
        [{atom,1041,false}],
        [],
        [{match,1042,
          {var,1042,'Nowarn'},
          {call,1042,
           {atom,1042,nowarn_function},
           [{atom,1042,nowarn_unused_function},{var,1042,'Opts'}]}},
         {match,1043,
          {var,1043,'Usage'},
          {call,1043,
           {remote,1043,{atom,1043,erlang},{atom,1043,element}},
           [{integer,1043,26},{var,1043,'St1'}]}},
         {match,1044,
          {var,1044,'Used'},
          {call,1044,
           {atom,1044,reached_functions},
           [{call,1044,{atom,1044,initially_reached},[{var,1044,'St1'}]},
            {call,1045,
             {remote,1045,{atom,1045,erlang},{atom,1045,element}},
             [{integer,1045,2},{var,1045,'Usage'}]}]}},
         {match,1046,
          {var,1046,'UsedOrNowarn'},
          {call,1046,
           {remote,1046,{atom,1046,ordsets},{atom,1046,union}},
           [{var,1046,'Used'},{var,1046,'Nowarn'}]}},
         {match,1047,
          {var,1047,'Unused'},
          {call,1047,
           {remote,1047,{atom,1047,ordsets},{atom,1047,subtract}},
           [{call,1047,
             {remote,1047,{atom,1047,gb_sets},{atom,1047,to_list}},
             [{call,1047,
               {remote,1047,{atom,1047,erlang},{atom,1047,element}},
               [{integer,1047,11},{var,1047,'St1'}]}]},
            {var,1048,'UsedOrNowarn'}]}},
         {match,1049,
          {var,1049,'Functions'},
          {lc,1049,
           {tuple,1049,
            [{tuple,1049,[{var,1049,'N'},{var,1049,'A'}]},{var,1049,'L'}]},
           [{generate,1049,
             {tuple,1049,
              [{atom,1049,function},
               {var,1049,'L'},
               {var,1049,'N'},
               {var,1049,'A'},
               {var,1049,'_'}]},
             {var,1049,'Forms'}}]}},
         {match,1050,
          {var,1050,'Bad'},
          {lc,1050,
           {tuple,1050,[{var,1050,'FA'},{var,1050,'L'}]},
           [{generate,1050,{var,1050,'FA'},{var,1050,'Unused'}},
            {generate,1050,
             {tuple,1050,[{var,1050,'FA2'},{var,1050,'L'}]},
             {var,1050,'Functions'}},
            {op,1050,'=:=',{var,1050,'FA'},{var,1050,'FA2'}}]}},
         {call,1051,
          {atom,1051,func_line_warning},
          [{atom,1051,unused_function},
           {var,1051,'Bad'},
           {var,1051,'St1'}]}]}]}]}]},
 {function,1054,initially_reached,1,
  [{clause,1054,
    [{tuple,1054,
      [{atom,1054,lint},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'Exp'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'OnLoad'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'},
       {var,1054,'_'}]}],
    [],
    [{op,1055,'++',
      {var,1055,'OnLoad'},
      {call,1055,
       {remote,1055,{atom,1055,gb_sets},{atom,1055,to_list}},
       [{var,1055,'Exp'}]}}]}]},
 {function,1060,reached_functions,2,
  [{clause,1060,
    [{var,1060,'Root'},{var,1060,'Ref'}],
    [],
    [{call,1061,
      {atom,1061,reached_functions},
      [{var,1061,'Root'},
       {nil,1061},
       {var,1061,'Ref'},
       {call,1061,
        {remote,1061,{atom,1061,gb_sets},{atom,1061,empty}},
        []}]}]}]},
 {function,1063,reached_functions,4,
  [{clause,1063,
    [{cons,1063,{var,1063,'R'},{var,1063,'Rs'}},
     {var,1063,'More0'},
     {var,1063,'Ref'},
     {var,1063,'Reached0'}],
    [],
    [{'case',1064,
      {call,1064,
       {remote,1064,{atom,1064,gb_sets},{atom,1064,is_element}},
       [{var,1064,'R'},{var,1064,'Reached0'}]},
      [{clause,1065,
        [{atom,1065,true}],
        [],
        [{call,1065,
          {atom,1065,reached_functions},
          [{var,1065,'Rs'},
           {var,1065,'More0'},
           {var,1065,'Ref'},
           {var,1065,'Reached0'}]}]},
       {clause,1066,
        [{atom,1066,false}],
        [],
        [{match,1067,
          {var,1067,'Reached'},
          {call,1067,
           {remote,1067,{atom,1067,gb_sets},{atom,1067,add_element}},
           [{var,1067,'R'},{var,1067,'Reached0'}]}},
         {'case',1068,
          {call,1068,
           {remote,1068,{atom,1068,dict},{atom,1068,find}},
           [{var,1068,'R'},{var,1068,'Ref'}]},
          [{clause,1069,
            [{tuple,1069,[{atom,1069,ok},{var,1069,'More'}]}],
            [],
            [{call,1069,
              {atom,1069,reached_functions},
              [{var,1069,'Rs'},
               {cons,1069,{var,1069,'More'},{var,1069,'More0'}},
               {var,1069,'Ref'},
               {var,1069,'Reached'}]}]},
           {clause,1070,
            [{atom,1070,error}],
            [],
            [{call,1070,
              {atom,1070,reached_functions},
              [{var,1070,'Rs'},
               {var,1070,'More0'},
               {var,1070,'Ref'},
               {var,1070,'Reached'}]}]}]}]}]}]},
   {clause,1073,
    [{nil,1073},
     {match,1073,{cons,1073,{var,1073,'_'},{var,1073,'_'}},{var,1073,'More'}},
     {var,1073,'Ref'},
     {var,1073,'Reached'}],
    [],
    [{call,1074,
      {atom,1074,reached_functions},
      [{call,1074,
        {remote,1074,{atom,1074,lists},{atom,1074,append}},
        [{var,1074,'More'}]},
       {nil,1074},
       {var,1074,'Ref'},
       {var,1074,'Reached'}]}]},
   {clause,1075,
    [{nil,1075},{nil,1075},{var,1075,'_Ref'},{var,1075,'Reached'}],
    [],
    [{call,1075,
      {remote,1075,{atom,1075,gb_sets},{atom,1075,to_list}},
      [{var,1075,'Reached'}]}]}]},
 {function,1079,check_undefined_functions,1,
  [{clause,1079,
    [{match,1079,
      {tuple,1079,
       [{atom,1079,lint},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'Def0'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'Called0'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'},
        {var,1079,'_'}]},
      {var,1079,'St0'}}],
    [],
    [{match,1080,
      {var,1080,'Called'},
      {call,1080,
       {remote,1080,{atom,1080,sofs},{atom,1080,relation}},
       [{var,1080,'Called0'},
        {cons,1080,
         {tuple,1080,[{atom,1080,func},{atom,1080,location}]},
         {nil,1080}}]}},
     {match,1081,
      {var,1081,'Def'},
      {call,1081,
       {remote,1081,{atom,1081,sofs},{atom,1081,from_external}},
       [{call,1081,
         {remote,1081,{atom,1081,gb_sets},{atom,1081,to_list}},
         [{var,1081,'Def0'}]},
        {cons,1081,{atom,1081,func},{nil,1081}}]}},
     {match,1082,
      {var,1082,'Undef'},
      {call,1082,
       {remote,1082,{atom,1082,sofs},{atom,1082,to_external}},
       [{call,1082,
         {remote,1082,{atom,1082,sofs},{atom,1082,drestriction}},
         [{var,1082,'Called'},{var,1082,'Def'}]}]}},
     {call,1083,
      {atom,1083,foldl},
      [{'fun',1083,
        {clauses,
         [{clause,1083,
           [{tuple,1083,[{var,1083,'NA'},{var,1083,'L'}]},{var,1083,'St'}],
           [],
           [{call,1084,
             {atom,1084,add_error},
             [{var,1084,'L'},
              {tuple,1084,[{atom,1084,undefined_function},{var,1084,'NA'}]},
              {var,1084,'St'}]}]}]}},
       {var,1085,'St0'},
       {var,1085,'Undef'}]}]}]},
 {function,1089,check_undefined_types,1,
  [{clause,1089,
    [{match,1089,
      {tuple,1089,
       [{atom,1089,lint},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'Usage'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'_'},
        {var,1089,'Def'},
        {var,1089,'_'}]},
      {var,1089,'St0'}}],
    [],
    [{match,1090,
      {var,1090,'Used'},
      {call,1090,
       {remote,1090,{atom,1090,erlang},{atom,1090,element}},
       [{integer,1090,5},{var,1090,'Usage'}]}},
     {match,1091,
      {var,1091,'UTAs'},
      {call,1091,
       {remote,1091,{atom,1091,dict},{atom,1091,fetch_keys}},
       [{var,1091,'Used'}]}},
     {match,1092,
      {var,1092,'Undef'},
      {lc,1092,
       {tuple,1092,
        [{var,1092,'TA'},
         {call,1092,
          {remote,1092,{atom,1092,dict},{atom,1092,fetch}},
          [{var,1092,'TA'},{var,1092,'Used'}]}]},
       [{generate,1093,{var,1093,'TA'},{var,1093,'UTAs'}},
        {op,1094,'not',
         {call,1094,
          {remote,1094,{atom,1094,dict},{atom,1094,is_key}},
          [{var,1094,'TA'},{var,1094,'Def'}]}},
        {op,1095,'not',
         {call,1095,{atom,1095,is_default_type},[{var,1095,'TA'}]}}]}},
     {call,1096,
      {atom,1096,foldl},
      [{'fun',1096,
        {clauses,
         [{clause,1096,
           [{tuple,1096,[{var,1096,'TA'},{var,1096,'L'}]},{var,1096,'St'}],
           [],
           [{call,1097,
             {atom,1097,add_error},
             [{var,1097,'L'},
              {tuple,1097,[{atom,1097,undefined_type},{var,1097,'TA'}]},
              {var,1097,'St'}]}]}]}},
       {var,1098,'St0'},
       {var,1098,'Undef'}]}]}]},
 {function,1102,check_bif_clashes,2,
  [{clause,1102,
    [{var,1102,'Forms'},{var,1102,'St0'}],
    [],
    [{call,1104,
      {atom,1104,check_option_functions},
      [{var,1104,'Forms'},
       {atom,1104,nowarn_bif_clash},
       {atom,1105,bad_nowarn_bif_clash},
       {var,1105,'St0'}]}]}]},
 {function,1107,check_option_functions,4,
  [{clause,1107,
    [{var,1107,'Forms'},{var,1107,'Tag0'},{var,1107,'Type'},{var,1107,'St0'}],
    [],
    [{match,1109,
      {var,1109,'FAsL'},
      {lc,1109,
       {tuple,1109,[{var,1109,'FA'},{var,1109,'L'}]},
       [{generate,1109,
         {tuple,1109,
          [{atom,1109,attribute},
           {var,1109,'L'},
           {atom,1109,compile},
           {var,1109,'Args'}]},
         {var,1109,'Forms'}},
        {generate,1110,
         {tuple,1110,[{var,1110,'Tag'},{var,1110,'FAs0'}]},
         {call,1110,
          {remote,1110,{atom,1110,lists},{atom,1110,flatten}},
          [{cons,1110,{var,1110,'Args'},{nil,1110}}]}},
        {op,1111,'=:=',{var,1111,'Tag0'},{var,1111,'Tag'}},
        {generate,1112,
         {var,1112,'FA'},
         {call,1112,
          {remote,1112,{atom,1112,lists},{atom,1112,flatten}},
          [{cons,1112,{var,1112,'FAs0'},{nil,1112}}]}}]}},
     {match,1113,
      {var,1113,'DefFunctions'},
      {op,1113,'++',
       {op,1113,'--',
        {call,1113,
         {remote,1113,{atom,1113,gb_sets},{atom,1113,to_list}},
         [{call,1113,
           {remote,1113,{atom,1113,erlang},{atom,1113,element}},
           [{integer,1113,11},{var,1113,'St0'}]}]},
        {call,1113,{atom,1113,pseudolocals},[]}},
       {lc,1114,
        {tuple,1114,[{var,1114,'F'},{var,1114,'A'}]},
        [{generate,1114,
          {tuple,1114,
           [{tuple,1114,[{var,1114,'F'},{var,1114,'A'}]},{var,1114,'_'}]},
          {call,1114,
           {remote,1114,{atom,1114,orddict},{atom,1114,to_list}},
           [{call,1114,
             {remote,1114,{atom,1114,erlang},{atom,1114,element}},
             [{integer,1114,6},{var,1114,'St0'}]}]}}]}}},
     {match,1115,
      {var,1115,'Bad'},
      {lc,1115,
       {tuple,1115,[{var,1115,'FA'},{var,1115,'L'}]},
       [{generate,1115,
         {tuple,1115,[{var,1115,'FA'},{var,1115,'L'}]},
         {var,1115,'FAsL'}},
        {op,1115,'not',
         {call,1115,
          {atom,1115,member},
          [{var,1115,'FA'},{var,1115,'DefFunctions'}]}}]}},
     {call,1116,
      {atom,1116,func_line_error},
      [{var,1116,'Type'},{var,1116,'Bad'},{var,1116,'St0'}]}]}]},
 {function,1118,nowarn_function,2,
  [{clause,1118,
    [{var,1118,'Tag'},{var,1118,'Opts'}],
    [],
    [{call,1119,
      {remote,1119,{atom,1119,ordsets},{atom,1119,from_list}},
      [{lc,1119,
        {var,1119,'FA'},
        [{generate,1119,
          {tuple,1119,[{var,1119,'Tag1'},{var,1119,'FAs'}]},
          {var,1119,'Opts'}},
         {op,1120,'=:=',{var,1120,'Tag1'},{var,1120,'Tag'}},
         {generate,1121,
          {var,1121,'FA'},
          {call,1121,
           {remote,1121,{atom,1121,lists},{atom,1121,flatten}},
           [{cons,1121,{var,1121,'FAs'},{nil,1121}}]}}]}]}]}]},
 {function,1123,func_line_warning,3,
  [{clause,1123,
    [{var,1123,'Type'},{var,1123,'Fs'},{var,1123,'St'}],
    [],
    [{call,1124,
      {atom,1124,foldl},
      [{'fun',1124,
        {clauses,
         [{clause,1124,
           [{tuple,1124,[{var,1124,'F'},{var,1124,'Line'}]},{var,1124,'St0'}],
           [],
           [{call,1124,
             {atom,1124,add_warning},
             [{var,1124,'Line'},
              {tuple,1124,[{var,1124,'Type'},{var,1124,'F'}]},
              {var,1124,'St0'}]}]}]}},
       {var,1124,'St'},
       {var,1124,'Fs'}]}]}]},
 {function,1126,func_line_error,3,
  [{clause,1126,
    [{var,1126,'Type'},{var,1126,'Fs'},{var,1126,'St'}],
    [],
    [{call,1127,
      {atom,1127,foldl},
      [{'fun',1127,
        {clauses,
         [{clause,1127,
           [{tuple,1127,[{var,1127,'F'},{var,1127,'Line'}]},{var,1127,'St0'}],
           [],
           [{call,1127,
             {atom,1127,add_error},
             [{var,1127,'Line'},
              {tuple,1127,[{var,1127,'Type'},{var,1127,'F'}]},
              {var,1127,'St0'}]}]}]}},
       {var,1127,'St'},
       {var,1127,'Fs'}]}]}]},
 {function,1129,check_untyped_records,2,
  [{clause,1129,
    [{var,1129,'Forms'},{var,1129,'St0'}],
    [],
    [{'case',1130,
      {call,1130,
       {atom,1130,is_warn_enabled},
       [{atom,1130,untyped_record},{var,1130,'St0'}]},
      [{clause,1131,
        [{atom,1131,true}],
        [],
        [{match,1133,
          {var,1133,'RecNames'},
          {call,1133,
           {remote,1133,{atom,1133,dict},{atom,1133,fetch_keys}},
           [{call,1133,
             {remote,1133,{atom,1133,erlang},{atom,1133,element}},
             [{integer,1133,8},{var,1133,'St0'}]}]}},
         {match,1135,
          {var,1135,'TRecNames'},
          {lc,1135,
           {var,1135,'Name'},
           [{generate,1136,
             {tuple,1136,
              [{atom,1136,attribute},
               {var,1136,'_'},
               {atom,1136,type},
               {tuple,1136,
                [{tuple,1136,[{atom,1136,record},{var,1136,'Name'}]},
                 {var,1136,'Fields'},
                 {var,1136,'_'}]}]},
             {var,1136,'Forms'}},
            {call,1137,
             {remote,1137,{atom,1137,lists},{atom,1137,all}},
             [{'fun',1137,
               {clauses,
                [{clause,1137,
                  [{tuple,1137,
                    [{atom,1137,typed_record_field},
                     {var,1137,'_'},
                     {var,1137,'_'}]}],
                  [],
                  [{atom,1137,true}]},
                 {clause,1138,[{var,1138,'_'}],[],[{atom,1138,false}]}]}},
              {var,1139,'Fields'}]}]}},
         {call,1140,
          {atom,1140,foldl},
          [{'fun',1140,
            {clauses,
             [{clause,1140,
               [{var,1140,'N'},{var,1140,'St'}],
               [],
               [{match,1141,
                 {tuple,1141,[{var,1141,'L'},{var,1141,'Fields'}]},
                 {call,1141,
                  {remote,1141,{atom,1141,dict},{atom,1141,fetch}},
                  [{var,1141,'N'},
                   {call,1141,
                    {remote,1141,{atom,1141,erlang},{atom,1141,element}},
                    [{integer,1141,8},{var,1141,'St0'}]}]}},
                {'case',1142,
                 {var,1142,'Fields'},
                 [{clause,1143,[{nil,1143}],[],[{var,1143,'St'}]},
                  {clause,1144,
                   [{cons,1144,{var,1144,'_'},{var,1144,'_'}}],
                   [],
                   [{call,1144,
                     {atom,1144,add_warning},
                     [{var,1144,'L'},
                      {tuple,1144,[{atom,1144,untyped_record},{var,1144,'N'}]},
                      {var,1144,'St'}]}]}]}]}]}},
           {var,1146,'St0'},
           {op,1146,'--',{var,1146,'RecNames'},{var,1146,'TRecNames'}}]}]},
       {clause,1147,[{atom,1147,false}],[],[{var,1148,'St0'}]}]}]}]},
 {function,1151,check_unused_records,2,
  [{clause,1151,
    [{var,1151,'Forms'},{var,1151,'St0'}],
    [],
    [{match,1152,
      {var,1152,'AttrFiles'},
      {lc,1152,
       {var,1152,'File'},
       [{generate,1152,
         {tuple,1152,
          [{atom,1152,attribute},
           {var,1152,'_L'},
           {atom,1152,file},
           {tuple,1152,[{var,1152,'File'},{var,1152,'_Line'}]}]},
         {var,1152,'Forms'}}]}},
     {'case',1153,
      {tuple,1153,
       [{call,1153,
         {atom,1153,is_warn_enabled},
         [{atom,1153,unused_record},{var,1153,'St0'}]},
        {var,1153,'AttrFiles'}]},
      [{clause,1154,
        [{tuple,1154,
          [{atom,1154,true},
           {cons,1154,{var,1154,'FirstFile'},{var,1154,'_'}}]}],
        [],
        [{match,1157,
          {var,1157,'Usage'},
          {call,1157,
           {remote,1157,{atom,1157,erlang},{atom,1157,element}},
           [{integer,1157,26},{var,1157,'St0'}]}},
         {match,1158,
          {var,1158,'UsedRecords'},
          {call,1158,
           {remote,1158,{atom,1158,sets},{atom,1158,to_list}},
           [{call,1158,
             {remote,1158,{atom,1158,erlang},{atom,1158,element}},
             [{integer,1158,4},{var,1158,'Usage'}]}]}},
         {match,1159,
          {var,1159,'URecs'},
          {call,1159,
           {atom,1159,foldl},
           [{'fun',1159,
             {clauses,
              [{clause,1159,
                [{var,1159,'Used'},{var,1159,'Recs'}],
                [],
                [{call,1160,
                  {remote,1160,{atom,1160,dict},{atom,1160,erase}},
                  [{var,1160,'Used'},{var,1160,'Recs'}]}]}]}},
            {call,1161,
             {remote,1161,{atom,1161,erlang},{atom,1161,element}},
             [{integer,1161,8},{var,1161,'St0'}]},
            {var,1161,'UsedRecords'}]}},
         {match,1162,
          {var,1162,'Unused'},
          {lc,1162,
           {tuple,1162,[{var,1162,'Name'},{var,1162,'FileLine'}]},
           [{generate,1163,
             {tuple,1163,
              [{var,1163,'Name'},
               {tuple,1163,[{var,1163,'FileLine'},{var,1163,'_Fields'}]}]},
             {call,1163,
              {remote,1163,{atom,1163,dict},{atom,1163,to_list}},
              [{var,1163,'URecs'}]}},
            {op,1164,'=:=',
             {call,1164,
              {atom,1164,element},
              [{integer,1164,1},
               {call,1164,
                {atom,1164,loc},
                [{var,1164,'FileLine'},{var,1164,'St0'}]}]},
             {var,1164,'FirstFile'}}]}},
         {call,1165,
          {atom,1165,foldl},
          [{'fun',1165,
            {clauses,
             [{clause,1165,
               [{tuple,1165,[{var,1165,'N'},{var,1165,'L'}]},{var,1165,'St'}],
               [],
               [{call,1166,
                 {atom,1166,add_warning},
                 [{var,1166,'L'},
                  {tuple,1166,[{atom,1166,unused_record},{var,1166,'N'}]},
                  {var,1166,'St'}]}]}]}},
           {var,1167,'St0'},
           {var,1167,'Unused'}]}]},
       {clause,1168,[{var,1168,'_'}],[],[{var,1169,'St0'}]}]}]}]},
 {function,1172,check_callback_information,1,
  [{clause,1172,
    [{match,1174,
      {tuple,1172,
       [{atom,1172,lint},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1174,'Defined'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'_'},
        {var,1172,'Callbacks'},
        {var,1173,'OptionalCbs'},
        {var,1172,'_'},
        {var,1172,'_'}]},
      {var,1174,'St0'}}],
    [],
    [{match,1175,
      {var,1175,'OptFun'},
      {'fun',1175,
       {clauses,
        [{clause,1175,
          [{tuple,1175,[{var,1175,'MFA'},{var,1175,'Line'}]},{var,1175,'St'}],
          [],
          [{'case',1176,
            {call,1176,
             {remote,1176,{atom,1176,dict},{atom,1176,is_key}},
             [{var,1176,'MFA'},{var,1176,'Callbacks'}]},
            [{clause,1177,[{atom,1177,true}],[],[{var,1178,'St'}]},
             {clause,1179,
              [{atom,1179,false}],
              [],
              [{call,1180,
                {atom,1180,add_error},
                [{var,1180,'Line'},
                 {tuple,1180,
                  [{atom,1180,undefined_callback},{var,1180,'MFA'}]},
                 {var,1180,'St'}]}]}]}]}]}}},
     {match,1183,
      {var,1183,'St1'},
      {call,1183,
       {remote,1183,{atom,1183,lists},{atom,1183,foldl}},
       [{var,1183,'OptFun'},
        {var,1183,'St0'},
        {call,1183,
         {remote,1183,{atom,1183,dict},{atom,1183,to_list}},
         [{var,1183,'OptionalCbs'}]}]}},
     {'case',1184,
      {call,1184,
       {remote,1184,{atom,1184,gb_sets},{atom,1184,is_member}},
       [{tuple,1184,[{atom,1184,behaviour_info},{integer,1184,1}]},
        {var,1184,'Defined'}]},
      [{clause,1185,[{atom,1185,false}],[],[{var,1185,'St1'}]},
       {clause,1186,
        [{atom,1186,true}],
        [],
        [{'case',1187,
          {call,1187,
           {remote,1187,{atom,1187,dict},{atom,1187,size}},
           [{var,1187,'Callbacks'}]},
          [{clause,1188,[{integer,1188,0}],[],[{var,1188,'St1'}]},
           {clause,1189,
            [{var,1189,'_'}],
            [],
            [{match,1190,
              {var,1190,'CallbacksList'},
              {call,1190,
               {remote,1190,{atom,1190,dict},{atom,1190,to_list}},
               [{var,1190,'Callbacks'}]}},
             {match,1191,
              {var,1191,'FoldL'},
              {'fun',1192,
               {clauses,
                [{clause,1192,
                  [{tuple,1192,[{var,1192,'Fa'},{var,1192,'Line'}]},
                   {var,1192,'St'}],
                  [],
                  [{call,1193,
                    {atom,1193,add_error},
                    [{var,1193,'Line'},
                     {tuple,1193,[{atom,1193,behaviour_info},{var,1193,'Fa'}]},
                     {var,1193,'St'}]}]}]}}},
             {call,1195,
              {remote,1195,{atom,1195,lists},{atom,1195,foldl}},
              [{var,1195,'FoldL'},
               {var,1195,'St1'},
               {var,1195,'CallbacksList'}]}]}]}]}]}]}]},
 {function,1205,export,3,
  [{clause,1205,
    [{var,1205,'Line'},
     {var,1205,'Es'},
     {match,1205,
      {tuple,1205,
       [{atom,1205,lint},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'Es0'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'Called'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'},
        {var,1205,'_'}]},
      {var,1205,'St0'}}],
    [],
    [{match,1206,
      {tuple,1206,[{var,1206,'Es1'},{var,1206,'C1'},{var,1206,'St1'}]},
      {call,1207,
       {atom,1207,foldl},
       [{'fun',1207,
         {clauses,
          [{clause,1207,
            [{var,1207,'NA'},
             {tuple,1207,[{var,1207,'E'},{var,1207,'C'},{var,1207,'St2'}]}],
            [],
            [{match,1208,
              {var,1208,'St'},
              {'case',1208,
               {call,1208,
                {remote,1208,{atom,1208,gb_sets},{atom,1208,is_element}},
                [{var,1208,'NA'},{var,1208,'E'}]},
               [{clause,1209,
                 [{atom,1209,true}],
                 [],
                 [{match,1210,
                   {var,1210,'Warn'},
                   {tuple,1210,
                    [{atom,1210,duplicated_export},{var,1210,'NA'}]}},
                  {call,1211,
                   {atom,1211,add_warning},
                   [{var,1211,'Line'},{var,1211,'Warn'},{var,1211,'St2'}]}]},
                {clause,1212,[{atom,1212,false}],[],[{var,1213,'St2'}]}]}},
             {tuple,1215,
              [{call,1215,
                {remote,1215,{atom,1215,gb_sets},{atom,1215,add_element}},
                [{var,1215,'NA'},{var,1215,'E'}]},
               {cons,1215,
                {tuple,1215,[{var,1215,'NA'},{var,1215,'Line'}]},
                {var,1215,'C'}},
               {var,1215,'St'}]}]}]}},
        {tuple,1217,[{var,1217,'Es0'},{var,1217,'Called'},{var,1217,'St0'}]},
        {var,1217,'Es'}]}},
     {call,1218,
      {remote,1218,{atom,1218,erlang},{atom,1218,setelement}},
      [{integer,1218,25},
       {call,1218,
        {remote,1218,{atom,1218,erlang},{atom,1218,setelement}},
        [{integer,1218,5},{var,1218,'St1'},{var,1218,'Es1'}]},
       {var,1218,'C1'}]}]}]},
 {function,1223,export_type,3,
  [{clause,1223,
    [{var,1223,'Line'},
     {var,1223,'ETs'},
     {match,1223,
      {tuple,1223,
       [{atom,1223,lint},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'Usage'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'_'},
        {var,1223,'ETs0'}]},
      {var,1223,'St0'}}],
    [],
    [{match,1224,
      {var,1224,'UTs0'},
      {call,1224,
       {remote,1224,{atom,1224,erlang},{atom,1224,element}},
       [{integer,1224,5},{var,1224,'Usage'}]}},
     {'try',1225,
      [{call,1225,
        {atom,1225,foldl},
        [{'fun',1225,
          {clauses,
           [{clause,1225,
             [{match,1225,
               {tuple,1225,[{var,1225,'T'},{var,1225,'A'}]},
               {var,1225,'TA'}},
              {tuple,1225,[{var,1225,'E'},{var,1225,'U'},{var,1225,'St2'}]}],
             [[{call,1225,{atom,1225,is_atom},[{var,1225,'T'}]},
               {call,1225,{atom,1225,is_integer},[{var,1225,'A'}]}]],
             [{match,1226,
               {var,1226,'St'},
               {'case',1226,
                {call,1226,
                 {remote,1226,{atom,1226,gb_sets},{atom,1226,is_element}},
                 [{var,1226,'TA'},{var,1226,'E'}]},
                [{clause,1227,
                  [{atom,1227,true}],
                  [],
                  [{match,1228,
                    {var,1228,'Warn'},
                    {tuple,1228,
                     [{atom,1228,duplicated_export_type},{var,1228,'TA'}]}},
                   {call,1229,
                    {atom,1229,add_warning},
                    [{var,1229,'Line'},{var,1229,'Warn'},{var,1229,'St2'}]}]},
                 {clause,1230,[{atom,1230,false}],[],[{var,1231,'St2'}]}]}},
              {tuple,1233,
               [{call,1233,
                 {remote,1233,{atom,1233,gb_sets},{atom,1233,add_element}},
                 [{var,1233,'TA'},{var,1233,'E'}]},
                {call,1233,
                 {remote,1233,{atom,1233,dict},{atom,1233,store}},
                 [{var,1233,'TA'},{var,1233,'Line'},{var,1233,'U'}]},
                {var,1233,'St'}]}]}]}},
         {tuple,1235,[{var,1235,'ETs0'},{var,1235,'UTs0'},{var,1235,'St0'}]},
         {var,1235,'ETs'}]}],
      [{clause,1236,
        [{tuple,1236,[{var,1236,'ETs1'},{var,1236,'UTs1'},{var,1236,'St1'}]}],
        [],
        [{call,1237,
          {remote,1237,{atom,1237,erlang},{atom,1237,setelement}},
          [{integer,1237,31},
           {call,1237,
            {remote,1237,{atom,1237,erlang},{atom,1237,setelement}},
            [{integer,1237,26},
             {var,1237,'St1'},
             {call,1237,
              {remote,1237,{atom,1237,erlang},{atom,1237,setelement}},
              [{integer,1237,5},{var,1237,'Usage'},{var,1237,'UTs1'}]}]},
           {var,1237,'ETs1'}]}]}],
      [{clause,1239,
        [{tuple,1239,[{atom,1239,error},{var,1239,'_'},{var,1239,'_'}]}],
        [],
        [{call,1240,
          {atom,1240,add_error},
          [{var,1240,'Line'},
           {tuple,1240,[{atom,1240,bad_export_type},{var,1240,'ETs'}]},
           {var,1240,'St0'}]}]}],
      []}]}]},
 {function,1245,exports,1,
  [{clause,1245,
    [{tuple,1245,
      [{atom,1245,lint},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'Es'},
       {var,1245,'_'},
       {var,1245,'Opts'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'Defs'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'},
       {var,1245,'_'}]}],
    [],
    [{'case',1246,
      {call,1246,
       {remote,1246,{atom,1246,lists},{atom,1246,member}},
       [{atom,1246,export_all},{var,1246,'Opts'}]},
      [{clause,1247,[{atom,1247,true}],[],[{var,1247,'Defs'}]},
       {clause,1248,[{atom,1248,false}],[],[{var,1248,'Es'}]}]}]}]},
 {function,1254,import,3,
  [{clause,1254,
    [{var,1254,'Line'},
     {tuple,1254,[{var,1254,'Mod'},{var,1254,'Fs'}]},
     {var,1254,'St'}],
    [],
    [{match,1255,
      {var,1255,'Mfs'},
      {call,1255,
       {remote,1255,{atom,1255,ordsets},{atom,1255,from_list}},
       [{var,1255,'Fs'}]}},
     {'case',1256,
      {call,1256,
       {atom,1256,check_imports},
       [{var,1256,'Line'},
        {var,1256,'Mfs'},
        {call,1256,
         {remote,1256,{atom,1256,erlang},{atom,1256,element}},
         [{integer,1256,6},{var,1256,'St'}]}]},
      [{clause,1257,
        [{nil,1257}],
        [],
        [{call,1258,
          {remote,1258,{atom,1258,erlang},{atom,1258,setelement}},
          [{integer,1258,6},
           {var,1258,'St'},
           {call,1258,
            {atom,1258,add_imports},
            [{var,1258,'Mod'},
             {var,1258,'Mfs'},
             {call,1259,
              {remote,1259,{atom,1259,erlang},{atom,1259,element}},
              [{integer,1259,6},{var,1259,'St'}]}]}]}]},
       {clause,1260,
        [{var,1260,'Efs'}],
        [],
        [{match,1261,
          {tuple,1261,[{var,1261,'Err'},{var,1261,'St1'}]},
          {call,1262,
           {atom,1262,foldl},
           [{'fun',1262,
             {clauses,
              [{clause,1262,
                [{tuple,1262,
                  [{atom,1262,bif},
                   {tuple,1262,[{var,1262,'F'},{var,1262,'A'}]},
                   {var,1262,'_'}]},
                 {tuple,1262,[{var,1262,'Err'},{var,1262,'St0'}]}],
                [],
                [{match,1264,
                  {var,1264,'Warn'},
                  {op,1264,'andalso',
                   {call,1264,
                    {atom,1264,is_warn_enabled},
                    [{atom,1264,bif_clash},{var,1264,'St0'}]},
                   {op,1265,'not',
                    {call,1265,
                     {atom,1265,bif_clash_specifically_disabled},
                     [{var,1265,'St0'},
                      {tuple,1265,[{var,1265,'F'},{var,1265,'A'}]}]}}}},
                 {match,1266,
                  {var,1266,'AutoImpSup'},
                  {call,1266,
                   {atom,1266,is_autoimport_suppressed},
                   [{call,1266,
                     {remote,1266,{atom,1266,erlang},{atom,1266,element}},
                     [{integer,1266,10},{var,1266,'St0'}]},
                    {tuple,1266,[{var,1266,'F'},{var,1266,'A'}]}]}},
                 {match,1267,
                  {var,1267,'OldBif'},
                  {call,1267,
                   {remote,1267,{atom,1267,erl_internal},{atom,1267,old_bif}},
                   [{var,1267,'F'},{var,1267,'A'}]}},
                 {tuple,1268,
                  [{var,1268,'Err'},
                   {'if',1268,
                    [{clause,1269,[],
                      [[{op,1269,'and',
                         {op,1269,'and',
                          {var,1269,'Warn'},
                          {op,1269,'not',{var,1269,'AutoImpSup'}}},
                         {var,1269,'OldBif'}}]],
                      [{call,1270,
                        {atom,1270,add_error},
                        [{var,1271,'Line'},
                         {tuple,1272,
                          [{atom,1272,redefine_old_bif_import},
                           {tuple,1272,[{var,1272,'F'},{var,1272,'A'}]}]},
                         {var,1273,'St0'}]}]},
                     {clause,1274,[],
                      [[{op,1274,'and',
                         {var,1274,'Warn'},
                         {op,1274,'not',{var,1274,'AutoImpSup'}}}]],
                      [{call,1275,
                        {atom,1275,add_warning},
                        [{var,1276,'Line'},
                         {tuple,1277,
                          [{atom,1277,redefine_bif_import},
                           {tuple,1277,[{var,1277,'F'},{var,1277,'A'}]}]},
                         {var,1278,'St0'}]}]},
                     {clause,1279,[],
                      [[{atom,1279,true}]],
                      [{var,1280,'St0'}]}]}]}]},
               {clause,1282,
                [{var,1282,'Ef'},
                 {tuple,1282,[{var,1282,'_Err'},{var,1282,'St0'}]}],
                [],
                [{tuple,1283,
                  [{atom,1283,true},
                   {call,1283,
                    {atom,1283,add_error},
                    [{var,1283,'Line'},
                     {tuple,1284,
                      [{atom,1284,redefine_import},{var,1284,'Ef'}]},
                     {var,1285,'St0'}]}]}]}]}},
            {tuple,1287,[{atom,1287,false},{var,1287,'St'}]},
            {var,1287,'Efs'}]}},
         {'if',1288,
          [{clause,1289,[],
            [[{op,1289,'not',{var,1289,'Err'}}]],
            [{call,1290,
              {remote,1290,{atom,1290,erlang},{atom,1290,setelement}},
              [{integer,1290,6},
               {var,1290,'St1'},
               {call,1290,
                {atom,1290,add_imports},
                [{var,1290,'Mod'},
                 {var,1290,'Mfs'},
                 {call,1291,
                  {remote,1291,{atom,1291,erlang},{atom,1291,element}},
                  [{integer,1291,6},{var,1291,'St'}]}]}]}]},
           {clause,1292,[],[[{atom,1292,true}]],[{var,1293,'St1'}]}]}]}]}]}]},
 {function,1297,check_imports,3,
  [{clause,1297,
    [{var,1297,'_Line'},{var,1297,'Fs'},{var,1297,'Is'}],
    [],
    [{call,1298,
      {atom,1298,foldl},
      [{'fun',1298,
        {clauses,
         [{clause,1298,
           [{var,1298,'F'},{var,1298,'Efs'}],
           [],
           [{'case',1299,
             {call,1299,
              {remote,1299,{atom,1299,orddict},{atom,1299,find}},
              [{var,1299,'F'},{var,1299,'Is'}]},
             [{clause,1300,
               [{tuple,1300,[{atom,1300,ok},{var,1300,'Mod'}]}],
               [],
               [{cons,1300,
                 {tuple,1300,[{var,1300,'F'},{var,1300,'Mod'}]},
                 {var,1300,'Efs'}}]},
              {clause,1301,
               [{atom,1301,error}],
               [],
               [{match,1302,
                 {tuple,1302,[{var,1302,'N'},{var,1302,'A'}]},
                 {var,1302,'F'}},
                {'case',1303,
                 {call,1303,
                  {remote,1303,{atom,1303,erl_internal},{atom,1303,bif}},
                  [{var,1303,'N'},{var,1303,'A'}]},
                 [{clause,1304,
                   [{atom,1304,true}],
                   [],
                   [{cons,1305,
                     {tuple,1305,
                      [{atom,1305,bif},{var,1305,'F'},{atom,1305,erlang}]},
                     {var,1305,'Efs'}}]},
                  {clause,1306,
                   [{atom,1306,false}],
                   [],
                   [{var,1307,'Efs'}]}]}]}]}]}]}},
       {nil,1309},
       {var,1309,'Fs'}]}]}]},
 {function,1311,add_imports,3,
  [{clause,1311,
    [{var,1311,'Mod'},{var,1311,'Fs'},{var,1311,'Is'}],
    [],
    [{call,1312,
      {atom,1312,foldl},
      [{'fun',1312,
        {clauses,
         [{clause,1312,
           [{var,1312,'F'},{var,1312,'Is0'}],
           [],
           [{call,1312,
             {remote,1312,{atom,1312,orddict},{atom,1312,store}},
             [{var,1312,'F'},{var,1312,'Mod'},{var,1312,'Is0'}]}]}]}},
       {var,1312,'Is'},
       {var,1312,'Fs'}]}]}]},
 {function,1316,imported,3,
  [{clause,1316,
    [{var,1316,'F'},{var,1316,'A'},{var,1316,'St'}],
    [],
    [{'case',1317,
      {call,1317,
       {remote,1317,{atom,1317,orddict},{atom,1317,find}},
       [{tuple,1317,[{var,1317,'F'},{var,1317,'A'}]},
        {call,1317,
         {remote,1317,{atom,1317,erlang},{atom,1317,element}},
         [{integer,1317,6},{var,1317,'St'}]}]},
      [{clause,1318,
        [{tuple,1318,[{atom,1318,ok},{var,1318,'Mod'}]}],
        [],
        [{tuple,1318,[{atom,1318,yes},{var,1318,'Mod'}]}]},
       {clause,1319,[{atom,1319,error}],[],[{atom,1319,no}]}]}]}]},
 {function,1325,on_load,3,
  [{clause,1325,
    [{var,1325,'Line'},
     {match,1325,
      {tuple,1325,[{var,1325,'Name'},{var,1325,'Arity'}]},
      {var,1325,'Fa'}},
     {match,1325,
      {tuple,1325,
       [{atom,1325,lint},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'OnLoad0'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'},
        {var,1325,'_'}]},
      {var,1325,'St0'}}],
    [[{call,1326,{atom,1326,is_atom},[{var,1326,'Name'}]},
      {call,1326,{atom,1326,is_integer},[{var,1326,'Arity'}]}]],
    [{match,1329,
      {var,1329,'St'},
      {call,1329,
       {remote,1329,{atom,1329,erlang},{atom,1329,setelement}},
       [{integer,1329,13},
        {call,1329,
         {remote,1329,{atom,1329,erlang},{atom,1329,setelement}},
         [{integer,1329,12},
          {var,1329,'St0'},
          {cons,1329,{var,1329,'Fa'},{var,1329,'OnLoad0'}}]},
        {var,1329,'Line'}]}},
     {'case',1330,
      {var,1330,'St'},
      [{clause,1331,
        [{tuple,1331,
          [{atom,1331,lint},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {cons,1331,
            {tuple,1331,[{var,1331,'_'},{integer,1331,0}]},
            {nil,1331}},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'},
           {var,1331,'_'}]}],
        [],
        [{var,1334,'St'}]},
       {clause,1335,
        [{tuple,1335,
          [{atom,1335,lint},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {cons,1335,{tuple,1335,[{var,1335,'_'},{var,1335,'_'}]},{nil,1335}},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'},
           {var,1335,'_'}]}],
        [],
        [{call,1337,
          {atom,1337,add_error},
          [{var,1337,'Line'},
           {tuple,1337,[{atom,1337,bad_on_load_arity},{var,1337,'Fa'}]},
           {var,1337,'St'}]}]},
       {clause,1338,
        [{tuple,1338,
          [{atom,1338,lint},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {cons,1338,
            {var,1338,'_'},
            {cons,1338,{var,1338,'_'},{var,1338,'_'}}},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'},
           {var,1338,'_'}]}],
        [],
        [{call,1340,
          {atom,1340,add_error},
          [{var,1340,'Line'},
           {atom,1340,multiple_on_loads},
           {var,1340,'St'}]}]}]}]},
   {clause,1342,
    [{var,1342,'Line'},{var,1342,'Val'},{var,1342,'St'}],
    [],
    [{call,1344,
      {atom,1344,add_error},
      [{var,1344,'Line'},
       {tuple,1344,[{atom,1344,bad_on_load},{var,1344,'Val'}]},
       {var,1344,'St'}]}]}]},
 {function,1346,check_on_load,1,
  [{clause,1346,
    [{match,1347,
      {tuple,1346,
       [{atom,1346,lint},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'Defined'},
        {cons,1346,
         {match,1346,
          {tuple,1346,[{var,1346,'_'},{integer,1346,0}]},
          {var,1346,'Fa'}},
         {nil,1346}},
        {var,1347,'Line'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'},
        {var,1346,'_'}]},
      {var,1347,'St'}}],
    [],
    [{'case',1348,
      {call,1348,
       {remote,1348,{atom,1348,gb_sets},{atom,1348,is_member}},
       [{var,1348,'Fa'},{var,1348,'Defined'}]},
      [{clause,1349,[{atom,1349,true}],[],[{var,1349,'St'}]},
       {clause,1350,
        [{atom,1350,false}],
        [],
        [{call,1350,
          {atom,1350,add_error},
          [{var,1350,'Line'},
           {tuple,1350,[{atom,1350,undefined_on_load},{var,1350,'Fa'}]},
           {var,1350,'St'}]}]}]}]},
   {clause,1352,[{var,1352,'St'}],[],[{var,1352,'St'}]}]},
 {function,1357,call_function,4,
  [{clause,1357,
    [{var,1357,'Line'},
     {var,1357,'F'},
     {var,1357,'A'},
     {match,1357,
      {tuple,1357,
       [{atom,1357,lint},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'Func'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'File'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'Cd'},
        {var,1357,'Usage0'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'},
        {var,1357,'_'}]},
      {var,1357,'St'}}],
    [],
    [{match,1358,
      {tuple,1358,
       [{atom,1358,usage},
        {var,1358,'Cs'},
        {var,1358,'_'},
        {var,1358,'_'},
        {var,1358,'_'}]},
      {var,1358,'Usage0'}},
     {match,1359,{var,1359,'NA'},{tuple,1359,[{var,1359,'F'},{var,1359,'A'}]}},
     {match,1360,
      {var,1360,'Usage'},
      {'case',1360,
       {var,1360,'Cs'},
       [{clause,1361,[{atom,1361,undefined}],[],[{var,1361,'Usage0'}]},
        {clause,1362,
         [{var,1362,'_'}],
         [],
         [{call,1362,
           {remote,1362,{atom,1362,erlang},{atom,1362,setelement}},
           [{integer,1362,2},
            {var,1362,'Usage0'},
            {call,1362,
             {remote,1362,{atom,1362,dict},{atom,1362,append}},
             [{var,1362,'Func'},{var,1362,'NA'},{var,1362,'Cs'}]}]}]}]}},
     {match,1364,
      {var,1364,'Anno'},
      {call,1364,
       {remote,1364,{atom,1364,erl_anno},{atom,1364,set_file}},
       [{var,1364,'File'},{var,1364,'Line'}]}},
     {call,1365,
      {remote,1365,{atom,1365,erlang},{atom,1365,setelement}},
      [{integer,1365,26},
       {call,1365,
        {remote,1365,{atom,1365,erlang},{atom,1365,setelement}},
        [{integer,1365,25},
         {var,1365,'St'},
         {cons,1365,
          {tuple,1365,[{var,1365,'NA'},{var,1365,'Anno'}]},
          {var,1365,'Cd'}}]},
       {var,1365,'Usage'}]}]}]},
 {function,1369,function,5,
  [{clause,1369,
    [{var,1369,'Line'},
     {var,1369,'Name'},
     {var,1369,'Arity'},
     {var,1369,'Cs'},
     {var,1369,'St0'}],
    [],
    [{match,1370,
      {var,1370,'St1'},
      {call,1370,
       {atom,1370,define_function},
       [{var,1370,'Line'},
        {var,1370,'Name'},
        {var,1370,'Arity'},
        {call,1370,
         {remote,1370,{atom,1370,erlang},{atom,1370,setelement}},
         [{integer,1370,16},
          {var,1370,'St0'},
          {tuple,1370,[{var,1370,'Name'},{var,1370,'Arity'}]}]}]}},
     {call,1371,{atom,1371,clauses},[{var,1371,'Cs'},{var,1371,'St1'}]}]}]},
 {function,1375,define_function,4,
  [{clause,1375,
    [{var,1375,'Line'},{var,1375,'Name'},{var,1375,'Arity'},{var,1375,'St0'}],
    [],
    [{match,1376,
      {var,1376,'St1'},
      {call,1376,
       {atom,1376,keyword_warning},
       [{var,1376,'Line'},{var,1376,'Name'},{var,1376,'St0'}]}},
     {match,1377,
      {var,1377,'NA'},
      {tuple,1377,[{var,1377,'Name'},{var,1377,'Arity'}]}},
     {'case',1378,
      {call,1378,
       {remote,1378,{atom,1378,gb_sets},{atom,1378,is_member}},
       [{var,1378,'NA'},
        {call,1378,
         {remote,1378,{atom,1378,erlang},{atom,1378,element}},
         [{integer,1378,11},{var,1378,'St1'}]}]},
      [{clause,1379,
        [{atom,1379,true}],
        [],
        [{call,1380,
          {atom,1380,add_error},
          [{var,1380,'Line'},
           {tuple,1380,[{atom,1380,redefine_function},{var,1380,'NA'}]},
           {var,1380,'St1'}]}]},
       {clause,1381,
        [{atom,1381,false}],
        [],
        [{match,1382,
          {var,1382,'St2'},
          {call,1382,
           {atom,1382,function_check_max_args},
           [{var,1382,'Line'},{var,1382,'Arity'},{var,1382,'St1'}]}},
         {match,1383,
          {var,1383,'St3'},
          {call,1383,
           {remote,1383,{atom,1383,erlang},{atom,1383,setelement}},
           [{integer,1383,11},
            {var,1383,'St2'},
            {call,1383,
             {remote,1383,{atom,1383,gb_sets},{atom,1383,add_element}},
             [{var,1383,'NA'},
              {call,1383,
               {remote,1383,{atom,1383,erlang},{atom,1383,element}},
               [{integer,1383,11},{var,1383,'St2'}]}]}]}},
         {'case',1384,
          {call,1384,
           {atom,1384,imported},
           [{var,1384,'Name'},{var,1384,'Arity'},{var,1384,'St3'}]},
          [{clause,1385,
            [{tuple,1385,[{atom,1385,yes},{var,1385,'_M'}]}],
            [],
            [{call,1385,
              {atom,1385,add_error},
              [{var,1385,'Line'},
               {tuple,1385,[{atom,1385,define_import},{var,1385,'NA'}]},
               {var,1385,'St3'}]}]},
           {clause,1386,[{atom,1386,no}],[],[{var,1386,'St3'}]}]}]}]}]}]},
 {function,1390,function_check_max_args,3,
  [{clause,1390,
    [{var,1390,'Line'},{var,1390,'Arity'},{var,1390,'St'}],
    [[{op,1390,'>',{var,1390,'Arity'},{integer,68,255}}]],
    [{call,1391,
      {atom,1391,add_error},
      [{var,1391,'Line'},
       {tuple,1391,[{atom,1391,too_many_arguments},{var,1391,'Arity'}]},
       {var,1391,'St'}]}]},
   {clause,1392,
    [{var,1392,'_'},{var,1392,'_'},{var,1392,'St'}],
    [],
    [{var,1392,'St'}]}]},
 {function,1396,clauses,2,
  [{clause,1396,
    [{var,1396,'Cs'},{var,1396,'St'}],
    [],
    [{call,1397,
      {atom,1397,foldl},
      [{'fun',1397,
        {clauses,
         [{clause,1397,
           [{var,1397,'C'},{var,1397,'St0'}],
           [],
           [{match,1398,
             {tuple,1398,[{var,1398,'_'},{var,1398,'St1'}]},
             {call,1398,{atom,1398,clause},[{var,1398,'C'},{var,1398,'St0'}]}},
            {var,1399,'St1'}]}]}},
       {var,1400,'St'},
       {var,1400,'Cs'}]}]}]},
 {function,1402,clause,2,
  [{clause,1402,
    [{tuple,1402,
      [{atom,1402,clause},
       {var,1402,'_Line'},
       {var,1402,'H'},
       {var,1402,'G'},
       {var,1402,'B'}]},
     {var,1402,'St0'}],
    [],
    [{match,1403,{var,1403,'Vt0'},{nil,1403}},
     {match,1404,
      {tuple,1404,[{var,1404,'Hvt'},{var,1404,'Binvt'},{var,1404,'St1'}]},
      {call,1404,
       {atom,1404,head},
       [{var,1404,'H'},{var,1404,'Vt0'},{var,1404,'St0'}]}},
     {match,1406,
      {var,1406,'Vt1'},
      {call,1406,
       {atom,1406,vtupdate},
       [{var,1406,'Hvt'},
        {call,1406,
         {atom,1406,vtupdate},
         [{var,1406,'Binvt'},{var,1406,'Vt0'}]}]}},
     {match,1407,
      {tuple,1407,[{var,1407,'Gvt'},{var,1407,'St2'}]},
      {call,1407,
       {atom,1407,guard},
       [{var,1407,'G'},{var,1407,'Vt1'},{var,1407,'St1'}]}},
     {match,1408,
      {var,1408,'Vt2'},
      {call,1408,{atom,1408,vtupdate},[{var,1408,'Gvt'},{var,1408,'Vt1'}]}},
     {match,1409,
      {tuple,1409,[{var,1409,'Bvt'},{var,1409,'St3'}]},
      {call,1409,
       {atom,1409,exprs},
       [{var,1409,'B'},{var,1409,'Vt2'},{var,1409,'St2'}]}},
     {match,1410,
      {var,1410,'Upd'},
      {call,1410,{atom,1410,vtupdate},[{var,1410,'Bvt'},{var,1410,'Vt2'}]}},
     {call,1411,
      {atom,1411,check_unused_vars},
      [{var,1411,'Upd'},{var,1411,'Vt0'},{var,1411,'St3'}]}]}]},
 {function,1418,head,3,
  [{clause,1418,
    [{var,1418,'Ps'},{var,1418,'Vt'},{var,1418,'St0'}],
    [],
    [{call,1419,
      {atom,1419,head},
      [{var,1419,'Ps'},{var,1419,'Vt'},{var,1419,'Vt'},{var,1419,'St0'}]}]}]},
 {function,1421,head,4,
  [{clause,1421,
    [{cons,1421,{var,1421,'P'},{var,1421,'Ps'}},
     {var,1421,'Vt'},
     {var,1421,'Old'},
     {var,1421,'St0'}],
    [],
    [{match,1422,
      {tuple,1422,[{var,1422,'Pvt'},{var,1422,'Bvt1'},{var,1422,'St1'}]},
      {call,1422,
       {atom,1422,pattern},
       [{var,1422,'P'},
        {var,1422,'Vt'},
        {var,1422,'Old'},
        {nil,1422},
        {var,1422,'St0'}]}},
     {match,1423,
      {tuple,1423,[{var,1423,'Psvt'},{var,1423,'Bvt2'},{var,1423,'St2'}]},
      {call,1423,
       {atom,1423,head},
       [{var,1423,'Ps'},{var,1423,'Vt'},{var,1423,'Old'},{var,1423,'St1'}]}},
     {tuple,1424,
      [{call,1424,
        {atom,1424,vtmerge_pat},
        [{var,1424,'Pvt'},{var,1424,'Psvt'}]},
       {call,1424,
        {atom,1424,vtmerge_pat},
        [{var,1424,'Bvt1'},{var,1424,'Bvt2'}]},
       {var,1424,'St2'}]}]},
   {clause,1425,
    [{nil,1425},{var,1425,'_Vt'},{var,1425,'_Env'},{var,1425,'St'}],
    [],
    [{tuple,1425,[{nil,1425},{nil,1425},{var,1425,'St'}]}]}]},
 {function,1440,pattern,3,
  [{clause,1440,
    [{var,1440,'P'},{var,1440,'Vt'},{var,1440,'St'}],
    [],
    [{call,1441,
      {atom,1441,pattern},
      [{var,1441,'P'},
       {var,1441,'Vt'},
       {var,1441,'Vt'},
       {nil,1441},
       {var,1441,'St'}]}]}]},
 {function,1443,pattern,5,
  [{clause,1443,
    [{tuple,1443,[{atom,1443,var},{var,1443,'_Line'},{atom,1443,'_'}]},
     {var,1443,'_Vt'},
     {var,1443,'_Old'},
     {var,1443,'_Bvt'},
     {var,1443,'St'}],
    [],
    [{tuple,1444,[{nil,1444},{nil,1444},{var,1444,'St'}]}]},
   {clause,1445,
    [{tuple,1445,[{atom,1445,var},{var,1445,'Line'},{var,1445,'V'}]},
     {var,1445,'_Vt'},
     {var,1445,'Old'},
     {var,1445,'Bvt'},
     {var,1445,'St'}],
    [],
    [{call,1446,
      {atom,1446,pat_var},
      [{var,1446,'V'},
       {var,1446,'Line'},
       {var,1446,'Old'},
       {var,1446,'Bvt'},
       {var,1446,'St'}]}]},
   {clause,1447,
    [{tuple,1447,[{atom,1447,char},{var,1447,'_Line'},{var,1447,'_C'}]},
     {var,1447,'_Vt'},
     {var,1447,'_Old'},
     {var,1447,'_Bvt'},
     {var,1447,'St'}],
    [],
    [{tuple,1447,[{nil,1447},{nil,1447},{var,1447,'St'}]}]},
   {clause,1448,
    [{tuple,1448,[{atom,1448,integer},{var,1448,'_Line'},{var,1448,'_I'}]},
     {var,1448,'_Vt'},
     {var,1448,'_Old'},
     {var,1448,'_Bvt'},
     {var,1448,'St'}],
    [],
    [{tuple,1448,[{nil,1448},{nil,1448},{var,1448,'St'}]}]},
   {clause,1449,
    [{tuple,1449,[{atom,1449,float},{var,1449,'_Line'},{var,1449,'_F'}]},
     {var,1449,'_Vt'},
     {var,1449,'_Old'},
     {var,1449,'_Bvt'},
     {var,1449,'St'}],
    [],
    [{tuple,1449,[{nil,1449},{nil,1449},{var,1449,'St'}]}]},
   {clause,1450,
    [{tuple,1450,[{atom,1450,atom},{var,1450,'Line'},{var,1450,'A'}]},
     {var,1450,'_Vt'},
     {var,1450,'_Old'},
     {var,1450,'_Bvt'},
     {var,1450,'St'}],
    [],
    [{tuple,1451,
      [{nil,1451},
       {nil,1451},
       {call,1451,
        {atom,1451,keyword_warning},
        [{var,1451,'Line'},{var,1451,'A'},{var,1451,'St'}]}]}]},
   {clause,1452,
    [{tuple,1452,[{atom,1452,string},{var,1452,'_Line'},{var,1452,'_S'}]},
     {var,1452,'_Vt'},
     {var,1452,'_Old'},
     {var,1452,'_Bvt'},
     {var,1452,'St'}],
    [],
    [{tuple,1452,[{nil,1452},{nil,1452},{var,1452,'St'}]}]},
   {clause,1453,
    [{tuple,1453,[{atom,1453,nil},{var,1453,'_Line'}]},
     {var,1453,'_Vt'},
     {var,1453,'_Old'},
     {var,1453,'_Bvt'},
     {var,1453,'St'}],
    [],
    [{tuple,1453,[{nil,1453},{nil,1453},{var,1453,'St'}]}]},
   {clause,1454,
    [{tuple,1454,
      [{atom,1454,cons},{var,1454,'_Line'},{var,1454,'H'},{var,1454,'T'}]},
     {var,1454,'Vt'},
     {var,1454,'Old'},
     {var,1454,'Bvt'},
     {var,1454,'St0'}],
    [],
    [{match,1455,
      {tuple,1455,[{var,1455,'Hvt'},{var,1455,'Bvt1'},{var,1455,'St1'}]},
      {call,1455,
       {atom,1455,pattern},
       [{var,1455,'H'},
        {var,1455,'Vt'},
        {var,1455,'Old'},
        {var,1455,'Bvt'},
        {var,1455,'St0'}]}},
     {match,1456,
      {tuple,1456,[{var,1456,'Tvt'},{var,1456,'Bvt2'},{var,1456,'St2'}]},
      {call,1456,
       {atom,1456,pattern},
       [{var,1456,'T'},
        {var,1456,'Vt'},
        {var,1456,'Old'},
        {var,1456,'Bvt'},
        {var,1456,'St1'}]}},
     {tuple,1457,
      [{call,1457,{atom,1457,vtmerge_pat},[{var,1457,'Hvt'},{var,1457,'Tvt'}]},
       {call,1457,
        {atom,1457,vtmerge_pat},
        [{var,1457,'Bvt1'},{var,1457,'Bvt2'}]},
       {var,1457,'St2'}]}]},
   {clause,1458,
    [{tuple,1458,[{atom,1458,tuple},{var,1458,'_Line'},{var,1458,'Ps'}]},
     {var,1458,'Vt'},
     {var,1458,'Old'},
     {var,1458,'Bvt'},
     {var,1458,'St'}],
    [],
    [{call,1459,
      {atom,1459,pattern_list},
      [{var,1459,'Ps'},
       {var,1459,'Vt'},
       {var,1459,'Old'},
       {var,1459,'Bvt'},
       {var,1459,'St'}]}]},
   {clause,1460,
    [{tuple,1460,[{atom,1460,map},{var,1460,'_Line'},{var,1460,'Ps'}]},
     {var,1460,'Vt'},
     {var,1460,'Old'},
     {var,1460,'Bvt'},
     {var,1460,'St'}],
    [],
    [{call,1461,
      {atom,1461,pattern_map},
      [{var,1461,'Ps'},
       {var,1461,'Vt'},
       {var,1461,'Old'},
       {var,1461,'Bvt'},
       {var,1461,'St'}]}]},
   {clause,1464,
    [{tuple,1464,
      [{atom,1464,record_index},
       {var,1464,'Line'},
       {var,1464,'Name'},
       {var,1464,'Field'}]},
     {var,1464,'_Vt'},
     {var,1464,'_Old'},
     {var,1464,'_Bvt'},
     {var,1464,'St'}],
    [],
    [{match,1465,
      {tuple,1465,[{var,1465,'Vt1'},{var,1465,'St1'}]},
      {call,1466,
       {atom,1466,check_record},
       [{var,1466,'Line'},
        {var,1466,'Name'},
        {var,1466,'St'},
        {'fun',1467,
         {clauses,
          [{clause,1467,
            [{var,1467,'Dfs'},{var,1467,'St1'}],
            [],
            [{call,1468,
              {atom,1468,pattern_field},
              [{var,1468,'Field'},
               {var,1468,'Name'},
               {var,1468,'Dfs'},
               {var,1468,'St1'}]}]}]}}]}},
     {tuple,1470,[{var,1470,'Vt1'},{nil,1470},{var,1470,'St1'}]}]},
   {clause,1471,
    [{tuple,1471,
      [{atom,1471,record},
       {var,1471,'Line'},
       {var,1471,'Name'},
       {var,1471,'Pfs'}]},
     {var,1471,'Vt'},
     {var,1471,'Old'},
     {var,1471,'Bvt'},
     {var,1471,'St'}],
    [],
    [{'case',1472,
      {call,1472,
       {remote,1472,{atom,1472,dict},{atom,1472,find}},
       [{var,1472,'Name'},
        {call,1472,
         {remote,1472,{atom,1472,erlang},{atom,1472,element}},
         [{integer,1472,8},{var,1472,'St'}]}]},
      [{clause,1473,
        [{tuple,1473,
          [{atom,1473,ok},
           {tuple,1473,[{var,1473,'_Line'},{var,1473,'Fields'}]}]}],
        [],
        [{match,1474,
          {var,1474,'St1'},
          {call,1474,
           {atom,1474,used_record},
           [{var,1474,'Name'},{var,1474,'St'}]}},
         {call,1475,
          {atom,1475,pattern_fields},
          [{var,1475,'Pfs'},
           {var,1475,'Name'},
           {var,1475,'Fields'},
           {var,1475,'Vt'},
           {var,1475,'Old'},
           {var,1475,'Bvt'},
           {var,1475,'St1'}]}]},
       {clause,1476,
        [{atom,1476,error}],
        [],
        [{tuple,1476,
          [{nil,1476},
           {nil,1476},
           {call,1476,
            {atom,1476,add_error},
            [{var,1476,'Line'},
             {tuple,1476,[{atom,1476,undefined_record},{var,1476,'Name'}]},
             {var,1476,'St'}]}]}]}]}]},
   {clause,1478,
    [{tuple,1478,[{atom,1478,bin},{var,1478,'_'},{var,1478,'Fs'}]},
     {var,1478,'Vt'},
     {var,1478,'Old'},
     {var,1478,'Bvt'},
     {var,1478,'St'}],
    [],
    [{call,1479,
      {atom,1479,pattern_bin},
      [{var,1479,'Fs'},
       {var,1479,'Vt'},
       {var,1479,'Old'},
       {var,1479,'Bvt'},
       {var,1479,'St'}]}]},
   {clause,1480,
    [{tuple,1480,
      [{atom,1480,op},
       {var,1480,'_Line'},
       {atom,1480,'++'},
       {tuple,1480,[{atom,1480,nil},{var,1480,'_'}]},
       {var,1480,'R'}]},
     {var,1480,'Vt'},
     {var,1480,'Old'},
     {var,1480,'Bvt'},
     {var,1480,'St'}],
    [],
    [{call,1481,
      {atom,1481,pattern},
      [{var,1481,'R'},
       {var,1481,'Vt'},
       {var,1481,'Old'},
       {var,1481,'Bvt'},
       {var,1481,'St'}]}]},
   {clause,1482,
    [{tuple,1482,
      [{atom,1482,op},
       {var,1482,'_Line'},
       {atom,1482,'++'},
       {tuple,1482,
        [{atom,1482,cons},
         {var,1482,'Li'},
         {tuple,1482,[{atom,1482,char},{var,1482,'_L2'},{var,1482,'_C'}]},
         {var,1482,'T'}]},
       {var,1482,'R'}]},
     {var,1482,'Vt'},
     {var,1482,'Old'},
     {var,1482,'Bvt'},
     {var,1482,'St'}],
    [],
    [{call,1483,
      {atom,1483,pattern},
      [{tuple,1483,
        [{atom,1483,op},
         {var,1483,'Li'},
         {atom,1483,'++'},
         {var,1483,'T'},
         {var,1483,'R'}]},
       {var,1483,'Vt'},
       {var,1483,'Old'},
       {var,1483,'Bvt'},
       {var,1483,'St'}]}]},
   {clause,1484,
    [{tuple,1484,
      [{atom,1484,op},
       {var,1484,'_Line'},
       {atom,1484,'++'},
       {tuple,1484,
        [{atom,1484,cons},
         {var,1484,'Li'},
         {tuple,1484,[{atom,1484,integer},{var,1484,'_L2'},{var,1484,'_I'}]},
         {var,1484,'T'}]},
       {var,1484,'R'}]},
     {var,1484,'Vt'},
     {var,1484,'Old'},
     {var,1484,'Bvt'},
     {var,1484,'St'}],
    [],
    [{call,1485,
      {atom,1485,pattern},
      [{tuple,1485,
        [{atom,1485,op},
         {var,1485,'Li'},
         {atom,1485,'++'},
         {var,1485,'T'},
         {var,1485,'R'}]},
       {var,1485,'Vt'},
       {var,1485,'Old'},
       {var,1485,'Bvt'},
       {var,1485,'St'}]}]},
   {clause,1486,
    [{tuple,1486,
      [{atom,1486,op},
       {var,1486,'_Line'},
       {atom,1486,'++'},
       {tuple,1486,[{atom,1486,string},{var,1486,'_Li'},{var,1486,'_S'}]},
       {var,1486,'R'}]},
     {var,1486,'Vt'},
     {var,1486,'Old'},
     {var,1486,'Bvt'},
     {var,1486,'St'}],
    [],
    [{call,1487,
      {atom,1487,pattern},
      [{var,1487,'R'},
       {var,1487,'Vt'},
       {var,1487,'Old'},
       {var,1487,'Bvt'},
       {var,1487,'St'}]}]},
   {clause,1488,
    [{tuple,1488,
      [{atom,1488,match},
       {var,1488,'_Line'},
       {var,1488,'Pat1'},
       {var,1488,'Pat2'}]},
     {var,1488,'Vt'},
     {var,1488,'Old'},
     {var,1488,'Bvt'},
     {var,1488,'St0'}],
    [],
    [{match,1489,
      {tuple,1489,[{var,1489,'Lvt'},{var,1489,'Bvt1'},{var,1489,'St1'}]},
      {call,1489,
       {atom,1489,pattern},
       [{var,1489,'Pat1'},
        {var,1489,'Vt'},
        {var,1489,'Old'},
        {var,1489,'Bvt'},
        {var,1489,'St0'}]}},
     {match,1490,
      {tuple,1490,[{var,1490,'Rvt'},{var,1490,'Bvt2'},{var,1490,'St2'}]},
      {call,1490,
       {atom,1490,pattern},
       [{var,1490,'Pat2'},
        {var,1490,'Vt'},
        {var,1490,'Old'},
        {var,1490,'Bvt'},
        {var,1490,'St1'}]}},
     {match,1491,
      {var,1491,'St3'},
      {call,1491,
       {atom,1491,reject_bin_alias},
       [{var,1491,'Pat1'},{var,1491,'Pat2'},{var,1491,'St2'}]}},
     {tuple,1492,
      [{call,1492,{atom,1492,vtmerge_pat},[{var,1492,'Lvt'},{var,1492,'Rvt'}]},
       {call,1492,
        {atom,1492,vtmerge_pat},
        [{var,1492,'Bvt1'},{var,1492,'Bvt2'}]},
       {var,1492,'St3'}]}]},
   {clause,1494,
    [{var,1494,'Pat'},
     {var,1494,'_Vt'},
     {var,1494,'_Old'},
     {var,1494,'_Bvt'},
     {var,1494,'St'}],
    [],
    [{'case',1495,
      {call,1495,{atom,1495,is_pattern_expr},[{var,1495,'Pat'}]},
      [{clause,1496,
        [{atom,1496,true}],
        [],
        [{tuple,1496,[{nil,1496},{nil,1496},{var,1496,'St'}]}]},
       {clause,1497,
        [{atom,1497,false}],
        [],
        [{tuple,1497,
          [{nil,1497},
           {nil,1497},
           {call,1497,
            {atom,1497,add_error},
            [{call,1497,
              {atom,1497,element},
              [{integer,1497,2},{var,1497,'Pat'}]},
             {atom,1497,illegal_pattern},
             {var,1497,'St'}]}]}]}]}]}]},
 {function,1500,pattern_list,5,
  [{clause,1500,
    [{var,1500,'Ps'},
     {var,1500,'Vt'},
     {var,1500,'Old'},
     {var,1500,'Bvt0'},
     {var,1500,'St'}],
    [],
    [{call,1501,
      {atom,1501,foldl},
      [{'fun',1501,
        {clauses,
         [{clause,1501,
           [{var,1501,'P'},
            {tuple,1501,
             [{var,1501,'Psvt'},{var,1501,'Bvt'},{var,1501,'St0'}]}],
           [],
           [{match,1502,
             {tuple,1502,
              [{var,1502,'Pvt'},{var,1502,'Bvt1'},{var,1502,'St1'}]},
             {call,1502,
              {atom,1502,pattern},
              [{var,1502,'P'},
               {var,1502,'Vt'},
               {var,1502,'Old'},
               {var,1502,'Bvt0'},
               {var,1502,'St0'}]}},
            {tuple,1503,
             [{call,1503,
               {atom,1503,vtmerge_pat},
               [{var,1503,'Pvt'},{var,1503,'Psvt'}]},
              {call,1503,
               {atom,1503,vtmerge_pat},
               [{var,1503,'Bvt'},{var,1503,'Bvt1'}]},
              {var,1503,'St1'}]}]}]}},
       {tuple,1504,[{nil,1504},{nil,1504},{var,1504,'St'}]},
       {var,1504,'Ps'}]}]}]},
 {function,1509,reject_bin_alias_expr,3,
  [{clause,1509,
    [{match,1509,
      {tuple,1509,[{atom,1509,bin},{var,1509,'_'},{var,1509,'_'}]},
      {var,1509,'P'}},
     {tuple,1509,
      [{atom,1509,match},{var,1509,'_'},{var,1509,'P0'},{var,1509,'E'}]},
     {var,1509,'St0'}],
    [],
    [{match,1510,
      {var,1510,'St'},
      {call,1510,
       {atom,1510,reject_bin_alias},
       [{var,1510,'P'},{var,1510,'P0'},{var,1510,'St0'}]}},
     {call,1511,
      {atom,1511,reject_bin_alias_expr},
      [{var,1511,'P'},{var,1511,'E'},{var,1511,'St'}]}]},
   {clause,1512,
    [{match,1512,
      {tuple,1512,
       [{atom,1512,match},{var,1512,'_'},{var,1512,'_'},{var,1512,'_'}]},
      {var,1512,'P'}},
     {tuple,1512,
      [{atom,1512,match},{var,1512,'_'},{var,1512,'P0'},{var,1512,'E'}]},
     {var,1512,'St0'}],
    [],
    [{match,1513,
      {var,1513,'St'},
      {call,1513,
       {atom,1513,reject_bin_alias},
       [{var,1513,'P'},{var,1513,'P0'},{var,1513,'St0'}]}},
     {call,1514,
      {atom,1514,reject_bin_alias_expr},
      [{var,1514,'P'},{var,1514,'E'},{var,1514,'St'}]}]},
   {clause,1515,
    [{var,1515,'_'},{var,1515,'_'},{var,1515,'St'}],
    [],
    [{var,1515,'St'}]}]},
 {function,1526,reject_bin_alias,3,
  [{clause,1526,
    [{tuple,1526,[{atom,1526,bin},{var,1526,'Line'},{var,1526,'_'}]},
     {tuple,1526,[{atom,1526,bin},{var,1526,'_'},{var,1526,'_'}]},
     {var,1526,'St'}],
    [],
    [{call,1527,
      {atom,1527,add_error},
      [{var,1527,'Line'},{atom,1527,illegal_bin_pattern},{var,1527,'St'}]}]},
   {clause,1528,
    [{tuple,1528,
      [{atom,1528,cons},{var,1528,'_'},{var,1528,'H1'},{var,1528,'T1'}]},
     {tuple,1528,
      [{atom,1528,cons},{var,1528,'_'},{var,1528,'H2'},{var,1528,'T2'}]},
     {var,1528,'St0'}],
    [],
    [{match,1529,
      {var,1529,'St'},
      {call,1529,
       {atom,1529,reject_bin_alias},
       [{var,1529,'H1'},{var,1529,'H2'},{var,1529,'St0'}]}},
     {call,1530,
      {atom,1530,reject_bin_alias},
      [{var,1530,'T1'},{var,1530,'T2'},{var,1530,'St'}]}]},
   {clause,1531,
    [{tuple,1531,[{atom,1531,tuple},{var,1531,'_'},{var,1531,'Es1'}]},
     {tuple,1531,[{atom,1531,tuple},{var,1531,'_'},{var,1531,'Es2'}]},
     {var,1531,'St'}],
    [],
    [{call,1532,
      {atom,1532,reject_bin_alias_list},
      [{var,1532,'Es1'},{var,1532,'Es2'},{var,1532,'St'}]}]},
   {clause,1533,
    [{tuple,1533,
      [{atom,1533,record},
       {var,1533,'_'},
       {var,1533,'Name1'},
       {var,1533,'Pfs1'}]},
     {tuple,1533,
      [{atom,1533,record},
       {var,1533,'_'},
       {var,1533,'Name2'},
       {var,1533,'Pfs2'}]},
     {match,1534,
      {tuple,1534,
       [{atom,1534,lint},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'Recs'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'},
        {var,1534,'_'}]},
      {var,1534,'St'}}],
    [],
    [{'case',1535,
      {tuple,1535,
       [{call,1535,
         {remote,1535,{atom,1535,dict},{atom,1535,find}},
         [{var,1535,'Name1'},{var,1535,'Recs'}]},
        {call,1535,
         {remote,1535,{atom,1535,dict},{atom,1535,find}},
         [{var,1535,'Name2'},{var,1535,'Recs'}]}]},
      [{clause,1536,
        [{tuple,1536,
          [{tuple,1536,
            [{atom,1536,ok},
             {tuple,1536,[{var,1536,'_Line1'},{var,1536,'Fields1'}]}]},
           {tuple,1536,
            [{atom,1536,ok},
             {tuple,1536,[{var,1536,'_Line2'},{var,1536,'Fields2'}]}]}]}],
        [],
        [{call,1537,
          {atom,1537,reject_bin_alias_rec},
          [{var,1537,'Pfs1'},
           {var,1537,'Pfs2'},
           {var,1537,'Fields1'},
           {var,1537,'Fields2'},
           {var,1537,'St'}]}]},
       {clause,1538,
        [{tuple,1538,[{var,1538,'_'},{var,1538,'_'}]}],
        [],
        [{var,1541,'St'}]}]}]},
   {clause,1543,
    [{tuple,1543,
      [{atom,1543,match},{var,1543,'_'},{var,1543,'P1'},{var,1543,'P2'}]},
     {var,1543,'P'},
     {var,1543,'St0'}],
    [],
    [{match,1544,
      {var,1544,'St'},
      {call,1544,
       {atom,1544,reject_bin_alias},
       [{var,1544,'P1'},{var,1544,'P'},{var,1544,'St0'}]}},
     {call,1545,
      {atom,1545,reject_bin_alias},
      [{var,1545,'P2'},{var,1545,'P'},{var,1545,'St'}]}]},
   {clause,1546,
    [{var,1546,'P'},
     {match,1546,
      {tuple,1546,
       [{atom,1546,match},{var,1546,'_'},{var,1546,'_'},{var,1546,'_'}]},
      {var,1546,'M'}},
     {var,1546,'St'}],
    [],
    [{call,1547,
      {atom,1547,reject_bin_alias},
      [{var,1547,'M'},{var,1547,'P'},{var,1547,'St'}]}]},
   {clause,1548,
    [{var,1548,'_P1'},{var,1548,'_P2'},{var,1548,'St'}],
    [],
    [{var,1548,'St'}]}]},
 {function,1550,reject_bin_alias_list,3,
  [{clause,1550,
    [{cons,1550,{var,1550,'E1'},{var,1550,'Es1'}},
     {cons,1550,{var,1550,'E2'},{var,1550,'Es2'}},
     {var,1550,'St0'}],
    [],
    [{match,1551,
      {var,1551,'St'},
      {call,1551,
       {atom,1551,reject_bin_alias},
       [{var,1551,'E1'},{var,1551,'E2'},{var,1551,'St0'}]}},
     {call,1552,
      {atom,1552,reject_bin_alias_list},
      [{var,1552,'Es1'},{var,1552,'Es2'},{var,1552,'St'}]}]},
   {clause,1553,
    [{var,1553,'_'},{var,1553,'_'},{var,1553,'St'}],
    [],
    [{var,1553,'St'}]}]},
 {function,1555,reject_bin_alias_rec,5,
  [{clause,1555,
    [{var,1555,'PfsA0'},
     {var,1555,'PfsB0'},
     {var,1555,'FieldsA0'},
     {var,1555,'FieldsB0'},
     {var,1555,'St'}],
    [],
    [{match,1557,
      {var,1557,'PfsA1'},
      {call,1557,{atom,1557,rbia_field_vars},[{var,1557,'PfsA0'}]}},
     {match,1558,
      {var,1558,'PfsB1'},
      {call,1558,{atom,1558,rbia_field_vars},[{var,1558,'PfsB0'}]}},
     {match,1559,
      {var,1559,'FieldsA1'},
      {call,1559,
       {atom,1559,rbia_fields},
       [{call,1559,
         {remote,1559,{atom,1559,lists},{atom,1559,reverse}},
         [{var,1559,'FieldsA0'}]},
        {integer,1559,0},
        {nil,1559}]}},
     {match,1560,
      {var,1560,'FieldsB1'},
      {call,1560,
       {atom,1560,rbia_fields},
       [{call,1560,
         {remote,1560,{atom,1560,lists},{atom,1560,reverse}},
         [{var,1560,'FieldsB0'}]},
        {integer,1560,0},
        {nil,1560}]}},
     {match,1561,
      {var,1561,'FieldsA'},
      {call,1561,
       {remote,1561,{atom,1561,sofs},{atom,1561,relation}},
       [{var,1561,'FieldsA1'}]}},
     {match,1562,
      {var,1562,'PfsA'},
      {call,1562,
       {remote,1562,{atom,1562,sofs},{atom,1562,relation}},
       [{var,1562,'PfsA1'}]}},
     {match,1563,
      {var,1563,'A'},
      {call,1563,
       {remote,1563,{atom,1563,sofs},{atom,1563,join}},
       [{var,1563,'FieldsA'},
        {integer,1563,1},
        {var,1563,'PfsA'},
        {integer,1563,1}]}},
     {match,1564,
      {var,1564,'FieldsB'},
      {call,1564,
       {remote,1564,{atom,1564,sofs},{atom,1564,relation}},
       [{var,1564,'FieldsB1'}]}},
     {match,1565,
      {var,1565,'PfsB'},
      {call,1565,
       {remote,1565,{atom,1565,sofs},{atom,1565,relation}},
       [{var,1565,'PfsB1'}]}},
     {match,1566,
      {var,1566,'B'},
      {call,1566,
       {remote,1566,{atom,1566,sofs},{atom,1566,join}},
       [{var,1566,'FieldsB'},
        {integer,1566,1},
        {var,1566,'PfsB'},
        {integer,1566,1}]}},
     {match,1567,
      {var,1567,'C'},
      {call,1567,
       {remote,1567,{atom,1567,sofs},{atom,1567,join}},
       [{var,1567,'A'},{integer,1567,2},{var,1567,'B'},{integer,1567,2}]}},
     {match,1568,
      {var,1568,'D'},
      {call,1568,
       {remote,1568,{atom,1568,sofs},{atom,1568,projection}},
       [{tuple,1568,
         [{atom,1568,external},
          {'fun',1568,
           {clauses,
            [{clause,1568,
              [{tuple,1568,
                [{var,1568,'_'},
                 {var,1568,'_'},
                 {var,1568,'P1'},
                 {var,1568,'_'},
                 {var,1568,'P2'}]}],
              [],
              [{tuple,1568,[{var,1568,'P1'},{var,1568,'P2'}]}]}]}}]},
        {var,1568,'C'}]}},
     {match,1569,
      {var,1569,'E'},
      {call,1569,
       {remote,1569,{atom,1569,sofs},{atom,1569,to_external}},
       [{var,1569,'D'}]}},
     {match,1570,
      {tuple,1570,[{var,1570,'Ps1'},{var,1570,'Ps2'}]},
      {call,1570,
       {remote,1570,{atom,1570,lists},{atom,1570,unzip}},
       [{var,1570,'E'}]}},
     {call,1571,
      {atom,1571,reject_bin_alias_list},
      [{var,1571,'Ps1'},{var,1571,'Ps2'},{var,1571,'St'}]}]}]},
 {function,1573,rbia_field_vars,1,
  [{clause,1573,
    [{var,1573,'Fs'}],
    [],
    [{lc,1574,
      {tuple,1574,[{var,1574,'Name'},{var,1574,'Pat'}]},
      [{generate,1574,
        {tuple,1574,
         [{atom,1574,record_field},
          {var,1574,'_'},
          {tuple,1574,[{atom,1574,atom},{var,1574,'_'},{var,1574,'Name'}]},
          {var,1574,'Pat'}]},
        {var,1574,'Fs'}}]}]}]},
 {function,1576,rbia_fields,3,
  [{clause,1576,
    [{cons,1576,
      {tuple,1576,
       [{atom,1576,record_field},
        {var,1576,'_'},
        {tuple,1576,[{atom,1576,atom},{var,1576,'_'},{var,1576,'Name'}]},
        {var,1576,'_'}]},
      {var,1576,'Fs'}},
     {var,1576,'I'},
     {var,1576,'Acc'}],
    [],
    [{call,1577,
      {atom,1577,rbia_fields},
      [{var,1577,'Fs'},
       {op,1577,'+',{var,1577,'I'},{integer,1577,1}},
       {cons,1577,
        {tuple,1577,[{var,1577,'Name'},{var,1577,'I'}]},
        {var,1577,'Acc'}}]}]},
   {clause,1578,
    [{cons,1578,{var,1578,'_'},{var,1578,'Fs'}},
     {var,1578,'I'},
     {var,1578,'Acc'}],
    [],
    [{call,1579,
      {atom,1579,rbia_fields},
      [{var,1579,'Fs'},
       {op,1579,'+',{var,1579,'I'},{integer,1579,1}},
       {var,1579,'Acc'}]}]},
   {clause,1580,
    [{nil,1580},{var,1580,'_'},{var,1580,'Acc'}],
    [],
    [{var,1580,'Acc'}]}]},
 {function,1585,is_pattern_expr,1,
  [{clause,1585,
    [{var,1585,'Expr'}],
    [],
    [{'case',1586,
      {call,1586,{atom,1586,is_pattern_expr_1},[{var,1586,'Expr'}]},
      [{clause,1587,[{atom,1587,false}],[],[{atom,1587,false}]},
       {clause,1588,
        [{atom,1588,true}],
        [],
        [{'case',1591,
          {call,1591,
           {remote,1591,{atom,1591,erl_eval},{atom,1591,partial_eval}},
           [{var,1591,'Expr'}]},
          [{clause,1592,
            [{tuple,1592,[{atom,1592,integer},{var,1592,'_'},{var,1592,'_'}]}],
            [],
            [{atom,1592,true}]},
           {clause,1593,
            [{tuple,1593,[{atom,1593,char},{var,1593,'_'},{var,1593,'_'}]}],
            [],
            [{atom,1593,true}]},
           {clause,1594,
            [{tuple,1594,[{atom,1594,float},{var,1594,'_'},{var,1594,'_'}]}],
            [],
            [{atom,1594,true}]},
           {clause,1595,
            [{tuple,1595,[{atom,1595,atom},{var,1595,'_'},{var,1595,'_'}]}],
            [],
            [{atom,1595,true}]},
           {clause,1596,[{var,1596,'_'}],[],[{atom,1596,false}]}]}]}]}]}]},
 {function,1600,is_pattern_expr_1,1,
  [{clause,1600,
    [{tuple,1600,[{atom,1600,char},{var,1600,'_Line'},{var,1600,'_C'}]}],
    [],
    [{atom,1600,true}]},
   {clause,1601,
    [{tuple,1601,[{atom,1601,integer},{var,1601,'_Line'},{var,1601,'_I'}]}],
    [],
    [{atom,1601,true}]},
   {clause,1602,
    [{tuple,1602,[{atom,1602,float},{var,1602,'_Line'},{var,1602,'_F'}]}],
    [],
    [{atom,1602,true}]},
   {clause,1603,
    [{tuple,1603,[{atom,1603,atom},{var,1603,'_Line'},{var,1603,'_A'}]}],
    [],
    [{atom,1603,true}]},
   {clause,1604,
    [{tuple,1604,[{atom,1604,tuple},{var,1604,'_Line'},{var,1604,'Es'}]}],
    [],
    [{call,1605,
      {atom,1605,all},
      [{'fun',1605,{function,is_pattern_expr,1}},{var,1605,'Es'}]}]},
   {clause,1606,
    [{tuple,1606,[{atom,1606,nil},{var,1606,'_Line'}]}],
    [],
    [{atom,1606,true}]},
   {clause,1607,
    [{tuple,1607,
      [{atom,1607,cons},{var,1607,'_Line'},{var,1607,'H'},{var,1607,'T'}]}],
    [],
    [{op,1608,'andalso',
      {call,1608,{atom,1608,is_pattern_expr_1},[{var,1608,'H'}]},
      {call,1608,{atom,1608,is_pattern_expr_1},[{var,1608,'T'}]}}]},
   {clause,1609,
    [{tuple,1609,
      [{atom,1609,op},{var,1609,'_Line'},{var,1609,'Op'},{var,1609,'A'}]}],
    [],
    [{op,1610,'andalso',
      {call,1610,
       {remote,1610,{atom,1610,erl_internal},{atom,1610,arith_op}},
       [{var,1610,'Op'},{integer,1610,1}]},
      {call,1610,{atom,1610,is_pattern_expr_1},[{var,1610,'A'}]}}]},
   {clause,1611,
    [{tuple,1611,
      [{atom,1611,op},
       {var,1611,'_Line'},
       {var,1611,'Op'},
       {var,1611,'A1'},
       {var,1611,'A2'}]}],
    [],
    [{op,1612,'andalso',
      {call,1612,
       {remote,1612,{atom,1612,erl_internal},{atom,1612,arith_op}},
       [{var,1612,'Op'},{integer,1612,2}]},
      {call,1612,
       {atom,1612,all},
       [{'fun',1612,{function,is_pattern_expr,1}},
        {cons,1612,
         {var,1612,'A1'},
         {cons,1612,{var,1612,'A2'},{nil,1612}}}]}}]},
   {clause,1613,[{var,1613,'_Other'}],[],[{atom,1613,false}]}]},
 {function,1615,pattern_map,5,
  [{clause,1615,
    [{var,1615,'Ps'},
     {var,1615,'Vt'},
     {var,1615,'Old'},
     {var,1615,'Bvt'},
     {var,1615,'St'}],
    [],
    [{call,1616,
      {atom,1616,foldl},
      [{'fun',1616,
        {clauses,
         [{clause,1617,
           [{tuple,1617,
             [{atom,1617,map_field_assoc},
              {var,1617,'L'},
              {var,1617,'_'},
              {var,1617,'_'}]},
            {tuple,1617,
             [{var,1617,'Psvt'},{var,1617,'Bvt0'},{var,1617,'St0'}]}],
           [],
           [{tuple,1618,
             [{var,1618,'Psvt'},
              {var,1618,'Bvt0'},
              {call,1618,
               {atom,1618,add_error},
               [{var,1618,'L'},
                {atom,1618,illegal_pattern},
                {var,1618,'St0'}]}]}]},
          {clause,1619,
           [{tuple,1619,
             [{atom,1619,map_field_exact},
              {var,1619,'L'},
              {var,1619,'K'},
              {var,1619,'V'}]},
            {tuple,1619,
             [{var,1619,'Psvt'},{var,1619,'Bvt0'},{var,1619,'St0'}]}],
           [],
           [{'case',1620,
             {call,1620,{atom,1620,is_valid_map_key},[{var,1620,'K'}]},
             [{clause,1621,
               [{atom,1621,true}],
               [],
               [{match,1622,
                 {tuple,1622,[{var,1622,'Kvt'},{var,1622,'St1'}]},
                 {call,1622,
                  {atom,1622,expr},
                  [{var,1622,'K'},{var,1622,'Vt'},{var,1622,'St0'}]}},
                {match,1623,
                 {tuple,1623,
                  [{var,1623,'Vvt'},{var,1623,'Bvt2'},{var,1623,'St2'}]},
                 {call,1623,
                  {atom,1623,pattern},
                  [{var,1623,'V'},
                   {var,1623,'Vt'},
                   {var,1623,'Old'},
                   {var,1623,'Bvt'},
                   {var,1623,'St1'}]}},
                {tuple,1624,
                 [{call,1624,
                   {atom,1624,vtmerge_pat},
                   [{call,1624,
                     {atom,1624,vtmerge_pat},
                     [{var,1624,'Kvt'},{var,1624,'Vvt'}]},
                    {var,1624,'Psvt'}]},
                  {call,1624,
                   {atom,1624,vtmerge_pat},
                   [{var,1624,'Bvt0'},{var,1624,'Bvt2'}]},
                  {var,1624,'St2'}]}]},
              {clause,1625,
               [{atom,1625,false}],
               [],
               [{tuple,1626,
                 [{var,1626,'Psvt'},
                  {var,1626,'Bvt0'},
                  {call,1626,
                   {atom,1626,add_error},
                   [{var,1626,'L'},
                    {atom,1626,illegal_map_key},
                    {var,1626,'St0'}]}]}]}]}]}]}},
       {tuple,1628,[{nil,1628},{nil,1628},{var,1628,'St'}]},
       {var,1628,'Ps'}]}]}]},
 {function,1634,pattern_bin,5,
  [{clause,1634,
    [{var,1634,'Es'},
     {var,1634,'Vt'},
     {var,1634,'Old'},
     {var,1634,'Bvt0'},
     {var,1634,'St0'}],
    [],
    [{match,1635,
      {tuple,1635,
       [{var,1635,'_Sz'},{var,1635,'Esvt'},{var,1635,'Bvt'},{var,1635,'St1'}]},
      {call,1635,
       {atom,1635,foldl},
       [{'fun',1635,
         {clauses,
          [{clause,1635,
            [{var,1635,'E'},{var,1635,'Acc'}],
            [],
            [{call,1636,
              {atom,1636,pattern_element},
              [{var,1636,'E'},
               {var,1636,'Vt'},
               {var,1636,'Old'},
               {var,1636,'Acc'}]}]}]}},
        {tuple,1638,
         [{integer,1638,0},{nil,1638},{var,1638,'Bvt0'},{var,1638,'St0'}]},
        {var,1638,'Es'}]}},
     {tuple,1639,[{var,1639,'Esvt'},{var,1639,'Bvt'},{var,1639,'St1'}]}]}]},
 {function,1641,pattern_element,4,
  [{clause,1641,
    [{match,1641,
      {tuple,1641,
       [{atom,1641,bin_element},
        {var,1641,'Line'},
        {tuple,1641,[{atom,1641,string},{var,1641,'_'},{var,1641,'_'}]},
        {var,1641,'Size'},
        {var,1641,'Ts'}]},
      {var,1641,'Be'}},
     {var,1641,'Vt'},
     {var,1642,'Old'},
     {match,1642,
      {tuple,1642,
       [{var,1642,'Sz'},{var,1642,'Esvt'},{var,1642,'Bvt'},{var,1642,'St0'}]},
      {var,1642,'Acc'}}],
    [],
    [{'case',1643,
      {call,1643,
       {atom,1643,good_string_size_type},
       [{var,1643,'Size'},{var,1643,'Ts'}]},
      [{clause,1644,
        [{atom,1644,true}],
        [],
        [{call,1645,
          {atom,1645,pattern_element_1},
          [{var,1645,'Be'},
           {var,1645,'Vt'},
           {var,1645,'Old'},
           {var,1645,'Acc'}]}]},
       {clause,1646,
        [{atom,1646,false}],
        [],
        [{match,1647,
          {var,1647,'St'},
          {call,1647,
           {atom,1647,add_error},
           [{var,1647,'Line'},
            {atom,1647,typed_literal_string},
            {var,1647,'St0'}]}},
         {tuple,1648,
          [{var,1648,'Sz'},
           {var,1648,'Esvt'},
           {var,1648,'Bvt'},
           {var,1648,'St'}]}]}]}]},
   {clause,1650,
    [{var,1650,'Be'},{var,1650,'Vt'},{var,1650,'Old'},{var,1650,'Acc'}],
    [],
    [{call,1651,
      {atom,1651,pattern_element_1},
      [{var,1651,'Be'},{var,1651,'Vt'},{var,1651,'Old'},{var,1651,'Acc'}]}]}]},
 {function,1653,pattern_element_1,4,
  [{clause,1653,
    [{tuple,1653,
      [{atom,1653,bin_element},
       {var,1653,'Line'},
       {var,1653,'E'},
       {var,1653,'Sz0'},
       {var,1653,'Ts'}]},
     {var,1653,'Vt'},
     {var,1653,'Old'},
     {tuple,1653,
      [{var,1653,'Size0'},
       {var,1653,'Esvt'},
       {var,1653,'Bvt'},
       {var,1653,'St0'}]}],
    [],
    [{match,1654,
      {tuple,1654,[{var,1654,'Pevt'},{var,1654,'Bvt1'},{var,1654,'St1'}]},
      {call,1654,
       {atom,1654,pat_bit_expr},
       [{var,1654,'E'},{var,1654,'Old'},{var,1654,'Bvt'},{var,1654,'St0'}]}},
     {match,1656,
      {tuple,1656,
       [{var,1656,'Sz1'},
        {var,1656,'Szvt'},
        {var,1656,'Bvt2'},
        {var,1656,'St2'}]},
      {call,1656,
       {atom,1656,pat_bit_size},
       [{var,1656,'Sz0'},
        {call,1656,{atom,1656,vtmerge},[{var,1656,'Vt'},{var,1656,'Esvt'}]},
        {var,1656,'Bvt'},
        {var,1656,'St1'}]}},
     {match,1657,
      {tuple,1657,[{var,1657,'Sz2'},{var,1657,'Bt'},{var,1657,'St3'}]},
      {call,1657,
       {atom,1657,bit_type},
       [{var,1657,'Line'},{var,1657,'Sz1'},{var,1657,'Ts'},{var,1657,'St2'}]}},
     {match,1658,
      {tuple,1658,[{var,1658,'Sz3'},{var,1658,'St4'}]},
      {call,1658,
       {atom,1658,bit_size_check},
       [{var,1658,'Line'},{var,1658,'Sz2'},{var,1658,'Bt'},{var,1658,'St3'}]}},
     {match,1659,
      {var,1659,'Sz4'},
      {'case',1659,
       {tuple,1659,[{var,1659,'E'},{var,1659,'Sz3'}]},
       [{clause,1660,
         [{tuple,1660,
           [{tuple,1660,[{atom,1660,string},{var,1660,'_'},{var,1660,'S'}]},
            {atom,1660,all}]}],
         [],
         [{op,1660,'*',
           {integer,1660,8},
           {call,1660,{atom,1660,length},[{var,1660,'S'}]}}]},
        {clause,1661,
         [{tuple,1661,[{var,1661,'_'},{var,1661,'_'}]}],
         [],
         [{var,1661,'Sz3'}]}]}},
     {match,1663,
      {tuple,1663,[{var,1663,'Size1'},{var,1663,'St5'}]},
      {call,1663,
       {atom,1663,add_bit_size},
       [{var,1663,'Line'},
        {var,1663,'Sz4'},
        {var,1663,'Size0'},
        {atom,1663,false},
        {var,1663,'St4'}]}},
     {tuple,1664,
      [{var,1664,'Size1'},
       {call,1664,
        {atom,1664,vtmerge},
        [{var,1664,'Szvt'},
         {call,1664,
          {atom,1664,vtmerge},
          [{var,1664,'Pevt'},{var,1664,'Esvt'}]}]},
       {call,1665,
        {atom,1665,vtmerge},
        [{var,1665,'Bvt2'},
         {call,1665,
          {atom,1665,vtmerge},
          [{var,1665,'Bvt'},{var,1665,'Bvt1'}]}]},
       {var,1665,'St5'}]}]}]},
 {function,1667,good_string_size_type,2,
  [{clause,1667,
    [{atom,1667,default},{atom,1667,default}],
    [],
    [{atom,1668,true}]},
   {clause,1669,
    [{atom,1669,default},{var,1669,'Ts'}],
    [],
    [{call,1670,
      {remote,1670,{atom,1670,lists},{atom,1670,any}},
      [{'fun',1670,
        {clauses,
         [{clause,1670,[{atom,1670,utf8}],[],[{atom,1670,true}]},
          {clause,1671,[{atom,1671,utf16}],[],[{atom,1671,true}]},
          {clause,1672,[{atom,1672,utf32}],[],[{atom,1672,true}]},
          {clause,1673,[{var,1673,'_'}],[],[{atom,1673,false}]}]}},
       {var,1674,'Ts'}]}]},
   {clause,1675,[{var,1675,'_'},{var,1675,'_'}],[],[{atom,1675,false}]}]},
 {function,1681,pat_bit_expr,4,
  [{clause,1681,
    [{tuple,1681,[{atom,1681,var},{var,1681,'_'},{atom,1681,'_'}]},
     {var,1681,'_Old'},
     {var,1681,'_Bvt'},
     {var,1681,'St'}],
    [],
    [{tuple,1681,[{nil,1681},{nil,1681},{var,1681,'St'}]}]},
   {clause,1682,
    [{tuple,1682,[{atom,1682,var},{var,1682,'Ln'},{var,1682,'V'}]},
     {var,1682,'Old'},
     {var,1682,'Bvt'},
     {var,1682,'St'}],
    [],
    [{call,1682,
      {atom,1682,pat_var},
      [{var,1682,'V'},
       {var,1682,'Ln'},
       {var,1682,'Old'},
       {var,1682,'Bvt'},
       {var,1682,'St'}]}]},
   {clause,1683,
    [{tuple,1683,[{atom,1683,string},{var,1683,'_'},{var,1683,'_'}]},
     {var,1683,'_Old'},
     {var,1683,'_Bvt'},
     {var,1683,'St'}],
    [],
    [{tuple,1683,[{nil,1683},{nil,1683},{var,1683,'St'}]}]},
   {clause,1684,
    [{tuple,1684,[{atom,1684,bin},{var,1684,'L'},{var,1684,'_'}]},
     {var,1684,'_Old'},
     {var,1684,'_Bvt'},
     {var,1684,'St'}],
    [],
    [{tuple,1685,
      [{nil,1685},
       {nil,1685},
       {call,1685,
        {atom,1685,add_error},
        [{var,1685,'L'},{atom,1685,illegal_pattern},{var,1685,'St'}]}]}]},
   {clause,1686,
    [{var,1686,'P'},{var,1686,'_Old'},{var,1686,'_Bvt'},{var,1686,'St'}],
    [],
    [{'case',1687,
      {call,1687,{atom,1687,is_pattern_expr},[{var,1687,'P'}]},
      [{clause,1688,
        [{atom,1688,true}],
        [],
        [{tuple,1688,[{nil,1688},{nil,1688},{var,1688,'St'}]}]},
       {clause,1689,
        [{atom,1689,false}],
        [],
        [{tuple,1689,
          [{nil,1689},
           {nil,1689},
           {call,1689,
            {atom,1689,add_error},
            [{call,1689,{atom,1689,element},[{integer,1689,2},{var,1689,'P'}]},
             {atom,1689,illegal_pattern},
             {var,1689,'St'}]}]}]}]}]}]},
 {function,1696,pat_bit_size,4,
  [{clause,1696,
    [{atom,1696,default},{var,1696,'_Vt'},{var,1696,'_Bvt'},{var,1696,'St'}],
    [],
    [{tuple,1696,
      [{atom,1696,default},{nil,1696},{nil,1696},{var,1696,'St'}]}]},
   {clause,1697,
    [{tuple,1697,[{atom,1697,atom},{var,1697,'_Line'},{atom,1697,all}]},
     {var,1697,'_Vt'},
     {var,1697,'_Bvt'},
     {var,1697,'St'}],
    [],
    [{tuple,1697,[{atom,1697,all},{nil,1697},{nil,1697},{var,1697,'St'}]}]},
   {clause,1698,
    [{tuple,1698,[{atom,1698,var},{var,1698,'Lv'},{var,1698,'V'}]},
     {var,1698,'Vt0'},
     {var,1698,'Bvt0'},
     {var,1698,'St0'}],
    [],
    [{match,1699,
      {tuple,1699,[{var,1699,'Vt'},{var,1699,'Bvt'},{var,1699,'St1'}]},
      {call,1699,
       {atom,1699,pat_binsize_var},
       [{var,1699,'V'},
        {var,1699,'Lv'},
        {var,1699,'Vt0'},
        {var,1699,'Bvt0'},
        {var,1699,'St0'}]}},
     {tuple,1700,
      [{atom,1700,unknown},
       {var,1700,'Vt'},
       {var,1700,'Bvt'},
       {var,1700,'St1'}]}]},
   {clause,1701,
    [{var,1701,'Size'},{var,1701,'_Vt'},{var,1701,'_Bvt'},{var,1701,'St'}],
    [],
    [{match,1702,
      {var,1702,'Line'},
      {call,1702,{atom,1702,element},[{integer,1702,2},{var,1702,'Size'}]}},
     {'case',1703,
      {call,1703,{atom,1703,is_pattern_expr},[{var,1703,'Size'}]},
      [{clause,1704,
        [{atom,1704,true}],
        [],
        [{'case',1705,
          {call,1705,
           {remote,1705,{atom,1705,erl_eval},{atom,1705,partial_eval}},
           [{var,1705,'Size'}]},
          [{clause,1706,
            [{tuple,1706,
              [{atom,1706,integer},{var,1706,'Line'},{var,1706,'I'}]}],
            [],
            [{tuple,1706,
              [{var,1706,'I'},{nil,1706},{nil,1706},{var,1706,'St'}]}]},
           {clause,1707,
            [{var,1707,'_Other'}],
            [],
            [{tuple,1707,
              [{atom,1707,unknown},
               {nil,1707},
               {nil,1707},
               {call,1707,
                {atom,1707,add_error},
                [{var,1707,'Line'},
                 {atom,1707,illegal_bitsize},
                 {var,1707,'St'}]}]}]}]}]},
       {clause,1709,
        [{atom,1709,false}],
        [],
        [{tuple,1709,
          [{atom,1709,unknown},
           {nil,1709},
           {nil,1709},
           {call,1709,
            {atom,1709,add_error},
            [{var,1709,'Line'},
             {atom,1709,illegal_bitsize},
             {var,1709,'St'}]}]}]}]}]}]},
 {function,1715,expr_bin,4,
  [{clause,1715,
    [{var,1715,'Es'},{var,1715,'Vt'},{var,1715,'St0'},{var,1715,'Check'}],
    [],
    [{match,1716,
      {tuple,1716,[{var,1716,'_Sz'},{var,1716,'Esvt'},{var,1716,'St1'}]},
      {call,1716,
       {atom,1716,foldl},
       [{'fun',1716,
         {clauses,
          [{clause,1716,
            [{var,1716,'E'},{var,1716,'Acc'}],
            [],
            [{call,1716,
              {atom,1716,bin_element},
              [{var,1716,'E'},
               {var,1716,'Vt'},
               {var,1716,'Acc'},
               {var,1716,'Check'}]}]}]}},
        {tuple,1717,[{integer,1717,0},{nil,1717},{var,1717,'St0'}]},
        {var,1717,'Es'}]}},
     {tuple,1718,[{var,1718,'Esvt'},{var,1718,'St1'}]}]}]},
 {function,1720,bin_element,4,
  [{clause,1720,
    [{tuple,1720,
      [{atom,1720,bin_element},
       {var,1720,'Line'},
       {var,1720,'E'},
       {var,1720,'Sz0'},
       {var,1720,'Ts'}]},
     {var,1720,'Vt'},
     {tuple,1720,[{var,1720,'Size0'},{var,1720,'Esvt'},{var,1720,'St0'}]},
     {var,1720,'Check'}],
    [],
    [{match,1721,
      {tuple,1721,[{var,1721,'Vt1'},{var,1721,'St1'}]},
      {call,1721,
       {var,1721,'Check'},
       [{var,1721,'E'},{var,1721,'Vt'},{var,1721,'St0'}]}},
     {match,1722,
      {tuple,1722,[{var,1722,'Sz1'},{var,1722,'Vt2'},{var,1722,'St2'}]},
      {call,1722,
       {atom,1722,bit_size},
       [{var,1722,'Sz0'},
        {var,1722,'Vt'},
        {var,1722,'St1'},
        {var,1722,'Check'}]}},
     {match,1723,
      {tuple,1723,[{var,1723,'Sz2'},{var,1723,'Bt'},{var,1723,'St3'}]},
      {call,1723,
       {atom,1723,bit_type},
       [{var,1723,'Line'},{var,1723,'Sz1'},{var,1723,'Ts'},{var,1723,'St2'}]}},
     {match,1724,
      {tuple,1724,[{var,1724,'Sz3'},{var,1724,'St4'}]},
      {call,1724,
       {atom,1724,bit_size_check},
       [{var,1724,'Line'},{var,1724,'Sz2'},{var,1724,'Bt'},{var,1724,'St3'}]}},
     {match,1725,
      {tuple,1725,[{var,1725,'Size1'},{var,1725,'St5'}]},
      {call,1725,
       {atom,1725,add_bit_size},
       [{var,1725,'Line'},
        {var,1725,'Sz3'},
        {var,1725,'Size0'},
        {atom,1725,true},
        {var,1725,'St4'}]}},
     {tuple,1726,
      [{var,1726,'Size1'},
       {call,1726,
        {atom,1726,vtmerge},
        [{cons,1726,
          {var,1726,'Vt2'},
          {cons,1726,
           {var,1726,'Vt1'},
           {cons,1726,{var,1726,'Esvt'},{nil,1726}}}}]},
       {var,1726,'St5'}]}]}]},
 {function,1728,bit_size,4,
  [{clause,1728,
    [{atom,1728,default},{var,1728,'_Vt'},{var,1728,'St'},{var,1728,'_Check'}],
    [],
    [{tuple,1728,[{atom,1728,default},{nil,1728},{var,1728,'St'}]}]},
   {clause,1729,
    [{tuple,1729,[{atom,1729,atom},{var,1729,'_Line'},{atom,1729,all}]},
     {var,1729,'_Vt'},
     {var,1729,'St'},
     {var,1729,'_Check'}],
    [],
    [{tuple,1729,[{atom,1729,all},{nil,1729},{var,1729,'St'}]}]},
   {clause,1730,
    [{var,1730,'Size'},{var,1730,'Vt'},{var,1730,'St'},{var,1730,'Check'}],
    [],
    [{'case',1733,
      {call,1733,
       {atom,1733,is_gexpr},
       [{var,1733,'Size'},
        {call,1733,
         {remote,1733,{atom,1733,erlang},{atom,1733,element}},
         [{integer,1733,8},{var,1733,'St'}]}]},
      [{clause,1734,
        [{atom,1734,true}],
        [],
        [{'case',1735,
          {call,1735,
           {remote,1735,{atom,1735,erl_eval},{atom,1735,partial_eval}},
           [{var,1735,'Size'}]},
          [{clause,1736,
            [{tuple,1736,
              [{atom,1736,integer},{var,1736,'_ILn'},{var,1736,'I'}]}],
            [],
            [{tuple,1736,[{var,1736,'I'},{nil,1736},{var,1736,'St'}]}]},
           {clause,1737,
            [{var,1737,'_Other'}],
            [],
            [{match,1738,
              {tuple,1738,[{var,1738,'Evt'},{var,1738,'St1'}]},
              {call,1738,
               {var,1738,'Check'},
               [{var,1738,'Size'},{var,1738,'Vt'},{var,1738,'St'}]}},
             {tuple,1739,
              [{atom,1739,unknown},{var,1739,'Evt'},{var,1739,'St1'}]}]}]}]},
       {clause,1741,
        [{atom,1741,false}],
        [],
        [{match,1742,
          {tuple,1742,[{var,1742,'Evt'},{var,1742,'St1'}]},
          {call,1742,
           {var,1742,'Check'},
           [{var,1742,'Size'},{var,1742,'Vt'},{var,1742,'St'}]}},
         {tuple,1743,
          [{atom,1743,unknown},{var,1743,'Evt'},{var,1743,'St1'}]}]}]}]}]},
 {function,1749,bit_type,4,
  [{clause,1749,
    [{var,1749,'Line'},{var,1749,'Size0'},{var,1749,'Type'},{var,1749,'St'}],
    [],
    [{'case',1750,
      {call,1750,
       {remote,1750,{atom,1750,erl_bits},{atom,1750,set_bit_type}},
       [{var,1750,'Size0'},{var,1750,'Type'}]},
      [{clause,1751,
        [{tuple,1751,[{atom,1751,ok},{var,1751,'Size1'},{var,1751,'Bt'}]}],
        [],
        [{tuple,1751,[{var,1751,'Size1'},{var,1751,'Bt'},{var,1751,'St'}]}]},
       {clause,1752,
        [{tuple,1752,[{atom,1752,error},{var,1752,'What'}]}],
        [],
        [{match,1754,
          {tuple,1754,[{atom,1754,ok},{var,1754,'Size1'},{var,1754,'Bt'}]},
          {call,1754,
           {remote,1754,{atom,1754,erl_bits},{atom,1754,set_bit_type}},
           [{atom,1754,default},{nil,1754}]}},
         {tuple,1755,
          [{var,1755,'Size1'},
           {var,1755,'Bt'},
           {call,1755,
            {atom,1755,add_error},
            [{var,1755,'Line'},{var,1755,'What'},{var,1755,'St'}]}]}]}]}]}]},
 {function,1762,bit_size_check,4,
  [{clause,1762,
    [{var,1762,'_Line'},{atom,1762,unknown},{var,1762,'_'},{var,1762,'St'}],
    [],
    [{tuple,1762,[{atom,1762,unknown},{var,1762,'St'}]}]},
   {clause,1763,
    [{var,1763,'_Line'},
     {atom,1763,undefined},
     {tuple,1763,
      [{atom,1763,bittype},
       {var,1763,'Type'},
       {var,1763,'_'},
       {var,1763,'_'},
       {var,1763,'_'}]},
     {var,1763,'St'}],
    [],
    [{match,1764,
      {atom,1764,true},
      {op,1764,'or',
       {op,1764,'or',
        {op,1764,'=:=',{var,1764,'Type'},{atom,1764,utf8}},
        {op,1764,'=:=',{var,1764,'Type'},{atom,1764,utf16}}},
       {op,1764,'=:=',{var,1764,'Type'},{atom,1764,utf32}}}},
     {tuple,1765,[{atom,1765,undefined},{var,1765,'St'}]}]},
   {clause,1766,
    [{var,1766,'Line'},
     {atom,1766,all},
     {tuple,1766,
      [{atom,1766,bittype},
       {var,1766,'Type'},
       {var,1766,'_'},
       {var,1766,'_'},
       {var,1766,'_'}]},
     {var,1766,'St'}],
    [],
    [{'case',1767,
      {var,1767,'Type'},
      [{clause,1768,
        [{atom,1768,binary}],
        [],
        [{tuple,1768,[{atom,1768,all},{var,1768,'St'}]}]},
       {clause,1769,
        [{var,1769,'_'}],
        [],
        [{tuple,1769,
          [{atom,1769,unknown},
           {call,1769,
            {atom,1769,add_error},
            [{var,1769,'Line'},
             {atom,1769,illegal_bitsize},
             {var,1769,'St'}]}]}]}]}]},
   {clause,1771,
    [{var,1771,'Line'},
     {var,1771,'Size'},
     {tuple,1771,
      [{atom,1771,bittype},
       {var,1771,'Type'},
       {var,1771,'Unit'},
       {var,1771,'_'},
       {var,1771,'_'}]},
     {var,1771,'St'}],
    [],
    [{match,1772,
      {var,1772,'Sz'},
      {op,1772,'*',{var,1772,'Unit'},{var,1772,'Size'}}},
     {match,1773,
      {var,1773,'St2'},
      {call,1773,
       {atom,1773,elemtype_check},
       [{var,1773,'Line'},{var,1773,'Type'},{var,1773,'Sz'},{var,1773,'St'}]}},
     {tuple,1774,[{var,1774,'Sz'},{var,1774,'St2'}]}]}]},
 {function,1776,elemtype_check,4,
  [{clause,1776,
    [{var,1776,'_Line'},{atom,1776,float},{integer,1776,32},{var,1776,'St'}],
    [],
    [{var,1776,'St'}]},
   {clause,1777,
    [{var,1777,'_Line'},{atom,1777,float},{integer,1777,64},{var,1777,'St'}],
    [],
    [{var,1777,'St'}]},
   {clause,1778,
    [{var,1778,'Line'},{atom,1778,float},{var,1778,'_Size'},{var,1778,'St'}],
    [],
    [{call,1779,
      {atom,1779,add_warning},
      [{var,1779,'Line'},
       {tuple,1779,[{atom,1779,bad_bitsize},{string,1779,"float"}]},
       {var,1779,'St'}]}]},
   {clause,1780,
    [{var,1780,'_Line'},{var,1780,'_Type'},{var,1780,'_Size'},{var,1780,'St'}],
    [],
    [{var,1780,'St'}]}]},
 {function,1786,add_bit_size,5,
  [{clause,1786,
    [{var,1786,'Line'},
     {var,1786,'_Sz1'},
     {atom,1786,all},
     {atom,1786,false},
     {var,1786,'St'}],
    [],
    [{tuple,1787,
      [{atom,1787,all},
       {call,1787,
        {atom,1787,add_error},
        [{var,1787,'Line'},
         {atom,1787,unsized_binary_not_at_end},
         {var,1787,'St'}]}]}]},
   {clause,1788,
    [{var,1788,'_Line'},
     {var,1788,'_Sz1'},
     {atom,1788,all},
     {atom,1788,true},
     {var,1788,'St'}],
    [],
    [{tuple,1789,[{atom,1789,all},{var,1789,'St'}]}]},
   {clause,1790,
    [{var,1790,'_Line'},
     {atom,1790,all},
     {var,1790,'_Sz2'},
     {var,1790,'_B'},
     {var,1790,'St'}],
    [],
    [{tuple,1790,[{atom,1790,all},{var,1790,'St'}]}]},
   {clause,1791,
    [{var,1791,'_Line'},
     {atom,1791,undefined},
     {var,1791,'_Sz2'},
     {var,1791,'_B'},
     {var,1791,'St'}],
    [],
    [{tuple,1791,[{atom,1791,undefined},{var,1791,'St'}]}]},
   {clause,1792,
    [{var,1792,'_Line'},
     {atom,1792,unknown},
     {var,1792,'_Sz2'},
     {var,1792,'_B'},
     {var,1792,'St'}],
    [],
    [{tuple,1792,[{atom,1792,unknown},{var,1792,'St'}]}]},
   {clause,1793,
    [{var,1793,'_Line'},
     {var,1793,'_Sz1'},
     {atom,1793,undefined},
     {var,1793,'_B'},
     {var,1793,'St'}],
    [],
    [{tuple,1793,[{atom,1793,unknown},{var,1793,'St'}]}]},
   {clause,1794,
    [{var,1794,'_Line'},
     {var,1794,'_Sz1'},
     {atom,1794,unknown},
     {var,1794,'_B'},
     {var,1794,'St'}],
    [],
    [{tuple,1794,[{atom,1794,unknown},{var,1794,'St'}]}]},
   {clause,1795,
    [{var,1795,'_Line'},
     {var,1795,'Sz1'},
     {var,1795,'Sz2'},
     {var,1795,'_B'},
     {var,1795,'St'}],
    [],
    [{tuple,1795,
      [{op,1795,'+',{var,1795,'Sz1'},{var,1795,'Sz2'}},{var,1795,'St'}]}]}]},
 {function,1802,guard,3,
  [{clause,1802,
    [{cons,1802,{var,1802,'L'},{var,1802,'R'}},
     {var,1802,'Vt'},
     {var,1802,'St0'}],
    [[{call,1802,{atom,1802,is_list},[{var,1802,'L'}]}]],
    [{match,1803,
      {tuple,1803,[{var,1803,'Gvt'},{var,1803,'St1'}]},
      {call,1803,
       {atom,1803,guard_tests},
       [{var,1803,'L'},{var,1803,'Vt'},{var,1803,'St0'}]}},
     {match,1804,
      {tuple,1804,[{var,1804,'Gsvt'},{var,1804,'St2'}]},
      {call,1804,
       {atom,1804,guard},
       [{var,1804,'R'},
        {call,1804,{atom,1804,vtupdate},[{var,1804,'Gvt'},{var,1804,'Vt'}]},
        {var,1804,'St1'}]}},
     {tuple,1805,
      [{call,1805,{atom,1805,vtupdate},[{var,1805,'Gvt'},{var,1805,'Gsvt'}]},
       {var,1805,'St2'}]}]},
   {clause,1806,
    [{var,1806,'L'},{var,1806,'Vt'},{var,1806,'St0'}],
    [],
    [{call,1807,
      {atom,1807,guard_tests},
      [{var,1807,'L'},{var,1807,'Vt'},{var,1807,'St0'}]}]}]},
 {function,1810,guard_tests,3,
  [{clause,1810,
    [{cons,1810,{var,1810,'G'},{var,1810,'Gs'}},
     {var,1810,'Vt'},
     {var,1810,'St0'}],
    [],
    [{match,1811,
      {tuple,1811,[{var,1811,'Gvt'},{var,1811,'St1'}]},
      {call,1811,
       {atom,1811,guard_test},
       [{var,1811,'G'},{var,1811,'Vt'},{var,1811,'St0'}]}},
     {match,1812,
      {tuple,1812,[{var,1812,'Gsvt'},{var,1812,'St2'}]},
      {call,1812,
       {atom,1812,guard_tests},
       [{var,1812,'Gs'},
        {call,1812,{atom,1812,vtupdate},[{var,1812,'Gvt'},{var,1812,'Vt'}]},
        {var,1812,'St1'}]}},
     {tuple,1813,
      [{call,1813,{atom,1813,vtupdate},[{var,1813,'Gvt'},{var,1813,'Gsvt'}]},
       {var,1813,'St2'}]}]},
   {clause,1814,
    [{nil,1814},{var,1814,'_Vt'},{var,1814,'St'}],
    [],
    [{tuple,1814,[{nil,1814},{var,1814,'St'}]}]}]},
 {function,1822,guard_test,3,
  [{clause,1822,
    [{var,1822,'G'},{var,1822,'Vt'},{var,1822,'St0'}],
    [],
    [{match,1823,
      {var,1823,'St1'},
      {call,1823,
       {atom,1823,obsolete_guard},
       [{var,1823,'G'},{var,1823,'St0'}]}},
     {call,1824,
      {atom,1824,guard_test2},
      [{var,1824,'G'},{var,1824,'Vt'},{var,1824,'St1'}]}]}]},
 {function,1827,guard_test2,3,
  [{clause,1827,
    [{tuple,1827,
      [{atom,1827,call},
       {var,1827,'Line'},
       {tuple,1827,[{atom,1827,atom},{var,1827,'Lr'},{atom,1827,record}]},
       {cons,1827,{var,1827,'E'},{cons,1827,{var,1827,'A'},{nil,1827}}}]},
     {var,1827,'Vt'},
     {var,1827,'St0'}],
    [],
    [{call,1828,
      {atom,1828,gexpr},
      [{tuple,1828,
        [{atom,1828,call},
         {var,1828,'Line'},
         {tuple,1828,[{atom,1828,atom},{var,1828,'Lr'},{atom,1828,is_record}]},
         {cons,1828,{var,1828,'E'},{cons,1828,{var,1828,'A'},{nil,1828}}}]},
       {var,1828,'Vt'},
       {var,1828,'St0'}]}]},
   {clause,1829,
    [{match,1829,
      {tuple,1829,
       [{atom,1829,call},
        {var,1829,'Line'},
        {tuple,1829,[{atom,1829,atom},{var,1829,'_La'},{var,1829,'F'}]},
        {var,1829,'As'}]},
      {var,1829,'G'}},
     {var,1829,'Vt'},
     {var,1829,'St0'}],
    [],
    [{match,1830,
      {tuple,1830,[{var,1830,'Asvt'},{var,1830,'St1'}]},
      {call,1830,
       {atom,1830,gexpr_list},
       [{var,1830,'As'},{var,1830,'Vt'},{var,1830,'St0'}]}},
     {match,1831,
      {var,1831,'A'},
      {call,1831,{atom,1831,length},[{var,1831,'As'}]}},
     {'case',1832,
      {call,1832,
       {remote,1832,{atom,1832,erl_internal},{atom,1832,type_test}},
       [{var,1832,'F'},{var,1832,'A'}]},
      [{clause,1833,
        [{atom,1833,true}],
        [[{op,1833,'=/=',{var,1833,'F'},{atom,1833,is_record}},
          {op,1833,'=/=',{var,1833,'A'},{integer,1833,2}}]],
        [{'case',1834,
          {call,1834,
           {atom,1834,no_guard_bif_clash},
           [{var,1834,'St1'},{tuple,1834,[{var,1834,'F'},{var,1834,'A'}]}]},
          [{clause,1835,
            [{atom,1835,false}],
            [],
            [{tuple,1836,
              [{var,1836,'Asvt'},
               {call,1836,
                {atom,1836,add_error},
                [{var,1836,'Line'},
                 {tuple,1836,
                  [{atom,1836,illegal_guard_local_call},
                   {tuple,1836,[{var,1836,'F'},{var,1836,'A'}]}]},
                 {var,1836,'St1'}]}]}]},
           {clause,1837,
            [{atom,1837,true}],
            [],
            [{tuple,1838,[{var,1838,'Asvt'},{var,1838,'St1'}]}]}]}]},
       {clause,1840,
        [{var,1840,'_'}],
        [],
        [{call,1841,
          {atom,1841,gexpr},
          [{var,1841,'G'},{var,1841,'Vt'},{var,1841,'St0'}]}]}]}]},
   {clause,1843,
    [{var,1843,'G'},{var,1843,'Vt'},{var,1843,'St'}],
    [],
    [{call,1845,
      {atom,1845,gexpr},
      [{var,1845,'G'},{var,1845,'Vt'},{var,1845,'St'}]}]}]},
 {function,1851,gexpr,3,
  [{clause,1851,
    [{tuple,1851,[{atom,1851,var},{var,1851,'Line'},{var,1851,'V'}]},
     {var,1851,'Vt'},
     {var,1851,'St'}],
    [],
    [{call,1852,
      {atom,1852,expr_var},
      [{var,1852,'V'},{var,1852,'Line'},{var,1852,'Vt'},{var,1852,'St'}]}]},
   {clause,1853,
    [{tuple,1853,[{atom,1853,char},{var,1853,'_Line'},{var,1853,'_C'}]},
     {var,1853,'_Vt'},
     {var,1853,'St'}],
    [],
    [{tuple,1853,[{nil,1853},{var,1853,'St'}]}]},
   {clause,1854,
    [{tuple,1854,[{atom,1854,integer},{var,1854,'_Line'},{var,1854,'_I'}]},
     {var,1854,'_Vt'},
     {var,1854,'St'}],
    [],
    [{tuple,1854,[{nil,1854},{var,1854,'St'}]}]},
   {clause,1855,
    [{tuple,1855,[{atom,1855,float},{var,1855,'_Line'},{var,1855,'_F'}]},
     {var,1855,'_Vt'},
     {var,1855,'St'}],
    [],
    [{tuple,1855,[{nil,1855},{var,1855,'St'}]}]},
   {clause,1856,
    [{tuple,1856,[{atom,1856,atom},{var,1856,'Line'},{var,1856,'A'}]},
     {var,1856,'_Vt'},
     {var,1856,'St'}],
    [],
    [{tuple,1857,
      [{nil,1857},
       {call,1857,
        {atom,1857,keyword_warning},
        [{var,1857,'Line'},{var,1857,'A'},{var,1857,'St'}]}]}]},
   {clause,1858,
    [{tuple,1858,[{atom,1858,string},{var,1858,'_Line'},{var,1858,'_S'}]},
     {var,1858,'_Vt'},
     {var,1858,'St'}],
    [],
    [{tuple,1858,[{nil,1858},{var,1858,'St'}]}]},
   {clause,1859,
    [{tuple,1859,[{atom,1859,nil},{var,1859,'_Line'}]},
     {var,1859,'_Vt'},
     {var,1859,'St'}],
    [],
    [{tuple,1859,[{nil,1859},{var,1859,'St'}]}]},
   {clause,1860,
    [{tuple,1860,
      [{atom,1860,cons},{var,1860,'_Line'},{var,1860,'H'},{var,1860,'T'}]},
     {var,1860,'Vt'},
     {var,1860,'St'}],
    [],
    [{call,1861,
      {atom,1861,gexpr_list},
      [{cons,1861,{var,1861,'H'},{cons,1861,{var,1861,'T'},{nil,1861}}},
       {var,1861,'Vt'},
       {var,1861,'St'}]}]},
   {clause,1862,
    [{tuple,1862,[{atom,1862,tuple},{var,1862,'_Line'},{var,1862,'Es'}]},
     {var,1862,'Vt'},
     {var,1862,'St'}],
    [],
    [{call,1863,
      {atom,1863,gexpr_list},
      [{var,1863,'Es'},{var,1863,'Vt'},{var,1863,'St'}]}]},
   {clause,1864,
    [{tuple,1864,[{atom,1864,map},{var,1864,'_Line'},{var,1864,'Es'}]},
     {var,1864,'Vt'},
     {var,1864,'St'}],
    [],
    [{call,1865,
      {atom,1865,map_fields},
      [{var,1865,'Es'},
       {var,1865,'Vt'},
       {call,1865,
        {atom,1865,check_assoc_fields},
        [{var,1865,'Es'},{var,1865,'St'}]},
       {'fun',1865,{function,gexpr_list,3}}]}]},
   {clause,1866,
    [{tuple,1866,
      [{atom,1866,map},{var,1866,'_Line'},{var,1866,'Src'},{var,1866,'Es'}]},
     {var,1866,'Vt'},
     {var,1866,'St'}],
    [],
    [{match,1867,
      {tuple,1867,[{var,1867,'Svt'},{var,1867,'St1'}]},
      {call,1867,
       {atom,1867,gexpr},
       [{var,1867,'Src'},{var,1867,'Vt'},{var,1867,'St'}]}},
     {match,1868,
      {tuple,1868,[{var,1868,'Fvt'},{var,1868,'St2'}]},
      {call,1868,
       {atom,1868,map_fields},
       [{var,1868,'Es'},
        {var,1868,'Vt'},
        {var,1868,'St1'},
        {'fun',1868,{function,gexpr_list,3}}]}},
     {tuple,1869,
      [{call,1869,{atom,1869,vtmerge},[{var,1869,'Svt'},{var,1869,'Fvt'}]},
       {var,1869,'St2'}]}]},
   {clause,1870,
    [{tuple,1870,
      [{atom,1870,record_index},
       {var,1870,'Line'},
       {var,1870,'Name'},
       {var,1870,'Field'}]},
     {var,1870,'_Vt'},
     {var,1870,'St'}],
    [],
    [{call,1871,
      {atom,1871,check_record},
      [{var,1871,'Line'},
       {var,1871,'Name'},
       {var,1871,'St'},
       {'fun',1872,
        {clauses,
         [{clause,1872,
           [{var,1872,'Dfs'},{var,1872,'St1'}],
           [],
           [{call,1872,
             {atom,1872,record_field},
             [{var,1872,'Field'},
              {var,1872,'Name'},
              {var,1872,'Dfs'},
              {var,1872,'St1'}]}]}]}}]}]},
   {clause,1873,
    [{tuple,1873,
      [{atom,1873,record_field},
       {var,1873,'Line'},
       {var,1873,'Rec'},
       {var,1873,'Name'},
       {var,1873,'Field'}]},
     {var,1873,'Vt'},
     {var,1873,'St0'}],
    [],
    [{match,1874,
      {tuple,1874,[{var,1874,'Rvt'},{var,1874,'St1'}]},
      {call,1874,
       {atom,1874,gexpr},
       [{var,1874,'Rec'},{var,1874,'Vt'},{var,1874,'St0'}]}},
     {match,1875,
      {tuple,1875,[{var,1875,'Fvt'},{var,1875,'St2'}]},
      {call,1875,
       {atom,1875,check_record},
       [{var,1875,'Line'},
        {var,1875,'Name'},
        {var,1875,'St1'},
        {'fun',1876,
         {clauses,
          [{clause,1876,
            [{var,1876,'Dfs'},{var,1876,'St'}],
            [],
            [{call,1877,
              {atom,1877,record_field},
              [{var,1877,'Field'},
               {var,1877,'Name'},
               {var,1877,'Dfs'},
               {var,1877,'St'}]}]}]}}]}},
     {tuple,1879,
      [{call,1879,{atom,1879,vtmerge},[{var,1879,'Rvt'},{var,1879,'Fvt'}]},
       {var,1879,'St2'}]}]},
   {clause,1880,
    [{tuple,1880,
      [{atom,1880,record},
       {var,1880,'Line'},
       {var,1880,'Name'},
       {var,1880,'Inits'}]},
     {var,1880,'Vt'},
     {var,1880,'St'}],
    [],
    [{call,1881,
      {atom,1881,check_record},
      [{var,1881,'Line'},
       {var,1881,'Name'},
       {var,1881,'St'},
       {'fun',1882,
        {clauses,
         [{clause,1882,
           [{var,1882,'Dfs'},{var,1882,'St1'}],
           [],
           [{call,1883,
             {atom,1883,ginit_fields},
             [{var,1883,'Inits'},
              {var,1883,'Line'},
              {var,1883,'Name'},
              {var,1883,'Dfs'},
              {var,1883,'Vt'},
              {var,1883,'St1'}]}]}]}}]}]},
   {clause,1885,
    [{tuple,1885,[{atom,1885,bin},{var,1885,'_Line'},{var,1885,'Fs'}]},
     {var,1885,'Vt'},
     {var,1885,'St'}],
    [],
    [{call,1886,
      {atom,1886,expr_bin},
      [{var,1886,'Fs'},
       {var,1886,'Vt'},
       {var,1886,'St'},
       {'fun',1886,{function,gexpr,3}}]}]},
   {clause,1887,
    [{tuple,1887,
      [{atom,1887,call},
       {var,1887,'_Line'},
       {tuple,1887,[{atom,1887,atom},{var,1887,'_Lr'},{atom,1887,is_record}]},
       {cons,1887,
        {var,1887,'E'},
        {cons,1887,
         {tuple,1887,[{atom,1887,atom},{var,1887,'Ln'},{var,1887,'Name'}]},
         {nil,1887}}}]},
     {var,1887,'Vt'},
     {var,1887,'St0'}],
    [],
    [{match,1888,
      {tuple,1888,[{var,1888,'Rvt'},{var,1888,'St1'}]},
      {call,1888,
       {atom,1888,gexpr},
       [{var,1888,'E'},{var,1888,'Vt'},{var,1888,'St0'}]}},
     {tuple,1889,
      [{var,1889,'Rvt'},
       {call,1889,
        {atom,1889,exist_record},
        [{var,1889,'Ln'},{var,1889,'Name'},{var,1889,'St1'}]}]}]},
   {clause,1890,
    [{tuple,1890,
      [{atom,1890,call},
       {var,1890,'Line'},
       {tuple,1890,[{atom,1890,atom},{var,1890,'_Lr'},{atom,1890,is_record}]},
       {cons,1890,{var,1890,'E'},{cons,1890,{var,1890,'R'},{nil,1890}}}]},
     {var,1890,'Vt'},
     {var,1890,'St0'}],
    [],
    [{match,1891,
      {tuple,1891,[{var,1891,'Asvt'},{var,1891,'St1'}]},
      {call,1891,
       {atom,1891,gexpr_list},
       [{cons,1891,{var,1891,'E'},{cons,1891,{var,1891,'R'},{nil,1891}}},
        {var,1891,'Vt'},
        {var,1891,'St0'}]}},
     {tuple,1892,
      [{var,1892,'Asvt'},
       {call,1892,
        {atom,1892,add_error},
        [{var,1892,'Line'},
         {atom,1892,illegal_guard_expr},
         {var,1892,'St1'}]}]}]},
   {clause,1893,
    [{tuple,1893,
      [{atom,1893,call},
       {var,1893,'Line'},
       {tuple,1893,
        [{atom,1893,remote},
         {var,1893,'_Lr'},
         {tuple,1893,[{atom,1893,atom},{var,1893,'_Lm'},{atom,1893,erlang}]},
         {tuple,1893,
          [{atom,1893,atom},{var,1893,'Lf'},{atom,1893,is_record}]}]},
       {cons,1893,{var,1893,'E'},{cons,1893,{var,1893,'A'},{nil,1893}}}]},
     {var,1894,'Vt'},
     {var,1894,'St0'}],
    [],
    [{call,1895,
      {atom,1895,gexpr},
      [{tuple,1895,
        [{atom,1895,call},
         {var,1895,'Line'},
         {tuple,1895,[{atom,1895,atom},{var,1895,'Lf'},{atom,1895,is_record}]},
         {cons,1895,{var,1895,'E'},{cons,1895,{var,1895,'A'},{nil,1895}}}]},
       {var,1895,'Vt'},
       {var,1895,'St0'}]}]},
   {clause,1896,
    [{tuple,1896,
      [{atom,1896,call},
       {var,1896,'Line'},
       {tuple,1896,[{atom,1896,atom},{var,1896,'_Lr'},{atom,1896,is_record}]},
       {cons,1896,
        {var,1896,'E0'},
        {cons,1896,
         {tuple,1896,[{atom,1896,atom},{var,1896,'_'},{var,1896,'_Name'}]},
         {cons,1896,
          {tuple,1896,[{atom,1896,integer},{var,1896,'_'},{var,1896,'_'}]},
          {nil,1896}}}}]},
     {var,1897,'Vt'},
     {var,1897,'St0'}],
    [],
    [{match,1898,
      {tuple,1898,[{var,1898,'E'},{var,1898,'St1'}]},
      {call,1898,
       {atom,1898,gexpr},
       [{var,1898,'E0'},{var,1898,'Vt'},{var,1898,'St0'}]}},
     {'case',1899,
      {call,1899,
       {atom,1899,no_guard_bif_clash},
       [{var,1899,'St0'},
        {tuple,1899,[{atom,1899,is_record},{integer,1899,3}]}]},
      [{clause,1900,
        [{atom,1900,true}],
        [],
        [{tuple,1901,[{var,1901,'E'},{var,1901,'St1'}]}]},
       {clause,1902,
        [{atom,1902,false}],
        [],
        [{tuple,1903,
          [{var,1903,'E'},
           {call,1903,
            {atom,1903,add_error},
            [{var,1903,'Line'},
             {tuple,1903,
              [{atom,1903,illegal_guard_local_call},
               {tuple,1903,[{atom,1903,is_record},{integer,1903,3}]}]},
             {var,1903,'St1'}]}]}]}]}]},
   {clause,1905,
    [{tuple,1905,
      [{atom,1905,call},
       {var,1905,'Line'},
       {tuple,1905,[{atom,1905,atom},{var,1905,'_Lr'},{atom,1905,is_record}]},
       {match,1905,
        {cons,1905,
         {var,1905,'_'},
         {cons,1905,{var,1905,'_'},{cons,1905,{var,1905,'_'},{nil,1905}}}},
        {var,1905,'Asvt0'}}]},
     {var,1905,'Vt'},
     {var,1905,'St0'}],
    [],
    [{match,1906,
      {tuple,1906,[{var,1906,'Asvt'},{var,1906,'St1'}]},
      {call,1906,
       {atom,1906,gexpr_list},
       [{var,1906,'Asvt0'},{var,1906,'Vt'},{var,1906,'St0'}]}},
     {tuple,1907,
      [{var,1907,'Asvt'},
       {call,1907,
        {atom,1907,add_error},
        [{var,1907,'Line'},
         {atom,1907,illegal_guard_expr},
         {var,1907,'St1'}]}]}]},
   {clause,1908,
    [{tuple,1908,
      [{atom,1908,call},
       {var,1908,'Line'},
       {tuple,1908,
        [{atom,1908,remote},
         {var,1908,'_'},
         {tuple,1908,[{atom,1908,atom},{var,1908,'_'},{atom,1908,erlang}]},
         {match,1908,
          {tuple,1908,[{atom,1908,atom},{var,1908,'_'},{atom,1908,is_record}]},
          {var,1908,'Isr'}}]},
       {match,1908,
        {cons,1908,
         {var,1908,'_'},
         {cons,1908,{var,1908,'_'},{cons,1908,{var,1908,'_'},{nil,1908}}}},
        {var,1908,'Args'}}]},
     {var,1909,'Vt'},
     {var,1909,'St0'}],
    [],
    [{call,1910,
      {atom,1910,gexpr},
      [{tuple,1910,
        [{atom,1910,call},
         {var,1910,'Line'},
         {var,1910,'Isr'},
         {var,1910,'Args'}]},
       {var,1910,'Vt'},
       {var,1910,'St0'}]}]},
   {clause,1911,
    [{tuple,1911,
      [{atom,1911,call},
       {var,1911,'Line'},
       {tuple,1911,[{atom,1911,atom},{var,1911,'_La'},{var,1911,'F'}]},
       {var,1911,'As'}]},
     {var,1911,'Vt'},
     {var,1911,'St0'}],
    [],
    [{match,1912,
      {tuple,1912,[{var,1912,'Asvt'},{var,1912,'St1'}]},
      {call,1912,
       {atom,1912,gexpr_list},
       [{var,1912,'As'},{var,1912,'Vt'},{var,1912,'St0'}]}},
     {match,1913,
      {var,1913,'A'},
      {call,1913,{atom,1913,length},[{var,1913,'As'}]}},
     {'case',1915,
      {op,1915,'andalso',
       {call,1915,
        {remote,1915,{atom,1915,erl_internal},{atom,1915,guard_bif}},
        [{var,1915,'F'},{var,1915,'A'}]},
       {call,1915,
        {atom,1915,no_guard_bif_clash},
        [{var,1915,'St1'},{tuple,1915,[{var,1915,'F'},{var,1915,'A'}]}]}},
      [{clause,1916,
        [{atom,1916,true}],
        [],
        [{match,1918,
          {atom,1918,true},
          {call,1918,
           {remote,1918,{atom,1918,erl_internal},{atom,1918,bif}},
           [{var,1918,'F'},{var,1918,'A'}]}},
         {tuple,1919,[{var,1919,'Asvt'},{var,1919,'St1'}]}]},
       {clause,1920,
        [{atom,1920,false}],
        [],
        [{'case',1921,
          {op,1921,'orelse',
           {call,1921,
            {atom,1921,is_local_function},
            [{call,1921,
              {remote,1921,{atom,1921,erlang},{atom,1921,element}},
              [{integer,1921,9},{var,1921,'St1'}]},
             {tuple,1921,[{var,1921,'F'},{var,1921,'A'}]}]},
           {call,1922,
            {atom,1922,is_imported_function},
            [{call,1922,
              {remote,1922,{atom,1922,erlang},{atom,1922,element}},
              [{integer,1922,6},{var,1922,'St1'}]},
             {tuple,1922,[{var,1922,'F'},{var,1922,'A'}]}]}},
          [{clause,1923,
            [{atom,1923,true}],
            [],
            [{tuple,1924,
              [{var,1924,'Asvt'},
               {call,1924,
                {atom,1924,add_error},
                [{var,1924,'Line'},
                 {tuple,1924,
                  [{atom,1924,illegal_guard_local_call},
                   {tuple,1924,[{var,1924,'F'},{var,1924,'A'}]}]},
                 {var,1924,'St1'}]}]}]},
           {clause,1925,
            [{var,1925,'_'}],
            [],
            [{tuple,1926,
              [{var,1926,'Asvt'},
               {call,1926,
                {atom,1926,add_error},
                [{var,1926,'Line'},
                 {atom,1926,illegal_guard_expr},
                 {var,1926,'St1'}]}]}]}]}]}]}]},
   {clause,1929,
    [{tuple,1929,
      [{atom,1929,call},
       {var,1929,'Line'},
       {tuple,1929,
        [{atom,1929,remote},
         {var,1929,'_Lr'},
         {tuple,1929,[{atom,1929,atom},{var,1929,'_Lm'},{atom,1929,erlang}]},
         {tuple,1929,[{atom,1929,atom},{var,1929,'_Lf'},{var,1929,'F'}]}]},
       {var,1929,'As'}]},
     {var,1929,'Vt'},
     {var,1929,'St0'}],
    [],
    [{match,1930,
      {tuple,1930,[{var,1930,'Asvt'},{var,1930,'St1'}]},
      {call,1930,
       {atom,1930,gexpr_list},
       [{var,1930,'As'},{var,1930,'Vt'},{var,1930,'St0'}]}},
     {match,1931,
      {var,1931,'A'},
      {call,1931,{atom,1931,length},[{var,1931,'As'}]}},
     {'case',1932,
      {op,1932,'orelse',
       {call,1932,
        {remote,1932,{atom,1932,erl_internal},{atom,1932,guard_bif}},
        [{var,1932,'F'},{var,1932,'A'}]},
       {call,1932,{atom,1932,is_gexpr_op},[{var,1932,'F'},{var,1932,'A'}]}},
      [{clause,1933,
        [{atom,1933,true}],
        [],
        [{tuple,1933,[{var,1933,'Asvt'},{var,1933,'St1'}]}]},
       {clause,1934,
        [{atom,1934,false}],
        [],
        [{tuple,1934,
          [{var,1934,'Asvt'},
           {call,1934,
            {atom,1934,add_error},
            [{var,1934,'Line'},
             {atom,1934,illegal_guard_expr},
             {var,1934,'St1'}]}]}]}]}]},
   {clause,1936,
    [{tuple,1936,
      [{atom,1936,op},{var,1936,'Line'},{var,1936,'Op'},{var,1936,'A'}]},
     {var,1936,'Vt'},
     {var,1936,'St0'}],
    [],
    [{match,1937,
      {tuple,1937,[{var,1937,'Avt'},{var,1937,'St1'}]},
      {call,1937,
       {atom,1937,gexpr},
       [{var,1937,'A'},{var,1937,'Vt'},{var,1937,'St0'}]}},
     {'case',1938,
      {call,1938,{atom,1938,is_gexpr_op},[{var,1938,'Op'},{integer,1938,1}]},
      [{clause,1939,
        [{atom,1939,true}],
        [],
        [{tuple,1939,[{var,1939,'Avt'},{var,1939,'St1'}]}]},
       {clause,1940,
        [{atom,1940,false}],
        [],
        [{tuple,1940,
          [{var,1940,'Avt'},
           {call,1940,
            {atom,1940,add_error},
            [{var,1940,'Line'},
             {atom,1940,illegal_guard_expr},
             {var,1940,'St1'}]}]}]}]}]},
   {clause,1942,
    [{tuple,1942,
      [{atom,1942,op},
       {var,1942,'_'},
       {atom,1942,'andalso'},
       {var,1942,'L'},
       {var,1942,'R'}]},
     {var,1942,'Vt'},
     {var,1942,'St'}],
    [],
    [{call,1943,
      {atom,1943,gexpr_list},
      [{cons,1943,{var,1943,'L'},{cons,1943,{var,1943,'R'},{nil,1943}}},
       {var,1943,'Vt'},
       {var,1943,'St'}]}]},
   {clause,1944,
    [{tuple,1944,
      [{atom,1944,op},
       {var,1944,'_'},
       {atom,1944,'orelse'},
       {var,1944,'L'},
       {var,1944,'R'}]},
     {var,1944,'Vt'},
     {var,1944,'St'}],
    [],
    [{call,1945,
      {atom,1945,gexpr_list},
      [{cons,1945,{var,1945,'L'},{cons,1945,{var,1945,'R'},{nil,1945}}},
       {var,1945,'Vt'},
       {var,1945,'St'}]}]},
   {clause,1946,
    [{tuple,1946,
      [{atom,1946,op},
       {var,1946,'Line'},
       {var,1946,'Op'},
       {var,1946,'L'},
       {var,1946,'R'}]},
     {var,1946,'Vt'},
     {var,1946,'St0'}],
    [],
    [{match,1947,
      {tuple,1947,[{var,1947,'Avt'},{var,1947,'St1'}]},
      {call,1947,
       {atom,1947,gexpr_list},
       [{cons,1947,{var,1947,'L'},{cons,1947,{var,1947,'R'},{nil,1947}}},
        {var,1947,'Vt'},
        {var,1947,'St0'}]}},
     {'case',1948,
      {call,1948,{atom,1948,is_gexpr_op},[{var,1948,'Op'},{integer,1948,2}]},
      [{clause,1949,
        [{atom,1949,true}],
        [],
        [{tuple,1949,[{var,1949,'Avt'},{var,1949,'St1'}]}]},
       {clause,1950,
        [{atom,1950,false}],
        [],
        [{tuple,1950,
          [{var,1950,'Avt'},
           {call,1950,
            {atom,1950,add_error},
            [{var,1950,'Line'},
             {atom,1950,illegal_guard_expr},
             {var,1950,'St1'}]}]}]}]}]},
   {clause,1954,
    [{var,1954,'E'},{var,1954,'_Vt'},{var,1954,'St'}],
    [],
    [{tuple,1955,
      [{nil,1955},
       {call,1955,
        {atom,1955,add_error},
        [{call,1955,{atom,1955,element},[{integer,1955,2},{var,1955,'E'}]},
         {atom,1955,illegal_guard_expr},
         {var,1955,'St'}]}]}]}]},
 {function,1960,gexpr_list,3,
  [{clause,1960,
    [{var,1960,'Es'},{var,1960,'Vt'},{var,1960,'St'}],
    [],
    [{call,1961,
      {atom,1961,foldl},
      [{'fun',1961,
        {clauses,
         [{clause,1961,
           [{var,1961,'E'},{tuple,1961,[{var,1961,'Esvt'},{var,1961,'St0'}]}],
           [],
           [{match,1962,
             {tuple,1962,[{var,1962,'Evt'},{var,1962,'St1'}]},
             {call,1962,
              {atom,1962,gexpr},
              [{var,1962,'E'},{var,1962,'Vt'},{var,1962,'St0'}]}},
            {tuple,1963,
             [{call,1963,
               {atom,1963,vtmerge},
               [{var,1963,'Evt'},{var,1963,'Esvt'}]},
              {var,1963,'St1'}]}]}]}},
       {tuple,1964,[{nil,1964},{var,1964,'St'}]},
       {var,1964,'Es'}]}]}]},
 {function,1971,is_guard_test,1,
  [{clause,1971,
    [{var,1971,'E'}],
    [],
    [{call,1972,
      {atom,1972,is_guard_test2},
      [{var,1972,'E'},
       {call,1972,{remote,1972,{atom,1972,dict},{atom,1972,new}},[]}]}]}]},
 {function,1975,is_guard_test,2,
  [{clause,1975,
    [{var,1975,'Expression'},{var,1975,'Forms'}],
    [],
    [{match,1976,
      {var,1976,'RecordAttributes'},
      {lc,1976,
       {var,1976,'A'},
       [{generate,1976,
         {match,1976,
          {var,1976,'A'},
          {tuple,1976,
           [{atom,1976,attribute},
            {var,1976,'_'},
            {atom,1976,record},
            {var,1976,'_D'}]}},
         {var,1976,'Forms'}}]}},
     {match,1977,
      {var,1977,'St0'},
      {call,1977,
       {atom,1977,foldl},
       [{'fun',1977,
         {clauses,
          [{clause,1977,
            [{var,1977,'Attr0'},{var,1977,'St1'}],
            [],
            [{match,1978,
              {var,1978,'Attr'},
              {call,1978,
               {atom,1978,set_file},
               [{var,1978,'Attr0'},{string,1978,"none"}]}},
             {call,1979,
              {atom,1979,attribute_state},
              [{var,1979,'Attr'},{var,1979,'St1'}]}]}]}},
        {call,1980,{atom,1980,start},[]},
        {var,1980,'RecordAttributes'}]}},
     {call,1981,
      {atom,1981,is_guard_test2},
      [{call,1981,
        {atom,1981,set_file},
        [{var,1981,'Expression'},{string,1981,"nofile"}]},
       {call,1981,
        {remote,1981,{atom,1981,erlang},{atom,1981,element}},
        [{integer,1981,8},{var,1981,'St0'}]}]}]}]},
 {function,1984,is_guard_test2,2,
  [{clause,1984,
    [{tuple,1984,
      [{atom,1984,call},
       {var,1984,'Line'},
       {tuple,1984,[{atom,1984,atom},{var,1984,'Lr'},{atom,1984,record}]},
       {cons,1984,{var,1984,'E'},{cons,1984,{var,1984,'A'},{nil,1984}}}]},
     {var,1984,'RDs'}],
    [],
    [{call,1985,
      {atom,1985,is_gexpr},
      [{tuple,1985,
        [{atom,1985,call},
         {var,1985,'Line'},
         {tuple,1985,[{atom,1985,atom},{var,1985,'Lr'},{atom,1985,is_record}]},
         {cons,1985,{var,1985,'E'},{cons,1985,{var,1985,'A'},{nil,1985}}}]},
       {var,1985,'RDs'}]}]},
   {clause,1986,
    [{match,1986,
      {tuple,1986,
       [{atom,1986,call},
        {var,1986,'_Line'},
        {tuple,1986,[{atom,1986,atom},{var,1986,'_La'},{var,1986,'Test'}]},
        {var,1986,'As'}]},
      {var,1986,'Call'}},
     {var,1986,'RDs'}],
    [],
    [{'case',1987,
      {call,1987,
       {remote,1987,{atom,1987,erl_internal},{atom,1987,type_test}},
       [{var,1987,'Test'},{call,1987,{atom,1987,length},[{var,1987,'As'}]}]},
      [{clause,1988,
        [{atom,1988,true}],
        [],
        [{call,1988,
          {atom,1988,is_gexpr_list},
          [{var,1988,'As'},{var,1988,'RDs'}]}]},
       {clause,1989,
        [{atom,1989,false}],
        [],
        [{call,1989,
          {atom,1989,is_gexpr},
          [{var,1989,'Call'},{var,1989,'RDs'}]}]}]}]},
   {clause,1991,
    [{var,1991,'G'},{var,1991,'RDs'}],
    [],
    [{call,1993,{atom,1993,is_gexpr},[{var,1993,'G'},{var,1993,'RDs'}]}]}]},
 {function,1998,is_guard_expr,1,
  [{clause,1998,
    [{var,1998,'E'}],
    [],
    [{call,1998,{atom,1998,is_gexpr},[{var,1998,'E'},{nil,1998}]}]}]},
 {function,2000,is_gexpr,2,
  [{clause,2000,
    [{tuple,2000,[{atom,2000,var},{var,2000,'_L'},{var,2000,'_V'}]},
     {var,2000,'_RDs'}],
    [],
    [{atom,2000,true}]},
   {clause,2001,
    [{tuple,2001,[{atom,2001,char},{var,2001,'_L'},{var,2001,'_C'}]},
     {var,2001,'_RDs'}],
    [],
    [{atom,2001,true}]},
   {clause,2002,
    [{tuple,2002,[{atom,2002,integer},{var,2002,'_L'},{var,2002,'_I'}]},
     {var,2002,'_RDs'}],
    [],
    [{atom,2002,true}]},
   {clause,2003,
    [{tuple,2003,[{atom,2003,float},{var,2003,'_L'},{var,2003,'_F'}]},
     {var,2003,'_RDs'}],
    [],
    [{atom,2003,true}]},
   {clause,2004,
    [{tuple,2004,[{atom,2004,atom},{var,2004,'_L'},{var,2004,'_A'}]},
     {var,2004,'_RDs'}],
    [],
    [{atom,2004,true}]},
   {clause,2005,
    [{tuple,2005,[{atom,2005,string},{var,2005,'_L'},{var,2005,'_S'}]},
     {var,2005,'_RDs'}],
    [],
    [{atom,2005,true}]},
   {clause,2006,
    [{tuple,2006,[{atom,2006,nil},{var,2006,'_L'}]},{var,2006,'_RDs'}],
    [],
    [{atom,2006,true}]},
   {clause,2007,
    [{tuple,2007,
      [{atom,2007,cons},{var,2007,'_L'},{var,2007,'H'},{var,2007,'T'}]},
     {var,2007,'RDs'}],
    [],
    [{call,2007,
      {atom,2007,is_gexpr_list},
      [{cons,2007,{var,2007,'H'},{cons,2007,{var,2007,'T'},{nil,2007}}},
       {var,2007,'RDs'}]}]},
   {clause,2008,
    [{tuple,2008,[{atom,2008,tuple},{var,2008,'_L'},{var,2008,'Es'}]},
     {var,2008,'RDs'}],
    [],
    [{call,2008,
      {atom,2008,is_gexpr_list},
      [{var,2008,'Es'},{var,2008,'RDs'}]}]},
   {clause,2011,
    [{tuple,2011,
      [{atom,2011,record_index},
       {var,2011,'_L'},
       {var,2011,'_Name'},
       {var,2011,'Field'}]},
     {var,2011,'RDs'}],
    [],
    [{call,2012,{atom,2012,is_gexpr},[{var,2012,'Field'},{var,2012,'RDs'}]}]},
   {clause,2013,
    [{tuple,2013,
      [{atom,2013,record_field},
       {var,2013,'_L'},
       {var,2013,'Rec'},
       {var,2013,'_Name'},
       {var,2013,'Field'}]},
     {var,2013,'RDs'}],
    [],
    [{call,2014,
      {atom,2014,is_gexpr_list},
      [{cons,2014,{var,2014,'Rec'},{cons,2014,{var,2014,'Field'},{nil,2014}}},
       {var,2014,'RDs'}]}]},
   {clause,2015,
    [{tuple,2015,
      [{atom,2015,record},
       {var,2015,'L'},
       {var,2015,'Name'},
       {var,2015,'Inits'}]},
     {var,2015,'RDs'}],
    [],
    [{call,2016,
      {atom,2016,is_gexpr_fields},
      [{var,2016,'Inits'},
       {var,2016,'L'},
       {var,2016,'Name'},
       {var,2016,'RDs'}]}]},
   {clause,2017,
    [{tuple,2017,[{atom,2017,bin},{var,2017,'_L'},{var,2017,'Fs'}]},
     {var,2017,'RDs'}],
    [],
    [{call,2018,
      {atom,2018,all},
      [{'fun',2018,
        {clauses,
         [{clause,2018,
           [{tuple,2018,
             [{atom,2018,bin_element},
              {var,2018,'_Line'},
              {var,2018,'E'},
              {var,2018,'Sz'},
              {var,2018,'_Ts'}]}],
           [],
           [{op,2019,'and',
             {call,2019,
              {atom,2019,is_gexpr},
              [{var,2019,'E'},{var,2019,'RDs'}]},
             {op,2019,'orelse',
              {op,2019,'=:=',{var,2019,'Sz'},{atom,2019,default}},
              {call,2019,
               {atom,2019,is_gexpr},
               [{var,2019,'Sz'},{var,2019,'RDs'}]}}}]}]}},
       {var,2020,'Fs'}]}]},
   {clause,2021,
    [{tuple,2021,
      [{atom,2021,call},
       {var,2021,'_L'},
       {tuple,2021,[{atom,2021,atom},{var,2021,'_Lf'},{var,2021,'F'}]},
       {var,2021,'As'}]},
     {var,2021,'RDs'}],
    [],
    [{match,2022,
      {var,2022,'A'},
      {call,2022,{atom,2022,length},[{var,2022,'As'}]}},
     {op,2023,'andalso',
      {call,2023,
       {remote,2023,{atom,2023,erl_internal},{atom,2023,guard_bif}},
       [{var,2023,'F'},{var,2023,'A'}]},
      {call,2023,
       {atom,2023,is_gexpr_list},
       [{var,2023,'As'},{var,2023,'RDs'}]}}]},
   {clause,2024,
    [{tuple,2024,
      [{atom,2024,call},
       {var,2024,'_L'},
       {tuple,2024,
        [{atom,2024,remote},
         {var,2024,'_Lr'},
         {tuple,2024,[{atom,2024,atom},{var,2024,'_Lm'},{atom,2024,erlang}]},
         {tuple,2024,[{atom,2024,atom},{var,2024,'_Lf'},{var,2024,'F'}]}]},
       {var,2024,'As'}]},
     {var,2024,'RDs'}],
    [],
    [{match,2025,
      {var,2025,'A'},
      {call,2025,{atom,2025,length},[{var,2025,'As'}]}},
     {op,2027,'andalso',
      {op,2026,'orelse',
       {call,2026,
        {remote,2026,{atom,2026,erl_internal},{atom,2026,guard_bif}},
        [{var,2026,'F'},{var,2026,'A'}]},
       {call,2026,{atom,2026,is_gexpr_op},[{var,2026,'F'},{var,2026,'A'}]}},
      {call,2027,
       {atom,2027,is_gexpr_list},
       [{var,2027,'As'},{var,2027,'RDs'}]}}]},
   {clause,2028,
    [{tuple,2028,
      [{atom,2028,call},
       {var,2028,'L'},
       {tuple,2028,
        [{atom,2028,tuple},
         {var,2028,'Lt'},
         {cons,2028,
          {tuple,2028,[{atom,2028,atom},{var,2028,'Lm'},{atom,2028,erlang}]},
          {cons,2028,
           {tuple,2028,[{atom,2028,atom},{var,2028,'Lf'},{var,2028,'F'}]},
           {nil,2028}}}]},
       {var,2028,'As'}]},
     {var,2028,'RDs'}],
    [],
    [{call,2029,
      {atom,2029,is_gexpr},
      [{tuple,2029,
        [{atom,2029,call},
         {var,2029,'L'},
         {tuple,2029,
          [{atom,2029,remote},
           {var,2029,'Lt'},
           {tuple,2029,[{atom,2029,atom},{var,2029,'Lm'},{atom,2029,erlang}]},
           {tuple,2029,[{atom,2029,atom},{var,2029,'Lf'},{var,2029,'F'}]}]},
         {var,2029,'As'}]},
       {var,2029,'RDs'}]}]},
   {clause,2030,
    [{tuple,2030,
      [{atom,2030,op},{var,2030,'_L'},{var,2030,'Op'},{var,2030,'A'}]},
     {var,2030,'RDs'}],
    [],
    [{op,2031,'andalso',
      {call,2031,{atom,2031,is_gexpr_op},[{var,2031,'Op'},{integer,2031,1}]},
      {call,2031,{atom,2031,is_gexpr},[{var,2031,'A'},{var,2031,'RDs'}]}}]},
   {clause,2032,
    [{tuple,2032,
      [{atom,2032,op},
       {var,2032,'_L'},
       {atom,2032,'andalso'},
       {var,2032,'A1'},
       {var,2032,'A2'}]},
     {var,2032,'RDs'}],
    [],
    [{call,2033,
      {atom,2033,is_gexpr_list},
      [{cons,2033,{var,2033,'A1'},{cons,2033,{var,2033,'A2'},{nil,2033}}},
       {var,2033,'RDs'}]}]},
   {clause,2034,
    [{tuple,2034,
      [{atom,2034,op},
       {var,2034,'_L'},
       {atom,2034,'orelse'},
       {var,2034,'A1'},
       {var,2034,'A2'}]},
     {var,2034,'RDs'}],
    [],
    [{call,2035,
      {atom,2035,is_gexpr_list},
      [{cons,2035,{var,2035,'A1'},{cons,2035,{var,2035,'A2'},{nil,2035}}},
       {var,2035,'RDs'}]}]},
   {clause,2036,
    [{tuple,2036,
      [{atom,2036,op},
       {var,2036,'_L'},
       {var,2036,'Op'},
       {var,2036,'A1'},
       {var,2036,'A2'}]},
     {var,2036,'RDs'}],
    [],
    [{op,2037,'andalso',
      {call,2037,{atom,2037,is_gexpr_op},[{var,2037,'Op'},{integer,2037,2}]},
      {call,2037,
       {atom,2037,is_gexpr_list},
       [{cons,2037,{var,2037,'A1'},{cons,2037,{var,2037,'A2'},{nil,2037}}},
        {var,2037,'RDs'}]}}]},
   {clause,2038,
    [{var,2038,'_Other'},{var,2038,'_RDs'}],
    [],
    [{atom,2038,false}]}]},
 {function,2040,is_gexpr_op,2,
  [{clause,2040,
    [{var,2040,'Op'},{var,2040,'A'}],
    [],
    [{'try',2041,
      [{call,2041,
        {remote,2041,{atom,2041,erl_internal},{atom,2041,op_type}},
        [{var,2041,'Op'},{var,2041,'A'}]}],
      [{clause,2042,[{atom,2042,arith}],[],[{atom,2042,true}]},
       {clause,2043,[{atom,2043,bool}],[],[{atom,2043,true}]},
       {clause,2044,[{atom,2044,comp}],[],[{atom,2044,true}]},
       {clause,2045,[{atom,2045,list}],[],[{atom,2045,false}]},
       {clause,2046,[{atom,2046,send}],[],[{atom,2046,false}]}],
      [{clause,2047,
        [{tuple,2047,[{var,2047,'_'},{var,2047,'_'},{var,2047,'_'}]}],
        [],
        [{atom,2047,false}]}],
      []}]}]},
 {function,2050,is_gexpr_list,2,
  [{clause,2050,
    [{var,2050,'Es'},{var,2050,'RDs'}],
    [],
    [{call,2050,
      {atom,2050,all},
      [{'fun',2050,
        {clauses,
         [{clause,2050,
           [{var,2050,'E'}],
           [],
           [{call,2050,
             {atom,2050,is_gexpr},
             [{var,2050,'E'},{var,2050,'RDs'}]}]}]}},
       {var,2050,'Es'}]}]}]},
 {function,2052,is_gexpr_fields,4,
  [{clause,2052,
    [{var,2052,'Fs'},{var,2052,'L'},{var,2052,'Name'},{var,2052,'RDs'}],
    [],
    [{match,2053,
      {var,2053,'IFs'},
      {'case',2053,
       {call,2053,
        {remote,2053,{atom,2053,dict},{atom,2053,find}},
        [{var,2053,'Name'},{var,2053,'RDs'}]},
       [{clause,2054,
         [{tuple,2054,
           [{atom,2054,ok},
            {tuple,2054,[{var,2054,'_Line'},{var,2054,'Fields'}]}]}],
         [],
         [{op,2054,'++',
           {var,2054,'Fs'},
           {call,2054,
            {atom,2054,init_fields},
            [{var,2054,'Fs'},{var,2054,'L'},{var,2054,'Fields'}]}}]},
        {clause,2055,[{atom,2055,error}],[],[{var,2055,'Fs'}]}]}},
     {call,2057,
      {atom,2057,all},
      [{'fun',2057,
        {clauses,
         [{clause,2057,
           [{tuple,2057,
             [{atom,2057,record_field},
              {var,2057,'_Lf'},
              {var,2057,'_Name'},
              {var,2057,'V'}]}],
           [],
           [{call,2057,
             {atom,2057,is_gexpr},
             [{var,2057,'V'},{var,2057,'RDs'}]}]},
          {clause,2058,[{var,2058,'_Other'}],[],[{atom,2058,false}]}]}},
       {var,2058,'IFs'}]}]}]},
 {function,2064,exprs,3,
  [{clause,2064,
    [{cons,2064,{var,2064,'E'},{var,2064,'Es'}},
     {var,2064,'Vt'},
     {var,2064,'St0'}],
    [],
    [{match,2065,
      {tuple,2065,[{var,2065,'Evt'},{var,2065,'St1'}]},
      {call,2065,
       {atom,2065,expr},
       [{var,2065,'E'},{var,2065,'Vt'},{var,2065,'St0'}]}},
     {match,2066,
      {tuple,2066,[{var,2066,'Esvt'},{var,2066,'St2'}]},
      {call,2066,
       {atom,2066,exprs},
       [{var,2066,'Es'},
        {call,2066,{atom,2066,vtupdate},[{var,2066,'Evt'},{var,2066,'Vt'}]},
        {var,2066,'St1'}]}},
     {tuple,2067,
      [{call,2067,{atom,2067,vtupdate},[{var,2067,'Evt'},{var,2067,'Esvt'}]},
       {var,2067,'St2'}]}]},
   {clause,2068,
    [{nil,2068},{var,2068,'_Vt'},{var,2068,'St'}],
    [],
    [{tuple,2068,[{nil,2068},{var,2068,'St'}]}]}]},
 {function,2076,expr,3,
  [{clause,2076,
    [{tuple,2076,[{atom,2076,var},{var,2076,'Line'},{var,2076,'V'}]},
     {var,2076,'Vt'},
     {var,2076,'St'}],
    [],
    [{call,2077,
      {atom,2077,expr_var},
      [{var,2077,'V'},{var,2077,'Line'},{var,2077,'Vt'},{var,2077,'St'}]}]},
   {clause,2078,
    [{tuple,2078,[{atom,2078,char},{var,2078,'_Line'},{var,2078,'_C'}]},
     {var,2078,'_Vt'},
     {var,2078,'St'}],
    [],
    [{tuple,2078,[{nil,2078},{var,2078,'St'}]}]},
   {clause,2079,
    [{tuple,2079,[{atom,2079,integer},{var,2079,'_Line'},{var,2079,'_I'}]},
     {var,2079,'_Vt'},
     {var,2079,'St'}],
    [],
    [{tuple,2079,[{nil,2079},{var,2079,'St'}]}]},
   {clause,2080,
    [{tuple,2080,[{atom,2080,float},{var,2080,'_Line'},{var,2080,'_F'}]},
     {var,2080,'_Vt'},
     {var,2080,'St'}],
    [],
    [{tuple,2080,[{nil,2080},{var,2080,'St'}]}]},
   {clause,2081,
    [{tuple,2081,[{atom,2081,atom},{var,2081,'Line'},{var,2081,'A'}]},
     {var,2081,'_Vt'},
     {var,2081,'St'}],
    [],
    [{tuple,2082,
      [{nil,2082},
       {call,2082,
        {atom,2082,keyword_warning},
        [{var,2082,'Line'},{var,2082,'A'},{var,2082,'St'}]}]}]},
   {clause,2083,
    [{tuple,2083,[{atom,2083,string},{var,2083,'_Line'},{var,2083,'_S'}]},
     {var,2083,'_Vt'},
     {var,2083,'St'}],
    [],
    [{tuple,2083,[{nil,2083},{var,2083,'St'}]}]},
   {clause,2084,
    [{tuple,2084,[{atom,2084,nil},{var,2084,'_Line'}]},
     {var,2084,'_Vt'},
     {var,2084,'St'}],
    [],
    [{tuple,2084,[{nil,2084},{var,2084,'St'}]}]},
   {clause,2085,
    [{tuple,2085,
      [{atom,2085,cons},{var,2085,'_Line'},{var,2085,'H'},{var,2085,'T'}]},
     {var,2085,'Vt'},
     {var,2085,'St'}],
    [],
    [{call,2086,
      {atom,2086,expr_list},
      [{cons,2086,{var,2086,'H'},{cons,2086,{var,2086,'T'},{nil,2086}}},
       {var,2086,'Vt'},
       {var,2086,'St'}]}]},
   {clause,2087,
    [{tuple,2087,
      [{atom,2087,lc},{var,2087,'_Line'},{var,2087,'E'},{var,2087,'Qs'}]},
     {var,2087,'Vt'},
     {var,2087,'St'}],
    [],
    [{call,2088,
      {atom,2088,handle_comprehension},
      [{var,2088,'E'},{var,2088,'Qs'},{var,2088,'Vt'},{var,2088,'St'}]}]},
   {clause,2089,
    [{tuple,2089,
      [{atom,2089,bc},{var,2089,'_Line'},{var,2089,'E'},{var,2089,'Qs'}]},
     {var,2089,'Vt'},
     {var,2089,'St'}],
    [],
    [{call,2090,
      {atom,2090,handle_comprehension},
      [{var,2090,'E'},{var,2090,'Qs'},{var,2090,'Vt'},{var,2090,'St'}]}]},
   {clause,2091,
    [{tuple,2091,[{atom,2091,tuple},{var,2091,'_Line'},{var,2091,'Es'}]},
     {var,2091,'Vt'},
     {var,2091,'St'}],
    [],
    [{call,2092,
      {atom,2092,expr_list},
      [{var,2092,'Es'},{var,2092,'Vt'},{var,2092,'St'}]}]},
   {clause,2093,
    [{tuple,2093,[{atom,2093,map},{var,2093,'_Line'},{var,2093,'Es'}]},
     {var,2093,'Vt'},
     {var,2093,'St'}],
    [],
    [{call,2094,
      {atom,2094,map_fields},
      [{var,2094,'Es'},
       {var,2094,'Vt'},
       {call,2094,
        {atom,2094,check_assoc_fields},
        [{var,2094,'Es'},{var,2094,'St'}]},
       {'fun',2094,{function,expr_list,3}}]}]},
   {clause,2095,
    [{tuple,2095,
      [{atom,2095,map},{var,2095,'_Line'},{var,2095,'Src'},{var,2095,'Es'}]},
     {var,2095,'Vt'},
     {var,2095,'St'}],
    [],
    [{match,2096,
      {tuple,2096,[{var,2096,'Svt'},{var,2096,'St1'}]},
      {call,2096,
       {atom,2096,expr},
       [{var,2096,'Src'},{var,2096,'Vt'},{var,2096,'St'}]}},
     {match,2097,
      {tuple,2097,[{var,2097,'Fvt'},{var,2097,'St2'}]},
      {call,2097,
       {atom,2097,map_fields},
       [{var,2097,'Es'},
        {var,2097,'Vt'},
        {var,2097,'St1'},
        {'fun',2097,{function,expr_list,3}}]}},
     {tuple,2098,
      [{call,2098,{atom,2098,vtupdate},[{var,2098,'Svt'},{var,2098,'Fvt'}]},
       {var,2098,'St2'}]}]},
   {clause,2099,
    [{tuple,2099,
      [{atom,2099,record_index},
       {var,2099,'Line'},
       {var,2099,'Name'},
       {var,2099,'Field'}]},
     {var,2099,'_Vt'},
     {var,2099,'St'}],
    [],
    [{call,2100,
      {atom,2100,check_record},
      [{var,2100,'Line'},
       {var,2100,'Name'},
       {var,2100,'St'},
       {'fun',2101,
        {clauses,
         [{clause,2101,
           [{var,2101,'Dfs'},{var,2101,'St1'}],
           [],
           [{call,2101,
             {atom,2101,record_field},
             [{var,2101,'Field'},
              {var,2101,'Name'},
              {var,2101,'Dfs'},
              {var,2101,'St1'}]}]}]}}]}]},
   {clause,2102,
    [{tuple,2102,
      [{atom,2102,record},
       {var,2102,'Line'},
       {var,2102,'Name'},
       {var,2102,'Inits'}]},
     {var,2102,'Vt'},
     {var,2102,'St'}],
    [],
    [{call,2103,
      {atom,2103,check_record},
      [{var,2103,'Line'},
       {var,2103,'Name'},
       {var,2103,'St'},
       {'fun',2104,
        {clauses,
         [{clause,2104,
           [{var,2104,'Dfs'},{var,2104,'St1'}],
           [],
           [{call,2105,
             {atom,2105,init_fields},
             [{var,2105,'Inits'},
              {var,2105,'Line'},
              {var,2105,'Name'},
              {var,2105,'Dfs'},
              {var,2105,'Vt'},
              {var,2105,'St1'}]}]}]}}]}]},
   {clause,2107,
    [{tuple,2107,
      [{atom,2107,record_field},
       {var,2107,'Line'},
       {var,2107,'Rec'},
       {var,2107,'Name'},
       {var,2107,'Field'}]},
     {var,2107,'Vt'},
     {var,2107,'St0'}],
    [],
    [{match,2108,
      {tuple,2108,[{var,2108,'Rvt'},{var,2108,'St1'}]},
      {call,2108,
       {atom,2108,record_expr},
       [{var,2108,'Line'},{var,2108,'Rec'},{var,2108,'Vt'},{var,2108,'St0'}]}},
     {match,2109,
      {tuple,2109,[{var,2109,'Fvt'},{var,2109,'St2'}]},
      {call,2109,
       {atom,2109,check_record},
       [{var,2109,'Line'},
        {var,2109,'Name'},
        {var,2109,'St1'},
        {'fun',2110,
         {clauses,
          [{clause,2110,
            [{var,2110,'Dfs'},{var,2110,'St'}],
            [],
            [{call,2111,
              {atom,2111,record_field},
              [{var,2111,'Field'},
               {var,2111,'Name'},
               {var,2111,'Dfs'},
               {var,2111,'St'}]}]}]}}]}},
     {tuple,2113,
      [{call,2113,{atom,2113,vtmerge},[{var,2113,'Rvt'},{var,2113,'Fvt'}]},
       {var,2113,'St2'}]}]},
   {clause,2114,
    [{tuple,2114,
      [{atom,2114,record},
       {var,2114,'Line'},
       {var,2114,'Rec'},
       {var,2114,'Name'},
       {var,2114,'Upds'}]},
     {var,2114,'Vt'},
     {var,2114,'St0'}],
    [],
    [{match,2115,
      {tuple,2115,[{var,2115,'Rvt'},{var,2115,'St1'}]},
      {call,2115,
       {atom,2115,record_expr},
       [{var,2115,'Line'},{var,2115,'Rec'},{var,2115,'Vt'},{var,2115,'St0'}]}},
     {match,2116,
      {tuple,2116,[{var,2116,'Usvt'},{var,2116,'St2'}]},
      {call,2116,
       {atom,2116,check_record},
       [{var,2116,'Line'},
        {var,2116,'Name'},
        {var,2116,'St1'},
        {'fun',2117,
         {clauses,
          [{clause,2117,
            [{var,2117,'Dfs'},{var,2117,'St'}],
            [],
            [{call,2118,
              {atom,2118,update_fields},
              [{var,2118,'Upds'},
               {var,2118,'Name'},
               {var,2118,'Dfs'},
               {var,2118,'Vt'},
               {var,2118,'St'}]}]}]}}]}},
     {'case',2120,
      {call,2120,{atom,2120,has_wildcard_field},[{var,2120,'Upds'}]},
      [{clause,2121,
        [{atom,2121,true}],
        [],
        [{tuple,2121,
          [{nil,2121},
           {call,2121,
            {atom,2121,add_error},
            [{var,2121,'Line'},
             {tuple,2121,[{atom,2121,wildcard_in_update},{var,2121,'Name'}]},
             {var,2121,'St2'}]}]}]},
       {clause,2122,
        [{atom,2122,false}],
        [],
        [{tuple,2122,
          [{call,2122,
            {atom,2122,vtmerge},
            [{var,2122,'Rvt'},{var,2122,'Usvt'}]},
           {var,2122,'St2'}]}]}]}]},
   {clause,2124,
    [{tuple,2124,[{atom,2124,bin},{var,2124,'_Line'},{var,2124,'Fs'}]},
     {var,2124,'Vt'},
     {var,2124,'St'}],
    [],
    [{call,2125,
      {atom,2125,expr_bin},
      [{var,2125,'Fs'},
       {var,2125,'Vt'},
       {var,2125,'St'},
       {'fun',2125,{function,expr,3}}]}]},
   {clause,2126,
    [{tuple,2126,[{atom,2126,block},{var,2126,'_Line'},{var,2126,'Es'}]},
     {var,2126,'Vt'},
     {var,2126,'St'}],
    [],
    [{call,2128,
      {atom,2128,exprs},
      [{var,2128,'Es'},{var,2128,'Vt'},{var,2128,'St'}]}]},
   {clause,2129,
    [{tuple,2129,[{atom,2129,'if'},{var,2129,'Line'},{var,2129,'Cs'}]},
     {var,2129,'Vt'},
     {var,2129,'St'}],
    [],
    [{call,2130,
      {atom,2130,icrt_clauses},
      [{var,2130,'Cs'},
       {tuple,2130,[{atom,2130,'if'},{var,2130,'Line'}]},
       {var,2130,'Vt'},
       {var,2130,'St'}]}]},
   {clause,2131,
    [{tuple,2131,
      [{atom,2131,'case'},{var,2131,'Line'},{var,2131,'E'},{var,2131,'Cs'}]},
     {var,2131,'Vt'},
     {var,2131,'St0'}],
    [],
    [{match,2132,
      {tuple,2132,[{var,2132,'Evt'},{var,2132,'St1'}]},
      {call,2132,
       {atom,2132,expr},
       [{var,2132,'E'},{var,2132,'Vt'},{var,2132,'St0'}]}},
     {match,2133,
      {tuple,2133,[{var,2133,'Cvt'},{var,2133,'St2'}]},
      {call,2133,
       {atom,2133,icrt_clauses},
       [{var,2133,'Cs'},
        {tuple,2133,[{atom,2133,'case'},{var,2133,'Line'}]},
        {call,2133,{atom,2133,vtupdate},[{var,2133,'Evt'},{var,2133,'Vt'}]},
        {var,2133,'St1'}]}},
     {tuple,2134,
      [{call,2134,{atom,2134,vtmerge},[{var,2134,'Evt'},{var,2134,'Cvt'}]},
       {var,2134,'St2'}]}]},
   {clause,2135,
    [{tuple,2135,[{atom,2135,'receive'},{var,2135,'Line'},{var,2135,'Cs'}]},
     {var,2135,'Vt'},
     {var,2135,'St'}],
    [],
    [{call,2136,
      {atom,2136,icrt_clauses},
      [{var,2136,'Cs'},
       {tuple,2136,[{atom,2136,'receive'},{var,2136,'Line'}]},
       {var,2136,'Vt'},
       {var,2136,'St'}]}]},
   {clause,2137,
    [{tuple,2137,
      [{atom,2137,'receive'},
       {var,2137,'Line'},
       {var,2137,'Cs'},
       {var,2137,'To'},
       {var,2137,'ToEs'}]},
     {var,2137,'Vt'},
     {var,2137,'St0'}],
    [],
    [{match,2139,
      {tuple,2139,[{var,2139,'Tvt'},{var,2139,'St1'}]},
      {call,2139,
       {atom,2139,expr},
       [{var,2139,'To'},{var,2139,'Vt'},{var,2139,'St0'}]}},
     {match,2140,
      {tuple,2140,[{var,2140,'Tevt'},{var,2140,'St2'}]},
      {call,2140,
       {atom,2140,exprs},
       [{var,2140,'ToEs'},{var,2140,'Vt'},{var,2140,'St1'}]}},
     {match,2141,
      {tuple,2141,[{var,2141,'Cvt'},{var,2141,'St3'}]},
      {call,2141,
       {atom,2141,icrt_clauses},
       [{var,2141,'Cs'},{var,2141,'Vt'},{var,2141,'St2'}]}},
     {match,2143,
      {var,2143,'Csvts'},
      {cons,2143,{var,2143,'Tevt'},{var,2143,'Cvt'}}},
     {match,2144,
      {var,2144,'Rvt'},
      {call,2144,
       {atom,2144,icrt_export},
       [{var,2144,'Csvts'},
        {var,2144,'Vt'},
        {tuple,2144,[{atom,2144,'receive'},{var,2144,'Line'}]},
        {var,2144,'St3'}]}},
     {tuple,2145,
      [{call,2145,
        {atom,2145,vtmerge},
        [{cons,2145,
          {var,2145,'Tvt'},
          {cons,2145,
           {var,2145,'Tevt'},
           {cons,2145,{var,2145,'Rvt'},{nil,2145}}}}]},
       {var,2145,'St3'}]}]},
   {clause,2146,
    [{tuple,2146,[{atom,2146,'fun'},{var,2146,'Line'},{var,2146,'Body'}]},
     {var,2146,'Vt'},
     {var,2146,'St'}],
    [],
    [{'case',2148,
      {var,2148,'Body'},
      [{clause,2149,
        [{tuple,2149,[{atom,2149,clauses},{var,2149,'Cs'}]}],
        [],
        [{call,2150,
          {atom,2150,fun_clauses},
          [{var,2150,'Cs'},{var,2150,'Vt'},{var,2150,'St'}]}]},
       {clause,2151,
        [{tuple,2151,[{atom,2151,function},{var,2151,'F'},{var,2151,'A'}]}],
        [],
        [{'case',2154,
          {op,2154,'andalso',
           {op,2154,'not',
            {call,2154,
             {atom,2154,is_local_function},
             [{call,2154,
               {remote,2154,{atom,2154,erlang},{atom,2154,element}},
               [{integer,2154,9},{var,2154,'St'}]},
              {tuple,2154,[{var,2154,'F'},{var,2154,'A'}]}]}},
           {op,2155,'andalso',
            {call,2155,
             {remote,2155,{atom,2155,erl_internal},{atom,2155,bif}},
             [{var,2155,'F'},{var,2155,'A'}]},
            {op,2156,'not',
             {call,2156,
              {atom,2156,is_autoimport_suppressed},
              [{call,2156,
                {remote,2156,{atom,2156,erlang},{atom,2156,element}},
                [{integer,2156,10},{var,2156,'St'}]},
               {tuple,2156,[{var,2156,'F'},{var,2156,'A'}]}]}}}},
          [{clause,2157,
            [{atom,2157,true}],
            [],
            [{tuple,2157,[{nil,2157},{var,2157,'St'}]}]},
           {clause,2158,
            [{atom,2158,false}],
            [],
            [{tuple,2158,
              [{nil,2158},
               {call,2158,
                {atom,2158,call_function},
                [{var,2158,'Line'},
                 {var,2158,'F'},
                 {var,2158,'A'},
                 {var,2158,'St'}]}]}]}]}]},
       {clause,2160,
        [{tuple,2160,
          [{atom,2160,function},
           {var,2160,'M'},
           {var,2160,'F'},
           {var,2160,'A'}]}],
        [[{call,2160,{atom,2160,is_atom},[{var,2160,'M'}]},
          {call,2160,{atom,2160,is_atom},[{var,2160,'F'}]},
          {call,2160,{atom,2160,is_integer},[{var,2160,'A'}]}]],
        [{tuple,2162,[{nil,2162},{var,2162,'St'}]}]},
       {clause,2163,
        [{tuple,2163,
          [{atom,2163,function},
           {var,2163,'M'},
           {var,2163,'F'},
           {var,2163,'A'}]}],
        [],
        [{match,2165,
          {tuple,2165,[{var,2165,'Bvt'},{var,2165,'St1'}]},
          {call,2165,
           {atom,2165,expr_list},
           [{cons,2165,
             {var,2165,'M'},
             {cons,2165,{var,2165,'F'},{cons,2165,{var,2165,'A'},{nil,2165}}}},
            {var,2165,'Vt'},
            {var,2165,'St'}]}},
         {tuple,2166,
          [{call,2166,{atom,2166,vtupdate},[{var,2166,'Bvt'},{var,2166,'Vt'}]},
           {var,2166,'St1'}]}]}]}]},
   {clause,2168,
    [{tuple,2168,
      [{atom,2168,named_fun},{var,2168,'_'},{atom,2168,'_'},{var,2168,'Cs'}]},
     {var,2168,'Vt'},
     {var,2168,'St'}],
    [],
    [{call,2169,
      {atom,2169,fun_clauses},
      [{var,2169,'Cs'},{var,2169,'Vt'},{var,2169,'St'}]}]},
   {clause,2170,
    [{tuple,2170,
      [{atom,2170,named_fun},
       {var,2170,'Line'},
       {var,2170,'Name'},
       {var,2170,'Cs'}]},
     {var,2170,'Vt'},
     {var,2170,'St0'}],
    [],
    [{match,2171,
      {var,2171,'Nvt0'},
      {cons,2171,
       {tuple,2171,
        [{var,2171,'Name'},
         {tuple,2171,
          [{atom,2171,bound},
           {atom,2171,unused},
           {cons,2171,{var,2171,'Line'},{nil,2171}}]}]},
       {nil,2171}}},
     {match,2172,
      {var,2172,'St1'},
      {call,2172,
       {atom,2172,shadow_vars},
       [{var,2172,'Nvt0'},
        {var,2172,'Vt'},
        {atom,2172,'named fun'},
        {var,2172,'St0'}]}},
     {match,2173,
      {var,2173,'Nvt1'},
      {call,2173,
       {atom,2173,vtupdate},
       [{call,2173,{atom,2173,vtsubtract},[{var,2173,'Vt'},{var,2173,'Nvt0'}]},
        {var,2173,'Nvt0'}]}},
     {match,2174,
      {tuple,2174,[{var,2174,'Csvt'},{var,2174,'St2'}]},
      {call,2174,
       {atom,2174,fun_clauses},
       [{var,2174,'Cs'},{var,2174,'Nvt1'},{var,2174,'St1'}]}},
     {match,2175,
      {tuple,2175,[{var,2175,'_'},{var,2175,'St3'}]},
      {call,2175,
       {atom,2175,check_unused_vars},
       [{call,2175,{atom,2175,vtupdate},[{var,2175,'Csvt'},{var,2175,'Nvt0'}]},
        {nil,2175},
        {var,2175,'St2'}]}},
     {tuple,2176,
      [{call,2176,{atom,2176,vtold},[{var,2176,'Csvt'},{var,2176,'Vt'}]},
       {var,2176,'St3'}]}]},
   {clause,2177,
    [{tuple,2177,
      [{atom,2177,call},
       {var,2177,'_Line'},
       {tuple,2177,[{atom,2177,atom},{var,2177,'_Lr'},{atom,2177,is_record}]},
       {cons,2177,
        {var,2177,'E'},
        {cons,2177,
         {tuple,2177,[{atom,2177,atom},{var,2177,'Ln'},{var,2177,'Name'}]},
         {nil,2177}}}]},
     {var,2177,'Vt'},
     {var,2177,'St0'}],
    [],
    [{match,2178,
      {tuple,2178,[{var,2178,'Rvt'},{var,2178,'St1'}]},
      {call,2178,
       {atom,2178,expr},
       [{var,2178,'E'},{var,2178,'Vt'},{var,2178,'St0'}]}},
     {tuple,2179,
      [{var,2179,'Rvt'},
       {call,2179,
        {atom,2179,exist_record},
        [{var,2179,'Ln'},{var,2179,'Name'},{var,2179,'St1'}]}]}]},
   {clause,2180,
    [{tuple,2180,
      [{atom,2180,call},
       {var,2180,'Line'},
       {tuple,2180,
        [{atom,2180,remote},
         {var,2180,'_Lr'},
         {tuple,2180,[{atom,2180,atom},{var,2180,'_Lm'},{atom,2180,erlang}]},
         {tuple,2180,
          [{atom,2180,atom},{var,2180,'Lf'},{atom,2180,is_record}]}]},
       {cons,2180,{var,2180,'E'},{cons,2180,{var,2180,'A'},{nil,2180}}}]},
     {var,2181,'Vt'},
     {var,2181,'St0'}],
    [],
    [{call,2182,
      {atom,2182,expr},
      [{tuple,2182,
        [{atom,2182,call},
         {var,2182,'Line'},
         {tuple,2182,[{atom,2182,atom},{var,2182,'Lf'},{atom,2182,is_record}]},
         {cons,2182,{var,2182,'E'},{cons,2182,{var,2182,'A'},{nil,2182}}}]},
       {var,2182,'Vt'},
       {var,2182,'St0'}]}]},
   {clause,2183,
    [{tuple,2183,
      [{atom,2183,call},
       {var,2183,'L'},
       {tuple,2183,
        [{atom,2183,tuple},
         {var,2183,'Lt'},
         {cons,2183,
          {tuple,2183,[{atom,2183,atom},{var,2183,'Lm'},{atom,2183,erlang}]},
          {cons,2183,
           {tuple,2183,
            [{atom,2183,atom},{var,2183,'Lf'},{atom,2183,is_record}]},
           {nil,2183}}}]},
       {var,2183,'As'}]},
     {var,2183,'Vt'},
     {var,2183,'St'}],
    [],
    [{call,2184,
      {atom,2184,expr},
      [{tuple,2184,
        [{atom,2184,call},
         {var,2184,'L'},
         {tuple,2184,
          [{atom,2184,remote},
           {var,2184,'Lt'},
           {tuple,2184,[{atom,2184,atom},{var,2184,'Lm'},{atom,2184,erlang}]},
           {tuple,2184,
            [{atom,2184,atom},{var,2184,'Lf'},{atom,2184,is_record}]}]},
         {var,2184,'As'}]},
       {var,2184,'Vt'},
       {var,2184,'St'}]}]},
   {clause,2185,
    [{tuple,2185,
      [{atom,2185,call},
       {var,2185,'Line'},
       {tuple,2185,
        [{atom,2185,remote},
         {var,2185,'_Lr'},
         {tuple,2185,[{atom,2185,atom},{var,2185,'_Lm'},{var,2185,'M'}]},
         {tuple,2185,[{atom,2185,atom},{var,2185,'Lf'},{var,2185,'F'}]}]},
       {var,2185,'As'}]},
     {var,2185,'Vt'},
     {var,2185,'St0'}],
    [],
    [{match,2186,
      {var,2186,'St1'},
      {call,2186,
       {atom,2186,keyword_warning},
       [{var,2186,'Lf'},{var,2186,'F'},{var,2186,'St0'}]}},
     {match,2187,
      {var,2187,'St2'},
      {call,2187,
       {atom,2187,check_remote_function},
       [{var,2187,'Line'},
        {var,2187,'M'},
        {var,2187,'F'},
        {var,2187,'As'},
        {var,2187,'St1'}]}},
     {call,2188,
      {atom,2188,expr_list},
      [{var,2188,'As'},{var,2188,'Vt'},{var,2188,'St2'}]}]},
   {clause,2189,
    [{tuple,2189,
      [{atom,2189,call},
       {var,2189,'Line'},
       {tuple,2189,
        [{atom,2189,remote},{var,2189,'_Lr'},{var,2189,'M'},{var,2189,'F'}]},
       {var,2189,'As'}]},
     {var,2189,'Vt'},
     {var,2189,'St0'}],
    [],
    [{match,2190,
      {var,2190,'St1'},
      {call,2190,
       {atom,2190,keyword_warning},
       [{var,2190,'Line'},{var,2190,'M'},{var,2190,'St0'}]}},
     {match,2191,
      {var,2191,'St2'},
      {call,2191,
       {atom,2191,keyword_warning},
       [{var,2191,'Line'},{var,2191,'F'},{var,2191,'St1'}]}},
     {call,2192,
      {atom,2192,expr_list},
      [{cons,2192,{var,2192,'M'},{cons,2192,{var,2192,'F'},{var,2192,'As'}}},
       {var,2192,'Vt'},
       {var,2192,'St2'}]}]},
   {clause,2193,
    [{tuple,2193,
      [{atom,2193,call},
       {var,2193,'Line'},
       {tuple,2193,[{atom,2193,atom},{var,2193,'La'},{var,2193,'F'}]},
       {var,2193,'As'}]},
     {var,2193,'Vt'},
     {var,2193,'St0'}],
    [],
    [{match,2194,
      {var,2194,'St1'},
      {call,2194,
       {atom,2194,keyword_warning},
       [{var,2194,'La'},{var,2194,'F'},{var,2194,'St0'}]}},
     {match,2195,
      {tuple,2195,[{var,2195,'Asvt'},{var,2195,'St2'}]},
      {call,2195,
       {atom,2195,expr_list},
       [{var,2195,'As'},{var,2195,'Vt'},{var,2195,'St1'}]}},
     {match,2196,
      {var,2196,'A'},
      {call,2196,{atom,2196,length},[{var,2196,'As'}]}},
     {match,2197,
      {var,2197,'IsLocal'},
      {call,2197,
       {atom,2197,is_local_function},
       [{call,2197,
         {remote,2197,{atom,2197,erlang},{atom,2197,element}},
         [{integer,2197,9},{var,2197,'St2'}]},
        {tuple,2197,[{var,2197,'F'},{var,2197,'A'}]}]}},
     {match,2198,
      {var,2198,'IsAutoBif'},
      {call,2198,
       {remote,2198,{atom,2198,erl_internal},{atom,2198,bif}},
       [{var,2198,'F'},{var,2198,'A'}]}},
     {match,2199,
      {var,2199,'AutoSuppressed'},
      {call,2199,
       {atom,2199,is_autoimport_suppressed},
       [{call,2199,
         {remote,2199,{atom,2199,erlang},{atom,2199,element}},
         [{integer,2199,10},{var,2199,'St2'}]},
        {tuple,2199,[{var,2199,'F'},{var,2199,'A'}]}]}},
     {match,2200,
      {var,2200,'Warn'},
      {op,2200,'and',
       {call,2200,
        {atom,2200,is_warn_enabled},
        [{atom,2200,bif_clash},{var,2200,'St2'}]},
       {op,2200,'not',
        {call,2200,
         {atom,2200,bif_clash_specifically_disabled},
         [{var,2200,'St2'},{tuple,2200,[{var,2200,'F'},{var,2200,'A'}]}]}}}},
     {match,2201,
      {var,2201,'Imported'},
      {call,2201,
       {atom,2201,imported},
       [{var,2201,'F'},{var,2201,'A'},{var,2201,'St2'}]}},
     {'case',2202,
      {op,2202,'andalso',
       {op,2202,'not',{var,2202,'IsLocal'}},
       {op,2202,'andalso',
        {op,2202,'=:=',{var,2202,'Imported'},{atom,2202,no}},
        {op,2203,'andalso',
         {var,2203,'IsAutoBif'},
         {op,2203,'not',{var,2203,'AutoSuppressed'}}}}},
      [{clause,2204,
        [{atom,2204,true}],
        [],
        [{match,2205,
          {var,2205,'St3'},
          {call,2205,
           {atom,2205,deprecated_function},
           [{var,2205,'Line'},
            {atom,2205,erlang},
            {var,2205,'F'},
            {var,2205,'As'},
            {var,2205,'St2'}]}},
         {tuple,2206,[{var,2206,'Asvt'},{var,2206,'St3'}]}]},
       {clause,2207,
        [{atom,2207,false}],
        [],
        [{tuple,2208,
          [{var,2208,'Asvt'},
           {'case',2208,
            {var,2208,'Imported'},
            [{clause,2209,
              [{tuple,2209,[{atom,2209,yes},{var,2209,'M'}]}],
              [],
              [{match,2210,
                {var,2210,'St3'},
                {call,2210,
                 {atom,2210,check_remote_function},
                 [{var,2210,'Line'},
                  {var,2210,'M'},
                  {var,2210,'F'},
                  {var,2210,'As'},
                  {var,2210,'St2'}]}},
               {match,2211,
                {var,2211,'U0'},
                {call,2211,
                 {remote,2211,{atom,2211,erlang},{atom,2211,element}},
                 [{integer,2211,26},{var,2211,'St3'}]}},
               {match,2212,
                {var,2212,'Imp'},
                {call,2212,
                 {remote,2212,{atom,2212,ordsets},{atom,2212,add_element}},
                 [{tuple,2212,
                   [{tuple,2212,[{var,2212,'F'},{var,2212,'A'}]},
                    {var,2212,'M'}]},
                  {call,2212,
                   {remote,2212,{atom,2212,erlang},{atom,2212,element}},
                   [{integer,2212,3},{var,2212,'U0'}]}]}},
               {call,2213,
                {remote,2213,{atom,2213,erlang},{atom,2213,setelement}},
                [{integer,2213,26},
                 {var,2213,'St3'},
                 {call,2213,
                  {remote,2213,{atom,2213,erlang},{atom,2213,setelement}},
                  [{integer,2213,3},{var,2213,'U0'},{var,2213,'Imp'}]}]}]},
             {clause,2214,
              [{atom,2214,no}],
              [],
              [{'case',2215,
                {tuple,2215,[{var,2215,'F'},{var,2215,'A'}]},
                [{clause,2216,
                  [{tuple,2216,[{atom,2216,record_info},{integer,2216,2}]}],
                  [],
                  [{call,2217,
                    {atom,2217,check_record_info_call},
                    [{var,2217,'Line'},
                     {var,2217,'La'},
                     {var,2217,'As'},
                     {var,2217,'St2'}]}]},
                 {clause,2218,
                  [{var,2218,'N'}],
                  [],
                  [{match,2221,
                    {var,2221,'St3'},
                    {'if',2221,
                     [{clause,2222,[],
                       [[{op,2222,'andalso',
                          {op,2222,'not',{var,2222,'AutoSuppressed'}},
                          {op,2222,'andalso',
                           {var,2222,'IsAutoBif'},
                           {var,2222,'Warn'}}}]],
                       [{'case',2223,
                         {call,2223,
                          {remote,2223,
                           {atom,2223,erl_internal},
                           {atom,2223,old_bif}},
                          [{var,2223,'F'},{var,2223,'A'}]},
                         [{clause,2224,
                           [{atom,2224,true}],
                           [],
                           [{call,2225,
                             {atom,2225,add_error},
                             [{var,2226,'Line'},
                              {tuple,2227,
                               [{atom,2227,call_to_redefined_old_bif},
                                {tuple,2227,[{var,2227,'F'},{var,2227,'A'}]}]},
                              {var,2228,'St2'}]}]},
                          {clause,2229,
                           [{atom,2229,false}],
                           [],
                           [{call,2230,
                             {atom,2230,add_warning},
                             [{var,2231,'Line'},
                              {tuple,2232,
                               [{atom,2232,call_to_redefined_bif},
                                {tuple,2232,[{var,2232,'F'},{var,2232,'A'}]}]},
                              {var,2233,'St2'}]}]}]}]},
                      {clause,2235,[],
                       [[{atom,2235,true}]],
                       [{var,2236,'St2'}]}]}},
                   {'if',2239,
                    [{clause,2240,[],
                      [[{op,2240,'=:=',
                         {var,2240,'N'},
                         {call,2240,
                          {remote,2240,{atom,2240,erlang},{atom,2240,element}},
                          [{integer,2240,16},{var,2240,'St3'}]}}]],
                      [{var,2241,'St3'}]},
                     {clause,2242,[],
                      [[{atom,2242,true}]],
                      [{call,2243,
                        {atom,2243,call_function},
                        [{var,2243,'Line'},
                         {var,2243,'F'},
                         {var,2243,'A'},
                         {var,2243,'St3'}]}]}]}]}]}]}]}]}]}]}]},
   {clause,2248,
    [{tuple,2248,
      [{atom,2248,call},{var,2248,'Line'},{var,2248,'F'},{var,2248,'As'}]},
     {var,2248,'Vt'},
     {var,2248,'St0'}],
    [],
    [{match,2249,
      {var,2249,'St'},
      {call,2249,
       {atom,2249,warn_invalid_call},
       [{var,2249,'Line'},{var,2249,'F'},{var,2249,'St0'}]}},
     {call,2250,
      {atom,2250,expr_list},
      [{cons,2250,{var,2250,'F'},{var,2250,'As'}},
       {var,2250,'Vt'},
       {var,2250,'St'}]}]},
   {clause,2251,
    [{tuple,2251,
      [{atom,2251,'try'},
       {var,2251,'Line'},
       {var,2251,'Es'},
       {var,2251,'Scs'},
       {var,2251,'Ccs'},
       {var,2251,'As'}]},
     {var,2251,'Vt'},
     {var,2251,'St0'}],
    [],
    [{match,2254,
      {tuple,2254,[{var,2254,'Evt0'},{var,2254,'St1'}]},
      {call,2254,
       {atom,2254,exprs},
       [{var,2254,'Es'},{var,2254,'Vt'},{var,2254,'St0'}]}},
     {match,2255,
      {var,2255,'TryLine'},
      {tuple,2255,[{atom,2255,'try'},{var,2255,'Line'}]}},
     {match,2256,
      {var,2256,'Uvt'},
      {call,2256,
       {atom,2256,vtunsafe},
       [{var,2256,'TryLine'},{var,2256,'Evt0'},{var,2256,'Vt'}]}},
     {match,2257,
      {var,2257,'Evt1'},
      {call,2257,{atom,2257,vtupdate},[{var,2257,'Uvt'},{var,2257,'Evt0'}]}},
     {match,2258,
      {tuple,2258,[{var,2258,'Sccs'},{var,2258,'St2'}]},
      {call,2258,
       {atom,2258,icrt_clauses},
       [{op,2258,'++',{var,2258,'Scs'},{var,2258,'Ccs'}},
        {var,2258,'TryLine'},
        {call,2258,{atom,2258,vtupdate},[{var,2258,'Evt1'},{var,2258,'Vt'}]},
        {var,2258,'St1'}]}},
     {match,2259,{var,2259,'Rvt0'},{var,2259,'Sccs'}},
     {match,2260,
      {var,2260,'Rvt1'},
      {call,2260,
       {atom,2260,vtupdate},
       [{call,2260,
         {atom,2260,vtunsafe},
         [{var,2260,'TryLine'},{var,2260,'Rvt0'},{var,2260,'Vt'}]},
        {var,2260,'Rvt0'}]}},
     {match,2261,
      {var,2261,'Evt2'},
      {call,2261,{atom,2261,vtmerge},[{var,2261,'Evt1'},{var,2261,'Rvt1'}]}},
     {match,2262,
      {tuple,2262,[{var,2262,'Avt0'},{var,2262,'St'}]},
      {call,2262,
       {atom,2262,exprs},
       [{var,2262,'As'},
        {call,2262,{atom,2262,vtupdate},[{var,2262,'Evt2'},{var,2262,'Vt'}]},
        {var,2262,'St2'}]}},
     {match,2263,
      {var,2263,'Avt1'},
      {call,2263,
       {atom,2263,vtupdate},
       [{call,2263,
         {atom,2263,vtunsafe},
         [{var,2263,'TryLine'},{var,2263,'Avt0'},{var,2263,'Vt'}]},
        {var,2263,'Avt0'}]}},
     {match,2264,
      {var,2264,'Avt'},
      {call,2264,{atom,2264,vtmerge},[{var,2264,'Evt2'},{var,2264,'Avt1'}]}},
     {tuple,2265,[{var,2265,'Avt'},{var,2265,'St'}]}]},
   {clause,2266,
    [{tuple,2266,[{atom,2266,'catch'},{var,2266,'Line'},{var,2266,'E'}]},
     {var,2266,'Vt'},
     {var,2266,'St0'}],
    [],
    [{match,2268,
      {tuple,2268,[{var,2268,'Evt'},{var,2268,'St'}]},
      {call,2268,
       {atom,2268,expr},
       [{var,2268,'E'},{var,2268,'Vt'},{var,2268,'St0'}]}},
     {tuple,2269,
      [{call,2269,
        {atom,2269,vtupdate},
        [{call,2269,
          {atom,2269,vtunsafe},
          [{tuple,2269,[{atom,2269,'catch'},{var,2269,'Line'}]},
           {var,2269,'Evt'},
           {var,2269,'Vt'}]},
         {var,2269,'Evt'}]},
       {var,2269,'St'}]}]},
   {clause,2270,
    [{tuple,2270,
      [{atom,2270,match},{var,2270,'_Line'},{var,2270,'P'},{var,2270,'E'}]},
     {var,2270,'Vt'},
     {var,2270,'St0'}],
    [],
    [{match,2271,
      {tuple,2271,[{var,2271,'Evt'},{var,2271,'St1'}]},
      {call,2271,
       {atom,2271,expr},
       [{var,2271,'E'},{var,2271,'Vt'},{var,2271,'St0'}]}},
     {match,2272,
      {tuple,2272,[{var,2272,'Pvt'},{var,2272,'Bvt'},{var,2272,'St2'}]},
      {call,2272,
       {atom,2272,pattern},
       [{var,2272,'P'},
        {call,2272,{atom,2272,vtupdate},[{var,2272,'Evt'},{var,2272,'Vt'}]},
        {var,2272,'St1'}]}},
     {match,2273,
      {var,2273,'St'},
      {call,2273,
       {atom,2273,reject_bin_alias_expr},
       [{var,2273,'P'},{var,2273,'E'},{var,2273,'St2'}]}},
     {tuple,2274,
      [{call,2274,
        {atom,2274,vtupdate},
        [{var,2274,'Bvt'},
         {call,2274,{atom,2274,vtmerge},[{var,2274,'Evt'},{var,2274,'Pvt'}]}]},
       {var,2274,'St'}]}]},
   {clause,2276,
    [{tuple,2276,
      [{atom,2276,op},{var,2276,'_Line'},{var,2276,'_Op'},{var,2276,'A'}]},
     {var,2276,'Vt'},
     {var,2276,'St'}],
    [],
    [{call,2277,
      {atom,2277,expr},
      [{var,2277,'A'},{var,2277,'Vt'},{var,2277,'St'}]}]},
   {clause,2278,
    [{tuple,2278,
      [{atom,2278,op},
       {var,2278,'Line'},
       {var,2278,'Op'},
       {var,2278,'L'},
       {var,2278,'R'}]},
     {var,2278,'Vt'},
     {var,2278,'St0'}],
    [[{op,2278,'=:=',{var,2278,'Op'},{atom,2278,'orelse'}}],
     [{op,2278,'=:=',{var,2278,'Op'},{atom,2278,'andalso'}}]],
    [{match,2279,
      {tuple,2279,[{var,2279,'Evt1'},{var,2279,'St1'}]},
      {call,2279,
       {atom,2279,expr},
       [{var,2279,'L'},{var,2279,'Vt'},{var,2279,'St0'}]}},
     {match,2280,
      {var,2280,'Vt1'},
      {call,2280,{atom,2280,vtupdate},[{var,2280,'Evt1'},{var,2280,'Vt'}]}},
     {match,2281,
      {tuple,2281,[{var,2281,'Evt2'},{var,2281,'St2'}]},
      {call,2281,
       {atom,2281,expr},
       [{var,2281,'R'},{var,2281,'Vt1'},{var,2281,'St1'}]}},
     {match,2282,
      {var,2282,'Evt3'},
      {call,2282,
       {atom,2282,vtupdate},
       [{call,2282,
         {atom,2282,vtunsafe},
         [{tuple,2282,[{var,2282,'Op'},{var,2282,'Line'}]},
          {var,2282,'Evt2'},
          {var,2282,'Vt1'}]},
        {var,2282,'Evt2'}]}},
     {tuple,2283,
      [{call,2283,{atom,2283,vtmerge},[{var,2283,'Evt1'},{var,2283,'Evt3'}]},
       {var,2283,'St2'}]}]},
   {clause,2284,
    [{tuple,2284,
      [{atom,2284,op},
       {var,2284,'_Line'},
       {var,2284,'_Op'},
       {var,2284,'L'},
       {var,2284,'R'}]},
     {var,2284,'Vt'},
     {var,2284,'St'}],
    [],
    [{call,2285,
      {atom,2285,expr_list},
      [{cons,2285,{var,2285,'L'},{cons,2285,{var,2285,'R'},{nil,2285}}},
       {var,2285,'Vt'},
       {var,2285,'St'}]}]},
   {clause,2287,
    [{tuple,2287,
      [{atom,2287,remote},{var,2287,'Line'},{var,2287,'_M'},{var,2287,'_F'}]},
     {var,2287,'_Vt'},
     {var,2287,'St'}],
    [],
    [{tuple,2288,
      [{nil,2288},
       {call,2288,
        {atom,2288,add_error},
        [{var,2288,'Line'},{atom,2288,illegal_expr},{var,2288,'St'}]}]}]}]},
 {function,2293,expr_list,3,
  [{clause,2293,
    [{var,2293,'Es'},{var,2293,'Vt'},{var,2293,'St'}],
    [],
    [{call,2294,
      {atom,2294,foldl},
      [{'fun',2294,
        {clauses,
         [{clause,2294,
           [{var,2294,'E'},{tuple,2294,[{var,2294,'Esvt'},{var,2294,'St0'}]}],
           [],
           [{match,2295,
             {tuple,2295,[{var,2295,'Evt'},{var,2295,'St1'}]},
             {call,2295,
              {atom,2295,expr},
              [{var,2295,'E'},{var,2295,'Vt'},{var,2295,'St0'}]}},
            {tuple,2296,
             [{call,2296,
               {atom,2296,vtmerge_pat},
               [{var,2296,'Evt'},{var,2296,'Esvt'}]},
              {var,2296,'St1'}]}]}]}},
       {tuple,2297,[{nil,2297},{var,2297,'St'}]},
       {var,2297,'Es'}]}]}]},
 {function,2299,record_expr,4,
  [{clause,2299,
    [{var,2299,'Line'},{var,2299,'Rec'},{var,2299,'Vt'},{var,2299,'St0'}],
    [],
    [{match,2300,
      {var,2300,'St1'},
      {call,2300,
       {atom,2300,warn_invalid_record},
       [{var,2300,'Line'},{var,2300,'Rec'},{var,2300,'St0'}]}},
     {call,2301,
      {atom,2301,expr},
      [{var,2301,'Rec'},{var,2301,'Vt'},{var,2301,'St1'}]}]}]},
 {function,2303,check_assoc_fields,2,
  [{clause,2303,
    [{cons,2303,
      {tuple,2303,
       [{atom,2303,map_field_exact},
        {var,2303,'Line'},
        {var,2303,'_'},
        {var,2303,'_'}]},
      {var,2303,'Fs'}},
     {var,2303,'St'}],
    [],
    [{call,2304,
      {atom,2304,check_assoc_fields},
      [{var,2304,'Fs'},
       {call,2304,
        {atom,2304,add_error},
        [{var,2304,'Line'},
         {atom,2304,illegal_map_construction},
         {var,2304,'St'}]}]}]},
   {clause,2305,
    [{cons,2305,
      {tuple,2305,
       [{atom,2305,map_field_assoc},
        {var,2305,'_'},
        {var,2305,'_'},
        {var,2305,'_'}]},
      {var,2305,'Fs'}},
     {var,2305,'St'}],
    [],
    [{call,2306,
      {atom,2306,check_assoc_fields},
      [{var,2306,'Fs'},{var,2306,'St'}]}]},
   {clause,2307,[{nil,2307},{var,2307,'St'}],[],[{var,2308,'St'}]}]},
 {function,2310,map_fields,4,
  [{clause,2310,
    [{cons,2310,
      {tuple,2310,
       [{var,2310,'Tag'},{var,2310,'_'},{var,2310,'K'},{var,2310,'V'}]},
      {var,2310,'Fs'}},
     {var,2310,'Vt'},
     {var,2310,'St'},
     {var,2310,'F'}],
    [[{op,2310,'=:=',{var,2310,'Tag'},{atom,2310,map_field_assoc}}],
     [{op,2311,'=:=',{var,2311,'Tag'},{atom,2311,map_field_exact}}]],
    [{match,2312,
      {tuple,2312,[{var,2312,'Pvt'},{var,2312,'St2'}]},
      {call,2312,
       {var,2312,'F'},
       [{cons,2312,{var,2312,'K'},{cons,2312,{var,2312,'V'},{nil,2312}}},
        {var,2312,'Vt'},
        {var,2312,'St'}]}},
     {match,2313,
      {tuple,2313,[{var,2313,'Vts'},{var,2313,'St3'}]},
      {call,2313,
       {atom,2313,map_fields},
       [{var,2313,'Fs'},{var,2313,'Vt'},{var,2313,'St2'},{var,2313,'F'}]}},
     {tuple,2314,
      [{call,2314,{atom,2314,vtupdate},[{var,2314,'Pvt'},{var,2314,'Vts'}]},
       {var,2314,'St3'}]}]},
   {clause,2315,
    [{nil,2315},{var,2315,'_'},{var,2315,'St'},{var,2315,'_'}],
    [],
    [{tuple,2316,[{nil,2316},{var,2316,'St'}]}]}]},
 {function,2321,warn_invalid_record,3,
  [{clause,2321,
    [{var,2321,'Line'},{var,2321,'R'},{var,2321,'St'}],
    [],
    [{'case',2322,
      {call,2322,{atom,2322,is_valid_record},[{var,2322,'R'}]},
      [{clause,2323,[{atom,2323,true}],[],[{var,2323,'St'}]},
       {clause,2324,
        [{atom,2324,false}],
        [],
        [{call,2324,
          {atom,2324,add_warning},
          [{var,2324,'Line'},
           {atom,2324,invalid_record},
           {var,2324,'St'}]}]}]}]}]},
 {function,2329,is_valid_record,1,
  [{clause,2329,
    [{var,2329,'Rec'}],
    [],
    [{'case',2330,
      {var,2330,'Rec'},
      [{clause,2331,
        [{tuple,2331,[{atom,2331,char},{var,2331,'_'},{var,2331,'_'}]}],
        [],
        [{atom,2331,false}]},
       {clause,2332,
        [{tuple,2332,[{atom,2332,integer},{var,2332,'_'},{var,2332,'_'}]}],
        [],
        [{atom,2332,false}]},
       {clause,2333,
        [{tuple,2333,[{atom,2333,float},{var,2333,'_'},{var,2333,'_'}]}],
        [],
        [{atom,2333,false}]},
       {clause,2334,
        [{tuple,2334,[{atom,2334,atom},{var,2334,'_'},{var,2334,'_'}]}],
        [],
        [{atom,2334,false}]},
       {clause,2335,
        [{tuple,2335,[{atom,2335,string},{var,2335,'_'},{var,2335,'_'}]}],
        [],
        [{atom,2335,false}]},
       {clause,2336,
        [{tuple,2336,
          [{atom,2336,cons},{var,2336,'_'},{var,2336,'_'},{var,2336,'_'}]}],
        [],
        [{atom,2336,false}]},
       {clause,2337,
        [{tuple,2337,[{atom,2337,nil},{var,2337,'_'}]}],
        [],
        [{atom,2337,false}]},
       {clause,2338,
        [{tuple,2338,
          [{atom,2338,lc},{var,2338,'_'},{var,2338,'_'},{var,2338,'_'}]}],
        [],
        [{atom,2338,false}]},
       {clause,2339,
        [{tuple,2339,
          [{atom,2339,record_index},
           {var,2339,'_'},
           {var,2339,'_'},
           {var,2339,'_'}]}],
        [],
        [{atom,2339,false}]},
       {clause,2340,
        [{tuple,2340,[{atom,2340,'fun'},{var,2340,'_'},{var,2340,'_'}]}],
        [],
        [{atom,2340,false}]},
       {clause,2341,
        [{tuple,2341,
          [{atom,2341,named_fun},
           {var,2341,'_'},
           {var,2341,'_'},
           {var,2341,'_'}]}],
        [],
        [{atom,2341,false}]},
       {clause,2342,[{var,2342,'_'}],[],[{atom,2342,true}]}]}]}]},
 {function,2348,warn_invalid_call,3,
  [{clause,2348,
    [{var,2348,'Line'},{var,2348,'F'},{var,2348,'St'}],
    [],
    [{'case',2349,
      {call,2349,{atom,2349,is_valid_call},[{var,2349,'F'}]},
      [{clause,2350,[{atom,2350,true}],[],[{var,2350,'St'}]},
       {clause,2351,
        [{atom,2351,false}],
        [],
        [{call,2351,
          {atom,2351,add_warning},
          [{var,2351,'Line'},
           {atom,2351,invalid_call},
           {var,2351,'St'}]}]}]}]}]},
 {function,2356,is_valid_call,1,
  [{clause,2356,
    [{var,2356,'Call'}],
    [],
    [{'case',2357,
      {var,2357,'Call'},
      [{clause,2358,
        [{tuple,2358,[{atom,2358,char},{var,2358,'_'},{var,2358,'_'}]}],
        [],
        [{atom,2358,false}]},
       {clause,2359,
        [{tuple,2359,[{atom,2359,integer},{var,2359,'_'},{var,2359,'_'}]}],
        [],
        [{atom,2359,false}]},
       {clause,2360,
        [{tuple,2360,[{atom,2360,float},{var,2360,'_'},{var,2360,'_'}]}],
        [],
        [{atom,2360,false}]},
       {clause,2361,
        [{tuple,2361,[{atom,2361,string},{var,2361,'_'},{var,2361,'_'}]}],
        [],
        [{atom,2361,false}]},
       {clause,2362,
        [{tuple,2362,
          [{atom,2362,cons},{var,2362,'_'},{var,2362,'_'},{var,2362,'_'}]}],
        [],
        [{atom,2362,false}]},
       {clause,2363,
        [{tuple,2363,[{atom,2363,nil},{var,2363,'_'}]}],
        [],
        [{atom,2363,false}]},
       {clause,2364,
        [{tuple,2364,
          [{atom,2364,lc},{var,2364,'_'},{var,2364,'_'},{var,2364,'_'}]}],
        [],
        [{atom,2364,false}]},
       {clause,2365,
        [{tuple,2365,
          [{atom,2365,record_index},
           {var,2365,'_'},
           {var,2365,'_'},
           {var,2365,'_'}]}],
        [],
        [{atom,2365,false}]},
       {clause,2366,
        [{tuple,2366,[{atom,2366,tuple},{var,2366,'_'},{var,2366,'Exprs'}]}],
        [[{op,2366,'=/=',
           {call,2366,{atom,2366,length},[{var,2366,'Exprs'}]},
           {integer,2366,2}}]],
        [{atom,2366,false}]},
       {clause,2367,[{var,2367,'_'}],[],[{atom,2367,true}]}]}]}]},
 {function,2373,is_valid_map_key,1,
  [{clause,2373,
    [{tuple,2373,[{atom,2373,var},{var,2373,'_'},{var,2373,'_'}]}],
    [],
    [{atom,2373,true}]},
   {clause,2374,
    [{var,2374,'K'}],
    [],
    [{call,2374,{atom,2374,is_valid_map_key_value},[{var,2374,'K'}]}]}]},
 {function,2375,is_valid_map_key_value,1,
  [{clause,2375,
    [{var,2375,'K'}],
    [],
    [{'case',2376,
      {var,2376,'K'},
      [{clause,2377,
        [{tuple,2377,[{atom,2377,var},{var,2377,'_'},{var,2377,'_'}]}],
        [],
        [{atom,2377,false}]},
       {clause,2378,
        [{tuple,2378,[{atom,2378,char},{var,2378,'_'},{var,2378,'_'}]}],
        [],
        [{atom,2378,true}]},
       {clause,2379,
        [{tuple,2379,[{atom,2379,integer},{var,2379,'_'},{var,2379,'_'}]}],
        [],
        [{atom,2379,true}]},
       {clause,2380,
        [{tuple,2380,[{atom,2380,float},{var,2380,'_'},{var,2380,'_'}]}],
        [],
        [{atom,2380,true}]},
       {clause,2381,
        [{tuple,2381,[{atom,2381,string},{var,2381,'_'},{var,2381,'_'}]}],
        [],
        [{atom,2381,true}]},
       {clause,2382,
        [{tuple,2382,[{atom,2382,nil},{var,2382,'_'}]}],
        [],
        [{atom,2382,true}]},
       {clause,2383,
        [{tuple,2383,[{atom,2383,atom},{var,2383,'_'},{var,2383,'_'}]}],
        [],
        [{atom,2383,true}]},
       {clause,2384,
        [{tuple,2384,
          [{atom,2384,cons},{var,2384,'_'},{var,2384,'H'},{var,2384,'T'}]}],
        [],
        [{op,2385,'andalso',
          {call,2385,{atom,2385,is_valid_map_key_value},[{var,2385,'H'}]},
          {call,2386,{atom,2386,is_valid_map_key_value},[{var,2386,'T'}]}}]},
       {clause,2387,
        [{tuple,2387,[{atom,2387,tuple},{var,2387,'_'},{var,2387,'Es'}]}],
        [],
        [{call,2388,
          {atom,2388,foldl},
          [{'fun',2388,
            {clauses,
             [{clause,2388,
               [{var,2388,'E'},{var,2388,'B'}],
               [],
               [{op,2389,'andalso',
                 {var,2389,'B'},
                 {call,2389,
                  {atom,2389,is_valid_map_key_value},
                  [{var,2389,'E'}]}}]}]}},
           {atom,2390,true},
           {var,2390,'Es'}]}]},
       {clause,2391,
        [{tuple,2391,
          [{atom,2391,map},{var,2391,'_'},{var,2391,'Arg'},{var,2391,'Ps'}]}],
        [],
        [{op,2395,'andalso',
          {call,2395,{atom,2395,is_valid_map_key_value},[{var,2395,'Arg'}]},
          {call,2395,
           {atom,2395,foldl},
           [{'fun',2395,
             {clauses,
              [{clause,2396,
                [{tuple,2396,
                  [{var,2396,'Tag'},
                   {var,2396,'_'},
                   {var,2396,'Ke'},
                   {var,2396,'Ve'}]},
                 {var,2396,'B'}],
                [[{op,2396,'=:=',
                   {var,2396,'Tag'},
                   {atom,2396,map_field_assoc}}],
                 [{op,2397,'=:=',
                   {var,2397,'Tag'},
                   {atom,2397,map_field_exact}}]],
                [{op,2398,'andalso',
                  {var,2398,'B'},
                  {op,2399,'andalso',
                   {call,2398,
                    {atom,2398,is_valid_map_key_value},
                    [{var,2398,'Ke'}]},
                   {call,2399,
                    {atom,2399,is_valid_map_key_value},
                    [{var,2399,'Ve'}]}}}]},
               {clause,2400,
                [{var,2400,'_'},{var,2400,'_'}],
                [],
                [{atom,2400,false}]}]}},
            {atom,2401,true},
            {var,2401,'Ps'}]}}]},
       {clause,2402,
        [{tuple,2402,[{atom,2402,map},{var,2402,'_'},{var,2402,'Ps'}]}],
        [],
        [{call,2403,
          {atom,2403,foldl},
          [{'fun',2403,
            {clauses,
             [{clause,2404,
               [{tuple,2404,
                 [{var,2404,'Tag'},
                  {var,2404,'_'},
                  {var,2404,'Ke'},
                  {var,2404,'Ve'}]},
                {var,2404,'B'}],
               [[{op,2404,'=:=',{var,2404,'Tag'},{atom,2404,map_field_assoc}}],
                [{op,2405,'=:=',
                  {var,2405,'Tag'},
                  {atom,2405,map_field_exact}}]],
               [{op,2406,'andalso',
                 {var,2406,'B'},
                 {op,2407,'andalso',
                  {call,2406,
                   {atom,2406,is_valid_map_key_value},
                   [{var,2406,'Ke'}]},
                  {call,2407,
                   {atom,2407,is_valid_map_key_value},
                   [{var,2407,'Ve'}]}}}]},
              {clause,2408,
               [{var,2408,'_'},{var,2408,'_'}],
               [],
               [{atom,2408,false}]}]}},
           {atom,2409,true},
           {var,2409,'Ps'}]}]},
       {clause,2410,
        [{tuple,2410,
          [{atom,2410,record},{var,2410,'_'},{var,2410,'_'},{var,2410,'Fs'}]}],
        [],
        [{call,2411,
          {atom,2411,foldl},
          [{'fun',2411,
            {clauses,
             [{clause,2412,
               [{tuple,2412,
                 [{atom,2412,record_field},
                  {var,2412,'_'},
                  {var,2412,'Ke'},
                  {var,2412,'Ve'}]},
                {var,2412,'B'}],
               [],
               [{op,2413,'andalso',
                 {var,2413,'B'},
                 {op,2414,'andalso',
                  {call,2413,
                   {atom,2413,is_valid_map_key_value},
                   [{var,2413,'Ke'}]},
                  {call,2414,
                   {atom,2414,is_valid_map_key_value},
                   [{var,2414,'Ve'}]}}}]}]}},
           {atom,2415,true},
           {var,2415,'Fs'}]}]},
       {clause,2416,
        [{tuple,2416,[{atom,2416,bin},{var,2416,'_'},{var,2416,'Es'}]}],
        [],
        [{call,2420,
          {atom,2420,foldl},
          [{'fun',2420,
            {clauses,
             [{clause,2421,
               [{tuple,2421,
                 [{atom,2421,bin_element},
                  {var,2421,'_'},
                  {var,2421,'E'},
                  {var,2421,'_'},
                  {var,2421,'_'}]},
                {var,2421,'B'}],
               [],
               [{op,2422,'andalso',
                 {var,2422,'B'},
                 {call,2422,
                  {atom,2422,is_valid_map_key_value},
                  [{var,2422,'E'}]}}]}]}},
           {atom,2423,true},
           {var,2423,'Es'}]}]},
       {clause,2424,
        [{var,2424,'Val'}],
        [],
        [{call,2424,{atom,2424,is_pattern_expr},[{var,2424,'Val'}]}]}]}]}]},
 {function,2431,record_def,4,
  [{clause,2431,
    [{var,2431,'Line'},{var,2431,'Name'},{var,2431,'Fs0'},{var,2431,'St0'}],
    [],
    [{'case',2432,
      {call,2432,
       {remote,2432,{atom,2432,dict},{atom,2432,is_key}},
       [{var,2432,'Name'},
        {call,2432,
         {remote,2432,{atom,2432,erlang},{atom,2432,element}},
         [{integer,2432,8},{var,2432,'St0'}]}]},
      [{clause,2433,
        [{atom,2433,true}],
        [],
        [{call,2433,
          {atom,2433,add_error},
          [{var,2433,'Line'},
           {tuple,2433,[{atom,2433,redefine_record},{var,2433,'Name'}]},
           {var,2433,'St0'}]}]},
       {clause,2434,
        [{atom,2434,false}],
        [],
        [{match,2435,
          {tuple,2435,[{var,2435,'Fs1'},{var,2435,'St1'}]},
          {call,2435,
           {atom,2435,def_fields},
           [{call,2435,{atom,2435,normalise_fields},[{var,2435,'Fs0'}]},
            {var,2435,'Name'},
            {var,2435,'St0'}]}},
         {call,2436,
          {remote,2436,{atom,2436,erlang},{atom,2436,setelement}},
          [{integer,2436,8},
           {var,2436,'St1'},
           {call,2436,
            {remote,2436,{atom,2436,dict},{atom,2436,store}},
            [{var,2436,'Name'},
             {tuple,2436,[{var,2436,'Line'},{var,2436,'Fs1'}]},
             {call,2436,
              {remote,2436,{atom,2436,erlang},{atom,2436,element}},
              [{integer,2436,8},{var,2436,'St1'}]}]}]}]}]}]}]},
 {function,2443,def_fields,3,
  [{clause,2443,
    [{var,2443,'Fs0'},{var,2443,'Name'},{var,2443,'St0'}],
    [],
    [{call,2444,
      {atom,2444,foldl},
      [{'fun',2444,
        {clauses,
         [{clause,2444,
           [{tuple,2444,
             [{atom,2444,record_field},
              {var,2444,'Lf'},
              {tuple,2444,[{atom,2444,atom},{var,2444,'La'},{var,2444,'F'}]},
              {var,2444,'V'}]},
            {tuple,2444,[{var,2444,'Fs'},{var,2444,'St'}]}],
           [],
           [{'case',2445,
             {call,2445,
              {atom,2445,exist_field},
              [{var,2445,'F'},{var,2445,'Fs'}]},
             [{clause,2446,
               [{atom,2446,true}],
               [],
               [{tuple,2446,
                 [{var,2446,'Fs'},
                  {call,2446,
                   {atom,2446,add_error},
                   [{var,2446,'Lf'},
                    {tuple,2446,
                     [{atom,2446,redefine_field},
                      {var,2446,'Name'},
                      {var,2446,'F'}]},
                    {var,2446,'St'}]}]}]},
              {clause,2447,
               [{atom,2447,false}],
               [],
               [{match,2448,
                 {var,2448,'St1'},
                 {call,2448,
                  {remote,2448,{atom,2448,erlang},{atom,2448,setelement}},
                  [{integer,2448,23},{var,2448,'St'},{atom,2448,true}]}},
                {match,2449,
                 {tuple,2449,[{var,2449,'_'},{var,2449,'St2'}]},
                 {call,2449,
                  {atom,2449,expr},
                  [{var,2449,'V'},{nil,2449},{var,2449,'St1'}]}},
                {match,2452,
                 {var,2452,'St3'},
                 {call,2452,
                  {remote,2452,{atom,2452,erlang},{atom,2452,setelement}},
                  [{integer,2452,23},
                   {call,2452,
                    {remote,2452,{atom,2452,erlang},{atom,2452,setelement}},
                    [{integer,2452,25},
                     {call,2452,
                      {remote,2452,{atom,2452,erlang},{atom,2452,setelement}},
                      [{integer,2452,20},
                       {call,2452,
                        {remote,2452,
                         {atom,2452,erlang},
                         {atom,2452,setelement}},
                        [{integer,2452,21},
                         {var,2452,'St1'},
                         {call,2452,
                          {remote,2452,{atom,2452,erlang},{atom,2452,element}},
                          [{integer,2452,21},{var,2452,'St2'}]}]},
                       {call,2453,
                        {remote,2453,{atom,2453,erlang},{atom,2453,element}},
                        [{integer,2453,20},{var,2453,'St2'}]}]},
                     {call,2454,
                      {remote,2454,{atom,2454,erlang},{atom,2454,element}},
                      [{integer,2454,25},{var,2454,'St2'}]}]},
                   {atom,2455,false}]}},
                {match,2458,
                 {var,2458,'NV'},
                 {'case',2458,
                  {op,2458,'=:=',
                   {call,2458,
                    {remote,2458,{atom,2458,erlang},{atom,2458,element}},
                    [{integer,2458,20},{var,2458,'St2'}]},
                   {call,2458,
                    {remote,2458,{atom,2458,erlang},{atom,2458,element}},
                    [{integer,2458,20},{var,2458,'St1'}]}},
                  [{clause,2459,[{atom,2459,true}],[],[{var,2459,'V'}]},
                   {clause,2460,
                    [{atom,2460,false}],
                    [],
                    [{tuple,2460,
                      [{atom,2460,atom},
                       {var,2460,'La'},
                       {atom,2460,undefined}]}]}]}},
                {tuple,2462,
                 [{cons,2462,
                   {tuple,2462,
                    [{atom,2462,record_field},
                     {var,2462,'Lf'},
                     {tuple,2462,
                      [{atom,2462,atom},{var,2462,'La'},{var,2462,'F'}]},
                     {var,2462,'NV'}]},
                   {var,2462,'Fs'}},
                  {var,2462,'St3'}]}]}]}]}]}},
       {tuple,2464,[{nil,2464},{var,2464,'St0'}]},
       {var,2464,'Fs0'}]}]}]},
 {function,2471,normalise_fields,1,
  [{clause,2471,
    [{var,2471,'Fs'}],
    [],
    [{call,2472,
      {atom,2472,map},
      [{'fun',2472,
        {clauses,
         [{clause,2472,
           [{tuple,2472,
             [{atom,2472,record_field},{var,2472,'Lf'},{var,2472,'Field'}]}],
           [],
           [{tuple,2473,
             [{atom,2473,record_field},
              {var,2473,'Lf'},
              {var,2473,'Field'},
              {tuple,2473,
               [{atom,2473,atom},{var,2473,'Lf'},{atom,2473,undefined}]}]}]},
          {clause,2474,
           [{tuple,2474,
             [{atom,2474,typed_record_field},
              {tuple,2474,
               [{atom,2474,record_field},{var,2474,'Lf'},{var,2474,'Field'}]},
              {var,2474,'_Type'}]}],
           [],
           [{tuple,2475,
             [{atom,2475,record_field},
              {var,2475,'Lf'},
              {var,2475,'Field'},
              {tuple,2475,
               [{atom,2475,atom},{var,2475,'Lf'},{atom,2475,undefined}]}]}]},
          {clause,2476,
           [{tuple,2476,
             [{atom,2476,typed_record_field},
              {var,2476,'Field'},
              {var,2476,'_Type'}]}],
           [],
           [{var,2477,'Field'}]},
          {clause,2478,[{var,2478,'F'}],[],[{var,2478,'F'}]}]}},
       {var,2478,'Fs'}]}]}]},
 {function,2483,exist_record,3,
  [{clause,2483,
    [{var,2483,'Line'},{var,2483,'Name'},{var,2483,'St'}],
    [],
    [{'case',2484,
      {call,2484,
       {remote,2484,{atom,2484,dict},{atom,2484,is_key}},
       [{var,2484,'Name'},
        {call,2484,
         {remote,2484,{atom,2484,erlang},{atom,2484,element}},
         [{integer,2484,8},{var,2484,'St'}]}]},
      [{clause,2485,
        [{atom,2485,true}],
        [],
        [{call,2485,
          {atom,2485,used_record},
          [{var,2485,'Name'},{var,2485,'St'}]}]},
       {clause,2486,
        [{atom,2486,false}],
        [],
        [{call,2486,
          {atom,2486,add_error},
          [{var,2486,'Line'},
           {tuple,2486,[{atom,2486,undefined_record},{var,2486,'Name'}]},
           {var,2486,'St'}]}]}]}]}]},
 {function,2500,check_record,4,
  [{clause,2500,
    [{var,2500,'Line'},
     {var,2500,'Name'},
     {var,2500,'St'},
     {var,2500,'CheckFun'}],
    [],
    [{'case',2501,
      {call,2501,
       {remote,2501,{atom,2501,dict},{atom,2501,find}},
       [{var,2501,'Name'},
        {call,2501,
         {remote,2501,{atom,2501,erlang},{atom,2501,element}},
         [{integer,2501,8},{var,2501,'St'}]}]},
      [{clause,2502,
        [{tuple,2502,
          [{atom,2502,ok},
           {tuple,2502,[{var,2502,'_Line'},{var,2502,'Fields'}]}]}],
        [],
        [{call,2502,
          {var,2502,'CheckFun'},
          [{var,2502,'Fields'},
           {call,2502,
            {atom,2502,used_record},
            [{var,2502,'Name'},{var,2502,'St'}]}]}]},
       {clause,2503,
        [{atom,2503,error}],
        [],
        [{tuple,2503,
          [{nil,2503},
           {call,2503,
            {atom,2503,add_error},
            [{var,2503,'Line'},
             {tuple,2503,[{atom,2503,undefined_record},{var,2503,'Name'}]},
             {var,2503,'St'}]}]}]}]}]}]},
 {function,2506,used_record,2,
  [{clause,2506,
    [{var,2506,'Name'},
     {match,2506,
      {tuple,2506,
       [{atom,2506,lint},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'Usage'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'},
        {var,2506,'_'}]},
      {var,2506,'St'}}],
    [],
    [{match,2507,
      {var,2507,'UsedRecs'},
      {call,2507,
       {remote,2507,{atom,2507,sets},{atom,2507,add_element}},
       [{var,2507,'Name'},
        {call,2507,
         {remote,2507,{atom,2507,erlang},{atom,2507,element}},
         [{integer,2507,4},{var,2507,'Usage'}]}]}},
     {call,2508,
      {remote,2508,{atom,2508,erlang},{atom,2508,setelement}},
      [{integer,2508,26},
       {var,2508,'St'},
       {call,2508,
        {remote,2508,{atom,2508,erlang},{atom,2508,setelement}},
        [{integer,2508,4},{var,2508,'Usage'},{var,2508,'UsedRecs'}]}]}]}]},
 {function,2515,check_fields,6,
  [{clause,2515,
    [{var,2515,'Fs'},
     {var,2515,'Name'},
     {var,2515,'Fields'},
     {var,2515,'Vt'},
     {var,2515,'St0'},
     {var,2515,'CheckFun'}],
    [],
    [{match,2516,
      {tuple,2516,
       [{var,2516,'_SeenFields'},{var,2516,'Uvt'},{var,2516,'St1'}]},
      {call,2517,
       {atom,2517,foldl},
       [{'fun',2517,
         {clauses,
          [{clause,2517,
            [{var,2517,'Field'},
             {tuple,2517,
              [{var,2517,'Sfsa'},{var,2517,'Vta'},{var,2517,'Sta'}]}],
            [],
            [{match,2518,
              {tuple,2518,
               [{var,2518,'Sfsb'},
                {tuple,2518,[{var,2518,'Vtb'},{var,2518,'Stb'}]}]},
              {call,2518,
               {atom,2518,check_field},
               [{var,2518,'Field'},
                {var,2518,'Name'},
                {var,2518,'Fields'},
                {var,2519,'Vt'},
                {var,2519,'Sta'},
                {var,2519,'Sfsa'},
                {var,2519,'CheckFun'}]}},
             {tuple,2520,
              [{var,2520,'Sfsb'},
               {call,2520,
                {atom,2520,vtmerge_pat},
                [{var,2520,'Vta'},{var,2520,'Vtb'}]},
               {var,2520,'Stb'}]}]}]}},
        {tuple,2521,[{nil,2521},{nil,2521},{var,2521,'St0'}]},
        {var,2521,'Fs'}]}},
     {tuple,2522,[{var,2522,'Uvt'},{var,2522,'St1'}]}]}]},
 {function,2524,check_field,7,
  [{clause,2524,
    [{tuple,2524,
      [{atom,2524,record_field},
       {var,2524,'Lf'},
       {tuple,2524,[{atom,2524,atom},{var,2524,'La'},{var,2524,'F'}]},
       {var,2524,'Val'}]},
     {var,2524,'Name'},
     {var,2524,'Fields'},
     {var,2525,'Vt'},
     {var,2525,'St'},
     {var,2525,'Sfs'},
     {var,2525,'CheckFun'}],
    [],
    [{'case',2526,
      {call,2526,{atom,2526,member},[{var,2526,'F'},{var,2526,'Sfs'}]},
      [{clause,2527,
        [{atom,2527,true}],
        [],
        [{tuple,2527,
          [{var,2527,'Sfs'},
           {tuple,2527,
            [{nil,2527},
             {call,2527,
              {atom,2527,add_error},
              [{var,2527,'Lf'},
               {tuple,2527,
                [{atom,2527,redefine_field},{var,2527,'Name'},{var,2527,'F'}]},
               {var,2527,'St'}]}]}]}]},
       {clause,2528,
        [{atom,2528,false}],
        [],
        [{tuple,2529,
          [{cons,2529,{var,2529,'F'},{var,2529,'Sfs'}},
           {'case',2530,
            {call,2530,
             {atom,2530,find_field},
             [{var,2530,'F'},{var,2530,'Fields'}]},
            [{clause,2531,
              [{tuple,2531,[{atom,2531,ok},{var,2531,'_I'}]}],
              [],
              [{call,2531,
                {var,2531,'CheckFun'},
                [{var,2531,'Val'},{var,2531,'Vt'},{var,2531,'St'}]}]},
             {clause,2532,
              [{atom,2532,error}],
              [],
              [{tuple,2532,
                [{nil,2532},
                 {call,2532,
                  {atom,2532,add_error},
                  [{var,2532,'La'},
                   {tuple,2532,
                    [{atom,2532,undefined_field},
                     {var,2532,'Name'},
                     {var,2532,'F'}]},
                   {var,2532,'St'}]}]}]}]}]}]}]}]},
   {clause,2535,
    [{tuple,2535,
      [{atom,2535,record_field},
       {var,2535,'_Lf'},
       {tuple,2535,[{atom,2535,var},{var,2535,'_La'},{atom,2535,'_'}]},
       {var,2535,'Val'}]},
     {var,2535,'_Name'},
     {var,2535,'_Fields'},
     {var,2536,'Vt'},
     {var,2536,'St'},
     {var,2536,'Sfs'},
     {var,2536,'CheckFun'}],
    [],
    [{tuple,2537,
      [{var,2537,'Sfs'},
       {call,2537,
        {var,2537,'CheckFun'},
        [{var,2537,'Val'},{var,2537,'Vt'},{var,2537,'St'}]}]}]},
   {clause,2538,
    [{tuple,2538,
      [{atom,2538,record_field},
       {var,2538,'_Lf'},
       {tuple,2538,[{atom,2538,var},{var,2538,'La'},{var,2538,'V'}]},
       {var,2538,'_Val'}]},
     {var,2538,'Name'},
     {var,2538,'_Fields'},
     {var,2539,'Vt'},
     {var,2539,'St'},
     {var,2539,'Sfs'},
     {var,2539,'_CheckFun'}],
    [],
    [{tuple,2540,
      [{var,2540,'Sfs'},
       {tuple,2540,
        [{var,2540,'Vt'},
         {call,2540,
          {atom,2540,add_error},
          [{var,2540,'La'},
           {tuple,2540,
            [{atom,2540,field_name_is_variable},
             {var,2540,'Name'},
             {var,2540,'V'}]},
           {var,2540,'St'}]}]}]}]}]},
 {function,2546,pattern_field,4,
  [{clause,2546,
    [{tuple,2546,[{atom,2546,atom},{var,2546,'La'},{var,2546,'F'}]},
     {var,2546,'Name'},
     {var,2546,'Fields'},
     {var,2546,'St'}],
    [],
    [{'case',2547,
      {call,2547,{atom,2547,find_field},[{var,2547,'F'},{var,2547,'Fields'}]},
      [{clause,2548,
        [{tuple,2548,[{atom,2548,ok},{var,2548,'_I'}]}],
        [],
        [{tuple,2548,[{nil,2548},{var,2548,'St'}]}]},
       {clause,2549,
        [{atom,2549,error}],
        [],
        [{tuple,2549,
          [{nil,2549},
           {call,2549,
            {atom,2549,add_error},
            [{var,2549,'La'},
             {tuple,2549,
              [{atom,2549,undefined_field},{var,2549,'Name'},{var,2549,'F'}]},
             {var,2549,'St'}]}]}]}]}]}]},
 {function,2556,pattern_fields,7,
  [{clause,2556,
    [{var,2556,'Fs'},
     {var,2556,'Name'},
     {var,2556,'Fields'},
     {var,2556,'Vt0'},
     {var,2556,'Old'},
     {var,2556,'Bvt'},
     {var,2556,'St0'}],
    [],
    [{match,2557,
      {var,2557,'CheckFun'},
      {'fun',2557,
       {clauses,
        [{clause,2557,
          [{var,2557,'Val'},{var,2557,'Vt'},{var,2557,'St'}],
          [],
          [{call,2557,
            {atom,2557,pattern},
            [{var,2557,'Val'},
             {var,2557,'Vt'},
             {var,2557,'Old'},
             {var,2557,'Bvt'},
             {var,2557,'St'}]}]}]}}},
     {match,2558,
      {tuple,2558,
       [{var,2558,'_SeenFields'},
        {var,2558,'Uvt'},
        {var,2558,'Bvt1'},
        {var,2558,'St1'}]},
      {call,2559,
       {atom,2559,foldl},
       [{'fun',2559,
         {clauses,
          [{clause,2559,
            [{var,2559,'Field'},
             {tuple,2559,
              [{var,2559,'Sfsa'},
               {var,2559,'Vta'},
               {var,2559,'Bvt1'},
               {var,2559,'Sta'}]}],
            [],
            [{'case',2560,
              {call,2560,
               {atom,2560,check_field},
               [{var,2560,'Field'},
                {var,2560,'Name'},
                {var,2560,'Fields'},
                {var,2561,'Vt0'},
                {var,2561,'Sta'},
                {var,2561,'Sfsa'},
                {var,2561,'CheckFun'}]},
              [{clause,2562,
                [{tuple,2562,
                  [{var,2562,'Sfsb'},
                   {tuple,2562,[{var,2562,'Vtb'},{var,2562,'Stb'}]}]}],
                [],
                [{tuple,2563,
                  [{var,2563,'Sfsb'},
                   {call,2563,
                    {atom,2563,vtmerge_pat},
                    [{var,2563,'Vta'},{var,2563,'Vtb'}]},
                   {nil,2563},
                   {var,2563,'Stb'}]}]},
               {clause,2564,
                [{tuple,2564,
                  [{var,2564,'Sfsb'},
                   {tuple,2564,
                    [{var,2564,'Vtb'},{var,2564,'Bvt2'},{var,2564,'Stb'}]}]}],
                [],
                [{tuple,2565,
                  [{var,2565,'Sfsb'},
                   {call,2565,
                    {atom,2565,vtmerge_pat},
                    [{var,2565,'Vta'},{var,2565,'Vtb'}]},
                   {call,2566,
                    {atom,2566,vtmerge_pat},
                    [{var,2566,'Bvt1'},{var,2566,'Bvt2'}]},
                   {var,2566,'Stb'}]}]}]}]}]}},
        {tuple,2568,[{nil,2568},{nil,2568},{nil,2568},{var,2568,'St0'}]},
        {var,2568,'Fs'}]}},
     {tuple,2569,[{var,2569,'Uvt'},{var,2569,'Bvt1'},{var,2569,'St1'}]}]}]},
 {function,2575,record_field,4,
  [{clause,2575,
    [{tuple,2575,[{atom,2575,atom},{var,2575,'La'},{var,2575,'F'}]},
     {var,2575,'Name'},
     {var,2575,'Fields'},
     {var,2575,'St'}],
    [],
    [{'case',2576,
      {call,2576,{atom,2576,find_field},[{var,2576,'F'},{var,2576,'Fields'}]},
      [{clause,2577,
        [{tuple,2577,[{atom,2577,ok},{var,2577,'_I'}]}],
        [],
        [{tuple,2577,[{nil,2577},{var,2577,'St'}]}]},
       {clause,2578,
        [{atom,2578,error}],
        [],
        [{tuple,2578,
          [{nil,2578},
           {call,2578,
            {atom,2578,add_error},
            [{var,2578,'La'},
             {tuple,2578,
              [{atom,2578,undefined_field},{var,2578,'Name'},{var,2578,'F'}]},
             {var,2578,'St'}]}]}]}]}]}]},
 {function,2593,init_fields,6,
  [{clause,2593,
    [{var,2593,'Ifs'},
     {var,2593,'Line'},
     {var,2593,'Name'},
     {var,2593,'Dfs'},
     {var,2593,'Vt0'},
     {var,2593,'St0'}],
    [],
    [{match,2594,
      {tuple,2594,[{var,2594,'Vt1'},{var,2594,'St1'}]},
      {call,2594,
       {atom,2594,check_fields},
       [{var,2594,'Ifs'},
        {var,2594,'Name'},
        {var,2594,'Dfs'},
        {var,2594,'Vt0'},
        {var,2594,'St0'},
        {'fun',2594,{function,expr,3}}]}},
     {match,2595,
      {var,2595,'Defs'},
      {call,2595,
       {atom,2595,init_fields},
       [{var,2595,'Ifs'},{var,2595,'Line'},{var,2595,'Dfs'}]}},
     {match,2596,
      {tuple,2596,[{var,2596,'_'},{var,2596,'St2'}]},
      {call,2596,
       {atom,2596,check_fields},
       [{var,2596,'Defs'},
        {var,2596,'Name'},
        {var,2596,'Dfs'},
        {var,2596,'Vt1'},
        {var,2596,'St1'},
        {'fun',2596,{function,expr,3}}]}},
     {tuple,2597,
      [{var,2597,'Vt1'},
       {call,2597,
        {remote,2597,{atom,2597,erlang},{atom,2597,setelement}},
        [{integer,2597,26},
         {var,2597,'St1'},
         {call,2597,
          {remote,2597,{atom,2597,erlang},{atom,2597,element}},
          [{integer,2597,26},{var,2597,'St2'}]}]}]}]}]},
 {function,2599,ginit_fields,6,
  [{clause,2599,
    [{var,2599,'Ifs'},
     {var,2599,'Line'},
     {var,2599,'Name'},
     {var,2599,'Dfs'},
     {var,2599,'Vt0'},
     {var,2599,'St0'}],
    [],
    [{match,2600,
      {tuple,2600,[{var,2600,'Vt1'},{var,2600,'St1'}]},
      {call,2600,
       {atom,2600,check_fields},
       [{var,2600,'Ifs'},
        {var,2600,'Name'},
        {var,2600,'Dfs'},
        {var,2600,'Vt0'},
        {var,2600,'St0'},
        {'fun',2600,{function,gexpr,3}}]}},
     {match,2601,
      {var,2601,'Defs'},
      {call,2601,
       {atom,2601,init_fields},
       [{var,2601,'Ifs'},{var,2601,'Line'},{var,2601,'Dfs'}]}},
     {match,2602,
      {var,2602,'St2'},
      {call,2602,
       {remote,2602,{atom,2602,erlang},{atom,2602,setelement}},
       [{integer,2602,20},{var,2602,'St1'},{nil,2602}]}},
     {match,2603,
      {tuple,2603,[{var,2603,'_'},{var,2603,'St3'}]},
      {call,2603,
       {atom,2603,check_fields},
       [{var,2603,'Defs'},
        {var,2603,'Name'},
        {var,2603,'Dfs'},
        {var,2603,'Vt1'},
        {var,2603,'St2'},
        {'fun',2603,{function,gexpr,3}}]}},
     {match,2604,
      {tuple,2604,
       [{atom,2604,lint},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'Errors'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'Usage'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'},
        {var,2604,'_'}]},
      {var,2604,'St3'}},
     {match,2605,
      {var,2605,'IllErrs'},
      {lc,2605,
       {var,2605,'E'},
       [{generate,2605,
         {match,2605,
          {tuple,2605,
           [{var,2605,'_File'},
            {tuple,2605,
             [{var,2605,'_Line'},
              {atom,2605,erl_lint},
              {atom,2605,illegal_guard_expr}]}]},
          {var,2605,'E'}},
         {var,2605,'Errors'}}]}},
     {match,2606,
      {var,2606,'St4'},
      {call,2606,
       {remote,2606,{atom,2606,erlang},{atom,2606,setelement}},
       [{integer,2606,20},
        {call,2606,
         {remote,2606,{atom,2606,erlang},{atom,2606,setelement}},
         [{integer,2606,26},{var,2606,'St1'},{var,2606,'Usage'}]},
        {op,2606,'++',
         {var,2606,'IllErrs'},
         {call,2606,
          {remote,2606,{atom,2606,erlang},{atom,2606,element}},
          [{integer,2606,20},{var,2606,'St1'}]}}]}},
     {tuple,2607,[{var,2607,'Vt1'},{var,2607,'St4'}]}]}]},
 {function,2610,init_fields,3,
  [{clause,2610,
    [{var,2610,'Ifs'},{var,2610,'Line'},{var,2610,'Dfs'}],
    [],
    [{lc,2611,
      {tuple,2611,
       [{atom,2611,record_field},
        {var,2611,'Lf'},
        {tuple,2611,[{atom,2611,atom},{var,2611,'La'},{var,2611,'F'}]},
        {call,2611,
         {atom,2611,copy_expr},
         [{var,2611,'Di'},{var,2611,'Line'}]}]},
      [{generate,2612,
        {tuple,2612,
         [{atom,2612,record_field},
          {var,2612,'Lf'},
          {tuple,2612,[{atom,2612,atom},{var,2612,'La'},{var,2612,'F'}]},
          {var,2612,'Di'}]},
        {var,2612,'Dfs'}},
       {op,2613,'not',
        {call,2613,
         {atom,2613,exist_field},
         [{var,2613,'F'},{var,2613,'Ifs'}]}}]}]}]},
 {function,2618,update_fields,5,
  [{clause,2618,
    [{var,2618,'Ufs'},
     {var,2618,'Name'},
     {var,2618,'Dfs'},
     {var,2618,'Vt'},
     {var,2618,'St'}],
    [],
    [{call,2619,
      {atom,2619,check_fields},
      [{var,2619,'Ufs'},
       {var,2619,'Name'},
       {var,2619,'Dfs'},
       {var,2619,'Vt'},
       {var,2619,'St'},
       {'fun',2619,{function,expr,3}}]}]}]},
 {function,2624,exist_field,2,
  [{clause,2624,
    [{var,2624,'F'},
     {cons,2624,
      {tuple,2624,
       [{atom,2624,record_field},
        {var,2624,'_Lf'},
        {tuple,2624,[{atom,2624,atom},{var,2624,'_La'},{var,2624,'F'}]},
        {var,2624,'_Val'}]},
      {var,2624,'_Fs'}}],
    [],
    [{atom,2624,true}]},
   {clause,2625,
    [{var,2625,'F'},{cons,2625,{var,2625,'_'},{var,2625,'Fs'}}],
    [],
    [{call,2625,{atom,2625,exist_field},[{var,2625,'F'},{var,2625,'Fs'}]}]},
   {clause,2626,[{var,2626,'_F'},{nil,2626}],[],[{atom,2626,false}]}]},
 {function,2631,find_field,2,
  [{clause,2631,
    [{var,2631,'_F'},
     {cons,2631,
      {tuple,2631,
       [{atom,2631,record_field},
        {var,2631,'_Lf'},
        {tuple,2631,[{atom,2631,atom},{var,2631,'_La'},{var,2631,'_F'}]},
        {var,2631,'Val'}]},
      {var,2631,'_Fs'}}],
    [],
    [{tuple,2631,[{atom,2631,ok},{var,2631,'Val'}]}]},
   {clause,2632,
    [{var,2632,'F'},{cons,2632,{var,2632,'_'},{var,2632,'Fs'}}],
    [],
    [{call,2632,{atom,2632,find_field},[{var,2632,'F'},{var,2632,'Fs'}]}]},
   {clause,2633,[{var,2633,'_F'},{nil,2633}],[],[{atom,2633,error}]}]},
 {function,2639,type_def,6,
  [{clause,2639,
    [{var,2639,'_Attr'},
     {var,2639,'_Line'},
     {tuple,2639,[{atom,2639,record},{var,2639,'_RecName'}]},
     {var,2639,'Fields'},
     {nil,2639},
     {var,2639,'St0'}],
    [],
    [{match,2642,
      {var,2642,'Types'},
      {lc,2642,
       {var,2642,'T'},
       [{generate,2642,
         {tuple,2642,
          [{atom,2642,typed_record_field},{var,2642,'_'},{var,2642,'T'}]},
         {var,2642,'Fields'}}]}},
     {call,2643,
      {atom,2643,check_type},
      [{tuple,2643,
        [{atom,2643,type},
         {call,2643,{atom,2643,nowarn},[]},
         {atom,2643,product},
         {var,2643,'Types'}]},
       {var,2643,'St0'}]}]},
   {clause,2644,
    [{var,2644,'Attr'},
     {var,2644,'Line'},
     {var,2644,'TypeName'},
     {var,2644,'ProtoType'},
     {var,2644,'Args'},
     {var,2644,'St0'}],
    [],
    [{match,2645,
      {var,2645,'TypeDefs'},
      {call,2645,
       {remote,2645,{atom,2645,erlang},{atom,2645,element}},
       [{integer,2645,30},{var,2645,'St0'}]}},
     {match,2646,
      {var,2646,'Arity'},
      {call,2646,{atom,2646,length},[{var,2646,'Args'}]}},
     {match,2647,
      {var,2647,'TypePair'},
      {tuple,2647,[{var,2647,'TypeName'},{var,2647,'Arity'}]}},
     {match,2648,
      {var,2648,'Info'},
      {tuple,2648,[{atom,2648,typeinfo},{var,2648,'Attr'},{var,2648,'Line'}]}},
     {match,2649,
      {var,2649,'StoreType'},
      {'fun',2650,
       {clauses,
        [{clause,2650,
          [{var,2650,'St'}],
          [],
          [{match,2651,
            {var,2651,'NewDefs'},
            {call,2651,
             {remote,2651,{atom,2651,dict},{atom,2651,store}},
             [{var,2651,'TypePair'},{var,2651,'Info'},{var,2651,'TypeDefs'}]}},
           {match,2652,
            {var,2652,'CheckType'},
            {tuple,2652,
             [{atom,2652,type},
              {call,2652,{atom,2652,nowarn},[]},
              {atom,2652,product},
              {cons,2652,{var,2652,'ProtoType'},{var,2652,'Args'}}]}},
           {call,2653,
            {atom,2653,check_type},
            [{var,2653,'CheckType'},
             {call,2653,
              {remote,2653,{atom,2653,erlang},{atom,2653,setelement}},
              [{integer,2653,30},
               {var,2653,'St'},
               {var,2653,'NewDefs'}]}]}]}]}}},
     {'case',2655,
      {call,2655,{atom,2655,is_default_type},[{var,2655,'TypePair'}]},
      [{clause,2656,
        [{atom,2656,true}],
        [],
        [{'case',2657,
          {call,2657,
           {atom,2657,is_obsolete_builtin_type},
           [{var,2657,'TypePair'}]},
          [{clause,2658,
            [{atom,2658,true}],
            [],
            [{call,2658,{var,2658,'StoreType'},[{var,2658,'St0'}]}]},
           {clause,2659,
            [{atom,2659,false}],
            [],
            [{'case',2660,
              {call,2660,
               {atom,2660,is_newly_introduced_builtin_type},
               [{var,2660,'TypePair'}]},
              [{clause,2662,
                [{atom,2662,true}],
                [],
                [{match,2663,
                  {var,2663,'Warn'},
                  {tuple,2663,
                   [{atom,2663,new_builtin_type},{var,2663,'TypePair'}]}},
                 {match,2664,
                  {var,2664,'St1'},
                  {call,2664,
                   {atom,2664,add_warning},
                   [{var,2664,'Line'},{var,2664,'Warn'},{var,2664,'St0'}]}},
                 {call,2665,{var,2665,'StoreType'},[{var,2665,'St1'}]}]},
               {clause,2666,
                [{atom,2666,false}],
                [],
                [{call,2667,
                  {atom,2667,add_error},
                  [{var,2667,'Line'},
                   {tuple,2667,
                    [{atom,2667,builtin_type},{var,2667,'TypePair'}]},
                   {var,2667,'St0'}]}]}]}]}]}]},
       {clause,2670,
        [{atom,2670,false}],
        [],
        [{'case',2671,
          {call,2671,
           {remote,2671,{atom,2671,dict},{atom,2671,is_key}},
           [{var,2671,'TypePair'},{var,2671,'TypeDefs'}]},
          [{clause,2672,
            [{atom,2672,true}],
            [],
            [{call,2673,
              {atom,2673,add_error},
              [{var,2673,'Line'},
               {tuple,2673,[{atom,2673,redefine_type},{var,2673,'TypePair'}]},
               {var,2673,'St0'}]}]},
           {clause,2674,
            [{atom,2674,false}],
            [],
            [{match,2675,
              {var,2675,'St1'},
              {'case',2675,
               {op,2676,'andalso',
                {op,2676,'=:=',{var,2676,'Attr'},{atom,2676,opaque}},
                {call,2677,
                 {atom,2677,is_underspecified},
                 [{var,2677,'ProtoType'},{var,2677,'Arity'}]}},
               [{clause,2679,
                 [{atom,2679,true}],
                 [],
                 [{match,2680,
                   {var,2680,'Warn'},
                   {tuple,2680,
                    [{atom,2680,underspecified_opaque},
                     {var,2680,'TypePair'}]}},
                  {call,2681,
                   {atom,2681,add_warning},
                   [{var,2681,'Line'},{var,2681,'Warn'},{var,2681,'St0'}]}]},
                {clause,2682,[{atom,2682,false}],[],[{var,2682,'St0'}]}]}},
             {call,2684,{var,2684,'StoreType'},[{var,2684,'St1'}]}]}]}]}]}]}]},
 {function,2688,is_underspecified,2,
  [{clause,2688,
    [{tuple,2688,
      [{atom,2688,type},{var,2688,'_'},{atom,2688,term},{nil,2688}]},
     {integer,2688,0}],
    [],
    [{atom,2688,true}]},
   {clause,2689,
    [{tuple,2689,[{atom,2689,type},{var,2689,'_'},{atom,2689,any},{nil,2689}]},
     {integer,2689,0}],
    [],
    [{atom,2689,true}]},
   {clause,2690,
    [{var,2690,'_ProtType'},{var,2690,'_Arity'}],
    [],
    [{atom,2690,false}]}]},
 {function,2692,check_type,2,
  [{clause,2692,
    [{var,2692,'Types'},{var,2692,'St'}],
    [],
    [{match,2693,
      {tuple,2693,[{var,2693,'SeenVars'},{var,2693,'St1'}]},
      {call,2693,
       {atom,2693,check_type},
       [{var,2693,'Types'},
        {call,2693,{remote,2693,{atom,2693,dict},{atom,2693,new}},[]},
        {var,2693,'St'}]}},
     {call,2694,
      {remote,2694,{atom,2694,dict},{atom,2694,fold}},
      [{'fun',2694,
        {clauses,
         [{clause,2694,
           [{var,2694,'Var'},
            {tuple,2694,[{atom,2694,seen_once},{var,2694,'Line'}]},
            {var,2694,'AccSt'}],
           [],
           [{'case',2695,
             {call,2695,{atom,2695,atom_to_list},[{var,2695,'Var'}]},
             [{clause,2696,
               [{op,2696,'++',{string,2696,"_"},{var,2696,'_'}}],
               [],
               [{var,2696,'AccSt'}]},
              {clause,2697,
               [{var,2697,'_'}],
               [],
               [{call,2697,
                 {atom,2697,add_error},
                 [{var,2697,'Line'},
                  {tuple,2697,
                   [{atom,2697,singleton_typevar},{var,2697,'Var'}]},
                  {var,2697,'AccSt'}]}]}]}]},
          {clause,2699,
           [{var,2699,'_Var'},{atom,2699,seen_multiple},{var,2699,'AccSt'}],
           [],
           [{var,2700,'AccSt'}]}]}},
       {var,2701,'St1'},
       {var,2701,'SeenVars'}]}]}]},
 {function,2703,check_type,3,
  [{clause,2703,
    [{tuple,2703,
      [{atom,2703,ann_type},
       {var,2703,'_L'},
       {cons,2703,
        {var,2703,'_Var'},
        {cons,2703,{var,2703,'Type'},{nil,2703}}}]},
     {var,2703,'SeenVars'},
     {var,2703,'St'}],
    [],
    [{call,2704,
      {atom,2704,check_type},
      [{var,2704,'Type'},{var,2704,'SeenVars'},{var,2704,'St'}]}]},
   {clause,2705,
    [{tuple,2705,
      [{atom,2705,paren_type},
       {var,2705,'_L'},
       {cons,2705,{var,2705,'Type'},{nil,2705}}]},
     {var,2705,'SeenVars'},
     {var,2705,'St'}],
    [],
    [{call,2706,
      {atom,2706,check_type},
      [{var,2706,'Type'},{var,2706,'SeenVars'},{var,2706,'St'}]}]},
   {clause,2707,
    [{tuple,2707,
      [{atom,2707,remote_type},
       {var,2707,'L'},
       {cons,2707,
        {tuple,2707,[{atom,2707,atom},{var,2707,'_'},{var,2707,'Mod'}]},
        {cons,2707,
         {tuple,2707,[{atom,2707,atom},{var,2707,'_'},{var,2707,'Name'}]},
         {cons,2707,{var,2707,'Args'},{nil,2707}}}}]},
     {var,2708,'SeenVars'},
     {var,2708,'St0'}],
    [],
    [{match,2709,
      {var,2709,'St'},
      {call,2709,
       {atom,2709,deprecated_type},
       [{var,2709,'L'},
        {var,2709,'Mod'},
        {var,2709,'Name'},
        {var,2709,'Args'},
        {var,2709,'St0'}]}},
     {match,2710,
      {var,2710,'CurrentMod'},
      {call,2710,
       {remote,2710,{atom,2710,erlang},{atom,2710,element}},
       [{integer,2710,3},{var,2710,'St'}]}},
     {'case',2711,
      {op,2711,'=:=',{var,2711,'Mod'},{var,2711,'CurrentMod'}},
      [{clause,2712,
        [{atom,2712,true}],
        [],
        [{call,2712,
          {atom,2712,check_type},
          [{tuple,2712,
            [{atom,2712,user_type},
             {var,2712,'L'},
             {var,2712,'Name'},
             {var,2712,'Args'}]},
           {var,2712,'SeenVars'},
           {var,2712,'St'}]}]},
       {clause,2713,
        [{atom,2713,false}],
        [],
        [{call,2714,
          {remote,2714,{atom,2714,lists},{atom,2714,foldl}},
          [{'fun',2714,
            {clauses,
             [{clause,2714,
               [{var,2714,'T'},
                {tuple,2714,[{var,2714,'AccSeenVars'},{var,2714,'AccSt'}]}],
               [],
               [{call,2715,
                 {atom,2715,check_type},
                 [{var,2715,'T'},
                  {var,2715,'AccSeenVars'},
                  {var,2715,'AccSt'}]}]}]}},
           {tuple,2716,[{var,2716,'SeenVars'},{var,2716,'St'}]},
           {var,2716,'Args'}]}]}]}]},
   {clause,2718,
    [{tuple,2718,[{atom,2718,integer},{var,2718,'_L'},{var,2718,'_'}]},
     {var,2718,'SeenVars'},
     {var,2718,'St'}],
    [],
    [{tuple,2718,[{var,2718,'SeenVars'},{var,2718,'St'}]}]},
   {clause,2719,
    [{tuple,2719,[{atom,2719,atom},{var,2719,'_L'},{var,2719,'_'}]},
     {var,2719,'SeenVars'},
     {var,2719,'St'}],
    [],
    [{tuple,2719,[{var,2719,'SeenVars'},{var,2719,'St'}]}]},
   {clause,2720,
    [{tuple,2720,[{atom,2720,var},{var,2720,'_L'},{atom,2720,'_'}]},
     {var,2720,'SeenVars'},
     {var,2720,'St'}],
    [],
    [{tuple,2720,[{var,2720,'SeenVars'},{var,2720,'St'}]}]},
   {clause,2721,
    [{tuple,2721,[{atom,2721,var},{var,2721,'L'},{var,2721,'Name'}]},
     {var,2721,'SeenVars'},
     {var,2721,'St'}],
    [],
    [{match,2722,
      {var,2722,'NewSeenVars'},
      {'case',2723,
       {call,2723,
        {remote,2723,{atom,2723,dict},{atom,2723,find}},
        [{var,2723,'Name'},{var,2723,'SeenVars'}]},
       [{clause,2724,
         [{tuple,2724,
           [{atom,2724,ok},
            {tuple,2724,[{atom,2724,seen_once},{var,2724,'_'}]}]}],
         [],
         [{call,2724,
           {remote,2724,{atom,2724,dict},{atom,2724,store}},
           [{var,2724,'Name'},
            {atom,2724,seen_multiple},
            {var,2724,'SeenVars'}]}]},
        {clause,2725,
         [{tuple,2725,[{atom,2725,ok},{atom,2725,seen_multiple}]}],
         [],
         [{var,2725,'SeenVars'}]},
        {clause,2726,
         [{atom,2726,error}],
         [],
         [{call,2726,
           {remote,2726,{atom,2726,dict},{atom,2726,store}},
           [{var,2726,'Name'},
            {tuple,2726,[{atom,2726,seen_once},{var,2726,'L'}]},
            {var,2726,'SeenVars'}]}]}]}},
     {tuple,2728,[{var,2728,'NewSeenVars'},{var,2728,'St'}]}]},
   {clause,2729,
    [{tuple,2729,
      [{atom,2729,type},{var,2729,'L'},{atom,2729,bool},{nil,2729}]},
     {var,2729,'SeenVars'},
     {var,2729,'St'}],
    [],
    [{tuple,2730,
      [{var,2730,'SeenVars'},
       {call,2730,
        {atom,2730,add_warning},
        [{var,2730,'L'},
         {tuple,2730,
          [{atom,2730,renamed_type},{atom,2730,bool},{atom,2730,boolean}]},
         {var,2730,'St'}]}]}]},
   {clause,2731,
    [{tuple,2731,
      [{atom,2731,type},
       {var,2731,'L'},
       {atom,2731,'fun'},
       {cons,2731,
        {var,2731,'Dom'},
        {cons,2731,{var,2731,'Range'},{nil,2731}}}]},
     {var,2731,'SeenVars'},
     {var,2731,'St'}],
    [],
    [{match,2732,
      {var,2732,'St1'},
      {'case',2733,
       {var,2733,'Dom'},
       [{clause,2734,
         [{tuple,2734,
           [{atom,2734,type},
            {var,2734,'_'},
            {atom,2734,product},
            {var,2734,'_'}]}],
         [],
         [{var,2734,'St'}]},
        {clause,2735,
         [{tuple,2735,[{atom,2735,type},{var,2735,'_'},{atom,2735,any}]}],
         [],
         [{var,2735,'St'}]},
        {clause,2736,
         [{var,2736,'_'}],
         [],
         [{call,2736,
           {atom,2736,add_error},
           [{var,2736,'L'},
            {tuple,2736,[{atom,2736,type_syntax},{atom,2736,'fun'}]},
            {var,2736,'St'}]}]}]}},
     {call,2738,
      {atom,2738,check_type},
      [{tuple,2738,
        [{atom,2738,type},
         {call,2738,{atom,2738,nowarn},[]},
         {atom,2738,product},
         {cons,2738,
          {var,2738,'Dom'},
          {cons,2738,{var,2738,'Range'},{nil,2738}}}]},
       {var,2738,'SeenVars'},
       {var,2738,'St1'}]}]},
   {clause,2739,
    [{tuple,2739,
      [{atom,2739,type},
       {var,2739,'L'},
       {atom,2739,range},
       {cons,2739,{var,2739,'From'},{cons,2739,{var,2739,'To'},{nil,2739}}}]},
     {var,2739,'SeenVars'},
     {var,2739,'St'}],
    [],
    [{match,2740,
      {var,2740,'St1'},
      {'case',2741,
       {tuple,2741,
        [{call,2741,
          {remote,2741,{atom,2741,erl_eval},{atom,2741,partial_eval}},
          [{var,2741,'From'}]},
         {call,2741,
          {remote,2741,{atom,2741,erl_eval},{atom,2741,partial_eval}},
          [{var,2741,'To'}]}]},
       [{clause,2742,
         [{tuple,2742,
           [{tuple,2742,[{atom,2742,integer},{var,2742,'_'},{var,2742,'X'}]},
            {tuple,2742,
             [{atom,2742,integer},{var,2742,'_'},{var,2742,'Y'}]}]}],
         [[{op,2742,'<',{var,2742,'X'},{var,2742,'Y'}}]],
         [{var,2742,'St'}]},
        {clause,2743,
         [{var,2743,'_'}],
         [],
         [{call,2743,
           {atom,2743,add_error},
           [{var,2743,'L'},
            {tuple,2743,[{atom,2743,type_syntax},{atom,2743,range}]},
            {var,2743,'St'}]}]}]}},
     {tuple,2745,[{var,2745,'SeenVars'},{var,2745,'St1'}]}]},
   {clause,2746,
    [{tuple,2746,
      [{atom,2746,type},{var,2746,'L'},{atom,2746,map},{atom,2746,any}]},
     {var,2746,'SeenVars'},
     {var,2746,'St'}],
    [],
    [{match,2748,
      {var,2748,'St1'},
      {call,2748,
       {atom,2748,used_type},
       [{tuple,2748,[{atom,2748,map},{integer,2748,0}]},
        {var,2748,'L'},
        {var,2748,'St'}]}},
     {tuple,2749,[{var,2749,'SeenVars'},{var,2749,'St1'}]}]},
   {clause,2750,
    [{tuple,2750,
      [{atom,2750,type},{var,2750,'_L'},{atom,2750,map},{var,2750,'Pairs'}]},
     {var,2750,'SeenVars'},
     {var,2750,'St'}],
    [],
    [{call,2751,
      {remote,2751,{atom,2751,lists},{atom,2751,foldl}},
      [{'fun',2751,
        {clauses,
         [{clause,2751,
           [{var,2751,'Pair'},
            {tuple,2751,[{var,2751,'AccSeenVars'},{var,2751,'AccSt'}]}],
           [],
           [{call,2752,
             {atom,2752,check_type},
             [{var,2752,'Pair'},
              {var,2752,'AccSeenVars'},
              {var,2752,'AccSt'}]}]}]}},
       {tuple,2753,[{var,2753,'SeenVars'},{var,2753,'St'}]},
       {var,2753,'Pairs'}]}]},
   {clause,2754,
    [{tuple,2754,
      [{atom,2754,type},
       {var,2754,'_L'},
       {atom,2754,map_field_assoc},
       {cons,2754,
        {var,2754,'Dom'},
        {cons,2754,{var,2754,'Range'},{nil,2754}}}]},
     {var,2754,'SeenVars'},
     {var,2754,'St'}],
    [],
    [{call,2755,
      {atom,2755,check_type},
      [{tuple,2755,
        [{atom,2755,type},
         {call,2755,{atom,2755,nowarn},[]},
         {atom,2755,product},
         {cons,2755,
          {var,2755,'Dom'},
          {cons,2755,{var,2755,'Range'},{nil,2755}}}]},
       {var,2755,'SeenVars'},
       {var,2755,'St'}]}]},
   {clause,2756,
    [{tuple,2756,
      [{atom,2756,type},{var,2756,'_L'},{atom,2756,tuple},{atom,2756,any}]},
     {var,2756,'SeenVars'},
     {var,2756,'St'}],
    [],
    [{tuple,2756,[{var,2756,'SeenVars'},{var,2756,'St'}]}]},
   {clause,2757,
    [{tuple,2757,[{atom,2757,type},{var,2757,'_L'},{atom,2757,any}]},
     {var,2757,'SeenVars'},
     {var,2757,'St'}],
    [],
    [{tuple,2757,[{var,2757,'SeenVars'},{var,2757,'St'}]}]},
   {clause,2758,
    [{tuple,2758,
      [{atom,2758,type},
       {var,2758,'L'},
       {atom,2758,binary},
       {cons,2758,
        {var,2758,'Base'},
        {cons,2758,{var,2758,'Unit'},{nil,2758}}}]},
     {var,2758,'SeenVars'},
     {var,2758,'St'}],
    [],
    [{match,2759,
      {var,2759,'St1'},
      {'case',2760,
       {tuple,2760,
        [{call,2760,
          {remote,2760,{atom,2760,erl_eval},{atom,2760,partial_eval}},
          [{var,2760,'Base'}]},
         {call,2760,
          {remote,2760,{atom,2760,erl_eval},{atom,2760,partial_eval}},
          [{var,2760,'Unit'}]}]},
       [{clause,2761,
         [{tuple,2761,
           [{tuple,2761,
             [{atom,2761,integer},{var,2761,'_'},{var,2761,'BaseVal'}]},
            {tuple,2762,
             [{atom,2762,integer},{var,2762,'_'},{var,2762,'UnitVal'}]}]}],
         [[{op,2762,'>=',{var,2762,'BaseVal'},{integer,2762,0}},
           {op,2762,'>=',{var,2762,'UnitVal'},{integer,2762,0}}]],
         [{var,2762,'St'}]},
        {clause,2763,
         [{var,2763,'_'}],
         [],
         [{call,2763,
           {atom,2763,add_error},
           [{var,2763,'L'},
            {tuple,2763,[{atom,2763,type_syntax},{atom,2763,binary}]},
            {var,2763,'St'}]}]}]}},
     {tuple,2765,[{var,2765,'SeenVars'},{var,2765,'St1'}]}]},
   {clause,2766,
    [{tuple,2766,
      [{atom,2766,type},
       {var,2766,'L'},
       {atom,2766,record},
       {cons,2766,{var,2766,'Name'},{var,2766,'Fields'}}]},
     {var,2766,'SeenVars'},
     {var,2766,'St'}],
    [],
    [{'case',2767,
      {var,2767,'Name'},
      [{clause,2768,
        [{tuple,2768,[{atom,2768,atom},{var,2768,'_'},{var,2768,'Atom'}]}],
        [],
        [{match,2769,
          {var,2769,'St1'},
          {call,2769,
           {atom,2769,used_record},
           [{var,2769,'Atom'},{var,2769,'St'}]}},
         {call,2770,
          {atom,2770,check_record_types},
          [{var,2770,'L'},
           {var,2770,'Atom'},
           {var,2770,'Fields'},
           {var,2770,'SeenVars'},
           {var,2770,'St1'}]}]},
       {clause,2771,
        [{var,2771,'_'}],
        [],
        [{tuple,2771,
          [{var,2771,'SeenVars'},
           {call,2771,
            {atom,2771,add_error},
            [{var,2771,'L'},
             {tuple,2771,[{atom,2771,type_syntax},{atom,2771,record}]},
             {var,2771,'St'}]}]}]}]}]},
   {clause,2773,
    [{tuple,2773,
      [{atom,2773,type},{var,2773,'_L'},{var,2773,'Tag'},{var,2773,'Args'}]},
     {var,2773,'SeenVars'},
     {var,2773,'St'}],
    [[{op,2773,'=:=',{var,2773,'Tag'},{atom,2773,product}}],
     [{op,2774,'=:=',{var,2774,'Tag'},{atom,2774,union}}],
     [{op,2775,'=:=',{var,2775,'Tag'},{atom,2775,tuple}}]],
    [{call,2776,
      {remote,2776,{atom,2776,lists},{atom,2776,foldl}},
      [{'fun',2776,
        {clauses,
         [{clause,2776,
           [{var,2776,'T'},
            {tuple,2776,[{var,2776,'AccSeenVars'},{var,2776,'AccSt'}]}],
           [],
           [{call,2777,
             {atom,2777,check_type},
             [{var,2777,'T'},
              {var,2777,'AccSeenVars'},
              {var,2777,'AccSt'}]}]}]}},
       {tuple,2778,[{var,2778,'SeenVars'},{var,2778,'St'}]},
       {var,2778,'Args'}]}]},
   {clause,2779,
    [{tuple,2779,
      [{atom,2779,type},
       {var,2779,'La'},
       {var,2779,'TypeName'},
       {var,2779,'Args'}]},
     {var,2779,'SeenVars'},
     {var,2779,'St'}],
    [],
    [{match,2780,
      {tuple,2780,
       [{atom,2780,lint},
        {var,2780,'_'},
        {var,2780,'Module'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'_'},
        {var,2780,'Types'},
        {var,2780,'_'}]},
      {var,2780,'St'}},
     {match,2781,
      {var,2781,'Arity'},
      {call,2781,{atom,2781,length},[{var,2781,'Args'}]}},
     {match,2782,
      {var,2782,'TypePair'},
      {tuple,2782,[{var,2782,'TypeName'},{var,2782,'Arity'}]}},
     {match,2783,
      {var,2783,'Obsolete'},
      {op,2784,'andalso',
       {call,2783,
        {atom,2783,is_warn_enabled},
        [{atom,2783,deprecated_type},{var,2783,'St'}]},
       {call,2784,{atom,2784,obsolete_builtin_type},[{var,2784,'TypePair'}]}}},
     {match,2785,
      {var,2785,'St1'},
      {'case',2785,
       {var,2785,'Obsolete'},
       [{clause,2786,
         [{tuple,2786,
           [{atom,2786,deprecated},{var,2786,'Repl'},{var,2786,'_'}]}],
         [[{op,2786,'=/=',
            {call,2786,
             {atom,2786,element},
             [{integer,2786,1},{var,2786,'Repl'}]},
            {var,2786,'Module'}}]],
         [{'case',2787,
           {call,2787,
            {remote,2787,{atom,2787,dict},{atom,2787,find}},
            [{var,2787,'TypePair'},{var,2787,'Types'}]},
           [{clause,2788,
             [{tuple,2788,[{atom,2788,ok},{var,2788,'_'}]}],
             [],
             [{call,2789,
               {atom,2789,used_type},
               [{var,2789,'TypePair'},{var,2789,'La'},{var,2789,'St'}]}]},
            {clause,2790,
             [{atom,2790,error}],
             [],
             [{match,2791,
               {tuple,2791,
                [{atom,2791,deprecated},
                 {var,2791,'Replacement'},
                 {var,2791,'Rel'}]},
               {var,2791,'Obsolete'}},
              {match,2792,
               {var,2792,'Tag'},
               {atom,2792,deprecated_builtin_type}},
              {match,2793,
               {var,2793,'W'},
               {tuple,2793,
                [{var,2793,'Tag'},
                 {var,2793,'TypePair'},
                 {var,2793,'Replacement'},
                 {var,2793,'Rel'}]}},
              {call,2794,
               {atom,2794,add_warning},
               [{var,2794,'La'},{var,2794,'W'},{var,2794,'St'}]}]}]}]},
        {clause,2796,[{var,2796,'_'}],[],[{var,2796,'St'}]}]}},
     {call,2798,
      {atom,2798,check_type},
      [{tuple,2798,
        [{atom,2798,type},
         {call,2798,{atom,2798,nowarn},[]},
         {atom,2798,product},
         {var,2798,'Args'}]},
       {var,2798,'SeenVars'},
       {var,2798,'St1'}]}]},
   {clause,2799,
    [{tuple,2799,
      [{atom,2799,user_type},
       {var,2799,'L'},
       {var,2799,'TypeName'},
       {var,2799,'Args'}]},
     {var,2799,'SeenVars'},
     {var,2799,'St'}],
    [],
    [{match,2800,
      {var,2800,'Arity'},
      {call,2800,{atom,2800,length},[{var,2800,'Args'}]}},
     {match,2801,
      {var,2801,'TypePair'},
      {tuple,2801,[{var,2801,'TypeName'},{var,2801,'Arity'}]}},
     {match,2802,
      {var,2802,'St1'},
      {call,2802,
       {atom,2802,used_type},
       [{var,2802,'TypePair'},{var,2802,'L'},{var,2802,'St'}]}},
     {call,2803,
      {remote,2803,{atom,2803,lists},{atom,2803,foldl}},
      [{'fun',2803,
        {clauses,
         [{clause,2803,
           [{var,2803,'T'},
            {tuple,2803,[{var,2803,'AccSeenVars'},{var,2803,'AccSt'}]}],
           [],
           [{call,2804,
             {atom,2804,check_type},
             [{var,2804,'T'},
              {var,2804,'AccSeenVars'},
              {var,2804,'AccSt'}]}]}]}},
       {tuple,2805,[{var,2805,'SeenVars'},{var,2805,'St1'}]},
       {var,2805,'Args'}]}]},
   {clause,2806,
    [{var,2806,'I'},{var,2806,'SeenVars'},{var,2806,'St'}],
    [],
    [{'case',2807,
      {call,2807,
       {remote,2807,{atom,2807,erl_eval},{atom,2807,partial_eval}},
       [{var,2807,'I'}]},
      [{clause,2808,
        [{tuple,2808,
          [{atom,2808,integer},{var,2808,'_ILn'},{var,2808,'_Integer'}]}],
        [],
        [{tuple,2808,[{var,2808,'SeenVars'},{var,2808,'St'}]}]},
       {clause,2809,
        [{var,2809,'_Other'}],
        [],
        [{tuple,2810,
          [{var,2810,'SeenVars'},
           {call,2810,
            {atom,2810,add_error},
            [{call,2810,{atom,2810,element},[{integer,2810,2},{var,2810,'I'}]},
             {tuple,2810,[{atom,2810,type_syntax},{atom,2810,integer}]},
             {var,2810,'St'}]}]}]}]}]}]},
 {function,2813,check_record_types,5,
  [{clause,2813,
    [{var,2813,'Line'},
     {var,2813,'Name'},
     {var,2813,'Fields'},
     {var,2813,'SeenVars'},
     {var,2813,'St'}],
    [],
    [{'case',2814,
      {call,2814,
       {remote,2814,{atom,2814,dict},{atom,2814,find}},
       [{var,2814,'Name'},
        {call,2814,
         {remote,2814,{atom,2814,erlang},{atom,2814,element}},
         [{integer,2814,8},{var,2814,'St'}]}]},
      [{clause,2815,
        [{tuple,2815,
          [{atom,2815,ok},
           {tuple,2815,[{var,2815,'_L'},{var,2815,'DefFields'}]}]}],
        [],
        [{'case',2816,
          {call,2816,
           {remote,2816,{atom,2816,lists},{atom,2816,all}},
           [{'fun',2816,
             {clauses,
              [{clause,2816,
                [{tuple,2816,
                  [{atom,2816,type},
                   {var,2816,'_'},
                   {atom,2816,field_type},
                   {var,2816,'_'}]}],
                [],
                [{atom,2816,true}]},
               {clause,2817,[{var,2817,'_'}],[],[{atom,2817,false}]}]}},
            {var,2818,'Fields'}]},
          [{clause,2819,
            [{atom,2819,true}],
            [],
            [{call,2820,
              {atom,2820,check_record_types},
              [{var,2820,'Fields'},
               {var,2820,'Name'},
               {var,2820,'DefFields'},
               {var,2820,'SeenVars'},
               {var,2820,'St'},
               {nil,2820}]}]},
           {clause,2821,
            [{atom,2821,false}],
            [],
            [{tuple,2822,
              [{var,2822,'SeenVars'},
               {call,2822,
                {atom,2822,add_error},
                [{var,2822,'Line'},
                 {tuple,2822,[{atom,2822,type_syntax},{atom,2822,record}]},
                 {var,2822,'St'}]}]}]}]}]},
       {clause,2824,
        [{atom,2824,error}],
        [],
        [{tuple,2825,
          [{var,2825,'SeenVars'},
           {call,2825,
            {atom,2825,add_error},
            [{var,2825,'Line'},
             {tuple,2825,[{atom,2825,undefined_record},{var,2825,'Name'}]},
             {var,2825,'St'}]}]}]}]}]}]},
 {function,2828,check_record_types,6,
  [{clause,2828,
    [{cons,2828,
      {tuple,2828,
       [{atom,2828,type},
        {var,2828,'_'},
        {atom,2828,field_type},
        {cons,2828,
         {tuple,2828,[{atom,2828,atom},{var,2828,'AL'},{var,2828,'FName'}]},
         {cons,2828,{var,2828,'Type'},{nil,2828}}}]},
      {var,2828,'Left'}},
     {var,2829,'Name'},
     {var,2829,'DefFields'},
     {var,2829,'SeenVars'},
     {var,2829,'St'},
     {var,2829,'SeenFields'}],
    [],
    [{match,2831,
      {var,2831,'St1'},
      {'case',2831,
       {call,2831,
        {atom,2831,exist_field},
        [{var,2831,'FName'},{var,2831,'DefFields'}]},
       [{clause,2832,[{atom,2832,true}],[],[{var,2832,'St'}]},
        {clause,2833,
         [{atom,2833,false}],
         [],
         [{call,2833,
           {atom,2833,add_error},
           [{var,2833,'AL'},
            {tuple,2833,
             [{atom,2833,undefined_field},
              {var,2833,'Name'},
              {var,2833,'FName'}]},
            {var,2833,'St'}]}]}]}},
     {match,2836,
      {var,2836,'St2'},
      {'case',2836,
       {call,2836,
        {remote,2836,{atom,2836,ordsets},{atom,2836,is_element}},
        [{var,2836,'FName'},{var,2836,'SeenFields'}]},
       [{clause,2837,
         [{atom,2837,true}],
         [],
         [{call,2837,
           {atom,2837,add_error},
           [{var,2837,'AL'},
            {tuple,2837,
             [{atom,2837,redefine_field},
              {var,2837,'Name'},
              {var,2837,'FName'}]},
            {var,2837,'St1'}]}]},
        {clause,2838,[{atom,2838,false}],[],[{var,2838,'St1'}]}]}},
     {match,2841,
      {tuple,2841,[{var,2841,'NewSeenVars'},{var,2841,'St3'}]},
      {call,2841,
       {atom,2841,check_type},
       [{var,2841,'Type'},{var,2841,'SeenVars'},{var,2841,'St2'}]}},
     {match,2842,
      {var,2842,'NewSeenFields'},
      {call,2842,
       {remote,2842,{atom,2842,ordsets},{atom,2842,add_element}},
       [{var,2842,'FName'},{var,2842,'SeenFields'}]}},
     {call,2843,
      {atom,2843,check_record_types},
      [{var,2843,'Left'},
       {var,2843,'Name'},
       {var,2843,'DefFields'},
       {var,2843,'NewSeenVars'},
       {var,2843,'St3'},
       {var,2843,'NewSeenFields'}]}]},
   {clause,2844,
    [{nil,2844},
     {var,2844,'_Name'},
     {var,2844,'_DefFields'},
     {var,2844,'SeenVars'},
     {var,2844,'St'},
     {var,2844,'_SeenFields'}],
    [],
    [{tuple,2845,[{var,2845,'SeenVars'},{var,2845,'St'}]}]}]},
 {function,2847,used_type,3,
  [{clause,2847,
    [{var,2847,'TypePair'},
     {var,2847,'L'},
     {match,2847,
      {tuple,2847,
       [{atom,2847,lint},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'File'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'Usage'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'},
        {var,2847,'_'}]},
      {var,2847,'St'}}],
    [],
    [{match,2848,
      {var,2848,'OldUsed'},
      {call,2848,
       {remote,2848,{atom,2848,erlang},{atom,2848,element}},
       [{integer,2848,5},{var,2848,'Usage'}]}},
     {match,2849,
      {var,2849,'UsedTypes'},
      {call,2849,
       {remote,2849,{atom,2849,dict},{atom,2849,store}},
       [{var,2849,'TypePair'},
        {call,2849,
         {remote,2849,{atom,2849,erl_anno},{atom,2849,set_file}},
         [{var,2849,'File'},{var,2849,'L'}]},
        {var,2849,'OldUsed'}]}},
     {call,2850,
      {remote,2850,{atom,2850,erlang},{atom,2850,setelement}},
      [{integer,2850,26},
       {var,2850,'St'},
       {call,2850,
        {remote,2850,{atom,2850,erlang},{atom,2850,setelement}},
        [{integer,2850,5},{var,2850,'Usage'},{var,2850,'UsedTypes'}]}]}]}]},
 {function,2852,is_default_type,1,
  [{clause,2852,
    [{tuple,2852,[{var,2852,'Name'},{var,2852,'NumberOfTypeVariables'}]}],
    [],
    [{call,2853,
      {remote,2853,{atom,2853,erl_internal},{atom,2853,is_type}},
      [{var,2853,'Name'},{var,2853,'NumberOfTypeVariables'}]}]}]},
 {function,2855,is_newly_introduced_builtin_type,1,
  [{clause,2855,
    [{tuple,2855,[{atom,2855,map},{integer,2855,0}]}],
    [],
    [{atom,2855,true}]},
   {clause,2856,
    [{tuple,2856,[{var,2856,'Name'},{var,2856,'_'}]}],
    [[{call,2856,{atom,2856,is_atom},[{var,2856,'Name'}]}]],
    [{atom,2856,false}]}]},
 {function,2858,is_obsolete_builtin_type,1,
  [{clause,2858,
    [{var,2858,'TypePair'}],
    [],
    [{op,2859,'=/=',
      {call,2859,{atom,2859,obsolete_builtin_type},[{var,2859,'TypePair'}]},
      {atom,2859,no}}]}]},
 {function,2862,obsolete_builtin_type,1,
  [{clause,2862,
    [{tuple,2862,[{integer,2862,1},{integer,2862,255}]}],
    [],
    [{tuple,2863,
      [{atom,2863,deprecated},
       {tuple,2863,[{integer,2863,2},{integer,2863,255}]},
       {string,2863,[]}]}]},
   {clause,2864,
    [{tuple,2864,[{var,2864,'Name'},{var,2864,'A'}]}],
    [[{call,2864,{atom,2864,is_atom},[{var,2864,'Name'}]},
      {call,2864,{atom,2864,is_integer},[{var,2864,'A'}]}]],
    [{atom,2864,no}]}]},
 {function,2868,spec_decl,4,
  [{clause,2868,
    [{var,2868,'Line'},
     {var,2868,'MFA0'},
     {var,2868,'TypeSpecs'},
     {match,2868,
      {var,2868,'St0'},
      {tuple,2868,
       [{atom,2868,lint},
        {var,2868,'_'},
        {var,2868,'Mod'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'Specs'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'},
        {var,2868,'_'}]}}],
    [],
    [{match,2869,
      {var,2869,'MFA'},
      {'case',2869,
       {var,2869,'MFA0'},
       [{clause,2870,
         [{tuple,2870,[{var,2870,'F'},{var,2870,'Arity'}]}],
         [],
         [{tuple,2870,[{var,2870,'Mod'},{var,2870,'F'},{var,2870,'Arity'}]}]},
        {clause,2871,
         [{tuple,2871,[{var,2871,'_M'},{var,2871,'_F'},{var,2871,'Arity'}]}],
         [],
         [{var,2871,'MFA0'}]}]}},
     {match,2873,
      {var,2873,'St1'},
      {call,2873,
       {remote,2873,{atom,2873,erlang},{atom,2873,setelement}},
       [{integer,2873,27},
        {var,2873,'St0'},
        {call,2873,
         {remote,2873,{atom,2873,dict},{atom,2873,store}},
         [{var,2873,'MFA'},{var,2873,'Line'},{var,2873,'Specs'}]}]}},
     {'case',2874,
      {call,2874,
       {remote,2874,{atom,2874,dict},{atom,2874,is_key}},
       [{var,2874,'MFA'},{var,2874,'Specs'}]},
      [{clause,2875,
        [{atom,2875,true}],
        [],
        [{call,2875,
          {atom,2875,add_error},
          [{var,2875,'Line'},
           {tuple,2875,[{atom,2875,redefine_spec},{var,2875,'MFA0'}]},
           {var,2875,'St1'}]}]},
       {clause,2876,
        [{atom,2876,false}],
        [],
        [{call,2876,
          {atom,2876,check_specs},
          [{var,2876,'TypeSpecs'},
           {var,2876,'Arity'},
           {var,2876,'St1'}]}]}]}]}]},
 {function,2881,callback_decl,4,
  [{clause,2881,
    [{var,2881,'Line'},
     {var,2881,'MFA0'},
     {var,2881,'TypeSpecs'},
     {match,2882,
      {var,2882,'St0'},
      {tuple,2882,
       [{atom,2882,lint},
        {var,2882,'_'},
        {var,2882,'Mod'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'Callbacks'},
        {var,2882,'_'},
        {var,2882,'_'},
        {var,2882,'_'}]}}],
    [],
    [{'case',2883,
      {var,2883,'MFA0'},
      [{clause,2884,
        [{tuple,2884,[{var,2884,'_M'},{var,2884,'_F'},{var,2884,'_A'}]}],
        [],
        [{call,2884,
          {atom,2884,add_error},
          [{var,2884,'Line'},
           {tuple,2884,[{atom,2884,bad_callback},{var,2884,'MFA0'}]},
           {var,2884,'St0'}]}]},
       {clause,2885,
        [{tuple,2885,[{var,2885,'F'},{var,2885,'Arity'}]}],
        [],
        [{match,2886,
          {var,2886,'MFA'},
          {tuple,2886,[{var,2886,'Mod'},{var,2886,'F'},{var,2886,'Arity'}]}},
         {match,2887,
          {var,2887,'St1'},
          {call,2887,
           {remote,2887,{atom,2887,erlang},{atom,2887,setelement}},
           [{integer,2887,28},
            {var,2887,'St0'},
            {call,2887,
             {remote,2887,{atom,2887,dict},{atom,2887,store}},
             [{var,2887,'MFA'},{var,2887,'Line'},{var,2887,'Callbacks'}]}]}},
         {'case',2888,
          {call,2888,
           {remote,2888,{atom,2888,dict},{atom,2888,is_key}},
           [{var,2888,'MFA'},{var,2888,'Callbacks'}]},
          [{clause,2889,
            [{atom,2889,true}],
            [],
            [{call,2889,
              {atom,2889,add_error},
              [{var,2889,'Line'},
               {tuple,2889,[{atom,2889,redefine_callback},{var,2889,'MFA0'}]},
               {var,2889,'St1'}]}]},
           {clause,2890,
            [{atom,2890,false}],
            [],
            [{call,2890,
              {atom,2890,check_specs},
              [{var,2890,'TypeSpecs'},
               {var,2890,'Arity'},
               {var,2890,'St1'}]}]}]}]}]}]}]},
 {function,2896,optional_callbacks,3,
  [{clause,2896,
    [{var,2896,'Line'},{var,2896,'Term'},{var,2896,'St0'}],
    [],
    [{'try',2897,
      [{match,2897,
        {atom,2897,true},
        {call,2897,{atom,2897,is_fa_list},[{var,2897,'Term'}]}},
       {var,2897,'Term'}],
      [{clause,2898,
        [{var,2898,'FAs'}],
        [],
        [{call,2899,
          {atom,2899,optional_cbs},
          [{var,2899,'Line'},{var,2899,'FAs'},{var,2899,'St0'}]}]}],
      [{clause,2901,
        [{tuple,2901,[{var,2901,'_'},{var,2901,'_'},{var,2901,'_'}]}],
        [],
        [{var,2902,'St0'}]}],
      []}]}]},
 {function,2905,optional_cbs,3,
  [{clause,2905,
    [{var,2905,'_Line'},{nil,2905},{var,2905,'St'}],
    [],
    [{var,2906,'St'}]},
   {clause,2907,
    [{var,2907,'Line'},
     {cons,2907,{tuple,2907,[{var,2907,'F'},{var,2907,'A'}]},{var,2907,'FAs'}},
     {var,2907,'St0'}],
    [],
    [{match,2908,
      {tuple,2908,
       [{atom,2908,lint},
        {var,2908,'_'},
        {var,2908,'Mod'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'_'},
        {var,2908,'OptionalCbs'},
        {var,2908,'_'},
        {var,2908,'_'}]},
      {var,2908,'St0'}},
     {match,2909,
      {var,2909,'MFA'},
      {tuple,2909,[{var,2909,'Mod'},{var,2909,'F'},{var,2909,'A'}]}},
     {match,2910,
      {var,2910,'St1'},
      {call,2910,
       {remote,2910,{atom,2910,erlang},{atom,2910,setelement}},
       [{integer,2910,29},
        {var,2910,'St0'},
        {call,2910,
         {remote,2910,{atom,2910,dict},{atom,2910,store}},
         [{var,2910,'MFA'},{var,2910,'Line'},{var,2910,'OptionalCbs'}]}]}},
     {match,2911,
      {var,2911,'St2'},
      {'case',2911,
       {call,2911,
        {remote,2911,{atom,2911,dict},{atom,2911,is_key}},
        [{var,2911,'MFA'},{var,2911,'OptionalCbs'}]},
       [{clause,2912,
         [{atom,2912,true}],
         [],
         [{call,2913,
           {atom,2913,add_error},
           [{var,2913,'Line'},
            {tuple,2913,
             [{atom,2913,redefine_optional_callback},
              {tuple,2913,[{var,2913,'F'},{var,2913,'A'}]}]},
            {var,2913,'St1'}]}]},
        {clause,2914,[{atom,2914,false}],[],[{var,2915,'St1'}]}]}},
     {call,2917,
      {atom,2917,optional_cbs},
      [{var,2917,'Line'},{var,2917,'FAs'},{var,2917,'St2'}]}]}]},
 {function,2919,is_fa_list,1,
  [{clause,2919,
    [{cons,2919,{var,2919,'E'},{var,2919,'L'}}],
    [],
    [{op,2919,'andalso',
      {call,2919,{atom,2919,is_fa},[{var,2919,'E'}]},
      {call,2919,{atom,2919,is_fa_list},[{var,2919,'L'}]}}]},
   {clause,2920,[{nil,2920}],[],[{atom,2920,true}]},
   {clause,2921,[{var,2921,'_'}],[],[{atom,2921,false}]}]},
 {function,2923,is_fa,1,
  [{clause,2923,
    [{tuple,2923,[{var,2923,'FuncName'},{var,2923,'Arity'}]}],
    [[{call,2924,{atom,2924,is_atom},[{var,2924,'FuncName'}]},
      {call,2924,{atom,2924,is_integer},[{var,2924,'Arity'}]},
      {op,2924,'>=',{var,2924,'Arity'},{integer,2924,0}}]],
    [{atom,2924,true}]},
   {clause,2925,[{var,2925,'_'}],[],[{atom,2925,false}]}]},
 {function,2927,check_specs,3,
  [{clause,2927,
    [{cons,2927,{var,2927,'FunType'},{var,2927,'Left'}},
     {var,2927,'Arity'},
     {var,2927,'St0'}],
    [],
    [{match,2928,
      {tuple,2928,[{var,2928,'FunType1'},{var,2928,'CTypes'}]},
      {'case',2929,
       {var,2929,'FunType'},
       [{clause,2930,
         [{tuple,2930,
           [{atom,2930,type},
            {var,2930,'_'},
            {atom,2930,bounded_fun},
            {cons,2930,
             {match,2930,
              {var,2930,'FT'},
              {tuple,2930,
               [{atom,2930,type},
                {var,2930,'_'},
                {atom,2930,'fun'},
                {var,2930,'_'}]}},
             {cons,2930,{var,2930,'Cs'},{nil,2930}}}]}],
         [],
         [{match,2931,
           {var,2931,'Types0'},
           {lc,2931,
            {var,2931,'T'},
            [{generate,2931,
              {tuple,2931,
               [{atom,2931,type},
                {var,2931,'_'},
                {atom,2931,constraint},
                {cons,2931,
                 {var,2931,'_'},
                 {cons,2931,{var,2931,'T'},{nil,2931}}}]},
              {var,2931,'Cs'}}]}},
          {tuple,2932,
           [{var,2932,'FT'},
            {call,2932,
             {remote,2932,{atom,2932,lists},{atom,2932,append}},
             [{var,2932,'Types0'}]}]}]},
        {clause,2933,
         [{match,2933,
           {tuple,2933,
            [{atom,2933,type},
             {var,2933,'_'},
             {atom,2933,'fun'},
             {var,2933,'_'}]},
           {var,2933,'FT'}}],
         [],
         [{tuple,2933,[{var,2933,'FT'},{nil,2933}]}]}]}},
     {match,2935,
      {var,2935,'SpecArity'},
      {'case',2936,
       {var,2936,'FunType1'},
       [{clause,2937,
         [{tuple,2937,
           [{atom,2937,type},
            {var,2937,'L'},
            {atom,2937,'fun'},
            {cons,2937,
             {atom,2937,any},
             {cons,2937,{var,2937,'_'},{nil,2937}}}]}],
         [],
         [{atom,2937,any}]},
        {clause,2938,
         [{tuple,2938,
           [{atom,2938,type},
            {var,2938,'L'},
            {atom,2938,'fun'},
            {cons,2938,
             {tuple,2938,
              [{atom,2938,type},
               {var,2938,'_'},
               {atom,2938,product},
               {var,2938,'D'}]},
             {cons,2938,{var,2938,'_'},{nil,2938}}}]}],
         [],
         [{call,2938,{atom,2938,length},[{var,2938,'D'}]}]}]}},
     {match,2940,
      {var,2940,'St1'},
      {'case',2940,
       {op,2940,'=:=',{var,2940,'Arity'},{var,2940,'SpecArity'}},
       [{clause,2941,[{atom,2941,true}],[],[{var,2941,'St0'}]},
        {clause,2942,
         [{atom,2942,false}],
         [],
         [{call,2942,
           {atom,2942,add_error},
           [{var,2942,'L'},
            {atom,2942,spec_wrong_arity},
            {var,2942,'St0'}]}]}]}},
     {match,2944,
      {var,2944,'St2'},
      {call,2944,
       {atom,2944,check_type},
       [{tuple,2944,
         [{atom,2944,type},
          {call,2944,{atom,2944,nowarn},[]},
          {atom,2944,product},
          {cons,2944,{var,2944,'FunType1'},{var,2944,'CTypes'}}]},
        {var,2944,'St1'}]}},
     {call,2945,
      {atom,2945,check_specs},
      [{var,2945,'Left'},{var,2945,'Arity'},{var,2945,'St2'}]}]},
   {clause,2946,
    [{nil,2946},{var,2946,'_Arity'},{var,2946,'St'}],
    [],
    [{var,2947,'St'}]}]},
 {function,2949,nowarn,0,
  [{clause,2949,[],[],
    [{match,2950,
      {var,2950,'A0'},
      {call,2950,
       {remote,2950,{atom,2950,erl_anno},{atom,2950,new}},
       [{integer,2950,0}]}},
     {match,2951,
      {var,2951,'A1'},
      {call,2951,
       {remote,2951,{atom,2951,erl_anno},{atom,2951,set_generated}},
       [{atom,2951,true},{var,2951,'A0'}]}},
     {call,2952,
      {remote,2952,{atom,2952,erl_anno},{atom,2952,set_file}},
      [{string,2952,[]},{var,2952,'A1'}]}]}]},
 {function,2954,check_specs_without_function,1,
  [{clause,2954,
    [{match,2954,
      {tuple,2954,
       [{atom,2954,lint},
        {var,2954,'_'},
        {var,2954,'Mod'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'Funcs'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'Specs'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'},
        {var,2954,'_'}]},
      {var,2954,'St'}}],
    [],
    [{match,2955,
      {var,2955,'Fun'},
      {'fun',2955,
       {clauses,
        [{clause,2955,
          [{tuple,2955,[{var,2955,'M'},{var,2955,'F'},{var,2955,'A'}]},
           {var,2955,'Line'},
           {var,2955,'AccSt'}],
          [[{op,2955,'=:=',{var,2955,'M'},{var,2955,'Mod'}}]],
          [{match,2956,
            {var,2956,'FA'},
            {tuple,2956,[{var,2956,'F'},{var,2956,'A'}]}},
           {'case',2957,
            {call,2957,
             {remote,2957,{atom,2957,gb_sets},{atom,2957,is_element}},
             [{var,2957,'FA'},{var,2957,'Funcs'}]},
            [{clause,2958,[{atom,2958,true}],[],[{var,2958,'AccSt'}]},
             {clause,2959,
              [{atom,2959,false}],
              [],
              [{call,2959,
                {atom,2959,add_error},
                [{var,2959,'Line'},
                 {tuple,2959,[{atom,2959,spec_fun_undefined},{var,2959,'FA'}]},
                 {var,2959,'AccSt'}]}]}]}]},
         {clause,2961,
          [{tuple,2961,[{var,2961,'_M'},{var,2961,'_F'},{var,2961,'_A'}]},
           {var,2961,'_Line'},
           {var,2961,'AccSt'}],
          [],
          [{var,2961,'AccSt'}]}]}}},
     {call,2963,
      {remote,2963,{atom,2963,dict},{atom,2963,fold}},
      [{var,2963,'Fun'},{var,2963,'St'},{var,2963,'Specs'}]}]}]},
 {function,2967,check_functions_without_spec,2,
  [{clause,2967,
    [{var,2967,'Forms'},{var,2967,'St0'}],
    [],
    [{'case',2968,
      {call,2968,
       {atom,2968,is_warn_enabled},
       [{atom,2968,missing_spec_all},{var,2968,'St0'}]},
      [{clause,2969,
        [{atom,2969,true}],
        [],
        [{call,2970,
          {atom,2970,add_missing_spec_warnings},
          [{var,2970,'Forms'},{var,2970,'St0'},{atom,2970,all}]}]},
       {clause,2971,
        [{atom,2971,false}],
        [],
        [{'case',2972,
          {call,2972,
           {atom,2972,is_warn_enabled},
           [{atom,2972,missing_spec},{var,2972,'St0'}]},
          [{clause,2973,
            [{atom,2973,true}],
            [],
            [{call,2974,
              {atom,2974,add_missing_spec_warnings},
              [{var,2974,'Forms'},{var,2974,'St0'},{atom,2974,exported}]}]},
           {clause,2975,[{atom,2975,false}],[],[{var,2976,'St0'}]}]}]}]}]}]},
 {function,2980,add_missing_spec_warnings,3,
  [{clause,2980,
    [{var,2980,'Forms'},{var,2980,'St0'},{var,2980,'Type'}],
    [],
    [{match,2981,
      {var,2981,'Specs'},
      {lc,2981,
       {tuple,2981,[{var,2981,'F'},{var,2981,'A'}]},
       [{generate,2981,
         {tuple,2981,[{var,2981,'_M'},{var,2981,'F'},{var,2981,'A'}]},
         {call,2981,
          {remote,2981,{atom,2981,dict},{atom,2981,fetch_keys}},
          [{call,2981,
            {remote,2981,{atom,2981,erlang},{atom,2981,element}},
            [{integer,2981,27},{var,2981,'St0'}]}]}}]}},
     {match,2982,
      {var,2982,'Warns'},
      {'case',2983,
       {var,2983,'Type'},
       [{clause,2984,
         [{atom,2984,all}],
         [],
         [{lc,2985,
           {tuple,2985,[{var,2985,'FA'},{var,2985,'L'}]},
           [{generate,2985,
             {tuple,2985,
              [{atom,2985,function},
               {var,2985,'L'},
               {var,2985,'F'},
               {var,2985,'A'},
               {var,2985,'_'}]},
             {var,2985,'Forms'}},
            {op,2986,'not',
             {call,2986,
              {remote,2986,{atom,2986,lists},{atom,2986,member}},
              [{match,2986,
                {var,2986,'FA'},
                {tuple,2986,[{var,2986,'F'},{var,2986,'A'}]}},
               {var,2986,'Specs'}]}}]}]},
        {clause,2987,
         [{atom,2987,exported}],
         [],
         [{match,2988,
           {var,2988,'Exps'},
           {op,2988,'--',
            {call,2988,
             {remote,2988,{atom,2988,gb_sets},{atom,2988,to_list}},
             [{call,2988,
               {remote,2988,{atom,2988,erlang},{atom,2988,element}},
               [{integer,2988,5},{var,2988,'St0'}]}]},
            {call,2988,{atom,2988,pseudolocals},[]}}},
          {lc,2989,
           {tuple,2989,[{var,2989,'FA'},{var,2989,'L'}]},
           [{generate,2989,
             {tuple,2989,
              [{atom,2989,function},
               {var,2989,'L'},
               {var,2989,'F'},
               {var,2989,'A'},
               {var,2989,'_'}]},
             {var,2989,'Forms'}},
            {call,2990,
             {atom,2990,member},
             [{match,2990,
               {var,2990,'FA'},
               {tuple,2990,[{var,2990,'F'},{var,2990,'A'}]}},
              {op,2990,'--',{var,2990,'Exps'},{var,2990,'Specs'}}]}]}]}]}},
     {call,2992,
      {atom,2992,foldl},
      [{'fun',2992,
        {clauses,
         [{clause,2992,
           [{tuple,2992,[{var,2992,'FA'},{var,2992,'L'}]},{var,2992,'St'}],
           [],
           [{call,2993,
             {atom,2993,add_warning},
             [{var,2993,'L'},
              {tuple,2993,[{atom,2993,missing_spec},{var,2993,'FA'}]},
              {var,2993,'St'}]}]}]}},
       {var,2994,'St0'},
       {var,2994,'Warns'}]}]}]},
 {function,2996,check_unused_types,2,
  [{clause,2996,
    [{var,2996,'Forms'},
     {match,2996,
      {tuple,2996,
       [{atom,2996,lint},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'Usage'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'_'},
        {var,2996,'Ts'},
        {var,2996,'ExpTs'}]},
      {var,2996,'St'}}],
    [],
    [{'case',2997,
      {lc,2997,
       {var,2997,'File'},
       [{generate,2997,
         {tuple,2997,
          [{atom,2997,attribute},
           {var,2997,'_L'},
           {atom,2997,file},
           {tuple,2997,[{var,2997,'File'},{var,2997,'_Line'}]}]},
         {var,2997,'Forms'}}]},
      [{clause,2998,
        [{cons,2998,{var,2998,'FirstFile'},{var,2998,'_'}}],
        [],
        [{match,2999,
          {var,2999,'D'},
          {call,2999,
           {remote,2999,{atom,2999,erlang},{atom,2999,element}},
           [{integer,2999,5},{var,2999,'Usage'}]}},
         {match,3000,
          {var,3000,'L'},
          {op,3000,'++',
           {call,3000,
            {remote,3000,{atom,3000,gb_sets},{atom,3000,to_list}},
            [{var,3000,'ExpTs'}]},
           {call,3000,
            {remote,3000,{atom,3000,dict},{atom,3000,fetch_keys}},
            [{var,3000,'D'}]}}},
         {match,3001,
          {var,3001,'UsedTypes'},
          {call,3001,
           {remote,3001,{atom,3001,gb_sets},{atom,3001,from_list}},
           [{var,3001,'L'}]}},
         {match,3002,
          {var,3002,'FoldFun'},
          {'fun',3003,
           {clauses,
            [{clause,3003,
              [{var,3003,'Type'},
               {tuple,3003,
                [{atom,3003,typeinfo},{var,3003,'_'},{var,3003,'FileLine'}]},
               {var,3003,'AccSt'}],
              [],
              [{'case',3004,
                {call,3004,
                 {atom,3004,loc},
                 [{var,3004,'FileLine'},{var,3004,'AccSt'}]},
                [{clause,3005,
                  [{tuple,3005,[{var,3005,'FirstFile'},{var,3005,'_'}]}],
                  [],
                  [{'case',3006,
                    {call,3006,
                     {remote,3006,{atom,3006,gb_sets},{atom,3006,is_member}},
                     [{var,3006,'Type'},{var,3006,'UsedTypes'}]},
                    [{clause,3007,[{atom,3007,true}],[],[{var,3007,'AccSt'}]},
                     {clause,3008,
                      [{atom,3008,false}],
                      [],
                      [{match,3009,
                        {var,3009,'Warn'},
                        {tuple,3009,
                         [{atom,3009,unused_type},{var,3009,'Type'}]}},
                       {call,3010,
                        {atom,3010,add_warning},
                        [{var,3010,'FileLine'},
                         {var,3010,'Warn'},
                         {var,3010,'AccSt'}]}]}]}]},
                 {clause,3012,
                  [{var,3012,'_'}],
                  [],
                  [{var,3014,'AccSt'}]}]}]}]}}},
         {call,3017,
          {remote,3017,{atom,3017,dict},{atom,3017,fold}},
          [{var,3017,'FoldFun'},{var,3017,'St'},{var,3017,'Ts'}]}]},
       {clause,3018,[{nil,3018}],[],[{var,3019,'St'}]}]}]}]},
 {function,3022,check_local_opaque_types,1,
  [{clause,3022,
    [{var,3022,'St'}],
    [],
    [{match,3023,
      {tuple,3023,
       [{atom,3023,lint},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'_'},
        {var,3023,'Ts'},
        {var,3023,'ExpTs'}]},
      {var,3023,'St'}},
     {match,3024,
      {var,3024,'FoldFun'},
      {'fun',3025,
       {clauses,
        [{clause,3025,
          [{var,3025,'_Type'},
           {tuple,3025,[{atom,3025,typeinfo},{atom,3025,type},{var,3025,'_'}]},
           {var,3025,'AccSt'}],
          [],
          [{var,3026,'AccSt'}]},
         {clause,3027,
          [{var,3027,'Type'},
           {tuple,3027,
            [{atom,3027,typeinfo},{atom,3027,opaque},{var,3027,'FileLine'}]},
           {var,3027,'AccSt'}],
          [],
          [{'case',3028,
            {call,3028,
             {remote,3028,{atom,3028,gb_sets},{atom,3028,is_element}},
             [{var,3028,'Type'},{var,3028,'ExpTs'}]},
            [{clause,3029,[{atom,3029,true}],[],[{var,3029,'AccSt'}]},
             {clause,3030,
              [{atom,3030,false}],
              [],
              [{match,3031,
                {var,3031,'Warn'},
                {tuple,3031,
                 [{atom,3031,not_exported_opaque},{var,3031,'Type'}]}},
               {call,3032,
                {atom,3032,add_warning},
                [{var,3032,'FileLine'},
                 {var,3032,'Warn'},
                 {var,3032,'AccSt'}]}]}]}]}]}}},
     {call,3035,
      {remote,3035,{atom,3035,dict},{atom,3035,fold}},
      [{var,3035,'FoldFun'},{var,3035,'St'},{var,3035,'Ts'}]}]}]},
 {function,3040,icrt_clauses,4,
  [{clause,3040,
    [{var,3040,'Cs'},{var,3040,'In'},{var,3040,'Vt'},{var,3040,'St0'}],
    [],
    [{match,3041,
      {tuple,3041,[{var,3041,'Csvt'},{var,3041,'St1'}]},
      {call,3041,
       {atom,3041,icrt_clauses},
       [{var,3041,'Cs'},{var,3041,'Vt'},{var,3041,'St0'}]}},
     {match,3042,
      {var,3042,'UpdVt'},
      {call,3042,
       {atom,3042,icrt_export},
       [{var,3042,'Csvt'},{var,3042,'Vt'},{var,3042,'In'},{var,3042,'St1'}]}},
     {tuple,3043,[{var,3043,'UpdVt'},{var,3043,'St1'}]}]}]},
 {function,3048,icrt_clauses,3,
  [{clause,3048,
    [{var,3048,'Cs'},{var,3048,'Vt'},{var,3048,'St'}],
    [],
    [{call,3049,
      {atom,3049,mapfoldl},
      [{'fun',3049,
        {clauses,
         [{clause,3049,
           [{var,3049,'C'},{var,3049,'St0'}],
           [],
           [{call,3049,
             {atom,3049,icrt_clause},
             [{var,3049,'C'},{var,3049,'Vt'},{var,3049,'St0'}]}]}]}},
       {var,3049,'St'},
       {var,3049,'Cs'}]}]}]},
 {function,3051,icrt_clause,3,
  [{clause,3051,
    [{tuple,3051,
      [{atom,3051,clause},
       {var,3051,'_Line'},
       {var,3051,'H'},
       {var,3051,'G'},
       {var,3051,'B'}]},
     {var,3051,'Vt0'},
     {var,3051,'St0'}],
    [],
    [{match,3052,
      {tuple,3052,[{var,3052,'Hvt'},{var,3052,'Binvt'},{var,3052,'St1'}]},
      {call,3052,
       {atom,3052,head},
       [{var,3052,'H'},{var,3052,'Vt0'},{var,3052,'St0'}]}},
     {match,3053,
      {var,3053,'Vt1'},
      {call,3053,{atom,3053,vtupdate},[{var,3053,'Hvt'},{var,3053,'Binvt'}]}},
     {match,3054,
      {tuple,3054,[{var,3054,'Gvt'},{var,3054,'St2'}]},
      {call,3054,
       {atom,3054,guard},
       [{var,3054,'G'},
        {call,3054,{atom,3054,vtupdate},[{var,3054,'Vt1'},{var,3054,'Vt0'}]},
        {var,3054,'St1'}]}},
     {match,3055,
      {var,3055,'Vt2'},
      {call,3055,{atom,3055,vtupdate},[{var,3055,'Gvt'},{var,3055,'Vt1'}]}},
     {match,3056,
      {tuple,3056,[{var,3056,'Bvt'},{var,3056,'St3'}]},
      {call,3056,
       {atom,3056,exprs},
       [{var,3056,'B'},
        {call,3056,{atom,3056,vtupdate},[{var,3056,'Vt2'},{var,3056,'Vt0'}]},
        {var,3056,'St2'}]}},
     {tuple,3057,
      [{call,3057,{atom,3057,vtupdate},[{var,3057,'Bvt'},{var,3057,'Vt2'}]},
       {var,3057,'St3'}]}]}]},
 {function,3059,icrt_export,4,
  [{clause,3059,
    [{var,3059,'Vts'},
     {var,3059,'Vt'},
     {tuple,3059,[{var,3059,'Tag'},{var,3059,'Attrs'}]},
     {var,3059,'St'}],
    [],
    [{match,3060,
      {tuple,3060,[{var,3060,'_File'},{var,3060,'Loc'}]},
      {call,3060,{atom,3060,loc},[{var,3060,'Attrs'},{var,3060,'St'}]}},
     {call,3061,
      {atom,3061,icrt_export},
      [{call,3061,
        {remote,3061,{atom,3061,lists},{atom,3061,merge}},
        [{var,3061,'Vts'}]},
       {var,3061,'Vt'},
       {tuple,3061,[{var,3061,'Tag'},{var,3061,'Loc'}]},
       {call,3061,{atom,3061,length},[{var,3061,'Vts'}]},
       {nil,3061}]}]}]},
 {function,3063,icrt_export,5,
  [{clause,3063,
    [{cons,3063,
      {tuple,3063,
       [{var,3063,'V'},
        {tuple,3063,
         [{tuple,3063,[{atom,3063,export},{var,3063,'_'}]},
          {var,3063,'_'},
          {var,3063,'_'}]}]},
      {var,3063,'Vs0'}},
     {cons,3063,
      {tuple,3063,
       [{var,3063,'V'},
        {tuple,3063,
         [{match,3063,
           {tuple,3063,[{atom,3063,export},{var,3063,'_'}]},
           {var,3063,'S0'}},
          {var,3063,'_'},
          {var,3063,'Ls'}]}]},
      {var,3063,'Vt'}},
     {var,3064,'In'},
     {var,3064,'I'},
     {var,3064,'Acc'}],
    [],
    [{match,3068,
      {tuple,3068,[{var,3068,'VVs'},{var,3068,'Vs'}]},
      {call,3068,
       {remote,3068,{atom,3068,lists},{atom,3068,partition}},
       [{'fun',3068,
         {clauses,
          [{clause,3068,
            [{tuple,3068,[{var,3068,'K'},{var,3068,'_'}]}],
            [],
            [{op,3068,'=:=',{var,3068,'K'},{var,3068,'V'}}]}]}},
        {var,3068,'Vs0'}]}},
     {match,3069,
      {var,3069,'S'},
      {call,3069,
       {atom,3069,foldl},
       [{'fun',3069,
         {clauses,
          [{clause,3069,
            [{tuple,3069,
              [{var,3069,'_'},
               {tuple,3069,[{var,3069,'S1'},{var,3069,'_'},{var,3069,'_'}]}]},
             {var,3069,'AccS'}],
            [],
            [{call,3069,
              {atom,3069,merge_state},
              [{var,3069,'AccS'},{var,3069,'S1'}]}]}]}},
        {var,3069,'S0'},
        {var,3069,'VVs'}]}},
     {call,3070,
      {atom,3070,icrt_export},
      [{var,3070,'Vs'},
       {var,3070,'Vt'},
       {var,3070,'In'},
       {var,3070,'I'},
       {cons,3070,
        {tuple,3070,
         [{var,3070,'V'},
          {tuple,3070,[{var,3070,'S'},{atom,3070,used},{var,3070,'Ls'}]}]},
        {var,3070,'Acc'}}]}]},
   {clause,3071,
    [{cons,3071,{tuple,3071,[{var,3071,'V'},{var,3071,'_'}]},{var,3071,'Vs0'}},
     {cons,3071,
      {tuple,3071,
       [{var,3071,'V'},
        {tuple,3071,[{var,3071,'_'},{var,3071,'_'},{var,3071,'Ls'}]}]},
      {var,3071,'Vt'}},
     {var,3071,'In'},
     {var,3071,'I'},
     {var,3071,'Acc'}],
    [],
    [{match,3076,
      {var,3076,'Vs'},
      {call,3076,
       {remote,3076,{atom,3076,lists},{atom,3076,dropwhile}},
       [{'fun',3076,
         {clauses,
          [{clause,3076,
            [{tuple,3076,[{var,3076,'K'},{var,3076,'_'}]}],
            [],
            [{op,3076,'=:=',{var,3076,'K'},{var,3076,'V'}}]}]}},
        {var,3076,'Vs0'}]}},
     {call,3077,
      {atom,3077,icrt_export},
      [{var,3077,'Vs'},
       {var,3077,'Vt'},
       {var,3077,'In'},
       {var,3077,'I'},
       {cons,3077,
        {tuple,3077,
         [{var,3077,'V'},
          {tuple,3077,[{atom,3077,bound},{atom,3077,used},{var,3077,'Ls'}]}]},
        {var,3077,'Acc'}}]}]},
   {clause,3078,
    [{match,3078,
      {cons,3078,{tuple,3078,[{var,3078,'V1'},{var,3078,'_'}]},{var,3078,'_'}},
      {var,3078,'Vs'}},
     {cons,3078,{tuple,3078,[{var,3078,'V2'},{var,3078,'_'}]},{var,3078,'Vt'}},
     {var,3078,'In'},
     {var,3078,'I'},
     {var,3078,'Acc'}],
    [[{op,3078,'>',{var,3078,'V1'},{var,3078,'V2'}}]],
    [{call,3080,
      {atom,3080,icrt_export},
      [{var,3080,'Vs'},
       {var,3080,'Vt'},
       {var,3080,'In'},
       {var,3080,'I'},
       {var,3080,'Acc'}]}]},
   {clause,3081,
    [{match,3081,
      {cons,3081,{tuple,3081,[{var,3081,'V'},{var,3081,'_'}]},{var,3081,'_'}},
      {var,3081,'Vs0'}},
     {var,3081,'Vt'},
     {var,3081,'In'},
     {var,3081,'I'},
     {var,3081,'Acc'}],
    [],
    [{match,3083,
      {tuple,3083,[{var,3083,'VVs'},{var,3083,'Vs'}]},
      {call,3083,
       {remote,3083,{atom,3083,lists},{atom,3083,partition}},
       [{'fun',3083,
         {clauses,
          [{clause,3083,
            [{tuple,3083,[{var,3083,'K'},{var,3083,'_'}]}],
            [],
            [{op,3083,'=:=',{var,3083,'K'},{var,3083,'V'}}]}]}},
        {var,3083,'Vs0'}]}},
     {match,3084,
      {var,3084,'F'},
      {'fun',3084,
       {clauses,
        [{clause,3084,
          [{tuple,3084,
            [{var,3084,'_'},
             {tuple,3084,[{var,3084,'S'},{var,3084,'U'},{var,3084,'Ls'}]}]},
           {tuple,3084,
            [{var,3084,'AccI'},{var,3084,'AccS0'},{var,3084,'AccLs0'}]}],
          [],
          [{match,3085,
            {var,3085,'AccS'},
            {'case',3085,
             {tuple,3085,[{var,3085,'S'},{var,3085,'AccS0'}]},
             [{clause,3086,
               [{tuple,3086,
                 [{tuple,3086,[{atom,3086,unsafe},{var,3086,'_'}]},
                  {tuple,3086,[{atom,3086,unsafe},{var,3086,'_'}]}]}],
               [],
               [{tuple,3089,[{atom,3089,unsafe},{var,3089,'In'}]}]},
              {clause,3090,
               [{tuple,3090,
                 [{tuple,3090,[{atom,3090,unsafe},{var,3090,'_'}]},
                  {var,3090,'_'}]}],
               [],
               [{var,3094,'S'}]},
              {clause,3095,[{var,3095,'_'}],[],[{var,3098,'AccS0'}]}]}},
           {match,3100,
            {var,3100,'AccLs'},
            {'case',3100,
             {var,3100,'U'},
             [{clause,3101,[{atom,3101,used}],[],[{var,3101,'AccLs0'}]},
              {clause,3102,
               [{atom,3102,unused}],
               [],
               [{call,3102,
                 {atom,3102,merge_lines},
                 [{var,3102,'AccLs0'},{var,3102,'Ls'}]}]}]}},
           {tuple,3104,
            [{op,3104,'+',{var,3104,'AccI'},{integer,3104,1}},
             {var,3104,'AccS'},
             {var,3104,'AccLs'}]}]}]}}},
     {match,3107,
      {tuple,3107,[{var,3107,'Count'},{var,3107,'S1'},{var,3107,'Ls'}]},
      {call,3107,
       {atom,3107,foldl},
       [{var,3107,'F'},
        {tuple,3107,
         [{integer,3107,0},
          {tuple,3107,[{atom,3107,export},{var,3107,'In'}]},
          {nil,3107}]},
        {var,3107,'VVs'}]}},
     {match,3108,
      {var,3108,'S'},
      {'case',3108,
       {var,3108,'Count'},
       [{clause,3109,[{var,3109,'I'}],[],[{var,3111,'S1'}]},
        {clause,3112,
         [{var,3112,'_'}],
         [],
         [{tuple,3114,[{atom,3114,unsafe},{var,3114,'In'}]}]}]}},
     {match,3116,
      {var,3116,'U'},
      {'case',3116,
       {var,3116,'Ls'},
       [{clause,3116,[{nil,3116}],[],[{atom,3116,used}]},
        {clause,3116,[{var,3116,'_'}],[],[{atom,3116,unused}]}]}},
     {call,3117,
      {atom,3117,icrt_export},
      [{var,3117,'Vs'},
       {var,3117,'Vt'},
       {var,3117,'In'},
       {var,3117,'I'},
       {cons,3117,
        {tuple,3117,
         [{var,3117,'V'},
          {tuple,3117,[{var,3117,'S'},{var,3117,'U'},{var,3117,'Ls'}]}]},
        {var,3117,'Acc'}}]}]},
   {clause,3118,
    [{nil,3118},{var,3118,'_'},{var,3118,'_'},{var,3118,'_'},{var,3118,'Acc'}],
    [],
    [{call,3119,{atom,3119,reverse},[{var,3119,'Acc'}]}]}]},
 {function,3121,handle_comprehension,4,
  [{clause,3121,
    [{var,3121,'E'},{var,3121,'Qs'},{var,3121,'Vt0'},{var,3121,'St0'}],
    [],
    [{match,3122,
      {tuple,3122,[{var,3122,'Vt1'},{var,3122,'Uvt'},{var,3122,'St1'}]},
      {call,3122,
       {atom,3122,lc_quals},
       [{var,3122,'Qs'},{var,3122,'Vt0'},{var,3122,'St0'}]}},
     {match,3123,
      {tuple,3123,[{var,3123,'Evt'},{var,3123,'St2'}]},
      {call,3123,
       {atom,3123,expr},
       [{var,3123,'E'},{var,3123,'Vt1'},{var,3123,'St1'}]}},
     {match,3124,
      {var,3124,'Vt2'},
      {call,3124,{atom,3124,vtupdate},[{var,3124,'Evt'},{var,3124,'Vt1'}]}},
     {match,3126,
      {tuple,3126,[{var,3126,'_'},{var,3126,'St3'}]},
      {call,3126,
       {atom,3126,check_old_unused_vars},
       [{var,3126,'Vt2'},{var,3126,'Uvt'},{var,3126,'St2'}]}},
     {match,3128,
      {tuple,3128,[{var,3128,'_'},{var,3128,'St4'}]},
      {call,3128,
       {atom,3128,check_unused_vars},
       [{var,3128,'Uvt'},{var,3128,'Vt0'},{var,3128,'St3'}]}},
     {match,3130,
      {tuple,3130,[{var,3130,'_'},{var,3130,'St'}]},
      {call,3130,
       {atom,3130,check_unused_vars},
       [{var,3130,'Vt2'},{var,3130,'Vt0'},{var,3130,'St4'}]}},
     {match,3131,
      {var,3131,'Vt3'},
      {call,3131,
       {atom,3131,vtmerge},
       [{call,3131,{atom,3131,vtsubtract},[{var,3131,'Vt2'},{var,3131,'Uvt'}]},
        {var,3131,'Uvt'}]}},
     {match,3133,
      {var,3133,'Vt4'},
      {call,3133,{atom,3133,vtold},[{var,3133,'Vt3'},{var,3133,'Vt0'}]}},
     {match,3135,
      {var,3135,'Vt5'},
      {call,3135,{atom,3135,vt_no_unused},[{var,3135,'Vt4'}]}},
     {tuple,3136,[{var,3136,'Vt5'},{var,3136,'St'}]}]}]},
 {function,3149,lc_quals,3,
  [{clause,3149,
    [{var,3149,'Qs'},{var,3149,'Vt0'},{var,3149,'St0'}],
    [],
    [{match,3150,
      {var,3150,'OldRecDef'},
      {call,3150,
       {remote,3150,{atom,3150,erlang},{atom,3150,element}},
       [{integer,3150,23},{var,3150,'St0'}]}},
     {match,3151,
      {tuple,3151,[{var,3151,'Vt'},{var,3151,'Uvt'},{var,3151,'St'}]},
      {call,3151,
       {atom,3151,lc_quals},
       [{var,3151,'Qs'},
        {var,3151,'Vt0'},
        {nil,3151},
        {call,3151,
         {remote,3151,{atom,3151,erlang},{atom,3151,setelement}},
         [{integer,3151,23},{var,3151,'St0'},{atom,3151,false}]}]}},
     {tuple,3152,
      [{var,3152,'Vt'},
       {var,3152,'Uvt'},
       {call,3152,
        {remote,3152,{atom,3152,erlang},{atom,3152,setelement}},
        [{integer,3152,23},{var,3152,'St'},{var,3152,'OldRecDef'}]}]}]}]},
 {function,3154,lc_quals,4,
  [{clause,3154,
    [{cons,3154,
      {tuple,3154,
       [{atom,3154,generate},
        {var,3154,'_Line'},
        {var,3154,'P'},
        {var,3154,'E'}]},
      {var,3154,'Qs'}},
     {var,3154,'Vt0'},
     {var,3154,'Uvt0'},
     {var,3154,'St0'}],
    [],
    [{match,3155,
      {tuple,3155,[{var,3155,'Vt'},{var,3155,'Uvt'},{var,3155,'St'}]},
      {call,3155,
       {atom,3155,handle_generator},
       [{var,3155,'P'},
        {var,3155,'E'},
        {var,3155,'Vt0'},
        {var,3155,'Uvt0'},
        {var,3155,'St0'}]}},
     {call,3156,
      {atom,3156,lc_quals},
      [{var,3156,'Qs'},{var,3156,'Vt'},{var,3156,'Uvt'},{var,3156,'St'}]}]},
   {clause,3157,
    [{cons,3157,
      {tuple,3157,
       [{atom,3157,b_generate},
        {var,3157,'_Line'},
        {var,3157,'P'},
        {var,3157,'E'}]},
      {var,3157,'Qs'}},
     {var,3157,'Vt0'},
     {var,3157,'Uvt0'},
     {var,3157,'St0'}],
    [],
    [{match,3158,
      {var,3158,'St1'},
      {call,3158,
       {atom,3158,handle_bitstring_gen_pat},
       [{var,3158,'P'},{var,3158,'St0'}]}},
     {match,3159,
      {tuple,3159,[{var,3159,'Vt'},{var,3159,'Uvt'},{var,3159,'St'}]},
      {call,3159,
       {atom,3159,handle_generator},
       [{var,3159,'P'},
        {var,3159,'E'},
        {var,3159,'Vt0'},
        {var,3159,'Uvt0'},
        {var,3159,'St1'}]}},
     {call,3160,
      {atom,3160,lc_quals},
      [{var,3160,'Qs'},{var,3160,'Vt'},{var,3160,'Uvt'},{var,3160,'St'}]}]},
   {clause,3161,
    [{cons,3161,{var,3161,'F'},{var,3161,'Qs'}},
     {var,3161,'Vt'},
     {var,3161,'Uvt'},
     {var,3161,'St0'}],
    [],
    [{match,3162,
      {tuple,3162,[{var,3162,'Fvt'},{var,3162,'St1'}]},
      {'case',3162,
       {call,3162,
        {atom,3162,is_guard_test2},
        [{var,3162,'F'},
         {call,3162,
          {remote,3162,{atom,3162,erlang},{atom,3162,element}},
          [{integer,3162,8},{var,3162,'St0'}]}]},
       [{clause,3163,
         [{atom,3163,true}],
         [],
         [{call,3163,
           {atom,3163,guard_test},
           [{var,3163,'F'},{var,3163,'Vt'},{var,3163,'St0'}]}]},
        {clause,3164,
         [{atom,3164,false}],
         [],
         [{call,3164,
           {atom,3164,expr},
           [{var,3164,'F'},{var,3164,'Vt'},{var,3164,'St0'}]}]}]}},
     {call,3166,
      {atom,3166,lc_quals},
      [{var,3166,'Qs'},
       {call,3166,{atom,3166,vtupdate},[{var,3166,'Fvt'},{var,3166,'Vt'}]},
       {var,3166,'Uvt'},
       {var,3166,'St1'}]}]},
   {clause,3167,
    [{nil,3167},{var,3167,'Vt'},{var,3167,'Uvt'},{var,3167,'St'}],
    [],
    [{tuple,3168,[{var,3168,'Vt'},{var,3168,'Uvt'},{var,3168,'St'}]}]}]},
 {function,3170,handle_generator,5,
  [{clause,3170,
    [{var,3170,'P'},
     {var,3170,'E'},
     {var,3170,'Vt'},
     {var,3170,'Uvt'},
     {var,3170,'St0'}],
    [],
    [{match,3171,
      {tuple,3171,[{var,3171,'Evt'},{var,3171,'St1'}]},
      {call,3171,
       {atom,3171,expr},
       [{var,3171,'E'},{var,3171,'Vt'},{var,3171,'St0'}]}},
     {match,3173,
      {var,3173,'Vt1'},
      {call,3173,
       {atom,3173,vtupdate},
       [{call,3173,{atom,3173,vtold},[{var,3173,'Evt'},{var,3173,'Vt'}]},
        {var,3173,'Vt'}]}},
     {match,3174,
      {tuple,3174,[{var,3174,'_'},{var,3174,'St2'}]},
      {call,3174,
       {atom,3174,check_unused_vars},
       [{var,3174,'Evt'},{var,3174,'Vt'},{var,3174,'St1'}]}},
     {match,3175,
      {tuple,3175,[{var,3175,'Pvt'},{var,3175,'Binvt'},{var,3175,'St3'}]},
      {call,3175,
       {atom,3175,pattern},
       [{var,3175,'P'},
        {var,3175,'Vt1'},
        {nil,3175},
        {nil,3175},
        {var,3175,'St2'}]}},
     {match,3179,
      {var,3179,'Vt2'},
      {call,3179,{atom,3179,vtupdate},[{var,3179,'Pvt'},{var,3179,'Vt1'}]}},
     {match,3180,
      {var,3180,'St4'},
      {call,3180,
       {atom,3180,shadow_vars},
       [{var,3180,'Binvt'},
        {var,3180,'Vt1'},
        {atom,3180,generate},
        {var,3180,'St3'}]}},
     {match,3181,
      {var,3181,'Svt'},
      {call,3181,{atom,3181,vtold},[{var,3181,'Vt2'},{var,3181,'Binvt'}]}},
     {match,3182,
      {tuple,3182,[{var,3182,'_'},{var,3182,'St5'}]},
      {call,3182,
       {atom,3182,check_old_unused_vars},
       [{var,3182,'Svt'},{var,3182,'Uvt'},{var,3182,'St4'}]}},
     {match,3183,
      {var,3183,'NUvt'},
      {call,3183,
       {atom,3183,vtupdate},
       [{call,3183,{atom,3183,vtnew},[{var,3183,'Svt'},{var,3183,'Uvt'}]},
        {var,3183,'Uvt'}]}},
     {match,3184,
      {var,3184,'Vt3'},
      {call,3184,
       {atom,3184,vtupdate},
       [{call,3184,
         {atom,3184,vtsubtract},
         [{var,3184,'Vt2'},{var,3184,'Binvt'}]},
        {var,3184,'Binvt'}]}},
     {tuple,3185,[{var,3185,'Vt3'},{var,3185,'NUvt'},{var,3185,'St5'}]}]}]},
 {function,3187,handle_bitstring_gen_pat,2,
  [{clause,3187,
    [{tuple,3187,
      [{atom,3187,bin},
       {var,3187,'_'},
       {match,3187,
        {var,3187,'Segments'},
        {cons,3187,{var,3187,'_'},{var,3187,'_'}}}]},
     {var,3187,'St'}],
    [],
    [{'case',3188,
      {call,3188,
       {remote,3188,{atom,3188,lists},{atom,3188,last}},
       [{var,3188,'Segments'}]},
      [{clause,3189,
        [{tuple,3189,
          [{atom,3189,bin_element},
           {var,3189,'Line'},
           {tuple,3189,[{atom,3189,var},{var,3189,'_'},{var,3189,'_'}]},
           {atom,3189,default},
           {var,3189,'Flags'}]}],
        [[{call,3189,{atom,3189,is_list},[{var,3189,'Flags'}]}]],
        [{'case',3190,
          {op,3190,'orelse',
           {call,3190,
            {atom,3190,member},
            [{atom,3190,binary},{var,3190,'Flags'}]},
           {op,3191,'orelse',
            {call,3190,
             {atom,3190,member},
             [{atom,3190,bits},{var,3190,'Flags'}]},
            {call,3191,
             {atom,3191,member},
             [{atom,3191,bitstring},{var,3191,'Flags'}]}}},
          [{clause,3192,
            [{atom,3192,true}],
            [],
            [{call,3193,
              {atom,3193,add_error},
              [{var,3193,'Line'},
               {atom,3193,unsized_binary_in_bin_gen_pattern},
               {var,3193,'St'}]}]},
           {clause,3194,[{atom,3194,false}],[],[{var,3195,'St'}]}]}]},
       {clause,3197,[{var,3197,'_'}],[],[{var,3198,'St'}]}]}]},
   {clause,3200,[{var,3200,'_'},{var,3200,'St'}],[],[{var,3201,'St'}]}]},
 {function,3211,fun_clauses,3,
  [{clause,3211,
    [{var,3211,'Cs'},{var,3211,'Vt'},{var,3211,'St'}],
    [],
    [{match,3212,
      {var,3212,'OldRecDef'},
      {call,3212,
       {remote,3212,{atom,3212,erlang},{atom,3212,element}},
       [{integer,3212,23},{var,3212,'St'}]}},
     {match,3213,
      {tuple,3213,[{var,3213,'Bvt'},{var,3213,'St2'}]},
      {call,3213,
       {atom,3213,foldl},
       [{'fun',3213,
         {clauses,
          [{clause,3213,
            [{var,3213,'C'},{tuple,3213,[{var,3213,'Bvt0'},{var,3213,'St0'}]}],
            [],
            [{match,3214,
              {tuple,3214,[{var,3214,'Cvt'},{var,3214,'St1'}]},
              {call,3214,
               {atom,3214,fun_clause},
               [{var,3214,'C'},{var,3214,'Vt'},{var,3214,'St0'}]}},
             {tuple,3215,
              [{call,3215,
                {atom,3215,vtmerge},
                [{var,3215,'Cvt'},{var,3215,'Bvt0'}]},
               {var,3215,'St1'}]}]}]}},
        {tuple,3216,
         [{nil,3216},
          {call,3216,
           {remote,3216,{atom,3216,erlang},{atom,3216,setelement}},
           [{integer,3216,23},{var,3216,'St'},{atom,3216,false}]}]},
        {var,3216,'Cs'}]}},
     {match,3217,
      {var,3217,'Uvt'},
      {call,3217,
       {atom,3217,vt_no_unsafe},
       [{call,3217,
         {atom,3217,vt_no_unused},
         [{call,3217,
           {atom,3217,vtold},
           [{var,3217,'Bvt'},{var,3217,'Vt'}]}]}]}},
     {tuple,3218,
      [{var,3218,'Uvt'},
       {call,3218,
        {remote,3218,{atom,3218,erlang},{atom,3218,setelement}},
        [{integer,3218,23},{var,3218,'St2'},{var,3218,'OldRecDef'}]}]}]}]},
 {function,3220,fun_clause,3,
  [{clause,3220,
    [{tuple,3220,
      [{atom,3220,clause},
       {var,3220,'_Line'},
       {var,3220,'H'},
       {var,3220,'G'},
       {var,3220,'B'}]},
     {var,3220,'Vt0'},
     {var,3220,'St0'}],
    [],
    [{match,3221,
      {tuple,3221,[{var,3221,'Hvt'},{var,3221,'Binvt'},{var,3221,'St1'}]},
      {call,3221,
       {atom,3221,head},
       [{var,3221,'H'},{var,3221,'Vt0'},{nil,3221},{var,3221,'St0'}]}},
     {match,3222,
      {var,3222,'Vt1'},
      {call,3222,{atom,3222,vtupdate},[{var,3222,'Hvt'},{var,3222,'Vt0'}]}},
     {match,3223,
      {var,3223,'St2'},
      {call,3223,
       {atom,3223,shadow_vars},
       [{var,3223,'Binvt'},
        {var,3223,'Vt0'},
        {atom,3223,'fun'},
        {var,3223,'St1'}]}},
     {match,3224,
      {var,3224,'Vt2'},
      {call,3224,
       {atom,3224,vtupdate},
       [{call,3224,
         {atom,3224,vtsubtract},
         [{var,3224,'Vt1'},{var,3224,'Binvt'}]},
        {var,3224,'Binvt'}]}},
     {match,3225,
      {tuple,3225,[{var,3225,'Gvt'},{var,3225,'St3'}]},
      {call,3225,
       {atom,3225,guard},
       [{var,3225,'G'},{var,3225,'Vt2'},{var,3225,'St2'}]}},
     {match,3226,
      {var,3226,'Vt3'},
      {call,3226,{atom,3226,vtupdate},[{var,3226,'Gvt'},{var,3226,'Vt2'}]}},
     {match,3227,
      {tuple,3227,[{var,3227,'Bvt'},{var,3227,'St4'}]},
      {call,3227,
       {atom,3227,exprs},
       [{var,3227,'B'},{var,3227,'Vt3'},{var,3227,'St3'}]}},
     {match,3228,
      {var,3228,'Cvt'},
      {call,3228,{atom,3228,vtupdate},[{var,3228,'Bvt'},{var,3228,'Vt3'}]}},
     {match,3230,
      {tuple,3230,[{var,3230,'_'},{var,3230,'St5'}]},
      {call,3230,
       {atom,3230,check_unused_vars},
       [{var,3230,'Cvt'},{var,3230,'Vt0'},{var,3230,'St4'}]}},
     {match,3232,
      {var,3232,'Svt'},
      {call,3232,{atom,3232,vtold},[{var,3232,'Vt1'},{var,3232,'Binvt'}]}},
     {match,3233,
      {tuple,3233,[{var,3233,'_'},{var,3233,'St6'}]},
      {call,3233,
       {atom,3233,check_old_unused_vars},
       [{var,3233,'Cvt'},{var,3233,'Svt'},{var,3233,'St5'}]}},
     {match,3234,
      {var,3234,'Vt4'},
      {call,3234,
       {atom,3234,vtmerge},
       [{var,3234,'Svt'},
        {call,3234,
         {atom,3234,vtsubtract},
         [{var,3234,'Cvt'},{var,3234,'Svt'}]}]}},
     {tuple,3235,
      [{call,3235,{atom,3235,vtold},[{var,3235,'Vt4'},{var,3235,'Vt0'}]},
       {var,3235,'St6'}]}]}]},
 {function,3275,pat_var,5,
  [{clause,3275,
    [{var,3275,'V'},
     {var,3275,'Line'},
     {var,3275,'Vt'},
     {var,3275,'Bvt'},
     {var,3275,'St'}],
    [],
    [{'case',3276,
      {call,3276,
       {remote,3276,{atom,3276,orddict},{atom,3276,find}},
       [{var,3276,'V'},{var,3276,'Bvt'}]},
      [{clause,3277,
        [{tuple,3277,
          [{atom,3277,ok},
           {tuple,3277,
            [{atom,3277,bound},{var,3277,'_Usage'},{var,3277,'Ls'}]}]}],
        [],
        [{tuple,3278,
          [{nil,3278},
           {cons,3278,
            {tuple,3278,
             [{var,3278,'V'},
              {tuple,3278,
               [{atom,3278,bound},{atom,3278,used},{var,3278,'Ls'}]}]},
            {nil,3278}},
           {var,3278,'St'}]}]},
       {clause,3279,
        [{atom,3279,error}],
        [],
        [{'case',3280,
          {call,3280,
           {remote,3280,{atom,3280,orddict},{atom,3280,find}},
           [{var,3280,'V'},{var,3280,'Vt'}]},
          [{clause,3281,
            [{tuple,3281,
              [{atom,3281,ok},
               {tuple,3281,
                [{atom,3281,bound},{var,3281,'_Usage'},{var,3281,'Ls'}]}]}],
            [],
            [{tuple,3282,
              [{cons,3282,
                {tuple,3282,
                 [{var,3282,'V'},
                  {tuple,3282,
                   [{atom,3282,bound},{atom,3282,used},{var,3282,'Ls'}]}]},
                {nil,3282}},
               {nil,3282},
               {var,3282,'St'}]}]},
           {clause,3283,
            [{tuple,3283,
              [{atom,3283,ok},
               {tuple,3283,
                [{tuple,3283,[{atom,3283,unsafe},{var,3283,'In'}]},
                 {var,3283,'_Usage'},
                 {var,3283,'Ls'}]}]}],
            [],
            [{tuple,3284,
              [{cons,3284,
                {tuple,3284,
                 [{var,3284,'V'},
                  {tuple,3284,
                   [{atom,3284,bound},{atom,3284,used},{var,3284,'Ls'}]}]},
                {nil,3284}},
               {nil,3284},
               {call,3285,
                {atom,3285,add_error},
                [{var,3285,'Line'},
                 {tuple,3285,
                  [{atom,3285,unsafe_var},{var,3285,'V'},{var,3285,'In'}]},
                 {var,3285,'St'}]}]}]},
           {clause,3286,
            [{tuple,3286,
              [{atom,3286,ok},
               {tuple,3286,
                [{tuple,3286,[{atom,3286,export},{var,3286,'From'}]},
                 {var,3286,'_Usage'},
                 {var,3286,'Ls'}]}]}],
            [],
            [{tuple,3287,
              [{cons,3287,
                {tuple,3287,
                 [{var,3287,'V'},
                  {tuple,3287,
                   [{atom,3287,bound},{atom,3287,used},{var,3287,'Ls'}]}]},
                {nil,3287}},
               {nil,3287},
               {call,3289,
                {atom,3289,add_warning},
                [{var,3289,'Line'},
                 {tuple,3289,
                  [{atom,3289,exported_var},{var,3289,'V'},{var,3289,'From'}]},
                 {var,3289,'St'}]}]}]},
           {clause,3290,
            [{atom,3290,error}],
            [[{call,3290,
               {remote,3290,{atom,3290,erlang},{atom,3290,element}},
               [{integer,3290,23},{var,3290,'St'}]}]],
            [{tuple,3291,
              [{nil,3291},
               {cons,3291,
                {tuple,3291,
                 [{var,3291,'V'},
                  {tuple,3291,
                   [{atom,3291,bound},
                    {atom,3291,unused},
                    {cons,3291,{var,3291,'Line'},{nil,3291}}]}]},
                {nil,3291}},
               {call,3292,
                {atom,3292,add_error},
                [{var,3292,'Line'},
                 {tuple,3292,
                  [{atom,3292,variable_in_record_def},{var,3292,'V'}]},
                 {var,3292,'St'}]}]}]},
           {clause,3293,
            [{atom,3293,error}],
            [],
            [{tuple,3293,
              [{nil,3293},
               {cons,3293,
                {tuple,3293,
                 [{var,3293,'V'},
                  {tuple,3293,
                   [{atom,3293,bound},
                    {atom,3293,unused},
                    {cons,3293,{var,3293,'Line'},{nil,3293}}]}]},
                {nil,3293}},
               {var,3293,'St'}]}]}]}]}]}]}]},
 {function,3302,pat_binsize_var,5,
  [{clause,3302,
    [{var,3302,'V'},
     {var,3302,'Line'},
     {var,3302,'Vt'},
     {var,3302,'Bvt'},
     {var,3302,'St'}],
    [],
    [{'case',3303,
      {call,3303,
       {remote,3303,{atom,3303,orddict},{atom,3303,find}},
       [{var,3303,'V'},{var,3303,'Bvt'}]},
      [{clause,3304,
        [{tuple,3304,
          [{atom,3304,ok},
           {tuple,3304,
            [{atom,3304,bound},{var,3304,'_Used'},{var,3304,'Ls'}]}]}],
        [],
        [{tuple,3305,
          [{nil,3305},
           {cons,3305,
            {tuple,3305,
             [{var,3305,'V'},
              {tuple,3305,
               [{atom,3305,bound},{atom,3305,used},{var,3305,'Ls'}]}]},
            {nil,3305}},
           {var,3305,'St'}]}]},
       {clause,3306,
        [{atom,3306,error}],
        [],
        [{'case',3307,
          {call,3307,
           {remote,3307,{atom,3307,orddict},{atom,3307,find}},
           [{var,3307,'V'},{var,3307,'Vt'}]},
          [{clause,3308,
            [{tuple,3308,
              [{atom,3308,ok},
               {tuple,3308,
                [{atom,3308,bound},{var,3308,'_Used'},{var,3308,'Ls'}]}]}],
            [],
            [{tuple,3309,
              [{cons,3309,
                {tuple,3309,
                 [{var,3309,'V'},
                  {tuple,3309,
                   [{atom,3309,bound},{atom,3309,used},{var,3309,'Ls'}]}]},
                {nil,3309}},
               {nil,3309},
               {var,3309,'St'}]}]},
           {clause,3310,
            [{tuple,3310,
              [{atom,3310,ok},
               {tuple,3310,
                [{tuple,3310,[{atom,3310,unsafe},{var,3310,'In'}]},
                 {var,3310,'_Used'},
                 {var,3310,'Ls'}]}]}],
            [],
            [{tuple,3311,
              [{cons,3311,
                {tuple,3311,
                 [{var,3311,'V'},
                  {tuple,3311,
                   [{atom,3311,bound},{atom,3311,used},{var,3311,'Ls'}]}]},
                {nil,3311}},
               {nil,3311},
               {call,3312,
                {atom,3312,add_error},
                [{var,3312,'Line'},
                 {tuple,3312,
                  [{atom,3312,unsafe_var},{var,3312,'V'},{var,3312,'In'}]},
                 {var,3312,'St'}]}]}]},
           {clause,3313,
            [{tuple,3313,
              [{atom,3313,ok},
               {tuple,3313,
                [{tuple,3313,[{atom,3313,export},{var,3313,'From'}]},
                 {var,3313,'_Used'},
                 {var,3313,'Ls'}]}]}],
            [],
            [{tuple,3314,
              [{cons,3314,
                {tuple,3314,
                 [{var,3314,'V'},
                  {tuple,3314,
                   [{atom,3314,bound},{atom,3314,used},{var,3314,'Ls'}]}]},
                {nil,3314}},
               {nil,3314},
               {call,3317,
                {atom,3317,exported_var},
                [{var,3317,'Line'},
                 {var,3317,'V'},
                 {var,3317,'From'},
                 {var,3317,'St'}]}]}]},
           {clause,3318,
            [{atom,3318,error}],
            [],
            [{tuple,3319,
              [{cons,3319,
                {tuple,3319,
                 [{var,3319,'V'},
                  {tuple,3319,
                   [{atom,3319,bound},
                    {atom,3319,used},
                    {cons,3319,{var,3319,'Line'},{nil,3319}}]}]},
                {nil,3319}},
               {nil,3319},
               {call,3320,
                {atom,3320,add_error},
                [{var,3320,'Line'},
                 {tuple,3320,[{atom,3320,unbound_var},{var,3320,'V'}]},
                 {var,3320,'St'}]}]}]}]}]}]}]}]},
 {function,3332,expr_var,4,
  [{clause,3332,
    [{var,3332,'V'},{var,3332,'Line'},{var,3332,'Vt'},{var,3332,'St'}],
    [],
    [{'case',3333,
      {call,3333,
       {remote,3333,{atom,3333,orddict},{atom,3333,find}},
       [{var,3333,'V'},{var,3333,'Vt'}]},
      [{clause,3334,
        [{tuple,3334,
          [{atom,3334,ok},
           {tuple,3334,
            [{atom,3334,bound},{var,3334,'_Usage'},{var,3334,'Ls'}]}]}],
        [],
        [{tuple,3335,
          [{cons,3335,
            {tuple,3335,
             [{var,3335,'V'},
              {tuple,3335,
               [{atom,3335,bound},{atom,3335,used},{var,3335,'Ls'}]}]},
            {nil,3335}},
           {var,3335,'St'}]}]},
       {clause,3336,
        [{tuple,3336,
          [{atom,3336,ok},
           {tuple,3336,
            [{tuple,3336,[{atom,3336,unsafe},{var,3336,'In'}]},
             {var,3336,'_Usage'},
             {var,3336,'Ls'}]}]}],
        [],
        [{tuple,3337,
          [{cons,3337,
            {tuple,3337,
             [{var,3337,'V'},
              {tuple,3337,
               [{atom,3337,bound},{atom,3337,used},{var,3337,'Ls'}]}]},
            {nil,3337}},
           {call,3338,
            {atom,3338,add_error},
            [{var,3338,'Line'},
             {tuple,3338,
              [{atom,3338,unsafe_var},{var,3338,'V'},{var,3338,'In'}]},
             {var,3338,'St'}]}]}]},
       {clause,3339,
        [{tuple,3339,
          [{atom,3339,ok},
           {tuple,3339,
            [{tuple,3339,[{atom,3339,export},{var,3339,'From'}]},
             {var,3339,'_Usage'},
             {var,3339,'Ls'}]}]}],
        [],
        [{'case',3340,
          {call,3340,
           {atom,3340,is_warn_enabled},
           [{atom,3340,export_vars},{var,3340,'St'}]},
          [{clause,3341,
            [{atom,3341,true}],
            [],
            [{tuple,3342,
              [{cons,3342,
                {tuple,3342,
                 [{var,3342,'V'},
                  {tuple,3342,
                   [{atom,3342,bound},{atom,3342,used},{var,3342,'Ls'}]}]},
                {nil,3342}},
               {call,3343,
                {atom,3343,add_warning},
                [{var,3343,'Line'},
                 {tuple,3343,
                  [{atom,3343,exported_var},{var,3343,'V'},{var,3343,'From'}]},
                 {var,3343,'St'}]}]}]},
           {clause,3344,
            [{atom,3344,false}],
            [],
            [{tuple,3345,
              [{cons,3345,
                {tuple,3345,
                 [{var,3345,'V'},
                  {tuple,3345,
                   [{tuple,3345,[{atom,3345,export},{var,3345,'From'}]},
                    {atom,3345,used},
                    {var,3345,'Ls'}]}]},
                {nil,3345}},
               {var,3345,'St'}]}]}]}]},
       {clause,3347,
        [{atom,3347,error}],
        [],
        [{tuple,3348,
          [{cons,3348,
            {tuple,3348,
             [{var,3348,'V'},
              {tuple,3348,
               [{atom,3348,bound},
                {atom,3348,used},
                {cons,3348,{var,3348,'Line'},{nil,3348}}]}]},
            {nil,3348}},
           {call,3349,
            {atom,3349,add_error},
            [{var,3349,'Line'},
             {tuple,3349,[{atom,3349,unbound_var},{var,3349,'V'}]},
             {var,3349,'St'}]}]}]}]}]}]},
 {function,3352,exported_var,4,
  [{clause,3352,
    [{var,3352,'Line'},{var,3352,'V'},{var,3352,'From'},{var,3352,'St'}],
    [],
    [{'case',3353,
      {call,3353,
       {atom,3353,is_warn_enabled},
       [{atom,3353,export_vars},{var,3353,'St'}]},
      [{clause,3354,
        [{atom,3354,true}],
        [],
        [{call,3354,
          {atom,3354,add_warning},
          [{var,3354,'Line'},
           {tuple,3354,
            [{atom,3354,exported_var},{var,3354,'V'},{var,3354,'From'}]},
           {var,3354,'St'}]}]},
       {clause,3355,[{atom,3355,false}],[],[{var,3355,'St'}]}]}]}]},
 {function,3358,shadow_vars,4,
  [{clause,3358,
    [{var,3358,'Vt'},{var,3358,'Vt0'},{var,3358,'In'},{var,3358,'St0'}],
    [],
    [{'case',3359,
      {call,3359,
       {atom,3359,is_warn_enabled},
       [{atom,3359,shadow_vars},{var,3359,'St0'}]},
      [{clause,3360,
        [{atom,3360,true}],
        [],
        [{call,3361,
          {atom,3361,foldl},
          [{'fun',3361,
            {clauses,
             [{clause,3361,
               [{tuple,3361,
                 [{var,3361,'V'},
                  {tuple,3361,
                   [{var,3361,'_'},
                    {var,3361,'_'},
                    {cons,3361,{var,3361,'L'},{var,3361,'_'}}]}]},
                {var,3361,'St'}],
               [],
               [{call,3362,
                 {atom,3362,add_warning},
                 [{var,3362,'L'},
                  {tuple,3362,
                   [{atom,3362,shadowed_var},{var,3362,'V'},{var,3362,'In'}]},
                  {var,3362,'St'}]}]},
              {clause,3363,
               [{var,3363,'_'},{var,3363,'St'}],
               [],
               [{var,3363,'St'}]}]}},
           {var,3364,'St0'},
           {call,3364,
            {atom,3364,vtold},
            [{var,3364,'Vt'},
             {call,3364,{atom,3364,vt_no_unsafe},[{var,3364,'Vt0'}]}]}]}]},
       {clause,3365,[{atom,3365,false}],[],[{var,3365,'St0'}]}]}]}]},
 {function,3368,check_unused_vars,3,
  [{clause,3368,
    [{var,3368,'Vt'},{var,3368,'Vt0'},{var,3368,'St0'}],
    [],
    [{match,3369,
      {var,3369,'U'},
      {call,3369,
       {atom,3369,unused_vars},
       [{var,3369,'Vt'},{var,3369,'Vt0'},{var,3369,'St0'}]}},
     {call,3370,
      {atom,3370,warn_unused_vars},
      [{var,3370,'U'},{var,3370,'Vt'},{var,3370,'St0'}]}]}]},
 {function,3372,check_old_unused_vars,3,
  [{clause,3372,
    [{var,3372,'Vt'},{var,3372,'Vt0'},{var,3372,'St0'}],
    [],
    [{match,3373,
      {var,3373,'U'},
      {call,3373,
       {atom,3373,unused_vars},
       [{call,3373,{atom,3373,vtold},[{var,3373,'Vt'},{var,3373,'Vt0'}]},
        {nil,3373},
        {var,3373,'St0'}]}},
     {call,3374,
      {atom,3374,warn_unused_vars},
      [{var,3374,'U'},{var,3374,'Vt'},{var,3374,'St0'}]}]}]},
 {function,3376,unused_vars,3,
  [{clause,3376,
    [{var,3376,'Vt'},{var,3376,'Vt0'},{var,3376,'_St0'}],
    [],
    [{match,3377,
      {var,3377,'U0'},
      {call,3377,
       {remote,3377,{atom,3377,orddict},{atom,3377,filter}},
       [{'fun',3377,
         {clauses,
          [{clause,3377,
            [{var,3377,'V'},
             {tuple,3377,
              [{var,3377,'_State'},{atom,3377,unused},{var,3377,'_Ls'}]}],
            [],
            [{'case',3378,
              {call,3378,{atom,3378,atom_to_list},[{var,3378,'V'}]},
              [{clause,3379,
                [{op,3379,'++',{string,3379,"_"},{var,3379,'_'}}],
                [],
                [{atom,3379,false}]},
               {clause,3380,[{var,3380,'_'}],[],[{atom,3380,true}]}]}]},
           {clause,3382,
            [{var,3382,'_V'},{var,3382,'_How'}],
            [],
            [{atom,3382,false}]}]}},
        {var,3383,'Vt'}]}},
     {call,3384,{atom,3384,vtnew},[{var,3384,'U0'},{var,3384,'Vt0'}]}]}]},
 {function,3386,warn_unused_vars,3,
  [{clause,3386,
    [{nil,3386},{var,3386,'Vt'},{var,3386,'St0'}],
    [],
    [{tuple,3387,[{var,3387,'Vt'},{var,3387,'St0'}]}]},
   {clause,3388,
    [{var,3388,'U'},{var,3388,'Vt'},{var,3388,'St0'}],
    [],
    [{match,3389,
      {var,3389,'St1'},
      {'case',3389,
       {call,3389,
        {atom,3389,is_warn_enabled},
        [{atom,3389,unused_vars},{var,3389,'St0'}]},
       [{clause,3390,[{atom,3390,false}],[],[{var,3390,'St0'}]},
        {clause,3391,
         [{atom,3391,true}],
         [],
         [{call,3392,
           {atom,3392,foldl},
           [{'fun',3392,
             {clauses,
              [{clause,3392,
                [{tuple,3392,
                  [{var,3392,'V'},
                   {tuple,3392,
                    [{var,3392,'_'},{atom,3392,unused},{var,3392,'Ls'}]}]},
                 {var,3392,'St'}],
                [],
                [{call,3393,
                  {atom,3393,foldl},
                  [{'fun',3393,
                    {clauses,
                     [{clause,3393,
                       [{var,3393,'L'},{var,3393,'St2'}],
                       [],
                       [{call,3394,
                         {atom,3394,add_warning},
                         [{var,3394,'L'},
                          {tuple,3394,[{atom,3394,unused_var},{var,3394,'V'}]},
                          {var,3395,'St2'}]}]}]}},
                   {var,3396,'St'},
                   {var,3396,'Ls'}]}]}]}},
            {var,3397,'St0'},
            {var,3397,'U'}]}]}]}},
     {match,3400,
      {var,3400,'UVt'},
      {call,3400,
       {atom,3400,map},
       [{'fun',3400,
         {clauses,
          [{clause,3400,
            [{tuple,3400,
              [{var,3400,'V'},
               {tuple,3400,
                [{var,3400,'State'},{var,3400,'_'},{var,3400,'Ls'}]}]}],
            [],
            [{tuple,3400,
              [{var,3400,'V'},
               {tuple,3400,
                [{var,3400,'State'},{atom,3400,used},{var,3400,'Ls'}]}]}]}]}},
        {var,3400,'U'}]}},
     {tuple,3401,
      [{call,3401,{atom,3401,vtmerge},[{var,3401,'Vt'},{var,3401,'UVt'}]},
       {var,3401,'St1'}]}]}]},
 {function,3408,vtupdate,2,
  [{clause,3408,
    [{var,3408,'Uvt'},{var,3408,'Vt0'}],
    [],
    [{call,3409,
      {remote,3409,{atom,3409,orddict},{atom,3409,merge}},
      [{'fun',3409,
        {clauses,
         [{clause,3409,
           [{var,3409,'_V'},
            {tuple,3409,[{var,3409,'S'},{var,3409,'U1'},{var,3409,'L1'}]},
            {tuple,3409,[{var,3409,'_S'},{var,3409,'U2'},{var,3409,'L2'}]}],
           [],
           [{tuple,3410,
             [{var,3410,'S'},
              {call,3410,
               {atom,3410,merge_used},
               [{var,3410,'U1'},{var,3410,'U2'}]},
              {call,3410,
               {atom,3410,merge_lines},
               [{var,3410,'L1'},{var,3410,'L2'}]}]}]}]}},
       {var,3411,'Uvt'},
       {var,3411,'Vt0'}]}]}]},
 {function,3416,vtunsafe,3,
  [{clause,3416,
    [{tuple,3416,[{var,3416,'Tag'},{var,3416,'FileLine'}]},
     {var,3416,'Uvt'},
     {var,3416,'Vt'}],
    [],
    [{match,3417,
      {var,3417,'Line'},
      {call,3417,
       {remote,3417,{atom,3417,erl_anno},{atom,3417,location}},
       [{var,3417,'FileLine'}]}},
     {lc,3418,
      {tuple,3418,
       [{var,3418,'V'},
        {tuple,3418,
         [{tuple,3418,
           [{atom,3418,unsafe},
            {tuple,3418,[{var,3418,'Tag'},{var,3418,'Line'}]}]},
          {var,3418,'U'},
          {var,3418,'Ls'}]}]},
      [{generate,3418,
        {tuple,3418,
         [{var,3418,'V'},
          {tuple,3418,[{var,3418,'_'},{var,3418,'U'},{var,3418,'Ls'}]}]},
        {call,3418,
         {atom,3418,vtnew},
         [{var,3418,'Uvt'},{var,3418,'Vt'}]}}]}]}]},
 {function,3424,vtmerge,2,
  [{clause,3424,
    [{var,3424,'Vt1'},{var,3424,'Vt2'}],
    [],
    [{call,3425,
      {remote,3425,{atom,3425,orddict},{atom,3425,merge}},
      [{'fun',3425,
        {clauses,
         [{clause,3425,
           [{var,3425,'_V'},
            {tuple,3425,[{var,3425,'S1'},{var,3425,'U1'},{var,3425,'L1'}]},
            {tuple,3425,[{var,3425,'S2'},{var,3425,'U2'},{var,3425,'L2'}]}],
           [],
           [{tuple,3426,
             [{call,3426,
               {atom,3426,merge_state},
               [{var,3426,'S1'},{var,3426,'S2'}]},
              {call,3427,
               {atom,3427,merge_used},
               [{var,3427,'U1'},{var,3427,'U2'}]},
              {call,3428,
               {atom,3428,merge_lines},
               [{var,3428,'L1'},{var,3428,'L2'}]}]}]}]}},
       {var,3429,'Vt1'},
       {var,3429,'Vt2'}]}]}]},
 {function,3431,vtmerge,1,
  [{clause,3431,
    [{var,3431,'Vts'}],
    [],
    [{call,3431,
      {atom,3431,foldl},
      [{'fun',3431,
        {clauses,
         [{clause,3431,
           [{var,3431,'Vt'},{var,3431,'Mvts'}],
           [],
           [{call,3431,
             {atom,3431,vtmerge},
             [{var,3431,'Vt'},{var,3431,'Mvts'}]}]}]}},
       {nil,3431},
       {var,3431,'Vts'}]}]}]},
 {function,3433,vtmerge_pat,2,
  [{clause,3433,
    [{var,3433,'Vt1'},{var,3433,'Vt2'}],
    [],
    [{call,3434,
      {remote,3434,{atom,3434,orddict},{atom,3434,merge}},
      [{'fun',3434,
        {clauses,
         [{clause,3434,
           [{var,3434,'_V'},
            {tuple,3434,
             [{var,3434,'S1'},{var,3434,'_Usage1'},{var,3434,'L1'}]},
            {tuple,3434,
             [{var,3434,'S2'},{var,3434,'_Usage2'},{var,3434,'L2'}]}],
           [],
           [{tuple,3435,
             [{call,3435,
               {atom,3435,merge_state},
               [{var,3435,'S1'},{var,3435,'S2'}]},
              {atom,3435,used},
              {call,3435,
               {atom,3435,merge_lines},
               [{var,3435,'L1'},{var,3435,'L2'}]}]}]}]}},
       {var,3436,'Vt1'},
       {var,3436,'Vt2'}]}]}]},
 {function,3438,merge_lines,2,
  [{clause,3438,
    [{var,3438,'Ls1'},{var,3438,'Ls2'}],
    [],
    [{call,3439,
      {remote,3439,{atom,3439,ordsets},{atom,3439,union}},
      [{var,3439,'Ls1'},{var,3439,'Ls2'}]}]}]},
 {function,3441,merge_state,2,
  [{clause,3441,
    [{match,3441,
      {tuple,3441,[{atom,3441,unsafe},{var,3441,'_F1'}]},
      {var,3441,'S1'}},
     {var,3441,'_S2'}],
    [],
    [{var,3441,'S1'}]},
   {clause,3442,
    [{var,3442,'_S1'},
     {match,3442,
      {tuple,3442,[{atom,3442,unsafe},{var,3442,'_F2'}]},
      {var,3442,'S2'}}],
    [],
    [{var,3442,'S2'}]},
   {clause,3443,[{atom,3443,bound},{var,3443,'S2'}],[],[{var,3443,'S2'}]},
   {clause,3444,[{var,3444,'S1'},{atom,3444,bound}],[],[{var,3444,'S1'}]},
   {clause,3445,
    [{tuple,3445,[{atom,3445,export},{var,3445,'F1'}]},
     {tuple,3445,[{atom,3445,export},{var,3445,'_F2'}]}],
    [],
    [{tuple,3447,[{atom,3447,export},{var,3447,'F1'}]}]}]},
 {function,3449,merge_used,2,
  [{clause,3449,[{atom,3449,used},{var,3449,'_Usage2'}],[],[{atom,3449,used}]},
   {clause,3450,[{var,3450,'_Usage1'},{atom,3450,used}],[],[{atom,3450,used}]},
   {clause,3451,
    [{atom,3451,unused},{atom,3451,unused}],
    [],
    [{atom,3451,unused}]}]},
 {function,3456,vtnew,2,
  [{clause,3456,
    [{var,3456,'New'},{var,3456,'Old'}],
    [],
    [{call,3457,
      {remote,3457,{atom,3457,orddict},{atom,3457,filter}},
      [{'fun',3457,
        {clauses,
         [{clause,3457,
           [{var,3457,'V'},{var,3457,'_How'}],
           [],
           [{op,3457,'not',
             {call,3457,
              {remote,3457,{atom,3457,orddict},{atom,3457,is_key}},
              [{var,3457,'V'},{var,3457,'Old'}]}}]}]}},
       {var,3457,'New'}]}]}]},
 {function,3462,vtsubtract,2,
  [{clause,3462,
    [{var,3462,'New'},{var,3462,'Old'}],
    [],
    [{call,3463,{atom,3463,vtnew},[{var,3463,'New'},{var,3463,'Old'}]}]}]},
 {function,3468,vtold,2,
  [{clause,3468,
    [{var,3468,'New'},{var,3468,'Old'}],
    [],
    [{call,3469,
      {remote,3469,{atom,3469,orddict},{atom,3469,filter}},
      [{'fun',3469,
        {clauses,
         [{clause,3469,
           [{var,3469,'V'},{var,3469,'_How'}],
           [],
           [{call,3469,
             {remote,3469,{atom,3469,orddict},{atom,3469,is_key}},
             [{var,3469,'V'},{var,3469,'Old'}]}]}]}},
       {var,3469,'New'}]}]}]},
 {function,3471,vt_no_unsafe,1,
  [{clause,3471,
    [{var,3471,'Vt'}],
    [],
    [{lc,3471,
      {var,3471,'V'},
      [{generate,3471,
        {match,3471,
         {tuple,3471,
          [{var,3471,'_'},
           {tuple,3471,[{var,3471,'S'},{var,3471,'_U'},{var,3471,'_L'}]}]},
         {var,3471,'V'}},
        {var,3471,'Vt'}},
       {'case',3472,
        {var,3472,'S'},
        [{clause,3473,
          [{tuple,3473,[{atom,3473,unsafe},{var,3473,'_'}]}],
          [],
          [{atom,3473,false}]},
         {clause,3474,[{var,3474,'_'}],[],[{atom,3474,true}]}]}]}]}]},
 {function,3477,vt_no_unused,1,
  [{clause,3477,
    [{var,3477,'Vt'}],
    [],
    [{lc,3477,
      {var,3477,'V'},
      [{generate,3477,
        {match,3477,
         {tuple,3477,
          [{var,3477,'_'},
           {tuple,3477,[{var,3477,'_'},{var,3477,'U'},{var,3477,'_L'}]}]},
         {var,3477,'V'}},
        {var,3477,'Vt'}},
       {op,3477,'=/=',{var,3477,'U'},{atom,3477,unused}}]}]}]},
 {function,3482,copy_expr,2,
  [{clause,3482,
    [{var,3482,'Expr'},{var,3482,'Anno'}],
    [],
    [{call,3483,
      {remote,3483,{atom,3483,erl_parse},{atom,3483,map_anno}},
      [{'fun',3483,
        {clauses,[{clause,3483,[{var,3483,'_A'}],[],[{var,3483,'Anno'}]}]}},
       {var,3483,'Expr'}]}]}]},
 {function,3489,modify_line,2,
  [{clause,3489,
    [{var,3489,'T'},{var,3489,'F0'}],
    [],
    [{call,3490,
      {remote,3490,{atom,3490,erl_parse},{atom,3490,map_anno}},
      [{var,3490,'F0'},{var,3490,'T'}]}]}]},
 {function,3495,check_record_info_call,4,
  [{clause,3495,
    [{var,3495,'_Line'},
     {var,3495,'La'},
     {cons,3495,
      {tuple,3495,[{atom,3495,atom},{var,3495,'Li'},{var,3495,'Info'}]},
      {cons,3495,
       {tuple,3495,[{atom,3495,atom},{var,3495,'_Ln'},{var,3495,'Name'}]},
       {nil,3495}}},
     {var,3495,'St'}],
    [],
    [{'case',3496,
      {call,3496,
       {atom,3496,member},
       [{var,3496,'Info'},
        {cons,3496,
         {atom,3496,fields},
         {cons,3496,{atom,3496,size},{nil,3496}}}]},
      [{clause,3497,
        [{atom,3497,true}],
        [],
        [{call,3497,
          {atom,3497,exist_record},
          [{var,3497,'La'},{var,3497,'Name'},{var,3497,'St'}]}]},
       {clause,3498,
        [{atom,3498,false}],
        [],
        [{call,3498,
          {atom,3498,add_error},
          [{var,3498,'Li'},
           {atom,3498,illegal_record_info},
           {var,3498,'St'}]}]}]}]},
   {clause,3500,
    [{var,3500,'Line'},{var,3500,'_La'},{var,3500,'_As'},{var,3500,'St'}],
    [],
    [{call,3501,
      {atom,3501,add_error},
      [{var,3501,'Line'},{atom,3501,illegal_record_info},{var,3501,'St'}]}]}]},
 {function,3503,has_wildcard_field,1,
  [{clause,3503,
    [{cons,3503,
      {tuple,3503,
       [{atom,3503,record_field},
        {var,3503,'_Lf'},
        {tuple,3503,[{atom,3503,var},{var,3503,'_La'},{atom,3503,'_'}]},
        {var,3503,'_Val'}]},
      {var,3503,'_Fs'}}],
    [],
    [{atom,3503,true}]},
   {clause,3504,
    [{cons,3504,{var,3504,'_'},{var,3504,'Fs'}}],
    [],
    [{call,3504,{atom,3504,has_wildcard_field},[{var,3504,'Fs'}]}]},
   {clause,3505,[{nil,3505}],[],[{atom,3505,false}]}]},
 {function,3510,check_remote_function,5,
  [{clause,3510,
    [{var,3510,'Line'},
     {var,3510,'M'},
     {var,3510,'F'},
     {var,3510,'As'},
     {var,3510,'St0'}],
    [],
    [{match,3511,
      {var,3511,'St1'},
      {call,3511,
       {atom,3511,deprecated_function},
       [{var,3511,'Line'},
        {var,3511,'M'},
        {var,3511,'F'},
        {var,3511,'As'},
        {var,3511,'St0'}]}},
     {match,3512,
      {var,3512,'St2'},
      {call,3512,
       {atom,3512,check_qlc_hrl},
       [{var,3512,'Line'},
        {var,3512,'M'},
        {var,3512,'F'},
        {var,3512,'As'},
        {var,3512,'St1'}]}},
     {call,3513,
      {atom,3513,format_function},
      [{var,3513,'Line'},
       {var,3513,'M'},
       {var,3513,'F'},
       {var,3513,'As'},
       {var,3513,'St2'}]}]}]},
 {function,3519,check_qlc_hrl,5,
  [{clause,3519,
    [{var,3519,'Line'},
     {var,3519,'M'},
     {var,3519,'F'},
     {var,3519,'As'},
     {var,3519,'St'}],
    [],
    [{match,3520,
      {var,3520,'Arity'},
      {call,3520,{atom,3520,length},[{var,3520,'As'}]}},
     {'case',3521,
      {var,3521,'As'},
      [{clause,3522,
        [{cons,3522,
          {tuple,3522,
           [{atom,3522,lc},{var,3522,'_L'},{var,3522,'_E'},{var,3522,'_Qs'}]},
          {var,3522,'_'}}],
        [[{op,3522,'=:=',{var,3522,'M'},{atom,3522,qlc}},
          {op,3522,'=:=',{var,3522,'F'},{atom,3522,q}},
          {op,3523,'<',{var,3523,'Arity'},{integer,3523,3}},
          {op,3523,'not',
           {call,3523,
            {remote,3523,{atom,3523,erlang},{atom,3523,element}},
            [{integer,3523,24},{var,3523,'St'}]}}]],
        [{call,3524,
          {atom,3524,add_warning},
          [{var,3524,'Line'},
           {tuple,3524,[{atom,3524,missing_qlc_hrl},{var,3524,'Arity'}]},
           {var,3524,'St'}]}]},
       {clause,3525,[{var,3525,'_'}],[],[{var,3526,'St'}]}]}]}]},
 {function,3532,deprecated_function,5,
  [{clause,3532,
    [{var,3532,'Line'},
     {var,3532,'M'},
     {var,3532,'F'},
     {var,3532,'As'},
     {var,3532,'St'}],
    [],
    [{match,3533,
      {var,3533,'Arity'},
      {call,3533,{atom,3533,length},[{var,3533,'As'}]}},
     {match,3534,
      {var,3534,'MFA'},
      {tuple,3534,[{var,3534,'M'},{var,3534,'F'},{var,3534,'Arity'}]}},
     {'case',3535,
      {call,3535,
       {remote,3535,{atom,3535,otp_internal},{atom,3535,obsolete}},
       [{var,3535,'M'},{var,3535,'F'},{var,3535,'Arity'}]},
      [{clause,3536,
        [{tuple,3536,[{atom,3536,deprecated},{var,3536,'String'}]}],
        [[{call,3536,{atom,3536,is_list},[{var,3536,'String'}]}]],
        [{'case',3537,
          {op,3537,'orelse',
           {op,3537,'not',
            {call,3537,
             {atom,3537,is_warn_enabled},
             [{atom,3537,deprecated_function},{var,3537,'St'}]}},
           {call,3538,
            {remote,3538,{atom,3538,ordsets},{atom,3538,is_element}},
            [{var,3538,'MFA'},
             {call,3538,
              {remote,3538,{atom,3538,erlang},{atom,3538,element}},
              [{integer,3538,15},{var,3538,'St'}]}]}},
          [{clause,3539,[{atom,3539,true}],[],[{var,3540,'St'}]},
           {clause,3541,
            [{atom,3541,false}],
            [],
            [{call,3542,
              {atom,3542,add_warning},
              [{var,3542,'Line'},
               {tuple,3542,
                [{atom,3542,deprecated},{var,3542,'MFA'},{var,3542,'String'}]},
               {var,3542,'St'}]}]}]}]},
       {clause,3544,
        [{tuple,3544,
          [{atom,3544,deprecated},{var,3544,'Replacement'},{var,3544,'Rel'}]}],
        [],
        [{'case',3545,
          {op,3545,'orelse',
           {op,3545,'not',
            {call,3545,
             {atom,3545,is_warn_enabled},
             [{atom,3545,deprecated_function},{var,3545,'St'}]}},
           {call,3546,
            {remote,3546,{atom,3546,ordsets},{atom,3546,is_element}},
            [{var,3546,'MFA'},
             {call,3546,
              {remote,3546,{atom,3546,erlang},{atom,3546,element}},
              [{integer,3546,15},{var,3546,'St'}]}]}},
          [{clause,3547,[{atom,3547,true}],[],[{var,3548,'St'}]},
           {clause,3549,
            [{atom,3549,false}],
            [],
            [{call,3550,
              {atom,3550,add_warning},
              [{var,3550,'Line'},
               {tuple,3550,
                [{atom,3550,deprecated},
                 {var,3550,'MFA'},
                 {var,3550,'Replacement'},
                 {var,3550,'Rel'}]},
               {var,3550,'St'}]}]}]}]},
       {clause,3552,
        [{tuple,3552,[{atom,3552,removed},{var,3552,'String'}]}],
        [[{call,3552,{atom,3552,is_list},[{var,3552,'String'}]}]],
        [{call,3553,
          {atom,3553,add_warning},
          [{var,3553,'Line'},
           {tuple,3553,
            [{atom,3553,removed},{var,3553,'MFA'},{var,3553,'String'}]},
           {var,3553,'St'}]}]},
       {clause,3554,
        [{tuple,3554,
          [{atom,3554,removed},{var,3554,'Replacement'},{var,3554,'Rel'}]}],
        [],
        [{call,3555,
          {atom,3555,add_warning},
          [{var,3555,'Line'},
           {tuple,3555,
            [{atom,3555,removed},
             {var,3555,'MFA'},
             {var,3555,'Replacement'},
             {var,3555,'Rel'}]},
           {var,3555,'St'}]}]},
       {clause,3556,[{atom,3556,no}],[],[{var,3557,'St'}]}]}]}]},
 {function,3560,deprecated_type,5,
  [{clause,3560,
    [{var,3560,'L'},
     {var,3560,'M'},
     {var,3560,'N'},
     {var,3560,'As'},
     {var,3560,'St'}],
    [],
    [{match,3561,
      {var,3561,'NAs'},
      {call,3561,{atom,3561,length},[{var,3561,'As'}]}},
     {'case',3562,
      {call,3562,
       {remote,3562,{atom,3562,otp_internal},{atom,3562,obsolete_type}},
       [{var,3562,'M'},{var,3562,'N'},{var,3562,'NAs'}]},
      [{clause,3563,
        [{tuple,3563,[{atom,3563,deprecated},{var,3563,'String'}]}],
        [[{call,3563,{atom,3563,is_list},[{var,3563,'String'}]}]],
        [{'case',3564,
          {call,3564,
           {atom,3564,is_warn_enabled},
           [{atom,3564,deprecated_type},{var,3564,'St'}]},
          [{clause,3565,
            [{atom,3565,true}],
            [],
            [{call,3566,
              {atom,3566,add_warning},
              [{var,3566,'L'},
               {tuple,3566,
                [{atom,3566,deprecated_type},
                 {tuple,3566,[{var,3566,'M'},{var,3566,'N'},{var,3566,'NAs'}]},
                 {var,3566,'String'}]},
               {var,3566,'St'}]}]},
           {clause,3567,[{atom,3567,false}],[],[{var,3568,'St'}]}]}]},
       {clause,3570,[{atom,3570,no}],[],[{var,3571,'St'}]}]}]}]},
 {function,3574,obsolete_guard,2,
  [{clause,3574,
    [{tuple,3574,
      [{atom,3574,call},
       {var,3574,'Line'},
       {tuple,3574,[{atom,3574,atom},{var,3574,'Lr'},{var,3574,'F'}]},
       {var,3574,'As'}]},
     {var,3574,'St0'}],
    [],
    [{match,3575,
      {var,3575,'Arity'},
      {call,3575,{atom,3575,length},[{var,3575,'As'}]}},
     {'case',3576,
      {call,3576,
       {remote,3576,{atom,3576,erl_internal},{atom,3576,old_type_test}},
       [{var,3576,'F'},{var,3576,'Arity'}]},
      [{clause,3577,
        [{atom,3577,false}],
        [],
        [{call,3578,
          {atom,3578,deprecated_function},
          [{var,3578,'Line'},
           {atom,3578,erlang},
           {var,3578,'F'},
           {var,3578,'As'},
           {var,3578,'St0'}]}]},
       {clause,3579,
        [{atom,3579,true}],
        [],
        [{'case',3580,
          {call,3580,
           {atom,3580,is_warn_enabled},
           [{atom,3580,obsolete_guard},{var,3580,'St0'}]},
          [{clause,3581,
            [{atom,3581,true}],
            [],
            [{call,3582,
              {atom,3582,add_warning},
              [{var,3582,'Lr'},
               {tuple,3582,
                [{atom,3582,obsolete_guard},
                 {tuple,3582,[{var,3582,'F'},{var,3582,'Arity'}]}]},
               {var,3582,'St0'}]}]},
           {clause,3583,[{atom,3583,false}],[],[{var,3584,'St0'}]}]}]}]}]},
   {clause,3587,[{var,3587,'_G'},{var,3587,'St'}],[],[{var,3588,'St'}]}]},
 {function,3593,keyword_warning,3,
  [{clause,3593,
    [{var,3593,'_Line'},{var,3593,'_A'},{var,3593,'St'}],
    [],
    [{var,3593,'St'}]}]},
 {function,3598,format_function,5,
  [{clause,3598,
    [{var,3598,'Line'},
     {var,3598,'M'},
     {var,3598,'F'},
     {var,3598,'As'},
     {var,3598,'St'}],
    [],
    [{'case',3599,
      {call,3599,
       {atom,3599,is_format_function},
       [{var,3599,'M'},{var,3599,'F'}]},
      [{clause,3600,
        [{atom,3600,true}],
        [],
        [{'case',3601,
          {call,3601,
           {remote,3601,{atom,3601,erlang},{atom,3601,element}},
           [{integer,3601,17},{var,3601,'St'}]},
          [{clause,3602,
            [{var,3602,'Lev'}],
            [[{op,3602,'>',{var,3602,'Lev'},{integer,3602,0}}]],
            [{'case',3603,
              {call,3603,{atom,3603,check_format_1},[{var,3603,'As'}]},
              [{clause,3604,
                [{tuple,3604,
                  [{atom,3604,warn},
                   {var,3604,'Level'},
                   {var,3604,'Fmt'},
                   {var,3604,'Fas'}]}],
                [[{op,3604,'=<',{var,3604,'Level'},{var,3604,'Lev'}}]],
                [{call,3605,
                  {atom,3605,add_warning},
                  [{var,3605,'Line'},
                   {tuple,3605,
                    [{atom,3605,format_error},
                     {tuple,3605,[{var,3605,'Fmt'},{var,3605,'Fas'}]}]},
                   {var,3605,'St'}]}]},
               {clause,3606,[{var,3606,'_'}],[],[{var,3606,'St'}]}]}]},
           {clause,3608,[{var,3608,'_Lev'}],[],[{var,3608,'St'}]}]}]},
       {clause,3610,[{atom,3610,false}],[],[{var,3610,'St'}]}]}]}]},
 {function,3613,is_format_function,2,
  [{clause,3613,[{atom,3613,io},{atom,3613,fwrite}],[],[{atom,3613,true}]},
   {clause,3614,[{atom,3614,io},{atom,3614,format}],[],[{atom,3614,true}]},
   {clause,3615,[{atom,3615,io_lib},{atom,3615,fwrite}],[],[{atom,3615,true}]},
   {clause,3616,[{atom,3616,io_lib},{atom,3616,format}],[],[{atom,3616,true}]},
   {clause,3617,
    [{var,3617,'M'},{var,3617,'F'}],
    [[{call,3617,{atom,3617,is_atom},[{var,3617,'M'}]},
      {call,3617,{atom,3617,is_atom},[{var,3617,'F'}]}]],
    [{atom,3617,false}]}]},
 {function,3621,check_format_1,1,
  [{clause,3621,
    [{cons,3621,{var,3621,'Fmt'},{nil,3621}}],
    [],
    [{call,3622,
      {atom,3622,check_format_1},
      [{cons,3622,
        {var,3622,'Fmt'},
        {cons,3622,
         {tuple,3622,[{atom,3622,nil},{integer,3622,0}]},
         {nil,3622}}}]}]},
   {clause,3623,
    [{cons,3623,{var,3623,'Fmt'},{cons,3623,{var,3623,'As'},{nil,3623}}}],
    [],
    [{call,3624,
      {atom,3624,check_format_2},
      [{var,3624,'Fmt'},
       {call,3624,{atom,3624,canonicalize_string},[{var,3624,'As'}]}]}]},
   {clause,3625,
    [{cons,3625,
      {var,3625,'_Dev'},
      {cons,3625,{var,3625,'Fmt'},{cons,3625,{var,3625,'As'},{nil,3625}}}}],
    [],
    [{call,3626,
      {atom,3626,check_format_1},
      [{cons,3626,{var,3626,'Fmt'},{cons,3626,{var,3626,'As'},{nil,3626}}}]}]},
   {clause,3627,
    [{var,3627,'_As'}],
    [],
    [{tuple,3628,
      [{atom,3628,warn},
       {integer,3628,1},
       {string,3628,"format call with wrong number of arguments"},
       {nil,3628}]}]}]},
 {function,3630,canonicalize_string,1,
  [{clause,3630,
    [{tuple,3630,[{atom,3630,string},{var,3630,'Line'},{var,3630,'Cs'}]}],
    [],
    [{call,3631,
      {atom,3631,foldr},
      [{'fun',3631,
        {clauses,
         [{clause,3631,
           [{var,3631,'C'},{var,3631,'T'}],
           [],
           [{tuple,3631,
             [{atom,3631,cons},
              {var,3631,'Line'},
              {tuple,3631,
               [{atom,3631,integer},{var,3631,'Line'},{var,3631,'C'}]},
              {var,3631,'T'}]}]}]}},
       {tuple,3631,[{atom,3631,nil},{var,3631,'Line'}]},
       {var,3631,'Cs'}]}]},
   {clause,3632,[{var,3632,'Term'}],[],[{var,3633,'Term'}]}]},
 {function,3637,check_format_2,2,
  [{clause,3637,
    [{var,3637,'Fmt'},{var,3637,'As'}],
    [],
    [{'case',3638,
      {var,3638,'Fmt'},
      [{clause,3639,
        [{tuple,3639,[{atom,3639,string},{var,3639,'_L'},{var,3639,'S'}]}],
        [],
        [{call,3639,
          {atom,3639,check_format_2a},
          [{var,3639,'S'},{var,3639,'As'}]}]},
       {clause,3640,
        [{tuple,3640,[{atom,3640,atom},{var,3640,'_L'},{var,3640,'A'}]}],
        [],
        [{call,3640,
          {atom,3640,check_format_2a},
          [{call,3640,{atom,3640,atom_to_list},[{var,3640,'A'}]},
           {var,3640,'As'}]}]},
       {clause,3641,
        [{var,3641,'_'}],
        [],
        [{tuple,3641,
          [{atom,3641,warn},
           {integer,3641,2},
           {string,3641,"format string not a textual constant"},
           {nil,3641}]}]}]}]}]},
 {function,3644,check_format_2a,2,
  [{clause,3644,
    [{var,3644,'Fmt'},{var,3644,'As'}],
    [],
    [{'case',3645,
      {call,3645,{atom,3645,args_list},[{var,3645,'As'}]},
      [{clause,3646,
        [{atom,3646,true}],
        [],
        [{call,3646,
          {atom,3646,check_format_3},
          [{var,3646,'Fmt'},{var,3646,'As'}]}]},
       {clause,3647,
        [{atom,3647,false}],
        [],
        [{tuple,3647,
          [{atom,3647,warn},
           {integer,3647,1},
           {string,3647,"format arguments not a list"},
           {nil,3647}]}]},
       {clause,3648,
        [{atom,3648,maybe}],
        [],
        [{tuple,3648,
          [{atom,3648,warn},
           {integer,3648,2},
           {string,3648,"format arguments perhaps not a list"},
           {nil,3648}]}]}]}]}]},
 {function,3653,check_format_3,2,
  [{clause,3653,
    [{var,3653,'Fmt'},{var,3653,'As'}],
    [],
    [{'case',3654,
      {call,3654,{atom,3654,check_format_string},[{var,3654,'Fmt'}]},
      [{clause,3655,
        [{tuple,3655,[{atom,3655,ok},{var,3655,'Need'}]}],
        [],
        [{'case',3656,
          {call,3656,{atom,3656,args_length},[{var,3656,'As'}]},
          [{clause,3657,
            [{var,3657,'Len'}],
            [[{op,3657,'=:=',
               {call,3657,{atom,3657,length},[{var,3657,'Need'}]},
               {var,3657,'Len'}}]],
            [{atom,3657,ok}]},
           {clause,3658,
            [{var,3658,'_Len'}],
            [],
            [{tuple,3658,
              [{atom,3658,warn},
               {integer,3658,1},
               {string,3658,"wrong number of arguments in format call"},
               {nil,3658}]}]}]}]},
       {clause,3660,
        [{tuple,3660,[{atom,3660,error},{var,3660,'S'}]}],
        [],
        [{tuple,3661,
          [{atom,3661,warn},
           {integer,3661,1},
           {string,3661,"format string invalid (~ts)"},
           {cons,3661,{var,3661,'S'},{nil,3661}}]}]}]}]}]},
 {function,3664,args_list,1,
  [{clause,3664,
    [{tuple,3664,
      [{atom,3664,cons},{var,3664,'_L'},{var,3664,'_H'},{var,3664,'T'}]}],
    [],
    [{call,3664,{atom,3664,args_list},[{var,3664,'T'}]}]},
   {clause,3667,
    [{tuple,3667,[{atom,3667,string},{var,3667,'_L'},{var,3667,'_Cs'}]}],
    [],
    [{atom,3667,maybe}]},
   {clause,3668,
    [{tuple,3668,[{atom,3668,nil},{var,3668,'_L'}]}],
    [],
    [{atom,3668,true}]},
   {clause,3669,
    [{tuple,3669,[{atom,3669,atom},{var,3669,'_'},{var,3669,'_'}]}],
    [],
    [{atom,3669,false}]},
   {clause,3670,
    [{tuple,3670,[{atom,3670,integer},{var,3670,'_'},{var,3670,'_'}]}],
    [],
    [{atom,3670,false}]},
   {clause,3671,
    [{tuple,3671,[{atom,3671,float},{var,3671,'_'},{var,3671,'_'}]}],
    [],
    [{atom,3671,false}]},
   {clause,3672,[{var,3672,'_Other'}],[],[{atom,3672,maybe}]}]},
 {function,3674,args_length,1,
  [{clause,3674,
    [{tuple,3674,
      [{atom,3674,cons},{var,3674,'_L'},{var,3674,'_H'},{var,3674,'T'}]}],
    [],
    [{op,3674,'+',
      {integer,3674,1},
      {call,3674,{atom,3674,args_length},[{var,3674,'T'}]}}]},
   {clause,3675,
    [{tuple,3675,[{atom,3675,nil},{var,3675,'_L'}]}],
    [],
    [{integer,3675,0}]}]},
 {function,3677,check_format_string,1,
  [{clause,3677,
    [{var,3677,'Fmt'}],
    [],
    [{call,3678,
      {atom,3678,extract_sequences},
      [{var,3678,'Fmt'},{nil,3678}]}]}]},
 {function,3680,extract_sequences,2,
  [{clause,3680,
    [{var,3680,'Fmt'},{var,3680,'Need0'}],
    [],
    [{'case',3681,
      {call,3681,
       {remote,3681,{atom,3681,string},{atom,3681,chr}},
       [{var,3681,'Fmt'},{char,3681,126}]},
      [{clause,3682,
        [{integer,3682,0}],
        [],
        [{tuple,3682,
          [{atom,3682,ok},
           {call,3682,
            {remote,3682,{atom,3682,lists},{atom,3682,reverse}},
            [{var,3682,'Need0'}]}]}]},
       {clause,3683,
        [{var,3683,'Pos'}],
        [],
        [{match,3684,
          {var,3684,'Fmt1'},
          {call,3684,
           {remote,3684,{atom,3684,string},{atom,3684,substr}},
           [{var,3684,'Fmt'},
            {op,3684,'+',{var,3684,'Pos'},{integer,3684,1}}]}},
         {'case',3685,
          {call,3685,
           {atom,3685,extract_sequence},
           [{integer,3685,1},{var,3685,'Fmt1'},{var,3685,'Need0'}]},
          [{clause,3686,
            [{tuple,3686,
              [{atom,3686,ok},{var,3686,'Need1'},{var,3686,'Rest'}]}],
            [],
            [{call,3686,
              {atom,3686,extract_sequences},
              [{var,3686,'Rest'},{var,3686,'Need1'}]}]},
           {clause,3687,
            [{var,3687,'Error'}],
            [],
            [{var,3687,'Error'}]}]}]}]}]}]},
 {function,3691,extract_sequence,3,
  [{clause,3691,
    [{integer,3691,1},
     {cons,3691,{char,3691,45},{cons,3691,{var,3691,'C'},{var,3691,'Fmt'}}},
     {var,3691,'Need'}],
    [[{op,3691,'>=',{var,3691,'C'},{char,3691,48}},
      {op,3691,'=<',{var,3691,'C'},{char,3691,57}}]],
    [{call,3692,
      {atom,3692,extract_sequence_digits},
      [{integer,3692,1},{var,3692,'Fmt'},{var,3692,'Need'}]}]},
   {clause,3693,
    [{integer,3693,1},
     {cons,3693,{var,3693,'C'},{var,3693,'Fmt'}},
     {var,3693,'Need'}],
    [[{op,3693,'>=',{var,3693,'C'},{char,3693,48}},
      {op,3693,'=<',{var,3693,'C'},{char,3693,57}}]],
    [{call,3694,
      {atom,3694,extract_sequence_digits},
      [{integer,3694,1},{var,3694,'Fmt'},{var,3694,'Need'}]}]},
   {clause,3695,
    [{integer,3695,1},
     {cons,3695,{char,3695,45},{cons,3695,{char,3695,42},{var,3695,'Fmt'}}},
     {var,3695,'Need'}],
    [],
    [{call,3696,
      {atom,3696,extract_sequence},
      [{integer,3696,2},
       {var,3696,'Fmt'},
       {cons,3696,{atom,3696,int},{var,3696,'Need'}}]}]},
   {clause,3697,
    [{integer,3697,1},
     {cons,3697,{char,3697,42},{var,3697,'Fmt'}},
     {var,3697,'Need'}],
    [],
    [{call,3698,
      {atom,3698,extract_sequence},
      [{integer,3698,2},
       {var,3698,'Fmt'},
       {cons,3698,{atom,3698,int},{var,3698,'Need'}}]}]},
   {clause,3699,
    [{integer,3699,1},{var,3699,'Fmt'},{var,3699,'Need'}],
    [],
    [{call,3700,
      {atom,3700,extract_sequence},
      [{integer,3700,2},{var,3700,'Fmt'},{var,3700,'Need'}]}]},
   {clause,3701,
    [{integer,3701,2},
     {cons,3701,{char,3701,46},{cons,3701,{var,3701,'C'},{var,3701,'Fmt'}}},
     {var,3701,'Need'}],
    [[{op,3701,'>=',{var,3701,'C'},{char,3701,48}},
      {op,3701,'=<',{var,3701,'C'},{char,3701,57}}]],
    [{call,3702,
      {atom,3702,extract_sequence_digits},
      [{integer,3702,2},{var,3702,'Fmt'},{var,3702,'Need'}]}]},
   {clause,3703,
    [{integer,3703,2},
     {cons,3703,{char,3703,46},{cons,3703,{char,3703,42},{var,3703,'Fmt'}}},
     {var,3703,'Need'}],
    [],
    [{call,3704,
      {atom,3704,extract_sequence},
      [{integer,3704,3},
       {var,3704,'Fmt'},
       {cons,3704,{atom,3704,int},{var,3704,'Need'}}]}]},
   {clause,3705,
    [{integer,3705,2},
     {cons,3705,{char,3705,46},{var,3705,'Fmt'}},
     {var,3705,'Need'}],
    [],
    [{call,3706,
      {atom,3706,extract_sequence},
      [{integer,3706,3},{var,3706,'Fmt'},{var,3706,'Need'}]}]},
   {clause,3707,
    [{integer,3707,2},{var,3707,'Fmt'},{var,3707,'Need'}],
    [],
    [{call,3708,
      {atom,3708,extract_sequence},
      [{integer,3708,4},{var,3708,'Fmt'},{var,3708,'Need'}]}]},
   {clause,3709,
    [{integer,3709,3},
     {cons,3709,{char,3709,46},{cons,3709,{char,3709,42},{var,3709,'Fmt'}}},
     {var,3709,'Need'}],
    [],
    [{call,3710,
      {atom,3710,extract_sequence},
      [{integer,3710,4},
       {var,3710,'Fmt'},
       {cons,3710,{atom,3710,int},{var,3710,'Need'}}]}]},
   {clause,3711,
    [{integer,3711,3},
     {cons,3711,{char,3711,46},{cons,3711,{var,3711,'_'},{var,3711,'Fmt'}}},
     {var,3711,'Need'}],
    [],
    [{call,3712,
      {atom,3712,extract_sequence},
      [{integer,3712,4},{var,3712,'Fmt'},{var,3712,'Need'}]}]},
   {clause,3713,
    [{integer,3713,3},{var,3713,'Fmt'},{var,3713,'Need'}],
    [],
    [{call,3714,
      {atom,3714,extract_sequence},
      [{integer,3714,4},{var,3714,'Fmt'},{var,3714,'Need'}]}]},
   {clause,3715,
    [{integer,3715,4},
     {cons,3715,{char,3715,116},{cons,3715,{char,3715,99},{var,3715,'Fmt'}}},
     {var,3715,'Need'}],
    [],
    [{call,3716,
      {atom,3716,extract_sequence},
      [{integer,3716,5},
       {cons,3716,{char,3716,99},{var,3716,'Fmt'}},
       {var,3716,'Need'}]}]},
   {clause,3717,
    [{integer,3717,4},
     {cons,3717,{char,3717,116},{cons,3717,{char,3717,115},{var,3717,'Fmt'}}},
     {var,3717,'Need'}],
    [],
    [{call,3718,
      {atom,3718,extract_sequence},
      [{integer,3718,5},
       {cons,3718,{char,3718,115},{var,3718,'Fmt'}},
       {var,3718,'Need'}]}]},
   {clause,3719,
    [{integer,3719,4},
     {cons,3719,{char,3719,116},{cons,3719,{char,3719,112},{var,3719,'Fmt'}}},
     {var,3719,'Need'}],
    [],
    [{call,3720,
      {atom,3720,extract_sequence},
      [{integer,3720,5},
       {cons,3720,{char,3720,112},{var,3720,'Fmt'}},
       {var,3720,'Need'}]}]},
   {clause,3721,
    [{integer,3721,4},
     {cons,3721,{char,3721,116},{cons,3721,{char,3721,80},{var,3721,'Fmt'}}},
     {var,3721,'Need'}],
    [],
    [{call,3722,
      {atom,3722,extract_sequence},
      [{integer,3722,5},
       {cons,3722,{char,3722,80},{var,3722,'Fmt'}},
       {var,3722,'Need'}]}]},
   {clause,3723,
    [{integer,3723,4},
     {cons,3723,{char,3723,116},{cons,3723,{var,3723,'C'},{var,3723,'_Fmt'}}},
     {var,3723,'_Need'}],
    [],
    [{tuple,3724,
      [{atom,3724,error},
       {op,3724,'++',
        {string,3724,"invalid control ~t"},
        {cons,3724,{var,3724,'C'},{nil,3724}}}]}]},
   {clause,3725,
    [{integer,3725,4},
     {cons,3725,{char,3725,108},{cons,3725,{char,3725,112},{var,3725,'Fmt'}}},
     {var,3725,'Need'}],
    [],
    [{call,3726,
      {atom,3726,extract_sequence},
      [{integer,3726,5},
       {cons,3726,{char,3726,112},{var,3726,'Fmt'}},
       {var,3726,'Need'}]}]},
   {clause,3727,
    [{integer,3727,4},
     {cons,3727,{char,3727,108},{cons,3727,{char,3727,80},{var,3727,'Fmt'}}},
     {var,3727,'Need'}],
    [],
    [{call,3728,
      {atom,3728,extract_sequence},
      [{integer,3728,5},
       {cons,3728,{char,3728,80},{var,3728,'Fmt'}},
       {var,3728,'Need'}]}]},
   {clause,3729,
    [{integer,3729,4},
     {cons,3729,{char,3729,108},{cons,3729,{var,3729,'C'},{var,3729,'_Fmt'}}},
     {var,3729,'_Need'}],
    [],
    [{tuple,3730,
      [{atom,3730,error},
       {op,3730,'++',
        {string,3730,"invalid control ~l"},
        {cons,3730,{var,3730,'C'},{nil,3730}}}]}]},
   {clause,3731,
    [{integer,3731,4},{var,3731,'Fmt'},{var,3731,'Need'}],
    [],
    [{call,3732,
      {atom,3732,extract_sequence},
      [{integer,3732,5},{var,3732,'Fmt'},{var,3732,'Need'}]}]},
   {clause,3733,
    [{integer,3733,5},
     {cons,3733,{var,3733,'C'},{var,3733,'Fmt'}},
     {var,3733,'Need0'}],
    [],
    [{'case',3734,
      {call,3734,{atom,3734,control_type},[{var,3734,'C'},{var,3734,'Need0'}]},
      [{clause,3735,
        [{atom,3735,error}],
        [],
        [{tuple,3735,
          [{atom,3735,error},
           {op,3735,'++',
            {string,3735,"invalid control ~"},
            {cons,3735,{var,3735,'C'},{nil,3735}}}]}]},
       {clause,3736,
        [{var,3736,'Need1'}],
        [],
        [{tuple,3736,
          [{atom,3736,ok},{var,3736,'Need1'},{var,3736,'Fmt'}]}]}]}]},
   {clause,3738,
    [{var,3738,'_'},{nil,3738},{var,3738,'_Need'}],
    [],
    [{tuple,3738,[{atom,3738,error},{string,3738,"truncated"}]}]}]},
 {function,3740,extract_sequence_digits,3,
  [{clause,3740,
    [{var,3740,'Fld'},
     {cons,3740,{var,3740,'C'},{var,3740,'Fmt'}},
     {var,3740,'Need'}],
    [[{op,3740,'>=',{var,3740,'C'},{char,3740,48}},
      {op,3740,'=<',{var,3740,'C'},{char,3740,57}}]],
    [{call,3741,
      {atom,3741,extract_sequence_digits},
      [{var,3741,'Fld'},{var,3741,'Fmt'},{var,3741,'Need'}]}]},
   {clause,3742,
    [{var,3742,'Fld'},{var,3742,'Fmt'},{var,3742,'Need'}],
    [],
    [{call,3743,
      {atom,3743,extract_sequence},
      [{op,3743,'+',{var,3743,'Fld'},{integer,3743,1}},
       {var,3743,'Fmt'},
       {var,3743,'Need'}]}]}]},
 {function,3745,control_type,2,
  [{clause,3745,[{char,3745,126},{var,3745,'Need'}],[],[{var,3745,'Need'}]},
   {clause,3746,
    [{char,3746,99},{var,3746,'Need'}],
    [],
    [{cons,3746,{atom,3746,int},{var,3746,'Need'}}]},
   {clause,3747,
    [{char,3747,102},{var,3747,'Need'}],
    [],
    [{cons,3747,{atom,3747,float},{var,3747,'Need'}}]},
   {clause,3748,
    [{char,3748,101},{var,3748,'Need'}],
    [],
    [{cons,3748,{atom,3748,float},{var,3748,'Need'}}]},
   {clause,3749,
    [{char,3749,103},{var,3749,'Need'}],
    [],
    [{cons,3749,{atom,3749,float},{var,3749,'Need'}}]},
   {clause,3750,
    [{char,3750,115},{var,3750,'Need'}],
    [],
    [{cons,3750,{atom,3750,string},{var,3750,'Need'}}]},
   {clause,3751,
    [{char,3751,119},{var,3751,'Need'}],
    [],
    [{cons,3751,{atom,3751,term},{var,3751,'Need'}}]},
   {clause,3752,
    [{char,3752,112},{var,3752,'Need'}],
    [],
    [{cons,3752,{atom,3752,term},{var,3752,'Need'}}]},
   {clause,3753,
    [{char,3753,87},{var,3753,'Need'}],
    [],
    [{cons,3753,
      {atom,3753,int},
      {cons,3753,{atom,3753,term},{var,3753,'Need'}}}]},
   {clause,3754,
    [{char,3754,80},{var,3754,'Need'}],
    [],
    [{cons,3754,
      {atom,3754,int},
      {cons,3754,{atom,3754,term},{var,3754,'Need'}}}]},
   {clause,3755,
    [{char,3755,98},{var,3755,'Need'}],
    [],
    [{cons,3755,{atom,3755,term},{var,3755,'Need'}}]},
   {clause,3756,
    [{char,3756,66},{var,3756,'Need'}],
    [],
    [{cons,3756,{atom,3756,term},{var,3756,'Need'}}]},
   {clause,3757,
    [{char,3757,120},{var,3757,'Need'}],
    [],
    [{cons,3757,
      {atom,3757,string},
      {cons,3757,{atom,3757,term},{var,3757,'Need'}}}]},
   {clause,3758,
    [{char,3758,88},{var,3758,'Need'}],
    [],
    [{cons,3758,
      {atom,3758,string},
      {cons,3758,{atom,3758,term},{var,3758,'Need'}}}]},
   {clause,3759,
    [{char,3759,43},{var,3759,'Need'}],
    [],
    [{cons,3759,{atom,3759,term},{var,3759,'Need'}}]},
   {clause,3760,
    [{char,3760,35},{var,3760,'Need'}],
    [],
    [{cons,3760,{atom,3760,term},{var,3760,'Need'}}]},
   {clause,3761,[{char,3761,110},{var,3761,'Need'}],[],[{var,3761,'Need'}]},
   {clause,3762,
    [{char,3762,105},{var,3762,'Need'}],
    [],
    [{cons,3762,{atom,3762,term},{var,3762,'Need'}}]},
   {clause,3763,[{var,3763,'_C'},{var,3763,'_Need'}],[],[{atom,3763,error}]}]},
 {function,3767,local_functions,1,
  [{clause,3767,
    [{var,3767,'Forms'}],
    [],
    [{call,3768,
      {remote,3768,{atom,3768,gb_sets},{atom,3768,from_list}},
      [{lc,3768,
        {tuple,3768,[{var,3768,'Func'},{var,3768,'Arity'}]},
        [{generate,3768,
          {tuple,3768,
           [{atom,3768,function},
            {var,3768,'_'},
            {var,3768,'Func'},
            {var,3768,'Arity'},
            {var,3768,'_'}]},
          {var,3768,'Forms'}}]}]}]}]},
 {function,3770,is_local_function,2,
  [{clause,3770,
    [{var,3770,'LocalSet'},
     {tuple,3770,[{var,3770,'Func'},{var,3770,'Arity'}]}],
    [],
    [{call,3771,
      {remote,3771,{atom,3771,gb_sets},{atom,3771,is_element}},
      [{tuple,3771,[{var,3771,'Func'},{var,3771,'Arity'}]},
       {var,3771,'LocalSet'}]}]}]},
 {function,3773,is_imported_function,2,
  [{clause,3773,
    [{var,3773,'ImportSet'},
     {tuple,3773,[{var,3773,'Func'},{var,3773,'Arity'}]}],
    [],
    [{'case',3774,
      {call,3774,
       {remote,3774,{atom,3774,orddict},{atom,3774,find}},
       [{tuple,3774,[{var,3774,'Func'},{var,3774,'Arity'}]},
        {var,3774,'ImportSet'}]},
      [{clause,3775,
        [{tuple,3775,[{atom,3775,ok},{var,3775,'_Mod'}]}],
        [],
        [{atom,3775,true}]},
       {clause,3776,[{atom,3776,error}],[],[{atom,3776,false}]}]}]}]},
 {function,3779,is_imported_from_erlang,2,
  [{clause,3779,
    [{var,3779,'ImportSet'},
     {tuple,3779,[{var,3779,'Func'},{var,3779,'Arity'}]}],
    [],
    [{'case',3780,
      {call,3780,
       {remote,3780,{atom,3780,orddict},{atom,3780,find}},
       [{tuple,3780,[{var,3780,'Func'},{var,3780,'Arity'}]},
        {var,3780,'ImportSet'}]},
      [{clause,3781,
        [{tuple,3781,[{atom,3781,ok},{atom,3781,erlang}]}],
        [],
        [{atom,3781,true}]},
       {clause,3782,[{var,3782,'_'}],[],[{atom,3782,false}]}]}]}]},
 {function,3785,auto_import_suppressed,1,
  [{clause,3785,
    [{var,3785,'CompileFlags'}],
    [],
    [{'case',3786,
      {call,3786,
       {remote,3786,{atom,3786,lists},{atom,3786,member}},
       [{atom,3786,no_auto_import},{var,3786,'CompileFlags'}]},
      [{clause,3787,[{atom,3787,true}],[],[{atom,3788,all}]},
       {clause,3789,
        [{atom,3789,false}],
        [],
        [{match,3790,
          {var,3790,'L0'},
          {lc,3790,
           {var,3790,'X'},
           [{generate,3790,
             {tuple,3790,[{atom,3790,no_auto_import},{var,3790,'X'}]},
             {var,3790,'CompileFlags'}}]}},
         {match,3791,
          {var,3791,'L1'},
          {lc,3791,
           {tuple,3791,[{var,3791,'Y'},{var,3791,'Z'}]},
           [{generate,3791,
             {tuple,3791,[{var,3791,'Y'},{var,3791,'Z'}]},
             {call,3791,
              {remote,3791,{atom,3791,lists},{atom,3791,flatten}},
              [{var,3791,'L0'}]}},
            {call,3791,{atom,3791,is_atom},[{var,3791,'Y'}]},
            {call,3791,{atom,3791,is_integer},[{var,3791,'Z'}]}]}},
         {call,3792,
          {remote,3792,{atom,3792,gb_sets},{atom,3792,from_list}},
          [{var,3792,'L1'}]}]}]}]}]},
 {function,3795,is_autoimport_suppressed,2,
  [{clause,3795,
    [{atom,3795,all},{tuple,3795,[{var,3795,'_Func'},{var,3795,'_Arity'}]}],
    [],
    [{atom,3796,true}]},
   {clause,3797,
    [{var,3797,'NoAutoSet'},
     {tuple,3797,[{var,3797,'Func'},{var,3797,'Arity'}]}],
    [],
    [{call,3798,
      {remote,3798,{atom,3798,gb_sets},{atom,3798,is_element}},
      [{tuple,3798,[{var,3798,'Func'},{var,3798,'Arity'}]},
       {var,3798,'NoAutoSet'}]}]}]},
 {function,3800,bif_clash_specifically_disabled,2,
  [{clause,3800,
    [{var,3800,'St'},{tuple,3800,[{var,3800,'F'},{var,3800,'A'}]}],
    [],
    [{call,3801,
      {remote,3801,{atom,3801,lists},{atom,3801,member}},
      [{tuple,3801,[{var,3801,'F'},{var,3801,'A'}]},
       {call,3801,
        {remote,3801,{atom,3801,erlang},{atom,3801,element}},
        [{integer,3801,19},{var,3801,'St'}]}]}]}]},
 {function,3809,no_guard_bif_clash,2,
  [{clause,3809,
    [{var,3809,'St'},{tuple,3809,[{var,3809,'F'},{var,3809,'A'}]}],
    [],
    [{op,3812,'andalso',
      {op,3811,'not',
       {call,3811,
        {atom,3811,is_local_function},
        [{call,3811,
          {remote,3811,{atom,3811,erlang},{atom,3811,element}},
          [{integer,3811,9},{var,3811,'St'}]},
         {tuple,3811,[{var,3811,'F'},{var,3811,'A'}]}]}},
      {op,3817,'andalso',
       {op,3814,'orelse',
        {op,3814,'not',
         {call,3814,
          {atom,3814,is_imported_function},
          [{call,3814,
            {remote,3814,{atom,3814,erlang},{atom,3814,element}},
            [{integer,3814,6},{var,3814,'St'}]},
           {tuple,3814,[{var,3814,'F'},{var,3814,'A'}]}]}},
        {call,3815,
         {atom,3815,is_imported_from_erlang},
         [{call,3815,
           {remote,3815,{atom,3815,erlang},{atom,3815,element}},
           [{integer,3815,6},{var,3815,'St'}]},
          {tuple,3815,[{var,3815,'F'},{var,3815,'A'}]}]}},
       {op,3819,'orelse',
        {op,3819,'not',
         {call,3819,
          {atom,3819,is_autoimport_suppressed},
          [{call,3819,
            {remote,3819,{atom,3819,erlang},{atom,3819,element}},
            [{integer,3819,10},{var,3819,'St'}]},
           {tuple,3819,[{var,3819,'F'},{var,3819,'A'}]}]}},
        {call,3820,
         {atom,3820,is_imported_from_erlang},
         [{call,3820,
           {remote,3820,{atom,3820,erlang},{atom,3820,element}},
           [{integer,3820,6},{var,3820,'St'}]},
          {tuple,3820,[{var,3820,'F'},{var,3820,'A'}]}]}}}}]}]}]
