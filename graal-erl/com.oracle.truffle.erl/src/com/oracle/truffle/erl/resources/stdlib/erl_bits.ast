erl_bits
[]
[]
[{function,34,system_bitdefault,0,
     [{clause,34,[],[],[{atom,34,no_system_bitdefault}]}]},
 {function,38,system_bittypes,0,
     [{clause,38,[],[],[{atom,38,no_system_types}]}]},
 {function,43,as_list,1,
     [{clause,43,
          [{var,43,'Bt'}],
          [],
          [{cons,44,
               {call,44,
                   {remote,44,{atom,44,erlang},{atom,44,element}},
                   [{integer,44,2},{var,44,'Bt'}]},
               {cons,44,
                   {tuple,44,
                       [{atom,44,unit},
                        {call,44,
                            {remote,44,{atom,44,erlang},{atom,44,element}},
                            [{integer,44,3},{var,44,'Bt'}]}]},
                   {cons,44,
                       {call,44,
                           {remote,44,{atom,44,erlang},{atom,44,element}},
                           [{integer,44,4},{var,44,'Bt'}]},
                       {cons,44,
                           {call,44,
                               {remote,44,{atom,44,erlang},{atom,44,element}},
                               [{integer,44,5},{var,44,'Bt'}]},
                           {nil,44}}}}}]}]},
 {function,58,set_bit_type,2,
     [{clause,58,
          [{var,58,'Size'},{atom,58,default}],
          [],
          [{call,59,{atom,59,set_bit_type},[{var,59,'Size'},{nil,59}]}]},
      {clause,60,
          [{var,60,'Size'},{var,60,'TypeList'}],
          [],
          [{'try',61,
               [{match,62,
                    {tuple,62,
                        [{atom,62,bittype},
                         {var,62,'Type'},
                         {var,62,'Unit'},
                         {var,62,'Sign'},
                         {var,62,'Endian'}]},
                    {call,63,{atom,63,set_bit},[{var,63,'TypeList'}]}},
                {call,64,
                    {atom,64,apply_defaults},
                    [{var,64,'Type'},
                     {var,64,'Size'},
                     {var,64,'Unit'},
                     {var,64,'Sign'},
                     {var,64,'Endian'}]}],
               [],
               [{clause,66,
                    [{tuple,66,
                         [{atom,66,throw},{var,66,'Error'},{var,66,'_'}]}],
                    [],
                    [{var,66,'Error'}]}],
               []}]}]},
 {function,69,set_bit,1,
     [{clause,69,
          [{nil,69}],
          [],
          [{tuple,69,
               [{atom,69,bittype},
                {atom,69,undefined},
                {atom,69,undefined},
                {atom,69,undefined},
                {atom,69,undefined}]}]},
      {clause,70,
          [{cons,70,{var,70,'H'},{var,70,'T'}}],
          [],
          [{call,70,
               {atom,70,set_bit_1},
               [{var,70,'T'},
                {call,70,{atom,70,type_to_record},[{var,70,'H'}]}]}]}]},
 {function,72,set_bit_1,2,
     [{clause,72,
          [{cons,72,{var,72,'T0'},{var,72,'Ts'}},{var,72,'Bt0'}],
          [],
          [{match,73,
               {var,73,'Type'},
               {call,73,{atom,73,type_to_record},[{var,73,'T0'}]}},
           {match,74,
               {var,74,'Bt'},
               {call,74,
                   {atom,74,merge_bittype},
                   [{var,74,'Type'},{var,74,'Bt0'}]}},
           {call,75,{atom,75,set_bit_1},[{var,75,'Ts'},{var,75,'Bt'}]}]},
      {clause,76,[{nil,76},{var,76,'Bt'}],[],[{var,76,'Bt'}]}]},
 {function,78,type_to_record,1,
     [{clause,78,
          [{atom,78,integer}],
          [],
          [{tuple,78,
               [{atom,78,bittype},
                {atom,78,integer},
                {atom,78,undefined},
                {atom,78,undefined},
                {atom,78,undefined}]}]},
      {clause,79,
          [{atom,79,utf8}],
          [],
          [{tuple,79,
               [{atom,79,bittype},
                {atom,79,utf8},
                {atom,79,undefined},
                {atom,79,undefined},
                {atom,79,undefined}]}]},
      {clause,80,
          [{atom,80,utf16}],
          [],
          [{tuple,80,
               [{atom,80,bittype},
                {atom,80,utf16},
                {atom,80,undefined},
                {atom,80,undefined},
                {atom,80,undefined}]}]},
      {clause,81,
          [{atom,81,utf32}],
          [],
          [{tuple,81,
               [{atom,81,bittype},
                {atom,81,utf32},
                {atom,81,undefined},
                {atom,81,undefined},
                {atom,81,undefined}]}]},
      {clause,82,
          [{atom,82,float}],
          [],
          [{tuple,82,
               [{atom,82,bittype},
                {atom,82,float},
                {atom,82,undefined},
                {atom,82,undefined},
                {atom,82,undefined}]}]},
      {clause,83,
          [{atom,83,binary}],
          [],
          [{tuple,83,
               [{atom,83,bittype},
                {atom,83,binary},
                {atom,83,undefined},
                {atom,83,undefined},
                {atom,83,undefined}]}]},
      {clause,84,
          [{atom,84,bytes}],
          [],
          [{tuple,84,
               [{atom,84,bittype},
                {atom,84,binary},
                {integer,84,8},
                {atom,84,undefined},
                {atom,84,undefined}]}]},
      {clause,85,
          [{atom,85,bitstring}],
          [],
          [{tuple,85,
               [{atom,85,bittype},
                {atom,85,binary},
                {integer,85,1},
                {atom,85,undefined},
                {atom,85,undefined}]}]},
      {clause,86,
          [{atom,86,bits}],
          [],
          [{tuple,86,
               [{atom,86,bittype},
                {atom,86,binary},
                {integer,86,1},
                {atom,86,undefined},
                {atom,86,undefined}]}]},
      {clause,88,
          [{tuple,88,[{atom,88,unit},{atom,88,undefined}]}],
          [],
          [{tuple,89,
               [{atom,89,bittype},
                {atom,89,undefined},
                {atom,89,undefined},
                {atom,89,undefined},
                {atom,89,undefined}]}]},
      {clause,90,
          [{tuple,90,[{atom,90,unit},{var,90,'Sz'}]}],
          [[{call,90,{atom,90,is_integer},[{var,90,'Sz'}]},
            {op,90,'>',{var,90,'Sz'},{integer,90,0}},
            {op,90,'=<',{var,90,'Sz'},{integer,90,256}}]],
          [{tuple,91,
               [{atom,91,bittype},
                {atom,91,undefined},
                {var,91,'Sz'},
                {atom,91,undefined},
                {atom,91,undefined}]}]},
      {clause,93,
          [{atom,93,big}],
          [],
          [{tuple,93,
               [{atom,93,bittype},
                {atom,93,undefined},
                {atom,93,undefined},
                {atom,93,undefined},
                {atom,93,big}]}]},
      {clause,94,
          [{atom,94,little}],
          [],
          [{tuple,94,
               [{atom,94,bittype},
                {atom,94,undefined},
                {atom,94,undefined},
                {atom,94,undefined},
                {atom,94,little}]}]},
      {clause,95,
          [{atom,95,native}],
          [],
          [{tuple,95,
               [{atom,95,bittype},
                {atom,95,undefined},
                {atom,95,undefined},
                {atom,95,undefined},
                {atom,95,native}]}]},
      {clause,97,
          [{atom,97,signed}],
          [],
          [{tuple,97,
               [{atom,97,bittype},
                {atom,97,undefined},
                {atom,97,undefined},
                {atom,97,signed},
                {atom,97,undefined}]}]},
      {clause,98,
          [{atom,98,unsigned}],
          [],
          [{tuple,98,
               [{atom,98,bittype},
                {atom,98,undefined},
                {atom,98,undefined},
                {atom,98,unsigned},
                {atom,98,undefined}]}]},
      {clause,100,
          [{var,100,'Name'}],
          [],
          [{call,100,
               {atom,100,throw},
               [{tuple,100,
                    [{atom,100,error},
                     {tuple,100,
                         [{atom,100,undefined_bittype},
                          {var,100,'Name'}]}]}]}]}]},
 {function,105,merge_bittype,2,
     [{clause,105,
          [{var,105,'B1'},{var,105,'B2'}],
          [],
          [{match,106,
               {var,106,'Endian'},
               {call,106,
                   {atom,106,merge_field},
                   [{call,106,
                        {remote,106,{atom,106,erlang},{atom,106,element}},
                        [{integer,106,5},{var,106,'B1'}]},
                    {call,106,
                        {remote,106,{atom,106,erlang},{atom,106,element}},
                        [{integer,106,5},{var,106,'B2'}]},
                    {atom,106,endianness}]}},
           {match,107,
               {var,107,'Sign'},
               {call,107,
                   {atom,107,merge_field},
                   [{call,107,
                        {remote,107,{atom,107,erlang},{atom,107,element}},
                        [{integer,107,4},{var,107,'B1'}]},
                    {call,107,
                        {remote,107,{atom,107,erlang},{atom,107,element}},
                        [{integer,107,4},{var,107,'B2'}]},
                    {atom,107,sign}]}},
           {match,108,
               {var,108,'Type'},
               {call,108,
                   {atom,108,merge_field},
                   [{call,108,
                        {remote,108,{atom,108,erlang},{atom,108,element}},
                        [{integer,108,2},{var,108,'B1'}]},
                    {call,108,
                        {remote,108,{atom,108,erlang},{atom,108,element}},
                        [{integer,108,2},{var,108,'B2'}]},
                    {atom,108,type}]}},
           {match,109,
               {var,109,'Unit'},
               {call,109,
                   {atom,109,merge_field},
                   [{call,109,
                        {remote,109,{atom,109,erlang},{atom,109,element}},
                        [{integer,109,3},{var,109,'B1'}]},
                    {call,109,
                        {remote,109,{atom,109,erlang},{atom,109,element}},
                        [{integer,109,3},{var,109,'B2'}]},
                    {atom,109,unit}]}},
           {tuple,110,
               [{atom,110,bittype},
                {var,110,'Type'},
                {var,110,'Unit'},
                {var,110,'Sign'},
                {var,110,'Endian'}]}]}]},
 {function,112,merge_field,3,
     [{clause,112,
          [{atom,112,undefined},{var,112,'B'},{var,112,'_'}],
          [],
          [{var,112,'B'}]},
      {clause,113,
          [{var,113,'A'},{atom,113,undefined},{var,113,'_'}],
          [],
          [{var,113,'A'}]},
      {clause,114,
          [{var,114,'A'},{var,114,'A'},{var,114,'_'}],
          [],
          [{var,114,'A'}]},
      {clause,115,
          [{var,115,'X'},{var,115,'Y'},{var,115,'What'}],
          [],
          [{call,116,
               {atom,116,throw},
               [{tuple,116,
                    [{atom,116,error},
                     {tuple,116,
                         [{atom,116,bittype_mismatch},
                          {var,116,'X'},
                          {var,116,'Y'},
                          {call,116,
                              {atom,116,atom_to_list},
                              [{var,116,'What'}]}]}]}]}]}]},
 {function,129,apply_defaults,5,
     [{clause,129,
          [{atom,129,undefined},
           {var,129,'Size'},
           {var,129,'Unit'},
           {var,129,'Sign'},
           {var,129,'Endian'}],
          [],
          [{call,130,
               {atom,130,apply_defaults},
               [{atom,130,integer},
                {var,130,'Size'},
                {var,130,'Unit'},
                {var,130,'Sign'},
                {var,130,'Endian'}]}]},
      {clause,132,
          [{atom,132,binary},
           {atom,132,default},
           {var,132,'Unit'},
           {var,132,'Sign'},
           {var,132,'Endian'}],
          [],
          [{call,134,
               {atom,134,apply_defaults},
               [{atom,134,binary},
                {atom,134,all},
                {var,134,'Unit'},
                {var,134,'Sign'},
                {var,134,'Endian'}]}]},
      {clause,135,
          [{atom,135,integer},
           {atom,135,default},
           {var,135,'Unit'},
           {var,135,'Sign'},
           {var,135,'Endian'}],
          [],
          [{call,136,{atom,136,check_unit},[{var,136,'Unit'}]},
           {call,137,
               {atom,137,apply_defaults},
               [{atom,137,integer},
                {integer,137,8},
                {integer,137,1},
                {var,137,'Sign'},
                {var,137,'Endian'}]}]},
      {clause,138,
          [{match,138,{atom,138,utf8},{var,138,'Type'}},
           {atom,138,default},
           {var,138,'Unit'},
           {var,138,'Sign'},
           {var,138,'Endian'}],
          [],
          [{call,139,
               {atom,139,apply_defaults},
               [{var,139,'Type'},
                {atom,139,undefined},
                {var,139,'Unit'},
                {var,139,'Sign'},
                {var,139,'Endian'}]}]},
      {clause,140,
          [{match,140,{atom,140,utf16},{var,140,'Type'}},
           {atom,140,default},
           {var,140,'Unit'},
           {var,140,'Sign'},
           {var,140,'Endian'}],
          [],
          [{call,141,
               {atom,141,apply_defaults},
               [{var,141,'Type'},
                {atom,141,undefined},
                {var,141,'Unit'},
                {var,141,'Sign'},
                {var,141,'Endian'}]}]},
      {clause,142,
          [{match,142,{atom,142,utf32},{var,142,'Type'}},
           {atom,142,default},
           {var,142,'Unit'},
           {var,142,'Sign'},
           {var,142,'Endian'}],
          [],
          [{call,143,
               {atom,143,apply_defaults},
               [{var,143,'Type'},
                {atom,143,undefined},
                {var,143,'Unit'},
                {var,143,'Sign'},
                {var,143,'Endian'}]}]},
      {clause,144,
          [{atom,144,float},
           {atom,144,default},
           {var,144,'Unit'},
           {var,144,'Sign'},
           {var,144,'Endian'}],
          [],
          [{call,145,{atom,145,check_unit},[{var,145,'Unit'}]},
           {call,146,
               {atom,146,apply_defaults},
               [{atom,146,float},
                {integer,146,64},
                {integer,146,1},
                {var,146,'Sign'},
                {var,146,'Endian'}]}]},
      {clause,148,
          [{atom,148,binary},
           {var,148,'Size'},
           {atom,148,undefined},
           {var,148,'Sign'},
           {var,148,'Endian'}],
          [],
          [{call,149,
               {atom,149,apply_defaults},
               [{atom,149,binary},
                {var,149,'Size'},
                {integer,149,8},
                {var,149,'Sign'},
                {var,149,'Endian'}]}]},
      {clause,150,
          [{atom,150,integer},
           {var,150,'Size'},
           {atom,150,undefined},
           {var,150,'Sign'},
           {var,150,'Endian'}],
          [],
          [{call,151,
               {atom,151,apply_defaults},
               [{atom,151,integer},
                {var,151,'Size'},
                {integer,151,1},
                {var,151,'Sign'},
                {var,151,'Endian'}]}]},
      {clause,152,
          [{atom,152,float},
           {var,152,'Size'},
           {atom,152,undefined},
           {var,152,'Sign'},
           {var,152,'Endian'}],
          [],
          [{call,153,
               {atom,153,apply_defaults},
               [{atom,153,float},
                {var,153,'Size'},
                {integer,153,1},
                {var,153,'Sign'},
                {var,153,'Endian'}]}]},
      {clause,155,
          [{var,155,'Type'},
           {var,155,'Size'},
           {var,155,'Unit'},
           {atom,155,undefined},
           {var,155,'Endian'}],
          [],
          [{call,156,
               {atom,156,apply_defaults},
               [{var,156,'Type'},
                {var,156,'Size'},
                {var,156,'Unit'},
                {atom,156,unsigned},
                {var,156,'Endian'}]}]},
      {clause,158,
          [{var,158,'Type'},
           {var,158,'Size'},
           {var,158,'Unit'},
           {var,158,'Sign'},
           {atom,158,undefined}],
          [],
          [{call,159,
               {atom,159,apply_defaults},
               [{var,159,'Type'},
                {var,159,'Size'},
                {var,159,'Unit'},
                {var,159,'Sign'},
                {atom,159,big}]}]},
      {clause,161,
          [{var,161,'Type'},
           {var,161,'Size'},
           {var,161,'Unit'},
           {var,161,'Sign'},
           {var,161,'Endian'}],
          [],
          [{call,162,
               {atom,162,check_size_unit},
               [{var,162,'Type'},{var,162,'Size'},{var,162,'Unit'}]},
           {tuple,163,
               [{atom,163,ok},
                {var,163,'Size'},
                {tuple,163,
                    [{atom,163,bittype},
                     {var,163,'Type'},
                     {var,163,'Unit'},
                     {var,163,'Sign'},
                     {var,163,'Endian'}]}]}]}]},
 {function,165,check_size_unit,3,
     [{clause,165,
          [{atom,165,utf8},{var,165,'Size'},{var,165,'Unit'}],
          [],
          [{call,166,
               {atom,166,check_size_unit_1},
               [{var,166,'Size'},{var,166,'Unit'}]}]},
      {clause,167,
          [{atom,167,utf16},{var,167,'Size'},{var,167,'Unit'}],
          [],
          [{call,168,
               {atom,168,check_size_unit_1},
               [{var,168,'Size'},{var,168,'Unit'}]}]},
      {clause,169,
          [{atom,169,utf32},{var,169,'Size'},{var,169,'Unit'}],
          [],
          [{call,170,
               {atom,170,check_size_unit_1},
               [{var,170,'Size'},{var,170,'Unit'}]}]},
      {clause,171,
          [{var,171,'_'},{var,171,'_'},{var,171,'_'}],
          [],
          [{atom,171,ok}]}]},
 {function,173,check_size_unit_1,2,
     [{clause,173,
          [{var,173,'Size'},{var,173,'Unit'}],
          [],
          [{'case',174,
               {var,174,'Size'},
               [{clause,175,[{atom,175,default}],[],[{atom,175,ok}]},
                {clause,176,[{atom,176,undefined}],[],[{atom,176,ok}]},
                {clause,177,
                    [{tuple,177,
                         [{atom,177,atom},
                          {var,177,'_'},
                          {atom,177,undefined}]}],
                    [],
                    [{atom,177,ok}]},
                {clause,178,
                    [{tuple,178,
                         [{atom,178,value},
                          {var,178,'_'},
                          {atom,178,undefined}]}],
                    [],
                    [{atom,178,ok}]},
                {clause,179,
                    [{var,179,'_'}],
                    [],
                    [{call,179,
                         {atom,179,throw},
                         [{tuple,179,
                              [{atom,179,error},
                               {atom,179,utf_bittype_size_or_unit}]}]}]}]},
           {'case',181,
               {var,181,'Unit'},
               [{clause,182,[{atom,182,undefined}],[],[{atom,182,ok}]},
                {clause,183,
                    [{var,183,'_'}],
                    [],
                    [{call,183,
                         {atom,183,throw},
                         [{tuple,183,
                              [{atom,183,error},
                               {atom,183,utf_bittype_size_or_unit}]}]}]}]}]}]},
 {function,186,check_unit,1,
     [{clause,186,[{atom,186,undefined}],[],[{atom,186,ok}]},
      {clause,187,
          [{var,187,'_'}],
          [],
          [{call,187,
               {atom,187,throw},
               [{tuple,187,[{atom,187,error},{atom,187,bittype_unit}]}]}]}]}]
