dets_v9
[]
[]
[{function,286,mark_dirty,1,
  [{clause,286,
    [{var,286,'Head'}],
    [],
    [{match,287,
      {var,287,'Dirty'},
      {cons,287,
       {tuple,287,
        [{integer,226,8},
         {bin,287,
          [{bin_element,241,{integer,241,0},{integer,287,32},default}]}]},
       {nil,287}}},
     {match,288,
      {tuple,288,[{var,288,'_H'},{atom,288,ok}]},
      {call,288,
       {remote,288,{atom,288,dets_utils},{atom,288,pwrite}},
       [{var,288,'Head'},{var,288,'Dirty'}]}},
     {match,289,
      {atom,289,ok},
      {call,289,
       {remote,289,{atom,289,dets_utils},{atom,289,sync}},
       [{var,289,'Head'}]}},
     {match,290,
      {tuple,290,[{atom,290,ok},{var,290,'_Pos'}]},
      {call,290,
       {remote,290,{atom,290,dets_utils},{atom,290,position}},
       [{var,290,'Head'},
        {call,290,
         {remote,290,{atom,290,erlang},{atom,290,element}},
         [{integer,290,13},{var,290,'Head'}]}]}},
     {call,291,
      {remote,291,{atom,291,dets_utils},{atom,291,truncate}},
      [{var,291,'Head'},{atom,291,cur}]}]}]},
 {function,294,prep_table_copy,9,
  [{clause,294,
    [{var,294,'Fd'},
     {var,294,'Tab'},
     {var,294,'Fname'},
     {var,294,'Type'},
     {var,294,'Kp'},
     {var,294,'Ram'},
     {var,294,'CacheSz'},
     {var,294,'Auto'},
     {var,294,'Parms'}],
    [],
    [{'case',295,
      {var,295,'Parms'},
      [{clause,264,
        [{tuple,264,
          [{atom,264,'$hash2'},
           {integer,239,9},
           {integer,266,1},
           {var,264,'_'},
           {var,264,'_'},
           {var,264,'_'},
           {var,300,'HashMethodCode'},
           {var,298,'N'},
           {var,298,'M'},
           {var,298,'Next'},
           {var,299,'Min'},
           {var,299,'Max'},
           {var,301,'NoObjects'},
           {var,301,'NoKeys'},
           {var,302,'_NoColls'}]}],
        [[{call,303,{atom,303,is_integer},[{var,303,'N'}]},
          {call,303,{atom,303,is_integer},[{var,303,'M'}]},
          {call,303,{atom,303,is_integer},[{var,303,'Next'}]},
          {call,304,{atom,304,is_integer},[{var,304,'Min'}]},
          {call,304,{atom,304,is_integer},[{var,304,'Max'}]},
          {call,305,{atom,305,is_integer},[{var,305,'NoObjects'}]},
          {call,305,{atom,305,is_integer},[{var,305,'NoKeys'}]},
          {op,306,'>=',{var,306,'NoObjects'},{var,306,'NoKeys'}}]],
        [{match,307,
          {var,307,'HashMethod'},
          {call,307,
           {atom,307,code_to_hash_method},
           [{var,307,'HashMethodCode'}]}},
         {'case',308,
          {call,308,
           {atom,308,hash_invars},
           [{var,308,'N'},
            {var,308,'M'},
            {var,308,'Next'},
            {var,308,'Min'},
            {var,308,'Max'}]},
          [{clause,309,
            [{atom,309,false}],
            [],
            [{call,310,{atom,310,throw},[{atom,310,badarg}]}]},
           {clause,311,
            [{atom,311,true}],
            [],
            [{call,312,
              {atom,312,init_file},
              [{var,312,'Fd'},
               {var,312,'Tab'},
               {var,312,'Fname'},
               {var,312,'Type'},
               {var,312,'Kp'},
               {var,312,'Min'},
               {var,312,'Max'},
               {var,312,'Ram'},
               {var,313,'CacheSz'},
               {var,313,'Auto'},
               {atom,313,false},
               {var,313,'M'},
               {var,313,'N'},
               {var,313,'Next'},
               {var,313,'HashMethod'},
               {var,314,'NoObjects'},
               {var,314,'NoKeys'}]}]}]}]},
       {clause,316,
        [{var,316,'_'}],
        [],
        [{call,317,{atom,317,throw},[{atom,317,badarg}]}]}]}]}]},
 {function,326,initiate_file,11,
  [{clause,326,
    [{var,326,'Fd'},
     {var,326,'Tab'},
     {var,326,'Fname'},
     {var,326,'Type'},
     {var,326,'Kp'},
     {var,326,'MinSlots0'},
     {var,326,'MaxSlots0'},
     {var,327,'Ram'},
     {var,327,'CacheSz'},
     {var,327,'Auto'},
     {var,327,'DoInitSegments'}],
    [],
    [{match,328,
      {var,328,'MaxSlots1'},
      {call,328,
       {remote,328,{atom,328,erlang},{atom,328,min}},
       [{var,328,'MaxSlots0'},
        {op,212,'*',
         {op,212,'*',{integer,208,256},{integer,206,512}},
         {integer,203,256}}]}},
     {match,329,
      {var,329,'MinSlots1'},
      {call,329,
       {remote,329,{atom,329,erlang},{atom,329,min}},
       [{var,329,'MinSlots0'},{var,329,'MaxSlots1'}]}},
     {match,330,
      {var,330,'MinSlots'},
      {call,330,{atom,330,slots2},[{var,330,'MinSlots1'}]}},
     {match,331,
      {var,331,'MaxSlots'},
      {call,331,{atom,331,slots2},[{var,331,'MaxSlots1'}]}},
     {match,332,
      {var,332,'M'},
      {match,332,{var,332,'Next'},{var,332,'MinSlots'}}},
     {match,333,{var,333,'N'},{integer,333,0}},
     {call,334,
      {atom,334,init_file},
      [{var,334,'Fd'},
       {var,334,'Tab'},
       {var,334,'Fname'},
       {var,334,'Type'},
       {var,334,'Kp'},
       {var,334,'MinSlots'},
       {var,334,'MaxSlots'},
       {var,334,'Ram'},
       {var,334,'CacheSz'},
       {var,335,'Auto'},
       {var,335,'DoInitSegments'},
       {var,335,'M'},
       {var,335,'N'},
       {var,335,'Next'},
       {atom,335,phash2},
       {integer,335,0},
       {integer,335,0}]}]}]},
 {function,337,init_file,17,
  [{clause,337,
    [{var,337,'Fd'},
     {var,337,'Tab'},
     {var,337,'Fname'},
     {var,337,'Type'},
     {var,337,'Kp'},
     {var,337,'MinSlots'},
     {var,337,'MaxSlots'},
     {var,337,'Ram'},
     {var,337,'CacheSz'},
     {var,338,'Auto'},
     {var,338,'DoInitSegments'},
     {var,338,'M'},
     {var,338,'N'},
     {var,338,'Next'},
     {var,338,'HashMethod'},
     {var,338,'NoObjects'},
     {var,338,'NoKeys'}],
    [],
    [{match,339,
      {var,339,'Ftab'},
      {call,339,
       {remote,339,{atom,339,dets_utils},{atom,339,init_alloc}},
       [{op,209,'+',
         {op,200,'+',
          {op,199,'+',
           {op,199,'+',
            {op,198,'+',
             {integer,198,56},
             {op,194,'*',{integer,194,28},{integer,194,4}}},
            {integer,195,16}},
           {integer,196,4}},
          {integer,192,124}},
         {op,209,'*',{integer,209,4},{integer,208,256}}}]}},
     {match,341,
      {var,341,'Head0'},
      {tuple,341,
       [{atom,341,head},
        {var,342,'M'},
        {op,343,'*',{var,343,'M'},{integer,343,2}},
        {var,344,'Next'},
        {var,345,'Fd'},
        {var,346,'NoObjects'},
        {var,347,'NoKeys'},
        {integer,348,0},
        {var,349,'N'},
        {var,350,'Type'},
        {var,357,'Kp'},
        {var,352,'Ftab'},
        {atom,341,undefined},
        {call,353,{remote,353,{atom,353,orddict},{atom,353,new}},[]},
        {var,354,'Auto'},
        {atom,351,dirty},
        {atom,69,false},
        {var,355,'HashMethod'},
        {atom,356,true},
        {var,358,'MinSlots'},
        {var,359,'MaxSlots'},
        {call,364,
         {remote,364,{atom,364,dets_utils},{atom,364,new_cache}},
         [{var,364,'CacheSz'}]},
        {var,362,'Fname'},
        {atom,78,read_write},
        {var,361,'Ram'},
        {var,363,'Tab'},
        {atom,341,undefined},
        {atom,341,undefined},
        {integer,239,9},
        {atom,-1,dets_v9},
        {integer,254,16},
        {op,209,'+',
         {op,200,'+',
          {op,199,'+',
           {op,199,'+',
            {op,198,'+',
             {integer,198,56},
             {op,194,'*',{integer,194,28},{integer,194,4}}},
            {integer,195,16}},
           {integer,196,4}},
          {integer,192,124}},
         {op,209,'*',{integer,209,4},{integer,208,256}}}]}},
     {match,371,{var,371,'FreeListsPointer'},{integer,371,0}},
     {match,372,
      {var,372,'NoColls'},
      {bin,372,
       [{bin_element,372,
         {integer,372,0},
         {op,194,'*',{integer,194,28},{integer,194,4}},
         [{unit,8}]}]}},
     {match,373,
      {var,373,'FileHeader'},
      {call,373,
       {atom,373,file_header},
       [{var,373,'Head0'},
        {var,373,'FreeListsPointer'},
        {integer,241,0},
        {var,374,'NoColls'}]}},
     {match,375,
      {var,375,'W0'},
      {tuple,375,
       [{integer,375,0},
        {cons,375,
         {var,375,'FileHeader'},
         {bin,376,
          [{bin_element,376,
            {integer,376,0},
            {op,376,'*',{integer,376,4},{integer,208,256}},
            [{unit,8}]}]}}]}},
     {call,379,
      {remote,379,{atom,379,lists},{atom,379,foreach}},
      [{'fun',379,
        {clauses,
         [{clause,379,
           [{tuple,379,[{var,379,'I1'},{var,379,'I2'}]}],
           [[{call,379,{atom,379,is_integer},[{var,379,'I1'}]},
             {call,379,{atom,379,is_integer},[{var,379,'I2'}]}]],
           [{atom,379,ok}]},
          {clause,380,
           [{tuple,380,[{var,380,'K'},{var,380,'V'}]}],
           [],
           [{call,380,{atom,380,put},[{var,380,'K'},{var,380,'V'}]}]}]}},
       {call,381,{atom,381,erase},[]}]},
     {match,385,{var,385,'Zero'},{call,385,{atom,385,seg_zero},[]}},
     {match,386,
      {tuple,386,[{var,386,'Head1'},{var,386,'Ws1'}]},
      {call,386,
       {atom,386,init_parts},
       [{var,386,'Head0'},
        {integer,386,0},
        {call,386,{atom,386,no_parts},[{var,386,'Next'}]},
        {var,386,'Zero'},
        {nil,386}]}},
     {match,387,
      {var,387,'NoSegs'},
      {call,387,{atom,387,no_segs},[{var,387,'Next'}]}},
     {match,389,
      {tuple,389,[{var,389,'Head2'},{var,389,'WsI'},{var,389,'WsP'}]},
      {call,389,
       {atom,389,init_segments},
       [{var,389,'Head1'},
        {integer,389,0},
        {var,389,'NoSegs'},
        {var,389,'Zero'},
        {nil,389},
        {nil,389}]}},
     {match,390,
      {var,390,'Ws2'},
      {'if',390,
       [{clause,391,[],
         [[{var,391,'DoInitSegments'}]],
         [{op,391,'++',{var,391,'WsP'},{var,391,'WsI'}}]},
        {clause,392,[],[[{atom,392,true}]],[{var,392,'WsP'}]}]}},
     {call,394,
      {remote,394,{atom,394,dets_utils},{atom,394,pwrite}},
      [{var,394,'Fd'},
       {var,394,'Fname'},
       {cons,394,
        {var,394,'W0'},
        {op,394,'++',
         {call,394,
          {remote,394,{atom,394,lists},{atom,394,append}},
          [{var,394,'Ws1'}]},
         {var,394,'Ws2'}}}]},
     {match,395,
      {atom,395,true},
      {call,395,{atom,395,hash_invars},[{var,395,'Head2'}]}},
     {match,400,
      {tuple,400,[{var,400,'_'},{var,400,'Where'},{var,400,'_'}]},
      {call,400,
       {remote,400,{atom,400,dets_utils},{atom,400,alloc}},
       [{var,400,'Head2'},{integer,254,16}]}},
     {match,401,
      {var,401,'NewFtab'},
      {call,401,
       {remote,401,{atom,401,dets_utils},{atom,401,init_alloc}},
       [{var,401,'Where'}]}},
     {match,402,
      {var,402,'Head'},
      {call,402,
       {remote,402,{atom,402,erlang},{atom,402,setelement}},
       [{integer,402,32},
        {call,402,
         {remote,402,{atom,402,erlang},{atom,402,setelement}},
         [{integer,402,12},{var,402,'Head2'},{var,402,'NewFtab'}]},
        {var,402,'Where'}]}},
     {tuple,403,[{atom,403,ok},{var,403,'Head'}]}]}]},
 {function,406,slots2,1,
  [{clause,406,
    [{var,406,'NoSlots'}],
    [[{op,406,'>=',{var,406,'NoSlots'},{integer,406,256}}]],
    [{op,42,'bsl',
      {integer,42,1},
      {call,407,
       {remote,407,{atom,407,dets_utils},{atom,407,log2}},
       [{var,407,'NoSlots'}]}}]}]},
 {function,409,init_parts,5,
  [{clause,409,
    [{var,409,'Head'},
     {var,409,'PartNo'},
     {var,409,'NoParts'},
     {var,409,'Zero'},
     {var,409,'Ws'}],
    [[{op,409,'<',{var,409,'PartNo'},{var,409,'NoParts'}}]],
    [{match,410,
      {var,410,'PartPos'},
      {op,209,'+',
       {op,200,'+',
        {op,199,'+',
         {op,199,'+',
          {op,198,'+',
           {integer,198,56},
           {op,194,'*',{integer,194,28},{integer,194,4}}},
          {integer,195,16}},
         {integer,196,4}},
        {integer,192,124}},
       {op,209,'*',{integer,209,4},{var,410,'PartNo'}}}},
     {match,411,
      {tuple,411,[{var,411,'NewHead'},{var,411,'W'},{var,411,'_Part'}]},
      {call,411,
       {atom,411,alloc_part},
       [{var,411,'Head'},{var,411,'Zero'},{var,411,'PartPos'}]}},
     {call,412,
      {atom,412,init_parts},
      [{var,412,'NewHead'},
       {op,412,'+',{var,412,'PartNo'},{integer,412,1}},
       {var,412,'NoParts'},
       {var,412,'Zero'},
       {cons,412,{var,412,'W'},{var,412,'Ws'}}]}]},
   {clause,413,
    [{var,413,'Head'},
     {var,413,'_PartNo'},
     {var,413,'_NoParts'},
     {var,413,'_Zero'},
     {var,413,'Ws'}],
    [],
    [{tuple,414,[{var,414,'Head'},{var,414,'Ws'}]}]}]},
 {function,418,init_segments,6,
  [{clause,418,
    [{var,418,'Head'},
     {var,418,'SegNo'},
     {var,418,'NoSegs'},
     {var,418,'SegZero'},
     {var,418,'WsP'},
     {var,418,'WsI'}],
    [[{op,418,'<',{var,418,'SegNo'},{var,418,'NoSegs'}}]],
    [{match,419,
      {tuple,419,[{var,419,'NewHead'},{var,419,'WI'},{var,419,'Ws'}]},
      {call,419,
       {atom,419,allocate_segment},
       [{var,419,'Head'},{var,419,'SegZero'},{var,419,'SegNo'}]}},
     {call,420,
      {atom,420,init_segments},
      [{var,420,'NewHead'},
       {op,420,'+',{var,420,'SegNo'},{integer,420,1}},
       {var,420,'NoSegs'},
       {var,420,'SegZero'},
       {op,420,'++',{var,420,'Ws'},{var,420,'WsP'}},
       {cons,420,{var,420,'WI'},{var,420,'WsI'}}]}]},
   {clause,421,
    [{var,421,'Head'},
     {var,421,'_SegNo'},
     {var,421,'_NoSegs'},
     {var,421,'_SegZero'},
     {var,421,'WsP'},
     {var,421,'WsI'}],
    [],
    [{tuple,422,[{var,422,'Head'},{var,422,'WsI'},{var,422,'WsP'}]}]}]},
 {function,425,allocate_segment,3,
  [{clause,425,
    [{var,425,'Head'},{var,425,'SegZero'},{var,425,'SegNo'}],
    [],
    [{match,426,
      {var,426,'PartPos'},
      {op,209,'+',
       {op,200,'+',
        {op,199,'+',
         {op,199,'+',
          {op,198,'+',
           {integer,198,56},
           {op,194,'*',{integer,194,28},{integer,194,4}}},
          {integer,195,16}},
         {integer,196,4}},
        {integer,192,124}},
       {op,209,'*',
        {integer,209,4},
        {op,426,'div',{var,426,'SegNo'},{integer,206,512}}}}},
     {'case',427,
      {call,427,{atom,427,get_arrpart},[{var,427,'PartPos'}]},
      [{clause,428,
        [{atom,428,undefined}],
        [],
        [{match,430,
          {tuple,430,
           [{var,430,'Head1'},
            {cons,430,
             {var,430,'InitArrPart'},
             {cons,430,{var,430,'ArrPartPointer'},{nil,430}}},
            {var,430,'Part'}]},
          {call,431,
           {atom,431,alloc_part},
           [{var,431,'Head'},{var,431,'SegZero'},{var,431,'PartPos'}]}},
         {match,432,
          {tuple,432,
           [{var,432,'NewHead'},
            {var,432,'InitSegment'},
            {cons,432,{var,432,'SegPointer'},{nil,432}}]},
          {call,433,
           {atom,433,alloc_seg},
           [{var,433,'Head1'},
            {var,433,'SegZero'},
            {var,433,'SegNo'},
            {var,433,'Part'}]}},
         {tuple,434,
          [{var,434,'NewHead'},
           {var,434,'InitSegment'},
           {cons,434,
            {var,434,'InitArrPart'},
            {cons,434,
             {var,434,'SegPointer'},
             {cons,434,{var,434,'ArrPartPointer'},{nil,434}}}}]}]},
       {clause,435,
        [{var,435,'Part'}],
        [],
        [{call,436,
          {atom,436,alloc_seg},
          [{var,436,'Head'},
           {var,436,'SegZero'},
           {var,436,'SegNo'},
           {var,436,'Part'}]}]}]}]}]},
 {function,439,alloc_part,3,
  [{clause,439,
    [{var,439,'Head'},{var,439,'PartZero'},{var,439,'PartPos'}],
    [],
    [{match,441,
      {tuple,441,[{var,441,'NewHead'},{var,441,'Part'},{var,441,'_'}]},
      {call,441,
       {remote,441,{atom,441,dets_utils},{atom,441,alloc}},
       [{var,441,'Head'},
        {call,441,
         {atom,441,adjsz},
         [{op,441,'*',{integer,441,4},{integer,206,512}}]}]}},
     {call,442,
      {atom,442,arrpart_cache},
      [{var,442,'PartPos'},{var,442,'Part'}]},
     {match,443,
      {var,443,'InitArrPart'},
      {tuple,443,[{var,443,'Part'},{var,443,'PartZero'}]}},
     {match,444,
      {var,444,'ArrPartPointer'},
      {tuple,444,
       [{var,444,'PartPos'},
        {bin,444,
         [{bin_element,444,{var,444,'Part'},{integer,444,32},default}]}]}},
     {tuple,445,
      [{var,445,'NewHead'},
       {cons,445,
        {var,445,'InitArrPart'},
        {cons,445,{var,445,'ArrPartPointer'},{nil,445}}},
       {var,445,'Part'}]}]}]},
 {function,447,alloc_seg,4,
  [{clause,447,
    [{var,447,'Head'},{var,447,'SegZero'},{var,447,'SegNo'},{var,447,'Part'}],
    [],
    [{match,449,
      {tuple,449,[{var,449,'NewHead'},{var,449,'Segment'},{var,449,'_'}]},
      {call,449,
       {remote,449,{atom,449,dets_utils},{atom,449,alloc}},
       [{var,449,'Head'},
        {call,449,
         {atom,449,adjsz},
         [{op,449,'*',{integer,449,4},{integer,202,512}}]}]}},
     {match,450,
      {var,450,'InitSegment'},
      {tuple,450,[{var,450,'Segment'},{var,450,'SegZero'}]}},
     {match,451,
      {var,451,'Pos'},
      {op,210,'+',
       {var,451,'Part'},
       {op,210,'*',
        {integer,210,4},
        {op,45,'band',
         {var,451,'SegNo'},
         {op,45,'-',{integer,206,512},{integer,45,1}}}}}},
     {call,452,{atom,452,segp_cache},[{var,452,'Pos'},{var,452,'Segment'}]},
     {call,453,
      {remote,453,{atom,453,dets_utils},{atom,453,disk_map_segment}},
      [{var,453,'Segment'},{var,453,'SegZero'}]},
     {match,454,
      {var,454,'SegPointer'},
      {tuple,454,
       [{var,454,'Pos'},
        {bin,454,
         [{bin_element,454,{var,454,'Segment'},{integer,454,32},default}]}]}},
     {tuple,455,
      [{var,455,'NewHead'},
       {var,455,'InitSegment'},
       {cons,455,{var,455,'SegPointer'},{nil,455}}]}]}]},
 {function,458,init_freelist,2,
  [{clause,458,
    [{var,458,'Head'},{atom,458,true}],
    [],
    [{match,459,
      {var,459,'Pos'},
      {call,459,
       {remote,459,{atom,459,erlang},{atom,459,element}},
       [{integer,459,13},{var,459,'Head'}]}},
     {call,460,
      {atom,460,free_lists_from_file},
      [{var,460,'Head'},{var,460,'Pos'}]}]}]},
 {function,463,read_file_header,2,
  [{clause,463,
    [{var,463,'Fd'},{var,463,'FileName'}],
    [],
    [{match,464,
      {tuple,464,[{atom,464,ok},{var,464,'Bin'}]},
      {call,464,
       {remote,464,{atom,464,dets_utils},{atom,464,pread_close}},
       [{var,464,'Fd'},
        {var,464,'FileName'},
        {integer,464,0},
        {op,199,'+',
         {op,199,'+',
          {op,198,'+',
           {integer,198,56},
           {op,194,'*',{integer,194,28},{integer,194,4}}},
          {integer,195,16}},
         {integer,196,4}}]}},
     {match,469,
      {bin,465,
       [{bin_element,465,{var,465,'FreeList'},{integer,465,32},default},
        {bin_element,465,{var,465,'Cookie'},{integer,465,32},default},
        {bin_element,465,{var,465,'CP'},{integer,465,32},default},
        {bin_element,465,{var,465,'Type2'},{integer,465,32},default},
        {bin_element,466,{var,466,'Version'},{integer,466,32},default},
        {bin_element,466,{var,466,'M'},{integer,466,32},default},
        {bin_element,466,{var,466,'Next'},{integer,466,32},default},
        {bin_element,466,{var,466,'Kp'},{integer,466,32},default},
        {bin_element,467,{var,467,'NoObjects'},{integer,467,32},default},
        {bin_element,467,{var,467,'NoKeys'},{integer,467,32},default},
        {bin_element,467,{var,467,'MinNoSlots'},{integer,467,32},default},
        {bin_element,467,{var,467,'MaxNoSlots'},{integer,467,32},default},
        {bin_element,468,{var,468,'HashMethod'},{integer,468,32},default},
        {bin_element,468,{var,468,'N'},{integer,468,32},default},
        {bin_element,468,
         {var,468,'NoCollsB'},
         {op,194,'*',{integer,194,28},{integer,194,4}},
         [binary]},
        {bin_element,469,{var,469,'MD5'},{integer,195,16},[binary]},
        {bin_element,469,{var,469,'FlBase'},{integer,469,32},default}]},
      {var,469,'Bin'}},
     {match,471,
      {bin,470,
       [{bin_element,470,{var,470,'_'},{integer,470,12},[binary]},
        {bin_element,470,
         {var,470,'MD5DigestedPart'},
         {op,470,'-',
          {op,470,'-',
           {op,470,'-',
            {op,199,'+',
             {op,199,'+',
              {op,198,'+',
               {integer,198,56},
               {op,194,'*',{integer,194,28},{integer,194,4}}},
              {integer,195,16}},
             {integer,196,4}},
            {integer,195,16}},
           {integer,196,4}},
          {integer,470,12}},
         [binary]},
        {bin_element,471,{var,471,'_'},default,[binary]}]},
      {var,471,'Bin'}},
     {match,472,
      {tuple,472,[{atom,472,ok},{var,472,'EOF'}]},
      {call,472,
       {remote,472,{atom,472,dets_utils},{atom,472,position_close}},
       [{var,472,'Fd'},{var,472,'FileName'},{atom,472,eof}]}},
     {match,473,
      {tuple,473,
       [{atom,473,ok},
        {bin,473,
         [{bin_element,473,{var,473,'FileSize'},{integer,473,32},default}]}]},
      {call,473,
       {remote,473,{atom,473,dets_utils},{atom,473,pread_close}},
       [{var,473,'Fd'},
        {var,473,'FileName'},
        {op,473,'-',{var,473,'EOF'},{integer,473,4}},
        {integer,473,4}]}},
     {match,474,
      {tuple,474,[{var,474,'CL'},{bin,474,[]}]},
      {call,474,
       {remote,474,{atom,474,lists},{atom,474,foldl}},
       [{'fun',474,
         {clauses,
          [{clause,474,
            [{var,474,'LSz'},
             {tuple,474,
              [{var,474,'Acc'},
               {bin,474,
                [{bin_element,474,{var,474,'NN'},{integer,474,32},default},
                 {bin_element,474,{var,474,'R'},default,[binary]}]}]}],
            [],
            [{'if',475,
              [{clause,476,[],
                [[{op,476,'=:=',{var,476,'NN'},{integer,476,0}}]],
                [{tuple,476,[{var,476,'Acc'},{var,476,'R'}]}]},
               {clause,477,[],
                [[{atom,477,true}]],
                [{tuple,477,
                  [{cons,477,
                    {tuple,477,[{var,477,'LSz'},{var,477,'NN'}]},
                    {var,477,'Acc'}},
                   {var,477,'R'}]}]}]}]}]}},
        {tuple,479,[{nil,479},{var,479,'NoCollsB'}]},
        {call,479,
         {remote,479,{atom,479,lists},{atom,479,seq}},
         [{integer,479,4},{op,479,'-',{integer,280,32},{integer,479,1}}]}]}},
     {match,480,
      {var,480,'NoColls'},
      {'if',481,
       [{clause,482,[],
         [[{op,482,'=:=',{var,482,'CL'},{nil,482}},
           {op,482,'>',{var,482,'NoObjects'},{integer,482,0}}]],
         [{atom,483,undefined}]},
        {clause,484,[],
         [[{atom,484,true}]],
         [{call,485,
           {remote,485,{atom,485,lists},{atom,485,reverse}},
           [{var,485,'CL'}]}]}]}},
     {match,487,
      {var,487,'Base'},
      {'case',487,
       {var,487,'FlBase'},
       [{clause,488,
         [{integer,488,0}],
         [],
         [{op,209,'+',
           {op,200,'+',
            {op,199,'+',
             {op,199,'+',
              {op,198,'+',
               {integer,198,56},
               {op,194,'*',{integer,194,28},{integer,194,4}}},
              {integer,195,16}},
             {integer,196,4}},
            {integer,192,124}},
           {op,209,'*',{integer,209,4},{integer,208,256}}}]},
        {clause,489,[{var,489,'_'}],[],[{var,489,'FlBase'}]}]}},
     {match,491,
      {var,491,'FH'},
      {tuple,491,
       [{atom,491,fileheader},
        {var,491,'FreeList'},
        {var,492,'Base'},
        {var,493,'Cookie'},
        {var,494,'CP'},
        {call,495,
         {remote,495,{atom,495,dets_utils},{atom,495,code_to_type}},
         [{var,495,'Type2'}]},
        {var,496,'Version'},
        {var,497,'M'},
        {var,498,'Next'},
        {var,499,'Kp'},
        {var,500,'NoObjects'},
        {var,501,'NoKeys'},
        {var,502,'MinNoSlots'},
        {var,503,'MaxNoSlots'},
        {var,504,'NoColls'},
        {var,505,'HashMethod'},
        {var,506,'MD5'},
        {op,507,'=/=',
         {bin,507,
          [{bin_element,507,{integer,507,0},{integer,195,16},[{unit,8}]}]},
         {var,507,'MD5'}},
        {call,508,
         {remote,508,{atom,508,erlang},{atom,508,md5}},
         [{var,508,'MD5DigestedPart'}]},
        {op,509,'+',{var,509,'FileSize'},{var,509,'FlBase'}},
        {var,510,'EOF'},
        {var,511,'N'},
        {atom,-1,dets_v9}]}},
     {tuple,513,[{atom,513,ok},{var,513,'Fd'},{var,513,'FH'}]}]}]},
 {function,517,check_file_header,2,
  [{clause,517,
    [{var,517,'FH'},{var,517,'Fd'}],
    [],
    [{match,518,
      {var,518,'HashBif'},
      {call,518,
       {atom,518,code_to_hash_method},
       [{call,518,
         {remote,518,{atom,518,erlang},{atom,518,element}},
         [{integer,518,16},{var,518,'FH'}]}]}},
     {match,519,
      {var,519,'Test'},
      {'if',520,
       [{clause,521,[],
         [[{op,521,'=/=',
            {call,521,
             {remote,521,{atom,521,erlang},{atom,521,element}},
             [{integer,521,4},{var,521,'FH'}]},
            {integer,31,11259375}}]],
         [{tuple,522,[{atom,522,error},{atom,522,not_a_dets_file}]}]},
        {clause,523,[],
         [[{op,523,'=:=',
            {call,523,
             {remote,523,{atom,523,erlang},{atom,523,element}},
             [{integer,523,6},{var,523,'FH'}]},
            {atom,523,badtype}}]],
         [{tuple,524,[{atom,524,error},{atom,524,invalid_type_code}]}]},
        {clause,525,[],
         [[{op,525,'=/=',
            {call,525,
             {remote,525,{atom,525,erlang},{atom,525,element}},
             [{integer,525,7},{var,525,'FH'}]},
            {integer,239,9}}]],
         [{tuple,526,[{atom,526,error},{atom,526,bad_version}]}]},
        {clause,527,[],
         [[{call,527,
            {remote,527,{atom,527,erlang},{atom,527,element}},
            [{integer,527,18},{var,527,'FH'}]},
           {op,528,'=/=',
            {call,528,
             {remote,528,{atom,528,erlang},{atom,528,element}},
             [{integer,528,17},{var,528,'FH'}]},
            {call,528,
             {remote,528,{atom,528,erlang},{atom,528,element}},
             [{integer,528,19},{var,528,'FH'}]}}]],
         [{tuple,529,[{atom,529,error},{atom,529,not_a_dets_file}]}]},
        {clause,530,[],
         [[{op,530,'=/=',
            {call,530,
             {remote,530,{atom,530,erlang},{atom,530,element}},
             [{integer,530,20},{var,530,'FH'}]},
            {call,530,
             {remote,530,{atom,530,erlang},{atom,530,element}},
             [{integer,530,21},{var,530,'FH'}]}}]],
         [{tuple,531,[{atom,531,error},{atom,531,not_closed}]}]},
        {clause,532,[],
         [[{op,532,'=:=',{var,532,'HashBif'},{atom,532,undefined}}]],
         [{tuple,533,[{atom,533,error},{atom,533,bad_hash_bif}]}]},
        {clause,534,[],
         [[{op,534,'=:=',
            {call,534,
             {remote,534,{atom,534,erlang},{atom,534,element}},
             [{integer,534,5},{var,534,'FH'}]},
            {integer,242,1}}]],
         [{tuple,535,[{atom,535,ok},{atom,535,true}]}]},
        {clause,536,[],
         [[{op,536,'=:=',
            {call,536,
             {remote,536,{atom,536,erlang},{atom,536,element}},
             [{integer,536,5},{var,536,'FH'}]},
            {integer,241,0}}]],
         [{tuple,537,[{atom,537,error},{atom,537,not_closed}]}]},
        {clause,538,[],
         [[{atom,538,true}]],
         [{tuple,539,[{atom,539,error},{atom,539,not_a_dets_file}]}]}]}},
     {'case',541,
      {var,541,'Test'},
      [{clause,542,
        [{tuple,542,[{atom,542,ok},{var,542,'ExtraInfo'}]}],
        [],
        [{match,543,
          {var,543,'MaxObjSize'},
          {call,543,
           {atom,543,max_objsize},
           [{call,543,
             {remote,543,{atom,543,erlang},{atom,543,element}},
             [{integer,543,15},{var,543,'FH'}]}]}},
         {match,544,
          {var,544,'H'},
          {tuple,544,
           [{atom,544,head},
            {call,545,
             {remote,545,{atom,545,erlang},{atom,545,element}},
             [{integer,545,8},{var,545,'FH'}]},
            {op,546,'*',
             {call,546,
              {remote,546,{atom,546,erlang},{atom,546,element}},
              [{integer,546,8},{var,546,'FH'}]},
             {integer,546,2}},
            {call,547,
             {remote,547,{atom,547,erlang},{atom,547,element}},
             [{integer,547,9},{var,547,'FH'}]},
            {var,548,'Fd'},
            {call,549,
             {remote,549,{atom,549,erlang},{atom,549,element}},
             [{integer,549,11},{var,549,'FH'}]},
            {call,550,
             {remote,550,{atom,550,erlang},{atom,550,element}},
             [{integer,550,12},{var,550,'FH'}]},
            {var,551,'MaxObjSize'},
            {call,552,
             {remote,552,{atom,552,erlang},{atom,552,element}},
             [{integer,552,22},{var,552,'FH'}]},
            {call,553,
             {remote,553,{atom,553,erlang},{atom,553,element}},
             [{integer,553,6},{var,553,'FH'}]},
            {call,560,
             {remote,560,{atom,560,erlang},{atom,560,element}},
             [{integer,560,10},{var,560,'FH'}]},
            {atom,544,undefined},
            {call,557,
             {remote,557,{atom,557,erlang},{atom,557,element}},
             [{integer,557,2},{var,557,'FH'}]},
            {call,563,
             {remote,563,{atom,563,erlang},{atom,563,element}},
             [{integer,563,15},{var,563,'FH'}]},
            {atom,555,infinity},
            {atom,554,saved},
            {atom,556,false},
            {var,558,'HashBif'},
            {call,559,
             {remote,559,{atom,559,erlang},{atom,559,element}},
             [{integer,559,18},{var,559,'FH'}]},
            {call,561,
             {remote,561,{atom,561,erlang},{atom,561,element}},
             [{integer,561,13},{var,561,'FH'}]},
            {call,562,
             {remote,562,{atom,562,erlang},{atom,562,element}},
             [{integer,562,14},{var,562,'FH'}]},
            {atom,544,undefined},
            {atom,544,undefined},
            {atom,78,read_write},
            {atom,79,false},
            {atom,544,undefined},
            {atom,544,undefined},
            {atom,544,undefined},
            {integer,239,9},
            {atom,-1,dets_v9},
            {integer,254,16},
            {call,567,
             {remote,567,{atom,567,erlang},{atom,567,element}},
             [{integer,567,3},{var,567,'FH'}]}]}},
         {tuple,568,[{atom,568,ok},{var,568,'H'},{var,568,'ExtraInfo'}]}]},
       {clause,569,[{var,569,'Error'}],[],[{var,570,'Error'}]}]}]}]},
 {function,574,max_objsize,1,
  [{clause,574,
    [{match,574,{var,574,'NoColls'},{atom,574,undefined}}],
    [],
    [{var,575,'NoColls'}]},
   {clause,576,
    [{var,576,'NoColls'}],
    [],
    [{call,577,
      {atom,577,max_objsize},
      [{var,577,'NoColls'},{integer,577,0}]}]}]},
 {function,579,max_objsize,2,
  [{clause,579,[{nil,579},{var,579,'Max'}],[],[{var,580,'Max'}]},
   {clause,581,
    [{cons,581,{tuple,581,[{var,581,'_'},{integer,581,0}]},{var,581,'L'}},
     {var,581,'Max'}],
    [],
    [{call,582,{atom,582,max_objsize},[{var,582,'L'},{var,582,'Max'}]}]},
   {clause,583,
    [{cons,583,{tuple,583,[{var,583,'I'},{var,583,'_'}]},{var,583,'L'}},
     {var,583,'_Max'}],
    [],
    [{call,584,{atom,584,max_objsize},[{var,584,'L'},{var,584,'I'}]}]}]},
 {function,586,cache_segps,3,
  [{clause,586,
    [{var,586,'Fd'},{var,586,'FileName'},{var,586,'M'}],
    [],
    [{match,587,
      {var,587,'NoParts'},
      {call,587,{atom,587,no_parts},[{var,587,'M'}]}},
     {match,588,
      {var,588,'ArrStart'},
      {op,209,'+',
       {op,200,'+',
        {op,199,'+',
         {op,199,'+',
          {op,198,'+',
           {integer,198,56},
           {op,194,'*',{integer,194,28},{integer,194,4}}},
          {integer,195,16}},
         {integer,196,4}},
        {integer,192,124}},
       {op,209,'*',{integer,209,4},{integer,588,0}}}},
     {match,589,
      {tuple,589,[{atom,589,ok},{var,589,'Bin'}]},
      {call,589,
       {remote,589,{atom,589,dets_utils},{atom,589,pread_close}},
       [{var,589,'Fd'},
        {var,589,'FileName'},
        {var,589,'ArrStart'},
        {op,589,'*',{integer,589,4},{var,589,'NoParts'}}]}},
     {call,590,
      {atom,590,cache_arrparts},
      [{var,590,'Bin'},
       {op,200,'+',
        {op,199,'+',
         {op,199,'+',
          {op,198,'+',
           {integer,198,56},
           {op,194,'*',{integer,194,28},{integer,194,4}}},
          {integer,195,16}},
         {integer,196,4}},
        {integer,192,124}},
       {var,590,'Fd'},
       {var,590,'FileName'}]}]}]},
 {function,592,cache_arrparts,4,
  [{clause,592,
    [{bin,592,
      [{bin_element,592,{var,592,'ArrPartPos'},{integer,592,32},default},
       {bin_element,592,{var,592,'B'},default,[binary]}]},
     {var,592,'Pos'},
     {var,592,'Fd'},
     {var,592,'FileName'}],
    [],
    [{call,593,
      {atom,593,arrpart_cache},
      [{var,593,'Pos'},{var,593,'ArrPartPos'}]},
     {match,594,
      {tuple,594,[{atom,594,ok},{var,594,'ArrPartBin'}]},
      {call,594,
       {remote,594,{atom,594,dets_utils},{atom,594,pread_close}},
       [{var,594,'Fd'},
        {var,594,'FileName'},
        {var,595,'ArrPartPos'},
        {op,596,'*',{integer,206,512},{integer,596,4}}]}},
     {call,597,
      {atom,597,cache_segps1},
      [{var,597,'Fd'},{var,597,'ArrPartBin'},{var,597,'ArrPartPos'}]},
     {call,598,
      {atom,598,cache_arrparts},
      [{var,598,'B'},
       {op,598,'+',{var,598,'Pos'},{integer,598,4}},
       {var,598,'Fd'},
       {var,598,'FileName'}]}]},
   {clause,599,
    [{bin,599,[]},{var,599,'_Pos'},{var,599,'_Fd'},{var,599,'_FileName'}],
    [],
    [{atom,600,ok}]}]},
 {function,602,cache_segps1,3,
  [{clause,602,
    [{var,602,'_Fd'},
     {bin,602,
      [{bin_element,602,{integer,602,0},{integer,602,32},default},
       {bin_element,602,{var,602,'_'},default,[binary]}]},
     {var,602,'_P'}],
    [],
    [{atom,603,ok}]},
   {clause,604,
    [{var,604,'Fd'},
     {bin,604,
      [{bin_element,604,{var,604,'S'},{integer,604,32},default},
       {bin_element,604,{var,604,'B'},default,[binary]}]},
     {var,604,'P'}],
    [],
    [{call,605,
      {remote,605,{atom,605,dets_utils},{atom,605,disk_map_segment_p}},
      [{var,605,'Fd'},{var,605,'S'}]},
     {call,606,{atom,606,segp_cache},[{var,606,'P'},{var,606,'S'}]},
     {call,607,
      {atom,607,cache_segps1},
      [{var,607,'Fd'},
       {var,607,'B'},
       {op,607,'+',{var,607,'P'},{integer,607,4}}]}]},
   {clause,608,
    [{var,608,'_Fd'},{bin,608,[]},{var,608,'_P'}],
    [],
    [{atom,609,ok}]}]},
 {function,611,no_parts,1,
  [{clause,611,
    [{var,611,'NoSlots'}],
    [],
    [{op,612,'+',
      {op,612,'div',
       {op,612,'-',{var,612,'NoSlots'},{integer,612,1}},
       {op,612,'*',{integer,203,256},{integer,206,512}}},
      {integer,612,1}}]}]},
 {function,614,no_segs,1,
  [{clause,614,
    [{var,614,'NoSlots'}],
    [],
    [{op,615,'+',
      {op,615,'div',
       {op,615,'-',{var,615,'NoSlots'},{integer,615,1}},
       {integer,203,256}},
      {integer,615,1}}]}]},
 {function,625,bulk_input,3,
  [{clause,625,
    [{var,625,'Head'},{var,625,'InitFun'},{var,625,'_Cntrs'}],
    [],
    [{call,626,
      {atom,626,bulk_input},
      [{var,626,'Head'},
       {var,626,'InitFun'},
       {call,626,{atom,626,make_ref},[]},
       {integer,626,0}]}]}]},
 {function,628,bulk_input,4,
  [{clause,628,
    [{var,628,'Head'},{var,628,'InitFun'},{var,628,'Ref'},{var,628,'Seq'}],
    [],
    [{'fun',629,
      {clauses,
       [{clause,629,
         [{atom,629,close}],
         [],
         [{match,630,
           {var,630,'_'},
           {'catch',630,{call,630,{var,630,'InitFun'},[{atom,630,close}]}}}]},
        {clause,631,
         [{atom,631,read}],
         [],
         [{'case',632,
           {'catch',632,
            {tuple,632,
             [{var,632,'Ref'},
              {call,632,{var,632,'InitFun'},[{atom,632,read}]}]}},
           [{clause,633,
             [{tuple,633,[{var,633,'Ref'},{atom,633,end_of_input}]}],
             [],
             [{atom,634,end_of_input}]},
            {clause,635,
             [{tuple,635,
               [{var,635,'Ref'},
                {tuple,635,[{var,635,'L0'},{var,635,'NewInitFun'}]}]}],
             [[{call,635,{atom,635,is_list},[{var,635,'L0'}]},
               {call,636,{atom,636,is_function},[{var,636,'NewInitFun'}]}]],
             [{match,637,
               {var,637,'Kp'},
               {call,637,
                {remote,637,{atom,637,erlang},{atom,637,element}},
                [{integer,637,11},{var,637,'Head'}]}},
              {'case',638,
               {'catch',638,
                {call,638,
                 {atom,638,bulk_objects},
                 [{var,638,'L0'},
                  {var,638,'Head'},
                  {var,638,'Kp'},
                  {var,638,'Seq'},
                  {nil,638}]}},
               [{clause,639,
                 [{tuple,639,[{atom,639,'EXIT'},{var,639,'_Error'}]}],
                 [],
                 [{match,640,
                   {var,640,'_'},
                   {'catch',640,
                    {call,640,{var,640,'NewInitFun'},[{atom,640,close}]}}},
                  {tuple,641,
                   [{atom,641,error},{atom,641,invalid_objects_list}]}]},
                {clause,642,
                 [{tuple,642,[{var,642,'L'},{var,642,'NSeq'}]}],
                 [],
                 [{tuple,643,
                   [{var,643,'L'},
                    {call,643,
                     {atom,643,bulk_input},
                     [{var,643,'Head'},
                      {var,643,'NewInitFun'},
                      {var,643,'Ref'},
                      {var,643,'NSeq'}]}]}]}]}]},
            {clause,645,
             [{tuple,645,[{var,645,'Ref'},{var,645,'Value'}]}],
             [],
             [{tuple,646,
               [{atom,646,error},
                {tuple,646,[{atom,646,init_fun},{var,646,'Value'}]}]}]},
            {clause,647,
             [{var,647,'Error'}],
             [],
             [{call,648,
               {atom,648,throw},
               [{tuple,648,
                 [{atom,648,thrown},{var,648,'Error'}]}]}]}]}]}]}}]}]},
 {function,652,bulk_objects,5,
  [{clause,652,
    [{cons,652,{var,652,'T'},{var,652,'Ts'}},
     {var,652,'Head'},
     {var,652,'Kp'},
     {var,652,'Seq'},
     {var,652,'L'}],
    [],
    [{match,653,
      {var,653,'BT'},
      {call,653,{atom,653,term_to_binary},[{var,653,'T'}]}},
     {match,654,
      {var,654,'Key'},
      {call,654,{atom,654,element},[{var,654,'Kp'},{var,654,'T'}]}},
     {call,655,
      {atom,655,bulk_objects},
      [{var,655,'Ts'},
       {var,655,'Head'},
       {var,655,'Kp'},
       {op,655,'+',{var,655,'Seq'},{integer,655,1}},
       {cons,655,
        {call,655,
         {atom,655,make_object},
         [{var,655,'Head'},{var,655,'Key'},{var,655,'Seq'},{var,655,'BT'}]},
        {var,655,'L'}}]}]},
   {clause,656,
    [{nil,656},{var,656,'_Head'},{var,656,'Kp'},{var,656,'Seq'},{var,656,'L'}],
    [[{call,656,{atom,656,is_integer},[{var,656,'Kp'}]},
      {call,656,{atom,656,is_integer},[{var,656,'Seq'}]}]],
    [{tuple,657,[{var,657,'L'},{var,657,'Seq'}]}]}]},
 {function,679,output_objs,4,
  [{clause,679,
    [{var,679,'OldV'},{var,679,'Head'},{var,679,'SlotNums'},{var,679,'Cntrs'}],
    [[{op,679,'=<',{var,679,'OldV'},{integer,679,9}}]],
    [{'fun',680,
      {clauses,
       [{clause,680,
         [{atom,680,close}],
         [],
         [{match,683,{var,683,'Cache'},{tuple,662,[]}},
          {match,684,{var,684,'Acc'},{nil,684}},
          {match,685,
           {atom,685,true},
           {call,685,
            {remote,685,{atom,685,ets},{atom,685,insert}},
            [{var,685,'Cntrs'},
             {tuple,685,
              [{integer,659,1},{integer,685,0},{nil,685},{integer,685,0}]}]}},
          {match,686,
           {atom,686,true},
           {call,686,
            {remote,686,{atom,686,ets},{atom,686,insert}},
            [{var,686,'Cntrs'},
             {tuple,686,[{atom,675,no},{integer,686,0},{integer,686,0}]}]}},
          {match,687,
           {var,687,'Fun'},
           {call,687,
            {atom,687,output_objs2},
            [{atom,687,foo},
             {var,687,'Acc'},
             {var,687,'OldV'},
             {var,687,'Head'},
             {var,687,'Cache'},
             {var,687,'Cntrs'},
             {var,688,'SlotNums'},
             {atom,688,bar}]}},
          {call,689,{var,689,'Fun'},[{atom,689,close}]}]},
        {clause,690,
         [{nil,690}],
         [],
         [{call,691,
           {atom,691,output_objs},
           [{var,691,'OldV'},
            {var,691,'Head'},
            {var,691,'SlotNums'},
            {var,691,'Cntrs'}]}]},
        {clause,692,
         [{var,692,'L'}],
         [],
         [{match,696,
           {atom,696,true},
           {call,696,
            {remote,696,{atom,696,ets},{atom,696,delete_all_objects}},
            [{var,696,'Cntrs'}]}},
          {match,697,
           {atom,697,true},
           {call,697,
            {remote,697,{atom,697,ets},{atom,697,insert}},
            [{var,697,'Cntrs'},
             {tuple,697,[{atom,675,no},{integer,697,0},{integer,697,0}]}]}},
          {match,698,
           {var,698,'Es'},
           {call,698,
            {atom,698,bin2term},
            [{var,698,'L'},
             {var,698,'OldV'},
             {call,698,
              {remote,698,{atom,698,erlang},{atom,698,element}},
              [{integer,698,11},{var,698,'Head'}]}]}},
          {match,701,{var,701,'Cache'},{tuple,662,[]}},
          {match,702,
           {tuple,702,[{var,702,'NE'},{var,702,'NAcc'},{var,702,'NCache'}]},
           {call,702,
            {atom,702,output_slots},
            [{var,702,'Es'},
             {var,702,'Head'},
             {var,702,'Cache'},
             {var,702,'Cntrs'},
             {integer,702,0},
             {integer,702,0}]}},
          {call,703,
           {atom,703,output_objs2},
           [{var,703,'NE'},
            {var,703,'NAcc'},
            {var,703,'OldV'},
            {var,703,'Head'},
            {var,703,'NCache'},
            {var,703,'Cntrs'},
            {var,703,'SlotNums'},
            {integer,703,1}]}]}]}}]}]},
 {function,706,output_objs2,8,
  [{clause,706,
    [{var,706,'E'},
     {var,706,'Acc'},
     {var,706,'OldV'},
     {var,706,'Head'},
     {var,706,'Cache'},
     {var,706,'SizeT'},
     {var,706,'SlotNums'},
     {integer,706,0}],
    [],
    [{match,707,
      {var,707,'NCache'},
      {call,707,
       {atom,707,write_all_sizes},
       [{var,707,'Cache'},
        {var,707,'SizeT'},
        {var,707,'Head'},
        {atom,707,more}]}},
     {match,709,
      {var,709,'Max'},
      {call,709,
       {remote,709,{atom,709,erlang},{atom,709,max}},
       [{integer,709,1},
        {call,709,
         {remote,709,{atom,709,erlang},{atom,709,min}},
         [{call,709,{atom,709,tuple_size},[{var,709,'NCache'}]},
          {integer,709,10}]}]}},
     {call,710,
      {atom,710,output_objs2},
      [{var,710,'E'},
       {var,710,'Acc'},
       {var,710,'OldV'},
       {var,710,'Head'},
       {var,710,'NCache'},
       {var,710,'SizeT'},
       {var,710,'SlotNums'},
       {var,710,'Max'}]}]},
   {clause,711,
    [{var,711,'E'},
     {var,711,'Acc'},
     {var,711,'OldV'},
     {var,711,'Head'},
     {var,711,'Cache'},
     {var,711,'SizeT'},
     {var,711,'SlotNums'},
     {var,711,'ChunkI'}],
    [],
    [{'fun',712,
      {clauses,
       [{clause,712,
         [{atom,712,close}],
         [],
         [{match,713,
           {tuple,713,[{var,713,'_'},{nil,713},{var,713,'Cache1'}]},
           {'if',714,
            [{clause,715,[],
              [[{op,715,'=:=',{var,715,'Acc'},{nil,715}}]],
              [{tuple,715,[{atom,715,foo},{nil,715},{var,715,'Cache'}]}]},
             {clause,716,[],
              [[{atom,716,true}]],
              [{call,716,
                {atom,716,output_slot},
                [{var,716,'Acc'},
                 {var,716,'Head'},
                 {var,716,'Cache'},
                 {nil,716},
                 {var,716,'SizeT'},
                 {integer,716,0},
                 {integer,716,0}]}]}]}},
          {match,718,
           {var,718,'_NCache'},
           {call,718,
            {atom,718,write_all_sizes},
            [{var,718,'Cache1'},
             {var,718,'SizeT'},
             {var,718,'Head'},
             {atom,718,no_more}]}},
          {match,719,
           {var,719,'SegSz'},
           {op,278,'*',{integer,202,512},{integer,278,4}}},
          {match,720,
           {tuple,720,[{var,720,'_'},{var,720,'SegEnd'},{var,720,'_'}]},
           {call,720,
            {remote,720,{atom,720,dets_utils},{atom,720,alloc}},
            [{var,720,'Head'},
             {call,720,{atom,720,adjsz},[{var,720,'SegSz'}]}]}},
          {match,721,
           {cons,721,
            {tuple,721,
             [{atom,675,no},{var,721,'NoObjects'},{var,721,'NoKeys'}]},
            {nil,721}},
           {call,721,
            {remote,721,{atom,721,ets},{atom,721,lookup}},
            [{var,721,'SizeT'},{atom,675,no}]}},
          {match,722,
           {var,722,'Head1'},
           {call,722,
            {remote,722,{atom,722,erlang},{atom,722,setelement}},
            [{integer,722,7},
             {call,722,
              {remote,722,{atom,722,erlang},{atom,722,setelement}},
              [{integer,722,6},{var,722,'Head'},{var,722,'NoObjects'}]},
             {var,722,'NoKeys'}]}},
          {match,723,
           {atom,723,true},
           {call,723,
            {remote,723,{atom,723,ets},{atom,723,delete}},
            [{var,723,'SizeT'},{atom,675,no}]}},
          {match,724,
           {tuple,724,
            [{var,724,'NewHead'},
             {var,724,'NL'},
             {var,724,'_MaxSz'},
             {var,724,'_End'}]},
           {call,724,
            {atom,724,allocate_all_objects},
            [{var,724,'Head1'},{var,724,'SizeT'}]}},
          {call,729,
           {atom,729,segment_file},
           [{var,729,'SizeT'},
            {var,729,'NewHead'},
            {var,729,'NL'},
            {var,729,'SegEnd'}]},
          {match,730,
           {tuple,730,
            [{var,730,'MinSlots'},
             {var,730,'EstNoSlots'},
             {var,730,'MaxSlots'}]},
           {var,730,'SlotNums'}},
          {'if',731,
           [{clause,732,[],
             [[{op,732,'=:=',{var,732,'EstNoSlots'},{atom,732,bulk_init}}]],
             [{tuple,733,
               [{atom,733,ok},{integer,733,0},{var,733,'NewHead'}]}]},
            {clause,734,[],
             [[{atom,734,true}]],
             [{match,735,
               {var,735,'EstNoSegs'},
               {call,735,{atom,735,no_segs},[{var,735,'EstNoSlots'}]}},
              {match,736,
               {var,736,'MinNoSegs'},
               {call,736,{atom,736,no_segs},[{var,736,'MinSlots'}]}},
              {match,737,
               {var,737,'MaxNoSegs'},
               {call,737,{atom,737,no_segs},[{var,737,'MaxSlots'}]}},
              {match,738,
               {var,738,'NoSegs'},
               {call,738,{atom,738,no_segs},[{var,738,'NoKeys'}]}},
              {match,739,
               {var,739,'Diff'},
               {call,739,
                {atom,739,abs},
                [{op,739,'-',{var,739,'NoSegs'},{var,739,'EstNoSegs'}}]}},
              {'if',740,
               [{clause,741,[],
                 [[{op,741,'>',{var,741,'Diff'},{integer,741,5}},
                   {op,741,'=<',{var,741,'NoSegs'},{var,741,'MaxNoSegs'}},
                   {op,741,'>=',{var,741,'NoSegs'},{var,741,'MinNoSegs'}}]],
                 [{tuple,742,[{atom,742,try_again},{var,742,'NoKeys'}]}]},
                {clause,743,[],
                 [[{atom,743,true}]],
                 [{tuple,744,
                   [{atom,744,ok},
                    {integer,744,0},
                    {var,744,'NewHead'}]}]}]}]}]}]},
        {clause,747,
         [{var,747,'L'}],
         [],
         [{match,748,
           {var,748,'Es'},
           {call,748,
            {atom,748,bin2term},
            [{var,748,'L'},
             {var,748,'OldV'},
             {call,748,
              {remote,748,{atom,748,erlang},{atom,748,element}},
              [{integer,748,11},{var,748,'Head'}]}]}},
          {match,749,
           {tuple,749,[{var,749,'NE'},{var,749,'NAcc'},{var,749,'NCache'}]},
           {call,750,
            {atom,750,output_slots},
            [{var,750,'E'},
             {var,750,'Es'},
             {var,750,'Acc'},
             {var,750,'Head'},
             {var,750,'Cache'},
             {var,750,'SizeT'},
             {integer,750,0},
             {integer,750,0}]}},
          {call,751,
           {atom,751,output_objs2},
           [{var,751,'NE'},
            {var,751,'NAcc'},
            {var,751,'OldV'},
            {var,751,'Head'},
            {var,751,'NCache'},
            {var,751,'SizeT'},
            {var,751,'SlotNums'},
            {op,752,'-',{var,752,'ChunkI'},{integer,752,1}}]}]}]}}]}]},
 {function,757,compact_init,3,
  [{clause,757,
    [{var,757,'ReadHead'},{var,757,'WriteHead'},{var,757,'TableParameters'}],
    [],
    [{match,758,
      {var,758,'SizeT'},
      {call,758,
       {remote,758,{atom,758,ets},{atom,758,new}},
       [{atom,758,dets_compact},{nil,758}]}},
     {match,759,
      {tuple,759,
       [{atom,759,head},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'NoObjects'},
        {var,759,'NoKeys'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'},
        {var,759,'_'}]},
      {var,759,'ReadHead'}},
     {match,761,
      {var,761,'NoObjsPerSize'},
      {call,264,
       {remote,264,{atom,264,erlang},{atom,264,element}},
       [{integer,264,15},{var,761,'TableParameters'}]}},
     {match,762,
      {tuple,762,
       [{var,762,'NewWriteHead'},
        {var,762,'Bases'},
        {var,762,'SegAddr'},
        {var,762,'SegEnd'}]},
      {call,763,
       {atom,763,prepare_file_init},
       [{var,763,'NoObjects'},
        {var,763,'NoKeys'},
        {var,763,'NoObjsPerSize'},
        {var,763,'SizeT'},
        {var,763,'WriteHead'}]}},
     {match,765,
      {var,765,'Input'},
      {call,765,
       {atom,765,compact_input},
       [{var,765,'ReadHead'},
        {var,765,'NewWriteHead'},
        {var,765,'SizeT'},
        {call,765,{atom,765,tuple_size},[{var,765,'Bases'}]}]}},
     {match,766,
      {var,766,'Output'},
      {call,766,
       {atom,766,fast_output},
       [{var,766,'NewWriteHead'},
        {var,766,'SizeT'},
        {var,766,'Bases'},
        {var,766,'SegAddr'},
        {var,766,'SegEnd'}]}},
     {match,767,
      {var,767,'TmpDir'},
      {call,767,
       {remote,767,{atom,767,filename},{atom,767,dirname}},
       [{call,767,
         {remote,767,{atom,767,erlang},{atom,767,element}},
         [{integer,767,23},{var,767,'NewWriteHead'}]}]}},
     {match,768,
      {var,768,'Reply'},
      {'catch',768,
       {call,768,
        {remote,768,{atom,768,file_sorter},{atom,768,sort}},
        [{var,768,'Input'},
         {var,768,'Output'},
         {cons,769,
          {tuple,769,[{atom,769,format},{atom,769,binary}]},
          {cons,769,
           {tuple,769,[{atom,769,tmpdir},{var,769,'TmpDir'}]},
           {cons,770,
            {tuple,770,[{atom,770,header},{integer,770,1}]},
            {nil,770}}}}]}}},
     {call,771,
      {remote,771,{atom,771,ets},{atom,771,delete}},
      [{var,771,'SizeT'}]},
     {var,772,'Reply'}]}]},
 {function,774,compact_input,4,
  [{clause,774,
    [{var,774,'Head'},{var,774,'WHead'},{var,774,'SizeT'},{var,774,'NoSizes'}],
    [],
    [{match,775,
      {var,775,'L'},
      {call,775,
       {remote,775,{atom,775,dets_utils},{atom,775,all_allocated_as_list}},
       [{var,775,'Head'}]}},
     {match,776,
      {var,776,'Cache'},
      {call,666,
       {atom,666,list_to_tuple},
       [{op,666,'++',
         {call,666,{atom,666,tuple_to_list},[{tuple,662,[]}]},
         {call,666,
          {remote,666,{atom,666,lists},{atom,666,duplicate}},
          [{op,666,'-',
            {var,776,'NoSizes'},
            {call,666,{atom,666,tuple_size},[{tuple,662,[]}]}},
           {cons,776,{integer,776,0},{nil,776}}]}}]}},
     {call,777,
      {atom,777,compact_input},
      [{var,777,'Head'},
       {var,777,'WHead'},
       {var,777,'SizeT'},
       {var,777,'Cache'},
       {var,777,'L'}]}]}]},
 {function,779,compact_input,5,
  [{clause,779,
    [{var,779,'Head'},
     {var,779,'WHead'},
     {var,779,'SizeT'},
     {var,779,'Cache'},
     {var,779,'L'}],
    [],
    [{'fun',780,
      {clauses,
       [{clause,780,[{atom,780,close}],[],[{atom,781,ok}]},
        {clause,782,
         [{atom,782,read}],
         [],
         [{call,783,
           {atom,783,compact_read},
           [{var,783,'Head'},
            {var,783,'WHead'},
            {var,783,'SizeT'},
            {var,783,'Cache'},
            {var,783,'L'},
            {integer,783,0},
            {nil,783},
            {integer,783,0}]}]}]}}]}]},
 {function,786,compact_read,8,
  [{clause,786,
    [{var,786,'_Head'},
     {var,786,'WHead'},
     {var,786,'SizeT'},
     {var,786,'Cache'},
     {nil,786},
     {var,786,'_Min'},
     {nil,786},
     {var,786,'_ASz'}],
    [],
    [{match,787,
      {var,787,'_'},
      {call,787,
       {atom,787,fast_write_all_sizes},
       [{var,787,'Cache'},{var,787,'SizeT'},{var,787,'WHead'}]}},
     {atom,788,end_of_input}]},
   {clause,789,
    [{var,789,'Head'},
     {var,789,'WHead'},
     {var,789,'SizeT'},
     {var,789,'Cache'},
     {var,789,'L'},
     {var,789,'Min'},
     {var,789,'SegBs'},
     {var,789,'ASz'}],
    [[{op,790,'>=',
       {op,790,'+',{var,790,'ASz'},{var,790,'Min'}},
       {op,670,'*',{integer,670,60},{integer,38,8192}}},
      {op,790,'>',{var,790,'ASz'},{integer,790,0}}]],
    [{match,791,
      {var,791,'NCache'},
      {call,791,
       {atom,791,fast_write_all_sizes},
       [{var,791,'Cache'},{var,791,'SizeT'},{var,791,'WHead'}]}},
     {tuple,792,
      [{var,792,'SegBs'},
       {call,792,
        {atom,792,compact_input},
        [{var,792,'Head'},
         {var,792,'WHead'},
         {var,792,'SizeT'},
         {var,792,'NCache'},
         {var,792,'L'}]}]}]},
   {clause,793,
    [{var,793,'Head'},
     {var,793,'WHead'},
     {var,793,'SizeT'},
     {var,793,'Cache'},
     {cons,793,{cons,793,{var,793,'From'},{var,793,'To'}},{var,793,'L'}},
     {var,793,'Min'},
     {var,793,'SegBs'},
     {var,793,'ASz'}],
    [],
    [{match,794,
      {var,794,'Max'},
      {call,794,
       {remote,794,{atom,794,erlang},{atom,794,max}},
       [{op,794,'*',{integer,38,8192},{integer,794,3}},{var,794,'Min'}]}},
     {'case',795,
      {call,795,{atom,795,check_pread_arg},[{var,795,'Max'},{var,795,'Head'}]},
      [{clause,796,
        [{atom,796,true}],
        [],
        [{'case',797,
          {call,797,
           {remote,797,{atom,797,dets_utils},{atom,797,pread_n}},
           [{call,797,
             {remote,797,{atom,797,erlang},{atom,797,element}},
             [{integer,797,5},{var,797,'Head'}]},
            {var,797,'From'},
            {var,797,'Max'}]},
          [{clause,798,[{atom,798,eof}],[],[{atom,801,not_ok}]},
           {clause,802,
            [{var,802,'Bin1'}],
            [[{op,802,'<',
               {call,802,{atom,802,byte_size},[{var,802,'Bin1'}]},
               {var,802,'Min'}}]],
            [{match,804,
              {var,804,'Pad'},
              {op,804,'-',
               {var,804,'Min'},
               {call,804,{atom,804,byte_size},[{var,804,'Bin1'}]}}},
             {match,805,
              {var,805,'NewBin'},
              {bin,805,
               [{bin_element,805,{var,805,'Bin1'},default,[binary]},
                {bin_element,805,
                 {integer,805,0},
                 {var,805,'Pad'},
                 [{unit,8}]}]}},
             {call,806,
              {atom,806,compact_objs},
              [{var,806,'Head'},
               {var,806,'WHead'},
               {var,806,'SizeT'},
               {var,806,'NewBin'},
               {var,806,'L'},
               {var,807,'From'},
               {var,807,'To'},
               {var,807,'SegBs'},
               {var,807,'Cache'},
               {var,807,'ASz'}]}]},
           {clause,808,
            [{var,808,'NewBin'}],
            [],
            [{call,809,
              {atom,809,compact_objs},
              [{var,809,'Head'},
               {var,809,'WHead'},
               {var,809,'SizeT'},
               {var,809,'NewBin'},
               {var,809,'L'},
               {var,810,'From'},
               {var,810,'To'},
               {var,810,'SegBs'},
               {var,810,'Cache'},
               {var,810,'ASz'}]}]}]}]},
       {clause,812,[{atom,812,false}],[],[{atom,813,not_ok}]}]}]}]},
 {function,816,compact_objs,10,
  [{clause,816,
    [{var,816,'Head'},
     {var,816,'WHead'},
     {var,816,'SizeT'},
     {var,816,'Bin'},
     {var,816,'L'},
     {var,816,'From'},
     {var,816,'To'},
     {var,816,'SegBs'},
     {var,816,'Cache'},
     {var,816,'ASz'}],
    [[{op,817,'=:=',{var,817,'From'},{var,817,'To'}}]],
    [{'case',818,
      {var,818,'L'},
      [{clause,819,
        [{nil,819}],
        [],
        [{tuple,820,
          [{var,820,'SegBs'},
           {call,820,
            {atom,820,compact_input},
            [{var,820,'Head'},
             {var,820,'WHead'},
             {var,820,'SizeT'},
             {var,820,'Cache'},
             {var,820,'L'}]}]}]},
       {clause,821,
        [{cons,821,
          {cons,821,{var,821,'From1'},{var,821,'To1'}},
          {var,821,'L1'}}],
        [],
        [{match,822,
          {var,822,'Skip1'},
          {op,822,'-',{var,822,'From1'},{var,822,'From'}}},
         {'case',823,
          {var,823,'Bin'},
          [{clause,824,
            [{bin,824,
              [{bin_element,824,{var,824,'_'},{var,824,'Skip1'},[binary]},
               {bin_element,824,{var,824,'NewBin'},default,[binary]}]}],
            [],
            [{call,825,
              {atom,825,compact_objs},
              [{var,825,'Head'},
               {var,825,'WHead'},
               {var,825,'SizeT'},
               {var,825,'NewBin'},
               {var,825,'L1'},
               {var,825,'From1'},
               {var,825,'To1'},
               {var,826,'SegBs'},
               {var,826,'Cache'},
               {var,826,'ASz'}]}]},
           {clause,827,
            [{var,827,'_'}],
            [[{op,827,'<',
               {call,827,{atom,827,byte_size},[{var,827,'Bin'}]},
               {var,827,'Skip1'}}]],
            [{call,828,
              {atom,828,compact_read},
              [{var,828,'Head'},
               {var,828,'WHead'},
               {var,828,'SizeT'},
               {var,828,'Cache'},
               {var,828,'L'},
               {integer,828,0},
               {var,828,'SegBs'},
               {var,828,'ASz'}]}]}]}]}]}]},
   {clause,831,
    [{var,831,'Head'},
     {var,831,'WHead'},
     {var,831,'SizeT'},
     {match,831,
      {bin,831,
       [{bin_element,831,{var,831,'Size'},{integer,831,32},default},
        {bin_element,831,{var,831,'St'},{integer,831,32},default},
        {bin_element,831,{var,831,'_Sz'},{integer,831,32},default},
        {bin_element,831,{var,831,'KO'},default,[binary]}]},
      {var,831,'Bin'}},
     {var,832,'L'},
     {var,832,'From'},
     {var,832,'To'},
     {var,832,'SegBs'},
     {var,832,'Cache'},
     {var,832,'ASz'}],
    [[{op,832,'=:=',{var,832,'St'},{integer,34,305419896}}]],
    [{match,833,
      {var,833,'LSize'},
      {call,833,{atom,833,sz2pos},[{var,833,'Size'}]}},
     {match,834,
      {var,834,'Size2'},
      {op,42,'bsl',
       {integer,42,1},
       {op,834,'-',{var,834,'LSize'},{integer,834,1}}}},
     {'if',835,
      [{clause,836,[],
        [[{op,836,'>=',
           {call,836,{atom,836,byte_size},[{var,836,'Bin'}]},
           {var,836,'Size2'}}]],
        [{match,837,
          {var,837,'NASz'},
          {op,837,'+',{var,837,'ASz'},{var,837,'Size2'}}},
         {match,838,
          {bin,838,
           [{bin_element,838,{var,838,'SlotObjs'},{var,838,'Size2'},[binary]},
            {bin_element,838,{var,838,'NewBin'},default,[binary]}]},
          {var,838,'Bin'}},
         {match,839,
          {var,839,'Term'},
          {'if',839,
           [{clause,840,[],
             [[{op,840,'=:=',
                {call,840,
                 {remote,840,{atom,840,erlang},{atom,840,element}},
                 [{integer,840,10},{var,840,'Head'}]},
                {atom,840,set}}]],
             [{call,841,{atom,841,binary_to_term},[{var,841,'KO'}]}]},
            {clause,842,[],
             [[{atom,842,true}]],
             [{match,843,
               {bin,843,
                [{bin_element,843,{var,843,'_KSz'},{integer,843,32},default},
                 {bin_element,843,{var,843,'B2'},default,[binary]}]},
               {var,843,'KO'}},
              {call,844,{atom,844,binary_to_term},[{var,844,'B2'}]}]}]}},
         {match,846,
          {var,846,'Key'},
          {call,846,
           {atom,846,element},
           [{call,846,
             {remote,846,{atom,846,erlang},{atom,846,element}},
             [{integer,846,11},{var,846,'Head'}]},
            {var,846,'Term'}]}},
         {match,847,
          {var,847,'Slot'},
          {call,847,{atom,847,db_hash},[{var,847,'Key'},{var,847,'Head'}]}},
         {match,848,
          {var,848,'From1'},
          {op,848,'+',{var,848,'From'},{var,848,'Size2'}}},
         {match,849,
          {cons,849,{var,849,'Addr'},{var,849,'AL'}},
          {call,664,{atom,664,element},[{var,849,'LSize'},{var,849,'Cache'}]}},
         {match,850,
          {var,850,'NCache'},
          {call,663,
           {atom,663,setelement},
           [{var,850,'LSize'},
            {var,850,'Cache'},
            {cons,850,
             {op,850,'+',{var,850,'Addr'},{var,850,'Size2'}},
             {cons,850,{var,850,'SlotObjs'},{var,850,'AL'}}}]}},
         {match,851,
          {var,851,'NSegBs'},
          {cons,851,
           {bin,851,
            [{bin_element,851,{var,851,'Slot'},{integer,851,32},default},
             {bin_element,851,{var,851,'Size'},{integer,851,32},default},
             {bin_element,851,{var,851,'Addr'},{integer,851,32},default},
             {bin_element,851,{var,851,'LSize'},{integer,851,8},default}]},
           {var,851,'SegBs'}}},
         {call,852,
          {atom,852,compact_objs},
          [{var,852,'Head'},
           {var,852,'WHead'},
           {var,852,'SizeT'},
           {var,852,'NewBin'},
           {var,852,'L'},
           {var,852,'From1'},
           {var,853,'To'},
           {var,853,'NSegBs'},
           {var,853,'NCache'},
           {var,853,'NASz'}]}]},
       {clause,854,[],
        [[{atom,854,true}]],
        [{call,855,
          {atom,855,compact_read},
          [{var,855,'Head'},
           {var,855,'WHead'},
           {var,855,'SizeT'},
           {var,855,'Cache'},
           {cons,855,{cons,855,{var,855,'From'},{var,855,'To'}},{var,855,'L'}},
           {var,856,'Size2'},
           {var,856,'SegBs'},
           {var,856,'ASz'}]}]}]}]},
   {clause,858,
    [{var,858,'Head'},
     {var,858,'WHead'},
     {var,858,'SizeT'},
     {match,858,
      {bin,858,
       [{bin_element,858,{var,858,'_'},{integer,858,32},default},
        {bin_element,858,{var,858,'_St'},{integer,858,32},default},
        {bin_element,858,{var,858,'_'},{integer,858,32},default},
        {bin_element,858,{var,858,'_'},default,[binary]}]},
      {var,858,'Bin'}},
     {var,859,'L'},
     {var,859,'From'},
     {var,859,'To'},
     {var,859,'SegBs'},
     {var,859,'Cache'},
     {var,859,'ASz'}],
    [[{op,860,'>=',
       {call,860,{atom,860,byte_size},[{var,860,'Bin'}]},
       {op,278,'*',{integer,202,512},{integer,278,4}}}]],
    [{match,861,
      {bin,861,
       [{bin_element,861,
         {var,861,'_'},
         {op,278,'*',{integer,202,512},{integer,278,4}},
         [binary]},
        {bin_element,861,{var,861,'NewBin'},default,[binary]}]},
      {var,861,'Bin'}},
     {call,862,
      {atom,862,compact_objs},
      [{var,862,'Head'},
       {var,862,'WHead'},
       {var,862,'SizeT'},
       {var,862,'NewBin'},
       {var,862,'L'},
       {op,862,'+',
        {var,862,'From'},
        {op,278,'*',{integer,202,512},{integer,278,4}}},
       {var,863,'To'},
       {var,863,'SegBs'},
       {var,863,'Cache'},
       {var,863,'ASz'}]}]},
   {clause,864,
    [{var,864,'Head'},
     {var,864,'WHead'},
     {var,864,'SizeT'},
     {match,864,
      {bin,864,
       [{bin_element,864,{var,864,'_'},{integer,864,32},default},
        {bin_element,864,{var,864,'_St'},{integer,864,32},default},
        {bin_element,864,{var,864,'_'},{integer,864,32},default},
        {bin_element,864,{var,864,'_'},default,[binary]}]},
      {var,864,'Bin'}},
     {var,865,'L'},
     {var,865,'From'},
     {var,865,'To'},
     {var,865,'SegBs'},
     {var,865,'Cache'},
     {var,865,'ASz'}],
    [[{op,866,'<',
       {call,866,{atom,866,byte_size},[{var,866,'Bin'}]},
       {op,278,'*',{integer,202,512},{integer,278,4}}}]],
    [{call,867,
      {atom,867,compact_read},
      [{var,867,'Head'},
       {var,867,'WHead'},
       {var,867,'SizeT'},
       {var,867,'Cache'},
       {cons,867,{cons,867,{var,867,'From'},{var,867,'To'}},{var,867,'L'}},
       {op,278,'*',{integer,202,512},{integer,278,4}},
       {var,868,'SegBs'},
       {var,868,'ASz'}]}]},
   {clause,869,
    [{var,869,'Head'},
     {var,869,'WHead'},
     {var,869,'SizeT'},
     {var,869,'_Bin'},
     {var,869,'L'},
     {var,869,'From'},
     {var,869,'To'},
     {var,869,'SegBs'},
     {var,869,'Cache'},
     {var,869,'ASz'}],
    [],
    [{call,870,
      {atom,870,compact_read},
      [{var,870,'Head'},
       {var,870,'WHead'},
       {var,870,'SizeT'},
       {var,870,'Cache'},
       {cons,870,{cons,870,{var,870,'From'},{var,870,'To'}},{var,870,'L'}},
       {integer,870,0},
       {var,870,'SegBs'},
       {var,870,'ASz'}]}]}]},
 {function,876,read_bchunks,2,
  [{clause,876,
    [{var,876,'Head'},{var,876,'L'}],
    [],
    [{call,877,
      {atom,877,read_bchunks},
      [{var,877,'Head'},
       {var,877,'L'},
       {integer,877,0},
       {nil,877},
       {integer,877,0}]}]}]},
 {function,879,read_bchunks,5,
  [{clause,879,
    [{var,879,'_Head'},
     {var,879,'L'},
     {var,879,'Min'},
     {var,879,'Bs'},
     {var,879,'ASz'}],
    [[{op,879,'>=',
       {op,879,'+',{var,879,'ASz'},{var,879,'Min'}},
       {op,879,'*',{integer,879,4},{integer,38,8192}}},
      {op,880,'=/=',{var,880,'Bs'},{nil,880}}]],
    [{tuple,881,
      [{call,881,
        {remote,881,{atom,881,lists},{atom,881,reverse}},
        [{var,881,'Bs'}]},
       {var,881,'L'}]}]},
   {clause,882,
    [{var,882,'Head'},
     {tuple,882,[{var,882,'From'},{var,882,'To'},{var,882,'L'}]},
     {var,882,'Min'},
     {var,882,'Bs'},
     {var,882,'ASz'}],
    [],
    [{match,883,
      {var,883,'Max'},
      {call,883,
       {remote,883,{atom,883,erlang},{atom,883,max}},
       [{op,883,'*',{integer,38,8192},{integer,883,2}},{var,883,'Min'}]}},
     {'case',884,
      {call,884,{atom,884,check_pread_arg},[{var,884,'Max'},{var,884,'Head'}]},
      [{clause,885,
        [{atom,885,true}],
        [],
        [{'case',886,
          {call,886,
           {remote,886,{atom,886,dets_utils},{atom,886,pread_n}},
           [{call,886,
             {remote,886,{atom,886,erlang},{atom,886,element}},
             [{integer,886,5},{var,886,'Head'}]},
            {var,886,'From'},
            {var,886,'Max'}]},
          [{clause,887,
            [{atom,887,eof}],
            [],
            [{tuple,889,[{atom,889,error},{atom,889,premature_eof}]}]},
           {clause,890,
            [{var,890,'NewBin'}],
            [[{op,890,'>=',
               {call,890,{atom,890,byte_size},[{var,890,'NewBin'}]},
               {var,890,'Min'}}]],
            [{call,891,
              {atom,891,bchunks},
              [{var,891,'Head'},
               {var,891,'L'},
               {var,891,'NewBin'},
               {var,891,'Bs'},
               {var,891,'ASz'},
               {var,891,'From'},
               {var,891,'To'}]}]},
           {clause,892,
            [{var,892,'Bin1'}],
            [[{op,892,'=:=',
               {op,892,'-',{var,892,'To'},{var,892,'From'}},
               {var,892,'Min'}},
              {op,892,'=:=',{var,892,'L'},{bin,892,[]}}]],
            [{match,895,
              {var,895,'Pad'},
              {op,895,'-',
               {var,895,'Min'},
               {call,895,{atom,895,byte_size},[{var,895,'Bin1'}]}}},
             {match,896,
              {var,896,'NewBin'},
              {bin,896,
               [{bin_element,896,{var,896,'Bin1'},default,[binary]},
                {bin_element,896,
                 {integer,896,0},
                 {var,896,'Pad'},
                 [{unit,8}]}]}},
             {call,897,
              {atom,897,bchunks},
              [{var,897,'Head'},
               {var,897,'L'},
               {var,897,'NewBin'},
               {var,897,'Bs'},
               {var,897,'ASz'},
               {var,897,'From'},
               {var,897,'To'}]}]},
           {clause,898,
            [{var,898,'_'}],
            [],
            [{tuple,899,[{atom,899,error},{atom,899,premature_eof}]}]}]}]},
       {clause,901,
        [{atom,901,false}],
        [],
        [{tuple,902,
          [{atom,902,error},
           {call,902,
            {remote,902,{atom,902,dets_utils},{atom,902,bad_object}},
            [{atom,902,bad_object},
             {tuple,902,[{atom,902,read_bchunks},{var,902,'Max'}]}]}]}]}]}]}]},
 {function,905,bchunks,7,
  [{clause,905,
    [{var,905,'Head'},
     {var,905,'L'},
     {var,905,'Bin'},
     {var,905,'Bs'},
     {var,905,'ASz'},
     {var,905,'From'},
     {var,905,'To'}],
    [[{op,905,'=:=',{var,905,'From'},{var,905,'To'}}]],
    [{'if',906,
      [{clause,907,[],
        [[{op,907,'=:=',{var,907,'L'},{bin,907,[]}}]],
        [{tuple,908,
          [{atom,908,finished},
           {call,908,
            {remote,908,{atom,908,lists},{atom,908,reverse}},
            [{var,908,'Bs'}]}]}]},
       {clause,909,[],
        [[{atom,909,true}]],
        [{match,910,
          {bin,910,
           [{bin_element,910,{var,910,'From1'},{integer,910,32},default},
            {bin_element,910,{var,910,'To1'},{integer,910,32},default},
            {bin_element,910,{var,910,'L1'},default,[binary]}]},
          {var,910,'L'}},
         {match,911,
          {var,911,'Skip1'},
          {op,911,'-',{var,911,'From1'},{var,911,'From'}}},
         {'case',912,
          {var,912,'Bin'},
          [{clause,913,
            [{bin,913,
              [{bin_element,913,{var,913,'_'},{var,913,'Skip1'},[binary]},
               {bin_element,913,{var,913,'NewBin'},default,[binary]}]}],
            [],
            [{call,914,
              {atom,914,bchunks},
              [{var,914,'Head'},
               {var,914,'L1'},
               {var,914,'NewBin'},
               {var,914,'Bs'},
               {var,914,'ASz'},
               {var,914,'From1'},
               {var,914,'To1'}]}]},
           {clause,915,
            [{var,915,'_'}],
            [[{op,915,'<',
               {call,915,{atom,915,byte_size},[{var,915,'Bin'}]},
               {var,915,'Skip1'}}]],
            [{call,916,
              {atom,916,read_bchunks},
              [{var,916,'Head'},
               {tuple,916,[{var,916,'From1'},{var,916,'To1'},{var,916,'L1'}]},
               {integer,916,0},
               {var,916,'Bs'},
               {var,916,'ASz'}]}]}]}]}]}]},
   {clause,919,
    [{var,919,'Head'},
     {var,919,'L'},
     {match,919,
      {bin,919,
       [{bin_element,919,{var,919,'Size'},{integer,919,32},default},
        {bin_element,919,{var,919,'St'},{integer,919,32},default},
        {bin_element,919,{var,919,'_Sz'},{integer,919,32},default},
        {bin_element,919,{var,919,'KO'},default,[binary]}]},
      {var,919,'Bin'}},
     {var,919,'Bs'},
     {var,919,'ASz'},
     {var,920,'From'},
     {var,920,'To'}],
    [[{op,920,'=:=',{var,920,'St'},{integer,34,305419896}}],
     [{op,920,'=:=',{var,920,'St'},{integer,33,61591023}}]],
    [{match,921,
      {var,921,'LSize'},
      {call,921,{atom,921,sz2pos},[{var,921,'Size'}]}},
     {match,922,
      {var,922,'Size2'},
      {op,42,'bsl',
       {integer,42,1},
       {op,922,'-',{var,922,'LSize'},{integer,922,1}}}},
     {'if',923,
      [{clause,924,[],
        [[{op,924,'>=',
           {call,924,{atom,924,byte_size},[{var,924,'Bin'}]},
           {var,924,'Size2'}}]],
        [{match,925,
          {bin,925,
           [{bin_element,925,{var,925,'B0'},{var,925,'Size2'},[binary]},
            {bin_element,925,{var,925,'NewBin'},default,[binary]}]},
          {var,925,'Bin'}},
         {match,929,
          {var,929,'Term'},
          {'if',929,
           [{clause,930,[],
             [[{op,930,'=:=',
                {call,930,
                 {remote,930,{atom,930,erlang},{atom,930,element}},
                 [{integer,930,10},{var,930,'Head'}]},
                {atom,930,set}}]],
             [{call,931,{atom,931,binary_to_term},[{var,931,'KO'}]}]},
            {clause,932,[],
             [[{atom,932,true}]],
             [{match,933,
               {bin,933,
                [{bin_element,933,{var,933,'_KSz'},{integer,933,32},default},
                 {bin_element,933,{var,933,'B2'},default,[binary]}]},
               {var,933,'KO'}},
              {call,934,{atom,934,binary_to_term},[{var,934,'B2'}]}]}]}},
         {match,936,
          {var,936,'Key'},
          {call,936,
           {atom,936,element},
           [{call,936,
             {remote,936,{atom,936,erlang},{atom,936,element}},
             [{integer,936,11},{var,936,'Head'}]},
            {var,936,'Term'}]}},
         {match,937,
          {var,937,'Slot'},
          {call,937,{atom,937,db_hash},[{var,937,'Key'},{var,937,'Head'}]}},
         {match,938,
          {var,938,'B'},
          {tuple,938,[{var,938,'LSize'},{var,938,'Slot'},{var,938,'B0'}]}},
         {call,939,
          {atom,939,bchunks},
          [{var,939,'Head'},
           {var,939,'L'},
           {var,939,'NewBin'},
           {cons,939,{var,939,'B'},{var,939,'Bs'}},
           {op,939,'+',{var,939,'ASz'},{var,939,'Size2'}},
           {op,939,'+',{var,939,'From'},{var,939,'Size2'}},
           {var,939,'To'}]}]},
       {clause,940,[],
        [[{atom,940,true}]],
        [{call,941,
          {atom,941,read_bchunks},
          [{var,941,'Head'},
           {tuple,941,[{var,941,'From'},{var,941,'To'},{var,941,'L'}]},
           {var,941,'Size2'},
           {var,941,'Bs'},
           {var,941,'ASz'}]}]}]}]},
   {clause,943,
    [{var,943,'Head'},
     {var,943,'L'},
     {match,943,
      {bin,943,
       [{bin_element,943,{var,943,'_'},{integer,943,32},default},
        {bin_element,943,{var,943,'_St'},{integer,943,32},default},
        {bin_element,943,{var,943,'_'},{integer,943,32},default},
        {bin_element,943,{var,943,'_'},default,[binary]}]},
      {var,943,'Bin'}},
     {var,943,'Bs'},
     {var,943,'ASz'},
     {var,943,'From'},
     {var,943,'To'}],
    [[{op,944,'>=',
       {call,944,{atom,944,byte_size},[{var,944,'Bin'}]},
       {op,278,'*',{integer,202,512},{integer,278,4}}}]],
    [{match,945,
      {bin,945,
       [{bin_element,945,
         {var,945,'_'},
         {op,278,'*',{integer,202,512},{integer,278,4}},
         [binary]},
        {bin_element,945,{var,945,'NewBin'},default,[binary]}]},
      {var,945,'Bin'}},
     {call,946,
      {atom,946,bchunks},
      [{var,946,'Head'},
       {var,946,'L'},
       {var,946,'NewBin'},
       {var,946,'Bs'},
       {var,946,'ASz'},
       {op,946,'+',
        {var,946,'From'},
        {op,278,'*',{integer,202,512},{integer,278,4}}},
       {var,946,'To'}]}]},
   {clause,947,
    [{var,947,'Head'},
     {var,947,'L'},
     {match,947,
      {bin,947,
       [{bin_element,947,{var,947,'_'},{integer,947,32},default},
        {bin_element,947,{var,947,'_St'},{integer,947,32},default},
        {bin_element,947,{var,947,'_'},{integer,947,32},default},
        {bin_element,947,{var,947,'_'},default,[binary]}]},
      {var,947,'Bin'}},
     {var,947,'Bs'},
     {var,947,'ASz'},
     {var,947,'From'},
     {var,947,'To'}],
    [[{op,948,'<',
       {call,948,{atom,948,byte_size},[{var,948,'Bin'}]},
       {op,278,'*',{integer,202,512},{integer,278,4}}}]],
    [{call,949,
      {atom,949,read_bchunks},
      [{var,949,'Head'},
       {tuple,949,[{var,949,'From'},{var,949,'To'},{var,949,'L'}]},
       {op,278,'*',{integer,202,512},{integer,278,4}},
       {var,949,'Bs'},
       {var,949,'ASz'}]}]},
   {clause,950,
    [{var,950,'Head'},
     {var,950,'L'},
     {var,950,'_Bin'},
     {var,950,'Bs'},
     {var,950,'ASz'},
     {var,950,'From'},
     {var,950,'To'}],
    [],
    [{call,951,
      {atom,951,read_bchunks},
      [{var,951,'Head'},
       {tuple,951,[{var,951,'From'},{var,951,'To'},{var,951,'L'}]},
       {integer,951,0},
       {var,951,'Bs'},
       {var,951,'ASz'}]}]}]},
 {function,956,bchunk_init,2,
  [{clause,956,
    [{var,956,'Head'},{var,956,'InitFun'}],
    [],
    [{match,957,{var,957,'Ref'},{call,957,{atom,957,make_ref},[]}},
     {'case',959,
      {'catch',959,
       {tuple,959,
        [{var,959,'Ref'},{call,959,{var,959,'InitFun'},[{atom,959,read}]}]}},
      [{clause,960,
        [{tuple,960,[{var,960,'Ref'},{atom,960,end_of_input}]}],
        [],
        [{tuple,961,
          [{atom,961,error},
           {tuple,961,[{atom,961,init_fun},{atom,961,end_of_input}]}]}]},
       {clause,962,
        [{tuple,962,
          [{var,962,'Ref'},{tuple,962,[{nil,962},{var,962,'NInitFun'}]}]}],
        [[{call,962,{atom,962,is_function},[{var,962,'NInitFun'}]}]],
        [{call,963,
          {atom,963,bchunk_init},
          [{var,963,'Head'},{var,963,'NInitFun'}]}]},
       {clause,964,
        [{tuple,964,
          [{var,964,'Ref'},
           {tuple,964,
            [{cons,964,{var,964,'ParmsBin'},{var,964,'L'}},
             {var,964,'NInitFun'}]}]}],
        [[{call,965,{atom,965,is_list},[{var,965,'L'}]},
          {call,965,{atom,965,is_function},[{var,965,'NInitFun'}]}]],
        [{match,969,
          {tuple,966,
           [{atom,966,head},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'Fd'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'Type'},
            {var,966,'Kp'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'},
            {var,967,'Auto'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'},
            {var,967,'Cache'},
            {var,968,'Fname'},
            {var,966,'_'},
            {var,968,'Ram'},
            {var,969,'Tab'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'},
            {var,966,'_'}]},
          {var,969,'Head'}},
         {'case',970,
          {call,970,
           {atom,970,try_bchunk_header},
           [{var,970,'ParmsBin'},{var,970,'Head'}]},
          [{clause,971,
            [{tuple,971,[{atom,971,ok},{var,971,'Parms'}]}],
            [],
            [{match,974,
              {tuple,264,
               [{atom,264,'$hash2'},
                {var,264,'_'},
                {var,264,'_'},
                {var,264,'_'},
                {var,264,'_'},
                {var,264,'_'},
                {var,264,'_'},
                {var,264,'_'},
                {var,264,'_'},
                {var,264,'_'},
                {var,264,'_'},
                {var,264,'_'},
                {var,972,'NoObjects'},
                {var,973,'NoKeys'},
                {var,974,'NoObjsPerSize'}]},
              {var,974,'Parms'}},
             {match,975,
              {var,975,'CacheSz'},
              {call,975,
               {remote,975,{atom,975,dets_utils},{atom,975,cache_size}},
               [{var,975,'Cache'}]}},
             {match,976,
              {tuple,976,[{atom,976,ok},{var,976,'Head1'}]},
              {call,977,
               {atom,977,prep_table_copy},
               [{var,977,'Fd'},
                {var,977,'Tab'},
                {var,977,'Fname'},
                {var,977,'Type'},
                {var,978,'Kp'},
                {var,978,'Ram'},
                {var,978,'CacheSz'},
                {var,979,'Auto'},
                {var,979,'Parms'}]}},
             {match,980,
              {var,980,'SizeT'},
              {call,980,
               {remote,980,{atom,980,ets},{atom,980,new}},
               [{atom,980,dets_init},{nil,980}]}},
             {match,981,
              {tuple,981,
               [{var,981,'NewHead'},
                {var,981,'Bases'},
                {var,981,'SegAddr'},
                {var,981,'SegEnd'}]},
              {call,982,
               {atom,982,prepare_file_init},
               [{var,982,'NoObjects'},
                {var,982,'NoKeys'},
                {var,983,'NoObjsPerSize'},
                {var,983,'SizeT'},
                {var,983,'Head1'}]}},
             {match,984,
              {var,984,'ECache'},
              {call,666,
               {atom,666,list_to_tuple},
               [{op,666,'++',
                 {call,666,{atom,666,tuple_to_list},[{tuple,662,[]}]},
                 {call,666,
                  {remote,666,{atom,666,lists},{atom,666,duplicate}},
                  [{op,666,'-',
                    {call,984,{atom,984,tuple_size},[{var,984,'Bases'}]},
                    {call,666,{atom,666,tuple_size},[{tuple,662,[]}]}},
                   {cons,984,{integer,984,0},{nil,984}}]}}]}},
             {match,985,
              {var,985,'Input'},
              {'fun',986,
               {clauses,
                [{clause,986,
                  [{atom,986,close}],
                  [],
                  [{match,987,
                    {var,987,'_'},
                    {'catch',987,
                     {call,987,{var,987,'NInitFun'},[{atom,987,close}]}}}]},
                 {clause,988,
                  [{atom,988,read}],
                  [],
                  [{call,989,
                    {atom,989,do_make_slots},
                    [{var,989,'L'},
                     {var,989,'ECache'},
                     {var,989,'SizeT'},
                     {var,989,'NewHead'},
                     {var,989,'Ref'},
                     {integer,990,0},
                     {var,990,'NInitFun'}]}]}]}}},
             {match,992,
              {var,992,'Output'},
              {call,992,
               {atom,992,fast_output},
               [{var,992,'NewHead'},
                {var,992,'SizeT'},
                {var,992,'Bases'},
                {var,992,'SegAddr'},
                {var,992,'SegEnd'}]}},
             {match,993,
              {var,993,'TmpDir'},
              {call,993,
               {remote,993,{atom,993,filename},{atom,993,dirname}},
               [{call,993,
                 {remote,993,{atom,993,erlang},{atom,993,element}},
                 [{integer,993,23},{var,993,'Head'}]}]}},
             {match,994,
              {var,994,'Reply'},
              {'catch',994,
               {call,994,
                {remote,994,{atom,994,file_sorter},{atom,994,sort}},
                [{var,994,'Input'},
                 {var,994,'Output'},
                 {cons,995,
                  {tuple,995,[{atom,995,format},{atom,995,binary}]},
                  {cons,996,
                   {tuple,996,[{atom,996,tmpdir},{var,996,'TmpDir'}]},
                   {cons,997,
                    {tuple,997,[{atom,997,header},{integer,997,1}]},
                    {nil,997}}}}]}}},
             {call,998,
              {remote,998,{atom,998,ets},{atom,998,delete}},
              [{var,998,'SizeT'}]},
             {var,999,'Reply'}]},
           {clause,1000,
            [{atom,1000,not_ok}],
            [],
            [{tuple,1001,
              [{atom,1001,error},
               {tuple,1001,
                [{atom,1001,init_fun},{var,1001,'ParmsBin'}]}]}]}]}]},
       {clause,1003,
        [{tuple,1003,[{var,1003,'Ref'},{var,1003,'Value'}]}],
        [],
        [{tuple,1004,
          [{atom,1004,error},
           {tuple,1004,[{atom,1004,init_fun},{var,1004,'Value'}]}]}]},
       {clause,1005,
        [{var,1005,'Error'}],
        [],
        [{tuple,1006,[{atom,1006,thrown},{var,1006,'Error'}]}]}]}]}]},
 {function,1009,try_bchunk_header,2,
  [{clause,1009,
    [{var,1009,'ParmsBin'},{var,1009,'Head'}],
    [],
    [{match,1010,
      {tuple,1010,
       [{atom,1010,head},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'Type'},
        {var,1010,'Kp'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'HashBif'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'},
        {var,1010,'_'}]},
      {var,1010,'Head'}},
     {match,1011,
      {var,1011,'HashMethod'},
      {call,1011,{atom,1011,hash_method_to_code},[{var,1011,'HashBif'}]}},
     {'case',1012,
      {'catch',1012,
       {call,1012,{atom,1012,binary_to_term},[{var,1012,'ParmsBin'}]}},
      [{clause,1013,
        [{var,1013,'Parms'}],
        [[{call,1013,
           {atom,1013,is_record},
           [{var,1013,'Parms'},{atom,264,'$hash2'}]},
          {op,1014,'=:=',
           {call,264,
            {remote,264,{atom,264,erlang},{atom,264,element}},
            [{integer,264,5},{var,1014,'Parms'}]},
           {var,1014,'Type'}},
          {op,1015,'=:=',
           {call,264,
            {remote,264,{atom,264,erlang},{atom,264,element}},
            [{integer,264,6},{var,1015,'Parms'}]},
           {var,1015,'Kp'}},
          {op,1016,'=:=',
           {call,264,
            {remote,264,{atom,264,erlang},{atom,264,element}},
            [{integer,264,7},{var,1016,'Parms'}]},
           {var,1016,'HashMethod'}},
          {op,1017,'=:=',
           {call,264,
            {remote,264,{atom,264,erlang},{atom,264,element}},
            [{integer,264,3},{var,1017,'Parms'}]},
           {integer,266,1}}]],
        [{tuple,1019,[{atom,1019,ok},{var,1019,'Parms'}]}]},
       {clause,1020,[{var,1020,'_'}],[],[{atom,1021,not_ok}]}]}]}]},
 {function,1024,bchunk_input,6,
  [{clause,1024,
    [{var,1024,'InitFun'},
     {var,1024,'SizeT'},
     {var,1024,'Head'},
     {var,1024,'Ref'},
     {var,1024,'Cache'},
     {var,1024,'ASz'}],
    [],
    [{'fun',1025,
      {clauses,
       [{clause,1025,
         [{atom,1025,close}],
         [],
         [{match,1026,
           {var,1026,'_'},
           {'catch',1026,
            {call,1026,{var,1026,'InitFun'},[{atom,1026,close}]}}}]},
        {clause,1027,
         [{atom,1027,read}],
         [],
         [{'case',1028,
           {'catch',1028,
            {tuple,1028,
             [{var,1028,'Ref'},
              {call,1028,{var,1028,'InitFun'},[{atom,1028,read}]}]}},
           [{clause,1029,
             [{tuple,1029,[{var,1029,'Ref'},{atom,1029,end_of_input}]}],
             [],
             [{match,1030,
               {var,1030,'_'},
               {call,1030,
                {atom,1030,fast_write_all_sizes},
                [{var,1030,'Cache'},{var,1030,'SizeT'},{var,1030,'Head'}]}},
              {atom,1031,end_of_input}]},
            {clause,1032,
             [{tuple,1032,
               [{var,1032,'Ref'},
                {tuple,1032,[{var,1032,'L'},{var,1032,'NInitFun'}]}]}],
             [[{call,1032,{atom,1032,is_list},[{var,1032,'L'}]},
               {call,1032,{atom,1032,is_function},[{var,1032,'NInitFun'}]}]],
             [{call,1033,
               {atom,1033,do_make_slots},
               [{var,1033,'L'},
                {var,1033,'Cache'},
                {var,1033,'SizeT'},
                {var,1033,'Head'},
                {var,1033,'Ref'},
                {var,1033,'ASz'},
                {var,1034,'NInitFun'}]}]},
            {clause,1035,
             [{tuple,1035,[{var,1035,'Ref'},{var,1035,'Value'}]}],
             [],
             [{tuple,1036,
               [{atom,1036,error},
                {tuple,1036,[{atom,1036,init_fun},{var,1036,'Value'}]}]}]},
            {clause,1037,
             [{var,1037,'Error'}],
             [],
             [{call,1038,
               {atom,1038,throw},
               [{tuple,1038,
                 [{atom,1038,thrown},{var,1038,'Error'}]}]}]}]}]}]}}]}]},
 {function,1042,do_make_slots,7,
  [{clause,1042,
    [{var,1042,'L'},
     {var,1042,'Cache'},
     {var,1042,'SizeT'},
     {var,1042,'Head'},
     {var,1042,'Ref'},
     {var,1042,'ASz'},
     {var,1042,'InitFun'}],
    [],
    [{'case',1043,
      {'catch',1043,
       {call,1043,
        {atom,1043,make_slots},
        [{var,1043,'L'},{var,1043,'Cache'},{nil,1043},{var,1043,'ASz'}]}},
      [{clause,1044,
        [{tuple,1044,[{atom,1044,'EXIT'},{var,1044,'_'}]}],
        [],
        [{match,1045,
          {var,1045,'_'},
          {'catch',1045,{call,1045,{var,1045,'InitFun'},[{atom,1045,close}]}}},
         {tuple,1046,[{atom,1046,error},{atom,1046,invalid_objects_list}]}]},
       {clause,1047,
        [{tuple,1047,
          [{var,1047,'Cache1'},{var,1047,'SegBs'},{var,1047,'NASz'}]}],
        [[{op,1047,'>',
           {var,1047,'NASz'},
           {op,670,'*',{integer,670,60},{integer,38,8192}}}]],
        [{match,1048,
          {var,1048,'NCache'},
          {call,1048,
           {atom,1048,fast_write_all_sizes},
           [{var,1048,'Cache1'},{var,1048,'SizeT'},{var,1048,'Head'}]}},
         {match,1049,
          {var,1049,'F'},
          {call,1049,
           {atom,1049,bchunk_input},
           [{var,1049,'InitFun'},
            {var,1049,'SizeT'},
            {var,1049,'Head'},
            {var,1049,'Ref'},
            {var,1049,'NCache'},
            {integer,1049,0}]}},
         {tuple,1050,[{var,1050,'SegBs'},{var,1050,'F'}]}]},
       {clause,1051,
        [{tuple,1051,
          [{var,1051,'NCache'},{var,1051,'SegBs'},{var,1051,'NASz'}]}],
        [],
        [{match,1052,
          {var,1052,'F'},
          {call,1052,
           {atom,1052,bchunk_input},
           [{var,1052,'InitFun'},
            {var,1052,'SizeT'},
            {var,1052,'Head'},
            {var,1052,'Ref'},
            {var,1052,'NCache'},
            {var,1052,'NASz'}]}},
         {tuple,1053,[{var,1053,'SegBs'},{var,1053,'F'}]}]}]}]}]},
 {function,1056,make_slots,4,
  [{clause,1056,
    [{cons,1056,
      {tuple,1056,
       [{var,1056,'LSize'},
        {var,1056,'Slot'},
        {match,1056,
         {bin,1056,
          [{bin_element,1056,{var,1056,'Size'},{integer,1056,32},default},
           {bin_element,1056,{var,1056,'St'},{integer,1056,32},default},
           {bin_element,1056,{var,1056,'Sz'},{integer,1056,32},default},
           {bin_element,1056,{var,1056,'KO'},default,[binary]}]},
         {var,1056,'Bin0'}}]},
      {var,1056,'Bins'}},
     {var,1057,'Cache'},
     {var,1057,'SegBs'},
     {var,1057,'ASz'}],
    [],
    [{match,1058,
      {var,1058,'Bin'},
      {'if',1058,
       [{clause,1059,[],
         [[{op,1059,'=:=',{var,1059,'St'},{integer,34,305419896}}]],
         [{var,1060,'Bin0'}]},
        {clause,1061,[],
         [[{op,1061,'=:=',{var,1061,'St'},{integer,33,61591023}}]],
         [{bin,1062,
           [{bin_element,1062,{var,1062,'Size'},{integer,1062,32},default},
            {bin_element,34,{integer,34,305419896},{integer,1062,32},default},
            {bin_element,1062,{var,1062,'Sz'},{integer,1062,32},default},
            {bin_element,1062,{var,1062,'KO'},default,[binary]}]}]}]}},
     {match,1064,
      {var,1064,'BSz'},
      {call,1064,{atom,1064,byte_size},[{var,1064,'Bin0'}]}},
     {match,1065,
      {atom,1065,true},
      {op,1065,'=:=',
       {var,1065,'BSz'},
       {op,42,'bsl',
        {integer,42,1},
        {op,1065,'-',{var,1065,'LSize'},{integer,1065,1}}}}},
     {match,1066,
      {var,1066,'NASz'},
      {op,1066,'+',{var,1066,'ASz'},{var,1066,'BSz'}}},
     {match,1067,
      {cons,1067,{var,1067,'Addr'},{var,1067,'L'}},
      {call,664,{atom,664,element},[{var,1067,'LSize'},{var,1067,'Cache'}]}},
     {match,1068,
      {var,1068,'NSegBs'},
      {cons,1068,
       {bin,1068,
        [{bin_element,1068,{var,1068,'Slot'},{integer,1068,32},default},
         {bin_element,1068,{var,1068,'Size'},{integer,1068,32},default},
         {bin_element,1068,{var,1068,'Addr'},{integer,1068,32},default},
         {bin_element,1068,{var,1068,'LSize'},{integer,1068,8},default}]},
       {var,1068,'SegBs'}}},
     {match,1069,
      {var,1069,'NCache'},
      {call,663,
       {atom,663,setelement},
       [{var,1069,'LSize'},
        {var,1069,'Cache'},
        {cons,1069,
         {op,1069,'+',{var,1069,'Addr'},{var,1069,'BSz'}},
         {cons,1069,{var,1069,'Bin'},{var,1069,'L'}}}]}},
     {call,1070,
      {atom,1070,make_slots},
      [{var,1070,'Bins'},
       {var,1070,'NCache'},
       {var,1070,'NSegBs'},
       {var,1070,'NASz'}]}]},
   {clause,1071,
    [{nil,1071},{var,1071,'Cache'},{var,1071,'SegBs'},{var,1071,'ASz'}],
    [],
    [{tuple,1072,[{var,1072,'Cache'},{var,1072,'SegBs'},{var,1072,'ASz'}]}]}]},
 {function,1074,fast_output,5,
  [{clause,1074,
    [{var,1074,'Head'},
     {var,1074,'SizeT'},
     {var,1074,'Bases'},
     {var,1074,'SegAddr'},
     {var,1074,'SegEnd'}],
    [],
    [{'fun',1075,
      {clauses,
       [{clause,1075,
         [{atom,1075,close}],
         [],
         [{call,1076,
           {atom,1076,fast_output_end},
           [{var,1076,'Head'},{var,1076,'SizeT'}]}]},
        {clause,1077,
         [{var,1077,'L'}],
         [],
         [{'case',1078,
           {call,1078,
            {remote,1078,{atom,1078,file},{atom,1078,position}},
            [{call,1078,
              {remote,1078,{atom,1078,erlang},{atom,1078,element}},
              [{integer,1078,5},{var,1078,'Head'}]},
             {var,1078,'SegAddr'}]},
           [{clause,1079,
             [{tuple,1079,[{atom,1079,ok},{var,1079,'SegAddr'}]}],
             [],
             [{match,1080,
               {var,1080,'NewSegAddr'},
               {call,1080,
                {atom,1080,write_segment_file},
                [{var,1080,'L'},
                 {var,1080,'Bases'},
                 {var,1080,'Head'},
                 {nil,1080},
                 {var,1081,'SegAddr'},
                 {var,1081,'SegAddr'}]}},
              {call,1082,
               {atom,1082,fast_output2},
               [{var,1082,'Head'},
                {var,1082,'SizeT'},
                {var,1082,'Bases'},
                {var,1082,'NewSegAddr'},
                {var,1083,'SegAddr'},
                {var,1083,'SegEnd'}]}]},
            {clause,1084,
             [{var,1084,'Error'}],
             [],
             [{'catch',1085,
               {call,1085,
                {remote,1085,{atom,1085,dets_utils},{atom,1085,file_error}},
                [{var,1085,'Error'},
                 {call,1085,
                  {remote,1085,{atom,1085,erlang},{atom,1085,element}},
                  [{integer,1085,23},{var,1085,'Head'}]}]}}]}]}]}]}}]}]},
 {function,1089,fast_output2,6,
  [{clause,1089,
    [{var,1089,'Head'},
     {var,1089,'SizeT'},
     {var,1089,'Bases'},
     {var,1089,'SegAddr'},
     {var,1089,'SS'},
     {var,1089,'SegEnd'}],
    [],
    [{'fun',1090,
      {clauses,
       [{clause,1090,
         [{atom,1090,close}],
         [],
         [{match,1091,
           {var,1091,'FinalZ'},
           {op,1091,'-',{var,1091,'SegEnd'},{var,1091,'SegAddr'}}},
          {call,1092,
           {remote,1092,{atom,1092,dets_utils},{atom,1092,write}},
           [{var,1092,'Head'},
            {call,1092,
             {remote,1092,{atom,1092,dets_utils},{atom,1092,make_zeros}},
             [{var,1092,'FinalZ'}]}]},
          {call,1093,
           {atom,1093,fast_output_end},
           [{var,1093,'Head'},{var,1093,'SizeT'}]}]},
        {clause,1094,
         [{var,1094,'L'}],
         [],
         [{match,1095,
           {var,1095,'NewSegAddr'},
           {call,1095,
            {atom,1095,write_segment_file},
            [{var,1095,'L'},
             {var,1095,'Bases'},
             {var,1095,'Head'},
             {nil,1095},
             {var,1095,'SegAddr'},
             {var,1095,'SS'}]}},
          {call,1096,
           {atom,1096,fast_output2},
           [{var,1096,'Head'},
            {var,1096,'SizeT'},
            {var,1096,'Bases'},
            {var,1096,'NewSegAddr'},
            {var,1096,'SS'},
            {var,1096,'SegEnd'}]}]}]}}]}]},
 {function,1099,fast_output_end,2,
  [{clause,1099,
    [{var,1099,'Head'},{var,1099,'SizeT'}],
    [],
    [{'case',1100,
      {call,1100,
       {remote,1100,{atom,1100,ets},{atom,1100,foldl}},
       [{'fun',1100,
         {clauses,
          [{clause,1100,
            [{tuple,1100,
              [{var,1100,'_Sz'},
               {var,1100,'_Pos'},
               {var,1100,'Cnt'},
               {var,1100,'NoC'}]},
             {var,1100,'Acc'}],
            [],
            [{op,1100,'and',
              {op,1100,'=:=',{var,1100,'Cnt'},{var,1100,'NoC'}},
              {var,1100,'Acc'}}]}]}},
        {atom,1101,true},
        {var,1101,'SizeT'}]},
      [{clause,1102,
        [{atom,1102,true}],
        [],
        [{tuple,1102,[{atom,1102,ok},{var,1102,'Head'}]}]},
       {clause,1103,
        [{atom,1103,false}],
        [],
        [{tuple,1103,
          [{atom,1103,error},{atom,1103,invalid_objects_list}]}]}]}]}]},
 {function,1107,write_segment_file,6,
  [{clause,1107,
    [{cons,1107,
      {bin,1107,
       [{bin_element,1107,{var,1107,'Slot'},{integer,1107,32},default},
        {bin_element,1107,{var,1107,'BSize'},{integer,1107,32},default},
        {bin_element,1107,{var,1107,'AddrToBe'},{integer,1107,32},default},
        {bin_element,1107,{var,1107,'LSize'},{integer,1107,8},default}]},
      {var,1107,'Bins'}},
     {var,1108,'Bases'},
     {var,1108,'Head'},
     {var,1108,'Ws'},
     {var,1108,'SegAddr'},
     {var,1108,'SS'}],
    [],
    [{match,1112,
      {var,1112,'Pos'},
      {op,1112,'+',
       {var,1112,'SS'},
       {op,1112,'*',
        {op,1112,'*',{integer,245,2},{integer,1112,4}},
        {var,1112,'Slot'}}}},
     {call,1113,
      {atom,1113,write_segment_file},
      [{var,1113,'Bins'},
       {var,1113,'Bases'},
       {var,1113,'Head'},
       {var,1113,'Ws'},
       {var,1113,'SegAddr'},
       {var,1113,'SS'},
       {var,1113,'Pos'},
       {var,1114,'BSize'},
       {var,1114,'AddrToBe'},
       {var,1114,'LSize'}]}]},
   {clause,1115,
    [{nil,1115},
     {var,1115,'_Bases'},
     {var,1115,'Head'},
     {var,1115,'Ws'},
     {var,1115,'SegAddr'},
     {var,1115,'_SS'}],
    [],
    [{call,1116,
      {remote,1116,{atom,1116,dets_utils},{atom,1116,write}},
      [{var,1116,'Head'},{var,1116,'Ws'}]},
     {var,1117,'SegAddr'}]}]},
 {function,1119,write_segment_file,10,
  [{clause,1119,
    [{var,1119,'Bins'},
     {var,1119,'Bases'},
     {var,1119,'Head'},
     {var,1119,'Ws'},
     {var,1119,'SegAddr'},
     {var,1119,'SS'},
     {var,1119,'Pos'},
     {var,1119,'BSize'},
     {var,1120,'AddrToBe'},
     {var,1120,'LSize'}],
    [[{op,1120,'=:=',{var,1120,'Pos'},{var,1120,'SegAddr'}}]],
    [{match,1121,
      {var,1121,'Addr'},
      {op,1121,'+',
       {var,1121,'AddrToBe'},
       {call,1121,
        {atom,1121,element},
        [{var,1121,'LSize'},{var,1121,'Bases'}]}}},
     {match,1122,
      {var,1122,'NWs'},
      {cons,1122,
       {var,1122,'Ws'},
       {bin,1122,
        [{bin_element,1122,{var,1122,'BSize'},{integer,1122,32},default},
         {bin_element,1122,{var,1122,'Addr'},{integer,1122,32},default}]}}},
     {call,1123,
      {atom,1123,write_segment_file},
      [{var,1123,'Bins'},
       {var,1123,'Bases'},
       {var,1123,'Head'},
       {var,1123,'NWs'},
       {op,1123,'+',
        {var,1123,'SegAddr'},
        {op,1123,'*',{integer,245,2},{integer,1123,4}}},
       {var,1123,'SS'}]}]},
   {clause,1124,
    [{var,1124,'Bins'},
     {var,1124,'Bases'},
     {var,1124,'Head'},
     {var,1124,'Ws'},
     {var,1124,'SegAddr'},
     {var,1124,'SS'},
     {var,1124,'Pos'},
     {var,1124,'BSize'},
     {var,1125,'AddrToBe'},
     {var,1125,'LSize'}],
    [[{op,1125,'<',
       {op,1125,'-',{var,1125,'Pos'},{var,1125,'SegAddr'}},
       {integer,1125,100}}]],
    [{match,1126,
      {var,1126,'Addr'},
      {op,1126,'+',
       {var,1126,'AddrToBe'},
       {call,1126,
        {atom,1126,element},
        [{var,1126,'LSize'},{var,1126,'Bases'}]}}},
     {match,1127,
      {var,1127,'NoZeros'},
      {op,1127,'-',{var,1127,'Pos'},{var,1127,'SegAddr'}}},
     {match,1128,
      {var,1128,'NWs'},
      {cons,1128,
       {var,1128,'Ws'},
       {bin,1128,
        [{bin_element,1128,{integer,1128,0},{var,1128,'NoZeros'},[{unit,8}]},
         {bin_element,1128,{var,1128,'BSize'},{integer,1128,32},default},
         {bin_element,1128,{var,1128,'Addr'},{integer,1128,32},default}]}}},
     {match,1129,
      {var,1129,'NSegAddr'},
      {op,1129,'+',
       {op,1129,'+',{var,1129,'SegAddr'},{var,1129,'NoZeros'}},
       {op,1129,'*',{integer,245,2},{integer,1129,4}}}},
     {call,1130,
      {atom,1130,write_segment_file},
      [{var,1130,'Bins'},
       {var,1130,'Bases'},
       {var,1130,'Head'},
       {var,1130,'NWs'},
       {var,1130,'NSegAddr'},
       {var,1130,'SS'}]}]},
   {clause,1131,
    [{var,1131,'Bins'},
     {var,1131,'Bases'},
     {var,1131,'Head'},
     {var,1131,'Ws'},
     {var,1131,'SegAddr'},
     {var,1131,'SS'},
     {var,1131,'Pos'},
     {var,1131,'BSize'},
     {var,1132,'AddrToBe'},
     {var,1132,'LSize'}],
    [],
    [{match,1133,
      {var,1133,'Addr'},
      {op,1133,'+',
       {var,1133,'AddrToBe'},
       {call,1133,
        {atom,1133,element},
        [{var,1133,'LSize'},{var,1133,'Bases'}]}}},
     {match,1134,
      {var,1134,'NoZeros'},
      {op,1134,'-',{var,1134,'Pos'},{var,1134,'SegAddr'}}},
     {match,1135,
      {var,1135,'NWs'},
      {cons,1135,
       {var,1135,'Ws'},
       {cons,1135,
        {call,1135,
         {remote,1135,{atom,1135,dets_utils},{atom,1135,make_zeros}},
         [{var,1135,'NoZeros'}]},
        {bin,1135,
         [{bin_element,1135,{var,1135,'BSize'},{integer,1135,32},default},
          {bin_element,1135,{var,1135,'Addr'},{integer,1135,32},default}]}}}},
     {match,1136,
      {var,1136,'NSegAddr'},
      {op,1136,'+',
       {op,1136,'+',{var,1136,'SegAddr'},{var,1136,'NoZeros'}},
       {op,1136,'*',{integer,245,2},{integer,1136,4}}}},
     {call,1137,
      {atom,1137,write_segment_file},
      [{var,1137,'Bins'},
       {var,1137,'Bases'},
       {var,1137,'Head'},
       {var,1137,'NWs'},
       {var,1137,'NSegAddr'},
       {var,1137,'SS'}]}]}]},
 {function,1139,fast_write_all_sizes,3,
  [{clause,1139,
    [{var,1139,'Cache'},{var,1139,'SizeT'},{var,1139,'Head'}],
    [],
    [{match,1140,
      {var,1140,'CacheL'},
      {call,1140,
       {remote,1140,{atom,1140,lists},{atom,1140,reverse}},
       [{call,1140,{atom,1140,tuple_to_list},[{var,1140,'Cache'}]}]}},
     {call,1141,
      {atom,1141,fast_write_sizes},
      [{var,1141,'CacheL'},
       {call,1141,{atom,1141,tuple_size},[{var,1141,'Cache'}]},
       {var,1141,'SizeT'},
       {var,1141,'Head'},
       {nil,1141},
       {nil,1141}]}]}]},
 {function,1143,fast_write_sizes,6,
  [{clause,1143,
    [{nil,1143},
     {var,1143,'_Sz'},
     {var,1143,'_SizeT'},
     {var,1143,'Head'},
     {var,1143,'NCL'},
     {var,1143,'PwriteList'}],
    [],
    [{match,1144,
      {tuple,1144,
       [{atom,1144,head},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'Fd'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'FileName'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'},
        {var,1144,'_'}]},
      {var,1144,'Head'}},
     {match,1145,
      {atom,1145,ok},
      {call,1145,
       {remote,1145,{atom,1145,dets_utils},{atom,1145,pwrite}},
       [{var,1145,'Fd'},{var,1145,'FileName'},{var,1145,'PwriteList'}]}},
     {call,1146,{atom,1146,list_to_tuple},[{var,1146,'NCL'}]}]},
   {clause,1147,
    [{cons,1147,
      {match,1147,{cons,1147,{var,1147,'_Addr'},{nil,1147}},{var,1147,'C'}},
      {var,1147,'CL'}},
     {var,1147,'Sz'},
     {var,1147,'SizeT'},
     {var,1147,'Head'},
     {var,1147,'NCL'},
     {var,1147,'PwriteList'}],
    [],
    [{call,1148,
      {atom,1148,fast_write_sizes},
      [{var,1148,'CL'},
       {op,1148,'-',{var,1148,'Sz'},{integer,1148,1}},
       {var,1148,'SizeT'},
       {var,1148,'Head'},
       {cons,1148,{var,1148,'C'},{var,1148,'NCL'}},
       {var,1148,'PwriteList'}]}]},
   {clause,1149,
    [{cons,1149,{cons,1149,{var,1149,'Addr'},{var,1149,'C'}},{var,1149,'CL'}},
     {var,1149,'Sz'},
     {var,1149,'SizeT'},
     {var,1149,'Head'},
     {var,1149,'NCL'},
     {var,1149,'PwriteList'}],
    [],
    [{'case',1150,
      {call,1150,
       {remote,1150,{atom,1150,ets},{atom,1150,lookup}},
       [{var,1150,'SizeT'},{var,1150,'Sz'}]},
      [{clause,1151,
        [{nil,1151}],
        [],
        [{call,1152,
          {atom,1152,throw},
          [{tuple,1152,
            [{atom,1152,error},{atom,1152,invalid_objects_list}]}]}]},
       {clause,1153,
        [{cons,1153,
          {tuple,1153,
           [{var,1153,'Sz'},
            {var,1153,'Position'},
            {var,1153,'_ObjCounter'},
            {var,1153,'_NoCollections'}]},
          {nil,1153}}],
        [],
        [{match,1155,
          {var,1155,'NoColls'},
          {call,1155,{atom,1155,length},[{var,1155,'C'}]}},
         {match,1156,
          {var,1156,'_'},
          {call,1156,
           {remote,1156,{atom,1156,ets},{atom,1156,update_counter}},
           [{var,1156,'SizeT'},
            {var,1156,'Sz'},
            {tuple,1156,[{integer,1156,3},{var,1156,'NoColls'}]}]}},
         {match,1157,
          {var,1157,'Pos'},
          {op,1157,'-',
           {op,1157,'+',{var,1157,'Position'},{var,1157,'Addr'}},
           {op,1157,'*',
            {var,1157,'NoColls'},
            {op,42,'bsl',
             {integer,42,1},
             {op,1157,'-',{var,1157,'Sz'},{integer,1157,1}}}}}},
         {call,1158,
          {atom,1158,fast_write_sizes},
          [{var,1158,'CL'},
           {op,1158,'-',{var,1158,'Sz'},{integer,1158,1}},
           {var,1158,'SizeT'},
           {var,1158,'Head'},
           {cons,1158,
            {cons,1158,{var,1158,'Addr'},{nil,1158}},
            {var,1158,'NCL'}},
           {cons,1159,
            {tuple,1159,
             [{var,1159,'Pos'},
              {call,1159,
               {remote,1159,{atom,1159,lists},{atom,1159,reverse}},
               [{var,1159,'C'}]}]},
            {var,1159,'PwriteList'}}]}]}]}]}]},
 {function,1162,prepare_file_init,5,
  [{clause,1162,
    [{var,1162,'NoObjects'},
     {var,1162,'NoKeys'},
     {var,1162,'NoObjsPerSize'},
     {var,1162,'SizeT'},
     {var,1162,'Head'}],
    [],
    [{match,1163,
      {var,1163,'SegSz'},
      {op,278,'*',{integer,202,512},{integer,278,4}}},
     {match,1164,
      {tuple,1164,[{var,1164,'_'},{var,1164,'SegEnd'},{var,1164,'_'}]},
      {call,1164,
       {remote,1164,{atom,1164,dets_utils},{atom,1164,alloc}},
       [{var,1164,'Head'},
        {call,1164,{atom,1164,adjsz},[{var,1164,'SegSz'}]}]}},
     {match,1165,
      {var,1165,'Head1'},
      {call,1165,
       {remote,1165,{atom,1165,erlang},{atom,1165,setelement}},
       [{integer,1165,7},
        {call,1165,
         {remote,1165,{atom,1165,erlang},{atom,1165,setelement}},
         [{integer,1165,6},{var,1165,'Head'},{var,1165,'NoObjects'}]},
        {var,1165,'NoKeys'}]}},
     {match,1166,
      {atom,1166,true},
      {call,1166,
       {remote,1166,{atom,1166,ets},{atom,1166,insert}},
       [{var,1166,'SizeT'},
        {tuple,1166,
         [{integer,659,1},{integer,1166,0},{nil,1166},{integer,1166,0}]}]}},
     {call,1167,
      {remote,1167,{atom,1167,lists},{atom,1167,foreach}},
      [{'fun',1167,
        {clauses,
         [{clause,1167,
           [{tuple,1167,[{var,1167,'LogSz'},{var,1167,'NoColls'}]}],
           [],
           [{match,1168,
             {atom,1168,true},
             {call,1168,
              {remote,1168,{atom,1168,ets},{atom,1168,insert}},
              [{var,1168,'SizeT'},
               {tuple,1168,
                [{op,1168,'+',{var,1168,'LogSz'},{integer,1168,1}},
                 {integer,1168,0},
                 {integer,1168,0},
                 {var,1168,'NoColls'}]}]}}]}]}},
       {var,1169,'NoObjsPerSize'}]},
     {match,1170,
      {tuple,1170,
       [{var,1170,'NewHead'},
        {var,1170,'NL0'},
        {var,1170,'MaxSz'},
        {var,1170,'EndOfFile'}]},
      {call,1170,
       {atom,1170,allocate_all_objects},
       [{var,1170,'Head1'},{var,1170,'SizeT'}]}},
     {match,1171,
      {cons,1171,
       {tuple,1171,
        [{integer,659,1},{var,1171,'SegAddr'},{nil,1171},{integer,1171,0}]},
       {var,1171,'NL'}},
      {var,1171,'NL0'}},
     {match,1172,
      {atom,1172,true},
      {call,1172,
       {remote,1172,{atom,1172,ets},{atom,1172,delete_all_objects}},
       [{var,1172,'SizeT'}]}},
     {call,1173,
      {remote,1173,{atom,1173,lists},{atom,1173,foreach}},
      [{'fun',1173,
        {clauses,
         [{clause,1173,
           [{var,1173,'X'}],
           [],
           [{match,1173,
             {atom,1173,true},
             {call,1173,
              {remote,1173,{atom,1173,ets},{atom,1173,insert}},
              [{var,1173,'SizeT'},{var,1173,'X'}]}}]}]}},
       {var,1173,'NL'}]},
     {match,1174,
      {var,1174,'Bases'},
      {call,1174,
       {remote,1174,{atom,1174,lists},{atom,1174,foldl}},
       [{'fun',1174,
         {clauses,
          [{clause,1174,
            [{tuple,1174,
              [{var,1174,'LSz'},
               {var,1174,'P'},
               {var,1174,'_D'},
               {var,1174,'_N'}]},
             {var,1174,'A'}],
            [],
            [{call,1174,
              {atom,1174,setelement},
              [{var,1174,'LSz'},{var,1174,'A'},{var,1174,'P'}]}]}]}},
        {call,1175,
         {remote,1175,{atom,1175,erlang},{atom,1175,make_tuple}},
         [{var,1175,'MaxSz'},{integer,1175,0}]},
        {var,1175,'NL'}]}},
     {match,1176,
      {var,1176,'Est'},
      {call,1176,
       {remote,1176,{atom,1176,lists},{atom,1176,foldl}},
       [{'fun',1176,
         {clauses,
          [{clause,1176,
            [{tuple,1176,
              [{var,1176,'LSz'},{var,1176,'_'},{var,1176,'_'},{var,1176,'N'}]},
             {var,1176,'A'}],
            [],
            [{op,1176,'+',
              {var,1176,'A'},
              {op,1176,'*',
               {op,42,'bsl',
                {integer,42,1},
                {op,1176,'-',{var,1176,'LSz'},{integer,1176,1}}},
               {var,1176,'N'}}}]}]}},
        {integer,1176,0},
        {var,1176,'NL'}]}},
     {match,1177,
      {atom,1177,ok},
      {call,1177,
       {atom,1177,write_bytes},
       [{var,1177,'NewHead'},{var,1177,'EndOfFile'},{var,1177,'Est'}]}},
     {tuple,1178,
      [{var,1178,'NewHead'},
       {var,1178,'Bases'},
       {var,1178,'SegAddr'},
       {var,1178,'SegEnd'}]}]}]},
 {function,1186,write_bytes,3,
  [{clause,1186,
    [{var,1186,'_Head'},{var,1186,'_EndOfFile'},{var,1186,'Est'}],
    [[{op,1186,'<',
       {var,1186,'Est'},
       {op,670,'*',{integer,670,60},{integer,38,8192}}}]],
    [{atom,1187,ok}]},
   {clause,1188,
    [{var,1188,'Head'},{var,1188,'EndOfFile'},{var,1188,'_Est'}],
    [],
    [{match,1189,
      {var,1189,'Fd'},
      {call,1189,
       {remote,1189,{atom,1189,erlang},{atom,1189,element}},
       [{integer,1189,5},{var,1189,'Head'}]}},
     {match,1190,
      {tuple,1190,[{atom,1190,ok},{var,1190,'Start'}]},
      {call,1190,
       {remote,1190,{atom,1190,file},{atom,1190,position}},
       [{var,1190,'Fd'},{atom,1190,eof}]}},
     {match,1191,
      {var,1191,'BytesToWrite'},
      {op,1191,'-',{var,1191,'EndOfFile'},{var,1191,'Start'}}},
     {match,1192,{var,1192,'SizeInKB'},{integer,1192,64}},
     {match,1193,
      {var,1193,'Bin'},
      {call,1193,
       {atom,1193,list_to_binary},
       [{call,1193,
         {remote,1193,{atom,1193,lists},{atom,1193,duplicate}},
         [{op,1193,'*',{var,1193,'SizeInKB'},{integer,1193,4}},
          {call,1193,
           {remote,1193,{atom,1193,lists},{atom,1193,seq}},
           [{integer,1193,0},{integer,1193,255}]}]}]}},
     {call,1194,
      {atom,1194,write_loop},
      [{var,1194,'Head'},{var,1194,'BytesToWrite'},{var,1194,'Bin'}]}]}]},
 {function,1196,write_loop,3,
  [{clause,1196,
    [{var,1196,'Head'},{var,1196,'BytesToWrite'},{var,1196,'Bin'}],
    [[{op,1196,'>=',
       {var,1196,'BytesToWrite'},
       {call,1196,{atom,1196,byte_size},[{var,1196,'Bin'}]}}]],
    [{'case',1197,
      {call,1197,
       {remote,1197,{atom,1197,file},{atom,1197,write}},
       [{call,1197,
         {remote,1197,{atom,1197,erlang},{atom,1197,element}},
         [{integer,1197,5},{var,1197,'Head'}]},
        {var,1197,'Bin'}]},
      [{clause,1198,
        [{atom,1198,ok}],
        [],
        [{call,1198,
          {atom,1198,write_loop},
          [{var,1198,'Head'},
           {op,1198,'-',
            {var,1198,'BytesToWrite'},
            {call,1198,{atom,1198,byte_size},[{var,1198,'Bin'}]}},
           {var,1198,'Bin'}]}]},
       {clause,1199,
        [{var,1199,'Error'}],
        [],
        [{call,1199,
          {remote,1199,{atom,1199,dets_utils},{atom,1199,file_error}},
          [{var,1199,'Error'},
           {call,1199,
            {remote,1199,{atom,1199,erlang},{atom,1199,element}},
            [{integer,1199,23},{var,1199,'Head'}]}]}]}]}]},
   {clause,1201,
    [{var,1201,'_Head'},{integer,1201,0},{var,1201,'_Bin'}],
    [],
    [{atom,1202,ok}]},
   {clause,1203,
    [{var,1203,'Head'},{var,1203,'BytesToWrite'},{var,1203,'Bin'}],
    [],
    [{match,1204,
      {bin,1204,
       [{bin_element,1204,
         {var,1204,'SmallBin'},
         {var,1204,'BytesToWrite'},
         [binary]},
        {bin_element,1204,{var,1204,'_'},default,[binary]}]},
      {var,1204,'Bin'}},
     {call,1205,
      {atom,1205,write_loop},
      [{var,1205,'Head'},{var,1205,'BytesToWrite'},{var,1205,'SmallBin'}]}]}]},
 {function,1209,allocate_all_objects,2,
  [{clause,1209,
    [{var,1209,'Head'},{var,1209,'SizeT'}],
    [],
    [{match,1210,
      {var,1210,'DTL'},
      {call,1210,
       {remote,1210,{atom,1210,lists},{atom,1210,reverse}},
       [{call,1210,
         {remote,1210,{atom,1210,lists},{atom,1210,keysort}},
         [{integer,1210,1},
          {call,1210,
           {remote,1210,{atom,1210,ets},{atom,1210,tab2list}},
           [{var,1210,'SizeT'}]}]}]}},
     {match,1211,
      {var,1211,'MaxSz'},
      {call,1211,
       {atom,1211,element},
       [{integer,1211,1},{call,1211,{atom,1211,hd},[{var,1211,'DTL'}]}]}},
     {match,1212,
      {tuple,1212,[{var,1212,'Head1'},{var,1212,'NL'}]},
      {call,1212,
       {atom,1212,allocate_all},
       [{var,1212,'Head'},{var,1212,'DTL'},{nil,1212}]}},
     {match,1215,
      {tuple,1215,[{var,1215,'_Head'},{var,1215,'EndOfFile'},{var,1215,'_'}]},
      {call,1215,
       {remote,1215,{atom,1215,dets_utils},{atom,1215,alloc}},
       [{var,1215,'Head1'},{integer,254,16}]}},
     {match,1216,
      {var,1216,'NewHead'},
      {call,1216,
       {remote,1216,{atom,1216,erlang},{atom,1216,setelement}},
       [{integer,1216,8},
        {var,1216,'Head1'},
        {call,1216,
         {atom,1216,max_objsize},
         [{call,1216,
           {remote,1216,{atom,1216,erlang},{atom,1216,element}},
           [{integer,1216,14},{var,1216,'Head1'}]}]}]}},
     {tuple,1217,
      [{var,1217,'NewHead'},
       {var,1217,'NL'},
       {var,1217,'MaxSz'},
       {var,1217,'EndOfFile'}]}]}]},
 {function,1227,allocate_all,3,
  [{clause,1227,
    [{var,1227,'Head'},
     {cons,1227,
      {tuple,1227,
       [{integer,659,1},{var,1227,'_'},{var,1227,'Data'},{var,1227,'_'}]},
      {nil,1227}},
     {var,1227,'L'}],
    [],
    [{match,1232,
      {var,1232,'NoParts'},
      {call,1232,
       {atom,1232,no_parts},
       [{call,1232,
         {remote,1232,{atom,1232,erlang},{atom,1232,element}},
         [{integer,1232,4},{var,1232,'Head'}]}]}},
     {match,1234,
      {var,1234,'Addr'},
      {op,1234,'+',
       {op,209,'+',
        {op,200,'+',
         {op,199,'+',
          {op,199,'+',
           {op,198,'+',
            {integer,198,56},
            {op,194,'*',{integer,194,28},{integer,194,4}}},
           {integer,195,16}},
          {integer,196,4}},
         {integer,192,124}},
        {op,209,'*',{integer,209,4},{integer,208,256}}},
       {op,1234,'*',
        {op,1234,'*',{var,1234,'NoParts'},{integer,1234,4}},
        {integer,206,512}}}},
     {tuple,1235,
      [{var,1235,'Head'},
       {cons,1235,
        {tuple,1235,
         [{integer,659,1},
          {var,1235,'Addr'},
          {var,1235,'Data'},
          {integer,1235,0}]},
        {var,1235,'L'}}]}]},
   {clause,1236,
    [{var,1236,'Head'},
     {cons,1236,
      {tuple,1236,
       [{var,1236,'LSize'},
        {var,1236,'_'},
        {var,1236,'Data'},
        {var,1236,'NoCollections'}]},
      {var,1236,'DTL'}},
     {var,1236,'L'}],
    [],
    [{match,1237,
      {var,1237,'Size'},
      {op,42,'bsl',
       {integer,42,1},
       {op,1237,'-',{var,1237,'LSize'},{integer,1237,1}}}},
     {match,1238,
      {tuple,1238,[{var,1238,'_Head'},{var,1238,'Addr'},{var,1238,'_'}]},
      {call,1238,
       {remote,1238,{atom,1238,dets_utils},{atom,1238,alloc}},
       [{var,1238,'Head'},{call,1238,{atom,1238,adjsz},[{var,1238,'Size'}]}]}},
     {match,1239,
      {var,1239,'Head1'},
      {call,1239,
       {remote,1239,{atom,1239,dets_utils},{atom,1239,alloc_many}},
       [{var,1239,'Head'},
        {var,1239,'Size'},
        {var,1239,'NoCollections'},
        {var,1239,'Addr'}]}},
     {match,1240,
      {var,1240,'NoColls'},
      {call,1240,
       {remote,1240,{atom,1240,erlang},{atom,1240,element}},
       [{integer,1240,14},{var,1240,'Head1'}]}},
     {match,1241,
      {var,1241,'NewNoColls'},
      {call,1241,
       {remote,1241,{atom,1241,orddict},{atom,1241,update_counter}},
       [{op,1241,'-',{var,1241,'LSize'},{integer,1241,1}},
        {var,1241,'NoCollections'},
        {var,1241,'NoColls'}]}},
     {match,1242,
      {var,1242,'NewHead'},
      {call,1242,
       {remote,1242,{atom,1242,erlang},{atom,1242,setelement}},
       [{integer,1242,14},{var,1242,'Head1'},{var,1242,'NewNoColls'}]}},
     {match,1243,
      {var,1243,'E'},
      {tuple,1243,
       [{var,1243,'LSize'},
        {var,1243,'Addr'},
        {var,1243,'Data'},
        {var,1243,'NoCollections'}]}},
     {call,1244,
      {atom,1244,allocate_all},
      [{var,1244,'NewHead'},
       {var,1244,'DTL'},
       {cons,1244,{var,1244,'E'},{var,1244,'L'}}]}]}]},
 {function,1246,bin2term,3,
  [{clause,1246,
    [{var,1246,'Bin'},{integer,1246,9},{var,1246,'Kp'}],
    [],
    [{call,1247,
      {atom,1247,bin2term1},
      [{var,1247,'Bin'},{var,1247,'Kp'},{nil,1247}]}]},
   {clause,1248,
    [{var,1248,'Bin'},{integer,1248,8},{var,1248,'Kp'}],
    [],
    [{call,1249,
      {atom,1249,bin2term_v8},
      [{var,1249,'Bin'},{var,1249,'Kp'},{nil,1249}]}]}]},
 {function,1251,bin2term1,3,
  [{clause,1251,
    [{cons,1251,
      {bin,1251,
       [{bin_element,1251,{var,1251,'Slot'},{integer,1251,32},default},
        {bin_element,1251,{var,1251,'Seq'},{integer,1251,32},default},
        {bin_element,1251,{var,1251,'BinTerm'},default,[binary]}]},
      {var,1251,'BTs'}},
     {var,1251,'Kp'},
     {var,1251,'L'}],
    [],
    [{match,1252,
      {var,1252,'Term'},
      {call,1252,{atom,1252,binary_to_term},[{var,1252,'BinTerm'}]}},
     {match,1253,
      {var,1253,'Key'},
      {call,1253,{atom,1253,element},[{var,1253,'Kp'},{var,1253,'Term'}]}},
     {call,1254,
      {atom,1254,bin2term1},
      [{var,1254,'BTs'},
       {var,1254,'Kp'},
       {cons,1254,
        {tuple,1254,
         [{var,1254,'Slot'},
          {var,1254,'Key'},
          {var,1254,'Seq'},
          {var,1254,'Term'},
          {var,1254,'BinTerm'}]},
        {var,1254,'L'}}]}]},
   {clause,1255,
    [{nil,1255},{var,1255,'_Kp'},{var,1255,'L'}],
    [],
    [{call,1256,
      {remote,1256,{atom,1256,lists},{atom,1256,reverse}},
      [{var,1256,'L'}]}]}]},
 {function,1258,bin2term_v8,3,
  [{clause,1258,
    [{cons,1258,
      {bin,1258,
       [{bin_element,1258,{var,1258,'Slot'},{integer,1258,32},default},
        {bin_element,1258,{var,1258,'BinTerm'},default,[binary]}]},
      {var,1258,'BTs'}},
     {var,1258,'Kp'},
     {var,1258,'L'}],
    [],
    [{match,1259,
      {var,1259,'Term'},
      {call,1259,{atom,1259,binary_to_term},[{var,1259,'BinTerm'}]}},
     {match,1260,
      {var,1260,'Key'},
      {call,1260,{atom,1260,element},[{var,1260,'Kp'},{var,1260,'Term'}]}},
     {call,1261,
      {atom,1261,bin2term_v8},
      [{var,1261,'BTs'},
       {var,1261,'Kp'},
       {cons,1261,
        {tuple,1261,
         [{var,1261,'Slot'},
          {var,1261,'Key'},
          {atom,1261,foo},
          {var,1261,'Term'},
          {var,1261,'BinTerm'}]},
        {var,1261,'L'}}]}]},
   {clause,1262,
    [{nil,1262},{var,1262,'_Kp'},{var,1262,'L'}],
    [],
    [{call,1263,
      {remote,1263,{atom,1263,lists},{atom,1263,reverse}},
      [{var,1263,'L'}]}]}]},
 {function,1265,write_all_sizes,4,
  [{clause,1265,
    [{match,1265,{tuple,1265,[]},{var,1265,'Cache'}},
     {var,1265,'_SizeT'},
     {var,1265,'_Head'},
     {var,1265,'_More'}],
    [],
    [{var,1266,'Cache'}]},
   {clause,1267,
    [{var,1267,'Cache'},
     {var,1267,'SizeT'},
     {var,1267,'Head'},
     {var,1267,'More'}],
    [],
    [{match,1268,
      {var,1268,'CacheL'},
      {call,1268,
       {remote,1268,{atom,1268,lists},{atom,1268,reverse}},
       [{call,1268,{atom,1268,tuple_to_list},[{var,1268,'Cache'}]}]}},
     {match,1269,
      {var,1269,'Sz'},
      {call,1269,{atom,1269,length},[{var,1269,'CacheL'}]}},
     {match,1270,
      {var,1270,'NCL'},
      {'case',1270,
       {call,1270,
        {remote,1270,{atom,1270,ets},{atom,1270,info}},
        [{var,1270,'SizeT'},{atom,1270,size}]},
       [{clause,1271,
         [{integer,1271,1}],
         [[{op,1271,'=:=',{var,1271,'More'},{atom,1271,no_more}}]],
         [{call,1272,
           {atom,1272,all_sizes},
           [{var,1272,'CacheL'},{var,1272,'Sz'},{var,1272,'SizeT'}]}]},
        {clause,1273,
         [{var,1273,'_'}],
         [],
         [{call,1274,
           {atom,1274,write_sizes},
           [{var,1274,'CacheL'},
            {var,1274,'Sz'},
            {var,1274,'SizeT'},
            {var,1274,'Head'}]}]}]}},
     {call,1276,{atom,1276,list_to_tuple},[{var,1276,'NCL'}]}]}]},
 {function,1278,all_sizes,3,
  [{clause,1278,
    [{match,1278,{nil,1278},{var,1278,'CL'}},
     {var,1278,'_Sz'},
     {var,1278,'_SizeT'}],
    [],
    [{var,1279,'CL'}]},
   {clause,1280,
    [{cons,1280,{match,1280,{nil,1280},{var,1280,'C'}},{var,1280,'CL'}},
     {var,1280,'Sz'},
     {var,1280,'SizeT'}],
    [],
    [{cons,1281,
      {var,1281,'C'},
      {call,1281,
       {atom,1281,all_sizes},
       [{var,1281,'CL'},
        {op,1281,'-',{var,1281,'Sz'},{integer,1281,1}},
        {var,1281,'SizeT'}]}}]},
   {clause,1282,
    [{cons,1282,{var,1282,'C0'},{var,1282,'CL'}},
     {var,1282,'Sz'},
     {var,1282,'SizeT'}],
    [],
    [{match,1283,
      {var,1283,'C'},
      {call,1283,
       {remote,1283,{atom,1283,lists},{atom,1283,reverse}},
       [{var,1283,'C0'}]}},
     {match,1284,
      {var,1284,'NoCollections'},
      {call,1284,{atom,1284,length},[{var,1284,'C'}]}},
     {match,1285,
      {atom,1285,true},
      {call,1285,
       {remote,1285,{atom,1285,ets},{atom,1285,insert}},
       [{var,1285,'SizeT'},
        {tuple,1285,
         [{var,1285,'Sz'},
          {integer,1285,0},
          {var,1285,'C'},
          {var,1285,'NoCollections'}]}]}},
     {cons,1286,
      {nil,1286},
      {call,1286,
       {atom,1286,all_sizes},
       [{var,1286,'CL'},
        {op,1286,'-',{var,1286,'Sz'},{integer,1286,1}},
        {var,1286,'SizeT'}]}}]}]},
 {function,1288,write_sizes,4,
  [{clause,1288,
    [{match,1288,{nil,1288},{var,1288,'CL'}},
     {var,1288,'_Sz'},
     {var,1288,'_SizeT'},
     {var,1288,'_Head'}],
    [],
    [{var,1289,'CL'}]},
   {clause,1290,
    [{cons,1290,{match,1290,{nil,1290},{var,1290,'C'}},{var,1290,'CL'}},
     {var,1290,'Sz'},
     {var,1290,'SizeT'},
     {var,1290,'Head'}],
    [],
    [{cons,1291,
      {var,1291,'C'},
      {call,1291,
       {atom,1291,write_sizes},
       [{var,1291,'CL'},
        {op,1291,'-',{var,1291,'Sz'},{integer,1291,1}},
        {var,1291,'SizeT'},
        {var,1291,'Head'}]}}]},
   {clause,1292,
    [{cons,1292,{var,1292,'C'},{var,1292,'CL'}},
     {var,1292,'Sz'},
     {var,1292,'SizeT'},
     {var,1292,'Head'}],
    [],
    [{match,1293,
      {tuple,1293,[{var,1293,'FileName'},{var,1293,'Fd'}]},
      {'case',1294,
       {call,1294,
        {remote,1294,{atom,1294,ets},{atom,1294,lookup}},
        [{var,1294,'SizeT'},{var,1294,'Sz'}]},
       [{clause,1295,
         [{nil,1295}],
         [],
         [{call,1296,
           {atom,1296,temp_file},
           [{var,1296,'Head'},{var,1296,'SizeT'},{var,1296,'Sz'}]}]},
        {clause,1297,
         [{cons,1297,
           {tuple,1297,
            [{var,1297,'_'},
             {var,1297,'_'},
             {tuple,1297,[{var,1297,'FN'},{var,1297,'F'}]},
             {var,1297,'_'}]},
           {nil,1297}}],
         [],
         [{tuple,1298,[{var,1298,'FN'},{var,1298,'F'}]}]}]}},
     {match,1300,
      {var,1300,'NoCollections'},
      {call,1300,{atom,1300,length},[{var,1300,'C'}]}},
     {match,1301,
      {var,1301,'_'},
      {call,1301,
       {remote,1301,{atom,1301,ets},{atom,1301,update_counter}},
       [{var,1301,'SizeT'},
        {var,1301,'Sz'},
        {tuple,1301,[{integer,1301,4},{var,1301,'NoCollections'}]}]}},
     {'case',1302,
      {call,1302,
       {remote,1302,{atom,1302,file},{atom,1302,write}},
       [{var,1302,'Fd'},
        {call,1302,
         {remote,1302,{atom,1302,lists},{atom,1302,reverse}},
         [{var,1302,'C'}]}]},
      [{clause,1303,
        [{atom,1303,ok}],
        [],
        [{cons,1304,
          {nil,1304},
          {call,1304,
           {atom,1304,write_sizes},
           [{var,1304,'CL'},
            {op,1304,'-',{var,1304,'Sz'},{integer,1304,1}},
            {var,1304,'SizeT'},
            {var,1304,'Head'}]}}]},
       {clause,1305,
        [{var,1305,'Error'}],
        [],
        [{call,1306,
          {remote,1306,{atom,1306,dets_utils},{atom,1306,file_error}},
          [{var,1306,'FileName'},{var,1306,'Error'}]}]}]}]}]},
 {function,1309,output_slots,6,
  [{clause,1309,
    [{cons,1309,{var,1309,'E'},{var,1309,'Es'}},
     {var,1309,'Head'},
     {var,1309,'Cache'},
     {var,1309,'SizeT'},
     {var,1309,'NoKeys'},
     {var,1309,'NoObjs'}],
    [],
    [{call,1310,
      {atom,1310,output_slots},
      [{var,1310,'E'},
       {var,1310,'Es'},
       {cons,1310,{var,1310,'E'},{nil,1310}},
       {var,1310,'Head'},
       {var,1310,'Cache'},
       {var,1310,'SizeT'},
       {var,1310,'NoKeys'},
       {var,1310,'NoObjs'}]}]},
   {clause,1311,
    [{nil,1311},
     {var,1311,'_Head'},
     {var,1311,'Cache'},
     {var,1311,'SizeT'},
     {var,1311,'NoKeys'},
     {var,1311,'NoObjs'}],
    [],
    [{match,1312,
      {var,1312,'_'},
      {call,1312,
       {remote,1312,{atom,1312,ets},{atom,1312,update_counter}},
       [{var,1312,'SizeT'},
        {atom,675,no},
        {tuple,1312,[{integer,676,2},{var,1312,'NoObjs'}]}]}},
     {match,1313,
      {var,1313,'_'},
      {call,1313,
       {remote,1313,{atom,1313,ets},{atom,1313,update_counter}},
       [{var,1313,'SizeT'},
        {atom,675,no},
        {tuple,1313,[{integer,677,3},{var,1313,'NoKeys'}]}]}},
     {tuple,1314,[{atom,1314,not_a_tuple},{nil,1314},{var,1314,'Cache'}]}]}]},
 {function,1316,output_slots,8,
  [{clause,1316,
    [{var,1316,'E'},
     {cons,1316,{var,1316,'E1'},{var,1316,'Es'}},
     {var,1316,'Acc'},
     {var,1316,'Head'},
     {var,1316,'Cache'},
     {var,1316,'SizeT'},
     {var,1316,'NoKeys'},
     {var,1316,'NoObjs'}],
    [[{op,1317,'=:=',
       {call,1317,{atom,1317,element},[{integer,1317,1},{var,1317,'E'}]},
       {call,1317,{atom,1317,element},[{integer,1317,1},{var,1317,'E1'}]}}]],
    [{call,1318,
      {atom,1318,output_slots},
      [{var,1318,'E1'},
       {var,1318,'Es'},
       {cons,1318,{var,1318,'E1'},{var,1318,'Acc'}},
       {var,1318,'Head'},
       {var,1318,'Cache'},
       {var,1318,'SizeT'},
       {var,1318,'NoKeys'},
       {var,1318,'NoObjs'}]}]},
   {clause,1319,
    [{var,1319,'E'},
     {nil,1319},
     {var,1319,'Acc'},
     {var,1319,'_Head'},
     {var,1319,'Cache'},
     {var,1319,'SizeT'},
     {var,1319,'NoKeys'},
     {var,1319,'NoObjs'}],
    [],
    [{match,1320,
      {var,1320,'_'},
      {call,1320,
       {remote,1320,{atom,1320,ets},{atom,1320,update_counter}},
       [{var,1320,'SizeT'},
        {atom,675,no},
        {tuple,1320,[{integer,676,2},{var,1320,'NoObjs'}]}]}},
     {match,1321,
      {var,1321,'_'},
      {call,1321,
       {remote,1321,{atom,1321,ets},{atom,1321,update_counter}},
       [{var,1321,'SizeT'},
        {atom,675,no},
        {tuple,1321,[{integer,677,3},{var,1321,'NoKeys'}]}]}},
     {tuple,1322,[{var,1322,'E'},{var,1322,'Acc'},{var,1322,'Cache'}]}]},
   {clause,1323,
    [{var,1323,'_E'},
     {var,1323,'L'},
     {var,1323,'Acc'},
     {var,1323,'Head'},
     {var,1323,'Cache'},
     {var,1323,'SizeT'},
     {var,1323,'NoKeys'},
     {var,1323,'NoObjs'}],
    [],
    [{call,1324,
      {atom,1324,output_slot},
      [{var,1324,'Acc'},
       {var,1324,'Head'},
       {var,1324,'Cache'},
       {var,1324,'L'},
       {var,1324,'SizeT'},
       {var,1324,'NoKeys'},
       {var,1324,'NoObjs'}]}]}]},
 {function,1326,output_slot,7,
  [{clause,1326,
    [{var,1326,'Es'},
     {var,1326,'Head'},
     {var,1326,'Cache'},
     {var,1326,'L'},
     {var,1326,'SizeT'},
     {var,1326,'NoKeys'},
     {var,1326,'NoObjs'}],
    [],
    [{match,1327,
      {var,1327,'Slot'},
      {call,1327,
       {atom,1327,element},
       [{integer,1327,1},{call,1327,{atom,1327,hd},[{var,1327,'Es'}]}]}},
     {match,1329,
      {tuple,1329,
       [{var,1329,'Bins'},{var,1329,'Size'},{var,1329,'No'},{var,1329,'KNo'}]},
      {call,1329,
       {atom,1329,prep_slot},
       [{call,1329,
         {remote,1329,{atom,1329,lists},{atom,1329,sort}},
         [{var,1329,'Es'}]},
        {var,1329,'Head'}]}},
     {match,1330,
      {var,1330,'NNoKeys'},
      {op,1330,'+',{var,1330,'NoKeys'},{var,1330,'KNo'}}},
     {match,1331,
      {var,1331,'NNoObjs'},
      {op,1331,'+',{var,1331,'NoObjs'},{var,1331,'No'}}},
     {match,1334,
      {var,1334,'BSize'},
      {op,1334,'+',{var,1334,'Size'},{integer,247,8}}},
     {match,1335,
      {var,1335,'LSize'},
      {call,1335,{atom,1335,sz2pos},[{var,1335,'BSize'}]}},
     {match,1336,
      {var,1336,'Size2'},
      {op,42,'bsl',
       {integer,42,1},
       {op,1336,'-',{var,1336,'LSize'},{integer,1336,1}}}},
     {match,1337,
      {var,1337,'Pad'},
      {bin,1337,
       [{bin_element,1337,
         {integer,1337,0},
         {op,1337,'-',{var,1337,'Size2'},{var,1337,'BSize'}},
         [{unit,8}]}]}},
     {match,1338,
      {var,1338,'BinObject'},
      {cons,1338,
       {bin,1338,
        [{bin_element,1338,{var,1338,'BSize'},{integer,1338,32},default},
         {bin_element,34,{integer,34,305419896},{integer,1338,32},default}]},
       {cons,1338,{var,1338,'Bins'},{var,1338,'Pad'}}}},
     {match,1339,
      {var,1339,'Cache1'},
      {'if',1340,
       [{clause,1341,[],
         [[{op,1341,'>',
            {var,1341,'LSize'},
            {call,1341,{atom,1341,tuple_size},[{var,1341,'Cache'}]}}]],
         [{match,1342,
           {var,1342,'C1'},
           {call,666,
            {atom,666,list_to_tuple},
            [{op,666,'++',
              {call,666,{atom,666,tuple_to_list},[{var,1342,'Cache'}]},
              {call,666,
               {remote,666,{atom,666,lists},{atom,666,duplicate}},
               [{op,666,'-',
                 {var,1342,'LSize'},
                 {call,666,{atom,666,tuple_size},[{var,1342,'Cache'}]}},
                {nil,1342}]}}]}},
          {call,663,
           {atom,663,setelement},
           [{var,1343,'LSize'},
            {var,1343,'C1'},
            {cons,1343,{var,1343,'BinObject'},{nil,1343}}]}]},
        {clause,1344,[],
         [[{atom,1344,true}]],
         [{match,1345,
           {var,1345,'CL'},
           {call,664,
            {atom,664,element},
            [{var,1345,'LSize'},{var,1345,'Cache'}]}},
          {call,663,
           {atom,663,setelement},
           [{var,1346,'LSize'},
            {var,1346,'Cache'},
            {cons,1346,{var,1346,'BinObject'},{var,1346,'CL'}}]}]}]}},
     {match,1351,
      {var,1351,'PBin'},
      {bin,1351,
       [{bin_element,1351,{var,1351,'Slot'},{integer,1351,32},default},
        {bin_element,1351,{var,1351,'BSize'},{integer,1351,32},default},
        {bin_element,1351,{var,1351,'LSize'},{integer,1351,8},default}]}},
     {match,1352,
      {var,1352,'PL'},
      {call,664,{atom,664,element},[{integer,659,1},{var,1352,'Cache1'}]}},
     {match,1353,
      {var,1353,'NCache'},
      {call,663,
       {atom,663,setelement},
       [{integer,659,1},
        {var,1353,'Cache1'},
        {cons,1353,{var,1353,'PBin'},{var,1353,'PL'}}]}},
     {call,1354,
      {atom,1354,output_slots},
      [{var,1354,'L'},
       {var,1354,'Head'},
       {var,1354,'NCache'},
       {var,1354,'SizeT'},
       {var,1354,'NNoKeys'},
       {var,1354,'NNoObjs'}]}]}]},
 {function,1356,prep_slot,2,
  [{clause,1356,
    [{var,1356,'L'},{var,1356,'Head'}],
    [[{op,1356,'=/=',
       {call,1356,
        {remote,1356,{atom,1356,erlang},{atom,1356,element}},
        [{integer,1356,10},{var,1356,'Head'}]},
       {atom,1356,set}}]],
    [{call,1357,
      {atom,1357,prep_slot},
      [{var,1357,'L'},{var,1357,'Head'},{nil,1357}]}]},
   {clause,1358,
    [{cons,1358,
      {tuple,1358,
       [{var,1358,'_Slot'},
        {var,1358,'Key'},
        {var,1358,'_Seq'},
        {var,1358,'_T'},
        {var,1358,'BT'}]},
      {var,1358,'L'}},
     {var,1358,'_Head'}],
    [],
    [{call,1359,
      {atom,1359,prep_set_slot},
      [{var,1359,'L'},
       {var,1359,'Key'},
       {var,1359,'BT'},
       {integer,1359,0},
       {integer,1359,0},
       {integer,1359,0},
       {nil,1359}]}]}]},
 {function,1361,prep_slot,3,
  [{clause,1361,
    [{cons,1361,
      {tuple,1361,
       [{var,1361,'_Slot'},
        {var,1361,'Key'},
        {var,1361,'Seq'},
        {var,1361,'T'},
        {var,1361,'_BT'}]},
      {var,1361,'L'}},
     {var,1361,'Head'},
     {var,1361,'W'}],
    [],
    [{call,1362,
      {atom,1362,prep_slot},
      [{var,1362,'L'},
       {var,1362,'Head'},
       {cons,1362,
        {tuple,1362,
         [{var,1362,'Key'},
          {tuple,1362,
           [{var,1362,'Seq'},
            {tuple,1362,[{atom,1362,insert},{var,1362,'T'}]}]}]},
        {var,1362,'W'}}]}]},
   {clause,1363,
    [{nil,1363},{var,1363,'Head'},{var,1363,'W'}],
    [],
    [{match,1364,
      {var,1364,'WLs'},
      {call,1364,
       {remote,1364,{atom,1364,dets_utils},{atom,1364,family}},
       [{var,1364,'W'}]}},
     {match,1365,
      {tuple,1365,
       [{nil,1365},
        {var,1365,'Bins'},
        {var,1365,'Size'},
        {var,1365,'No'},
        {var,1365,'KNo'},
        {var,1365,'_'}]},
      {call,1366,
       {atom,1366,eval_slot},
       [{var,1366,'WLs'},
        {nil,1366},
        {call,1366,
         {remote,1366,{atom,1366,erlang},{atom,1366,element}},
         [{integer,1366,10},{var,1366,'Head'}]},
        {nil,1366},
        {nil,1366},
        {integer,1366,0},
        {integer,1366,0},
        {integer,1366,0},
        {atom,1366,false}]}},
     {tuple,1367,
      [{var,1367,'Bins'},
       {var,1367,'Size'},
       {var,1367,'No'},
       {var,1367,'KNo'}]}]}]},
 {function,1370,prep_set_slot,7,
  [{clause,1370,
    [{cons,1370,
      {tuple,1370,
       [{var,1370,'_'},
        {var,1370,'K'},
        {var,1370,'_Seq'},
        {var,1370,'_T1'},
        {var,1370,'BT1'}]},
      {var,1370,'L'}},
     {var,1370,'K'},
     {var,1370,'_BT'},
     {var,1370,'Sz'},
     {var,1370,'NoKeys'},
     {var,1370,'NoObjs'},
     {var,1370,'Ws'}],
    [],
    [{call,1371,
      {atom,1371,prep_set_slot},
      [{var,1371,'L'},
       {var,1371,'K'},
       {var,1371,'BT1'},
       {var,1371,'Sz'},
       {var,1371,'NoKeys'},
       {var,1371,'NoObjs'},
       {var,1371,'Ws'}]}]},
   {clause,1372,
    [{cons,1372,
      {tuple,1372,
       [{var,1372,'_'},
        {var,1372,'K1'},
        {var,1372,'_Seq'},
        {var,1372,'_T1'},
        {var,1372,'BT1'}]},
      {var,1372,'L'}},
     {var,1372,'_K'},
     {var,1372,'BT'},
     {var,1372,'Sz'},
     {var,1372,'NoKeys'},
     {var,1372,'NoObjs'},
     {var,1372,'Ws'}],
    [],
    [{match,1373,
      {var,1373,'BSize'},
      {op,1373,'+',
       {call,1373,{atom,1373,byte_size},[{var,1373,'BT'}]},
       {integer,1373,4}}},
     {match,1374,
      {var,1374,'NWs'},
      {cons,1374,
       {var,1374,'Ws'},
       {cons,1374,
        {bin,1374,
         [{bin_element,1374,{var,1374,'BSize'},{integer,1374,32},default}]},
        {var,1374,'BT'}}}},
     {call,1375,
      {atom,1375,prep_set_slot},
      [{var,1375,'L'},
       {var,1375,'K1'},
       {var,1375,'BT1'},
       {op,1375,'+',{var,1375,'Sz'},{var,1375,'BSize'}},
       {op,1375,'+',{var,1375,'NoKeys'},{integer,1375,1}},
       {op,1375,'+',{var,1375,'NoObjs'},{integer,1375,1}},
       {var,1375,'NWs'}]}]},
   {clause,1376,
    [{nil,1376},
     {var,1376,'_K'},
     {var,1376,'BT'},
     {var,1376,'Sz'},
     {var,1376,'NoKeys'},
     {var,1376,'NoObjs'},
     {var,1376,'Ws'}],
    [],
    [{match,1377,
      {var,1377,'BSize'},
      {op,1377,'+',
       {call,1377,{atom,1377,byte_size},[{var,1377,'BT'}]},
       {integer,1377,4}}},
     {tuple,1378,
      [{cons,1378,
        {var,1378,'Ws'},
        {cons,1378,
         {bin,1378,
          [{bin_element,1378,{var,1378,'BSize'},{integer,1378,32},default}]},
         {var,1378,'BT'}}},
       {op,1378,'+',{var,1378,'Sz'},{var,1378,'BSize'}},
       {op,1378,'+',{var,1378,'NoKeys'},{integer,1378,1}},
       {op,1378,'+',{var,1378,'NoObjs'},{integer,1378,1}}]}]}]},
 {function,1380,segment_file,4,
  [{clause,1380,
    [{var,1380,'SizeT'},
     {var,1380,'Head'},
     {var,1380,'FileData'},
     {var,1380,'SegEnd'}],
    [],
    [{match,1381,{var,1381,'I'},{integer,1381,2}},
     {match,1382,
      {atom,1382,true},
      {call,1382,
       {remote,1382,{atom,1382,ets},{atom,1382,delete_all_objects}},
       [{var,1382,'SizeT'}]}},
     {call,1383,
      {remote,1383,{atom,1383,lists},{atom,1383,foreach}},
      [{'fun',1383,
        {clauses,
         [{clause,1383,
           [{var,1383,'X'}],
           [],
           [{match,1383,
             {atom,1383,true},
             {call,1383,
              {remote,1383,{atom,1383,ets},{atom,1383,insert}},
              [{var,1383,'SizeT'},{var,1383,'X'}]}}]}]}},
       {var,1383,'FileData'}]},
     {match,1384,
      {cons,1384,
       {tuple,1384,
        [{integer,659,1},
         {var,1384,'SegAddr'},
         {var,1384,'Data'},
         {integer,1384,0}]},
       {var,1384,'FileData1'}},
      {var,1384,'FileData'}},
     {match,1385,
      {var,1385,'NewData'},
      {'case',1386,
       {var,1386,'Data'},
       [{clause,1387,
         [{tuple,1387,[{var,1387,'InFile'},{var,1387,'In0'}]}],
         [],
         [{match,1388,
           {tuple,1388,[{var,1388,'OutFile'},{var,1388,'Out'}]},
           {call,1388,
            {atom,1388,temp_file},
            [{var,1388,'Head'},{var,1388,'SizeT'},{var,1388,'I'}]}},
          {match,1389,
           {var,1389,'_'},
           {call,1389,
            {remote,1389,{atom,1389,file},{atom,1389,close}},
            [{var,1389,'In0'}]}},
          {match,1390,
           {tuple,1390,[{atom,1390,ok},{var,1390,'In'}]},
           {call,1390,
            {remote,1390,{atom,1390,dets_utils},{atom,1390,open}},
            [{var,1390,'InFile'},
             {cons,1390,
              {atom,1390,raw},
              {cons,1390,
               {atom,1390,binary},
               {cons,1390,{atom,1390,read},{nil,1390}}}}]}},
          {match,1391,
           {tuple,1391,[{atom,1391,ok},{integer,1391,0}]},
           {call,1391,
            {remote,1391,{atom,1391,dets_utils},{atom,1391,position}},
            [{var,1391,'In'},{var,1391,'InFile'},{atom,1391,bof}]}},
          {call,1392,
           {atom,1392,seg_file},
           [{var,1392,'SegAddr'},
            {var,1392,'SegAddr'},
            {var,1392,'In'},
            {var,1392,'InFile'},
            {var,1392,'Out'},
            {var,1392,'OutFile'},
            {var,1392,'SizeT'},
            {var,1393,'SegEnd'}]},
          {match,1394,
           {var,1394,'_'},
           {call,1394,
            {remote,1394,{atom,1394,file},{atom,1394,close}},
            [{var,1394,'In'}]}},
          {match,1395,
           {var,1395,'_'},
           {call,1395,
            {remote,1395,{atom,1395,file},{atom,1395,delete}},
            [{var,1395,'InFile'}]}},
          {tuple,1396,[{var,1396,'OutFile'},{var,1396,'Out'}]}]},
        {clause,1397,
         [{var,1397,'Objects'}],
         [],
         [{match,1398,
           {tuple,1398,[{var,1398,'LastAddr'},{var,1398,'B'}]},
           {call,1398,
            {atom,1398,seg_file},
            [{var,1398,'Objects'},
             {var,1398,'SegAddr'},
             {var,1398,'SegAddr'},
             {var,1398,'SizeT'},
             {nil,1398}]}},
          {call,1399,
           {remote,1399,{atom,1399,dets_utils},{atom,1399,disk_map_segment}},
           [{var,1399,'SegAddr'},{var,1399,'B'}]},
          {match,1400,
           {var,1400,'FinalZ'},
           {op,1400,'-',{var,1400,'SegEnd'},{var,1400,'LastAddr'}}},
          {cons,1401,
           {var,1401,'B'},
           {call,1401,
            {remote,1401,{atom,1401,dets_utils},{atom,1401,make_zeros}},
            [{var,1401,'FinalZ'}]}}]}]}},
     {match,1404,
      {atom,1404,true},
      {call,1404,
       {remote,1404,{atom,1404,ets},{atom,1404,delete_all_objects}},
       [{var,1404,'SizeT'}]}},
     {call,1407,
      {remote,1407,{atom,1407,lists},{atom,1407,foreach}},
      [{'fun',1407,
        {clauses,
         [{clause,1407,
           [{var,1407,'X'}],
           [],
           [{match,1407,
             {atom,1407,true},
             {call,1407,
              {remote,1407,{atom,1407,ets},{atom,1407,insert}},
              [{var,1407,'SizeT'},{var,1407,'X'}]}}]}]}},
       {cons,1408,
        {tuple,1408,
         [{integer,660,10000},
          {var,1408,'SegAddr'},
          {var,1408,'NewData'},
          {integer,1408,0}]},
        {var,1408,'FileData1'}}]},
     {atom,1409,ok}]}]},
 {function,1411,seg_file,8,
  [{clause,1411,
    [{var,1411,'Addr'},
     {var,1411,'SS'},
     {var,1411,'In'},
     {var,1411,'InFile'},
     {var,1411,'Out'},
     {var,1411,'OutFile'},
     {var,1411,'SizeT'},
     {var,1411,'SegEnd'}],
    [],
    [{'case',1412,
      {call,1412,
       {remote,1412,{atom,1412,dets_utils},{atom,1412,read_n}},
       [{var,1412,'In'},{integer,1412,4500}]},
      [{clause,1413,
        [{atom,1413,eof}],
        [],
        [{match,1414,
          {var,1414,'FinalZ'},
          {op,1414,'-',{var,1414,'SegEnd'},{var,1414,'Addr'}}},
         {call,1415,
          {remote,1415,{atom,1415,dets_utils},{atom,1415,fwrite}},
          [{var,1415,'Out'},
           {var,1415,'OutFile'},
           {call,1415,
            {remote,1415,{atom,1415,dets_utils},{atom,1415,make_zeros}},
            [{var,1415,'FinalZ'}]}]}]},
       {clause,1416,
        [{var,1416,'Bin'}],
        [],
        [{match,1417,
          {tuple,1417,[{var,1417,'NewAddr'},{var,1417,'L'}]},
          {call,1417,
           {atom,1417,seg_file},
           [{var,1417,'Bin'},
            {var,1417,'Addr'},
            {var,1417,'SS'},
            {var,1417,'SizeT'},
            {nil,1417}]}},
         {call,1418,
          {remote,1418,{atom,1418,dets_utils},{atom,1418,disk_map_segment}},
          [{var,1418,'Addr'},{var,1418,'L'}]},
         {match,1419,
          {atom,1419,ok},
          {call,1419,
           {remote,1419,{atom,1419,dets_utils},{atom,1419,fwrite}},
           [{var,1419,'Out'},{var,1419,'OutFile'},{var,1419,'L'}]}},
         {call,1420,
          {atom,1420,seg_file},
          [{var,1420,'NewAddr'},
           {var,1420,'SS'},
           {var,1420,'In'},
           {var,1420,'InFile'},
           {var,1420,'Out'},
           {var,1420,'OutFile'},
           {var,1420,'SizeT'},
           {var,1420,'SegEnd'}]}]}]}]}]},
 {function,1423,seg_file,5,
  [{clause,1423,
    [{bin,1423,
      [{bin_element,1423,{var,1423,'Slot'},{integer,1423,32},default},
       {bin_element,1423,{var,1423,'BSize'},{integer,1423,32},default},
       {bin_element,1423,{var,1423,'LSize'},{integer,1423,8},default},
       {bin_element,1423,{var,1423,'T'},default,[binary]}]},
     {var,1423,'Addr'},
     {var,1423,'SS'},
     {var,1423,'SizeT'},
     {var,1423,'L'}],
    [],
    [{call,1424,
      {atom,1424,seg_file_item},
      [{var,1424,'T'},
       {var,1424,'Addr'},
       {var,1424,'SS'},
       {var,1424,'SizeT'},
       {var,1424,'L'},
       {var,1424,'Slot'},
       {var,1424,'BSize'},
       {var,1424,'LSize'}]}]},
   {clause,1425,
    [{cons,1425,
      {bin,1425,
       [{bin_element,1425,{var,1425,'Slot'},{integer,1425,32},default},
        {bin_element,1425,{var,1425,'BSize'},{integer,1425,32},default},
        {bin_element,1425,{var,1425,'LSize'},{integer,1425,8},default}]},
      {var,1425,'T'}},
     {var,1425,'Addr'},
     {var,1425,'SS'},
     {var,1425,'SizeT'},
     {var,1425,'L'}],
    [],
    [{call,1426,
      {atom,1426,seg_file_item},
      [{var,1426,'T'},
       {var,1426,'Addr'},
       {var,1426,'SS'},
       {var,1426,'SizeT'},
       {var,1426,'L'},
       {var,1426,'Slot'},
       {var,1426,'BSize'},
       {var,1426,'LSize'}]}]},
   {clause,1427,
    [{nil,1427},
     {var,1427,'Addr'},
     {var,1427,'_SS'},
     {var,1427,'_SizeT'},
     {var,1427,'L'}],
    [],
    [{tuple,1428,
      [{var,1428,'Addr'},
       {call,1428,
        {remote,1428,{atom,1428,lists},{atom,1428,reverse}},
        [{var,1428,'L'}]}]}]},
   {clause,1429,
    [{bin,1429,[]},
     {var,1429,'Addr'},
     {var,1429,'_SS'},
     {var,1429,'_SizeT'},
     {var,1429,'L'}],
    [],
    [{tuple,1430,
      [{var,1430,'Addr'},
       {call,1430,
        {remote,1430,{atom,1430,lists},{atom,1430,reverse}},
        [{var,1430,'L'}]}]}]}]},
 {function,1432,seg_file_item,8,
  [{clause,1432,
    [{var,1432,'T'},
     {var,1432,'Addr'},
     {var,1432,'SS'},
     {var,1432,'SizeT'},
     {var,1432,'L'},
     {var,1432,'Slot'},
     {var,1432,'BSize'},
     {var,1432,'LSize'}],
    [],
    [{match,1436,
      {var,1436,'SlotPos'},
      {op,1436,'+',
       {var,1436,'SS'},
       {op,1436,'*',
        {op,1436,'*',{integer,245,2},{integer,1436,4}},
        {var,1436,'Slot'}}}},
     {match,1437,
      {var,1437,'NoZeros'},
      {op,1437,'-',{var,1437,'SlotPos'},{var,1437,'Addr'}}},
     {match,1438,
      {var,1438,'PSize'},
      {op,1438,'+',
       {var,1438,'NoZeros'},
       {op,1438,'*',{integer,245,2},{integer,1438,4}}}},
     {match,1439,
      {var,1439,'Inc'},
      {op,42,'bsl',
       {integer,42,1},
       {op,1439,'-',{var,1439,'LSize'},{integer,1439,1}}}},
     {match,1440,
      {var,1440,'CollP'},
      {op,1440,'-',
       {call,1440,
        {remote,1440,{atom,1440,ets},{atom,1440,update_counter}},
        [{var,1440,'SizeT'},{var,1440,'LSize'},{var,1440,'Inc'}]},
       {var,1440,'Inc'}}},
     {match,1441,
      {var,1441,'PointerBin'},
      {'if',1441,
       [{clause,1442,[],
         [[{op,1442,'=:=',{var,1442,'NoZeros'},{integer,1442,0}}]],
         [{bin,1443,
           [{bin_element,1443,{var,1443,'BSize'},{integer,1443,32},default},
            {bin_element,1443,
             {var,1443,'CollP'},
             {integer,1443,32},
             default}]}]},
        {clause,1444,[],
         [[{op,1444,'>',{var,1444,'NoZeros'},{integer,1444,100}}]],
         [{cons,1445,
           {call,1445,
            {remote,1445,{atom,1445,dets_utils},{atom,1445,make_zeros}},
            [{var,1445,'NoZeros'}]},
           {bin,1446,
            [{bin_element,1446,{var,1446,'BSize'},{integer,1446,32},default},
             {bin_element,1446,
              {var,1446,'CollP'},
              {integer,1446,32},
              default}]}}]},
        {clause,1447,[],
         [[{atom,1447,true}]],
         [{bin,1448,
           [{bin_element,1448,
             {integer,1448,0},
             {var,1448,'NoZeros'},
             [{unit,8}]},
            {bin_element,1448,{var,1448,'BSize'},{integer,1448,32},default},
            {bin_element,1448,
             {var,1448,'CollP'},
             {integer,1448,32},
             default}]}]}]}},
     {call,1450,
      {atom,1450,seg_file},
      [{var,1450,'T'},
       {op,1450,'+',{var,1450,'Addr'},{var,1450,'PSize'}},
       {var,1450,'SS'},
       {var,1450,'SizeT'},
       {cons,1450,{var,1450,'PointerBin'},{var,1450,'L'}}]}]}]},
 {function,1452,temp_file,3,
  [{clause,1452,
    [{var,1452,'Head'},{var,1452,'SizeT'},{var,1452,'N'}],
    [],
    [{match,1453,
      {var,1453,'TmpName'},
      {call,1453,
       {remote,1453,{atom,1453,lists},{atom,1453,concat}},
       [{cons,1453,
         {call,1453,
          {remote,1453,{atom,1453,erlang},{atom,1453,element}},
          [{integer,1453,23},{var,1453,'Head'}]},
         {cons,1453,{atom,1453,'.'},{cons,1453,{var,1453,'N'},{nil,1453}}}}]}},
     {match,1454,
      {tuple,1454,[{atom,1454,ok},{var,1454,'Fd'}]},
      {call,1454,
       {remote,1454,{atom,1454,dets_utils},{atom,1454,open}},
       [{var,1454,'TmpName'},
        {cons,1454,
         {atom,1454,raw},
         {cons,1454,
          {atom,1454,binary},
          {cons,1454,{atom,1454,write},{nil,1454}}}}]}},
     {match,1456,
      {atom,1456,true},
      {call,1456,
       {remote,1456,{atom,1456,ets},{atom,1456,insert}},
       [{var,1456,'SizeT'},
        {tuple,1456,
         [{var,1456,'N'},
          {integer,1456,0},
          {tuple,1456,[{var,1456,'TmpName'},{var,1456,'Fd'}]},
          {integer,1456,0}]}]}},
     {tuple,1457,[{var,1457,'TmpName'},{var,1457,'Fd'}]}]}]},
 {function,1460,fsck_input,4,
  [{clause,1460,
    [{var,1460,'Head'},
     {var,1460,'Fd'},
     {var,1460,'Cntrs'},
     {var,1460,'FileHeader'}],
    [],
    [{match,1461,
      {var,1461,'MaxSz0'},
      {'case',1461,
       {call,1461,
        {remote,1461,{atom,1461,erlang},{atom,1461,element}},
        [{integer,1461,18},{var,1461,'FileHeader'}]},
       [{clause,1462,
         [{atom,1462,true}],
         [[{call,1462,
            {atom,1462,is_integer},
            [{call,1462,
              {remote,1462,{atom,1462,erlang},{atom,1462,element}},
              [{integer,1462,15},{var,1462,'FileHeader'}]}]}]],
         [{op,42,'bsl',
           {integer,42,1},
           {call,1463,
            {atom,1463,max_objsize},
            [{call,1463,
              {remote,1463,{atom,1463,erlang},{atom,1463,element}},
              [{integer,1463,15},{var,1463,'FileHeader'}]}]}}]},
        {clause,1464,
         [{var,1464,'_'}],
         [],
         [{'case',1467,
           {call,1467,
            {remote,1467,{atom,1467,file},{atom,1467,position}},
            [{var,1467,'Fd'},{atom,1467,eof}]},
           [{clause,1468,
             [{tuple,1468,[{atom,1468,ok},{var,1468,'Pos'}]}],
             [],
             [{var,1469,'Pos'}]},
            {clause,1470,
             [{var,1470,'_'}],
             [],
             [{op,1471,'bsl',{integer,1471,1},{integer,1471,32}}]}]}]}]}},
     {match,1474,
      {var,1474,'MaxSz'},
      {call,1474,
       {remote,1474,{atom,1474,erlang},{atom,1474,max}},
       [{var,1474,'MaxSz0'},{integer,38,8192}]}},
     {match,1475,
      {var,1475,'State0'},
      {call,1475,
       {atom,1475,fsck_read},
       [{op,209,'+',
         {op,200,'+',
          {op,199,'+',
           {op,199,'+',
            {op,198,'+',
             {integer,198,56},
             {op,194,'*',{integer,194,28},{integer,194,4}}},
            {integer,195,16}},
           {integer,196,4}},
          {integer,192,124}},
         {op,209,'*',{integer,209,4},{integer,208,256}}},
        {var,1475,'Fd'},
        {nil,1475},
        {integer,1475,0}]}},
     {call,1476,
      {atom,1476,fsck_input},
      [{var,1476,'Head'},
       {var,1476,'State0'},
       {var,1476,'Fd'},
       {var,1476,'MaxSz'},
       {var,1476,'Cntrs'}]}]}]},
 {function,1478,fsck_input,5,
  [{clause,1478,
    [{var,1478,'Head'},
     {var,1478,'State'},
     {var,1478,'Fd'},
     {var,1478,'MaxSz'},
     {var,1478,'Cntrs'}],
    [],
    [{'fun',1479,
      {clauses,
       [{clause,1479,[{atom,1479,close}],[],[{atom,1480,ok}]},
        {clause,1481,
         [{atom,1481,read}],
         [],
         [{'case',1482,
           {var,1482,'State'},
           [{clause,1483,[{atom,1483,done}],[],[{atom,1484,end_of_input}]},
            {clause,1485,
             [{tuple,1485,
               [{atom,1485,done},{var,1485,'L'},{var,1485,'_Seq'}]}],
             [],
             [{match,1486,
               {var,1486,'R'},
               {call,1486,
                {atom,1486,count_input},
                [{var,1486,'Head'},{var,1486,'Cntrs'},{var,1486,'L'}]}},
              {tuple,1487,
               [{var,1487,'R'},
                {call,1487,
                 {atom,1487,fsck_input},
                 [{var,1487,'Head'},
                  {atom,1487,done},
                  {var,1487,'Fd'},
                  {var,1487,'MaxSz'},
                  {var,1487,'Cntrs'}]}]}]},
            {clause,1488,
             [{tuple,1488,
               [{atom,1488,cont},
                {var,1488,'L'},
                {var,1488,'Bin'},
                {var,1488,'Pos'},
                {var,1488,'Seq'}]}],
             [],
             [{match,1489,
               {var,1489,'R'},
               {call,1489,
                {atom,1489,count_input},
                [{var,1489,'Head'},{var,1489,'Cntrs'},{var,1489,'L'}]}},
              {match,1490,
               {var,1490,'FR'},
               {call,1490,
                {atom,1490,fsck_objs},
                [{var,1490,'Bin'},
                 {call,1490,
                  {remote,1490,{atom,1490,erlang},{atom,1490,element}},
                  [{integer,1490,11},{var,1490,'Head'}]},
                 {var,1490,'Head'},
                 {nil,1490},
                 {var,1490,'Seq'}]}},
              {match,1491,
               {var,1491,'NewState'},
               {call,1491,
                {atom,1491,fsck_read},
                [{var,1491,'FR'},
                 {var,1491,'Pos'},
                 {var,1491,'Fd'},
                 {var,1491,'MaxSz'},
                 {var,1491,'Head'}]}},
              {tuple,1492,
               [{var,1492,'R'},
                {call,1492,
                 {atom,1492,fsck_input},
                 [{var,1492,'Head'},
                  {var,1492,'NewState'},
                  {var,1492,'Fd'},
                  {var,1492,'MaxSz'},
                  {var,1492,'Cntrs'}]}]}]}]}]}]}}]}]},
 {function,1497,count_input,3,
  [{clause,1497,
    [{var,1497,'Head'},{var,1497,'Cntrs'},{var,1497,'L'}],
    [[{op,1497,'=:=',
       {call,1497,
        {remote,1497,{atom,1497,erlang},{atom,1497,element}},
        [{integer,1497,29},{var,1497,'Head'}]},
       {integer,1497,8}}]],
    [{call,1498,
      {atom,1498,count_input1},
      [{var,1498,'Cntrs'},{var,1498,'L'},{nil,1498}]}]},
   {clause,1499,
    [{var,1499,'_Head'},{var,1499,'_Cntrs'},{var,1499,'L'}],
    [],
    [{call,1500,
      {remote,1500,{atom,1500,lists},{atom,1500,reverse}},
      [{var,1500,'L'}]}]}]},
 {function,1502,count_input1,3,
  [{clause,1502,
    [{var,1502,'Cntrs'},
     {cons,1502,{cons,1502,{var,1502,'LogSz'},{var,1502,'B'}},{var,1502,'Ts'}},
     {var,1502,'L'}],
    [],
    [{'case',1503,
      {'catch',1503,
       {call,1503,
        {remote,1503,{atom,1503,ets},{atom,1503,update_counter}},
        [{var,1503,'Cntrs'},{var,1503,'LogSz'},{integer,1503,1}]}},
      [{clause,1504,
        [{var,1504,'N'}],
        [[{call,1504,{atom,1504,is_integer},[{var,1504,'N'}]}]],
        [{atom,1504,ok}]},
       {clause,1505,
        [{var,1505,'_Badarg'}],
        [],
        [{match,1505,
          {atom,1505,true},
          {call,1505,
           {remote,1505,{atom,1505,ets},{atom,1505,insert}},
           [{var,1505,'Cntrs'},
            {tuple,1505,[{var,1505,'LogSz'},{integer,1505,1}]}]}}]}]},
     {call,1507,
      {atom,1507,count_input1},
      [{var,1507,'Cntrs'},
       {var,1507,'Ts'},
       {cons,1507,{var,1507,'B'},{var,1507,'L'}}]}]},
   {clause,1508,
    [{var,1508,'_Cntrs'},{nil,1508},{var,1508,'L'}],
    [],
    [{var,1509,'L'}]}]},
 {function,1511,fsck_read,4,
  [{clause,1511,
    [{var,1511,'Pos'},{var,1511,'F'},{var,1511,'L'},{var,1511,'Seq'}],
    [],
    [{'case',1512,
      {call,1512,
       {remote,1512,{atom,1512,file},{atom,1512,position}},
       [{var,1512,'F'},{var,1512,'Pos'}]},
      [{clause,1513,
        [{tuple,1513,[{atom,1513,ok},{var,1513,'_'}]}],
        [],
        [{call,1514,
          {atom,1514,read_more_bytes},
          [{nil,1514},
           {integer,1514,0},
           {var,1514,'Pos'},
           {var,1514,'F'},
           {var,1514,'L'},
           {var,1514,'Seq'}]}]},
       {clause,1515,
        [{var,1515,'_Error'}],
        [],
        [{tuple,1516,
          [{atom,1516,done},{var,1516,'L'},{var,1516,'Seq'}]}]}]}]}]},
 {function,1519,fsck_read,5,
  [{clause,1519,
    [{tuple,1519,
      [{atom,1519,more},
       {var,1519,'Bin'},
       {var,1519,'Sz'},
       {var,1519,'L'},
       {var,1519,'Seq'}]},
     {var,1519,'Pos'},
     {var,1519,'F'},
     {var,1519,'MaxSz'},
     {var,1519,'Head'}],
    [[{op,1519,'>',{var,1519,'Sz'},{var,1519,'MaxSz'}}]],
    [{match,1520,
      {var,1520,'FR'},
      {call,1520,
       {atom,1520,skip_bytes},
       [{var,1520,'Bin'},
        {integer,254,16},
        {call,1520,
         {remote,1520,{atom,1520,erlang},{atom,1520,element}},
         [{integer,1520,11},{var,1520,'Head'}]},
        {var,1520,'Head'},
        {var,1520,'L'},
        {var,1520,'Seq'}]}},
     {call,1521,
      {atom,1521,fsck_read},
      [{var,1521,'FR'},
       {var,1521,'Pos'},
       {var,1521,'F'},
       {var,1521,'MaxSz'},
       {var,1521,'Head'}]}]},
   {clause,1522,
    [{tuple,1522,
      [{atom,1522,more},
       {var,1522,'Bin'},
       {var,1522,'Sz'},
       {var,1522,'L'},
       {var,1522,'Seq'}]},
     {var,1522,'Pos'},
     {var,1522,'F'},
     {var,1522,'_MaxSz'},
     {var,1522,'_Head'}],
    [],
    [{call,1523,
      {atom,1523,read_more_bytes},
      [{var,1523,'Bin'},
       {var,1523,'Sz'},
       {var,1523,'Pos'},
       {var,1523,'F'},
       {var,1523,'L'},
       {var,1523,'Seq'}]}]},
   {clause,1524,
    [{tuple,1524,
      [{atom,1524,new},{var,1524,'Skip'},{var,1524,'L'},{var,1524,'Seq'}]},
     {var,1524,'Pos'},
     {var,1524,'F'},
     {var,1524,'_MaxSz'},
     {var,1524,'_Head'}],
    [],
    [{match,1525,
      {var,1525,'NewPos'},
      {op,1525,'+',{var,1525,'Pos'},{var,1525,'Skip'}}},
     {call,1526,
      {atom,1526,fsck_read},
      [{var,1526,'NewPos'},
       {var,1526,'F'},
       {var,1526,'L'},
       {var,1526,'Seq'}]}]}]},
 {function,1528,read_more_bytes,6,
  [{clause,1528,
    [{var,1528,'B'},
     {var,1528,'Min'},
     {var,1528,'Pos'},
     {var,1528,'F'},
     {var,1528,'L'},
     {var,1528,'Seq'}],
    [],
    [{match,1529,
      {var,1529,'Max'},
      {'if',1529,
       [{clause,1530,[],
         [[{op,1530,'<',{var,1530,'Min'},{integer,38,8192}}]],
         [{integer,38,8192}]},
        {clause,1531,[],[[{atom,1531,true}]],[{var,1531,'Min'}]}]}},
     {'case',1533,
      {call,1533,
       {remote,1533,{atom,1533,dets_utils},{atom,1533,read_n}},
       [{var,1533,'F'},{var,1533,'Max'}]},
      [{clause,1534,
        [{atom,1534,eof}],
        [],
        [{tuple,1535,[{atom,1535,done},{var,1535,'L'},{var,1535,'Seq'}]}]},
       {clause,1536,
        [{var,1536,'Bin'}],
        [],
        [{match,1537,
          {var,1537,'NewPos'},
          {op,1537,'+',
           {var,1537,'Pos'},
           {call,1537,{atom,1537,byte_size},[{var,1537,'Bin'}]}}},
         {tuple,1538,
          [{atom,1538,cont},
           {var,1538,'L'},
           {call,1538,
            {atom,1538,list_to_binary},
            [{cons,1538,
              {var,1538,'B'},
              {cons,1538,{var,1538,'Bin'},{nil,1538}}}]},
           {var,1538,'NewPos'},
           {var,1538,'Seq'}]}]}]}]}]},
 {function,1541,fsck_objs,5,
  [{clause,1541,
    [{match,1541,
      {var,1541,'Bin'},
      {bin,1541,
       [{bin_element,1541,{var,1541,'Sz'},{integer,1541,32},default},
        {bin_element,1541,{var,1541,'Status'},{integer,1541,32},default},
        {bin_element,1541,{var,1541,'Tail'},default,[binary]}]}},
     {var,1541,'Kp'},
     {var,1541,'Head'},
     {var,1541,'L'},
     {var,1541,'Seq'}],
    [],
    [{'if',1542,
      [{clause,1543,[],
        [[{op,1543,'=:=',{var,1543,'Status'},{integer,34,305419896}}]],
        [{match,1544,
          {var,1544,'Sz1'},
          {op,1544,'-',{var,1544,'Sz'},{integer,247,8}}},
         {'case',1545,
          {var,1545,'Tail'},
          [{clause,1546,
            [{bin,1546,
              [{bin_element,1546,
                {var,1546,'BinTerm'},
                {var,1546,'Sz1'},
                [binary]},
               {bin_element,1546,{var,1546,'Tail2'},default,[binary]}]}],
            [],
            [{'case',1547,
              {'catch',1547,
               {call,1547,
                {atom,1547,bin2keybins},
                [{var,1547,'BinTerm'},{var,1547,'Head'}]}},
              [{clause,1548,
                [{tuple,1548,[{atom,1548,'EXIT'},{var,1548,'_Reason'}]}],
                [],
                [{call,1550,
                  {atom,1550,skip_bytes},
                  [{var,1550,'Bin'},
                   {integer,254,16},
                   {var,1550,'Kp'},
                   {var,1550,'Head'},
                   {var,1550,'L'},
                   {var,1550,'Seq'}]}]},
               {clause,1551,
                [{var,1551,'BOs'}],
                [],
                [{match,1552,
                  {tuple,1552,[{var,1552,'NL'},{var,1552,'NSeq'}]},
                  {call,1552,
                   {atom,1552,make_objects},
                   [{var,1552,'BOs'},
                    {var,1552,'Seq'},
                    {var,1552,'Kp'},
                    {var,1552,'Head'},
                    {var,1552,'L'}]}},
                 {match,1553,
                  {var,1553,'Skip'},
                  {op,1553,'-',
                   {op,42,'bsl',
                    {integer,42,1},
                    {op,1553,'-',
                     {call,1553,{atom,1553,sz2pos},[{var,1553,'Sz'}]},
                     {integer,1553,1}}},
                   {var,1553,'Sz'}}},
                 {call,1554,
                  {atom,1554,skip_bytes},
                  [{var,1554,'Tail2'},
                   {var,1554,'Skip'},
                   {var,1554,'Kp'},
                   {var,1554,'Head'},
                   {var,1554,'NL'},
                   {var,1554,'NSeq'}]}]}]}]},
           {clause,1556,
            [{var,1556,'_'}],
            [[{op,1556,'<',
               {call,1556,{atom,1556,byte_size},[{var,1556,'Tail'}]},
               {var,1556,'Sz1'}}]],
            [{tuple,1557,
              [{atom,1557,more},
               {var,1557,'Bin'},
               {var,1557,'Sz'},
               {var,1557,'L'},
               {var,1557,'Seq'}]}]}]}]},
       {clause,1559,[],
        [[{atom,1559,true}]],
        [{call,1560,
          {atom,1560,skip_bytes},
          [{var,1560,'Bin'},
           {integer,254,16},
           {var,1560,'Kp'},
           {var,1560,'Head'},
           {var,1560,'L'},
           {var,1560,'Seq'}]}]}]}]},
   {clause,1562,
    [{var,1562,'Bin'},
     {var,1562,'_Kp'},
     {var,1562,'_Head'},
     {var,1562,'L'},
     {var,1562,'Seq'}],
    [],
    [{tuple,1563,
      [{atom,1563,more},
       {var,1563,'Bin'},
       {integer,1563,0},
       {var,1563,'L'},
       {var,1563,'Seq'}]}]}]},
 {function,1565,make_objects,5,
  [{clause,1565,
    [{cons,1565,{tuple,1565,[{var,1565,'K'},{var,1565,'BT'}]},{var,1565,'Os'}},
     {var,1565,'Seq'},
     {var,1565,'Kp'},
     {var,1565,'Head'},
     {var,1565,'L'}],
    [[{op,1565,'=:=',
       {call,1565,
        {remote,1565,{atom,1565,erlang},{atom,1565,element}},
        [{integer,1565,29},{var,1565,'Head'}]},
       {integer,1565,8}}]],
    [{match,1566,
      {var,1566,'LogSz'},
      {call,1566,
       {remote,1566,{atom,1566,dets_v8},{atom,1566,sz2pos}},
       [{op,1566,'+',
         {call,1566,{atom,1566,byte_size},[{var,1566,'BT'}]},
         {integer,250,12}}]}},
     {match,1567,
      {var,1567,'Slot'},
      {call,1567,
       {remote,1567,{atom,1567,dets_v8},{atom,1567,db_hash}},
       [{var,1567,'K'},{var,1567,'Head'}]}},
     {match,1568,
      {var,1568,'Obj'},
      {cons,1568,
       {var,1568,'LogSz'},
       {bin,1568,
        [{bin_element,1568,{var,1568,'Slot'},{integer,1568,32},default},
         {bin_element,1568,{var,1568,'LogSz'},{integer,1568,8},default},
         {bin_element,1568,{var,1568,'BT'},default,[binary]}]}}},
     {call,1569,
      {atom,1569,make_objects},
      [{var,1569,'Os'},
       {var,1569,'Seq'},
       {var,1569,'Kp'},
       {var,1569,'Head'},
       {cons,1569,{var,1569,'Obj'},{var,1569,'L'}}]}]},
   {clause,1570,
    [{cons,1570,{tuple,1570,[{var,1570,'K'},{var,1570,'BT'}]},{var,1570,'Os'}},
     {var,1570,'Seq'},
     {var,1570,'Kp'},
     {var,1570,'Head'},
     {var,1570,'L'}],
    [],
    [{match,1571,
      {var,1571,'Obj'},
      {call,1571,
       {atom,1571,make_object},
       [{var,1571,'Head'},{var,1571,'K'},{var,1571,'Seq'},{var,1571,'BT'}]}},
     {call,1572,
      {atom,1572,make_objects},
      [{var,1572,'Os'},
       {op,1572,'+',{var,1572,'Seq'},{integer,1572,1}},
       {var,1572,'Kp'},
       {var,1572,'Head'},
       {cons,1572,{var,1572,'Obj'},{var,1572,'L'}}]}]},
   {clause,1573,
    [{nil,1573},
     {var,1573,'Seq'},
     {var,1573,'_Kp'},
     {var,1573,'_Head'},
     {var,1573,'L'}],
    [],
    [{tuple,1574,[{var,1574,'L'},{var,1574,'Seq'}]}]}]},
 {function,1577,make_object,4,
  [{clause,1577,
    [{var,1577,'Head'},{var,1577,'Key'},{var,1577,'Seq'},{var,1577,'BT'}],
    [],
    [{match,1578,
      {var,1578,'Slot'},
      {call,1578,{atom,1578,db_hash},[{var,1578,'Key'},{var,1578,'Head'}]}},
     {bin,1579,
      [{bin_element,1579,{var,1579,'Slot'},{integer,1579,32},default},
       {bin_element,1579,{var,1579,'Seq'},{integer,1579,32},default},
       {bin_element,1579,{var,1579,'BT'},default,[binary]}]}]}]},
 {function,1582,skip_bytes,6,
  [{clause,1582,
    [{var,1582,'Bin'},
     {var,1582,'Skip'},
     {var,1582,'Kp'},
     {var,1582,'Head'},
     {var,1582,'L'},
     {var,1582,'Seq'}],
    [],
    [{'case',1583,
      {var,1583,'Bin'},
      [{clause,1584,
        [{bin,1584,
          [{bin_element,1584,{var,1584,'_'},{var,1584,'Skip'},[binary]},
           {bin_element,1584,{var,1584,'Tail'},default,[binary]}]}],
        [],
        [{call,1585,
          {atom,1585,fsck_objs},
          [{var,1585,'Tail'},
           {var,1585,'Kp'},
           {var,1585,'Head'},
           {var,1585,'L'},
           {var,1585,'Seq'}]}]},
       {clause,1586,
        [{var,1586,'_'}],
        [[{op,1586,'<',
           {call,1586,{atom,1586,byte_size},[{var,1586,'Bin'}]},
           {var,1586,'Skip'}}]],
        [{tuple,1587,
          [{atom,1587,new},
           {op,1587,'-',
            {var,1587,'Skip'},
            {call,1587,{atom,1587,byte_size},[{var,1587,'Bin'}]}},
           {var,1587,'L'},
           {var,1587,'Seq'}]}]}]}]}]},
 {function,1595,do_perform_save,1,
  [{clause,1595,
    [{var,1595,'H'}],
    [],
    [{match,1596,
      {tuple,1596,[{atom,1596,ok},{var,1596,'FreeListsPointer'}]},
      {call,1596,
       {remote,1596,{atom,1596,dets_utils},{atom,1596,position}},
       [{var,1596,'H'},{atom,1596,eof}]}},
     {match,1597,
      {var,1597,'H1'},
      {call,1597,
       {remote,1597,{atom,1597,erlang},{atom,1597,setelement}},
       [{integer,1597,13},{var,1597,'H'},{var,1597,'FreeListsPointer'}]}},
     {match,1598,
      {tuple,1598,[{var,1598,'FLW'},{var,1598,'FLSize'}]},
      {call,1598,{atom,1598,free_lists_to_file},[{var,1598,'H1'}]}},
     {match,1599,
      {var,1599,'FileSize'},
      {op,1599,'+',
       {op,1599,'+',{var,1599,'FreeListsPointer'},{var,1599,'FLSize'}},
       {integer,1599,4}}},
     {match,1600,
      {var,1600,'AdjustedFileSize'},
      {'case',1600,
       {call,1600,
        {remote,1600,{atom,1600,erlang},{atom,1600,element}},
        [{integer,1600,32},{var,1600,'H'}]},
       [{clause,209,
         [{op,209,'+',
           {op,200,'+',
            {op,199,'+',
             {op,199,'+',
              {op,198,'+',
               {integer,198,56},
               {op,194,'*',{integer,194,28},{integer,194,4}}},
              {integer,195,16}},
             {integer,196,4}},
            {integer,192,124}},
           {op,209,'*',{integer,209,4},{integer,208,256}}}],
         [],
         [{var,1601,'FileSize'}]},
        {clause,1602,
         [{var,1602,'Base'}],
         [],
         [{op,1602,'-',{var,1602,'FileSize'},{var,1602,'Base'}}]}]}},
     {match,1604,
      {atom,1604,ok},
      {call,1604,
       {remote,1604,{atom,1604,dets_utils},{atom,1604,write}},
       [{var,1604,'H1'},
        {cons,1604,
         {var,1604,'FLW'},
         {bin,1604,
          [{bin_element,1604,
            {var,1604,'AdjustedFileSize'},
            {integer,1604,32},
            default}]}}]}},
     {match,1605,
      {var,1605,'FileHeader'},
      {call,1605,
       {atom,1605,file_header},
       [{var,1605,'H1'},{var,1605,'FreeListsPointer'},{integer,242,1}]}},
     {'case',1606,
      {call,1606,
       {remote,1606,{atom,1606,dets_utils},{atom,1606,debug_mode}},
       []},
      [{clause,1607,
        [{atom,1607,true}],
        [],
        [{match,1608,
          {var,1608,'TmpHead0'},
          {call,1608,
           {atom,1608,init_freelist},
           [{call,1608,
             {remote,1608,{atom,1608,erlang},{atom,1608,setelement}},
             [{integer,1608,17},{var,1608,'H1'},{atom,1608,false}]},
            {atom,1608,true}]}},
         {match,1609,
          {var,1609,'TmpHead'},
          {call,1609,
           {remote,1609,{atom,1609,erlang},{atom,1609,setelement}},
           [{integer,1609,32},
            {var,1609,'TmpHead0'},
            {call,1609,
             {remote,1609,{atom,1609,erlang},{atom,1609,element}},
             [{integer,1609,32},{var,1609,'H1'}]}]}},
         {'case',1610,
          {'catch',1611,
           {op,1612,'=:=',
            {call,1611,
             {remote,1611,
              {atom,1611,dets_utils},
              {atom,1611,all_allocated_as_list}},
             [{var,1611,'TmpHead'}]},
            {call,1612,
             {remote,1612,
              {atom,1612,dets_utils},
              {atom,1612,all_allocated_as_list}},
             [{var,1612,'H1'}]}}},
          [{clause,1614,
            [{atom,1614,true}],
            [],
            [{call,1615,
              {remote,1615,{atom,1615,dets_utils},{atom,1615,pwrite}},
              [{var,1615,'H1'},
               {cons,1615,
                {tuple,1615,[{integer,1615,0},{var,1615,'FileHeader'}]},
                {nil,1615}}]}]},
           {clause,1616,
            [{var,1616,'_'}],
            [],
            [{call,1617,
              {atom,1617,throw},
              [{call,1618,
                {remote,1618,
                 {atom,1618,dets_utils},
                 {atom,1618,corrupt_reason}},
                [{var,1618,'H1'},
                 {tuple,1618,
                  [{atom,1618,failed_to_save_free_lists},
                   {var,1619,'FreeListsPointer'},
                   {call,1620,
                    {remote,1620,{atom,1620,erlang},{atom,1620,element}},
                    [{integer,1620,12},{var,1620,'TmpHead'}]},
                   {call,1621,
                    {remote,1621,{atom,1621,erlang},{atom,1621,element}},
                    [{integer,1621,12},{var,1621,'H1'}]}]}]}]}]}]}]},
       {clause,1623,
        [{atom,1623,false}],
        [],
        [{call,1624,
          {remote,1624,{atom,1624,dets_utils},{atom,1624,pwrite}},
          [{var,1624,'H1'},
           {cons,1624,
            {tuple,1624,[{integer,1624,0},{var,1624,'FileHeader'}]},
            {nil,1624}}]}]}]}]}]},
 {function,1627,file_header,3,
  [{clause,1627,
    [{var,1627,'Head'},
     {var,1627,'FreeListsPointer'},
     {var,1627,'ClosedProperly'}],
    [],
    [{match,1628,
      {var,1628,'NoColls'},
      {'case',1628,
       {call,1628,
        {remote,1628,{atom,1628,erlang},{atom,1628,element}},
        [{integer,1628,14},{var,1628,'Head'}]},
       [{clause,1629,[{atom,1629,undefined}],[],[{nil,1629}]},
        {clause,1630,[{var,1630,'NC'}],[],[{var,1630,'NC'}]}]}},
     {match,1632,
      {var,1632,'L'},
      {call,1632,
       {remote,1632,{atom,1632,orddict},{atom,1632,merge}},
       [{'fun',1632,
         {clauses,
          [{clause,1632,
            [{var,1632,'_K'},{var,1632,'V1'},{var,1632,'V2'}],
            [],
            [{op,1632,'+',{var,1632,'V1'},{var,1632,'V2'}}]}]}},
        {var,1633,'NoColls'},
        {call,1634,
         {remote,1634,{atom,1634,lists},{atom,1634,map}},
         [{'fun',1634,
           {clauses,
            [{clause,1634,
              [{var,1634,'X'}],
              [],
              [{tuple,1634,[{var,1634,'X'},{integer,1634,0}]}]}]}},
          {call,1634,
           {remote,1634,{atom,1634,lists},{atom,1634,seq}},
           [{integer,1634,4},
            {op,1634,'-',{integer,280,32},{integer,1634,1}}]}]}]}},
     {match,1635,
      {var,1635,'CW'},
      {call,1635,
       {remote,1635,{atom,1635,lists},{atom,1635,map}},
       [{'fun',1635,
         {clauses,
          [{clause,1635,
            [{tuple,1635,[{var,1635,'_LSz'},{var,1635,'N'}]}],
            [],
            [{bin,1635,
              [{bin_element,1635,
                {var,1635,'N'},
                {integer,1635,32},
                default}]}]}]}},
        {var,1635,'L'}]}},
     {call,1636,
      {atom,1636,file_header},
      [{var,1636,'Head'},
       {var,1636,'FreeListsPointer'},
       {var,1636,'ClosedProperly'},
       {var,1636,'CW'}]}]}]},
 {function,1638,file_header,4,
  [{clause,1638,
    [{var,1638,'Head'},
     {var,1638,'FreeListsPointer'},
     {var,1638,'ClosedProperly'},
     {var,1638,'NoColls'}],
    [],
    [{match,1639,{var,1639,'Cookie'},{integer,31,11259375}},
     {match,1640,
      {var,1640,'TypeCode'},
      {call,1640,
       {remote,1640,{atom,1640,dets_utils},{atom,1640,type_to_code}},
       [{call,1640,
         {remote,1640,{atom,1640,erlang},{atom,1640,element}},
         [{integer,1640,10},{var,1640,'Head'}]}]}},
     {match,1641,{var,1641,'Version'},{integer,239,9}},
     {match,1642,
      {var,1642,'HashMethod'},
      {call,1642,
       {atom,1642,hash_method_to_code},
       [{call,1642,
         {remote,1642,{atom,1642,erlang},{atom,1642,element}},
         [{integer,1642,18},{var,1642,'Head'}]}]}},
     {match,1643,
      {var,1643,'H1'},
      {bin,1643,
       [{bin_element,1643,
         {var,1643,'FreeListsPointer'},
         {integer,1643,32},
         default},
        {bin_element,1643,{var,1643,'Cookie'},{integer,1643,32},default},
        {bin_element,1643,
         {var,1643,'ClosedProperly'},
         {integer,1643,32},
         default}]}},
     {match,1644,
      {var,1644,'H2'},
      {bin,1644,
       [{bin_element,1644,{var,1644,'TypeCode'},{integer,1644,32},default},
        {bin_element,1645,{var,1645,'Version'},{integer,1645,32},default},
        {bin_element,1646,
         {call,1646,
          {remote,1646,{atom,1646,erlang},{atom,1646,element}},
          [{integer,1646,2},{var,1646,'Head'}]},
         {integer,1646,32},
         default},
        {bin_element,1647,
         {call,1647,
          {remote,1647,{atom,1647,erlang},{atom,1647,element}},
          [{integer,1647,4},{var,1647,'Head'}]},
         {integer,1647,32},
         default},
        {bin_element,1648,
         {call,1648,
          {remote,1648,{atom,1648,erlang},{atom,1648,element}},
          [{integer,1648,11},{var,1648,'Head'}]},
         {integer,1648,32},
         default},
        {bin_element,1649,
         {call,1649,
          {remote,1649,{atom,1649,erlang},{atom,1649,element}},
          [{integer,1649,6},{var,1649,'Head'}]},
         {integer,1649,32},
         default},
        {bin_element,1650,
         {call,1650,
          {remote,1650,{atom,1650,erlang},{atom,1650,element}},
          [{integer,1650,7},{var,1650,'Head'}]},
         {integer,1650,32},
         default},
        {bin_element,1651,
         {call,1651,
          {remote,1651,{atom,1651,erlang},{atom,1651,element}},
          [{integer,1651,20},{var,1651,'Head'}]},
         {integer,1651,32},
         default},
        {bin_element,1652,
         {call,1652,
          {remote,1652,{atom,1652,erlang},{atom,1652,element}},
          [{integer,1652,21},{var,1652,'Head'}]},
         {integer,1652,32},
         default},
        {bin_element,1653,{var,1653,'HashMethod'},{integer,1653,32},default},
        {bin_element,1654,
         {call,1654,
          {remote,1654,{atom,1654,erlang},{atom,1654,element}},
          [{integer,1654,9},{var,1654,'Head'}]},
         {integer,1654,32},
         default}]}},
     {match,1655,
      {var,1655,'DigH'},
      {cons,1655,{var,1655,'H2'},{var,1655,'NoColls'}}},
     {match,1656,
      {var,1656,'MD5'},
      {'case',1656,
       {call,1656,
        {remote,1656,{atom,1656,erlang},{atom,1656,element}},
        [{integer,1656,19},{var,1656,'Head'}]},
       [{clause,1657,
         [{atom,1657,true}],
         [],
         [{call,1657,
           {remote,1657,{atom,1657,erlang},{atom,1657,md5}},
           [{var,1657,'DigH'}]}]},
        {clause,1658,
         [{atom,1658,false}],
         [],
         [{bin,1658,
           [{bin_element,1658,
             {integer,1658,0},
             {integer,195,16},
             [{unit,8}]}]}]}]}},
     {match,1660,
      {var,1660,'Base'},
      {'case',1660,
       {call,1660,
        {remote,1660,{atom,1660,erlang},{atom,1660,element}},
        [{integer,1660,32},{var,1660,'Head'}]},
       [{clause,209,
         [{op,209,'+',
           {op,200,'+',
            {op,199,'+',
             {op,199,'+',
              {op,198,'+',
               {integer,198,56},
               {op,194,'*',{integer,194,28},{integer,194,4}}},
              {integer,195,16}},
             {integer,196,4}},
            {integer,192,124}},
           {op,209,'*',{integer,209,4},{integer,208,256}}}],
         [],
         [{bin,1661,
           [{bin_element,1661,{integer,1661,0},{integer,1661,32},default}]}]},
        {clause,1662,
         [{var,1662,'FlBase'}],
         [],
         [{bin,1662,
           [{bin_element,1662,
             {var,1662,'FlBase'},
             {integer,1662,32},
             default}]}]}]}},
     {cons,1664,
      {var,1664,'H1'},
      {cons,1664,
       {var,1664,'DigH'},
       {cons,1664,
        {var,1664,'MD5'},
        {cons,1664,
         {var,1664,'Base'},
         {bin,1664,
          [{bin_element,1664,
            {integer,1664,0},
            {integer,192,124},
            [{unit,8}]}]}}}}}]}]},
 {function,1673,free_lists_to_file,1,
  [{clause,1673,
    [{var,1673,'H'}],
    [],
    [{match,1674,
      {var,1674,'FL'},
      {call,1674,
       {remote,1674,{atom,1674,dets_utils},{atom,1674,get_freelists}},
       [{var,1674,'H'}]}},
     {call,1675,
      {atom,1675,free_list_to_file},
      [{var,1675,'FL'},
       {var,1675,'H'},
       {integer,1675,1},
       {call,1675,{atom,1675,tuple_size},[{var,1675,'FL'}]},
       {nil,1675},
       {integer,1675,0}]}]}]},
 {function,1677,free_list_to_file,6,
  [{clause,1677,
    [{var,1677,'_Ftab'},
     {var,1677,'_H'},
     {var,1677,'Pos'},
     {var,1677,'Sz'},
     {var,1677,'Ws'},
     {var,1677,'WsSz'}],
    [[{op,1677,'>',{var,1677,'Pos'},{var,1677,'Sz'}}]],
    [{tuple,1678,
      [{cons,1678,
        {var,1678,'Ws'},
        {bin,1678,
         [{bin_element,1678,
           {op,1678,'+',{integer,1678,4},{integer,247,8}},
           {integer,1678,32},
           default},
          {bin_element,33,{integer,33,61591023},{integer,1678,32},default},
          {bin_element,1671,{integer,1671,12345},{integer,1678,32},default}]}},
       {op,1678,'+',
        {op,1678,'+',{var,1678,'WsSz'},{integer,1678,4}},
        {integer,247,8}}]}]},
   {clause,1679,
    [{var,1679,'Ftab'},
     {var,1679,'H'},
     {var,1679,'Pos'},
     {var,1679,'Sz'},
     {var,1679,'Ws'},
     {var,1679,'WsSz'}],
    [],
    [{match,1680,
      {var,1680,'Max'},
      {op,1680,'div',
       {op,1680,'-',
        {op,1680,'-',{integer,1670,4096},{integer,1680,4}},
        {integer,247,8}},
       {integer,1680,4}}},
     {match,1681,
      {var,1681,'F'},
      {'fun',1681,
       {clauses,
        [{clause,1681,
          [{var,1681,'N'},{var,1681,'L'},{var,1681,'W'},{var,1681,'S'}],
          [[{op,1681,'=:=',{var,1681,'N'},{integer,1681,0}}]],
          [{tuple,1681,
            [{var,1681,'N'},{var,1681,'L'},{var,1681,'W'},{var,1681,'S'}]}]},
         {clause,1682,
          [{var,1682,'N'},{var,1682,'L'},{var,1682,'W'},{var,1682,'S'}],
          [],
          [{match,1683,
            {tuple,1683,[{var,1683,'L1'},{var,1683,'N1'},{var,1683,'More'}]},
            {'if',1684,
             [{clause,1685,[],
               [[{op,1685,'>',{var,1685,'N'},{var,1685,'Max'}}]],
               [{tuple,1686,
                 [{call,1686,
                   {remote,1686,{atom,1686,lists},{atom,1686,sublist}},
                   [{var,1686,'L'},{var,1686,'Max'}]},
                  {var,1686,'Max'},
                  {tuple,1687,
                   [{op,1687,'-',{var,1687,'N'},{var,1687,'Max'}},
                    {call,1687,
                     {remote,1687,{atom,1687,lists},{atom,1687,nthtail}},
                     [{var,1687,'Max'},{var,1687,'L'}]}]}]}]},
              {clause,1688,[],
               [[{atom,1688,true}]],
               [{tuple,1689,
                 [{var,1689,'L'},{var,1689,'N'},{atom,1689,no_more}]}]}]}},
           {match,1691,
            {var,1691,'Size'},
            {op,1691,'+',
             {op,1691,'+',
              {op,1691,'*',{var,1691,'N1'},{integer,1691,4}},
              {integer,1691,4}},
             {integer,247,8}}},
           {match,1692,
            {var,1692,'Header'},
            {bin,1692,
             [{bin_element,1692,{var,1692,'Size'},{integer,1692,32},default},
              {bin_element,33,{integer,33,61591023},{integer,1692,32},default},
              {bin_element,1692,{var,1692,'Pos'},{integer,1692,32},default}]}},
           {match,1693,
            {var,1693,'NW'},
            {cons,1693,
             {var,1693,'W'},
             {cons,1693,{var,1693,'Header'},{var,1693,'L1'}}}},
           {'case',1694,
            {var,1694,'More'},
            [{clause,1695,
              [{atom,1695,no_more}],
              [],
              [{tuple,1696,
                [{integer,1696,0},
                 {nil,1696},
                 {var,1696,'NW'},
                 {op,1696,'+',{var,1696,'S'},{var,1696,'Size'}}]}]},
             {clause,1697,
              [{tuple,1697,[{var,1697,'NN'},{var,1697,'NL'}]}],
              [],
              [{match,1698,
                {atom,1698,ok},
                {call,1698,
                 {remote,1698,{atom,1698,dets_utils},{atom,1698,write}},
                 [{var,1698,'H'},{var,1698,'NW'}]}},
               {tuple,1699,
                [{var,1699,'NN'},
                 {var,1699,'NL'},
                 {nil,1699},
                 {op,1699,'+',{var,1699,'S'},{var,1699,'Size'}}]}]}]}]}]}}},
     {match,1702,
      {tuple,1702,[{var,1702,'NWs'},{var,1702,'NWsSz'}]},
      {call,1702,
       {remote,1702,{atom,1702,dets_utils},{atom,1702,tree_to_bin}},
       [{call,1702,{atom,1702,element},[{var,1702,'Pos'},{var,1702,'Ftab'}]},
        {var,1702,'F'},
        {var,1702,'Max'},
        {var,1702,'Ws'},
        {var,1702,'WsSz'}]}},
     {call,1703,
      {atom,1703,free_list_to_file},
      [{var,1703,'Ftab'},
       {var,1703,'H'},
       {op,1703,'+',{var,1703,'Pos'},{integer,1703,1}},
       {var,1703,'Sz'},
       {var,1703,'NWs'},
       {var,1703,'NWsSz'}]}]}]},
 {function,1705,free_lists_from_file,2,
  [{clause,1705,
    [{var,1705,'H'},{var,1705,'Pos'}],
    [],
    [{match,1706,
      {tuple,1706,[{atom,1706,ok},{var,1706,'Pos'}]},
      {call,1706,
       {remote,1706,{atom,1706,dets_utils},{atom,1706,position}},
       [{call,1706,
         {remote,1706,{atom,1706,erlang},{atom,1706,element}},
         [{integer,1706,5},{var,1706,'H'}]},
        {call,1706,
         {remote,1706,{atom,1706,erlang},{atom,1706,element}},
         [{integer,1706,23},{var,1706,'H'}]},
        {var,1706,'Pos'}]}},
     {match,1707,
      {var,1707,'FL'},
      {call,1707,
       {remote,1707,{atom,1707,dets_utils},{atom,1707,empty_free_lists}},
       []}},
     {'case',1708,
      {'catch',1708,
       {call,1708,
        {atom,1708,bin_to_tree},
        [{nil,1708},
         {var,1708,'H'},
         {atom,1708,start},
         {var,1708,'FL'},
         {op,1708,'-',{integer,1708,1}},
         {nil,1708}]}},
      [{clause,1709,
        [{tuple,1709,[{atom,1709,'EXIT'},{var,1709,'_'}]}],
        [],
        [{call,1710,
          {atom,1710,throw},
          [{tuple,1710,
            [{atom,1710,error},
             {tuple,1710,
              [{atom,1710,bad_freelists},
               {call,1710,
                {remote,1710,{atom,1710,erlang},{atom,1710,element}},
                [{integer,1710,23},{var,1710,'H'}]}]}]}]}]},
       {clause,1711,
        [{var,1711,'Ftab'}],
        [],
        [{call,1712,
          {remote,1712,{atom,1712,erlang},{atom,1712,setelement}},
          [{integer,1712,32},
           {call,1712,
            {remote,1712,{atom,1712,erlang},{atom,1712,setelement}},
            [{integer,1712,12},{var,1712,'H'},{var,1712,'Ftab'}]},
           {op,209,'+',
            {op,200,'+',
             {op,199,'+',
              {op,199,'+',
               {op,198,'+',
                {integer,198,56},
                {op,194,'*',{integer,194,28},{integer,194,4}}},
               {integer,195,16}},
              {integer,196,4}},
             {integer,192,124}},
            {op,209,'*',{integer,209,4},{integer,208,256}}}]}]}]}]}]},
 {function,1715,bin_to_tree,6,
  [{clause,1715,
    [{var,1715,'Bin'},
     {var,1715,'H'},
     {var,1715,'LastPos'},
     {var,1715,'Ftab'},
     {var,1715,'A0'},
     {var,1715,'L'}],
    [],
    [{'case',1716,
      {var,1716,'Bin'},
      [{clause,1717,
        [{bin,1717,
          [{bin_element,1717,{var,1717,'_Size'},{integer,1717,32},default},
           {bin_element,33,{integer,33,61591023},{integer,1717,32},default},
           {bin_element,1671,{integer,1671,12345},{integer,1717,32},default},
           {bin_element,1717,{var,1717,'_'},default,[binary]}]}],
        [[{op,1717,'=:=',{var,1717,'L'},{nil,1717}}]],
        [{var,1718,'Ftab'}]},
       {clause,1719,
        [{bin,1719,
          [{bin_element,1719,{var,1719,'_Size'},{integer,1719,32},default},
           {bin_element,33,{integer,33,61591023},{integer,1719,32},default},
           {bin_element,1671,{integer,1671,12345},{integer,1719,32},default},
           {bin_element,1719,{var,1719,'_'},default,[binary]}]}],
        [],
        [{call,1720,
          {atom,1720,setelement},
          [{var,1720,'LastPos'},
           {var,1720,'Ftab'},
           {call,1720,
            {remote,1720,{atom,1720,dets_utils},{atom,1720,list_to_tree}},
            [{var,1720,'L'}]}]}]},
       {clause,1721,
        [{bin,1721,
          [{bin_element,1721,{var,1721,'Size'},{integer,1721,32},default},
           {bin_element,33,{integer,33,61591023},{integer,1721,32},default},
           {bin_element,1721,{var,1721,'Pos'},{integer,1721,32},default},
           {bin_element,1721,{var,1721,'T'},default,[binary]}]}],
        [[{op,1722,'>=',
           {call,1722,{atom,1722,byte_size},[{var,1722,'T'}]},
           {op,1722,'-',
            {op,1722,'-',{var,1722,'Size'},{integer,1722,4}},
            {integer,247,8}}}]],
        [{match,1723,
          {tuple,1723,[{var,1723,'NFtab'},{var,1723,'L1'},{var,1723,'A1'}]},
          {'if',1724,
           [{clause,1725,[],
             [[{op,1725,'=/=',{var,1725,'Pos'},{var,1725,'LastPos'}},
               {op,1725,'=/=',{var,1725,'LastPos'},{atom,1725,start}}]],
             [{match,1726,
               {var,1726,'Tree'},
               {call,1726,
                {remote,1726,{atom,1726,dets_utils},{atom,1726,list_to_tree}},
                [{var,1726,'L'}]}},
              {tuple,1727,
               [{call,1727,
                 {atom,1727,setelement},
                 [{var,1727,'LastPos'},{var,1727,'Ftab'},{var,1727,'Tree'}]},
                {nil,1727},
                {op,1727,'-',{integer,1727,1}}]}]},
            {clause,1728,[],
             [[{atom,1728,true}]],
             [{tuple,1729,
               [{var,1729,'Ftab'},{var,1729,'L'},{var,1729,'A0'}]}]}]}},
         {match,1731,
          {tuple,1731,[{var,1731,'NL'},{var,1731,'B2'},{var,1731,'A2'}]},
          {call,1731,
           {atom,1731,bin_to_tree1},
           [{var,1731,'T'},
            {op,1731,'-',
             {op,1731,'-',{var,1731,'Size'},{integer,247,8}},
             {integer,1731,4}},
            {var,1731,'A1'},
            {var,1731,'L1'}]}},
         {call,1732,
          {atom,1732,bin_to_tree},
          [{var,1732,'B2'},
           {var,1732,'H'},
           {var,1732,'Pos'},
           {var,1732,'NFtab'},
           {var,1732,'A2'},
           {var,1732,'NL'}]}]},
       {clause,1733,
        [{var,1733,'_'}],
        [],
        [{match,1734,
          {var,1734,'Bin2'},
          {call,1734,
           {remote,1734,{atom,1734,dets_utils},{atom,1734,read_n}},
           [{call,1734,
             {remote,1734,{atom,1734,erlang},{atom,1734,element}},
             [{integer,1734,5},{var,1734,'H'}]},
            {integer,1670,4096}]}},
         {call,1735,
          {atom,1735,bin_to_tree},
          [{call,1735,
            {atom,1735,list_to_binary},
            [{cons,1735,{var,1735,'Bin'},{var,1735,'Bin2'}}]},
           {var,1735,'H'},
           {var,1735,'LastPos'},
           {var,1735,'Ftab'},
           {var,1735,'A0'},
           {var,1735,'L'}]}]}]}]}]},
 {function,1738,bin_to_tree1,4,
  [{clause,1738,
    [{bin,1738,
      [{bin_element,1738,{var,1738,'A1'},{integer,1738,32},default},
       {bin_element,1738,{var,1738,'A2'},{integer,1738,32},default},
       {bin_element,1738,{var,1738,'A3'},{integer,1738,32},default},
       {bin_element,1738,{var,1738,'A4'},{integer,1738,32},default},
       {bin_element,1738,{var,1738,'T'},default,[binary]}]},
     {var,1738,'Size'},
     {var,1738,'A'},
     {var,1738,'L'}],
    [[{op,1739,'>=',{var,1739,'Size'},{integer,1739,16}},
      {op,1739,'<',{var,1739,'A'},{var,1739,'A1'}},
      {op,1739,'<',{var,1739,'A1'},{var,1739,'A2'}},
      {op,1739,'<',{var,1739,'A2'},{var,1739,'A3'}},
      {op,1739,'<',{var,1739,'A3'},{var,1739,'A4'}}]],
    [{call,1740,
      {atom,1740,bin_to_tree1},
      [{var,1740,'T'},
       {op,1740,'-',{var,1740,'Size'},{integer,1740,16}},
       {var,1740,'A4'},
       {cons,1740,
        {var,1740,'A4'},
        {cons,1740,
         {var,1740,'A3'},
         {cons,1740,
          {var,1740,'A2'},
          {cons,1740,{var,1740,'A1'},{var,1740,'L'}}}}}]}]},
   {clause,1741,
    [{bin,1741,
      [{bin_element,1741,{var,1741,'A1'},{integer,1741,32},default},
       {bin_element,1741,{var,1741,'T'},default,[binary]}]},
     {var,1741,'Size'},
     {var,1741,'A'},
     {var,1741,'L'}],
    [[{op,1741,'>=',{var,1741,'Size'},{integer,1741,4}},
      {op,1741,'<',{var,1741,'A'},{var,1741,'A1'}}]],
    [{call,1742,
      {atom,1742,bin_to_tree1},
      [{var,1742,'T'},
       {op,1742,'-',{var,1742,'Size'},{integer,1742,4}},
       {var,1742,'A1'},
       {cons,1742,{var,1742,'A1'},{var,1742,'L'}}]}]},
   {clause,1743,
    [{var,1743,'B'},{integer,1743,0},{var,1743,'A'},{var,1743,'L'}],
    [],
    [{tuple,1744,[{var,1744,'L'},{var,1744,'B'},{var,1744,'A'}]}]}]},
 {function,1747,slot_objs,2,
  [{clause,1747,
    [{var,1747,'H'},{var,1747,'Slot'}],
    [[{op,1747,'>=',
       {var,1747,'Slot'},
       {call,1747,
        {remote,1747,{atom,1747,erlang},{atom,1747,element}},
        [{integer,1747,4},{var,1747,'H'}]}}]],
    [{atom,1748,'$end_of_table'}]},
   {clause,1749,
    [{var,1749,'H'},{var,1749,'Slot'}],
    [],
    [{match,1750,
      {tuple,1750,[{atom,1750,ok},{var,1750,'_Pointer'},{var,1750,'Objects'}]},
      {call,1750,{atom,1750,slot_objects},[{var,1750,'H'},{var,1750,'Slot'}]}},
     {var,1751,'Objects'}]}]},
 {function,1754,h,2,
  [{clause,1754,
    [{var,1754,'I'},{atom,1754,phash2}],
    [],
    [{call,1754,
      {remote,1754,{atom,1754,erlang},{atom,1754,phash2}},
      [{var,1754,'I'}]}]},
   {clause,1755,
    [{var,1755,'I'},{atom,1755,phash}],
    [],
    [{op,1755,'-',
      {call,1755,
       {remote,1755,{atom,1755,erlang},{atom,1755,phash}},
       [{var,1755,'I'},{integer,222,67108863}]},
      {integer,1755,1}}]}]},
 {function,1757,db_hash,2,
  [{clause,1757,
    [{var,1757,'Key'},{var,1757,'Head'}],
    [[{op,1757,'=:=',
       {call,1757,
        {remote,1757,{atom,1757,erlang},{atom,1757,element}},
        [{integer,1757,18},{var,1757,'Head'}]},
       {atom,1757,phash2}}]],
    [{match,1758,
      {var,1758,'H'},
      {call,1758,
       {remote,1758,{atom,1758,erlang},{atom,1758,phash2}},
       [{var,1758,'Key'}]}},
     {match,1759,
      {var,1759,'Hash'},
      {op,45,'band',
       {var,1759,'H'},
       {op,45,'-',
        {call,1759,
         {remote,1759,{atom,1759,erlang},{atom,1759,element}},
         [{integer,1759,2},{var,1759,'Head'}]},
        {integer,45,1}}}},
     {'if',1760,
      [{clause,1761,[],
        [[{op,1761,'<',
           {var,1761,'Hash'},
           {call,1761,
            {remote,1761,{atom,1761,erlang},{atom,1761,element}},
            [{integer,1761,9},{var,1761,'Head'}]}}]],
        [{op,45,'band',
          {var,1762,'H'},
          {op,45,'-',
           {call,1762,
            {remote,1762,{atom,1762,erlang},{atom,1762,element}},
            [{integer,1762,3},{var,1762,'Head'}]},
           {integer,45,1}}}]},
       {clause,1763,[],[[{atom,1763,true}]],[{var,1764,'Hash'}]}]}]},
   {clause,1766,
    [{var,1766,'Key'},{var,1766,'Head'}],
    [],
    [{match,1767,
      {var,1767,'H'},
      {call,1767,
       {atom,1767,h},
       [{var,1767,'Key'},
        {call,1767,
         {remote,1767,{atom,1767,erlang},{atom,1767,element}},
         [{integer,1767,18},{var,1767,'Head'}]}]}},
     {match,1768,
      {var,1768,'Hash'},
      {op,1768,'rem',
       {var,1768,'H'},
       {call,1768,
        {remote,1768,{atom,1768,erlang},{atom,1768,element}},
        [{integer,1768,2},{var,1768,'Head'}]}}},
     {'if',1769,
      [{clause,1770,[],
        [[{op,1770,'<',
           {var,1770,'Hash'},
           {call,1770,
            {remote,1770,{atom,1770,erlang},{atom,1770,element}},
            [{integer,1770,9},{var,1770,'Head'}]}}]],
        [{op,1771,'rem',
          {var,1771,'H'},
          {call,1771,
           {remote,1771,{atom,1771,erlang},{atom,1771,element}},
           [{integer,1771,3},{var,1771,'Head'}]}}]},
       {clause,1772,[],[[{atom,1772,true}]],[{var,1773,'Hash'}]}]}]}]},
 {function,1776,hash_method_to_code,1,
  [{clause,1776,[{atom,1776,phash2}],[],[{integer,218,1}]},
   {clause,1777,[{atom,1777,phash}],[],[{integer,217,0}]}]},
 {function,1779,code_to_hash_method,1,
  [{clause,1779,[{integer,218,1}],[],[{atom,1779,phash2}]},
   {clause,1780,[{integer,217,0}],[],[{atom,1780,phash}]},
   {clause,1781,[{var,1781,'_'}],[],[{atom,1781,undefined}]}]},
 {function,1783,no_slots,1,
  [{clause,1783,
    [{var,1783,'Head'}],
    [],
    [{tuple,1784,
      [{call,1784,
        {remote,1784,{atom,1784,erlang},{atom,1784,element}},
        [{integer,1784,20},{var,1784,'Head'}]},
       {call,1784,
        {remote,1784,{atom,1784,erlang},{atom,1784,element}},
        [{integer,1784,4},{var,1784,'Head'}]},
       {call,1784,
        {remote,1784,{atom,1784,erlang},{atom,1784,element}},
        [{integer,1784,21},{var,1784,'Head'}]}]}]}]},
 {function,1786,table_parameters,1,
  [{clause,1786,
    [{var,1786,'Head'}],
    [],
    [{'case',1787,
      {call,1787,
       {remote,1787,{atom,1787,erlang},{atom,1787,element}},
       [{integer,1787,14},{var,1787,'Head'}]},
      [{clause,1788,[{atom,1788,undefined}],[],[{atom,1789,undefined}]},
       {clause,1790,
        [{var,1790,'CL'}],
        [],
        [{match,1791,
          {var,1791,'NoColls0'},
          {call,1791,
           {remote,1791,{atom,1791,lists},{atom,1791,foldl}},
           [{'fun',1791,
             {clauses,
              [{clause,1791,
                [{tuple,1791,[{var,1791,'_'},{integer,1791,0}]},
                 {var,1791,'A'}],
                [],
                [{var,1791,'A'}]},
               {clause,1792,
                [{var,1792,'E'},{var,1792,'A'}],
                [],
                [{cons,1792,{var,1792,'E'},{var,1792,'A'}}]}]}},
            {nil,1793},
            {var,1793,'CL'}]}},
         {match,1794,
          {var,1794,'NoColls'},
          {call,1794,
           {remote,1794,{atom,1794,lists},{atom,1794,reverse}},
           [{var,1794,'NoColls0'}]}},
         {tuple,264,
          [{atom,264,'$hash2'},
           {call,1795,
            {remote,1795,{atom,1795,erlang},{atom,1795,element}},
            [{integer,1795,29},{var,1795,'Head'}]},
           {integer,266,1},
           {call,1797,
            {remote,1797,{atom,1797,filename},{atom,1797,basename}},
            [{call,1797,
              {remote,1797,{atom,1797,erlang},{atom,1797,element}},
              [{integer,1797,23},{var,1797,'Head'}]}]},
           {call,1798,
            {remote,1798,{atom,1798,erlang},{atom,1798,element}},
            [{integer,1798,10},{var,1798,'Head'}]},
           {call,1799,
            {remote,1799,{atom,1799,erlang},{atom,1799,element}},
            [{integer,1799,11},{var,1799,'Head'}]},
           {call,1800,
            {atom,1800,hash_method_to_code},
            [{call,1800,
              {remote,1800,{atom,1800,erlang},{atom,1800,element}},
              [{integer,1800,18},{var,1800,'Head'}]}]},
           {call,1801,
            {remote,1801,{atom,1801,erlang},{atom,1801,element}},
            [{integer,1801,9},{var,1801,'Head'}]},
           {call,1801,
            {remote,1801,{atom,1801,erlang},{atom,1801,element}},
            [{integer,1801,2},{var,1801,'Head'}]},
           {call,1802,
            {remote,1802,{atom,1802,erlang},{atom,1802,element}},
            [{integer,1802,4},{var,1802,'Head'}]},
           {call,1803,
            {remote,1803,{atom,1803,erlang},{atom,1803,element}},
            [{integer,1803,20},{var,1803,'Head'}]},
           {call,1804,
            {remote,1804,{atom,1804,erlang},{atom,1804,element}},
            [{integer,1804,21},{var,1804,'Head'}]},
           {call,1805,
            {remote,1805,{atom,1805,erlang},{atom,1805,element}},
            [{integer,1805,6},{var,1805,'Head'}]},
           {call,1806,
            {remote,1806,{atom,1806,erlang},{atom,1806,element}},
            [{integer,1806,7},{var,1806,'Head'}]},
           {var,1806,'NoColls'}]}]}]}]}]},
 {function,1819,re_hash,2,
  [{clause,1819,
    [{var,1819,'Head'},{var,1819,'SlotStart'}],
    [],
    [{match,1820,
      {var,1820,'FromSlotPos'},
      {call,1820,{atom,1820,slot_position},[{var,1820,'SlotStart'}]}},
     {match,1821,
      {var,1821,'ToSlotPos'},
      {call,1821,
       {atom,1821,slot_position},
       [{op,1821,'+',
         {var,1821,'SlotStart'},
         {call,1821,
          {remote,1821,{atom,1821,erlang},{atom,1821,element}},
          [{integer,1821,2},{var,1821,'Head'}]}}]}},
     {match,1822,
      {var,1822,'RSpec'},
      {cons,1822,
       {tuple,1822,
        [{var,1822,'FromSlotPos'},
         {op,1822,'*',{integer,1822,4},{integer,202,512}}]},
       {nil,1822}}},
     {match,1823,
      {tuple,1823,
       [{atom,1823,ok},{cons,1823,{var,1823,'FromBin'},{nil,1823}}]},
      {call,1823,
       {remote,1823,{atom,1823,dets_utils},{atom,1823,pread}},
       [{var,1823,'RSpec'},{var,1823,'Head'}]}},
     {call,1824,
      {atom,1824,split_bins},
      [{var,1824,'FromBin'},
       {var,1824,'Head'},
       {var,1824,'FromSlotPos'},
       {var,1824,'ToSlotPos'},
       {nil,1824},
       {nil,1824},
       {integer,1824,0}]}]}]},
 {function,1826,split_bins,7,
  [{clause,1826,
    [{bin,1826,[]},
     {var,1826,'Head'},
     {var,1826,'_Pos1'},
     {var,1826,'_Pos2'},
     {var,1826,'_ToRead'},
     {var,1826,'_L'},
     {integer,1826,0}],
    [],
    [{tuple,1827,[{var,1827,'Head'},{atom,1827,ok}]}]},
   {clause,1828,
    [{bin,1828,[]},
     {var,1828,'Head'},
     {var,1828,'Pos1'},
     {var,1828,'Pos2'},
     {var,1828,'ToRead'},
     {var,1828,'L'},
     {var,1828,'_SoFar'}],
    [],
    [{call,1829,
      {atom,1829,re_hash_write},
      [{var,1829,'Head'},
       {var,1829,'ToRead'},
       {var,1829,'L'},
       {var,1829,'Pos1'},
       {var,1829,'Pos2'}]}]},
   {clause,1830,
    [{var,1830,'FB'},
     {var,1830,'Head'},
     {var,1830,'Pos1'},
     {var,1830,'Pos2'},
     {var,1830,'ToRead'},
     {var,1830,'L'},
     {var,1830,'SoFar'}],
    [],
    [{match,1831,
      {bin,1831,
       [{bin_element,1831,{var,1831,'Sz1'},{integer,1831,32},default},
        {bin_element,1831,{var,1831,'P1'},{integer,1831,32},default},
        {bin_element,1831,{var,1831,'FT'},default,[binary]}]},
      {var,1831,'FB'}},
     {match,1832,
      {bin,1832,
       [{bin_element,1832,{var,1832,'B1'},{integer,247,8},[binary]},
        {bin_element,1832,{var,1832,'_'},default,[binary]}]},
      {var,1832,'FB'}},
     {match,1833,
      {var,1833,'NSoFar'},
      {op,1833,'+',{var,1833,'SoFar'},{var,1833,'Sz1'}}},
     {match,1834,
      {var,1834,'NPos1'},
      {op,1834,'+',
       {var,1834,'Pos1'},
       {op,1834,'*',{integer,245,2},{integer,1834,4}}}},
     {match,1835,
      {var,1835,'NPos2'},
      {op,1835,'+',
       {var,1835,'Pos2'},
       {op,1835,'*',{integer,245,2},{integer,1835,4}}}},
     {'if',1836,
      [{clause,1837,[],
        [[{op,1837,'>',
           {var,1837,'NSoFar'},
           {op,1810,'*',{integer,1810,10},{integer,38,8192}}},
          {op,1837,'=/=',{var,1837,'ToRead'},{nil,1837}}]],
        [{match,1838,
          {tuple,1838,[{var,1838,'NewHead'},{atom,1838,ok}]},
          {call,1838,
           {atom,1838,re_hash_write},
           [{var,1838,'Head'},
            {var,1838,'ToRead'},
            {var,1838,'L'},
            {var,1838,'Pos1'},
            {var,1838,'Pos2'}]}},
         {call,1839,
          {atom,1839,split_bins},
          [{var,1839,'FB'},
           {var,1839,'NewHead'},
           {var,1839,'Pos1'},
           {var,1839,'Pos2'},
           {nil,1839},
           {nil,1839},
           {integer,1839,0}]}]},
       {clause,1840,[],
        [[{op,1840,'=:=',{var,1840,'Sz1'},{integer,1840,0}}]],
        [{match,1841,
          {var,1841,'E'},
          {tuple,1841,[{atom,1841,skip},{var,1841,'B1'}]}},
         {call,1842,
          {atom,1842,split_bins},
          [{var,1842,'FT'},
           {var,1842,'Head'},
           {var,1842,'NPos1'},
           {var,1842,'NPos2'},
           {var,1842,'ToRead'},
           {cons,1842,{var,1842,'E'},{var,1842,'L'}},
           {var,1842,'NSoFar'}]}]},
       {clause,1843,[],
        [[{atom,1843,true}]],
        [{match,1844,
          {var,1844,'E'},
          {tuple,1844,
           [{var,1844,'Sz1'},
            {var,1844,'P1'},
            {var,1844,'B1'},
            {var,1844,'Pos1'},
            {var,1844,'Pos2'}]}},
         {match,1845,
          {var,1845,'NewToRead'},
          {cons,1845,
           {tuple,1845,[{var,1845,'P1'},{var,1845,'Sz1'}]},
           {var,1845,'ToRead'}}},
         {call,1846,
          {atom,1846,split_bins},
          [{var,1846,'FT'},
           {var,1846,'Head'},
           {var,1846,'NPos1'},
           {var,1846,'NPos2'},
           {var,1846,'NewToRead'},
           {cons,1846,{var,1846,'E'},{var,1846,'L'}},
           {var,1846,'NSoFar'}]}]}]}]}]},
 {function,1849,re_hash_write,5,
  [{clause,1849,
    [{var,1849,'Head'},
     {var,1849,'ToRead'},
     {var,1849,'L'},
     {var,1849,'Pos1'},
     {var,1849,'Pos2'}],
    [],
    [{call,1850,
      {atom,1850,check_pread2_arg},
      [{var,1850,'ToRead'},{var,1850,'Head'}]},
     {match,1851,
      {tuple,1851,[{atom,1851,ok},{var,1851,'Bins'}]},
      {call,1851,
       {remote,1851,{atom,1851,dets_utils},{atom,1851,pread}},
       [{var,1851,'ToRead'},{var,1851,'Head'}]}},
     {match,1852,
      {var,1852,'Z'},
      {bin,1852,
       [{bin_element,1852,{integer,1852,0},{integer,1852,32},default},
        {bin_element,1852,{integer,1852,0},{integer,1852,32},default}]}},
     {match,1853,
      {tuple,1853,
       [{var,1853,'Head1'},
        {var,1853,'BinFS'},
        {var,1853,'BinTS'},
        {var,1853,'WsB'}]},
      {call,1853,
       {atom,1853,re_hash_slots},
       [{var,1853,'Bins'},
        {var,1853,'L'},
        {var,1853,'Head'},
        {var,1853,'Z'},
        {nil,1853},
        {nil,1853},
        {nil,1853}]}},
     {match,1854,
      {var,1854,'WPos1'},
      {op,1854,'-',
       {var,1854,'Pos1'},
       {op,1854,'*',
        {op,1854,'*',{integer,245,2},{integer,1854,4}},
        {call,1854,{atom,1854,length},[{var,1854,'L'}]}}}},
     {match,1855,
      {var,1855,'WPos2'},
      {op,1855,'-',
       {var,1855,'Pos2'},
       {op,1855,'*',
        {op,1855,'*',{integer,245,2},{integer,1855,4}},
        {call,1855,{atom,1855,length},[{var,1855,'L'}]}}}},
     {match,1856,
      {var,1856,'ToWrite'},
      {cons,1856,
       {tuple,1856,[{var,1856,'WPos1'},{var,1856,'BinFS'}]},
       {cons,1856,
        {tuple,1856,[{var,1856,'WPos2'},{var,1856,'BinTS'}]},
        {var,1856,'WsB'}}}},
     {call,1857,
      {remote,1857,{atom,1857,dets_utils},{atom,1857,pwrite}},
      [{var,1857,'Head1'},{var,1857,'ToWrite'}]}]}]},
 {function,1859,re_hash_slots,7,
  [{clause,1859,
    [{var,1859,'Bins'},
     {cons,1859,
      {tuple,1859,[{atom,1859,skip},{var,1859,'B1'}]},
      {var,1859,'L'}},
     {var,1859,'Head'},
     {var,1859,'Z'},
     {var,1859,'BinFS'},
     {var,1859,'BinTS'},
     {var,1859,'WsB'}],
    [],
    [{call,1860,
      {atom,1860,re_hash_slots},
      [{var,1860,'Bins'},
       {var,1860,'L'},
       {var,1860,'Head'},
       {var,1860,'Z'},
       {cons,1860,{var,1860,'B1'},{var,1860,'BinFS'}},
       {cons,1860,{var,1860,'Z'},{var,1860,'BinTS'}},
       {var,1860,'WsB'}]}]},
   {clause,1861,
    [{cons,1861,{var,1861,'FB'},{var,1861,'Bins'}},
     {cons,1861,{var,1861,'E'},{var,1861,'L'}},
     {var,1861,'Head'},
     {var,1861,'Z'},
     {var,1861,'BinFS'},
     {var,1861,'BinTS'},
     {var,1861,'WsB'}],
    [],
    [{match,1862,
      {tuple,1862,
       [{var,1862,'Sz1'},
        {var,1862,'P1'},
        {var,1862,'B1'},
        {var,1862,'Pos1'},
        {var,1862,'Pos2'}]},
      {var,1862,'E'}},
     {match,1863,
      {var,1863,'KeyObjs'},
      {'case',1863,
       {'catch',1863,
        {call,1863,{atom,1863,per_key},[{var,1863,'Head'},{var,1863,'FB'}]}},
       [{clause,1864,
         [{tuple,1864,[{atom,1864,'EXIT'},{var,1864,'_Error'}]}],
         [],
         [{match,1865,
           {var,1865,'Bad'},
           {call,1865,
            {remote,1865,{atom,1865,dets_utils},{atom,1865,bad_object}},
            [{atom,1865,re_hash_slots},
             {tuple,1865,[{var,1865,'FB'},{var,1865,'E'}]}]}},
          {call,1866,
           {atom,1866,throw},
           [{call,1866,
             {remote,1866,{atom,1866,dets_utils},{atom,1866,corrupt_reason}},
             [{var,1866,'Head'},{var,1866,'Bad'}]}]}]},
        {clause,1867,[{var,1867,'Else'}],[],[{var,1868,'Else'}]}]}},
     {'case',1870,
      {call,1870,
       {atom,1870,re_hash_split},
       [{var,1870,'KeyObjs'},
        {var,1870,'Head'},
        {nil,1870},
        {integer,1870,0},
        {nil,1870},
        {integer,1870,0}]},
      [{clause,1871,
        [{tuple,1871,
          [{var,1871,'_KL'},{var,1871,'_KSz'},{nil,1871},{integer,1871,0}]}],
        [],
        [{match,1872,
          {var,1872,'Sz1'},
          {op,1872,'+',{var,1872,'_KSz'},{integer,247,8}}},
         {call,1873,
          {atom,1873,re_hash_slots},
          [{var,1873,'Bins'},
           {var,1873,'L'},
           {var,1873,'Head'},
           {var,1873,'Z'},
           {cons,1873,{var,1873,'B1'},{var,1873,'BinFS'}},
           {cons,1873,{var,1873,'Z'},{var,1873,'BinTS'}},
           {var,1873,'WsB'}]}]},
       {clause,1874,
        [{tuple,1874,
          [{nil,1874},{integer,1874,0},{var,1874,'_ML'},{var,1874,'_MSz'}]}],
        [],
        [{match,1875,
          {var,1875,'Sz1'},
          {op,1875,'+',{var,1875,'_MSz'},{integer,247,8}}},
         {call,1876,
          {atom,1876,re_hash_slots},
          [{var,1876,'Bins'},
           {var,1876,'L'},
           {var,1876,'Head'},
           {var,1876,'Z'},
           {cons,1876,{var,1876,'Z'},{var,1876,'BinFS'}},
           {cons,1876,{var,1876,'B1'},{var,1876,'BinTS'}},
           {var,1876,'WsB'}]}]},
       {clause,1877,
        [{tuple,1877,
          [{var,1877,'KL'},
           {var,1877,'KSz'},
           {var,1877,'ML'},
           {var,1877,'MSz'}]}],
        [[{op,1877,'=/=',{var,1877,'KL'},{nil,1877}},
          {op,1877,'>',{var,1877,'KSz'},{integer,1877,0}},
          {op,1877,'=/=',{var,1877,'ML'},{nil,1877}},
          {op,1877,'>',{var,1877,'MSz'},{integer,1877,0}}]],
        [{match,1878,
          {tuple,1878,[{var,1878,'Head1'},{var,1878,'FS1'},{var,1878,'Ws1'}]},
          {call,1879,
           {atom,1879,updated},
           [{var,1879,'Head'},
            {var,1879,'P1'},
            {var,1879,'Sz1'},
            {var,1879,'KSz'},
            {var,1879,'Pos1'},
            {var,1879,'KL'},
            {atom,1879,true},
            {atom,1879,foo},
            {atom,1879,bar}]}},
         {match,1880,
          {tuple,1880,
           [{var,1880,'NewHead'},
            {cons,1880,
             {tuple,1880,[{var,1880,'Pos2'},{var,1880,'Bin2'}]},
             {nil,1880}},
            {var,1880,'Ws2'}]},
          {call,1881,
           {atom,1881,updated},
           [{var,1881,'Head1'},
            {integer,1881,0},
            {integer,1881,0},
            {var,1881,'MSz'},
            {var,1881,'Pos2'},
            {var,1881,'ML'},
            {atom,1881,true},
            {atom,1881,foo},
            {atom,1881,bar}]}},
         {match,1882,
          {var,1882,'NewBinFS'},
          {'case',1882,
           {var,1882,'FS1'},
           [{clause,1883,
             [{cons,1883,
               {tuple,1883,[{var,1883,'Pos1'},{var,1883,'Bin1'}]},
               {nil,1883}}],
             [],
             [{cons,1883,{var,1883,'Bin1'},{var,1883,'BinFS'}}]},
            {clause,1884,
             [{nil,1884}],
             [],
             [{cons,1884,{var,1884,'B1'},{var,1884,'BinFS'}}]}]}},
         {match,1886,
          {var,1886,'NewBinTS'},
          {cons,1886,{var,1886,'Bin2'},{var,1886,'BinTS'}}},
         {match,1887,
          {var,1887,'NewWsB'},
          {op,1887,'++',
           {var,1887,'Ws2'},
           {op,1887,'++',{var,1887,'Ws1'},{var,1887,'WsB'}}}},
         {call,1888,
          {atom,1888,re_hash_slots},
          [{var,1888,'Bins'},
           {var,1888,'L'},
           {var,1888,'NewHead'},
           {var,1888,'Z'},
           {var,1888,'NewBinFS'},
           {var,1888,'NewBinTS'},
           {var,1888,'NewWsB'}]}]}]}]},
   {clause,1890,
    [{nil,1890},
     {nil,1890},
     {var,1890,'Head'},
     {var,1890,'_Z'},
     {var,1890,'BinFS'},
     {var,1890,'BinTS'},
     {var,1890,'WsB'}],
    [],
    [{tuple,1891,
      [{var,1891,'Head'},
       {var,1891,'BinFS'},
       {var,1891,'BinTS'},
       {call,1891,
        {remote,1891,{atom,1891,lists},{atom,1891,reverse}},
        [{var,1891,'WsB'}]}]}]}]},
 {function,1893,re_hash_split,6,
  [{clause,1893,
    [{cons,1893,{var,1893,'E'},{var,1893,'KeyObjs'}},
     {var,1893,'Head'},
     {var,1893,'KL'},
     {var,1893,'KSz'},
     {var,1893,'ML'},
     {var,1893,'MSz'}],
    [],
    [{match,1894,
      {tuple,1894,
       [{var,1894,'Key'},
        {var,1894,'Sz'},
        {var,1894,'Bin'},
        {var,1894,'_Item'},
        {var,1894,'_Objs'}]},
      {var,1894,'E'}},
     {match,1895,
      {var,1895,'New'},
      {op,1895,'rem',
       {call,1895,
        {atom,1895,h},
        [{var,1895,'Key'},
         {call,1895,
          {remote,1895,{atom,1895,erlang},{atom,1895,element}},
          [{integer,1895,18},{var,1895,'Head'}]}]},
       {call,1895,
        {remote,1895,{atom,1895,erlang},{atom,1895,element}},
        [{integer,1895,3},{var,1895,'Head'}]}}},
     {'if',1896,
      [{clause,1897,[],
        [[{op,1897,'>=',
           {var,1897,'New'},
           {call,1897,
            {remote,1897,{atom,1897,erlang},{atom,1897,element}},
            [{integer,1897,2},{var,1897,'Head'}]}}]],
        [{call,1898,
          {atom,1898,re_hash_split},
          [{var,1898,'KeyObjs'},
           {var,1898,'Head'},
           {var,1898,'KL'},
           {var,1898,'KSz'},
           {cons,1898,{var,1898,'Bin'},{var,1898,'ML'}},
           {op,1898,'+',{var,1898,'MSz'},{var,1898,'Sz'}}]}]},
       {clause,1899,[],
        [[{atom,1899,true}]],
        [{call,1900,
          {atom,1900,re_hash_split},
          [{var,1900,'KeyObjs'},
           {var,1900,'Head'},
           {cons,1900,{var,1900,'Bin'},{var,1900,'KL'}},
           {op,1900,'+',{var,1900,'KSz'},{var,1900,'Sz'}},
           {var,1900,'ML'},
           {var,1900,'MSz'}]}]}]}]},
   {clause,1902,
    [{nil,1902},
     {var,1902,'_Head'},
     {var,1902,'KL'},
     {var,1902,'KSz'},
     {var,1902,'ML'},
     {var,1902,'MSz'}],
    [],
    [{tuple,1903,
      [{call,1903,
        {remote,1903,{atom,1903,lists},{atom,1903,reverse}},
        [{var,1903,'KL'}]},
       {var,1903,'KSz'},
       {call,1903,
        {remote,1903,{atom,1903,lists},{atom,1903,reverse}},
        [{var,1903,'ML'}]},
       {var,1903,'MSz'}]}]}]},
 {function,1906,write_cache,1,
  [{clause,1906,
    [{var,1906,'Head'}],
    [],
    [{match,1907,
      {var,1907,'C'},
      {call,1907,
       {remote,1907,{atom,1907,erlang},{atom,1907,element}},
       [{integer,1907,22},{var,1907,'Head'}]}},
     {'case',1908,
      {call,1908,
       {remote,1908,{atom,1908,dets_utils},{atom,1908,is_empty_cache}},
       [{var,1908,'C'}]},
      [{clause,1909,
        [{atom,1909,true}],
        [],
        [{tuple,1909,[{var,1909,'Head'},{nil,1909},{nil,1909}]}]},
       {clause,1910,
        [{atom,1910,false}],
        [],
        [{match,1911,
          {tuple,1911,
           [{var,1911,'NewC'},{var,1911,'MaxInserts'},{var,1911,'PerKey'}]},
          {call,1911,
           {remote,1911,{atom,1911,dets_utils},{atom,1911,reset_cache}},
           [{var,1911,'C'}]}},
         {match,1913,
          {var,1913,'MaxNoInsertedKeys'},
          {call,1913,
           {remote,1913,{atom,1913,erlang},{atom,1913,min}},
           [{var,1913,'MaxInserts'},
            {call,1913,{atom,1913,length},[{var,1913,'PerKey'}]}]}},
         {match,1914,
          {var,1914,'Head1'},
          {call,1914,
           {remote,1914,{atom,1914,erlang},{atom,1914,setelement}},
           [{integer,1914,22},{var,1914,'Head'},{var,1914,'NewC'}]}},
         {'case',1915,
          {call,1915,
           {atom,1915,may_grow},
           [{var,1915,'Head1'},
            {var,1915,'MaxNoInsertedKeys'},
            {atom,1915,once}]},
          [{clause,1916,
            [{tuple,1916,[{var,1916,'Head2'},{atom,1916,ok}]}],
            [],
            [{call,1917,
              {atom,1917,eval_work_list},
              [{var,1917,'Head2'},{var,1917,'PerKey'}]}]},
           {clause,1918,
            [{var,1918,'HeadError'}],
            [],
            [{call,1919,
              {atom,1919,throw},
              [{var,1919,'HeadError'}]}]}]}]}]}]}]},
 {function,1924,may_grow,3,
  [{clause,1924,
    [{var,1924,'Head'},{integer,1924,0},{atom,1924,once}],
    [],
    [{tuple,1926,[{var,1926,'Head'},{atom,1926,ok}]}]},
   {clause,1927,
    [{var,1927,'Head'},{var,1927,'_N'},{var,1927,'_How'}],
    [[{op,1927,'=/=',
       {call,1927,
        {remote,1927,{atom,1927,erlang},{atom,1927,element}},
        [{integer,1927,17},{var,1927,'Head'}]},
       {atom,1927,false}}]],
    [{tuple,1928,[{var,1928,'Head'},{atom,1928,ok}]}]},
   {clause,1929,
    [{match,1929,
      {tuple,1929,
       [{atom,1929,head},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {atom,1929,read},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'},
        {var,1929,'_'}]},
      {var,1929,'Head'}},
     {var,1929,'_N'},
     {var,1929,'_How'}],
    [],
    [{tuple,1930,[{var,1930,'Head'},{atom,1930,ok}]}]},
   {clause,1931,
    [{var,1931,'Head'},{var,1931,'_N'},{var,1931,'_How'}],
    [[{op,1931,'>=',
       {call,1931,
        {remote,1931,{atom,1931,erlang},{atom,1931,element}},
        [{integer,1931,4},{var,1931,'Head'}]},
       {call,1931,
        {remote,1931,{atom,1931,erlang},{atom,1931,element}},
        [{integer,1931,21},{var,1931,'Head'}]}}]],
    [{tuple,1932,[{var,1932,'Head'},{atom,1932,ok}]}]},
   {clause,1933,
    [{var,1933,'Head'},{var,1933,'N'},{var,1933,'How'}],
    [],
    [{match,1934,
      {var,1934,'Extra'},
      {call,1934,
       {remote,1934,{atom,1934,erlang},{atom,1934,min}},
       [{op,1934,'*',{integer,1934,2},{integer,203,256}},
        {op,1934,'-',
         {op,1934,'+',
          {call,1934,
           {remote,1934,{atom,1934,erlang},{atom,1934,element}},
           [{integer,1934,7},{var,1934,'Head'}]},
          {var,1934,'N'}},
         {call,1934,
          {remote,1934,{atom,1934,erlang},{atom,1934,element}},
          [{integer,1934,4},{var,1934,'Head'}]}}]}},
     {'case',1935,
      {'catch',1935,
       {call,1935,
        {atom,1935,may_grow1},
        [{var,1935,'Head'},{var,1935,'Extra'},{var,1935,'How'}]}},
      [{clause,1936,
        [{match,1936,
          {tuple,1936,[{atom,1936,error},{var,1936,'_Reason'}]},
          {var,1936,'Error'}}],
        [],
        [{call,1937,
          {remote,1937,{atom,1937,dets_utils},{atom,1937,corrupt}},
          [{var,1937,'Head'},{var,1937,'Error'}]}]},
       {clause,1938,
        [{tuple,1938,[{var,1938,'NewHead'},{var,1938,'Reply'}]}],
        [[{call,1938,
           {atom,1938,is_record},
           [{var,1938,'Head'},{atom,1938,head}]}]],
        [{tuple,1939,[{var,1939,'NewHead'},{var,1939,'Reply'}]}]}]}]}]},
 {function,1942,may_grow1,3,
  [{clause,1942,
    [{var,1942,'Head'},{var,1942,'Extra'},{atom,1942,many_times}],
    [[{op,1942,'>',{var,1942,'Extra'},{integer,203,256}}]],
    [{match,1943,
      {var,1943,'Reply'},
      {call,1943,
       {atom,1943,grow},
       [{var,1943,'Head'},{integer,1943,1},{atom,1943,undefined}]}},
     {op,1944,'!',
      {call,1944,{atom,1944,self},[]},
      {tuple,47,
       [{atom,47,'$dets_call'},
        {call,1944,{atom,1944,self},[]},
        {atom,1944,may_grow}]}},
     {var,1945,'Reply'}]},
   {clause,1946,
    [{var,1946,'Head'},{var,1946,'Extra'},{var,1946,'_How'}],
    [],
    [{call,1947,
      {atom,1947,grow},
      [{var,1947,'Head'},{var,1947,'Extra'},{atom,1947,undefined}]}]}]},
 {function,1950,grow,3,
  [{clause,1950,
    [{var,1950,'Head'},{var,1950,'Extra'},{var,1950,'_SegZero'}],
    [[{op,1950,'=<',{var,1950,'Extra'},{integer,1950,0}}]],
    [{tuple,1951,[{var,1951,'Head'},{atom,1951,ok}]}]},
   {clause,1952,
    [{var,1952,'Head'},{var,1952,'Extra'},{atom,1952,undefined}],
    [],
    [{call,1953,
      {atom,1953,grow},
      [{var,1953,'Head'},
       {var,1953,'Extra'},
       {call,1953,{atom,1953,seg_zero},[]}]}]},
   {clause,1954,
    [{var,1954,'Head'},{var,1954,'_Extra'},{var,1954,'_SegZero'}],
    [[{op,1954,'>=',
       {call,1954,
        {remote,1954,{atom,1954,erlang},{atom,1954,element}},
        [{integer,1954,4},{var,1954,'Head'}]},
       {call,1954,
        {remote,1954,{atom,1954,erlang},{atom,1954,element}},
        [{integer,1954,21},{var,1954,'Head'}]}}]],
    [{tuple,1955,[{var,1955,'Head'},{atom,1955,ok}]}]},
   {clause,1956,
    [{var,1956,'Head'},{var,1956,'Extra'},{var,1956,'SegZero'}],
    [],
    [{match,1957,
      {tuple,1957,
       [{atom,1957,head},
        {var,1957,'M'},
        {var,1957,'_'},
        {var,1957,'Next'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'N'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'},
        {var,1957,'_'}]},
      {var,1957,'Head'}},
     {match,1958,
      {var,1958,'SegNum'},
      {op,1958,'div',{var,1958,'Next'},{integer,203,256}}},
     {match,1959,
      {tuple,1959,[{var,1959,'Head0'},{var,1959,'W'},{var,1959,'Ws1'}]},
      {call,1959,
       {atom,1959,allocate_segment},
       [{var,1959,'Head'},{var,1959,'SegZero'},{var,1959,'SegNum'}]}},
     {match,1961,
      {tuple,1961,[{var,1961,'Head1'},{atom,1961,ok}]},
      {call,1961,
       {remote,1961,{atom,1961,dets_utils},{atom,1961,pwrite}},
       [{var,1961,'Head0'},{cons,1961,{var,1961,'W'},{var,1961,'Ws1'}}]}},
     {match,1963,
      {tuple,1963,[{var,1963,'Head2'},{atom,1963,ok}]},
      {call,1963,{atom,1963,re_hash},[{var,1963,'Head1'},{var,1963,'N'}]}},
     {match,1964,
      {var,1964,'NewHead'},
      {'if',1965,
       [{clause,1966,[],
         [[{op,1966,'=:=',
            {op,1966,'+',{var,1966,'N'},{integer,203,256}},
            {var,1966,'M'}}]],
         [{call,1967,
           {remote,1967,{atom,1967,erlang},{atom,1967,setelement}},
           [{integer,1967,3},
            {call,1967,
             {remote,1967,{atom,1967,erlang},{atom,1967,setelement}},
             [{integer,1967,2},
              {call,1967,
               {remote,1967,{atom,1967,erlang},{atom,1967,setelement}},
               [{integer,1967,4},
                {call,1967,
                 {remote,1967,{atom,1967,erlang},{atom,1967,setelement}},
                 [{integer,1967,9},{var,1967,'Head2'},{integer,1967,0}]},
                {op,1967,'+',{var,1967,'Next'},{integer,203,256}}]},
              {op,1967,'*',{integer,1967,2},{var,1967,'M'}}]},
            {op,1967,'*',{integer,1967,4},{var,1967,'M'}}]}]},
        {clause,1968,[],
         [[{atom,1968,true}]],
         [{call,1969,
           {remote,1969,{atom,1969,erlang},{atom,1969,setelement}},
           [{integer,1969,4},
            {call,1969,
             {remote,1969,{atom,1969,erlang},{atom,1969,setelement}},
             [{integer,1969,9},
              {var,1969,'Head2'},
              {op,1969,'+',{var,1969,'N'},{integer,203,256}}]},
            {op,1969,'+',{var,1969,'Next'},{integer,203,256}}]}]}]}},
     {match,1971,
      {atom,1971,true},
      {call,1971,{atom,1971,hash_invars},[{var,1971,'NewHead'}]}},
     {call,1972,
      {atom,1972,grow},
      [{var,1972,'NewHead'},
       {op,1972,'-',{var,1972,'Extra'},{integer,203,256}},
       {var,1972,'SegZero'}]}]}]},
 {function,1974,hash_invars,1,
  [{clause,1974,
    [{var,1974,'H'}],
    [],
    [{call,1975,
      {atom,1975,hash_invars},
      [{call,1975,
        {remote,1975,{atom,1975,erlang},{atom,1975,element}},
        [{integer,1975,9},{var,1975,'H'}]},
       {call,1975,
        {remote,1975,{atom,1975,erlang},{atom,1975,element}},
        [{integer,1975,2},{var,1975,'H'}]},
       {call,1975,
        {remote,1975,{atom,1975,erlang},{atom,1975,element}},
        [{integer,1975,4},{var,1975,'H'}]},
       {call,1975,
        {remote,1975,{atom,1975,erlang},{atom,1975,element}},
        [{integer,1975,20},{var,1975,'H'}]},
       {call,1976,
        {remote,1976,{atom,1976,erlang},{atom,1976,element}},
        [{integer,1976,21},{var,1976,'H'}]}]}]}]},
 {function,1979,hash_invars,5,
  [{clause,1979,
    [{var,1979,'N'},
     {var,1979,'M'},
     {var,1979,'Next'},
     {var,1979,'Min'},
     {var,1979,'Max'}],
    [],
    [{op,1983,'and',
      {op,1982,'and',
       {op,1982,'and',
        {op,1982,'and',
         {op,1982,'and',
          {op,1981,'and',
           {op,1981,'and',
            {op,1981,'and',
             {op,1981,'and',
              {op,1980,'and',
               {op,1980,'and',
                {op,1980,'and',
                 {op,1980,'and',
                  {op,1978,'=:=',
                   {op,1978,'band',
                    {var,1980,'N'},
                    {op,1978,'-',{integer,203,256},{integer,1978,1}}},
                   {integer,1978,0}},
                  {op,1978,'=:=',
                   {op,1978,'band',
                    {var,1980,'M'},
                    {op,1978,'-',{integer,203,256},{integer,1978,1}}},
                   {integer,1978,0}}},
                 {op,1978,'=:=',
                  {op,1978,'band',
                   {var,1980,'Next'},
                   {op,1978,'-',{integer,203,256},{integer,1978,1}}},
                  {integer,1978,0}}},
                {op,1978,'=:=',
                 {op,1978,'band',
                  {var,1980,'Min'},
                  {op,1978,'-',{integer,203,256},{integer,1978,1}}},
                 {integer,1978,0}}},
               {op,1978,'=:=',
                {op,1978,'band',
                 {var,1980,'Max'},
                 {op,1978,'-',{integer,203,256},{integer,1978,1}}},
                {integer,1978,0}}},
              {op,1981,'=<',{integer,1981,0},{var,1981,'N'}}},
             {op,1981,'=<',{var,1981,'N'},{var,1981,'M'}}},
            {op,1981,'=<',
             {var,1981,'N'},
             {op,1981,'*',{integer,1981,2},{var,1981,'Next'}}}},
           {op,1981,'=<',{var,1981,'M'},{var,1981,'Next'}}},
          {op,1982,'=<',
           {var,1982,'Next'},
           {op,1982,'*',{integer,1982,2},{var,1982,'M'}}}},
         {op,1982,'=<',{integer,1982,0},{var,1982,'Min'}}},
        {op,1982,'=<',{var,1982,'Min'},{var,1982,'Next'}}},
       {op,1982,'=<',{var,1982,'Next'},{var,1982,'Max'}}},
      {op,1983,'=<',{var,1983,'Min'},{var,1983,'M'}}}]}]},
 {function,1985,seg_zero,0,
  [{clause,1985,[],[],
    [{bin,1986,
      [{bin_element,1986,
        {integer,1986,0},
        {op,1986,'*',{integer,1986,4},{integer,202,512}},
        [{unit,8}]}]}]}]},
 {function,1988,find_object,2,
  [{clause,1988,
    [{var,1988,'Head'},{var,1988,'Object'}],
    [],
    [{match,1989,
      {var,1989,'Key'},
      {call,1989,
       {atom,1989,element},
       [{call,1989,
         {remote,1989,{atom,1989,erlang},{atom,1989,element}},
         [{integer,1989,11},{var,1989,'Head'}]},
        {var,1989,'Object'}]}},
     {match,1990,
      {var,1990,'Slot'},
      {call,1990,{atom,1990,db_hash},[{var,1990,'Key'},{var,1990,'Head'}]}},
     {call,1991,
      {atom,1991,find_object},
      [{var,1991,'Head'},{var,1991,'Object'},{var,1991,'Slot'}]}]}]},
 {function,1993,find_object,3,
  [{clause,1993,
    [{var,1993,'H'},{var,1993,'_Obj'},{var,1993,'Slot'}],
    [[{op,1993,'>=',
       {var,1993,'Slot'},
       {call,1993,
        {remote,1993,{atom,1993,erlang},{atom,1993,element}},
        [{integer,1993,4},{var,1993,'H'}]}}]],
    [{atom,1994,false}]},
   {clause,1995,
    [{var,1995,'H'},{var,1995,'Obj'},{var,1995,'Slot'}],
    [],
    [{'case',1996,
      {'catch',1996,
       {call,1996,
        {atom,1996,slot_objects},
        [{var,1996,'H'},{var,1996,'Slot'}]}},
      [{clause,1997,
        [{tuple,1997,
          [{atom,1997,ok},{var,1997,'Pointer'},{var,1997,'Objects'}]}],
        [],
        [{'case',1998,
          {call,1998,
           {remote,1998,{atom,1998,lists},{atom,1998,member}},
           [{var,1998,'Obj'},{var,1998,'Objects'}]},
          [{clause,1999,
            [{atom,1999,true}],
            [],
            [{tuple,1999,[{atom,1999,ok},{var,1999,'Pointer'}]}]},
           {clause,2000,[{atom,2000,false}],[],[{atom,2000,false}]}]}]},
       {clause,2002,[{var,2002,'_'}],[],[{atom,2002,false}]}]}]}]},
 {function,2006,slot_objects,2,
  [{clause,2006,
    [{var,2006,'Head'},{var,2006,'Slot'}],
    [],
    [{match,2007,
      {var,2007,'SlotPos'},
      {call,2007,{atom,2007,slot_position},[{var,2007,'Slot'}]}},
     {match,2008,
      {var,2008,'MaxSize'},
      {call,2008,{atom,2008,maxobjsize},[{var,2008,'Head'}]}},
     {'case',2009,
      {call,2009,
       {remote,2009,{atom,2009,dets_utils},{atom,2009,ipread}},
       [{var,2009,'Head'},{var,2009,'SlotPos'},{var,2009,'MaxSize'}]},
      [{clause,2010,
        [{tuple,2010,
          [{atom,2010,ok},
           {tuple,2010,
            [{var,2010,'BucketSz'},
             {var,2010,'Pointer'},
             {bin,2010,
              [{bin_element,2010,
                {var,2010,'BucketSz'},
                {integer,2010,32},
                default},
               {bin_element,2010,{var,2010,'_St'},{integer,2010,32},default},
               {bin_element,2010,
                {var,2010,'KeysObjs'},
                default,
                [binary]}]}]}]}],
        [],
        [{'case',2011,
          {'catch',2011,
           {call,2011,
            {atom,2011,bin2objs},
            [{var,2011,'KeysObjs'},
             {call,2011,
              {remote,2011,{atom,2011,erlang},{atom,2011,element}},
              [{integer,2011,10},{var,2011,'Head'}]},
             {nil,2011}]}},
          [{clause,2012,
            [{tuple,2012,[{atom,2012,'EXIT'},{var,2012,'_Error'}]}],
            [],
            [{match,2013,
              {var,2013,'Bad'},
              {call,2013,
               {remote,2013,{atom,2013,dets_utils},{atom,2013,bad_object}},
               [{atom,2013,slot_objects},
                {tuple,2014,[{var,2014,'SlotPos'},{var,2014,'KeysObjs'}]}]}},
             {call,2015,
              {atom,2015,throw},
              [{call,2015,
                {remote,2015,
                 {atom,2015,dets_utils},
                 {atom,2015,corrupt_reason}},
                [{var,2015,'Head'},{var,2015,'Bad'}]}]}]},
           {clause,2016,
            [{var,2016,'Objs'}],
            [[{call,2016,{atom,2016,is_list},[{var,2016,'Objs'}]}]],
            [{tuple,2017,
              [{atom,2017,ok},
               {var,2017,'Pointer'},
               {call,2017,
                {remote,2017,{atom,2017,lists},{atom,2017,reverse}},
                [{var,2017,'Objs'}]}]}]}]}]},
       {clause,2019,
        [{nil,2019}],
        [],
        [{tuple,2020,[{atom,2020,ok},{integer,2020,0},{nil,2020}]}]},
       {clause,2021,
        [{var,2021,'BadRead'}],
        [],
        [{match,2022,
          {var,2022,'Bad'},
          {call,2022,
           {remote,2022,{atom,2022,dets_utils},{atom,2022,bad_object}},
           [{atom,2022,slot_objects},
            {tuple,2022,[{var,2022,'SlotPos'},{var,2022,'BadRead'}]}]}},
         {call,2023,
          {atom,2023,throw},
          [{call,2023,
            {remote,2023,{atom,2023,dets_utils},{atom,2023,corrupt_reason}},
            [{var,2023,'Head'},{var,2023,'Bad'}]}]}]}]}]}]},
 {function,2031,eval_work_list,2,
  [{clause,2031,
    [{var,2031,'Head'},
     {cons,2031,
      {tuple,2031,
       [{var,2031,'Key'},
        {cons,2031,
         {tuple,2031,
          [{var,2031,'_Seq'},
           {tuple,2031,[{atom,2031,lookup},{var,2031,'Pid'}]}]},
         {nil,2031}}]},
      {nil,2031}}],
    [],
    [{match,2032,
      {var,2032,'SlotPos'},
      {call,2032,
       {atom,2032,slot_position},
       [{call,2032,
         {atom,2032,db_hash},
         [{var,2032,'Key'},{var,2032,'Head'}]}]}},
     {match,2033,
      {var,2033,'MaxSize'},
      {call,2033,{atom,2033,maxobjsize},[{var,2033,'Head'}]}},
     {match,2034,
      {var,2034,'Objs'},
      {'case',2034,
       {call,2034,
        {remote,2034,{atom,2034,dets_utils},{atom,2034,ipread}},
        [{var,2034,'Head'},{var,2034,'SlotPos'},{var,2034,'MaxSize'}]},
       [{clause,2035,
         [{tuple,2035,
           [{atom,2035,ok},
            {tuple,2035,
             [{var,2035,'_BucketSz'},
              {var,2035,'_Pointer'},
              {var,2035,'Bin'}]}]}],
         [],
         [{'case',2036,
           {'catch',2036,
            {call,2036,
             {atom,2036,per_key},
             [{var,2036,'Head'},{var,2036,'Bin'}]}},
           [{clause,2037,
             [{tuple,2037,[{atom,2037,'EXIT'},{var,2037,'_Error'}]}],
             [],
             [{match,2038,
               {var,2038,'Bad'},
               {call,2038,
                {remote,2038,{atom,2038,dets_utils},{atom,2038,bad_object}},
                [{atom,2038,eval_work_list},
                 {tuple,2039,[{var,2039,'SlotPos'},{var,2039,'Bin'}]}]}},
              {call,2040,
               {atom,2040,throw},
               [{call,2040,
                 {remote,2040,
                  {atom,2040,dets_utils},
                  {atom,2040,corrupt_reason}},
                 [{var,2040,'Head'},{var,2040,'Bad'}]}]}]},
            {clause,2041,
             [{var,2041,'KeyObjs'}],
             [[{call,2041,{atom,2041,is_list},[{var,2041,'KeyObjs'}]}]],
             [{'case',2042,
               {call,2042,
                {remote,2042,{atom,2042,dets_utils},{atom,2042,mkeysearch}},
                [{var,2042,'Key'},{integer,2042,1},{var,2042,'KeyObjs'}]},
               [{clause,2043,[{atom,2043,false}],[],[{nil,2044}]},
                {clause,2045,
                 [{tuple,2045,
                   [{atom,2045,value},
                    {tuple,2045,
                     [{var,2045,'Key'},
                      {var,2045,'_KS'},
                      {var,2045,'_KB'},
                      {var,2045,'O'},
                      {var,2045,'Os'}]}]}],
                 [],
                 [{'case',2046,
                   {'catch',2046,
                    {call,2046,{atom,2046,binobjs2terms},[{var,2046,'Os'}]}},
                   [{clause,2047,
                     [{tuple,2047,[{atom,2047,'EXIT'},{var,2047,'_Error'}]}],
                     [],
                     [{match,2048,
                       {var,2048,'Bad'},
                       {call,2048,
                        {remote,2048,
                         {atom,2048,dets_utils},
                         {atom,2048,bad_object}},
                        [{atom,2049,eval_work_list},
                         {tuple,2050,
                          [{var,2050,'SlotPos'},
                           {var,2050,'Bin'},
                           {var,2050,'KeyObjs'}]}]}},
                      {call,2051,
                       {atom,2051,throw},
                       [{call,2051,
                         {remote,2051,
                          {atom,2051,dets_utils},
                          {atom,2051,corrupt_reason}},
                         [{var,2052,'Head'},{var,2052,'Bad'}]}]}]},
                    {clause,2053,
                     [{var,2053,'Terms'}],
                     [[{call,2053,{atom,2053,is_list},[{var,2053,'Terms'}]}]],
                     [{call,2054,
                       {atom,2054,get_objects},
                       [{cons,2054,
                         {var,2054,'O'},
                         {var,2054,'Terms'}}]}]}]}]}]}]}]}]},
        {clause,2058,[{nil,2058}],[],[{nil,2059}]},
        {clause,2060,
         [{var,2060,'BadRead'}],
         [],
         [{match,2061,
           {var,2061,'Bad'},
           {call,2061,
            {remote,2061,{atom,2061,dets_utils},{atom,2061,bad_object}},
            [{atom,2061,eval_work_list},
             {tuple,2062,[{var,2062,'SlotPos'},{var,2062,'BadRead'}]}]}},
          {call,2063,
           {atom,2063,throw},
           [{call,2063,
             {remote,2063,{atom,2063,dets_utils},{atom,2063,corrupt_reason}},
             [{var,2063,'Head'},{var,2063,'Bad'}]}]}]}]}},
     {tuple,2065,
      [{var,2065,'Head'},
       {cons,2065,
        {tuple,2065,[{var,2065,'Pid'},{var,2065,'Objs'}]},
        {nil,2065}},
       {nil,2065}]}]},
   {clause,2066,
    [{var,2066,'Head'},{var,2066,'PerKey'}],
    [],
    [{match,2067,
      {var,2067,'SWLs'},
      {call,2067,
       {atom,2067,tag_with_slot},
       [{var,2067,'PerKey'},{var,2067,'Head'},{nil,2067}]}},
     {match,2068,
      {var,2068,'P1'},
      {call,2068,
       {remote,2068,{atom,2068,dets_utils},{atom,2068,family}},
       [{var,2068,'SWLs'}]}},
     {match,2069,
      {tuple,2069,[{var,2069,'PerSlot'},{var,2069,'SlotPositions'}]},
      {call,2069,
       {atom,2069,remove_slot_tag},
       [{var,2069,'P1'},{nil,2069},{nil,2069}]}},
     {match,2070,
      {tuple,2070,[{atom,2070,ok},{var,2070,'Bins'}]},
      {call,2070,
       {remote,2070,{atom,2070,dets_utils},{atom,2070,pread}},
       [{var,2070,'SlotPositions'},{var,2070,'Head'}]}},
     {call,2071,
      {atom,2071,read_buckets},
      [{var,2071,'PerSlot'},
       {var,2071,'SlotPositions'},
       {var,2071,'Bins'},
       {var,2071,'Head'},
       {nil,2071},
       {nil,2071},
       {nil,2071},
       {nil,2071},
       {integer,2071,0},
       {integer,2071,0},
       {integer,2071,0}]}]}]},
 {function,2073,tag_with_slot,3,
  [{clause,2073,
    [{cons,2073,
      {match,2073,
       {tuple,2073,[{var,2073,'K'},{var,2073,'_'}]},
       {var,2073,'WL'}},
      {var,2073,'WLs'}},
     {var,2073,'Head'},
     {var,2073,'L'}],
    [],
    [{call,2074,
      {atom,2074,tag_with_slot},
      [{var,2074,'WLs'},
       {var,2074,'Head'},
       {cons,2074,
        {tuple,2074,
         [{call,2074,{atom,2074,db_hash},[{var,2074,'K'},{var,2074,'Head'}]},
          {var,2074,'WL'}]},
        {var,2074,'L'}}]}]},
   {clause,2075,
    [{nil,2075},{var,2075,'_Head'},{var,2075,'L'}],
    [],
    [{var,2076,'L'}]}]},
 {function,2078,remove_slot_tag,3,
  [{clause,2078,
    [{cons,2078,
      {tuple,2078,[{var,2078,'S'},{var,2078,'SWLs'}]},
      {var,2078,'SSWLs'}},
     {var,2078,'Ls'},
     {var,2078,'SPs'}],
    [],
    [{call,2079,
      {atom,2079,remove_slot_tag},
      [{var,2079,'SSWLs'},
       {cons,2079,{var,2079,'SWLs'},{var,2079,'Ls'}},
       {cons,2079,
        {tuple,2079,
         [{call,2079,{atom,2079,slot_position},[{var,2079,'S'}]},
          {op,205,'*',{integer,205,4},{integer,245,2}}]},
        {var,2079,'SPs'}}]}]},
   {clause,2080,
    [{nil,2080},{var,2080,'Ls'},{var,2080,'SPs'}],
    [],
    [{tuple,2081,[{var,2081,'Ls'},{var,2081,'SPs'}]}]}]},
 {function,2083,read_buckets,11,
  [{clause,2083,
    [{cons,2083,{var,2083,'WLs'},{var,2083,'SPs'}},
     {cons,2083,
      {tuple,2083,[{var,2083,'P1'},{var,2083,'_8'}]},
      {var,2083,'Ss'}},
     {cons,2083,
      {bin,2083,
       [{bin_element,2083,{var,2083,'_Zero'},{integer,2083,32},default},
        {bin_element,2083,{var,2083,'P2'},{integer,2083,32},default}]},
      {var,2083,'Bs'}},
     {var,2083,'Head'},
     {var,2084,'PWLs'},
     {var,2084,'ToRead'},
     {var,2084,'LU'},
     {var,2084,'Ws'},
     {var,2084,'NoObjs'},
     {var,2084,'NoKeys'},
     {var,2084,'SoFar'}],
    [[{op,2084,'=:=',{var,2084,'P2'},{integer,2084,0}}]],
    [{match,2085,
      {tuple,2085,
       [{var,2085,'NewHead'},
        {var,2085,'NLU'},
        {var,2085,'NWs'},
        {var,2085,'No'},
        {var,2085,'KNo'}]},
      {call,2086,
       {atom,2086,eval_bucket_keys},
       [{var,2086,'WLs'},
        {var,2086,'P1'},
        {integer,2086,0},
        {integer,2086,0},
        {nil,2086},
        {var,2086,'Head'},
        {var,2086,'Ws'},
        {var,2086,'LU'}]}},
     {match,2087,
      {var,2087,'NewNoObjs'},
      {op,2087,'+',{var,2087,'No'},{var,2087,'NoObjs'}}},
     {match,2088,
      {var,2088,'NewNoKeys'},
      {op,2088,'+',{var,2088,'KNo'},{var,2088,'NoKeys'}}},
     {call,2089,
      {atom,2089,read_buckets},
      [{var,2089,'SPs'},
       {var,2089,'Ss'},
       {var,2089,'Bs'},
       {var,2089,'NewHead'},
       {var,2089,'PWLs'},
       {var,2089,'ToRead'},
       {var,2089,'NLU'},
       {var,2089,'NWs'},
       {var,2090,'NewNoObjs'},
       {var,2090,'NewNoKeys'},
       {var,2090,'SoFar'}]}]},
   {clause,2091,
    [{cons,2091,{var,2091,'WorkLists'},{var,2091,'SPs'}},
     {cons,2091,
      {tuple,2091,[{var,2091,'P1'},{var,2091,'_8'}]},
      {var,2091,'Ss'}},
     {cons,2091,
      {bin,2091,
       [{bin_element,2091,{var,2091,'Size'},{integer,2091,32},default},
        {bin_element,2091,{var,2091,'P2'},{integer,2091,32},default}]},
      {var,2091,'Bs'}},
     {var,2091,'Head'},
     {var,2092,'PWLs'},
     {var,2092,'ToRead'},
     {var,2092,'LU'},
     {var,2092,'Ws'},
     {var,2092,'NoObjs'},
     {var,2092,'NoKeys'},
     {var,2092,'SoFar'}],
    [[{op,2093,'<',
       {op,2093,'+',{var,2093,'SoFar'},{var,2093,'Size'}},
       {op,1810,'*',{integer,1810,10},{integer,38,8192}}}],
     [{op,2093,'=:=',{var,2093,'ToRead'},{nil,2093}}]],
    [{match,2094,
      {var,2094,'NewToRead'},
      {cons,2094,
       {tuple,2094,[{var,2094,'P2'},{var,2094,'Size'}]},
       {var,2094,'ToRead'}}},
     {match,2095,
      {var,2095,'NewPWLs'},
      {cons,2095,
       {tuple,2095,[{var,2095,'P2'},{var,2095,'P1'},{var,2095,'WorkLists'}]},
       {var,2095,'PWLs'}}},
     {match,2096,
      {var,2096,'NewSoFar'},
      {op,2096,'+',{var,2096,'SoFar'},{var,2096,'Size'}}},
     {call,2097,
      {atom,2097,read_buckets},
      [{var,2097,'SPs'},
       {var,2097,'Ss'},
       {var,2097,'Bs'},
       {var,2097,'Head'},
       {var,2097,'NewPWLs'},
       {var,2097,'NewToRead'},
       {var,2097,'LU'},
       {var,2097,'Ws'},
       {var,2098,'NoObjs'},
       {var,2098,'NoKeys'},
       {var,2098,'NewSoFar'}]}]},
   {clause,2099,
    [{var,2099,'SPs'},
     {var,2099,'Ss'},
     {var,2099,'Bs'},
     {var,2099,'Head'},
     {var,2099,'PWLs0'},
     {var,2099,'ToRead0'},
     {var,2099,'LU'},
     {var,2099,'Ws'},
     {var,2099,'NoObjs'},
     {var,2099,'NoKeys'},
     {var,2099,'SoFar'}],
    [[{op,2100,'>',{var,2100,'SoFar'},{integer,2100,0}}]],
    [{match,2104,
      {var,2104,'PWLs'},
      {call,2104,
       {remote,2104,{atom,2104,lists},{atom,2104,keysort}},
       [{integer,2104,1},{var,2104,'PWLs0'}]}},
     {match,2105,
      {var,2105,'ToRead'},
      {call,2105,
       {remote,2105,{atom,2105,lists},{atom,2105,keysort}},
       [{integer,2105,1},{var,2105,'ToRead0'}]}},
     {call,2106,
      {atom,2106,check_pread2_arg},
      [{var,2106,'ToRead'},{var,2106,'Head'}]},
     {match,2107,
      {tuple,2107,[{atom,2107,ok},{var,2107,'Bins'}]},
      {call,2107,
       {remote,2107,{atom,2107,dets_utils},{atom,2107,pread}},
       [{var,2107,'ToRead'},{var,2107,'Head'}]}},
     {'case',2108,
      {'catch',2108,
       {call,2108,
        {atom,2108,eval_buckets},
        [{var,2108,'Bins'},
         {var,2108,'PWLs'},
         {var,2108,'Head'},
         {var,2108,'LU'},
         {var,2108,'Ws'},
         {integer,2108,0},
         {integer,2108,0}]}},
      [{clause,2109,
        [{tuple,2109,
          [{atom,2109,ok},
           {var,2109,'NewHead'},
           {var,2109,'NLU'},
           {nil,2109},
           {integer,2109,0},
           {integer,2109,0}]}],
        [],
        [{call,2110,
          {atom,2110,read_buckets},
          [{var,2110,'SPs'},
           {var,2110,'Ss'},
           {var,2110,'Bs'},
           {var,2110,'NewHead'},
           {nil,2110},
           {nil,2110},
           {var,2110,'NLU'},
           {nil,2110},
           {var,2111,'NoObjs'},
           {var,2111,'NoKeys'},
           {integer,2111,0}]}]},
       {clause,2112,
        [{tuple,2112,
          [{atom,2112,ok},
           {var,2112,'Head1'},
           {var,2112,'NLU'},
           {var,2112,'NWs'},
           {var,2112,'No'},
           {var,2112,'KNo'}]}],
        [],
        [{match,2113,
          {var,2113,'NewNoObjs'},
          {op,2113,'+',{var,2113,'NoObjs'},{var,2113,'No'}}},
         {match,2114,
          {var,2114,'NewNoKeys'},
          {op,2114,'+',{var,2114,'NoKeys'},{var,2114,'KNo'}}},
         {match,2118,
          {tuple,2118,[{var,2118,'NewHead'},{atom,2118,ok}]},
          {call,2118,
           {remote,2118,{atom,2118,dets_utils},{atom,2118,pwrite}},
           [{var,2118,'Head1'},
            {call,2118,
             {remote,2118,{atom,2118,lists},{atom,2118,reverse}},
             [{var,2118,'NWs'}]}]}},
         {call,2119,
          {atom,2119,read_buckets},
          [{var,2119,'SPs'},
           {var,2119,'Ss'},
           {var,2119,'Bs'},
           {var,2119,'NewHead'},
           {nil,2119},
           {nil,2119},
           {var,2119,'NLU'},
           {nil,2119},
           {var,2120,'NewNoObjs'},
           {var,2120,'NewNoKeys'},
           {integer,2120,0}]}]},
       {clause,2121,
        [{var,2121,'Error'}],
        [],
        [{match,2122,
          {var,2122,'Bad'},
          {call,2122,
           {remote,2122,{atom,2122,dets_utils},{atom,2122,bad_object}},
           [{atom,2122,read_buckets},
            {tuple,2122,[{var,2122,'Bins'},{var,2122,'Error'}]}]}},
         {call,2123,
          {atom,2123,throw},
          [{call,2123,
            {remote,2123,{atom,2123,dets_utils},{atom,2123,corrupt_reason}},
            [{var,2123,'Head'},{var,2123,'Bad'}]}]}]}]}]},
   {clause,2125,
    [{nil,2125},
     {nil,2125},
     {nil,2125},
     {var,2125,'Head'},
     {nil,2125},
     {nil,2125},
     {var,2125,'LU'},
     {var,2125,'Ws'},
     {var,2125,'NoObjs'},
     {var,2125,'NoKeys'},
     {integer,2125,0}],
    [],
    [{match,2126,
      {tuple,2126,[{var,2126,'NewHead'},{var,2126,'NWs'}]},
      {call,2126,
       {atom,2126,update_no_keys},
       [{var,2126,'Head'},
        {var,2126,'Ws'},
        {var,2126,'NoObjs'},
        {var,2126,'NoKeys'}]}},
     {tuple,2127,
      [{var,2127,'NewHead'},
       {var,2127,'LU'},
       {call,2127,
        {remote,2127,{atom,2127,lists},{atom,2127,reverse}},
        [{var,2127,'NWs'}]}]}]}]},
 {function,2129,eval_buckets,7,
  [{clause,2129,
    [{cons,2129,{var,2129,'Bin'},{var,2129,'Bins'}},
     {cons,2129,{var,2129,'SP'},{var,2129,'SPs'}},
     {var,2129,'Head'},
     {var,2129,'LU'},
     {var,2129,'Ws'},
     {var,2129,'NoObjs'},
     {var,2129,'NoKeys'}],
    [],
    [{match,2130,
      {tuple,2130,[{var,2130,'Pos'},{var,2130,'P1'},{var,2130,'WLs'}]},
      {var,2130,'SP'}},
     {match,2131,
      {var,2131,'KeyObjs'},
      {call,2131,{atom,2131,per_key},[{var,2131,'Head'},{var,2131,'Bin'}]}},
     {match,2132,
      {tuple,2132,
       [{var,2132,'NewHead'},
        {var,2132,'NLU'},
        {var,2132,'NWs'},
        {var,2132,'No'},
        {var,2132,'KNo'}]},
      {call,2133,
       {atom,2133,eval_bucket_keys},
       [{var,2133,'WLs'},
        {var,2133,'P1'},
        {var,2133,'Pos'},
        {call,2133,{atom,2133,byte_size},[{var,2133,'Bin'}]},
        {var,2133,'KeyObjs'},
        {var,2133,'Head'},
        {var,2133,'Ws'},
        {var,2133,'LU'}]}},
     {call,2134,
      {atom,2134,eval_buckets},
      [{var,2134,'Bins'},
       {var,2134,'SPs'},
       {var,2134,'NewHead'},
       {var,2134,'NLU'},
       {var,2134,'NWs'},
       {op,2134,'+',{var,2134,'NoObjs'},{var,2134,'No'}},
       {op,2134,'+',{var,2134,'NoKeys'},{var,2134,'KNo'}}]}]},
   {clause,2135,
    [{nil,2135},
     {nil,2135},
     {var,2135,'Head'},
     {var,2135,'LU'},
     {var,2135,'Ws'},
     {var,2135,'NoObjs'},
     {var,2135,'NoKeys'}],
    [],
    [{tuple,2136,
      [{atom,2136,ok},
       {var,2136,'Head'},
       {var,2136,'LU'},
       {var,2136,'Ws'},
       {var,2136,'NoObjs'},
       {var,2136,'NoKeys'}]}]}]},
 {function,2138,eval_bucket_keys,8,
  [{clause,2138,
    [{var,2138,'WLs'},
     {var,2138,'SlotPos'},
     {var,2138,'Pos'},
     {var,2138,'OldSize'},
     {var,2138,'KeyObjs'},
     {var,2138,'Head'},
     {var,2138,'Ws'},
     {var,2138,'LU'}],
    [],
    [{match,2139,
      {tuple,2139,
       [{var,2139,'NLU'},
        {var,2139,'Bins'},
        {var,2139,'BSize'},
        {var,2139,'No'},
        {var,2139,'KNo'},
        {var,2139,'Ch'}]},
      {call,2140,
       {atom,2140,eval_slot},
       [{var,2140,'WLs'},
        {var,2140,'KeyObjs'},
        {call,2140,
         {remote,2140,{atom,2140,erlang},{atom,2140,element}},
         [{integer,2140,10},{var,2140,'Head'}]},
        {var,2140,'LU'},
        {nil,2140},
        {integer,2140,0},
        {integer,2140,0},
        {integer,2140,0},
        {atom,2140,false}]}},
     {match,2141,
      {tuple,2141,[{var,2141,'NewHead'},{var,2141,'W1'},{var,2141,'W2'}]},
      {call,2142,
       {atom,2142,updated},
       [{var,2142,'Head'},
        {var,2142,'Pos'},
        {var,2142,'OldSize'},
        {var,2142,'BSize'},
        {var,2142,'SlotPos'},
        {var,2142,'Bins'},
        {var,2142,'Ch'},
        {var,2142,'No'},
        {var,2142,'KNo'}]}},
     {tuple,2143,
      [{var,2143,'NewHead'},
       {var,2143,'NLU'},
       {op,2143,'++',
        {var,2143,'W2'},
        {op,2143,'++',{var,2143,'W1'},{var,2143,'Ws'}}},
       {var,2143,'No'},
       {var,2143,'KNo'}]}]}]},
 {function,2145,updated,9,
  [{clause,2145,
    [{var,2145,'Head'},
     {var,2145,'Pos'},
     {var,2145,'OldSize'},
     {var,2145,'BSize'},
     {var,2145,'SlotPos'},
     {var,2145,'Bins'},
     {var,2145,'Ch'},
     {var,2145,'DeltaNoOs'},
     {var,2145,'DeltaNoKs'}],
    [],
    [{match,2146,
      {var,2146,'BinsSize'},
      {op,2146,'+',{var,2146,'BSize'},{integer,247,8}}},
     {'if',2147,
      [{clause,2148,[],
        [[{op,2148,'=:=',{var,2148,'Pos'},{integer,2148,0}},
          {op,2148,'=:=',{var,2148,'BSize'},{integer,2148,0}}]],
        [{tuple,2149,[{var,2149,'Head'},{nil,2149},{nil,2149}]}]},
       {clause,2150,[],
        [[{op,2150,'=:=',{var,2150,'Pos'},{integer,2150,0}},
          {op,2150,'>',{var,2150,'BSize'},{integer,2150,0}}]],
        [{match,2151,
          {tuple,2151,
           [{var,2151,'Head1'},{var,2151,'NewPos'},{var,2151,'FPos'}]},
          {call,2151,
           {remote,2151,{atom,2151,dets_utils},{atom,2151,alloc}},
           [{var,2151,'Head'},
            {call,2151,{atom,2151,adjsz},[{var,2151,'BinsSize'}]}]}},
         {match,2152,
          {var,2152,'NewHead'},
          {call,2152,
           {atom,2152,one_bucket_added},
           [{var,2152,'Head1'},
            {op,2152,'-',{var,2152,'FPos'},{integer,2152,1}}]}},
         {match,2153,
          {var,2153,'W1'},
          {tuple,2153,
           [{var,2153,'NewPos'},
            {cons,2153,
             {bin,2153,
              [{bin_element,2153,
                {var,2153,'BinsSize'},
                {integer,2153,32},
                default},
               {bin_element,34,
                {integer,34,305419896},
                {integer,2153,32},
                default}]},
             {var,2153,'Bins'}}]}},
         {match,2154,
          {var,2154,'W2'},
          {tuple,2154,
           [{var,2154,'SlotPos'},
            {bin,2154,
             [{bin_element,2154,
               {var,2154,'BinsSize'},
               {integer,2154,32},
               default},
              {bin_element,2154,
               {var,2154,'NewPos'},
               {integer,2154,32},
               default}]}]}},
         {tuple,2155,
          [{var,2155,'NewHead'},
           {cons,2155,{var,2155,'W2'},{nil,2155}},
           {cons,2155,{var,2155,'W1'},{nil,2155}}]}]},
       {clause,2156,[],
        [[{op,2156,'=/=',{var,2156,'Pos'},{integer,2156,0}},
          {op,2156,'=:=',{var,2156,'BSize'},{integer,2156,0}}]],
        [{match,2157,
          {tuple,2157,[{var,2157,'Head1'},{var,2157,'FPos'}]},
          {call,2157,
           {remote,2157,{atom,2157,dets_utils},{atom,2157,free}},
           [{var,2157,'Head'},
            {var,2157,'Pos'},
            {call,2157,{atom,2157,adjsz},[{var,2157,'OldSize'}]}]}},
         {match,2158,
          {var,2158,'NewHead'},
          {call,2158,
           {atom,2158,one_bucket_removed},
           [{var,2158,'Head1'},
            {op,2158,'-',{var,2158,'FPos'},{integer,2158,1}}]}},
         {match,2159,
          {var,2159,'W1'},
          {tuple,2159,
           [{op,2159,'+',{var,2159,'Pos'},{integer,248,4}},
            {bin,2159,
             [{bin_element,33,
               {integer,33,61591023},
               {integer,2159,32},
               default}]}]}},
         {match,2160,
          {var,2160,'W2'},
          {tuple,2160,
           [{var,2160,'SlotPos'},
            {bin,2160,
             [{bin_element,2160,{integer,2160,0},{integer,2160,32},default},
              {bin_element,2160,
               {integer,2160,0},
               {integer,2160,32},
               default}]}]}},
         {tuple,2161,
          [{var,2161,'NewHead'},
           {cons,2161,{var,2161,'W2'},{nil,2161}},
           {cons,2161,{var,2161,'W1'},{nil,2161}}]}]},
       {clause,2162,[],
        [[{op,2162,'=/=',{var,2162,'Pos'},{integer,2162,0}},
          {op,2162,'>',{var,2162,'BSize'},{integer,2162,0}},
          {op,2162,'=:=',{var,2162,'Ch'},{atom,2162,false}}]],
        [{tuple,2163,[{var,2163,'Head'},{nil,2163},{nil,2163}]}]},
       {clause,2164,[],
        [[{op,2164,'=/=',{var,2164,'Pos'},{integer,2164,0}},
          {op,2164,'>',{var,2164,'BSize'},{integer,2164,0}}]],
        [{match,2167,
          {var,2167,'Overwrite0'},
          {'if',2167,
           [{clause,2168,[],
             [[{op,2168,'=:=',{var,2168,'OldSize'},{var,2168,'BinsSize'}}]],
             [{atom,2168,same}]},
            {clause,2169,[],
             [[{atom,2169,true}]],
             [{op,2169,'=:=',
               {call,2169,{atom,2169,sz2pos},[{var,2169,'OldSize'}]},
               {call,2169,{atom,2169,sz2pos},[{var,2169,'BinsSize'}]}}]}]}},
         {match,2171,
          {var,2171,'Overwrite'},
          {'if',2171,
           [{clause,2172,[],
             [[{op,2172,'=/=',
                {call,2172,
                 {remote,2172,{atom,2172,erlang},{atom,2172,element}},
                 [{integer,2172,17},{var,2172,'Head'}]},
                {atom,2172,false}}]],
             [{op,2184,'and',
               {op,2183,'and',
                {op,2183,'=/=',{var,2183,'Overwrite0'},{atom,2183,false}},
                {op,2184,'=:=',{var,2184,'DeltaNoOs'},{integer,2184,0}}},
               {op,2184,'=:=',{var,2184,'DeltaNoKs'},{integer,2184,0}}}]},
            {clause,2185,[],[[{atom,2185,true}]],[{var,2186,'Overwrite0'}]}]}},
         {'if',2188,
          [{clause,2189,[],
            [[{op,2189,'=:=',{var,2189,'Overwrite'},{atom,2189,same}}]],
            [{match,2190,
              {var,2190,'W1'},
              {tuple,2190,
               [{op,2190,'+',{var,2190,'Pos'},{integer,247,8}},
                {var,2190,'Bins'}]}},
             {tuple,2191,
              [{var,2191,'Head'},
               {nil,2191},
               {cons,2191,{var,2191,'W1'},{nil,2191}}]}]},
           {clause,2192,[],
            [[{var,2192,'Overwrite'}]],
            [{match,2193,
              {var,2193,'W1'},
              {tuple,2193,
               [{var,2193,'Pos'},
                {cons,2193,
                 {bin,2193,
                  [{bin_element,2193,
                    {var,2193,'BinsSize'},
                    {integer,2193,32},
                    default},
                   {bin_element,34,
                    {integer,34,305419896},
                    {integer,2193,32},
                    default}]},
                 {var,2193,'Bins'}}]}},
             {match,2195,
              {var,2195,'W2'},
              {tuple,2195,
               [{var,2195,'SlotPos'},
                {bin,2195,
                 [{bin_element,2195,
                   {var,2195,'BinsSize'},
                   {integer,2195,32},
                   default},
                  {bin_element,2195,
                   {var,2195,'Pos'},
                   {integer,2195,32},
                   default}]}]}},
             {tuple,2196,
              [{var,2196,'Head'},
               {cons,2196,{var,2196,'W2'},{nil,2196}},
               {cons,2196,{var,2196,'W1'},{nil,2196}}]}]},
           {clause,2197,[],
            [[{atom,2197,true}]],
            [{match,2198,
              {tuple,2198,[{var,2198,'Head1'},{var,2198,'FPosF'}]},
              {call,2198,
               {remote,2198,{atom,2198,dets_utils},{atom,2198,free}},
               [{var,2198,'Head'},
                {var,2198,'Pos'},
                {call,2198,{atom,2198,adjsz},[{var,2198,'OldSize'}]}]}},
             {match,2199,
              {tuple,2199,
               [{var,2199,'Head2'},{var,2199,'NewPos'},{var,2199,'FPosA'}]},
              {call,2200,
               {remote,2200,{atom,2200,dets_utils},{atom,2200,alloc}},
               [{var,2200,'Head1'},
                {call,2200,{atom,2200,adjsz},[{var,2200,'BinsSize'}]}]}},
             {match,2201,
              {var,2201,'Head3'},
              {call,2201,
               {atom,2201,one_bucket_added},
               [{var,2201,'Head2'},
                {op,2201,'-',{var,2201,'FPosA'},{integer,2201,1}}]}},
             {match,2202,
              {var,2202,'NewHead'},
              {call,2202,
               {atom,2202,one_bucket_removed},
               [{var,2202,'Head3'},
                {op,2202,'-',{var,2202,'FPosF'},{integer,2202,1}}]}},
             {match,2203,
              {var,2203,'W0'},
              {tuple,2203,
               [{var,2203,'NewPos'},
                {cons,2203,
                 {bin,2203,
                  [{bin_element,2203,
                    {var,2203,'BinsSize'},
                    {integer,2203,32},
                    default},
                   {bin_element,34,
                    {integer,34,305419896},
                    {integer,2203,32},
                    default}]},
                 {var,2203,'Bins'}}]}},
             {match,2204,
              {var,2204,'W2'},
              {tuple,2204,
               [{var,2204,'SlotPos'},
                {bin,2204,
                 [{bin_element,2204,
                   {var,2204,'BinsSize'},
                   {integer,2204,32},
                   default},
                  {bin_element,2204,
                   {var,2204,'NewPos'},
                   {integer,2204,32},
                   default}]}]}},
             {match,2205,
              {var,2205,'W1'},
              {'if',2205,
               [{clause,2206,[],
                 [[{op,2206,'=/=',{var,2206,'Pos'},{var,2206,'NewPos'}}]],
                 [{cons,2208,
                   {var,2208,'W0'},
                   {cons,2208,
                    {tuple,2208,
                     [{op,2208,'+',{var,2208,'Pos'},{integer,248,4}},
                      {bin,2208,
                       [{bin_element,33,
                         {integer,33,61591023},
                         {integer,2208,32},
                         default}]}]},
                    {nil,2208}}}]},
                {clause,2209,[],
                 [[{atom,2209,true}]],
                 [{cons,2210,{var,2210,'W0'},{nil,2210}}]}]}},
             {tuple,2212,
              [{var,2212,'NewHead'},
               {cons,2212,{var,2212,'W2'},{nil,2212}},
               {var,2212,'W1'}]}]}]}]}]}]}]},
 {function,2216,one_bucket_added,2,
  [{clause,2216,
    [{var,2216,'H'},{var,2216,'_Log2'}],
    [[{op,2216,'=:=',
       {call,2216,
        {remote,2216,{atom,2216,erlang},{atom,2216,element}},
        [{integer,2216,14},{var,2216,'H'}]},
       {atom,2216,undefined}}]],
    [{var,2217,'H'}]},
   {clause,2218,
    [{var,2218,'H'},{var,2218,'Log2'}],
    [[{op,2218,'>=',
       {call,2218,
        {remote,2218,{atom,2218,erlang},{atom,2218,element}},
        [{integer,2218,8},{var,2218,'H'}]},
       {var,2218,'Log2'}}]],
    [{match,2219,
      {var,2219,'NewNoColls'},
      {call,2219,
       {remote,2219,{atom,2219,orddict},{atom,2219,update_counter}},
       [{var,2219,'Log2'},
        {integer,2219,1},
        {call,2219,
         {remote,2219,{atom,2219,erlang},{atom,2219,element}},
         [{integer,2219,14},{var,2219,'H'}]}]}},
     {call,2220,
      {remote,2220,{atom,2220,erlang},{atom,2220,setelement}},
      [{integer,2220,14},{var,2220,'H'},{var,2220,'NewNoColls'}]}]},
   {clause,2221,
    [{var,2221,'H'},{var,2221,'Log2'}],
    [],
    [{match,2222,
      {var,2222,'NewNoColls'},
      {call,2222,
       {remote,2222,{atom,2222,orddict},{atom,2222,update_counter}},
       [{var,2222,'Log2'},
        {integer,2222,1},
        {call,2222,
         {remote,2222,{atom,2222,erlang},{atom,2222,element}},
         [{integer,2222,14},{var,2222,'H'}]}]}},
     {call,2223,
      {remote,2223,{atom,2223,erlang},{atom,2223,setelement}},
      [{integer,2223,8},
       {call,2223,
        {remote,2223,{atom,2223,erlang},{atom,2223,setelement}},
        [{integer,2223,14},{var,2223,'H'},{var,2223,'NewNoColls'}]},
       {var,2223,'Log2'}]}]}]},
 {function,2225,one_bucket_removed,2,
  [{clause,2225,
    [{var,2225,'H'},{var,2225,'_FPos'}],
    [[{op,2225,'=:=',
       {call,2225,
        {remote,2225,{atom,2225,erlang},{atom,2225,element}},
        [{integer,2225,14},{var,2225,'H'}]},
       {atom,2225,undefined}}]],
    [{var,2226,'H'}]},
   {clause,2227,
    [{var,2227,'H'},{var,2227,'Log2'}],
    [[{op,2227,'>',
       {call,2227,
        {remote,2227,{atom,2227,erlang},{atom,2227,element}},
        [{integer,2227,8},{var,2227,'H'}]},
       {var,2227,'Log2'}}]],
    [{match,2228,
      {var,2228,'NewNoColls'},
      {call,2228,
       {remote,2228,{atom,2228,orddict},{atom,2228,update_counter}},
       [{var,2228,'Log2'},
        {op,2228,'-',{integer,2228,1}},
        {call,2228,
         {remote,2228,{atom,2228,erlang},{atom,2228,element}},
         [{integer,2228,14},{var,2228,'H'}]}]}},
     {call,2229,
      {remote,2229,{atom,2229,erlang},{atom,2229,setelement}},
      [{integer,2229,14},{var,2229,'H'},{var,2229,'NewNoColls'}]}]},
   {clause,2230,
    [{var,2230,'H'},{var,2230,'Log2'}],
    [[{op,2230,'=:=',
       {call,2230,
        {remote,2230,{atom,2230,erlang},{atom,2230,element}},
        [{integer,2230,8},{var,2230,'H'}]},
       {var,2230,'Log2'}}]],
    [{match,2231,
      {var,2231,'NewNoColls'},
      {call,2231,
       {remote,2231,{atom,2231,orddict},{atom,2231,update_counter}},
       [{var,2231,'Log2'},
        {op,2231,'-',{integer,2231,1}},
        {call,2231,
         {remote,2231,{atom,2231,erlang},{atom,2231,element}},
         [{integer,2231,14},{var,2231,'H'}]}]}},
     {match,2232,
      {var,2232,'MaxObjSize'},
      {call,2232,{atom,2232,max_objsize},[{var,2232,'NewNoColls'}]}},
     {call,2233,
      {remote,2233,{atom,2233,erlang},{atom,2233,setelement}},
      [{integer,2233,8},
       {call,2233,
        {remote,2233,{atom,2233,erlang},{atom,2233,setelement}},
        [{integer,2233,14},{var,2233,'H'},{var,2233,'NewNoColls'}]},
       {var,2233,'MaxObjSize'}]}]}]},
 {function,2235,eval_slot,9,
  [{clause,2235,
    [{match,2235,
      {cons,2235,
       {tuple,2235,[{var,2235,'Key'},{var,2235,'Commands'}]},
       {var,2235,'WLs'}},
      {var,2235,'WLs0'}},
     {match,2235,
      {cons,2235,
       {tuple,2235,
        [{var,2235,'K'},
         {var,2235,'KS'},
         {var,2235,'KB'},
         {var,2235,'O'},
         {var,2235,'Os'}]},
       {var,2235,'KOs1'}},
      {var,2235,'KOs'}},
     {var,2236,'Type'},
     {var,2236,'LU'},
     {var,2236,'Ws'},
     {var,2236,'No'},
     {var,2236,'KNo'},
     {var,2236,'BSz'},
     {var,2236,'Ch'}],
    [],
    [{'case',2237,
      {call,2237,
       {remote,2237,{atom,2237,dets_utils},{atom,2237,cmp}},
       [{var,2237,'K'},{var,2237,'Key'}]},
      [{clause,2238,
        [{integer,2238,0}],
        [],
        [{match,2239,
          {var,2239,'Old'},
          {cons,2239,
           {var,2239,'O'},
           {call,2239,{atom,2239,binobjs2terms},[{var,2239,'Os'}]}}},
         {match,2240,
          {tuple,2240,
           [{var,2240,'NLU'},
            {var,2240,'NWs'},
            {var,2240,'Sz'},
            {var,2240,'No1'},
            {var,2240,'KNo1'},
            {var,2240,'NCh'}]},
          {call,2241,
           {atom,2241,eval_key},
           [{var,2241,'Key'},
            {var,2241,'Commands'},
            {var,2241,'Old'},
            {var,2241,'Type'},
            {var,2241,'KB'},
            {var,2241,'KS'},
            {var,2241,'LU'},
            {var,2241,'Ws'},
            {var,2241,'Ch'}]}},
         {call,2242,
          {atom,2242,eval_slot},
          [{var,2242,'WLs'},
           {var,2242,'KOs1'},
           {var,2242,'Type'},
           {var,2242,'NLU'},
           {var,2242,'NWs'},
           {op,2242,'+',{var,2242,'No1'},{var,2242,'No'}},
           {op,2243,'+',{var,2243,'KNo1'},{var,2243,'KNo'}},
           {op,2243,'+',{var,2243,'Sz'},{var,2243,'BSz'}},
           {var,2243,'NCh'}]}]},
       {clause,2244,
        [{op,2244,'-',{integer,2244,1}}],
        [],
        [{call,2245,
          {atom,2245,eval_slot},
          [{var,2245,'WLs0'},
           {var,2245,'KOs1'},
           {var,2245,'Type'},
           {var,2245,'LU'},
           {cons,2245,{var,2245,'Ws'},{var,2245,'KB'}},
           {var,2245,'No'},
           {var,2246,'KNo'},
           {op,2246,'+',{var,2246,'KS'},{var,2246,'BSz'}},
           {var,2246,'Ch'}]}]},
       {clause,2247,
        [{integer,2247,1}],
        [],
        [{match,2248,
          {tuple,2248,
           [{var,2248,'NLU'},
            {var,2248,'NWs'},
            {var,2248,'Sz'},
            {var,2248,'No1'},
            {var,2248,'KNo1'},
            {var,2248,'NCh'}]},
          {call,2249,
           {atom,2249,eval_key},
           [{var,2249,'Key'},
            {var,2249,'Commands'},
            {nil,2249},
            {var,2249,'Type'},
            {nil,2249},
            {integer,2249,0},
            {var,2249,'LU'},
            {var,2249,'Ws'},
            {var,2249,'Ch'}]}},
         {call,2250,
          {atom,2250,eval_slot},
          [{var,2250,'WLs'},
           {var,2250,'KOs'},
           {var,2250,'Type'},
           {var,2250,'NLU'},
           {var,2250,'NWs'},
           {op,2250,'+',{var,2250,'No1'},{var,2250,'No'}},
           {op,2251,'+',{var,2251,'KNo1'},{var,2251,'KNo'}},
           {op,2251,'+',{var,2251,'Sz'},{var,2251,'BSz'}},
           {var,2251,'NCh'}]}]}]}]},
   {clause,2253,
    [{cons,2253,
      {tuple,2253,[{var,2253,'Key'},{var,2253,'Commands'}]},
      {var,2253,'WLs'}},
     {nil,2253},
     {var,2253,'Type'},
     {var,2253,'LU'},
     {var,2253,'Ws'},
     {var,2253,'No'},
     {var,2253,'KNo'},
     {var,2253,'BSz'},
     {var,2253,'Ch'}],
    [],
    [{match,2254,
      {tuple,2254,
       [{var,2254,'NLU'},
        {var,2254,'NWs'},
        {var,2254,'Sz'},
        {var,2254,'No1'},
        {var,2254,'KNo1'},
        {var,2254,'NCh'}]},
      {call,2255,
       {atom,2255,eval_key},
       [{var,2255,'Key'},
        {var,2255,'Commands'},
        {nil,2255},
        {var,2255,'Type'},
        {nil,2255},
        {integer,2255,0},
        {var,2255,'LU'},
        {var,2255,'Ws'},
        {var,2255,'Ch'}]}},
     {call,2256,
      {atom,2256,eval_slot},
      [{var,2256,'WLs'},
       {nil,2256},
       {var,2256,'Type'},
       {var,2256,'NLU'},
       {var,2256,'NWs'},
       {op,2256,'+',{var,2256,'No1'},{var,2256,'No'}},
       {op,2256,'+',{var,2256,'KNo1'},{var,2256,'KNo'}},
       {op,2256,'+',{var,2256,'Sz'},{var,2256,'BSz'}},
       {var,2256,'NCh'}]}]},
   {clause,2257,
    [{nil,2257},
     {cons,2257,
      {tuple,2257,
       [{var,2257,'_Key'},
        {var,2257,'Size'},
        {var,2257,'KeyBin'},
        {var,2257,'_'},
        {var,2257,'_'}]},
      {var,2257,'KOs'}},
     {var,2257,'Type'},
     {var,2257,'LU'},
     {var,2257,'Ws'},
     {var,2257,'No'},
     {var,2257,'KNo'},
     {var,2257,'BSz'},
     {var,2257,'Ch'}],
    [],
    [{call,2258,
      {atom,2258,eval_slot},
      [{nil,2258},
       {var,2258,'KOs'},
       {var,2258,'Type'},
       {var,2258,'LU'},
       {cons,2258,{var,2258,'Ws'},{var,2258,'KeyBin'}},
       {var,2258,'No'},
       {var,2258,'KNo'},
       {op,2258,'+',{var,2258,'Size'},{var,2258,'BSz'}},
       {var,2258,'Ch'}]}]},
   {clause,2259,
    [{nil,2259},
     {nil,2259},
     {var,2259,'_Type'},
     {var,2259,'LU'},
     {var,2259,'Ws'},
     {var,2259,'No'},
     {var,2259,'KNo'},
     {var,2259,'BSz'},
     {var,2259,'Ch'}],
    [],
    [{tuple,2260,
      [{var,2260,'LU'},
       {var,2260,'Ws'},
       {var,2260,'BSz'},
       {var,2260,'No'},
       {var,2260,'KNo'},
       {var,2260,'Ch'}]}]}]},
 {function,2262,eval_key,9,
  [{clause,2262,
    [{var,2262,'_K'},
     {cons,2262,
      {tuple,2262,
       [{var,2262,'_Seq'},{tuple,2262,[{atom,2262,lookup},{var,2262,'Pid'}]}]},
      {nil,2262}},
     {nil,2262},
     {var,2262,'_Type'},
     {var,2262,'_KeyBin'},
     {var,2262,'_KeySz'},
     {var,2262,'LU'},
     {var,2262,'Ws'},
     {var,2262,'Ch'}],
    [],
    [{match,2263,
      {var,2263,'NLU'},
      {cons,2263,{tuple,2263,[{var,2263,'Pid'},{nil,2263}]},{var,2263,'LU'}}},
     {tuple,2264,
      [{var,2264,'NLU'},
       {var,2264,'Ws'},
       {integer,2264,0},
       {integer,2264,0},
       {integer,2264,0},
       {var,2264,'Ch'}]}]},
   {clause,2265,
    [{var,2265,'_K'},
     {cons,2265,
      {tuple,2265,
       [{var,2265,'_Seq'},{tuple,2265,[{atom,2265,lookup},{var,2265,'Pid'}]}]},
      {nil,2265}},
     {var,2265,'Old0'},
     {var,2265,'_Type'},
     {var,2265,'KeyBin'},
     {var,2265,'KeySz'},
     {var,2265,'LU'},
     {var,2265,'Ws'},
     {var,2265,'Ch'}],
    [],
    [{match,2266,
      {var,2266,'Old'},
      {call,2266,
       {remote,2266,{atom,2266,lists},{atom,2266,keysort}},
       [{integer,2266,2},{var,2266,'Old0'}]}},
     {match,2267,
      {var,2267,'Objs'},
      {call,2267,{atom,2267,get_objects},[{var,2267,'Old'}]}},
     {match,2268,
      {var,2268,'NLU'},
      {cons,2268,
       {tuple,2268,[{var,2268,'Pid'},{var,2268,'Objs'}]},
       {var,2268,'LU'}}},
     {tuple,2269,
      [{var,2269,'NLU'},
       {cons,2269,{var,2269,'Ws'},{var,2269,'KeyBin'}},
       {var,2269,'KeySz'},
       {integer,2269,0},
       {integer,2269,0},
       {var,2269,'Ch'}]}]},
   {clause,2270,
    [{var,2270,'K'},
     {var,2270,'Comms'},
     {var,2270,'Orig'},
     {var,2270,'Type'},
     {var,2270,'KeyBin'},
     {var,2270,'KeySz'},
     {var,2270,'LU'},
     {var,2270,'Ws'},
     {var,2270,'Ch'}],
    [],
    [{match,2271,
      {var,2271,'Old'},
      {call,2271,
       {remote,2271,{atom,2271,dets_utils},{atom,2271,msort}},
       [{var,2271,'Orig'}]}},
     {'case',2272,
      {call,2272,
       {atom,2272,eval_key1},
       [{var,2272,'Comms'},
        {nil,2272},
        {var,2272,'Old'},
        {var,2272,'Type'},
        {var,2272,'K'},
        {var,2272,'LU'},
        {var,2272,'Ws'},
        {integer,2272,0},
        {var,2272,'Orig'}]},
      [{clause,2273,
        [{tuple,2273,[{atom,2273,ok},{var,2273,'NLU'}]}],
        [[{op,2273,'=:=',{var,2273,'Old'},{nil,2273}}]],
        [{tuple,2274,
          [{var,2274,'NLU'},
           {var,2274,'Ws'},
           {integer,2274,0},
           {integer,2274,0},
           {integer,2274,0},
           {var,2274,'Ch'}]}]},
       {clause,2275,
        [{tuple,2275,[{atom,2275,ok},{var,2275,'NLU'}]}],
        [],
        [{tuple,2276,
          [{var,2276,'NLU'},
           {cons,2276,{var,2276,'Ws'},{var,2276,'KeyBin'}},
           {var,2276,'KeySz'},
           {integer,2276,0},
           {integer,2276,0},
           {var,2276,'Ch'}]}]},
       {clause,2277,
        [{tuple,2277,
          [{var,2277,'NLU'},
           {var,2277,'NWs'},
           {var,2277,'NSz'},
           {var,2277,'No'}]}],
        [[{op,2277,'=:=',{var,2277,'Old'},{nil,2277}},
          {op,2277,'>',{var,2277,'NSz'},{integer,2277,0}}]],
        [{tuple,2278,
          [{var,2278,'NLU'},
           {var,2278,'NWs'},
           {var,2278,'NSz'},
           {var,2278,'No'},
           {integer,2278,1},
           {atom,2278,true}]}]},
       {clause,2279,
        [{tuple,2279,
          [{var,2279,'NLU'},
           {var,2279,'NWs'},
           {var,2279,'NSz'},
           {var,2279,'No'}]}],
        [[{op,2279,'=/=',{var,2279,'Old'},{nil,2279}},
          {op,2279,'=:=',{var,2279,'NSz'},{integer,2279,0}}]],
        [{tuple,2280,
          [{var,2280,'NLU'},
           {var,2280,'NWs'},
           {var,2280,'NSz'},
           {var,2280,'No'},
           {op,2280,'-',{integer,2280,1}},
           {atom,2280,true}]}]},
       {clause,2281,
        [{tuple,2281,
          [{var,2281,'NLU'},
           {var,2281,'NWs'},
           {var,2281,'NSz'},
           {var,2281,'No'}]}],
        [],
        [{tuple,2282,
          [{var,2282,'NLU'},
           {var,2282,'NWs'},
           {var,2282,'NSz'},
           {var,2282,'No'},
           {integer,2282,0},
           {atom,2282,true}]}]}]}]}]},
 {function,2286,eval_key1,9,
  [{clause,2286,
    [{cons,2286,
      {tuple,2286,
       [{var,2286,'_Seq'},
        {tuple,2286,[{atom,2286,insert},{var,2286,'Term'}]}]},
      {var,2286,'L'}},
     {var,2286,'Cs'},
     {match,2286,
      {cons,2286,
       {tuple,2286,[{var,2286,'Term'},{var,2286,'_'},{var,2286,'_'}]},
       {nil,2286}},
      {var,2286,'Old'}},
     {match,2286,{var,2286,'Type'},{atom,2286,set}},
     {var,2286,'K'},
     {var,2287,'LU'},
     {var,2287,'Ws'},
     {var,2287,'No'},
     {var,2287,'Orig'}],
    [],
    [{call,2288,
      {atom,2288,eval_key1},
      [{var,2288,'L'},
       {var,2288,'Cs'},
       {var,2288,'Old'},
       {var,2288,'Type'},
       {var,2288,'K'},
       {var,2288,'LU'},
       {var,2288,'Ws'},
       {var,2288,'No'},
       {var,2288,'Orig'}]}]},
   {clause,2289,
    [{cons,2289,
      {tuple,2289,
       [{var,2289,'Seq'},{tuple,2289,[{atom,2289,insert},{var,2289,'Term'}]}]},
      {var,2289,'L'}},
     {var,2289,'Cs'},
     {var,2289,'Old'},
     {match,2289,{var,2289,'Type'},{atom,2289,set}},
     {var,2289,'K'},
     {var,2289,'LU'},
     {var,2289,'Ws'},
     {var,2289,'No'},
     {var,2289,'Orig'}],
    [],
    [{match,2291,
      {var,2291,'NNo'},
      {op,2291,'-',
       {op,2291,'+',{var,2291,'No'},{integer,2291,1}},
       {call,2291,{atom,2291,length},[{var,2291,'Old'}]}}},
     {call,2292,
      {atom,2292,eval_key1},
      [{var,2292,'L'},
       {var,2292,'Cs'},
       {cons,2292,
        {tuple,2292,[{var,2292,'Term'},{var,2292,'Seq'},{atom,2292,insert}]},
        {nil,2292}},
       {var,2292,'Type'},
       {var,2292,'K'},
       {var,2292,'LU'},
       {var,2292,'Ws'},
       {var,2292,'NNo'},
       {var,2292,'Orig'}]}]},
   {clause,2293,
    [{cons,2293,
      {tuple,2293,
       [{var,2293,'_Seq'},{tuple,2293,[{atom,2293,lookup},{var,2293,'Pid'}]}]},
      {var,2293,'L'}},
     {var,2293,'Cs'},
     {var,2293,'Old'},
     {var,2293,'Type'},
     {var,2293,'Key'},
     {var,2293,'LU'},
     {var,2293,'Ws'},
     {var,2293,'No'},
     {var,2293,'Orig'}],
    [],
    [{match,2294,
      {tuple,2294,[{atom,2294,ok},{var,2294,'New0'},{var,2294,'NewNo'}]},
      {call,2294,
       {atom,2294,eval_comms},
       [{var,2294,'Cs'},{var,2294,'Old'},{var,2294,'Type'},{var,2294,'No'}]}},
     {match,2295,
      {var,2295,'New'},
      {call,2295,
       {remote,2295,{atom,2295,lists},{atom,2295,keysort}},
       [{integer,2295,2},{var,2295,'New0'}]}},
     {match,2296,
      {var,2296,'Objs'},
      {call,2296,{atom,2296,get_objects},[{var,2296,'New'}]}},
     {match,2297,
      {var,2297,'NLU'},
      {cons,2297,
       {tuple,2297,[{var,2297,'Pid'},{var,2297,'Objs'}]},
       {var,2297,'LU'}}},
     {'if',2298,
      [{clause,2299,[],
        [[{op,2299,'=:=',{var,2299,'L'},{nil,2299}}]],
        [{call,2300,
          {atom,2300,eval_end},
          [{var,2300,'New'},
           {var,2300,'NLU'},
           {var,2300,'Type'},
           {var,2300,'Ws'},
           {var,2300,'NewNo'},
           {var,2300,'Orig'}]}]},
       {clause,2301,[],
        [[{atom,2301,true}]],
        [{match,2302,
          {var,2302,'NewOld'},
          {call,2302,
           {remote,2302,{atom,2302,dets_utils},{atom,2302,msort}},
           [{var,2302,'New'}]}},
         {call,2303,
          {atom,2303,eval_key1},
          [{var,2303,'L'},
           {nil,2303},
           {var,2303,'NewOld'},
           {var,2303,'Type'},
           {var,2303,'Key'},
           {var,2303,'NLU'},
           {var,2303,'Ws'},
           {var,2303,'NewNo'},
           {var,2303,'Orig'}]}]}]}]},
   {clause,2305,
    [{cons,2305,
      {tuple,2305,[{var,2305,'_Seq'},{atom,2305,delete_key}]},
      {var,2305,'L'}},
     {var,2305,'_Cs'},
     {var,2305,'Old'},
     {var,2305,'Type'},
     {var,2305,'K'},
     {var,2305,'LU'},
     {var,2305,'Ws'},
     {var,2305,'No'},
     {var,2305,'Orig'}],
    [],
    [{match,2306,
      {var,2306,'NewNo'},
      {op,2306,'-',
       {var,2306,'No'},
       {call,2306,{atom,2306,length},[{var,2306,'Old'}]}}},
     {call,2307,
      {atom,2307,eval_key1},
      [{var,2307,'L'},
       {nil,2307},
       {nil,2307},
       {var,2307,'Type'},
       {var,2307,'K'},
       {var,2307,'LU'},
       {var,2307,'Ws'},
       {var,2307,'NewNo'},
       {var,2307,'Orig'}]}]},
   {clause,2308,
    [{cons,2308,
      {tuple,2308,
       [{var,2308,'_Seq'},
        {tuple,2308,[{atom,2308,delete_object},{var,2308,'Term'}]}]},
      {var,2308,'L'}},
     {var,2308,'Cs'},
     {cons,2308,
      {tuple,2308,[{var,2308,'Term'},{var,2308,'_'},{var,2308,'_'}]},
      {nil,2308}},
     {match,2308,{var,2308,'Type'},{atom,2308,set}},
     {var,2308,'K'},
     {var,2309,'LU'},
     {var,2309,'Ws'},
     {var,2309,'No'},
     {var,2309,'Orig'}],
    [],
    [{call,2310,
      {atom,2310,eval_key1},
      [{var,2310,'L'},
       {var,2310,'Cs'},
       {nil,2310},
       {var,2310,'Type'},
       {var,2310,'K'},
       {var,2310,'LU'},
       {var,2310,'Ws'},
       {op,2310,'-',{var,2310,'No'},{integer,2310,1}},
       {var,2310,'Orig'}]}]},
   {clause,2311,
    [{cons,2311,
      {tuple,2311,
       [{var,2311,'_Seq'},
        {tuple,2311,[{atom,2311,delete_object},{var,2311,'_T'}]}]},
      {var,2311,'L'}},
     {var,2311,'Cs'},
     {var,2311,'Old1'},
     {match,2311,{var,2311,'Type'},{atom,2311,set}},
     {var,2311,'K'},
     {var,2311,'LU'},
     {var,2312,'Ws'},
     {var,2312,'No'},
     {var,2312,'Orig'}],
    [],
    [{call,2313,
      {atom,2313,eval_key1},
      [{var,2313,'L'},
       {var,2313,'Cs'},
       {var,2313,'Old1'},
       {var,2313,'Type'},
       {var,2313,'K'},
       {var,2313,'LU'},
       {var,2313,'Ws'},
       {var,2313,'No'},
       {var,2313,'Orig'}]}]},
   {clause,2314,
    [{cons,2314,
      {tuple,2314,
       [{var,2314,'Seq'},{tuple,2314,[{var,2314,'Comm'},{var,2314,'Term'}]}]},
      {var,2314,'L'}},
     {var,2314,'Cs'},
     {var,2314,'Old'},
     {var,2314,'Type'},
     {var,2314,'K'},
     {var,2314,'LU'},
     {var,2314,'Ws'},
     {var,2314,'No'},
     {var,2314,'Orig'}],
    [[{op,2315,'=/=',{var,2315,'Type'},{atom,2315,set}}]],
    [{call,2316,
      {atom,2316,eval_key1},
      [{var,2316,'L'},
       {cons,2316,
        {tuple,2316,[{var,2316,'Term'},{var,2316,'Seq'},{var,2316,'Comm'}]},
        {var,2316,'Cs'}},
       {var,2316,'Old'},
       {var,2316,'Type'},
       {var,2316,'K'},
       {var,2316,'LU'},
       {var,2316,'Ws'},
       {var,2316,'No'},
       {var,2316,'Orig'}]}]},
   {clause,2317,
    [{nil,2317},
     {var,2317,'Cs'},
     {var,2317,'Old'},
     {match,2317,{var,2317,'Type'},{atom,2317,set}},
     {var,2317,'_Key'},
     {var,2317,'LU'},
     {var,2317,'Ws'},
     {var,2317,'No'},
     {var,2317,'Orig'}],
    [],
    [{match,2318,{nil,2318},{var,2318,'Cs'}},
     {call,2319,
      {atom,2319,eval_end},
      [{var,2319,'Old'},
       {var,2319,'LU'},
       {var,2319,'Type'},
       {var,2319,'Ws'},
       {var,2319,'No'},
       {var,2319,'Orig'}]}]},
   {clause,2320,
    [{nil,2320},
     {var,2320,'Cs'},
     {var,2320,'Old'},
     {var,2320,'Type'},
     {var,2320,'_Key'},
     {var,2320,'LU'},
     {var,2320,'Ws'},
     {var,2320,'No'},
     {var,2320,'Orig'}],
    [],
    [{match,2321,
      {tuple,2321,[{atom,2321,ok},{var,2321,'New'},{var,2321,'NewNo'}]},
      {call,2321,
       {atom,2321,eval_comms},
       [{var,2321,'Cs'},{var,2321,'Old'},{var,2321,'Type'},{var,2321,'No'}]}},
     {call,2322,
      {atom,2322,eval_end},
      [{var,2322,'New'},
       {var,2322,'LU'},
       {var,2322,'Type'},
       {var,2322,'Ws'},
       {var,2322,'NewNo'},
       {var,2322,'Orig'}]}]}]},
 {function,2324,eval_comms,4,
  [{clause,2324,
    [{nil,2324},
     {var,2324,'L'},
     {match,2324,{var,2324,'_Type'},{atom,2324,set}},
     {var,2324,'No'}],
    [],
    [{tuple,2325,[{atom,2325,ok},{var,2325,'L'},{var,2325,'No'}]}]},
   {clause,2326,
    [{var,2326,'Cs'},{var,2326,'Old'},{var,2326,'Type'},{var,2326,'No'}],
    [],
    [{match,2327,
      {var,2327,'Commands'},
      {call,2327,
       {remote,2327,{atom,2327,dets_utils},{atom,2327,msort}},
       [{var,2327,'Cs'}]}},
     {'case',2328,
      {var,2328,'Type'},
      [{clause,2329,
        [{atom,2329,bag}],
        [],
        [{call,2329,
          {atom,2329,eval_bag},
          [{var,2329,'Commands'},
           {var,2329,'Old'},
           {nil,2329},
           {var,2329,'No'}]}]},
       {clause,2330,
        [{atom,2330,duplicate_bag}],
        [],
        [{call,2330,
          {atom,2330,eval_dupbag},
          [{var,2330,'Commands'},
           {var,2330,'Old'},
           {nil,2330},
           {var,2330,'No'}]}]}]}]}]},
 {function,2333,eval_end,6,
  [{clause,2333,
    [{var,2333,'New0'},
     {var,2333,'LU'},
     {var,2333,'Type'},
     {var,2333,'Ws'},
     {var,2333,'NewNo'},
     {var,2333,'Orig'}],
    [],
    [{match,2334,
      {var,2334,'New'},
      {call,2334,
       {remote,2334,{atom,2334,lists},{atom,2334,keysort}},
       [{integer,2334,2},{var,2334,'New0'}]}},
     {match,2335,
      {var,2335,'NoChange'},
      {'if',2335,
       [{clause,2336,[],
         [[{op,2336,'=/=',
            {call,2336,{atom,2336,length},[{var,2336,'New'}]},
            {call,2336,{atom,2336,length},[{var,2336,'Orig'}]}}]],
         [{atom,2336,false}]},
        {clause,2337,[],
         [[{atom,2337,true}]],
         [{call,2338,
           {atom,2338,same_terms},
           [{var,2338,'Orig'},{var,2338,'New'}]}]}]}},
     {'if',2340,
      [{clause,2341,[],
        [[{var,2341,'NoChange'}]],
        [{tuple,2343,[{atom,2343,ok},{var,2343,'LU'}]}]},
       {clause,2344,[],
        [[{op,2344,'=:=',{var,2344,'New'},{nil,2344}}]],
        [{tuple,2345,
          [{var,2345,'LU'},
           {var,2345,'Ws'},
           {integer,2345,0},
           {var,2345,'NewNo'}]}]},
       {clause,2346,[],
        [[{atom,2346,true}]],
        [{match,2347,
          {tuple,2347,[{var,2347,'Ws1'},{var,2347,'Sz'}]},
          {call,2347,
           {atom,2347,make_bins},
           [{var,2347,'New'},{nil,2347},{integer,2347,0}]}},
         {'if',2348,
          [{clause,2349,[],
            [[{op,2349,'=:=',{var,2349,'Type'},{atom,2349,set}}]],
            [{tuple,2350,
              [{var,2350,'LU'},
               {cons,2350,{var,2350,'Ws'},{var,2350,'Ws1'}},
               {var,2350,'Sz'},
               {var,2350,'NewNo'}]}]},
           {clause,2351,[],
            [[{atom,2351,true}]],
            [{match,2352,
              {var,2352,'NSz'},
              {op,2352,'+',{var,2352,'Sz'},{integer,2352,4}}},
             {tuple,2353,
              [{var,2353,'LU'},
               {cons,2353,
                {var,2353,'Ws'},
                {cons,2353,
                 {bin,2353,
                  [{bin_element,2353,
                    {var,2353,'NSz'},
                    {integer,2353,32},
                    default}]},
                 {var,2353,'Ws1'}}},
               {var,2353,'NSz'},
               {var,2353,'NewNo'}]}]}]}]}]}]}]},
 {function,2357,same_terms,2,
  [{clause,2357,
    [{cons,2357,{var,2357,'E1'},{var,2357,'L1'}},
     {cons,2357,{var,2357,'E2'},{var,2357,'L2'}}],
    [[{op,2357,'=:=',
       {call,2357,{atom,2357,element},[{integer,2357,1},{var,2357,'E1'}]},
       {call,2357,{atom,2357,element},[{integer,2357,1},{var,2357,'E2'}]}}]],
    [{call,2358,{atom,2358,same_terms},[{var,2358,'L1'},{var,2358,'L2'}]}]},
   {clause,2359,[{nil,2359},{nil,2359}],[],[{atom,2360,true}]},
   {clause,2361,[{var,2361,'_L1'},{var,2361,'_L2'}],[],[{atom,2362,false}]}]},
 {function,2364,make_bins,3,
  [{clause,2364,
    [{cons,2364,
      {tuple,2364,[{var,2364,'_Term'},{var,2364,'_Seq'},{var,2364,'B'}]},
      {var,2364,'L'}},
     {var,2364,'W'},
     {var,2364,'Sz'}],
    [[{call,2364,{atom,2364,is_binary},[{var,2364,'B'}]}]],
    [{call,2365,
      {atom,2365,make_bins},
      [{var,2365,'L'},
       {cons,2365,{var,2365,'W'},{var,2365,'B'}},
       {op,2365,'+',
        {var,2365,'Sz'},
        {call,2365,{atom,2365,byte_size},[{var,2365,'B'}]}}]}]},
   {clause,2366,
    [{cons,2366,
      {tuple,2366,[{var,2366,'Term'},{var,2366,'_Seq'},{atom,2366,insert}]},
      {var,2366,'L'}},
     {var,2366,'W'},
     {var,2366,'Sz'}],
    [],
    [{match,2367,
      {var,2367,'B'},
      {call,2367,{atom,2367,term_to_binary},[{var,2367,'Term'}]}},
     {match,2368,
      {var,2368,'BSize'},
      {op,2368,'+',
       {call,2368,{atom,2368,byte_size},[{var,2368,'B'}]},
       {integer,2368,4}}},
     {call,2369,
      {atom,2369,make_bins},
      [{var,2369,'L'},
       {cons,2369,
        {var,2369,'W'},
        {cons,2369,
         {cons,2369,
          {bin,2369,
           [{bin_element,2369,{var,2369,'BSize'},{integer,2369,32},default}]},
          {var,2369,'B'}},
         {nil,2369}}},
       {op,2369,'+',{var,2369,'Sz'},{var,2369,'BSize'}}]}]},
   {clause,2370,
    [{nil,2370},{var,2370,'W'},{var,2370,'Sz'}],
    [],
    [{tuple,2371,[{var,2371,'W'},{var,2371,'Sz'}]}]}]},
 {function,2373,get_objects,1,
  [{clause,2373,
    [{cons,2373,
      {tuple,2373,[{var,2373,'T'},{var,2373,'_S'},{var,2373,'_BT'}]},
      {var,2373,'L'}}],
    [],
    [{cons,2374,
      {var,2374,'T'},
      {call,2374,{atom,2374,get_objects},[{var,2374,'L'}]}}]},
   {clause,2375,[{nil,2375}],[],[{nil,2376}]}]},
 {function,2378,eval_bag,4,
  [{clause,2378,
    [{match,2378,
      {cons,2378,
       {match,2378,
        {tuple,2378,[{var,2378,'Term1'},{var,2378,'_S1'},{var,2378,'Op'}]},
        {var,2378,'N'}},
       {var,2378,'L'}},
      {var,2378,'L0'}},
     {match,2378,
      {cons,2378,
       {match,2378,
        {tuple,2378,[{var,2378,'Term2'},{var,2378,'_'},{var,2378,'_'}]},
        {var,2378,'O'}},
       {var,2378,'Old'}},
      {var,2378,'Old0'}},
     {var,2378,'New'},
     {var,2378,'No'}],
    [],
    [{'case',2379,
      {tuple,2379,
       [{var,2379,'Op'},
        {call,2379,
         {remote,2379,{atom,2379,dets_utils},{atom,2379,cmp}},
         [{var,2379,'Term1'},{var,2379,'Term2'}]}]},
      [{clause,2380,
        [{tuple,2380,
          [{atom,2380,delete_object},{op,2380,'-',{integer,2380,1}}]}],
        [],
        [{call,2381,
          {atom,2381,eval_bag},
          [{var,2381,'L'},
           {var,2381,'Old0'},
           {var,2381,'New'},
           {var,2381,'No'}]}]},
       {clause,2382,
        [{tuple,2382,[{atom,2382,insert},{op,2382,'-',{integer,2382,1}}]}],
        [],
        [{call,2383,
          {atom,2383,bag_object},
          [{var,2383,'L'},
           {var,2383,'Old0'},
           {var,2383,'New'},
           {var,2383,'No'},
           {cons,2383,{var,2383,'N'},{nil,2383}},
           {var,2383,'Term1'}]}]},
       {clause,2384,
        [{tuple,2384,[{atom,2384,delete_object},{integer,2384,0}]}],
        [],
        [{call,2385,
          {atom,2385,bag_object},
          [{var,2385,'L'},
           {var,2385,'Old'},
           {var,2385,'New'},
           {op,2385,'-',{var,2385,'No'},{integer,2385,1}},
           {nil,2385},
           {var,2385,'Term1'}]}]},
       {clause,2386,
        [{tuple,2386,[{atom,2386,insert},{integer,2386,0}]}],
        [],
        [{call,2387,
          {atom,2387,bag_object},
          [{var,2387,'L'},
           {var,2387,'Old'},
           {var,2387,'New'},
           {op,2387,'-',{var,2387,'No'},{integer,2387,1}},
           {cons,2387,{var,2387,'N'},{nil,2387}},
           {var,2387,'Term1'}]}]},
       {clause,2388,
        [{tuple,2388,[{var,2388,'_'},{integer,2388,1}]}],
        [],
        [{call,2389,
          {atom,2389,eval_bag},
          [{var,2389,'L0'},
           {var,2389,'Old'},
           {cons,2389,{var,2389,'O'},{var,2389,'New'}},
           {var,2389,'No'}]}]}]}]},
   {clause,2391,
    [{cons,2391,
      {tuple,2391,
       [{var,2391,'_Term1'},{var,2391,'_Seq1'},{atom,2391,delete_object}]},
      {var,2391,'L'}},
     {match,2391,{nil,2391},{var,2391,'Old'}},
     {var,2391,'New'},
     {var,2391,'No'}],
    [],
    [{call,2392,
      {atom,2392,eval_bag},
      [{var,2392,'L'},{var,2392,'Old'},{var,2392,'New'},{var,2392,'No'}]}]},
   {clause,2393,
    [{cons,2393,
      {match,2393,
       {tuple,2393,[{var,2393,'Term'},{var,2393,'_Seq1'},{atom,2393,insert}]},
       {var,2393,'N'}},
      {var,2393,'L'}},
     {match,2393,{nil,2393},{var,2393,'Old'}},
     {var,2393,'New'},
     {var,2393,'No'}],
    [],
    [{call,2394,
      {atom,2394,bag_object},
      [{var,2394,'L'},
       {var,2394,'Old'},
       {var,2394,'New'},
       {var,2394,'No'},
       {cons,2394,{var,2394,'N'},{nil,2394}},
       {var,2394,'Term'}]}]},
   {clause,2395,
    [{match,2395,{nil,2395},{var,2395,'L'}},
     {cons,2395,{var,2395,'O'},{var,2395,'Old'}},
     {var,2395,'New'},
     {var,2395,'No'}],
    [],
    [{call,2396,
      {atom,2396,eval_bag},
      [{var,2396,'L'},
       {var,2396,'Old'},
       {cons,2396,{var,2396,'O'},{var,2396,'New'}},
       {var,2396,'No'}]}]},
   {clause,2397,
    [{nil,2397},{nil,2397},{var,2397,'New'},{var,2397,'No'}],
    [],
    [{tuple,2398,[{atom,2398,ok},{var,2398,'New'},{var,2398,'No'}]}]}]},
 {function,2400,bag_object,6,
  [{clause,2400,
    [{cons,2400,
      {match,2400,
       {tuple,2400,[{var,2400,'Term'},{var,2400,'_'},{atom,2400,insert}]},
       {var,2400,'N'}},
      {var,2400,'L'}},
     {var,2400,'Old'},
     {var,2400,'New'},
     {var,2400,'No'},
     {var,2400,'_N'},
     {var,2400,'Term'}],
    [],
    [{call,2401,
      {atom,2401,bag_object},
      [{var,2401,'L'},
       {var,2401,'Old'},
       {var,2401,'New'},
       {var,2401,'No'},
       {cons,2401,{var,2401,'N'},{nil,2401}},
       {var,2401,'Term'}]}]},
   {clause,2402,
    [{cons,2402,
      {tuple,2402,
       [{var,2402,'Term'},{var,2402,'_'},{atom,2402,delete_object}]},
      {var,2402,'L'}},
     {var,2402,'Old'},
     {var,2402,'New'},
     {var,2402,'No'},
     {var,2402,'_N'},
     {var,2402,'Term'}],
    [],
    [{call,2403,
      {atom,2403,bag_object},
      [{var,2403,'L'},
       {var,2403,'Old'},
       {var,2403,'New'},
       {var,2403,'No'},
       {nil,2403},
       {var,2403,'Term'}]}]},
   {clause,2404,
    [{var,2404,'L'},
     {var,2404,'Old'},
     {var,2404,'New'},
     {var,2404,'No'},
     {nil,2404},
     {var,2404,'_Term'}],
    [],
    [{call,2405,
      {atom,2405,eval_bag},
      [{var,2405,'L'},{var,2405,'Old'},{var,2405,'New'},{var,2405,'No'}]}]},
   {clause,2406,
    [{var,2406,'L'},
     {var,2406,'Old'},
     {var,2406,'New'},
     {var,2406,'No'},
     {cons,2406,{var,2406,'N'},{nil,2406}},
     {var,2406,'_Term'}],
    [],
    [{call,2407,
      {atom,2407,eval_bag},
      [{var,2407,'L'},
       {var,2407,'Old'},
       {cons,2407,{var,2407,'N'},{var,2407,'New'}},
       {op,2407,'+',{var,2407,'No'},{integer,2407,1}}]}]}]},
 {function,2409,eval_dupbag,4,
  [{clause,2409,
    [{match,2409,
      {cons,2409,
       {match,2409,
        {tuple,2409,[{var,2409,'Term1'},{var,2409,'_S1'},{var,2409,'Op'}]},
        {var,2409,'N'}},
       {var,2409,'L'}},
      {var,2409,'L0'}},
     {match,2409,
      {cons,2409,
       {match,2409,
        {tuple,2409,[{var,2409,'Term2'},{var,2409,'_'},{var,2409,'_'}]},
        {var,2409,'O'}},
       {var,2409,'Old'}},
      {var,2409,'Old0'}},
     {var,2409,'New'},
     {var,2409,'No'}],
    [],
    [{'case',2410,
      {tuple,2410,
       [{var,2410,'Op'},
        {call,2410,
         {remote,2410,{atom,2410,dets_utils},{atom,2410,cmp}},
         [{var,2410,'Term1'},{var,2410,'Term2'}]}]},
      [{clause,2411,
        [{tuple,2411,
          [{atom,2411,delete_object},{op,2411,'-',{integer,2411,1}}]}],
        [],
        [{call,2412,
          {atom,2412,eval_dupbag},
          [{var,2412,'L'},
           {var,2412,'Old0'},
           {var,2412,'New'},
           {var,2412,'No'}]}]},
       {clause,2413,
        [{tuple,2413,[{atom,2413,insert},{op,2413,'-',{integer,2413,1}}]}],
        [],
        [{call,2414,
          {atom,2414,dup_object},
          [{var,2414,'L'},
           {var,2414,'Old0'},
           {var,2414,'New'},
           {op,2414,'+',{var,2414,'No'},{integer,2414,1}},
           {var,2414,'Term1'},
           {cons,2414,{var,2414,'N'},{nil,2414}}]}]},
       {clause,2415,
        [{tuple,2415,[{var,2415,'_'},{integer,2415,0}]}],
        [],
        [{call,2416,
          {atom,2416,old_dup_object},
          [{var,2416,'L0'},
           {var,2416,'Old'},
           {var,2416,'New'},
           {var,2416,'No'},
           {var,2416,'Term1'},
           {cons,2416,{var,2416,'O'},{nil,2416}}]}]},
       {clause,2417,
        [{tuple,2417,[{var,2417,'_'},{integer,2417,1}]}],
        [],
        [{call,2418,
          {atom,2418,eval_dupbag},
          [{var,2418,'L0'},
           {var,2418,'Old'},
           {cons,2418,{var,2418,'O'},{var,2418,'New'}},
           {var,2418,'No'}]}]}]}]},
   {clause,2420,
    [{cons,2420,
      {tuple,2420,
       [{var,2420,'_Term1'},{var,2420,'_Seq1'},{atom,2420,delete_object}]},
      {var,2420,'L'}},
     {match,2420,{nil,2420},{var,2420,'Old'}},
     {var,2420,'New'},
     {var,2420,'No'}],
    [],
    [{call,2421,
      {atom,2421,eval_dupbag},
      [{var,2421,'L'},{var,2421,'Old'},{var,2421,'New'},{var,2421,'No'}]}]},
   {clause,2422,
    [{cons,2422,
      {match,2422,
       {tuple,2422,[{var,2422,'Term'},{var,2422,'_Seq1'},{atom,2422,insert}]},
       {var,2422,'N'}},
      {var,2422,'L'}},
     {match,2422,{nil,2422},{var,2422,'Old'}},
     {var,2422,'New'},
     {var,2422,'No'}],
    [],
    [{call,2423,
      {atom,2423,dup_object},
      [{var,2423,'L'},
       {var,2423,'Old'},
       {var,2423,'New'},
       {op,2423,'+',{var,2423,'No'},{integer,2423,1}},
       {var,2423,'Term'},
       {cons,2423,{var,2423,'N'},{nil,2423}}]}]},
   {clause,2424,
    [{match,2424,{nil,2424},{var,2424,'L'}},
     {cons,2424,{var,2424,'O'},{var,2424,'Old'}},
     {var,2424,'New'},
     {var,2424,'No'}],
    [],
    [{call,2425,
      {atom,2425,eval_dupbag},
      [{var,2425,'L'},
       {var,2425,'Old'},
       {cons,2425,{var,2425,'O'},{var,2425,'New'}},
       {var,2425,'No'}]}]},
   {clause,2426,
    [{nil,2426},{nil,2426},{var,2426,'New'},{var,2426,'No'}],
    [],
    [{tuple,2427,[{atom,2427,ok},{var,2427,'New'},{var,2427,'No'}]}]}]},
 {function,2429,old_dup_object,6,
  [{clause,2429,
    [{var,2429,'L'},
     {cons,2429,
      {match,2429,
       {tuple,2429,[{var,2429,'Term'},{var,2429,'_'},{var,2429,'_'}]},
       {var,2429,'Obj'}},
      {var,2429,'Old'}},
     {var,2429,'New'},
     {var,2429,'No'},
     {var,2429,'Term'},
     {var,2429,'N'}],
    [],
    [{call,2430,
      {atom,2430,old_dup_object},
      [{var,2430,'L'},
       {var,2430,'Old'},
       {var,2430,'New'},
       {var,2430,'No'},
       {var,2430,'Term'},
       {cons,2430,{var,2430,'Obj'},{var,2430,'N'}}]}]},
   {clause,2431,
    [{var,2431,'L'},
     {var,2431,'Old'},
     {var,2431,'New'},
     {var,2431,'No'},
     {var,2431,'Term'},
     {var,2431,'N'}],
    [],
    [{call,2432,
      {atom,2432,dup_object},
      [{var,2432,'L'},
       {var,2432,'Old'},
       {var,2432,'New'},
       {var,2432,'No'},
       {var,2432,'Term'},
       {var,2432,'N'}]}]}]},
 {function,2434,dup_object,6,
  [{clause,2434,
    [{cons,2434,
      {match,2434,
       {tuple,2434,[{var,2434,'Term'},{var,2434,'_'},{atom,2434,insert}]},
       {var,2434,'Obj'}},
      {var,2434,'L'}},
     {var,2434,'Old'},
     {var,2434,'New'},
     {var,2434,'No'},
     {var,2434,'Term'},
     {var,2434,'Q'}],
    [],
    [{call,2435,
      {atom,2435,dup_object},
      [{var,2435,'L'},
       {var,2435,'Old'},
       {var,2435,'New'},
       {op,2435,'+',{var,2435,'No'},{integer,2435,1}},
       {var,2435,'Term'},
       {cons,2435,{var,2435,'Obj'},{var,2435,'Q'}}]}]},
   {clause,2436,
    [{cons,2436,
      {tuple,2436,
       [{var,2436,'Term'},{var,2436,'_Seq'},{atom,2436,delete_object}]},
      {var,2436,'L'}},
     {var,2436,'Old'},
     {var,2436,'New'},
     {var,2436,'No'},
     {var,2436,'Term'},
     {var,2436,'Q'}],
    [],
    [{match,2438,
      {var,2438,'NewNo'},
      {op,2438,'-',
       {var,2438,'No'},
       {call,2438,{atom,2438,length},[{var,2438,'Q'}]}}},
     {call,2439,
      {atom,2439,dup_object},
      [{var,2439,'L'},
       {var,2439,'Old'},
       {var,2439,'New'},
       {var,2439,'NewNo'},
       {var,2439,'Term'},
       {nil,2439}]}]},
   {clause,2440,
    [{var,2440,'L'},
     {var,2440,'Old'},
     {var,2440,'New'},
     {var,2440,'No'},
     {var,2440,'_Term'},
     {var,2440,'Q'}],
    [],
    [{call,2441,
      {atom,2441,eval_dupbag},
      [{var,2441,'L'},
       {var,2441,'Old'},
       {op,2441,'++',{var,2441,'Q'},{var,2441,'New'}},
       {var,2441,'No'}]}]}]},
 {function,2445,update_no_keys,4,
  [{clause,2445,
    [{var,2445,'Head'},{var,2445,'Ws'},{integer,2445,0},{integer,2445,0}],
    [],
    [{tuple,2445,[{var,2445,'Head'},{var,2445,'Ws'}]}]},
   {clause,2446,
    [{var,2446,'Head'},
     {var,2446,'Ws'},
     {var,2446,'DeltaObjects'},
     {var,2446,'DeltaKeys'}],
    [],
    [{match,2447,
      {var,2447,'NoKeys'},
      {call,2447,
       {remote,2447,{atom,2447,erlang},{atom,2447,element}},
       [{integer,2447,7},{var,2447,'Head'}]}},
     {match,2448,
      {var,2448,'NewNoKeys'},
      {op,2448,'+',{var,2448,'NoKeys'},{var,2448,'DeltaKeys'}}},
     {match,2449,
      {var,2449,'NewNoObject'},
      {op,2449,'+',
       {call,2449,
        {remote,2449,{atom,2449,erlang},{atom,2449,element}},
        [{integer,2449,6},{var,2449,'Head'}]},
       {var,2449,'DeltaObjects'}}},
     {match,2450,
      {var,2450,'NewHead'},
      {call,2450,
       {remote,2450,{atom,2450,erlang},{atom,2450,setelement}},
       [{integer,2450,7},
        {call,2450,
         {remote,2450,{atom,2450,erlang},{atom,2450,setelement}},
         [{integer,2450,6},{var,2450,'Head'},{var,2450,'NewNoObject'}]},
        {var,2450,'NewNoKeys'}]}},
     {match,2451,
      {var,2451,'NWs'},
      {'if',2452,
       [{clause,2453,[],
         [[{op,2453,'>',
            {var,2453,'NewNoKeys'},
            {call,2453,
             {remote,2453,{atom,2453,erlang},{atom,2453,element}},
             [{integer,2453,21},{var,2453,'NewHead'}]}}]],
         [{var,2454,'Ws'}]},
        {clause,2455,[],
         [[{op,2455,'=:=',
            {op,2455,'div',{var,2455,'NoKeys'},{integer,203,256}},
            {op,2455,'div',{var,2455,'NewNoKeys'},{integer,203,256}}}]],
         [{var,2456,'Ws'}]},
        {clause,2457,[],
         [[{atom,2457,true}]],
         [{cons,2458,
           {tuple,2458,
            [{integer,2458,0},
             {call,2458,
              {atom,2458,file_header},
              [{var,2458,'NewHead'},{integer,2458,0},{integer,241,0}]}]},
           {var,2458,'Ws'}}]}]}},
     {tuple,2460,[{var,2460,'NewHead'},{var,2460,'NWs'}]}]}]},
 {function,2462,slot_position,1,
  [{clause,2462,
    [{var,2462,'S'}],
    [],
    [{match,2463,
      {var,2463,'SegNo'},
      {op,214,'bsr',{var,2463,'S'},{integer,204,8}}},
     {match,2464,
      {var,2464,'PartPos'},
      {op,209,'+',
       {op,200,'+',
        {op,199,'+',
         {op,199,'+',
          {op,198,'+',
           {integer,198,56},
           {op,194,'*',{integer,194,28},{integer,194,4}}},
          {integer,195,16}},
         {integer,196,4}},
        {integer,192,124}},
       {op,209,'*',
        {integer,209,4},
        {op,215,'bsr',{var,2464,'SegNo'},{integer,207,9}}}}},
     {match,2465,
      {var,2465,'Part'},
      {call,2465,{atom,2465,get_arrpart},[{var,2465,'PartPos'}]}},
     {match,2466,
      {var,2466,'Pos'},
      {op,210,'+',
       {var,2466,'Part'},
       {op,210,'*',
        {integer,210,4},
        {op,45,'band',
         {var,2466,'SegNo'},
         {op,45,'-',{integer,206,512},{integer,45,1}}}}}},
     {op,2467,'+',
      {call,2467,{atom,2467,get_segp},[{var,2467,'Pos'}]},
      {op,2467,'*',
       {op,205,'*',{integer,205,4},{integer,245,2}},
       {op,45,'band',
        {var,2467,'S'},
        {op,45,'-',{integer,203,256},{integer,45,1}}}}}]}]},
 {function,2469,check_pread2_arg,2,
  [{clause,2469,
    [{cons,2469,{tuple,2469,[{var,2469,'_Pos'},{var,2469,'Sz'}]},{nil,2469}},
     {var,2469,'Head'}],
    [[{op,2469,'>',
       {var,2469,'Sz'},
       {op,1810,'*',{integer,1810,10},{integer,38,8192}}}]],
    [{'case',2470,
      {call,2470,
       {atom,2470,check_pread_arg},
       [{var,2470,'Sz'},{var,2470,'Head'}]},
      [{clause,2471,[{atom,2471,true}],[],[{atom,2472,ok}]},
       {clause,2473,
        [{atom,2473,false}],
        [],
        [{match,2474,
          {var,2474,'Bad'},
          {call,2474,
           {remote,2474,{atom,2474,dets_utils},{atom,2474,bad_object}},
           [{atom,2474,check_pread2_arg},{var,2474,'Sz'}]}},
         {call,2475,
          {atom,2475,throw},
          [{call,2475,
            {remote,2475,{atom,2475,dets_utils},{atom,2475,corrupt_reason}},
            [{var,2475,'Head'},{var,2475,'Bad'}]}]}]}]}]},
   {clause,2477,
    [{var,2477,'_ToRead'},{var,2477,'_Head'}],
    [],
    [{atom,2478,ok}]}]},
 {function,2480,check_pread_arg,2,
  [{clause,2480,
    [{var,2480,'Sz'},{var,2480,'Head'}],
    [[{op,2480,'>',
       {var,2480,'Sz'},
       {op,1810,'*',{integer,1810,10},{integer,38,8192}}}]],
    [{op,2481,'>=',
      {call,2481,{atom,2481,maxobjsize},[{var,2481,'Head'}]},
      {var,2481,'Sz'}}]},
   {clause,2482,[{var,2482,'_Sz'},{var,2482,'_Head'}],[],[{atom,2483,true}]}]},
 {function,2486,segp_cache,2,
  [{clause,2486,
    [{var,2486,'Pos'},{var,2486,'Segment'}],
    [],
    [{call,2487,{atom,2487,put},[{var,2487,'Pos'},{var,2487,'Segment'}]}]}]},
 {function,2490,get_segp,1,
  [{clause,2490,
    [{var,2490,'Pos'}],
    [],
    [{call,2491,{atom,2491,get},[{var,2491,'Pos'}]}]}]},
 {function,2493,arrpart_cache,2,
  [{clause,2493,
    [{var,2493,'Pos'},{var,2493,'ArrPart'}],
    [],
    [{call,2494,{atom,2494,put},[{var,2494,'Pos'},{var,2494,'ArrPart'}]}]}]},
 {function,2497,get_arrpart,1,
  [{clause,2497,
    [{var,2497,'Pos'}],
    [],
    [{call,2498,{atom,2498,get},[{var,2498,'Pos'}]}]}]},
 {function,2500,sz2pos,1,
  [{clause,2500,
    [{var,2500,'N'}],
    [],
    [{op,2501,'+',
      {integer,2501,1},
      {call,2501,
       {remote,2501,{atom,2501,dets_utils},{atom,2501,log2}},
       [{var,2501,'N'}]}}]}]},
 {function,2504,adjsz,1,
  [{clause,2504,
    [{var,2504,'N'}],
    [],
    [{op,2505,'-',{var,2505,'N'},{integer,2505,1}}]}]},
 {function,2508,maxobjsize,1,
  [{clause,2508,
    [{var,2508,'Head'}],
    [[{op,2508,'=:=',
       {call,2508,
        {remote,2508,{atom,2508,erlang},{atom,2508,element}},
        [{integer,2508,8},{var,2508,'Head'}]},
       {atom,2508,undefined}}]],
    [{op,42,'bsl',{integer,42,1},{integer,2509,32}}]},
   {clause,2510,
    [{var,2510,'Head'}],
    [],
    [{op,42,'bsl',
      {integer,42,1},
      {call,2511,
       {remote,2511,{atom,2511,erlang},{atom,2511,element}},
       [{integer,2511,8},{var,2511,'Head'}]}}]}]},
 {function,2513,scan_objs,8,
  [{clause,2513,
    [{var,2513,'Head'},
     {var,2513,'Bin'},
     {var,2513,'From'},
     {var,2513,'To'},
     {var,2513,'L'},
     {var,2513,'Ts'},
     {var,2513,'R'},
     {var,2513,'Type'}],
    [],
    [{'case',2514,
      {'catch',2514,
       {call,2514,
        {atom,2514,scan_skip},
        [{var,2514,'Bin'},
         {var,2514,'From'},
         {var,2514,'To'},
         {var,2514,'L'},
         {var,2514,'Ts'},
         {var,2514,'R'},
         {var,2514,'Type'},
         {integer,2514,0}]}},
      [{clause,2515,
        [{tuple,2515,[{atom,2515,'EXIT'},{var,2515,'_Reason'}]}],
        [],
        [{atom,2516,bad_object}]},
       {clause,2517,
        [{match,2517,
          {var,2517,'Reply'},
          {tuple,2517,
           [{atom,2517,more},
            {var,2517,'_From1'},
            {var,2517,'_To'},
            {var,2517,'_L'},
            {var,2517,'_Ts'},
            {var,2517,'_R'},
            {var,2517,'Size'}]}}],
        [[{op,2517,'>',
           {var,2517,'Size'},
           {op,1810,'*',{integer,1810,10},{integer,38,8192}}}]],
        [{'case',2518,
          {call,2518,
           {atom,2518,check_pread_arg},
           [{var,2518,'Size'},{var,2518,'Head'}]},
          [{clause,2519,[{atom,2519,true}],[],[{var,2519,'Reply'}]},
           {clause,2520,[{atom,2520,false}],[],[{atom,2520,bad_object}]}]}]},
       {clause,2522,[{var,2522,'Reply'}],[],[{var,2523,'Reply'}]}]}]}]},
 {function,2526,scan_skip,8,
  [{clause,2526,
    [{var,2526,'Bin'},
     {var,2526,'From'},
     {var,2526,'To'},
     {var,2526,'L'},
     {var,2526,'Ts'},
     {var,2526,'R'},
     {var,2526,'Type'},
     {var,2526,'Skip'}],
    [],
    [{match,2527,
      {var,2527,'From1'},
      {op,2527,'+',{var,2527,'From'},{var,2527,'Skip'}}},
     {'case',2528,
      {var,2528,'Bin'},
      [{clause,2529,
        [{var,2529,'_'}],
        [[{op,2529,'>=',{var,2529,'From1'},{var,2529,'To'}}]],
        [{'if',2530,
          [{clause,2531,[],
            [[{op,2531,'>',{var,2531,'From1'},{var,2531,'To'}}],
             [{op,2531,'=:=',{var,2531,'L'},{bin,2531,[]}}]],
            [{tuple,2532,
              [{atom,2532,more},
               {var,2532,'From1'},
               {var,2532,'To'},
               {var,2532,'L'},
               {var,2532,'Ts'},
               {var,2532,'R'},
               {integer,2532,0}]}]},
           {clause,2533,[],
            [[{atom,2533,true}]],
            [{match,2534,
              {bin,2534,
               [{bin_element,2534,
                 {var,2534,'From2'},
                 {integer,2534,32},
                 default},
                {bin_element,2534,{var,2534,'To1'},{integer,2534,32},default},
                {bin_element,2534,{var,2534,'L1'},default,[binary]}]},
              {var,2534,'L'}},
             {match,2535,
              {var,2535,'Skip1'},
              {op,2535,'-',{var,2535,'From2'},{var,2535,'From'}}},
             {call,2536,
              {atom,2536,scan_skip},
              [{var,2536,'Bin'},
               {var,2536,'From'},
               {var,2536,'To1'},
               {var,2536,'L1'},
               {var,2536,'Ts'},
               {var,2536,'R'},
               {var,2536,'Type'},
               {var,2536,'Skip1'}]}]}]}]},
       {clause,2538,
        [{bin,2538,
          [{bin_element,2538,{var,2538,'_'},{var,2538,'Skip'},[binary]},
           {bin_element,2538,{var,2538,'_Size'},{integer,2538,32},default},
           {bin_element,2538,{var,2538,'St'},{integer,2538,32},default},
           {bin_element,2538,{var,2538,'_Sz'},{integer,2538,32},default},
           {bin_element,2538,{var,2538,'KO'},default,[binary]}]}],
        [[{op,2539,'=/=',{var,2539,'St'},{integer,34,305419896}},
          {op,2539,'=/=',{var,2539,'St'},{integer,33,61591023}}]],
        [{call,2543,
          {atom,2543,scan_skip},
          [{var,2543,'KO'},
           {op,2543,'+',{var,2543,'From1'},{integer,2543,12}},
           {var,2543,'To'},
           {var,2543,'L'},
           {var,2543,'Ts'},
           {var,2543,'R'},
           {var,2543,'Type'},
           {op,2543,'-',
            {op,278,'*',{integer,202,512},{integer,278,4}},
            {integer,2543,12}}]}]},
       {clause,2544,
        [{bin,2544,
          [{bin_element,2544,{var,2544,'_'},{var,2544,'Skip'},[binary]},
           {bin_element,2544,{var,2544,'Size'},{integer,2544,32},default},
           {bin_element,2544,{var,2544,'_St'},{integer,2544,32},default},
           {bin_element,2544,{var,2544,'Sz'},{integer,2544,32},default},
           {bin_element,2544,{var,2544,'KO'},default,[binary]}]}],
        [[{op,2545,'=<',
           {op,2545,'-',{var,2545,'Size'},{integer,2545,12}},
           {call,2545,{atom,2545,byte_size},[{var,2545,'KO'}]}}]],
        [{call,2548,
          {atom,2548,bin2bins},
          [{var,2548,'KO'},
           {op,2548,'+',{var,2548,'From1'},{integer,2548,12}},
           {var,2548,'To'},
           {var,2548,'L'},
           {var,2548,'Ts'},
           {var,2548,'R'},
           {var,2548,'Type'},
           {var,2548,'Size'},
           {var,2548,'Sz'}]}]},
       {clause,2549,
        [{bin,2549,
          [{bin_element,2549,{var,2549,'_'},{var,2549,'Skip'},[binary]},
           {bin_element,2549,{var,2549,'Size'},{integer,2549,32},default},
           {bin_element,2549,{var,2549,'_St'},{integer,2549,32},default},
           {bin_element,2549,{var,2549,'_Sz'},{integer,2549,32},default},
           {bin_element,2549,{var,2549,'_KO'},default,[binary]}]}],
        [],
        [{tuple,2550,
          [{atom,2550,more},
           {var,2550,'From1'},
           {var,2550,'To'},
           {var,2550,'L'},
           {var,2550,'Ts'},
           {var,2550,'R'},
           {var,2550,'Size'}]}]},
       {clause,2551,
        [{var,2551,'_'}],
        [[{op,2551,'>=',{var,2551,'Skip'},{integer,2551,0}}]],
        [{tuple,2552,
          [{atom,2552,more},
           {var,2552,'From1'},
           {var,2552,'To'},
           {var,2552,'L'},
           {var,2552,'Ts'},
           {var,2552,'R'},
           {integer,2552,0}]}]}]}]}]},
 {function,2557,bin2bins,9,
  [{clause,2557,
    [{var,2557,'Bin'},
     {var,2557,'From'},
     {var,2557,'To'},
     {var,2557,'L'},
     {var,2557,'Ts'},
     {var,2557,'R'},
     {match,2557,{var,2557,'Type'},{atom,2557,set}},
     {var,2557,'Size'},
     {var,2557,'ObjSz0'}],
    [],
    [{match,2558,
      {var,2558,'ObjsSz1'},
      {op,2558,'-',{var,2558,'Size'},{var,2558,'ObjSz0'}}},
     {'if',2559,
      [{clause,2560,[],
        [[{op,2560,'=:=',{var,2560,'ObjsSz1'},{integer,247,8}}]],
        [{call,2561,
          {atom,2561,slot_end},
          [{var,2561,'Bin'},
           {var,2561,'From'},
           {var,2561,'To'},
           {var,2561,'L'},
           {cons,2561,{var,2561,'Bin'},{var,2561,'Ts'}},
           {var,2561,'R'},
           {var,2561,'Type'},
           {var,2561,'Size'},
           {integer,2561,1}]}]},
       {clause,2562,[],
        [[{atom,2562,true}]],
        [{match,2563,
          {var,2563,'ObjSz'},
          {op,2563,'-',{var,2563,'ObjSz0'},{integer,2563,4}}},
         {match,2564,
          {bin,2564,
           [{bin_element,2564,{var,2564,'_'},{var,2564,'ObjSz'},[binary]},
            {bin_element,2564,{var,2564,'NObjSz'},{integer,2564,32},default},
            {bin_element,2564,{var,2564,'T'},default,[binary]}]},
          {var,2564,'Bin'}},
         {call,2565,
          {atom,2565,bins_set},
          [{var,2565,'T'},
           {var,2565,'From'},
           {var,2565,'To'},
           {var,2565,'L'},
           {cons,2565,{var,2565,'Bin'},{var,2565,'Ts'}},
           {var,2565,'R'},
           {var,2565,'Type'},
           {var,2565,'Size'},
           {integer,2565,2},
           {var,2566,'NObjSz'},
           {op,2566,'-',{var,2566,'ObjsSz1'},{var,2566,'NObjSz'}},
           {var,2566,'Bin'}]}]}]}]},
   {clause,2568,
    [{match,2568,
      {bin,2568,
       [{bin_element,2568,{var,2568,'ObjSz'},{integer,2568,32},default},
        {bin_element,2568,{var,2568,'Bin'},default,[binary]}]},
      {var,2568,'KO'}},
     {var,2568,'From'},
     {var,2568,'To'},
     {var,2568,'L'},
     {var,2568,'Ts'},
     {var,2568,'R'},
     {var,2568,'Type'},
     {var,2568,'Size'},
     {var,2568,'Sz'}],
    [],
    [{call,2569,
      {atom,2569,bins_bag},
      [{var,2569,'Bin'},
       {var,2569,'From'},
       {var,2569,'To'},
       {var,2569,'L'},
       {var,2569,'Ts'},
       {var,2569,'R'},
       {var,2569,'Type'},
       {var,2569,'Size'},
       {integer,2569,1},
       {op,2570,'-',
        {op,2570,'-',{var,2570,'Sz'},{var,2570,'ObjSz'}},
        {integer,2570,4}},
       {op,2570,'-',{var,2570,'ObjSz'},{integer,2570,4}},
       {op,2570,'-',{var,2570,'Size'},{var,2570,'Sz'}},
       {var,2570,'KO'}]}]}]},
 {function,2572,bins_set,12,
  [{clause,2572,
    [{var,2572,'Bin'},
     {var,2572,'From'},
     {var,2572,'To'},
     {var,2572,'L'},
     {var,2572,'Ts'},
     {var,2572,'R'},
     {var,2572,'Type'},
     {var,2572,'Size'},
     {var,2572,'NoObjs'},
     {var,2572,'_ObjSz0'},
     {integer,247,8},
     {var,2572,'KO'}],
    [],
    [{call,2573,
      {atom,2573,slot_end},
      [{var,2573,'KO'},
       {var,2573,'From'},
       {var,2573,'To'},
       {var,2573,'L'},
       {cons,2573,{var,2573,'Bin'},{var,2573,'Ts'}},
       {var,2573,'R'},
       {var,2573,'Type'},
       {var,2573,'Size'},
       {var,2573,'NoObjs'}]}]},
   {clause,2574,
    [{var,2574,'Bin'},
     {var,2574,'From'},
     {var,2574,'To'},
     {var,2574,'L'},
     {var,2574,'Ts'},
     {var,2574,'R'},
     {var,2574,'Type'},
     {var,2574,'Size'},
     {var,2574,'NoObjs'},
     {var,2574,'ObjSz0'},
     {var,2574,'ObjsSz'},
     {var,2574,'KO'}],
    [],
    [{match,2575,
      {var,2575,'ObjSz'},
      {op,2575,'-',{var,2575,'ObjSz0'},{integer,2575,4}}},
     {match,2576,
      {bin,2576,
       [{bin_element,2576,{var,2576,'_'},{var,2576,'ObjSz'},[binary]},
        {bin_element,2576,{var,2576,'NObjSz'},{integer,2576,32},default},
        {bin_element,2576,{var,2576,'T'},default,[binary]}]},
      {var,2576,'Bin'}},
     {call,2577,
      {atom,2577,bins_set},
      [{var,2577,'T'},
       {var,2577,'From'},
       {var,2577,'To'},
       {var,2577,'L'},
       {cons,2577,{var,2577,'Bin'},{var,2577,'Ts'}},
       {var,2577,'R'},
       {var,2577,'Type'},
       {var,2577,'Size'},
       {op,2577,'+',{var,2577,'NoObjs'},{integer,2577,1}},
       {var,2578,'NObjSz'},
       {op,2578,'-',{var,2578,'ObjsSz'},{var,2578,'NObjSz'}},
       {var,2578,'KO'}]}]}]},
 {function,2580,bins_bag,13,
  [{clause,2580,
    [{var,2580,'Bin'},
     {var,2580,'From'},
     {var,2580,'To'},
     {var,2580,'L'},
     {var,2580,'Ts'},
     {var,2580,'R'},
     {var,2580,'Type'},
     {var,2580,'Size'},
     {var,2580,'NoObjs'},
     {var,2580,'Sz'},
     {var,2580,'ObjSz'},
     {var,2580,'ObjsSz'},
     {var,2580,'KO'}],
    [[{op,2581,'>',{var,2581,'Sz'},{integer,2581,0}}]],
    [{match,2582,
      {bin,2582,
       [{bin_element,2582,{var,2582,'_'},{var,2582,'ObjSz'},[binary]},
        {bin_element,2582,{var,2582,'NObjSz'},{integer,2582,32},default},
        {bin_element,2582,{var,2582,'T'},default,[binary]}]},
      {var,2582,'Bin'}},
     {call,2583,
      {atom,2583,bins_bag},
      [{var,2583,'T'},
       {var,2583,'From'},
       {var,2583,'To'},
       {var,2583,'L'},
       {cons,2583,{var,2583,'Bin'},{var,2583,'Ts'}},
       {var,2583,'R'},
       {var,2583,'Type'},
       {var,2583,'Size'},
       {op,2583,'+',{var,2583,'NoObjs'},{integer,2583,1}},
       {op,2584,'-',{var,2584,'Sz'},{var,2584,'NObjSz'}},
       {op,2584,'-',{var,2584,'NObjSz'},{integer,2584,4}},
       {var,2584,'ObjsSz'},
       {var,2584,'KO'}]}]},
   {clause,2585,
    [{var,2585,'Bin'},
     {var,2585,'From'},
     {var,2585,'To'},
     {var,2585,'L'},
     {var,2585,'Ts'},
     {var,2585,'R'},
     {var,2585,'Type'},
     {var,2585,'Size'},
     {var,2585,'NoObjs'},
     {var,2585,'_Z'},
     {var,2585,'_ObjSz'},
     {integer,247,8},
     {var,2585,'KO'}],
    [],
    [{call,2586,
      {atom,2586,slot_end},
      [{var,2586,'KO'},
       {var,2586,'From'},
       {var,2586,'To'},
       {var,2586,'L'},
       {cons,2586,{var,2586,'Bin'},{var,2586,'Ts'}},
       {var,2586,'R'},
       {var,2586,'Type'},
       {var,2586,'Size'},
       {var,2586,'NoObjs'}]}]},
   {clause,2587,
    [{var,2587,'Bin'},
     {var,2587,'From'},
     {var,2587,'To'},
     {var,2587,'L'},
     {var,2587,'Ts'},
     {var,2587,'R'},
     {var,2587,'Type'},
     {var,2587,'Size'},
     {var,2587,'NoObjs'},
     {var,2587,'_Z'},
     {var,2587,'ObjSz'},
     {var,2587,'ObjsSz'},
     {var,2587,'KO'}],
    [],
    [{match,2588,
      {bin,2588,
       [{bin_element,2588,{var,2588,'_'},{var,2588,'ObjSz'},[binary]},
        {bin_element,2588,{var,2588,'Sz'},{integer,2588,32},default},
        {bin_element,2588,{var,2588,'NObjSz'},{integer,2588,32},default},
        {bin_element,2588,{var,2588,'T'},default,[binary]}]},
      {var,2588,'Bin'}},
     {call,2589,
      {atom,2589,bins_bag},
      [{var,2589,'T'},
       {var,2589,'From'},
       {var,2589,'To'},
       {var,2589,'L'},
       {cons,2589,{var,2589,'Bin'},{var,2589,'Ts'}},
       {var,2589,'R'},
       {var,2589,'Type'},
       {var,2589,'Size'},
       {op,2589,'+',{var,2589,'NoObjs'},{integer,2589,1}},
       {op,2590,'-',
        {op,2590,'-',{var,2590,'Sz'},{var,2590,'NObjSz'}},
        {integer,2590,4}},
       {op,2590,'-',{var,2590,'NObjSz'},{integer,2590,4}},
       {op,2590,'-',{var,2590,'ObjsSz'},{var,2590,'Sz'}},
       {var,2590,'KO'}]}]}]},
 {function,2592,slot_end,9,
  [{clause,2592,
    [{var,2592,'KO'},
     {var,2592,'From'},
     {var,2592,'To'},
     {var,2592,'L'},
     {var,2592,'Ts'},
     {var,2592,'R'},
     {var,2592,'Type'},
     {var,2592,'Size'},
     {var,2592,'NoObjs'}],
    [],
    [{match,2593,
      {var,2593,'Skip'},
      {op,2593,'-',
       {op,42,'bsl',
        {integer,42,1},
        {call,2593,
         {remote,2593,{atom,2593,dets_utils},{atom,2593,log2}},
         [{var,2593,'Size'}]}},
       {integer,2593,12}}},
     {'if',2594,
      [{clause,2595,[],
        [[{op,2595,'>=',{var,2595,'R'},{integer,2595,0}}]],
        [{call,2596,
          {atom,2596,scan_skip},
          [{var,2596,'KO'},
           {var,2596,'From'},
           {var,2596,'To'},
           {var,2596,'L'},
           {var,2596,'Ts'},
           {op,2596,'+',{var,2596,'R'},{var,2596,'Size'}},
           {var,2596,'Type'},
           {var,2596,'Skip'}]}]},
       {clause,2597,[],
        [[{atom,2597,true}]],
        [{'case',2599,
          {op,2599,'+',{var,2599,'R'},{var,2599,'NoObjs'}},
          [{clause,2600,
            [{var,2600,'R1'}],
            [[{op,2600,'>=',{var,2600,'R1'},{op,2600,'-',{integer,2600,1}}}]],
            [{match,2601,
              {var,2601,'From1'},
              {op,2601,'+',{var,2601,'From'},{var,2601,'Skip'}}},
             {match,2602,
              {var,2602,'Bin1'},
              {'case',2602,
               {var,2602,'KO'},
               [{clause,2603,
                 [{bin,2603,
                   [{bin_element,2603,
                     {var,2603,'_'},
                     {var,2603,'Skip'},
                     [binary]},
                    {bin_element,2603,{var,2603,'B'},default,[binary]}]}],
                 [],
                 [{var,2603,'B'}]},
                {clause,2604,[{var,2604,'_'}],[],[{bin,2604,[]}]}]}},
             {tuple,2606,
              [{atom,2606,stop},
               {var,2606,'Bin1'},
               {var,2606,'From1'},
               {var,2606,'To'},
               {var,2606,'L'},
               {var,2606,'Ts'}]}]},
           {clause,2607,
            [{var,2607,'R1'}],
            [],
            [{call,2608,
              {atom,2608,scan_skip},
              [{var,2608,'KO'},
               {var,2608,'From'},
               {var,2608,'To'},
               {var,2608,'L'},
               {var,2608,'Ts'},
               {var,2608,'R1'},
               {var,2608,'Type'},
               {var,2608,'Skip'}]}]}]}]}]}]}]},
 {function,2614,file_info,1,
  [{clause,2614,
    [{var,2614,'FH'}],
    [],
    [{match,2618,
      {tuple,2615,
       [{atom,2615,fileheader},
        {var,2615,'_'},
        {var,2615,'_'},
        {var,2615,'_'},
        {var,2615,'CP'},
        {var,2617,'Type'},
        {var,2616,'Version'},
        {var,2616,'M'},
        {var,2616,'Next'},
        {var,2615,'Kp'},
        {var,2617,'NoObjects'},
        {var,2617,'NoKeys'},
        {var,2615,'_'},
        {var,2615,'_'},
        {var,2615,'_'},
        {var,2615,'_'},
        {var,2615,'_'},
        {var,2615,'_'},
        {var,2615,'_'},
        {var,2615,'_'},
        {var,2615,'_'},
        {var,2616,'N'},
        {var,2615,'_'}]},
      {var,2618,'FH'}},
     {'if',2619,
      [{clause,2620,[],
        [[{op,2620,'=:=',{var,2620,'CP'},{integer,2620,0}}]],
        [{tuple,2621,[{atom,2621,error},{atom,2621,not_closed}]}]},
       {clause,2622,[],
        [[{op,2622,'=/=',
           {call,2622,
            {remote,2622,{atom,2622,erlang},{atom,2622,element}},
            [{integer,2622,4},{var,2622,'FH'}]},
           {integer,31,11259375}}]],
        [{tuple,2623,[{atom,2623,error},{atom,2623,not_a_dets_file}]}]},
       {clause,2624,[],
        [[{op,2624,'=/=',
           {call,2624,
            {remote,2624,{atom,2624,erlang},{atom,2624,element}},
            [{integer,2624,7},{var,2624,'FH'}]},
           {integer,239,9}}]],
        [{tuple,2625,[{atom,2625,error},{atom,2625,bad_version}]}]},
       {clause,2626,[],
        [[{atom,2626,true}]],
        [{tuple,2627,
          [{atom,2627,ok},
           {cons,2627,
            {tuple,2627,[{atom,2627,closed_properly},{var,2627,'CP'}]},
            {cons,2627,
             {tuple,2627,[{atom,2627,keypos},{var,2627,'Kp'}]},
             {cons,2627,
              {tuple,2627,[{atom,2627,m},{var,2627,'M'}]},
              {cons,2627,
               {tuple,2627,[{atom,2627,n},{var,2627,'N'}]},
               {cons,2628,
                {tuple,2628,[{atom,2628,next},{var,2628,'Next'}]},
                {cons,2628,
                 {tuple,2628,[{atom,2628,no_objects},{var,2628,'NoObjects'}]},
                 {cons,2628,
                  {tuple,2628,[{atom,2628,no_keys},{var,2628,'NoKeys'}]},
                  {cons,2629,
                   {tuple,2629,[{atom,2629,type},{var,2629,'Type'}]},
                   {cons,2629,
                    {tuple,2629,[{atom,2629,version},{var,2629,'Version'}]},
                    {nil,2629}}}}}}}}}}]}]}]}]}]},
 {function,2632,v_segments,1,
  [{clause,2632,
    [{match,2632,
      {tuple,2632,
       [{atom,2632,head},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'},
        {var,2632,'_'}]},
      {var,2632,'H'}}],
    [],
    [{call,2633,
      {atom,2633,v_parts},
      [{var,2633,'H'},{integer,2633,0},{integer,2633,0}]}]}]},
 {function,2635,v_parts,3,
  [{clause,2635,
    [{var,2635,'_H'},{integer,208,256},{var,2635,'_SegNo'}],
    [],
    [{atom,2636,done}]},
   {clause,2637,
    [{var,2637,'H'},{var,2637,'PartNo'},{var,2637,'SegNo'}],
    [],
    [{match,2638,
      {var,2638,'Fd'},
      {call,2638,
       {remote,2638,{atom,2638,erlang},{atom,2638,element}},
       [{integer,2638,5},{var,2638,'H'}]}},
     {match,2639,
      {var,2639,'PartPos'},
      {call,2639,
       {remote,2639,{atom,2639,dets_utils},{atom,2639,read_4}},
       [{var,2639,'Fd'},
        {op,209,'+',
         {op,200,'+',
          {op,199,'+',
           {op,199,'+',
            {op,198,'+',
             {integer,198,56},
             {op,194,'*',{integer,194,28},{integer,194,4}}},
            {integer,195,16}},
           {integer,196,4}},
          {integer,192,124}},
         {op,209,'*',{integer,209,4},{var,2639,'PartNo'}}}]}},
     {'if',2640,
      [{clause,2641,[],
        [[{op,2641,'=:=',{var,2641,'PartPos'},{integer,2641,0}}]],
        [{atom,2642,done}]},
       {clause,2643,[],
        [[{atom,2643,true}]],
        [{match,2644,
          {var,2644,'PartBin'},
          {call,2644,
           {remote,2644,{atom,2644,dets_utils},{atom,2644,pread_n}},
           [{var,2644,'Fd'},
            {var,2644,'PartPos'},
            {op,2644,'*',{integer,206,512},{integer,2644,4}}]}},
         {call,2645,
          {atom,2645,v_segments},
          [{var,2645,'H'},
           {var,2645,'PartBin'},
           {op,2645,'+',{var,2645,'PartNo'},{integer,2645,1}},
           {var,2645,'SegNo'}]}]}]}]}]},
 {function,2648,v_segments,4,
  [{clause,2648,
    [{var,2648,'H'},{bin,2648,[]},{var,2648,'PartNo'},{var,2648,'SegNo'}],
    [],
    [{call,2649,
      {atom,2649,v_parts},
      [{var,2649,'H'},{var,2649,'PartNo'},{var,2649,'SegNo'}]}]},
   {clause,2650,
    [{var,2650,'_H'},
     {bin,2650,
      [{bin_element,2650,{integer,2650,0},{integer,2650,32},default},
       {bin_element,2650,{var,2650,'_'},default,[binary]}]},
     {var,2650,'_PartNo'},
     {var,2650,'_SegNo'}],
    [],
    [{atom,2651,done}]},
   {clause,2652,
    [{var,2652,'H'},
     {bin,2652,
      [{bin_element,2652,{var,2652,'Seg'},{integer,2652,32},default},
       {bin_element,2652,{var,2652,'T'},default,[binary]}]},
     {var,2652,'PartNo'},
     {var,2652,'SegNo'}],
    [],
    [{call,2653,
      {remote,2653,{atom,2653,io},{atom,2653,format}},
      [{string,2653,"<~w>SEGMENT ~w~n"},
       {cons,2653,
        {var,2653,'Seg'},
        {cons,2653,{var,2653,'SegNo'},{nil,2653}}}]},
     {call,2654,
      {atom,2654,v_segment},
      [{var,2654,'H'},{var,2654,'SegNo'},{var,2654,'Seg'},{integer,2654,0}]},
     {call,2655,
      {atom,2655,v_segments},
      [{var,2655,'H'},
       {var,2655,'T'},
       {var,2655,'PartNo'},
       {op,2655,'+',{var,2655,'SegNo'},{integer,2655,1}}]}]}]},
 {function,2657,v_segment,4,
  [{clause,2657,
    [{var,2657,'_H'},{var,2657,'_'},{var,2657,'_SegPos'},{integer,203,256}],
    [],
    [{atom,2658,done}]},
   {clause,2659,
    [{var,2659,'H'},
     {var,2659,'SegNo'},
     {var,2659,'SegPos'},
     {var,2659,'SegSlot'}],
    [],
    [{match,2660,
      {var,2660,'Slot'},
      {op,2660,'+',
       {var,2660,'SegSlot'},
       {op,2660,'*',{var,2660,'SegNo'},{integer,203,256}}}},
     {match,2661,
      {var,2661,'BucketP'},
      {op,2661,'+',
       {var,2661,'SegPos'},
       {op,2661,'*',
        {op,2661,'*',{integer,2661,4},{integer,245,2}},
        {var,2661,'SegSlot'}}}},
     {'case',2662,
      {'catch',2662,
       {call,2662,
        {atom,2662,read_bucket},
        [{var,2662,'H'},
         {var,2662,'BucketP'},
         {call,2662,
          {remote,2662,{atom,2662,erlang},{atom,2662,element}},
          [{integer,2662,10},{var,2662,'H'}]}]}},
      [{clause,2663,
        [{tuple,2663,[{atom,2663,'EXIT'},{var,2663,'Reason'}]}],
        [],
        [{call,2664,
          {remote,2664,{atom,2664,dets_utils},{atom,2664,vformat}},
          [{string,2664,"** dets: Corrupt or truncated dets file~n"},
           {nil,2665}]},
         {call,2666,
          {remote,2666,{atom,2666,io},{atom,2666,format}},
          [{string,2666,"~nERROR ~tp~n"},
           {cons,2666,{var,2666,'Reason'},{nil,2666}}]}]},
       {clause,2667,[{nil,2667}],[],[{atom,2668,true}]},
       {clause,2669,
        [{tuple,2669,
          [{var,2669,'Size'},{var,2669,'CollP'},{var,2669,'Objects'}]}],
        [],
        [{call,2670,
          {remote,2670,{atom,2670,io},{atom,2670,format}},
          [{string,2670,"   <~w>~w: <~w:~p>~w~n"},
           {cons,2671,
            {var,2671,'BucketP'},
            {cons,2671,
             {var,2671,'Slot'},
             {cons,2671,
              {var,2671,'CollP'},
              {cons,2671,
               {var,2671,'Size'},
               {cons,2671,{var,2671,'Objects'},{nil,2671}}}}}}]}]}]},
     {call,2673,
      {atom,2673,v_segment},
      [{var,2673,'H'},
       {var,2673,'SegNo'},
       {var,2673,'SegPos'},
       {op,2673,'+',{var,2673,'SegSlot'},{integer,2673,1}}]}]}]},
 {function,2676,read_bucket,3,
  [{clause,2676,
    [{var,2676,'Head'},{var,2676,'Position'},{var,2676,'Type'}],
    [],
    [{match,2677,
      {var,2677,'MaxSize'},
      {call,2677,{atom,2677,maxobjsize},[{var,2677,'Head'}]}},
     {'case',2678,
      {call,2678,
       {remote,2678,{atom,2678,dets_utils},{atom,2678,ipread}},
       [{var,2678,'Head'},{var,2678,'Position'},{var,2678,'MaxSize'}]},
      [{clause,2679,
        [{tuple,2679,
          [{atom,2679,ok},
           {tuple,2679,
            [{var,2679,'Size'},
             {var,2679,'Pointer'},
             {bin,2679,
              [{bin_element,2679,{var,2679,'Size'},{integer,2679,32},default},
               {bin_element,2679,
                {var,2679,'_Status'},
                {integer,2679,32},
                default},
               {bin_element,2679,
                {var,2679,'KeysObjs'},
                default,
                [binary]}]}]}]}],
        [],
        [{match,2680,
          {var,2680,'Objs'},
          {call,2680,
           {atom,2680,bin2objs},
           [{var,2680,'KeysObjs'},{var,2680,'Type'},{nil,2680}]}},
         {tuple,2681,
          [{var,2681,'Size'},
           {var,2681,'Pointer'},
           {call,2681,
            {remote,2681,{atom,2681,lists},{atom,2681,reverse}},
            [{var,2681,'Objs'}]}]}]},
       {clause,2682,[{nil,2682}],[],[{nil,2683}]}]}]}]},
 {function,2691,per_key,2,
  [{clause,2691,
    [{var,2691,'Head'},
     {match,2691,
      {bin,2691,
       [{bin_element,2691,{var,2691,'BinSize'},{integer,2691,32},default},
        {bin_element,34,{integer,34,305419896},{integer,2691,32},default},
        {bin_element,2691,{var,2691,'Bin'},default,[binary]}]},
      {var,2691,'B'}}],
    [],
    [{match,2692,
      {atom,2692,true},
      {op,2692,'=:=',
       {call,2692,{atom,2692,byte_size},[{var,2692,'B'}]},
       {var,2692,'BinSize'}}},
     {'if',2693,
      [{clause,2694,[],
        [[{op,2694,'=:=',
           {call,2694,
            {remote,2694,{atom,2694,erlang},{atom,2694,element}},
            [{integer,2694,10},{var,2694,'Head'}]},
           {atom,2694,set}}]],
        [{call,2695,
          {atom,2695,per_set_key},
          [{var,2695,'Bin'},
           {call,2695,
            {remote,2695,{atom,2695,erlang},{atom,2695,element}},
            [{integer,2695,11},{var,2695,'Head'}]},
           {nil,2695}]}]},
       {clause,2696,[],
        [[{atom,2696,true}]],
        [{call,2697,
          {atom,2697,per_bag_key},
          [{var,2697,'Bin'},
           {call,2697,
            {remote,2697,{atom,2697,erlang},{atom,2697,element}},
            [{integer,2697,11},{var,2697,'Head'}]},
           {nil,2697}]}]}]}]}]},
 {function,2700,per_set_key,3,
  [{clause,2700,
    [{match,2700,
      {bin,2700,
       [{bin_element,2700,{var,2700,'Size'},{integer,2700,32},default},
        {bin_element,2700,{var,2700,'T'},default,[binary]}]},
      {var,2700,'B'}},
     {var,2700,'KeyPos'},
     {var,2700,'L'}],
    [],
    [{match,2701,
      {bin,2701,
       [{bin_element,2701,{var,2701,'KeyBin'},{var,2701,'Size'},[binary]},
        {bin_element,2701,{var,2701,'R'},default,[binary]}]},
      {var,2701,'B'}},
     {match,2702,
      {var,2702,'Term'},
      {call,2702,{atom,2702,binary_to_term},[{var,2702,'T'}]}},
     {match,2703,
      {var,2703,'Key'},
      {call,2703,{atom,2703,element},[{var,2703,'KeyPos'},{var,2703,'Term'}]}},
     {match,2704,
      {var,2704,'Item'},
      {tuple,2704,
       [{var,2704,'Term'},
        {op,2686,'-',{op,2686,'bsl',{integer,2686,1},{integer,2686,26}}},
        {var,2704,'KeyBin'}]}},
     {call,2705,
      {atom,2705,per_set_key},
      [{var,2705,'R'},
       {var,2705,'KeyPos'},
       {cons,2705,
        {tuple,2705,
         [{var,2705,'Key'},
          {var,2705,'Size'},
          {var,2705,'KeyBin'},
          {var,2705,'Item'},
          {nil,2705}]},
        {var,2705,'L'}}]}]},
   {clause,2706,
    [{bin,2706,[]},{var,2706,'KeyPos'},{var,2706,'L'}],
    [[{call,2706,{atom,2706,is_integer},[{var,2706,'KeyPos'}]}]],
    [{call,2707,
      {remote,2707,{atom,2707,lists},{atom,2707,reverse}},
      [{var,2707,'L'}]}]}]},
 {function,2709,per_bag_key,3,
  [{clause,2709,
    [{match,2709,
      {bin,2709,
       [{bin_element,2709,{var,2709,'Size'},{integer,2709,32},default},
        {bin_element,2709,{var,2709,'ObjSz'},{integer,2709,32},default},
        {bin_element,2709,{var,2709,'T'},default,[binary]}]},
      {var,2709,'B'}},
     {var,2709,'KeyPos'},
     {var,2709,'L'}],
    [],
    [{match,2710,
      {bin,2710,
       [{bin_element,2710,{var,2710,'KeyBin'},{var,2710,'Size'},[binary]},
        {bin_element,2710,{var,2710,'R'},default,[binary]}]},
      {var,2710,'B'}},
     {match,2711,
      {var,2711,'ObjSz1'},
      {op,2711,'-',{var,2711,'ObjSz'},{integer,2711,4}}},
     {match,2712,
      {var,2712,'Size1'},
      {op,2712,'-',
       {op,2712,'-',{var,2712,'Size'},{var,2712,'ObjSz'}},
       {integer,2712,4}}},
     {match,2713,
      {bin,2713,
       [{bin_element,2713,{var,2713,'_'},{var,2713,'ObjSz1'},[binary]},
        {bin_element,2713,{var,2713,'KeyObjs'},{var,2713,'Size1'},[binary]},
        {bin_element,2713,{var,2713,'_'},default,[binary]}]},
      {var,2713,'T'}},
     {match,2714,
      {bin,2714,
       [{bin_element,2714,{var,2714,'_Size'},{integer,2714,32},default},
        {bin_element,2714,{var,2714,'Bin'},{var,2714,'ObjSz'},[binary]},
        {bin_element,2714,{var,2714,'_'},default,[binary]}]},
      {var,2714,'B'}},
     {match,2715,
      {var,2715,'Term'},
      {call,2715,{atom,2715,binary_to_term},[{var,2715,'T'}]}},
     {match,2716,
      {var,2716,'Key'},
      {call,2716,{atom,2716,element},[{var,2716,'KeyPos'},{var,2716,'Term'}]}},
     {match,2717,
      {var,2717,'Item'},
      {tuple,2717,
       [{var,2717,'Term'},
        {op,2686,'-',{op,2686,'bsl',{integer,2686,1},{integer,2686,26}}},
        {var,2717,'Bin'}]}},
     {call,2718,
      {atom,2718,per_bag_key},
      [{var,2718,'R'},
       {var,2718,'KeyPos'},
       {cons,2718,
        {tuple,2718,
         [{var,2718,'Key'},
          {var,2718,'Size'},
          {var,2718,'KeyBin'},
          {var,2718,'Item'},
          {var,2718,'KeyObjs'}]},
        {var,2718,'L'}}]}]},
   {clause,2719,
    [{bin,2719,[]},{var,2719,'KeyPos'},{var,2719,'L'}],
    [[{call,2719,{atom,2719,is_integer},[{var,2719,'KeyPos'}]}]],
    [{call,2720,
      {remote,2720,{atom,2720,lists},{atom,2720,reverse}},
      [{var,2720,'L'}]}]}]},
 {function,2723,binobjs2terms,1,
  [{clause,2723,
    [{match,2723,
      {bin,2723,
       [{bin_element,2723,{var,2723,'ObjSz'},{integer,2723,32},default},
        {bin_element,2723,{var,2723,'T'},default,[binary]}]},
      {var,2723,'B'}}],
    [],
    [{call,2724,
      {atom,2724,binobjs2terms},
      [{var,2724,'B'},
       {var,2724,'T'},
       {var,2724,'ObjSz'},
       {op,2724,'-',
        {call,2724,{atom,2724,byte_size},[{var,2724,'B'}]},
        {var,2724,'ObjSz'}},
       {op,2724,'+',
        {op,2686,'-',{op,2686,'bsl',{integer,2686,1},{integer,2686,26}}},
        {integer,2724,1}},
       {nil,2724}]}]},
   {clause,2725,[{match,2725,{nil,2725},{var,2725,'B'}}],[],[{var,2726,'B'}]},
   {clause,2727,[{bin,2727,[]}],[],[{nil,2728}]}]},
 {function,2730,binobjs2terms,6,
  [{clause,2730,
    [{var,2730,'Bin'},
     {var,2730,'Obj'},
     {var,2730,'_ObjSz'},
     {match,2730,{var,2730,'_Size'},{integer,2730,0}},
     {var,2730,'N'},
     {var,2730,'L'}],
    [],
    [{call,2731,
      {remote,2731,{atom,2731,lists},{atom,2731,reverse}},
      [{var,2731,'L'},
       {cons,2731,
        {tuple,2731,
         [{call,2731,{atom,2731,binary_to_term},[{var,2731,'Obj'}]},
          {var,2731,'N'},
          {var,2731,'Bin'}]},
        {nil,2731}}]}]},
   {clause,2732,
    [{var,2732,'Bin'},
     {var,2732,'Bin1'},
     {var,2732,'ObjSz'},
     {var,2732,'Size'},
     {var,2732,'N'},
     {var,2732,'L'}],
    [],
    [{match,2733,
      {bin,2733,
       [{bin_element,2733,{var,2733,'B'},{var,2733,'ObjSz'},[binary]},
        {bin_element,2733,{var,2733,'T'},default,[binary]}]},
      {var,2733,'Bin'}},
     {match,2734,
      {bin,2734,
       [{bin_element,2734,{var,2734,'NObjSz'},{integer,2734,32},default},
        {bin_element,2734,{var,2734,'T1'},default,[binary]}]},
      {var,2734,'T'}},
     {match,2735,
      {var,2735,'Item'},
      {tuple,2735,
       [{call,2735,{atom,2735,binary_to_term},[{var,2735,'Bin1'}]},
        {var,2735,'N'},
        {var,2735,'B'}]}},
     {call,2736,
      {atom,2736,binobjs2terms},
      [{var,2736,'T'},
       {var,2736,'T1'},
       {var,2736,'NObjSz'},
       {op,2736,'-',{var,2736,'Size'},{var,2736,'NObjSz'}},
       {op,2736,'+',{var,2736,'N'},{integer,2736,1}},
       {cons,2736,{var,2736,'Item'},{var,2736,'L'}}]}]}]},
 {function,2740,bin2objs,3,
  [{clause,2740,
    [{var,2740,'KeysObjs'},{atom,2740,set},{var,2740,'Ts'}],
    [],
    [{match,2741,
      {bin,2741,
       [{bin_element,2741,{var,2741,'ObjSz'},{integer,2741,32},default},
        {bin_element,2741,{var,2741,'T'},default,[binary]}]},
      {var,2741,'KeysObjs'}},
     {call,2742,
      {atom,2742,bin2objs},
      [{var,2742,'T'},
       {op,2742,'-',{var,2742,'ObjSz'},{integer,2742,4}},
       {op,2742,'-',
        {call,2742,{atom,2742,byte_size},[{var,2742,'KeysObjs'}]},
        {var,2742,'ObjSz'}},
       {var,2742,'Ts'}]}]},
   {clause,2743,
    [{var,2743,'KeysObjs'},{var,2743,'_Type'},{var,2743,'Ts'}],
    [],
    [{call,2744,
      {atom,2744,bin2objs2},
      [{var,2744,'KeysObjs'},{var,2744,'Ts'}]}]}]},
 {function,2746,bin2objs2,2,
  [{clause,2746,
    [{bin,2746,
      [{bin_element,2746,{var,2746,'Size'},{integer,2746,32},default},
       {bin_element,2746,{var,2746,'ObjSz'},{integer,2746,32},default},
       {bin_element,2746,{var,2746,'T'},default,[binary]}]},
     {var,2746,'Ts'}],
    [],
    [{call,2747,
      {atom,2747,bin2objs},
      [{var,2747,'T'},
       {op,2747,'-',{var,2747,'ObjSz'},{integer,2747,4}},
       {op,2747,'-',
        {op,2747,'-',{var,2747,'Size'},{var,2747,'ObjSz'}},
        {integer,2747,4}},
       {var,2747,'Ts'}]}]},
   {clause,2748,[{bin,2748,[]},{var,2748,'Ts'}],[],[{var,2749,'Ts'}]}]},
 {function,2751,bin2objs,4,
  [{clause,2751,
    [{var,2751,'Bin'},
     {var,2751,'ObjSz'},
     {match,2751,{var,2751,'_Size'},{integer,2751,0}},
     {var,2751,'Ts'}],
    [],
    [{match,2752,
      {bin,2752,
       [{bin_element,2752,{var,2752,'_'},{var,2752,'ObjSz'},[binary]},
        {bin_element,2752,{var,2752,'T'},default,[binary]}]},
      {var,2752,'Bin'}},
     {call,2753,
      {atom,2753,bin2objs2},
      [{var,2753,'T'},
       {cons,2753,
        {call,2753,{atom,2753,binary_to_term},[{var,2753,'Bin'}]},
        {var,2753,'Ts'}}]}]},
   {clause,2754,
    [{var,2754,'Bin'},{var,2754,'ObjSz'},{var,2754,'Size'},{var,2754,'Ts'}],
    [],
    [{match,2755,
      {bin,2755,
       [{bin_element,2755,{var,2755,'_'},{var,2755,'ObjSz'},[binary]},
        {bin_element,2755,{var,2755,'NObjSz'},{integer,2755,32},default},
        {bin_element,2755,{var,2755,'T'},default,[binary]}]},
      {var,2755,'Bin'}},
     {call,2756,
      {atom,2756,bin2objs},
      [{var,2756,'T'},
       {op,2756,'-',{var,2756,'NObjSz'},{integer,2756,4}},
       {op,2756,'-',{var,2756,'Size'},{var,2756,'NObjSz'}},
       {cons,2756,
        {call,2756,{atom,2756,binary_to_term},[{var,2756,'Bin'}]},
        {var,2756,'Ts'}}]}]}]},
 {function,2759,bin2keybins,2,
  [{clause,2759,
    [{var,2759,'KeysObjs'},{var,2759,'Head'}],
    [[{op,2759,'=:=',
       {call,2759,
        {remote,2759,{atom,2759,erlang},{atom,2759,element}},
        [{integer,2759,10},{var,2759,'Head'}]},
       {atom,2759,set}}]],
    [{match,2760,
      {bin,2760,
       [{bin_element,2760,{var,2760,'ObjSz'},{integer,2760,32},default},
        {bin_element,2760,{var,2760,'T'},default,[binary]}]},
      {var,2760,'KeysObjs'}},
     {call,2761,
      {atom,2761,bin2keybins},
      [{var,2761,'T'},
       {call,2761,
        {remote,2761,{atom,2761,erlang},{atom,2761,element}},
        [{integer,2761,11},{var,2761,'Head'}]},
       {op,2761,'-',{var,2761,'ObjSz'},{integer,2761,4}},
       {op,2761,'-',
        {call,2761,{atom,2761,byte_size},[{var,2761,'KeysObjs'}]},
        {var,2761,'ObjSz'}},
       {nil,2761}]}]},
   {clause,2762,
    [{var,2762,'KeysObjs'},{var,2762,'Head'}],
    [],
    [{call,2763,
      {atom,2763,bin2keybins2},
      [{var,2763,'KeysObjs'},
       {call,2763,
        {remote,2763,{atom,2763,erlang},{atom,2763,element}},
        [{integer,2763,11},{var,2763,'Head'}]},
       {nil,2763}]}]}]},
 {function,2765,bin2keybins2,3,
  [{clause,2765,
    [{bin,2765,
      [{bin_element,2765,{var,2765,'Size'},{integer,2765,32},default},
       {bin_element,2765,{var,2765,'ObjSz'},{integer,2765,32},default},
       {bin_element,2765,{var,2765,'T'},default,[binary]}]},
     {var,2765,'Kp'},
     {var,2765,'L'}],
    [],
    [{call,2766,
      {atom,2766,bin2keybins},
      [{var,2766,'T'},
       {var,2766,'Kp'},
       {op,2766,'-',{var,2766,'ObjSz'},{integer,2766,4}},
       {op,2766,'-',
        {op,2766,'-',{var,2766,'Size'},{var,2766,'ObjSz'}},
        {integer,2766,4}},
       {var,2766,'L'}]}]},
   {clause,2767,
    [{bin,2767,[]},{var,2767,'Kp'},{var,2767,'L'}],
    [[{call,2767,{atom,2767,is_integer},[{var,2767,'Kp'}]}]],
    [{call,2768,
      {remote,2768,{atom,2768,lists},{atom,2768,reverse}},
      [{var,2768,'L'}]}]}]},
 {function,2770,bin2keybins,5,
  [{clause,2770,
    [{var,2770,'Bin'},
     {var,2770,'Kp'},
     {var,2770,'ObjSz'},
     {match,2770,{var,2770,'_Size'},{integer,2770,0}},
     {var,2770,'L'}],
    [],
    [{match,2771,
      {bin,2771,
       [{bin_element,2771,{var,2771,'Obj'},{var,2771,'ObjSz'},[binary]},
        {bin_element,2771,{var,2771,'T'},default,[binary]}]},
      {var,2771,'Bin'}},
     {match,2772,
      {var,2772,'Term'},
      {call,2772,{atom,2772,binary_to_term},[{var,2772,'Obj'}]}},
     {call,2773,
      {atom,2773,bin2keybins2},
      [{var,2773,'T'},
       {var,2773,'Kp'},
       {cons,2773,
        {tuple,2773,
         [{call,2773,{atom,2773,element},[{var,2773,'Kp'},{var,2773,'Term'}]},
          {var,2773,'Obj'}]},
        {var,2773,'L'}}]}]},
   {clause,2774,
    [{var,2774,'Bin'},
     {var,2774,'Kp'},
     {var,2774,'ObjSz'},
     {var,2774,'Size'},
     {var,2774,'L'}],
    [],
    [{match,2775,
      {bin,2775,
       [{bin_element,2775,{var,2775,'Obj'},{var,2775,'ObjSz'},[binary]},
        {bin_element,2775,{var,2775,'NObjSz'},{integer,2775,32},default},
        {bin_element,2775,{var,2775,'T'},default,[binary]}]},
      {var,2775,'Bin'}},
     {match,2776,
      {var,2776,'Term'},
      {call,2776,{atom,2776,binary_to_term},[{var,2776,'Obj'}]}},
     {call,2777,
      {atom,2777,bin2keybins},
      [{var,2777,'T'},
       {var,2777,'Kp'},
       {op,2777,'-',{var,2777,'NObjSz'},{integer,2777,4}},
       {op,2777,'-',{var,2777,'Size'},{var,2777,'NObjSz'}},
       {cons,2777,
        {tuple,2777,
         [{call,2777,{atom,2777,element},[{var,2777,'Kp'},{var,2777,'Term'}]},
          {var,2777,'Obj'}]},
        {var,2777,'L'}}]}]}]}]
