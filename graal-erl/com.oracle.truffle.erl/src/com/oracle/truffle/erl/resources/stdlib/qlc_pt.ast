qlc_pt
[]
[]
[{function,75,parse_transform,2,
  [{clause,75,
    [{var,75,'Forms0'},{var,75,'Options'}],
    [],
    [{atom,55,ok},
     {match,77,
      {var,77,'Imported'},
      {call,77,{atom,77,is_qlc_q_imported},[{var,77,'Forms0'}]}},
     {match,78,
      {tuple,78,[{var,78,'Forms'},{var,78,'FormsNoShadows'},{var,78,'State'}]},
      {call,78,{atom,78,initiate},[{var,78,'Forms0'},{var,78,'Imported'}]}},
     {match,79,
      {var,79,'NodeInfo'},
      {call,79,
       {remote,79,{atom,79,erlang},{atom,79,element}},
       [{integer,79,7},{var,79,'State'}]}},
     {'try',80,
      [{'case',81,
        {call,81,{atom,81,called_from_type_checker},[{var,81,'Options'}]},
        [{clause,82,
          [{atom,82,true}],
          [],
          [{match,85,{var,85,'L'},{call,85,{atom,85,anno0},[]}},
           {match,86,
            {tuple,86,[{atom,86,tuple},{var,86,'_'},{var,86,'Fs0'}]},
            {call,86,
             {atom,86,abstr},
             [{tuple,86,
               [{atom,86,qlc_lc},{atom,86,undefined},{atom,86,undefined}]},
              {var,86,'L'}]}},
           {match,87,
            {var,87,'F'},
            {'fun',87,
             {clauses,
              [{clause,87,
                [{var,87,'_Id'},{var,87,'LC'},{var,87,'A'}],
                [],
                [{match,88,
                  {var,88,'Init'},
                  {call,88,
                   {atom,88,simple},
                   [{var,88,'L'},{atom,88,'V'},{var,88,'LC'},{var,88,'L'}]}},
                 {tuple,89,
                  [{tuple,89,
                    [{atom,89,tuple},
                     {var,89,'L'},
                     {call,89,
                      {atom,89,set_field},
                      [{integer,89,2},{var,89,'Fs0'},{var,89,'Init'}]}]},
                   {var,89,'A'}]}]}]}}},
           {match,91,
            {tuple,91,[{var,91,'Forms1'},{atom,91,ok}]},
            {call,91,
             {atom,91,qlc_mapfold},
             [{var,91,'F'},{atom,91,ok},{var,91,'Forms'},{var,91,'State'}]}},
           {var,92,'Forms1'}]},
         {clause,93,
          [{atom,93,false}],
          [],
          [{'case',94,
            {call,95,
             {atom,95,compile_messages},
             [{var,95,'Forms'},
              {var,95,'FormsNoShadows'},
              {var,95,'Options'},
              {var,95,'State'}]},
            [{clause,97,
              [{tuple,97,[{nil,97},{var,97,'Warnings'}]}],
              [],
              [{atom,55,ok},
               {match,100,
                {tuple,100,[{var,100,'NewForms'},{var,100,'State1'}]},
                {call,101,
                 {atom,101,transform},
                 [{var,101,'FormsNoShadows'},{var,101,'State'}]}},
               {match,102,
                {var,102,'ExtraWs'},
                {call,102,
                 {remote,102,{atom,102,erlang},{atom,102,element}},
                 [{integer,102,5},{var,102,'State1'}]}},
               {match,103,
                {tuple,103,[{nil,103},{var,103,'WForms'}]},
                {call,103,
                 {atom,103,no_duplicates},
                 [{var,103,'NewForms'},
                  {nil,103},
                  {var,103,'Warnings'},
                  {var,104,'ExtraWs'},
                  {var,104,'Options'}]}},
               {op,105,'++',
                {call,105,
                 {atom,105,restore_locations},
                 [{var,105,'WForms'},{var,105,'State'}]},
                {call,106,
                 {atom,106,restore_anno},
                 [{var,106,'NewForms'},{var,106,'NodeInfo'}]}}]},
             {clause,107,
              [{tuple,107,[{var,107,'Errors'},{var,107,'Warnings'}]}],
              [],
              [{atom,55,ok},
               {match,110,
                {tuple,110,[{var,110,'EForms'},{var,110,'WForms'}]},
                {call,110,
                 {atom,110,no_duplicates},
                 [{var,110,'FormsNoShadows'},
                  {var,110,'Errors'},
                  {var,111,'Warnings'},
                  {nil,111},
                  {var,112,'Options'}]}},
               {op,113,'++',
                {call,113,
                 {atom,113,restore_locations},
                 [{op,113,'++',{var,113,'EForms'},{var,113,'WForms'}},
                  {var,113,'State'}]},
                {var,113,'Forms0'}}]}]}]}]}],
      [],[],
      [{match,117,
        {atom,117,true},
        {call,117,
         {remote,117,{atom,117,ets},{atom,117,delete}},
         [{var,117,'NodeInfo'}]}}]}]}]},
 {function,125,transform_from_evaluator,2,
  [{clause,125,
    [{var,125,'LC'},{var,125,'Bindings'}],
    [],
    [{atom,55,ok},
     {call,127,
      {atom,127,transform_expression},
      [{var,127,'LC'},{var,127,'Bindings'},{atom,127,false}]}]}]},
 {function,134,transform_expression,2,
  [{clause,134,
    [{var,134,'LC'},{var,134,'Bindings'}],
    [],
    [{call,135,
      {atom,135,transform_expression},
      [{var,135,'LC'},{var,135,'Bindings'},{atom,135,true}]}]}]},
 {function,141,called_from_type_checker,1,
  [{clause,141,
    [{var,141,'Options'}],
    [],
    [{call,142,
      {remote,142,{atom,142,lists},{atom,142,member}},
      [{atom,142,type_checker},{var,142,'Options'}]}]}]},
 {function,144,transform_expression,3,
  [{clause,144,
    [{var,144,'LC'},{var,144,'Bs0'},{var,144,'WithLintErrors'}],
    [],
    [{match,145,{var,145,'L'},{call,145,{atom,145,anno1},[]}},
     {match,146,
      {var,146,'As'},
      {lc,146,
       {tuple,146,[{atom,146,var},{var,146,'L'},{var,146,'V'}]},
       [{generate,146,
         {tuple,146,[{var,146,'V'},{var,146,'_Val'}]},
         {var,146,'Bs0'}}]}},
     {match,147,{var,147,'Ar'},{call,147,{atom,147,length},[{var,147,'As'}]}},
     {match,148,
      {var,148,'F'},
      {tuple,148,
       [{atom,148,function},
        {var,148,'L'},
        {atom,148,bar},
        {var,148,'Ar'},
        {cons,148,
         {tuple,148,
          [{atom,148,clause},
           {var,148,'L'},
           {var,148,'As'},
           {nil,148},
           {cons,148,
            {tuple,34,
             [{atom,34,call},
              {var,148,'L'},
              {tuple,34,
               [{atom,34,remote},
                {var,148,'L'},
                {tuple,34,[{atom,34,atom},{var,148,'L'},{atom,29,qlc}]},
                {tuple,34,[{atom,34,atom},{var,148,'L'},{atom,30,q}]}]},
              {cons,34,{var,148,'LC'},{nil,148}}]},
            {nil,148}}]},
         {nil,148}}]}},
     {match,149,
      {var,149,'Forms0'},
      {cons,149,
       {tuple,149,
        [{atom,149,attribute},
         {var,149,'L'},
         {atom,149,file},
         {tuple,149,[{string,149,"foo"},{var,149,'L'}]}]},
       {cons,150,
        {tuple,150,
         [{atom,150,attribute},
          {var,150,'L'},
          {atom,150,module},
          {atom,150,foo}]},
        {cons,150,{var,150,'F'},{nil,150}}}}},
     {match,151,
      {tuple,151,
       [{var,151,'Forms'},{var,151,'FormsNoShadows'},{var,151,'State'}]},
      {call,151,{atom,151,initiate},[{var,151,'Forms0'},{atom,151,false}]}},
     {match,152,
      {var,152,'NodeInfo'},
      {call,152,
       {remote,152,{atom,152,erlang},{atom,152,element}},
       [{integer,152,7},{var,152,'State'}]}},
     {match,153,{var,153,'Options'},{nil,153}},
     {'try',154,
      [{call,154,
        {atom,154,compile_messages},
        [{var,154,'Forms'},
         {var,154,'FormsNoShadows'},
         {var,154,'Options'},
         {var,154,'State'}]}],
      [{clause,155,
        [{tuple,155,[{var,155,'Errors0'},{var,155,'_Warnings'}]}],
        [],
        [{'case',156,
          {call,156,
           {atom,156,restore_locations},
           [{var,156,'Errors0'},{var,156,'State'}]},
          [{clause,157,
            [{nil,157}],
            [],
            [{match,158,
              {tuple,158,[{var,158,'NewForms'},{var,158,'_State1'}]},
              {call,158,
               {atom,158,transform},
               [{var,158,'FormsNoShadows'},{var,158,'State'}]}},
             {match,159,
              {var,159,'NewForms1'},
              {call,159,
               {atom,159,restore_anno},
               [{var,159,'NewForms'},{var,159,'NodeInfo'}]}},
             {match,160,
              {tuple,160,
               [{atom,160,function},
                {var,160,'L'},
                {atom,160,bar},
                {var,160,'Ar'},
                {cons,160,
                 {tuple,160,
                  [{atom,160,clause},
                   {var,160,'L'},
                   {var,160,'As'},
                   {nil,160},
                   {cons,160,{var,160,'NF'},{nil,160}}]},
                 {nil,160}}]},
              {call,161,
               {remote,161,{atom,161,lists},{atom,161,last}},
               [{var,161,'NewForms1'}]}},
             {tuple,162,[{atom,162,ok},{var,162,'NF'}]}]},
           {clause,163,
            [{var,163,'Errors'}],
            [[{var,163,'WithLintErrors'}]],
            [{tuple,164,
              [{atom,164,not_ok},
               {call,164,
                {atom,164,mforms},
                [{atom,164,error},{var,164,'Errors'}]}]}]},
           {clause,165,
            [{var,165,'Errors'}],
            [],
            [{match,166,
              {cons,166,
               {tuple,166,[{atom,166,error},{var,166,'Reason'}]},
               {var,166,'_'}},
              {call,166,
               {atom,166,mforms},
               [{atom,166,error},{var,166,'Errors'}]}},
             {tuple,167,
              [{atom,167,not_ok},
               {tuple,167,
                [{atom,167,error},{atom,29,qlc},{var,167,'Reason'}]}]}]}]}]}],
      [],
      [{match,170,
        {atom,170,true},
        {call,170,
         {remote,170,{atom,170,ets},{atom,170,delete}},
         [{var,170,'NodeInfo'}]}}]}]}]},
 {function,179,initiate,2,
  [{clause,179,
    [{var,179,'Forms0'},{var,179,'Imported'}],
    [],
    [{match,180,
      {var,180,'NodeInfo'},
      {call,180,
       {remote,180,{atom,180,ets},{atom,180,new}},
       [{atom,29,qlc},{nil,180}]}},
     {match,181,
      {atom,181,true},
      {call,181,
       {remote,181,{atom,181,ets},{atom,181,insert}},
       [{var,181,'NodeInfo'},{tuple,181,[{atom,181,var_n},{integer,174,0}]}]}},
     {call,182,
      {atom,182,exclude_integers_from_unique_line_numbers},
      [{var,182,'Forms0'},{var,182,'NodeInfo'}]},
     {atom,55,ok},
     {match,185,
      {var,185,'State0'},
      {tuple,185,
       [{atom,185,state},
        {var,185,'Imported'},
        {integer,59,20},
        {call,187,{atom,187,record_attributes},[{var,187,'Forms0'}]},
        {nil,46},
        {atom,185,undefined},
        {var,188,'NodeInfo'}]}},
     {match,189,
      {var,189,'Forms'},
      {call,189,
       {atom,189,save_anno},
       [{var,189,'Forms0'},{var,189,'NodeInfo'}]}},
     {match,190,
      {var,190,'FormsNoShadows'},
      {call,190,{atom,190,no_shadows},[{var,190,'Forms'},{var,190,'State0'}]}},
     {match,191,
      {var,191,'IntroVars'},
      {call,191,
       {atom,191,intro_variables},
       [{var,191,'FormsNoShadows'},{var,191,'State0'}]}},
     {match,192,
      {var,192,'State'},
      {call,192,
       {remote,192,{atom,192,erlang},{atom,192,setelement}},
       [{integer,192,6},{var,192,'State0'},{var,192,'IntroVars'}]}},
     {tuple,193,
      [{var,193,'Forms'},{var,193,'FormsNoShadows'},{var,193,'State'}]}]}]},
 {function,197,exclude_integers_from_unique_line_numbers,2,
  [{clause,197,
    [{var,197,'Forms'},{var,197,'NodeInfo'}],
    [],
    [{match,198,
      {var,198,'Integers'},
      {call,198,{atom,198,find_integers},[{var,198,'Forms'}]}},
     {call,199,
      {remote,199,{atom,199,lists},{atom,199,foreach}},
      [{'fun',199,
        {clauses,
         [{clause,199,
           [{var,199,'I'}],
           [],
           [{call,199,
             {remote,199,{atom,199,ets},{atom,199,insert}},
             [{var,199,'NodeInfo'},{tuple,199,[{var,199,'I'}]}]}]}]}},
       {var,199,'Integers'}]}]}]},
 {function,201,find_integers,1,
  [{clause,201,
    [{var,201,'Forms'}],
    [],
    [{match,202,
      {var,202,'F'},
      {'fun',202,
       {clauses,
        [{clause,202,
          [{var,202,'A'}],
          [],
          [{match,203,
            {var,203,'Fs1'},
            {call,203,
             {remote,203,{atom,203,erl_parse},{atom,203,map_anno}},
             [{'fun',203,
               {clauses,[{clause,203,[{var,203,'_'}],[],[{var,203,'A'}]}]}},
              {var,203,'Forms'}]}},
           {call,204,
            {remote,204,{atom,204,ordsets},{atom,204,from_list}},
            [{call,204,
              {atom,204,integers},
              [{var,204,'Fs1'},{nil,204}]}]}]}]}}},
     {call,206,
      {remote,206,{atom,206,ordsets},{atom,206,to_list}},
      [{call,206,
        {remote,206,{atom,206,ordsets},{atom,206,intersection}},
        [{call,206,{var,206,'F'},[{call,206,{atom,206,anno0},[]}]},
         {call,206,{var,206,'F'},[{call,206,{atom,206,anno1},[]}]}]}]}]}]},
 {function,208,integers,2,
  [{clause,208,
    [{cons,208,{var,208,'E'},{var,208,'Es'}},{var,208,'L'}],
    [],
    [{call,209,
      {atom,209,integers},
      [{var,209,'Es'},
       {call,209,{atom,209,integers},[{var,209,'E'},{var,209,'L'}]}]}]},
   {clause,210,
    [{var,210,'T'},{var,210,'L'}],
    [[{call,210,{atom,210,is_tuple},[{var,210,'T'}]}]],
    [{call,211,
      {atom,211,integers},
      [{call,211,{atom,211,tuple_to_list},[{var,211,'T'}]},{var,211,'L'}]}]},
   {clause,212,
    [{var,212,'I'},{var,212,'L'}],
    [[{call,212,{atom,212,is_integer},[{var,212,'I'}]},
      {op,212,'>',{var,212,'I'},{integer,174,0}}]],
    [{cons,213,{var,213,'I'},{var,213,'L'}}]},
   {clause,214,[{var,214,'_'},{var,214,'L'}],[],[{var,215,'L'}]}]},
 {function,227,mforms,2,
  [{clause,227,
    [{var,227,'Tag'},{var,227,'L'}],
    [],
    [{call,228,
      {remote,228,{atom,228,lists},{atom,228,sort}},
      [{lc,228,
        {tuple,228,[{var,228,'Tag'},{var,228,'M'}]},
        [{generate,228,
          {tuple,228,[{var,228,'_File'},{var,228,'Ms'}]},
          {var,228,'L'}},
         {generate,228,{var,228,'M'},{var,228,'Ms'}}]}]}]}]},
 {function,233,no_duplicates,5,
  [{clause,233,
    [{var,233,'Forms'},
     {var,233,'Errors'},
     {var,233,'Warnings0'},
     {var,233,'ExtraWarnings0'},
     {var,233,'Options'}],
    [],
    [{match,239,
      {var,239,'ExtraWarnings'},
      {lc,239,
       {var,239,'W'},
       [{generate,239,
         {match,239,
          {var,239,'W'},
          {tuple,239,
           [{var,239,'_File'},
            {cons,239,
             {tuple,239,[{var,239,'_'},{atom,239,qlc},{var,239,'Tag'}]},
             {nil,239}}]}},
         {var,240,'ExtraWarnings0'}},
        {op,241,'not',
         {call,241,
          {remote,241,{atom,241,lists},{atom,241,member}},
          [{var,241,'Tag'},
           {cons,241,
            {atom,241,nomatch_pattern},
            {cons,241,{atom,241,nomatch_filter},{nil,241}}}]}}]}},
     {match,242,
      {var,242,'Warnings1'},
      {op,242,'--',
       {call,242,{atom,242,mforms},[{var,242,'Warnings0'}]},
       {op,246,'++',
        {lc,243,
         {tuple,243,
          [{var,243,'File'},
           {cons,243,
            {tuple,243,[{var,243,'L'},{atom,243,v3_core},{atom,243,nomatch}]},
            {nil,243}}]},
         [{generate,244,
           {tuple,244,
            [{var,244,'File'},
             {cons,244,
              {tuple,244,[{var,244,'L'},{atom,244,qlc},{var,244,'M'}]},
              {nil,244}}]},
           {call,244,{atom,244,mforms},[{var,244,'ExtraWarnings'}]}},
          {call,245,
           {remote,245,{atom,245,lists},{atom,245,member}},
           [{var,245,'M'},
            {cons,245,
             {atom,245,nomatch_pattern},
             {cons,245,{atom,245,nomatch_filter},{nil,245}}}]}]},
        {lc,247,
         {tuple,247,
          [{var,247,'File'},
           {cons,247,
            {tuple,247,
             [{var,247,'L'},
              {atom,247,sys_core_fold},
              {atom,247,nomatch_guard}]},
            {nil,247}}]},
         [{generate,248,
           {tuple,248,
            [{var,248,'File'},
             {cons,248,
              {tuple,248,[{var,248,'L'},{atom,248,qlc},{var,248,'M'}]},
              {nil,248}}]},
           {call,248,{atom,248,mforms},[{var,248,'ExtraWarnings'}]}},
          {op,249,'=:=',{var,249,'M'},{atom,249,nomatch_filter}}]}}}},
     {match,250,
      {var,250,'Warnings'},
      {op,250,'++',{var,250,'Warnings1'},{var,250,'ExtraWarnings'}}},
     {match,251,
      {tuple,251,[{var,251,'Es1'},{var,251,'Ws1'}]},
      {call,251,
       {atom,251,compile_forms},
       [{var,251,'Forms'},{var,251,'Options'}]}},
     {match,252,
      {var,252,'Es'},
      {op,252,'--',
       {call,252,{atom,252,mforms},[{var,252,'Errors'}]},
       {call,252,{atom,252,mforms},[{var,252,'Es1'}]}}},
     {match,253,
      {var,253,'Ws'},
      {op,253,'--',
       {call,253,{atom,253,mforms},[{var,253,'Warnings'}]},
       {call,253,{atom,253,mforms},[{var,253,'Ws1'}]}}},
     {tuple,254,
      [{call,254,{atom,254,mforms2},[{atom,254,error},{var,254,'Es'}]},
       {call,254,{atom,254,mforms2},[{atom,254,warning},{var,254,'Ws'}]}]}]}]},
 {function,256,mforms,1,
  [{clause,256,
    [{var,256,'L'}],
    [],
    [{call,257,
      {remote,257,{atom,257,lists},{atom,257,sort}},
      [{lc,257,
        {tuple,257,[{var,257,'File'},{cons,257,{var,257,'M'},{nil,257}}]},
        [{generate,257,
          {tuple,257,[{var,257,'File'},{var,257,'Ms'}]},
          {var,257,'L'}},
         {generate,257,{var,257,'M'},{var,257,'Ms'}}]}]}]}]},
 {function,259,mforms2,2,
  [{clause,259,
    [{var,259,'Tag'},{var,259,'L'}],
    [],
    [{match,260,{var,260,'Line'},{call,260,{atom,260,anno0},[]}},
     {match,261,
      {var,261,'ML'},
      {call,261,
       {remote,261,{atom,261,lists},{atom,261,flatmap}},
       [{'fun',261,
         {clauses,
          [{clause,261,
            [{tuple,261,[{var,261,'File'},{var,261,'Ms'}]}],
            [],
            [{lc,262,
              {cons,262,
               {tuple,262,
                [{atom,262,attribute},
                 {var,262,'Line'},
                 {atom,262,file},
                 {tuple,262,[{var,262,'File'},{integer,262,0}]}]},
               {cons,262,
                {tuple,262,[{var,262,'Tag'},{var,262,'M'}]},
                {nil,262}}},
              [{generate,263,{var,263,'M'},{var,263,'Ms'}}]}]}]}},
        {call,264,
         {remote,264,{atom,264,lists},{atom,264,sort}},
         [{var,264,'L'}]}]}},
     {call,265,
      {remote,265,{atom,265,lists},{atom,265,flatten}},
      [{call,265,
        {remote,265,{atom,265,lists},{atom,265,sort}},
        [{var,265,'ML'}]}]}]}]},
 {function,267,restore_locations,2,
  [{clause,267,
    [{cons,267,{var,267,'T'},{var,267,'Ts'}},{var,267,'State'}],
    [],
    [{cons,268,
      {call,268,
       {atom,268,restore_locations},
       [{var,268,'T'},{var,268,'State'}]},
      {call,268,
       {atom,268,restore_locations},
       [{var,268,'Ts'},{var,268,'State'}]}}]},
   {clause,269,
    [{var,269,'T'},{var,269,'State'}],
    [[{call,269,{atom,269,is_tuple},[{var,269,'T'}]}]],
    [{call,270,
      {atom,270,list_to_tuple},
      [{call,270,
        {atom,270,restore_locations},
        [{call,270,{atom,270,tuple_to_list},[{var,270,'T'}]},
         {var,270,'State'}]}]}]},
   {clause,271,
    [{var,271,'I'},{var,271,'State'}],
    [[{op,271,'>',{var,271,'I'},{integer,174,0}}]],
    [{call,272,{atom,272,restore_loc},[{var,272,'I'},{var,272,'State'}]}]},
   {clause,273,[{var,273,'T'},{var,273,'_State'}],[],[{var,274,'T'}]}]},
 {function,276,is_qlc_q_imported,1,
  [{clause,276,
    [{var,276,'Forms'}],
    [],
    [{op,277,'=/=',
      {lc,277,
       {nil,277},
       [{generate,277,
         {tuple,277,
          [{atom,277,attribute},
           {var,277,'_'},
           {atom,277,import},
           {tuple,277,[{atom,29,qlc},{var,277,'FAs'}]}]},
         {var,277,'Forms'}},
        {generate,277,
         {tuple,277,[{atom,30,q},{integer,277,1}]},
         {var,277,'FAs'}}]},
      {nil,277}}]}]},
 {function,279,record_attributes,1,
  [{clause,279,
    [{var,279,'Forms'}],
    [],
    [{lc,280,
      {var,280,'A'},
      [{generate,280,
        {match,280,
         {var,280,'A'},
         {tuple,280,
          [{atom,280,attribute},
           {var,280,'_'},
           {atom,280,record},
           {var,280,'_D'}]}},
        {var,280,'Forms'}}]}]}]},
 {function,288,compile_messages,4,
  [{clause,288,
    [{var,288,'Forms'},
     {var,288,'FormsNoShadows'},
     {var,288,'Options'},
     {var,288,'State'}],
    [],
    [{match,290,
      {var,290,'BGenF'},
      {'fun',290,
       {clauses,
        [{clause,290,
          [{var,290,'_QId'},
           {match,290,
            {tuple,290,
             [{atom,290,b_generate},
              {var,290,'Line'},
              {var,290,'_P'},
              {var,290,'_LE'}]},
            {var,290,'BGen'}},
           {var,290,'GA'},
           {var,290,'A'}],
          [],
          [{match,291,
            {var,291,'M'},
            {tuple,291,
             [{call,291,{atom,291,loc},[{var,291,'Line'}]},
              {atom,29,qlc},
              {atom,291,binary_generator}]}},
           {tuple,292,
            [{var,292,'BGen'},
             {cons,292,
              {tuple,292,
               [{call,292,{atom,292,get},[{atom,63,qlc_current_file}]},
                {cons,292,{var,292,'M'},{nil,292}}]},
              {var,292,'GA'}},
             {var,292,'A'}]}]},
         {clause,293,
          [{var,293,'_QId'},{var,293,'Q'},{var,293,'GA'},{var,293,'A'}],
          [],
          [{tuple,294,[{var,294,'Q'},{var,294,'GA'},{var,294,'A'}]}]}]}}},
     {match,296,
      {tuple,296,[{var,296,'_'},{var,296,'BGens'}]},
      {call,296,
       {atom,296,qual_fold},
       [{var,296,'BGenF'},
        {nil,296},
        {nil,296},
        {var,296,'Forms'},
        {var,296,'State'}]}},
     {match,297,
      {var,297,'GenForm'},
      {call,297,
       {atom,297,used_genvar_check},
       [{var,297,'FormsNoShadows'},{var,297,'State'}]}},
     {atom,55,ok},
     {match,299,
      {tuple,299,[{var,299,'GEs'},{var,299,'_'}]},
      {call,299,
       {atom,299,compile_forms},
       [{cons,299,{var,299,'GenForm'},{nil,299}},{var,299,'Options'}]}},
     {match,300,
      {var,300,'UsedGenVarMsgs'},
      {call,300,
       {atom,300,used_genvar_messages},
       [{var,300,'GEs'},{var,300,'State'}]}},
     {match,301,
      {var,301,'NodeInfo'},
      {call,301,
       {remote,301,{atom,301,erlang},{atom,301,element}},
       [{integer,301,7},{var,301,'State'}]}},
     {match,302,
      {var,302,'WarnFun'},
      {'fun',302,
       {clauses,
        [{clause,302,
          [{var,302,'_Id'},{var,302,'LC'},{var,302,'A'}],
          [],
          [{tuple,302,
            [{call,302,
              {atom,302,lc_nodes},
              [{var,302,'LC'},{var,302,'NodeInfo'}]},
             {var,302,'A'}]}]}]}}},
     {match,303,
      {tuple,303,[{var,303,'WForms'},{atom,303,ok}]},
      {call,303,
       {atom,303,qlc_mapfold},
       [{var,303,'WarnFun'},
        {atom,303,ok},
        {var,303,'Forms'},
        {var,303,'State'}]}},
     {match,304,
      {tuple,304,[{var,304,'Es'},{var,304,'Ws'}]},
      {call,304,
       {atom,304,compile_forms},
       [{var,304,'WForms'},{var,304,'Options'}]}},
     {match,305,
      {var,305,'LcEs'},
      {call,305,{atom,305,lc_messages},[{var,305,'Es'},{var,305,'NodeInfo'}]}},
     {match,306,
      {var,306,'LcWs'},
      {call,306,{atom,306,lc_messages},[{var,306,'Ws'},{var,306,'NodeInfo'}]}},
     {match,307,
      {var,307,'Errors'},
      {op,307,'++',
       {call,307,{atom,307,badarg},[{var,307,'Forms'},{var,307,'State'}]},
       {op,307,'++',
        {var,307,'UsedGenVarMsgs'},
        {op,307,'++',{var,307,'LcEs'},{var,307,'BGens'}}}}},
     {match,308,{var,308,'Warnings'},{var,308,'LcWs'}},
     {tuple,309,[{var,309,'Errors'},{var,309,'Warnings'}]}]}]},
 {function,311,badarg,2,
  [{clause,311,
    [{var,311,'Forms'},{var,311,'State'}],
    [],
    [{match,312,
      {var,312,'F'},
      {'fun',312,
       {clauses,
        [{clause,312,
          [{var,312,'_Id'},
           {match,312,
            {tuple,312,
             [{atom,312,lc},{var,312,'_L'},{var,312,'_E'},{var,312,'_Qs'}]},
            {var,312,'LC'}},
           {var,312,'Es'}],
          [],
          [{tuple,313,[{var,313,'LC'},{var,313,'Es'}]}]},
         {clause,314,
          [{var,314,'Id'},{var,314,'A'},{var,314,'Es'}],
          [],
          [{match,315,
            {var,315,'E'},
            {tuple,315,
             [{call,315,{atom,315,get_lcid_line},[{var,315,'Id'}]},
              {atom,29,qlc},
              {atom,315,not_a_query_list_comprehension}]}},
           {tuple,316,
            [{var,316,'A'},
             {cons,316,
              {tuple,316,
               [{call,316,{atom,316,get},[{atom,63,qlc_current_file}]},
                {cons,316,{var,316,'E'},{nil,316}}]},
              {var,316,'Es'}}]}]}]}}},
     {match,318,
      {tuple,318,[{var,318,'_'},{var,318,'E0'}]},
      {call,318,
       {atom,318,qlc_mapfold},
       [{var,318,'F'},{nil,318},{var,318,'Forms'},{var,318,'State'}]}},
     {var,319,'E0'}]}]},
 {function,321,lc_nodes,2,
  [{clause,321,
    [{var,321,'E'},{var,321,'NodeInfo'}],
    [],
    [{call,322,
      {remote,322,{atom,322,erl_parse},{atom,322,map_anno}},
      [{'fun',322,
        {clauses,
         [{clause,322,
           [{var,322,'Anno'}],
           [],
           [{match,323,
             {var,323,'N'},
             {call,323,
              {remote,323,{atom,323,erl_anno},{atom,323,line}},
              [{var,323,'Anno'}]}},
            {match,324,
             {cons,324,{tuple,324,[{var,324,'N'},{var,324,'Data'}]},{nil,324}},
             {call,324,
              {remote,324,{atom,324,ets},{atom,324,lookup}},
              [{var,324,'NodeInfo'},{var,324,'N'}]}},
            {match,325,
             {var,325,'NData'},
             {map,325,
              {var,325,'Data'},
              [{map_field_assoc,325,{atom,325,inside_lc},{atom,325,true}}]}},
            {match,326,
             {atom,326,true},
             {call,326,
              {remote,326,{atom,326,ets},{atom,326,insert}},
              [{var,326,'NodeInfo'},
               {tuple,326,[{var,326,'N'},{var,326,'NData'}]}]}},
            {var,327,'Anno'}]}]}},
       {var,328,'E'}]}]}]},
 {function,330,used_genvar_messages,2,
  [{clause,330,
    [{var,330,'MsL'},{var,330,'S'}],
    [],
    [{lc,331,
      {tuple,331,
       [{var,331,'File'},
        {cons,331,
         {tuple,331,
          [{var,331,'Loc'},
           {atom,29,qlc},
           {tuple,331,[{atom,331,used_generator_variable},{var,331,'V'}]}]},
         {nil,331}}]},
      [{generate,332,
        {tuple,332,[{var,332,'_'},{var,332,'Ms'}]},
        {var,332,'MsL'}},
       {generate,333,
        {tuple,333,
         [{var,333,'XLoc'},
          {atom,333,erl_lint},
          {tuple,333,[{atom,333,unbound_var},{var,333,'_'}]}]},
        {var,333,'Ms'}},
       {generate,334,
        {tuple,334,[{var,334,'Loc'},{var,334,'File'},{var,334,'V'}]},
        {cons,334,
         {call,334,{atom,334,genvar_pos},[{var,334,'XLoc'},{var,334,'S'}]},
         {nil,334}}}]}]}]},
 {function,336,lc_messages,2,
  [{clause,336,
    [{var,336,'MsL'},{var,336,'NodeInfo'}],
    [],
    [{lc,337,
      {tuple,337,
       [{var,337,'File'},
        {lc,337,
         {tuple,337,[{var,337,'Loc'},{var,337,'Mod'},{var,337,'T'}]},
         [{generate,337,
           {tuple,337,[{var,337,'Loc'},{var,337,'Mod'},{var,337,'T'}]},
           {var,337,'Ms'}},
          {call,337,
           {atom,337,lc_loc},
           [{var,337,'Loc'},{var,337,'NodeInfo'}]}]}]},
      [{generate,338,
        {tuple,338,[{var,338,'File'},{var,338,'Ms'}]},
        {var,338,'MsL'}}]}]}]},
 {function,340,lc_loc,2,
  [{clause,340,
    [{var,340,'N'},{var,340,'NodeInfo'}],
    [],
    [{'case',341,
      {call,341,
       {remote,341,{atom,341,ets},{atom,341,lookup}},
       [{var,341,'NodeInfo'},{var,341,'N'}]},
      [{clause,342,
        [{cons,342,
          {tuple,342,
           [{var,342,'N'},
            {map,342,
             [{map_field_exact,342,{atom,342,inside_lc},{atom,342,true}}]}]},
          {nil,342}}],
        [],
        [{atom,343,true}]},
       {clause,344,
        [{cons,344,{tuple,344,[{var,344,'N'},{var,344,'_'}]},{nil,344}}],
        [],
        [{atom,345,false}]}]}]}]},
 {function,348,genvar_pos,2,
  [{clause,348,
    [{var,348,'Location'},{var,348,'S'}],
    [],
    [{'case',349,
      {call,349,
       {remote,349,{atom,349,ets},{atom,349,lookup}},
       [{call,349,
         {remote,349,{atom,349,erlang},{atom,349,element}},
         [{integer,349,7},{var,349,'S'}]},
        {var,349,'Location'}]},
      [{clause,350,
        [{cons,350,
          {tuple,350,
           [{var,350,'Location'},
            {map,350,
             [{map_field_exact,350,{atom,350,genvar_pos},{var,350,'Pos'}}]}]},
          {nil,350}}],
        [],
        [{var,351,'Pos'}]},
       {clause,352,[{nil,352}],[],[{var,353,'Location'}]}]}]}]},
 {function,368,intro_variables,2,
  [{clause,368,
    [{var,368,'FormsNoShadows'},{var,368,'State'}],
    [],
    [{match,369,
      {var,369,'NodeInfo'},
      {call,369,
       {remote,369,{atom,369,erlang},{atom,369,element}},
       [{integer,369,7},{var,369,'State'}]}},
     {match,370,
      {var,370,'Fun'},
      {'fun',370,
       {clauses,
        [{clause,370,
          [{var,370,'QId'},
           {match,370,
            {tuple,370,
             [{var,370,'T'},{var,370,'_L'},{var,370,'P0'},{var,370,'_E0'}]},
            {var,370,'Q'}},
           {tuple,370,[{var,370,'GVs'},{var,370,'QIds'}]},
           {var,370,'Foo'}],
          [[{op,370,'=:=',{var,370,'T'},{atom,370,b_generate}}],
           [{op,371,'=:=',{var,371,'T'},{atom,371,generate}}]],
          [{match,372,
            {var,372,'PVs'},
            {call,372,
             {remote,372,{atom,372,qlc},{atom,372,var_ufold}},
             [{'fun',372,
               {clauses,
                [{clause,372,
                  [{tuple,372,[{atom,372,var},{var,372,'_'},{var,372,'V'}]}],
                  [],
                  [{tuple,372,[{var,372,'QId'},{var,372,'V'}]}]}]}},
              {var,372,'P0'}]}},
           {tuple,373,
            [{var,373,'Q'},
             {tuple,373,
              [{op,373,'++',
                {call,373,
                 {remote,373,{atom,373,ordsets},{atom,373,to_list}},
                 [{var,373,'PVs'}]},
                {var,373,'GVs'}},
               {cons,373,
                {tuple,373,[{var,373,'QId'},{nil,373}]},
                {var,373,'QIds'}}]},
             {var,373,'Foo'}]}]},
         {clause,374,
          [{var,374,'QId'},
           {var,374,'Filter0'},
           {tuple,374,[{var,374,'GVs'},{var,374,'QIds'}]},
           {var,374,'Foo'}],
          [],
          [{match,378,
            {var,378,'Vs'},
            {call,378,
             {remote,378,{atom,378,ordsets},{atom,378,to_list}},
             [{call,378,
               {remote,378,{atom,378,qlc},{atom,378,vars}},
               [{var,378,'Filter0'}]}]}},
           {match,379,{var,379,'AnyLine'},{call,379,{atom,379,anno0},[]}},
           {match,380,
            {var,380,'Vars'},
            {lc,380,
             {tuple,380,[{atom,380,var},{var,380,'AnyLine'},{var,380,'V'}]},
             [{generate,380,{var,380,'V'},{var,380,'Vs'}}]}},
           {match,381,
            {var,381,'LC'},
            {call,381,
             {atom,381,embed_vars},
             [{var,381,'Vars'},{var,381,'AnyLine'}]}},
           {match,382,
            {var,382,'LC1'},
            {call,382,
             {atom,382,intro_anno},
             [{var,382,'LC'},
              {atom,382,before},
              {var,382,'QId'},
              {var,382,'NodeInfo'}]}},
           {match,383,
            {var,383,'LC2'},
            {call,383,
             {atom,383,intro_anno},
             [{var,383,'LC'},
              {atom,383,'after'},
              {var,383,'QId'},
              {var,383,'NodeInfo'}]}},
           {match,384,
            {var,384,'Filter'},
            {tuple,384,
             [{atom,384,block},
              {var,384,'AnyLine'},
              {cons,384,
               {var,384,'LC1'},
               {cons,384,
                {var,384,'Filter0'},
                {cons,384,{var,384,'LC2'},{nil,384}}}}]}},
           {tuple,385,
            [{var,385,'Filter'},
             {tuple,385,
              [{var,385,'GVs'},
               {cons,385,
                {tuple,385,[{var,385,'QId'},{nil,385}]},
                {var,385,'QIds'}}]},
             {var,385,'Foo'}]}]}]}}},
     {match,387,{var,387,'Acc0'},{tuple,387,[{nil,387},{nil,387}]}},
     {match,388,
      {tuple,388,
       [{var,388,'FForms'},
        {tuple,388,[{var,388,'GenVars'},{var,388,'QIds'}]}]},
      {call,389,
       {atom,389,qual_fold},
       [{var,389,'Fun'},
        {var,389,'Acc0'},
        {nil,389},
        {var,389,'FormsNoShadows'},
        {var,389,'State'}]}},
     {match,392,
      {var,392,'Es0'},
      {call,392,{atom,392,compile_errors},[{var,392,'FForms'}]}},
     {match,395,
      {var,395,'Before'},
      {lc,395,
       {tuple,395,[{var,395,'QId'},{var,395,'V'}]},
       [{generate,396,
         {tuple,396,
          [{var,396,'L'},
           {atom,396,erl_lint},
           {tuple,396,[{atom,396,unbound_var},{var,396,'V'}]}]},
         {var,396,'Es0'}},
        {generate,397,
         {tuple,397,
          [{var,397,'_L'},{tuple,397,[{var,397,'QId'},{atom,397,before}]}]},
         {call,397,
          {remote,397,{atom,397,ets},{atom,397,lookup}},
          [{var,397,'NodeInfo'},{var,397,'L'}]}}]}},
     {match,398,
      {var,398,'After'},
      {lc,398,
       {tuple,398,[{var,398,'QId'},{var,398,'V'}]},
       [{generate,399,
         {tuple,399,
          [{var,399,'L'},
           {atom,399,erl_lint},
           {tuple,399,[{atom,399,unbound_var},{var,399,'V'}]}]},
         {var,399,'Es0'}},
        {generate,400,
         {tuple,400,
          [{var,400,'_L'},{tuple,400,[{var,400,'QId'},{atom,400,'after'}]}]},
         {call,400,
          {remote,400,{atom,400,ets},{atom,400,lookup}},
          [{var,400,'NodeInfo'},{var,400,'L'}]}}]}},
     {match,401,
      {var,401,'Unsafe'},
      {lc,401,
       {tuple,401,[{var,401,'QId'},{var,401,'V'}]},
       [{generate,402,
         {tuple,402,
          [{var,402,'L'},
           {atom,402,erl_lint},
           {tuple,402,
            [{atom,402,unsafe_var},{var,402,'V'},{var,402,'_Where'}]}]},
         {var,402,'Es0'}},
        {generate,403,
         {tuple,403,
          [{var,403,'_L'},{tuple,403,[{var,403,'QId'},{atom,403,'after'}]}]},
         {call,403,
          {remote,403,{atom,403,ets},{atom,403,lookup}},
          [{var,403,'NodeInfo'},{var,403,'L'}]}}]}},
     {atom,55,ok},
     {atom,55,ok},
     {atom,55,ok},
     {atom,55,ok},
     {match,408,
      {var,408,'IV'},
      {op,408,'--',
       {op,408,'--',{var,408,'Before'},{var,408,'After'}},
       {var,408,'Unsafe'}}},
     {match,409,
      {var,409,'I1'},
      {call,409,
       {atom,409,family},
       [{op,409,'++',{var,409,'IV'},{var,409,'GenVars'}}]}},
     {call,410,
      {remote,410,{atom,410,sofs},{atom,410,to_external}},
      [{call,410,
        {remote,410,{atom,410,sofs},{atom,410,family_union}},
        [{call,410,
          {remote,410,{atom,410,sofs},{atom,410,family}},
          [{var,410,'QIds'}]},
         {var,410,'I1'}]}]}]}]},
 {function,412,intro_anno,4,
  [{clause,412,
    [{var,412,'LC'},{var,412,'Where'},{var,412,'QId'},{var,412,'NodeInfo'}],
    [],
    [{match,413,
      {var,413,'Data'},
      {tuple,413,[{var,413,'QId'},{var,413,'Where'}]}},
     {match,414,
      {var,414,'Fun'},
      {'fun',414,
       {clauses,
        [{clause,414,
          [{var,414,'Anno'}],
          [],
          [{match,415,
            {var,415,'Location'},
            {call,415,
             {remote,415,{atom,415,erl_anno},{atom,415,location}},
             [{var,415,'Anno'}]}},
           {match,416,
            {atom,416,true},
            {call,416,
             {remote,416,{atom,416,ets},{atom,416,insert}},
             [{var,416,'NodeInfo'},
              {tuple,416,[{var,416,'Location'},{var,416,'Data'}]}]}},
           {var,417,'Anno'}]}]}}},
     {call,419,
      {remote,419,{atom,419,erl_parse},{atom,419,map_anno}},
      [{var,419,'Fun'},
       {call,419,
        {atom,419,save_anno},
        [{var,419,'LC'},{var,419,'NodeInfo'}]}]}]}]},
 {function,421,compile_errors,1,
  [{clause,421,
    [{var,421,'FormsNoShadows'}],
    [],
    [{'case',422,
      {call,422,
       {atom,422,compile_forms},
       [{var,422,'FormsNoShadows'},{nil,422}]},
      [{clause,423,
        [{tuple,423,[{nil,423},{var,423,'_Warnings'}]}],
        [],
        [{nil,424}]},
       {clause,425,
        [{tuple,425,[{var,425,'Errors'},{var,425,'_Warnings'}]}],
        [],
        [{atom,55,ok},
         {call,427,
          {remote,427,{atom,427,lists},{atom,427,flatmap}},
          [{'fun',427,
            {clauses,
             [{clause,427,
               [{tuple,427,[{var,427,'_File'},{var,427,'Es'}]}],
               [],
               [{var,427,'Es'}]}]}},
           {var,427,'Errors'}]}]}]}]}]},
 {function,430,compile_forms,2,
  [{clause,430,
    [{var,430,'Forms0'},{var,430,'Options'}],
    [],
    [{match,431,
      {var,431,'Exclude'},
      {'fun',431,
       {clauses,
        [{clause,431,[{atom,431,eof}],[],[{atom,431,true}]},
         {clause,432,[{atom,432,warning}],[],[{atom,432,true}]},
         {clause,433,[{atom,433,error}],[],[{atom,433,true}]},
         {clause,434,[{var,434,'_'}],[],[{atom,434,false}]}]}}},
     {match,436,
      {var,436,'Forms'},
      {op,437,'++',
       {lc,436,
        {var,436,'F'},
        [{generate,436,{var,436,'F'},{var,436,'Forms0'}},
         {op,436,'not',
          {call,436,
           {var,436,'Exclude'},
           [{call,436,{atom,436,element},[{integer,436,1},{var,436,'F'}]}]}}]},
       {cons,437,
        {tuple,437,[{atom,437,eof},{call,437,{atom,437,anno0},[]}]},
        {nil,437}}}},
     {'try',438,
      [{'case',439,
        {call,439,
         {remote,439,{atom,439,compile},{atom,439,noenv_forms}},
         [{var,439,'Forms'},
          {call,439,{atom,439,compile_options},[{var,439,'Options'}]}]},
        [{clause,440,
          [{tuple,440,[{atom,440,ok},{var,440,'_ModName'},{var,440,'Ws0'}]}],
          [],
          [{tuple,441,[{nil,441},{var,441,'Ws0'}]}]},
         {clause,442,
          [{tuple,442,[{atom,442,error},{var,442,'Es0'},{var,442,'Ws0'}]}],
          [],
          [{tuple,443,[{var,443,'Es0'},{var,443,'Ws0'}]}]}]}],
      [],
      [{clause,445,
        [{tuple,445,[{var,445,'_'},{var,445,'_'},{var,445,'_'}]}],
        [],
        [{'case',447,
          {call,447,
           {remote,447,{atom,447,erl_lint},{atom,447,module}},
           [{var,447,'Forms'},
            {call,447,{atom,447,lint_options},[{var,447,'Options'}]}]},
          [{clause,448,
            [{tuple,448,[{atom,448,ok},{var,448,'Warnings'}]}],
            [],
            [{tuple,449,[{nil,449},{var,449,'Warnings'}]}]},
           {clause,450,
            [{tuple,450,
              [{atom,450,error},{var,450,'Errors'},{var,450,'Warnings'}]}],
            [],
            [{tuple,451,[{var,451,'Errors'},{var,451,'Warnings'}]}]}]}]}],
      []}]}]},
 {function,455,compile_options,1,
  [{clause,455,
    [{var,455,'Options'}],
    [],
    [{match,456,
      {var,456,'No'},
      {cons,456,
       {atom,456,report},
       {cons,456,
        {atom,456,report_errors},
        {cons,456,
         {atom,456,report_warnings},
         {cons,456,
          {atom,456,'P'},
          {cons,456,
           {atom,456,'E'},
           {call,456,{atom,456,bitstr_options},[]}}}}}}},
     {cons,457,
      {atom,457,strong_validation},
      {cons,457,
       {atom,457,return},
       {call,457,
        {atom,457,skip_options},
        [{var,457,'No'},{var,457,'Options'}]}}}]}]},
 {function,459,lint_options,1,
  [{clause,459,
    [{var,459,'Options'}],
    [],
    [{call,460,
      {atom,460,skip_options},
      [{call,460,{atom,460,bitstr_options},[]},{var,460,'Options'}]}]}]},
 {function,462,skip_options,2,
  [{clause,462,
    [{var,462,'Skip'},{var,462,'Options'}],
    [],
    [{lc,463,
      {var,463,'O'},
      [{generate,463,{var,463,'O'},{var,463,'Options'}},
       {op,463,'not',
        {call,463,
         {remote,463,{atom,463,lists},{atom,463,member}},
         [{var,463,'O'},{var,463,'Skip'}]}}]}]}]},
 {function,465,bitstr_options,0,
  [{clause,465,[],[],
    [{cons,466,
      {atom,466,binary_comprehension},
      {cons,466,{atom,466,bitlevel_binaries},{nil,466}}}]}]},
 {function,477,used_genvar_check,2,
  [{clause,477,
    [{var,477,'FormsNoShadows'},{var,477,'State'}],
    [],
    [{match,478,
      {var,478,'NodeInfo'},
      {call,478,
       {remote,478,{atom,478,erlang},{atom,478,element}},
       [{integer,478,7},{var,478,'State'}]}},
     {match,479,
      {var,479,'F'},
      {'fun',479,
       {clauses,
        [{clause,479,
          [{var,479,'QId'},
           {match,479,
            {tuple,479,
             [{var,479,'T'},{var,479,'Ln'},{var,479,'_P'},{var,479,'LE'}]},
            {var,479,'Q'}},
           {tuple,479,[{var,479,'QsIVs0'},{var,479,'Exprs0'}]},
           {var,479,'IVsSoFar0'}],
          [[{op,480,'=:=',{var,480,'T'},{atom,480,b_generate}}],
           [{op,480,'=:=',{var,480,'T'},{atom,480,generate}}]],
          [{match,481,
            {var,481,'F'},
            {'fun',481,
             {clauses,
              [{clause,481,
                [{var,481,'Var'}],
                [],
                [{match,482,
                  {tuple,482,
                   [{atom,482,var},{var,482,'Anno0'},{var,482,'OrigVar'}]},
                  {call,483,
                   {atom,483,undo_no_shadows},
                   [{var,483,'Var'},{var,483,'State'}]}},
                 {match,484,
                  {tuple,484,[{atom,484,var},{var,484,'Anno'},{var,484,'_'}]},
                  {match,484,
                   {var,484,'NewVar'},
                   {call,484,
                    {atom,484,save_anno},
                    [{var,484,'Var'},{var,484,'NodeInfo'}]}}},
                 {match,485,
                  {var,485,'Location0'},
                  {call,485,
                   {remote,485,{atom,485,erl_anno},{atom,485,location}},
                   [{var,485,'Anno0'}]}},
                 {match,486,
                  {var,486,'Location'},
                  {call,486,
                   {remote,486,{atom,486,erl_anno},{atom,486,location}},
                   [{var,486,'Anno'}]}},
                 {match,487,
                  {cons,487,
                   {tuple,487,[{var,487,'Location'},{var,487,'Data'}]},
                   {nil,487}},
                  {call,488,
                   {remote,488,{atom,488,ets},{atom,488,lookup}},
                   [{var,488,'NodeInfo'},{var,488,'Location'}]}},
                 {match,489,
                  {var,489,'Pos'},
                  {tuple,489,
                   [{var,489,'Location0'},
                    {call,489,{atom,489,get},[{atom,63,qlc_current_file}]},
                    {var,489,'OrigVar'}]}},
                 {match,490,
                  {var,490,'NData'},
                  {map,490,
                   {var,490,'Data'},
                   [{map_field_assoc,490,
                     {atom,490,genvar_pos},
                     {var,490,'Pos'}}]}},
                 {match,491,
                  {atom,491,true},
                  {call,491,
                   {remote,491,{atom,491,ets},{atom,491,insert}},
                   [{var,491,'NodeInfo'},
                    {tuple,491,[{var,491,'Location'},{var,491,'NData'}]}]}},
                 {var,492,'NewVar'}]}]}}},
           {match,494,
            {var,494,'Vs'},
            {lc,494,
             {var,494,'Var'},
             [{generate,494,
               {match,494,
                {tuple,494,[{atom,494,var},{var,494,'_'},{var,494,'V'}]},
                {var,494,'Var'}},
               {call,494,
                {remote,494,{atom,494,qlc},{atom,494,var_fold}},
                [{var,494,'F'},{nil,494},{var,494,'LE'}]}},
              {call,495,
               {remote,495,{atom,495,lists},{atom,495,member}},
               [{var,495,'V'},{var,495,'IVsSoFar0'}]}]}},
           {match,496,
            {var,496,'Exprs'},
            {'case',496,
             {var,496,'Vs'},
             [{clause,497,[{nil,497}],[],[{var,497,'Exprs0'}]},
              {clause,498,
               [{var,498,'_'}],
               [],
               [{cons,498,
                 {call,498,
                  {atom,498,embed_vars},
                  [{var,498,'Vs'},{var,498,'Ln'}]},
                 {var,498,'Exprs0'}}]}]}},
           {match,500,
            {tuple,500,[{var,500,'QsIVs'},{var,500,'IVsSoFar'}]},
            {call,500,
             {atom,500,q_intro_vars},
             [{var,500,'QId'},{var,500,'QsIVs0'},{var,500,'IVsSoFar0'}]}},
           {tuple,501,
            [{var,501,'Q'},
             {tuple,501,[{var,501,'QsIVs'},{var,501,'Exprs'}]},
             {var,501,'IVsSoFar'}]}]},
         {clause,502,
          [{var,502,'QId'},
           {var,502,'Filter'},
           {tuple,502,[{var,502,'QsIVs0'},{var,502,'Exprs'}]},
           {var,502,'IVsSoFar0'}],
          [],
          [{match,503,
            {tuple,503,[{var,503,'QsIVs'},{var,503,'IVsSoFar'}]},
            {call,503,
             {atom,503,q_intro_vars},
             [{var,503,'QId'},{var,503,'QsIVs0'},{var,503,'IVsSoFar0'}]}},
           {tuple,504,
            [{var,504,'Filter'},
             {tuple,504,[{var,504,'QsIVs'},{var,504,'Exprs'}]},
             {var,504,'IVsSoFar'}]}]}]}}},
     {match,506,
      {var,506,'Acc0'},
      {tuple,506,
       [{call,506,
         {remote,506,{atom,506,erlang},{atom,506,element}},
         [{integer,506,6},{var,506,'State'}]},
        {cons,506,
         {tuple,506,
          [{atom,506,atom},{call,506,{atom,506,anno0},[]},{atom,506,true}]},
         {nil,506}}]}},
     {match,507,
      {tuple,507,[{var,507,'_'},{tuple,507,[{nil,507},{var,507,'Exprs'}]}]},
      {call,507,
       {atom,507,qual_fold},
       [{var,507,'F'},
        {var,507,'Acc0'},
        {nil,507},
        {var,507,'FormsNoShadows'},
        {var,507,'State'}]}},
     {match,508,
      {var,508,'FunctionNames'},
      {lc,508,
       {var,508,'Name'},
       [{generate,508,
         {tuple,508,
          [{atom,508,function},
           {var,508,'_'},
           {var,508,'Name'},
           {var,508,'_'},
           {var,508,'_'}]},
         {var,508,'FormsNoShadows'}}]}},
     {match,509,
      {var,509,'UniqueFName'},
      {call,509,
       {remote,509,{atom,509,qlc},{atom,509,aux_name}},
       [{atom,509,used_genvar},
        {integer,509,1},
        {call,509,
         {remote,509,{atom,509,sets},{atom,509,from_list}},
         [{var,509,'FunctionNames'}]}]}},
     {match,510,{var,510,'A'},{call,510,{atom,510,anno0},[]}},
     {tuple,511,
      [{atom,511,function},
       {var,511,'A'},
       {var,511,'UniqueFName'},
       {integer,511,0},
       {cons,511,
        {tuple,511,
         [{atom,511,clause},
          {var,511,'A'},
          {nil,511},
          {nil,511},
          {call,511,
           {remote,511,{atom,511,lists},{atom,511,reverse}},
           [{var,511,'Exprs'}]}]},
        {nil,511}}]}]}]},
 {function,513,q_intro_vars,3,
  [{clause,513,
    [{var,513,'QId'},
     {cons,513,
      {tuple,513,[{var,513,'QId'},{var,513,'IVs'}]},
      {var,513,'QsIVs'}},
     {var,513,'IVsSoFar'}],
    [],
    [{tuple,513,
      [{var,513,'QsIVs'},
       {op,513,'++',{var,513,'IVs'},{var,513,'IVsSoFar'}}]}]}]},
 {function,608,transform,2,
  [{clause,608,
    [{var,608,'FormsNoShadows'},{var,608,'State'}],
    [],
    [{match,609,
      {var,609,'_'},
      {call,609,
       {remote,609,{atom,609,erlang},{atom,609,system_flag}},
       [{atom,609,backtrace_depth},{integer,609,500}]}},
     {match,610,
      {var,610,'IntroVars'},
      {call,610,
       {remote,610,{atom,610,erlang},{atom,610,element}},
       [{integer,610,6},{var,610,'State'}]}},
     {match,611,
      {var,611,'AllVars'},
      {call,611,
       {remote,611,{atom,611,sets},{atom,611,from_list}},
       [{call,611,
         {remote,611,{atom,611,ordsets},{atom,611,to_list}},
         [{call,611,
           {remote,611,{atom,611,qlc},{atom,611,vars}},
           [{var,611,'FormsNoShadows'}]}]}]}},
     {atom,55,ok},
     {match,613,
      {var,613,'F1'},
      {'fun',613,
       {clauses,
        [{clause,613,
          [{var,613,'QId'},
           {tuple,613,
            [{atom,613,generate},{var,613,'_'},{var,613,'P'},{var,613,'LE'}]},
           {var,613,'Foo'},
           {tuple,613,[{var,613,'GoI'},{var,613,'SI'}]}],
          [],
          [{tuple,614,
            [{tuple,614,
              [{var,614,'QId'},
               {var,614,'GoI'},
               {var,614,'SI'},
               {tuple,614,[{atom,614,gen},{var,614,'P'},{var,614,'LE'}]}]},
             {var,614,'Foo'},
             {tuple,614,
              [{op,614,'+',{var,614,'GoI'},{integer,614,3}},
               {op,614,'+',{var,614,'SI'},{integer,614,2}}]}]}]},
         {clause,615,
          [{var,615,'QId'},
           {var,615,'F'},
           {var,615,'Foo'},
           {tuple,615,[{var,615,'GoI'},{var,615,'SI'}]}],
          [],
          [{tuple,616,
            [{tuple,616,
              [{var,616,'QId'},
               {var,616,'GoI'},
               {var,616,'SI'},
               {tuple,616,[{atom,616,fil},{var,616,'F'}]}]},
             {var,616,'Foo'},
             {tuple,616,
              [{op,616,'+',{var,616,'GoI'},{integer,616,2}},
               {op,616,'+',{var,616,'SI'},{integer,616,1}}]}]}]}]}}},
     {match,618,
      {var,618,'TemplS'},
      {call,618,{remote,618,{atom,618,qlc},{atom,618,template_state}},[]}},
     {match,619,
      {var,619,'GoState'},
      {tuple,619,
       [{op,619,'+',{var,619,'TemplS'},{integer,619,1}},
        {op,619,'+',{var,619,'TemplS'},{integer,619,1}}]}},
     {match,620,
      {tuple,620,[{var,620,'ModifiedForms1'},{var,620,'_'}]},
      {call,621,
       {atom,621,qual_fold},
       [{var,621,'F1'},
        {nil,621},
        {var,621,'GoState'},
        {var,621,'FormsNoShadows'},
        {var,621,'State'}]}},
     {match,627,
      {tuple,627,[{var,627,'_'},{var,627,'Source0'}]},
      {call,627,
       {atom,627,qual_fold},
       [{'fun',627,
         {clauses,
          [{clause,627,
            [{var,627,'_QId'},
             {match,627,
              {tuple,627,
               [{atom,627,generate},
                {var,627,'_'},
                {var,627,'_P'},
                {var,627,'_E'}]},
              {var,627,'Q'}},
             {var,627,'Dict'},
             {var,627,'Foo'}],
            [],
            [{tuple,628,[{var,628,'Q'},{var,628,'Dict'},{var,628,'Foo'}]}]},
           {clause,629,
            [{var,629,'QId'},{var,629,'F'},{var,629,'Dict'},{var,629,'Foo'}],
            [],
            [{tuple,630,
              [{var,630,'F'},
               {call,630,
                {remote,630,{atom,630,dict},{atom,630,store}},
                [{var,630,'QId'},{var,630,'F'},{var,630,'Dict'}]},
               {var,630,'Foo'}]}]}]}},
        {call,631,{remote,631,{atom,631,dict},{atom,631,new}},[]},
        {nil,631},
        {var,631,'FormsNoShadows'},
        {var,631,'State'}]}},
     {match,632,
      {tuple,632,[{var,632,'_'},{var,632,'Source'}]},
      {call,632,
       {atom,632,qlc_mapfold},
       [{'fun',632,
         {clauses,
          [{clause,632,
            [{var,632,'Id'},
             {match,632,
              {tuple,632,
               [{atom,632,lc},{var,632,'_L'},{var,632,'E'},{var,632,'_Qs'}]},
              {var,632,'LC'}},
             {var,632,'Dict'}],
            [],
            [{tuple,633,
              [{var,633,'LC'},
               {call,633,
                {remote,633,{atom,633,dict},{atom,633,store}},
                [{var,633,'Id'},{var,633,'E'},{var,633,'Dict'}]}]}]}]}},
        {var,634,'Source0'},
        {var,634,'FormsNoShadows'},
        {var,634,'State'}]}},
     {match,638,
      {var,638,'F2'},
      {'fun',638,
       {clauses,
        [{clause,638,
          [{var,638,'Id'},
           {tuple,638,
            [{atom,638,lc},{var,638,'_L'},{var,638,'E'},{var,638,'Qs'}]},
           {tuple,638,[{var,638,'IntroVs0'},{var,638,'XWarn0'}]}],
          [],
          [{match,639,
            {var,639,'LcNo'},
            {call,639,{atom,639,get_lcid_no},[{var,639,'Id'}]}},
           {match,640,
            {var,640,'LcL'},
            {call,640,{atom,640,get_lcid_line},[{var,640,'Id'}]}},
           {match,641,
            {cons,641,
             {var,641,'RL'},
             {cons,641,
              {var,641,'Fun'},
              {cons,641,
               {var,641,'Go'},
               {cons,641,
                {var,641,'NGV'},
                {cons,641,
                 {var,641,'S0'},
                 {cons,641,
                  {var,641,'RL0'},
                  {cons,641,
                   {var,641,'Go0'},
                   {cons,641,
                    {var,641,'AT'},
                    {cons,641,{var,641,'Err'},{nil,641}}}}}}}}}},
            {call,642,
             {atom,642,aux_vars},
             [{cons,642,
               {atom,642,'RL'},
               {cons,642,
                {atom,642,'Fun'},
                {cons,642,
                 {atom,642,'Go'},
                 {cons,642,
                  {atom,642,'C'},
                  {cons,642,
                   {atom,642,'S0'},
                   {cons,642,
                    {atom,642,'RL0'},
                    {cons,642,
                     {atom,642,'Go0'},
                     {cons,642,
                      {atom,642,'AT'},
                      {cons,642,{atom,642,'E'},{nil,642}}}}}}}}}},
              {var,643,'LcNo'},
              {var,643,'AllVars'}]}},
           {atom,55,ok},
           {match,645,
            {tuple,645,[{var,645,'IntroVs'},{var,645,'RestIntroVs'}]},
            {call,645,
             {remote,645,{atom,645,lists},{atom,645,split}},
             [{call,645,{atom,645,length},[{var,645,'Qs'}]},
              {var,645,'IntroVs0'}]}},
           {match,646,
            {var,646,'IntroVs_Qs'},
            {call,646,
             {remote,646,{atom,646,lists},{atom,646,zip}},
             [{var,646,'IntroVs'},{var,646,'Qs'}]}},
           {match,647,
            {var,647,'F'},
            {'fun',647,
             {clauses,
              [{clause,647,
                [{tuple,647,
                  [{tuple,647,[{var,647,'QId'},{var,647,'IVs'}]},
                   {tuple,647,
                    [{var,647,'QId'},
                     {var,647,'GoI'},
                     {var,647,'SI'},
                     {tuple,647,
                      [{atom,647,gen},{var,647,'P'},{var,647,'LE'}]}]}]},
                 {var,647,'AllIVs0'}],
                [],
                [{match,648,
                  {var,648,'GV'},
                  {call,648,
                   {atom,648,aux_var},
                   [{atom,648,'C'},
                    {var,648,'LcNo'},
                    {call,648,
                     {remote,648,{atom,648,erlang},{atom,648,element}},
                     [{integer,648,3},{var,648,'QId'}]},
                    {integer,648,1},
                    {var,648,'AllVars'}]}},
                 {match,649,
                  {var,649,'GenIVs'},
                  {cons,649,{var,649,'GV'},{var,649,'IVs'}}},
                 {tuple,650,
                  [{tuple,650,
                    [{var,650,'QId'},
                     {tuple,650,
                      [{var,650,'GenIVs'},
                       {tuple,650,
                        [{tuple,650,
                          [{atom,650,gen},
                           {var,650,'P'},
                           {var,650,'LE'},
                           {var,650,'GV'}]},
                         {var,650,'GoI'},
                         {var,650,'SI'}]}]}]},
                   {op,651,'++',{var,651,'GenIVs'},{var,651,'AllIVs0'}}]}]},
               {clause,652,
                [{tuple,652,
                  [{tuple,652,[{var,652,'QId'},{var,652,'IVs'}]},
                   {tuple,652,
                    [{var,652,'QId'},
                     {var,652,'GoI'},
                     {var,652,'SI'},
                     {tuple,652,[{atom,652,fil},{var,652,'F'}]}]}]},
                 {var,652,'AllIVs0'}],
                [],
                [{tuple,653,
                  [{tuple,653,
                    [{var,653,'QId'},
                     {tuple,653,
                      [{var,653,'IVs'},
                       {tuple,653,
                        [{tuple,653,[{atom,653,fil},{var,653,'F'}]},
                         {var,653,'GoI'},
                         {var,653,'SI'}]}]}]},
                   {op,654,'++',{var,654,'IVs'},{var,654,'AllIVs0'}}]}]}]}}},
           {match,656,
            {tuple,656,[{var,656,'QCs'},{var,656,'AllIVs'}]},
            {call,656,
             {remote,656,{atom,656,lists},{atom,656,mapfoldl}},
             [{var,656,'F'},{nil,656},{var,656,'IntroVs_Qs'}]}},
           {match,658,
            {var,658,'Dependencies'},
            {call,658,
             {atom,658,qualifier_dependencies},
             [{var,658,'Qs'},{var,658,'IntroVs'}]}},
           {match,659,
            {var,659,'L'},
            {call,659,{atom,659,no_compiler_warning},[{var,659,'LcL'}]}},
           {match,661,
            {tuple,660,
             [{var,660,'EqColumnConstants'},
              {var,660,'EqualColumnConstants'},
              {var,661,'ExtraConsts'},
              {var,661,'SizeInfo'}]},
            {call,662,
             {atom,662,constants_and_sizes},
             [{var,662,'Qs'},
              {var,662,'E'},
              {var,662,'Dependencies'},
              {var,662,'AllIVs'},
              {var,662,'State'}]}},
           {match,663,
            {tuple,663,[{var,663,'JoinInfo'},{var,663,'XWarn'}]},
            {call,664,
             {atom,664,join_kind},
             [{var,664,'Qs'},
              {var,664,'LcL'},
              {var,664,'AllIVs'},
              {var,664,'Dependencies'},
              {var,664,'State'}]}},
           {match,668,
            {var,668,'FWarn'},
            {call,668,
             {atom,668,warn_failing_qualifiers},
             [{var,668,'Qs'},
              {var,668,'AllIVs'},
              {var,668,'Dependencies'},
              {var,669,'State'}]}},
           {match,670,
            {var,670,'JQs'},
            {call,670,
             {atom,670,join_quals},
             [{var,670,'JoinInfo'},
              {var,670,'QCs'},
              {var,670,'L'},
              {var,670,'LcNo'},
              {var,670,'ExtraConsts'},
              {var,670,'AllVars'}]}},
           {match,671,
            {var,671,'XQCs'},
            {op,671,'++',{var,671,'QCs'},{var,671,'JQs'}}},
           {match,672,
            {var,672,'Cs0'},
            {call,672,
             {atom,672,clauses},
             [{var,672,'XQCs'},
              {var,672,'RL'},
              {var,672,'Fun'},
              {var,672,'Go'},
              {var,672,'NGV'},
              {var,672,'Err'},
              {var,672,'AllIVs'},
              {var,672,'State'}]}},
           {match,673,
            {var,673,'Template'},
            {call,673,
             {atom,673,template},
             [{var,673,'E'},
              {var,673,'RL'},
              {var,673,'Fun'},
              {var,673,'Go'},
              {var,673,'AT'},
              {var,673,'L'},
              {var,673,'AllIVs'},
              {var,673,'State'}]}},
           {match,674,
            {var,674,'Fin'},
            {call,674,
             {atom,674,final},
             [{var,674,'RL'},
              {var,674,'AllIVs'},
              {var,674,'L'},
              {var,674,'State'}]}},
           {match,675,
            {var,675,'FunC'},
            {tuple,675,
             [{atom,675,'fun'},
              {var,675,'L'},
              {tuple,675,
               [{atom,675,clauses},
                {op,675,'++',
                 {var,675,'Fin'},
                 {op,675,'++',{var,675,'Template'},{var,675,'Cs0'}}}]}]}},
           {match,676,
            {var,676,'As0'},
            {call,676,
             {atom,676,pack_args},
             [{call,676,
               {atom,676,abst_vars},
               [{cons,676,
                 {var,676,'S0'},
                 {cons,676,
                  {var,676,'RL0'},
                  {cons,676,
                   {var,676,'Fun'},
                   {cons,676,
                    {var,676,'Go0'},
                    {call,677,
                     {atom,677,replace},
                     [{var,677,'AllIVs'},
                      {var,677,'AllIVs'},
                      {atom,677,nil}]}}}}},
                {var,678,'L'}]},
              {var,678,'L'},
              {var,678,'State'}]}},
           {match,679,
            {var,679,'AsW'},
            {call,679,
             {atom,679,abst_vars},
             [{cons,679,
               {var,679,'S0'},
               {cons,679,
                {var,679,'RL0'},
                {cons,679,{var,679,'Go0'},{nil,679}}}},
              {var,679,'L'}]}},
           {match,680,
            {var,680,'FunW'},
            {tuple,680,
             [{atom,680,'fun'},
              {var,680,'L'},
              {tuple,680,
               [{atom,680,clauses},
                {cons,680,
                 {tuple,680,
                  [{atom,680,clause},
                   {var,680,'L'},
                   {var,680,'AsW'},
                   {nil,680},
                   {cons,681,
                    {tuple,681,
                     [{atom,681,match},
                      {var,681,'L'},
                      {tuple,681,
                       [{atom,681,var},{var,681,'L'},{var,681,'Fun'}]},
                      {var,681,'FunC'}]},
                    {cons,682,
                     {tuple,682,
                      [{atom,682,call},
                       {var,682,'L'},
                       {tuple,682,
                        [{atom,682,var},{var,682,'L'},{var,682,'Fun'}]},
                       {var,682,'As0'}]},
                     {nil,682}}}]},
                 {nil,682}}]}]}},
           {match,683,
            {tuple,683,[{atom,683,ok},{var,683,'OrigE0'}]},
            {call,683,
             {remote,683,{atom,683,dict},{atom,683,find}},
             [{var,683,'Id'},{var,683,'Source'}]}},
           {match,684,
            {var,684,'OrigE'},
            {call,684,
             {atom,684,undo_no_shadows},
             [{var,684,'OrigE0'},{var,684,'State'}]}},
           {match,685,
            {var,685,'QCode'},
            {call,685,
             {atom,685,qcode},
             [{var,685,'OrigE'},
              {var,685,'XQCs'},
              {var,685,'Source'},
              {var,685,'L'},
              {var,685,'State'}]}},
           {match,686,
            {var,686,'Qdata'},
            {call,686,{atom,686,qdata},[{var,686,'XQCs'},{var,686,'L'}]}},
           {match,687,
            {var,687,'TemplateInfo'},
            {call,688,
             {atom,688,template_columns},
             [{var,688,'Qs'},
              {var,688,'E'},
              {var,688,'AllIVs'},
              {var,688,'Dependencies'},
              {var,688,'State'}]}},
           {match,690,
            {var,690,'MSQs'},
            {call,690,
             {atom,690,match_spec_quals},
             [{var,690,'E'},
              {var,690,'Dependencies'},
              {var,690,'Qs'},
              {var,690,'State'}]}},
           {match,691,
            {var,691,'Opt'},
            {call,691,
             {atom,691,opt_info},
             [{var,691,'TemplateInfo'},
              {var,691,'SizeInfo'},
              {var,691,'JoinInfo'},
              {var,691,'MSQs'},
              {var,691,'L'},
              {var,692,'EqColumnConstants'},
              {var,692,'EqualColumnConstants'}]}},
           {match,693,
            {var,693,'LCTuple'},
            {'case',694,
             {call,694,
              {atom,694,qlc_kind},
              [{var,694,'OrigE'},{var,694,'Qs'},{var,694,'State'}]},
             [{clause,695,
               [{atom,695,qlc}],
               [],
               [{tuple,696,
                 [{atom,696,tuple},
                  {var,696,'L'},
                  {cons,696,
                   {tuple,218,
                    [{atom,218,atom},{var,218,'L'},{atom,696,qlc_v1}]},
                   {cons,696,
                    {var,696,'FunW'},
                    {cons,696,
                     {var,696,'QCode'},
                     {cons,696,
                      {var,696,'Qdata'},
                      {cons,696,{var,696,'Opt'},{nil,696}}}}}}]}]},
              {clause,697,
               [{tuple,697,
                 [{atom,697,simple},
                  {var,697,'PL'},
                  {var,697,'LE'},
                  {var,697,'V'}]}],
               [],
               [{match,698,
                 {var,698,'Init'},
                 {call,698,{atom,698,closure},[{var,698,'LE'},{var,698,'L'}]}},
                {call,699,
                 {atom,699,simple},
                 [{var,699,'L'},
                  {var,699,'V'},
                  {var,699,'Init'},
                  {var,699,'PL'}]}]}]}},
           {match,701,
            {var,701,'LCFun'},
            {tuple,701,
             [{atom,701,'fun'},
              {var,701,'L'},
              {tuple,701,
               [{atom,701,clauses},
                {cons,701,
                 {tuple,701,
                  [{atom,701,clause},
                   {var,701,'L'},
                   {nil,701},
                   {nil,701},
                   {cons,701,{var,701,'LCTuple'},{nil,701}}]},
                 {nil,701}}]}]}},
           {match,702,
            {tuple,702,[{atom,702,tuple},{var,702,'_'},{var,702,'Fs0'}]},
            {call,702,
             {atom,702,abstr},
             [{tuple,702,
               [{atom,702,qlc_lc},{atom,702,undefined},{atom,702,undefined}]},
              {var,702,'L'}]}},
           {match,703,
            {var,703,'Fs'},
            {call,703,
             {atom,703,set_field},
             [{integer,703,2},{var,703,'Fs0'},{var,703,'LCFun'}]}},
           {tuple,704,
            [{tuple,704,[{atom,704,tuple},{var,704,'L'},{var,704,'Fs'}]},
             {tuple,704,
              [{var,704,'RestIntroVs'},
               {op,704,'++',
                {var,704,'FWarn'},
                {op,704,'++',{var,704,'XWarn'},{var,704,'XWarn0'}}}]}]}]}]}}},
     {match,706,
      {tuple,706,[{var,706,'NForms'},{tuple,706,[{nil,706},{var,706,'XW'}]}]},
      {call,706,
       {atom,706,qlc_mapfold},
       [{var,706,'F2'},
        {tuple,706,[{var,706,'IntroVars'},{nil,706}]},
        {var,706,'ModifiedForms1'},
        {var,706,'State'}]}},
     {call,707,{atom,707,display_forms},[{var,707,'NForms'}]},
     {tuple,708,
      [{var,708,'NForms'},
       {call,708,
        {remote,708,{atom,708,erlang},{atom,708,setelement}},
        [{integer,708,5},{var,708,'State'},{var,708,'XW'}]}]}]}]},
 {function,710,join_kind,5,
  [{clause,710,
    [{var,710,'Qs'},
     {var,710,'LcL'},
     {var,710,'AllIVs'},
     {var,710,'Dependencies'},
     {var,710,'State'}],
    [],
    [{match,711,
      {tuple,711,[{var,711,'EqualCols2'},{var,711,'EqualColsN'}]},
      {call,711,
       {atom,711,equal_columns},
       [{var,711,'Qs'},
        {var,711,'AllIVs'},
        {var,711,'Dependencies'},
        {var,711,'State'}]}},
     {match,712,
      {tuple,712,[{var,712,'MatchCols2'},{var,712,'MatchColsN'}]},
      {call,712,
       {atom,712,eq_columns},
       [{var,712,'Qs'},
        {var,712,'AllIVs'},
        {var,712,'Dependencies'},
        {var,712,'State'}]}},
     {match,713,
      {var,713,'Tables'},
      {call,713,
       {remote,713,{atom,713,lists},{atom,713,usort}},
       [{op,715,'++',
         {lc,714,
          {var,714,'T'},
          [{generate,714,
            {tuple,714,[{var,714,'C'},{var,714,'_Skip'}]},
            {var,714,'EqualCols2'}},
           {generate,714,
            {tuple,714,[{var,714,'T'},{var,714,'_'}]},
            {var,714,'C'}}]},
         {lc,715,
          {var,715,'T'},
          [{generate,715,
            {tuple,715,[{var,715,'C'},{var,715,'_Skip'}]},
            {var,715,'EqualCols2'}},
           {generate,715,{var,715,'T'},{var,715,'C'}},
           {call,715,{atom,715,is_integer},[{var,715,'T'}]}]}}]}},
     {'if',716,
      [{clause,717,[],
        [[{op,717,'=/=',{var,717,'EqualColsN'},{nil,717}}],
         [{op,717,'=/=',{var,717,'MatchColsN'},{nil,717}}]],
        [{tuple,718,
          [{nil,718},
           {cons,719,
            {tuple,719,
             [{call,719,{atom,719,get},[{atom,63,qlc_current_file}]},
              {cons,719,
               {tuple,719,
                [{var,719,'LcL'},{atom,29,qlc},{atom,719,too_complex_join}]},
               {nil,719}}]},
            {nil,719}}]}]},
       {clause,720,[],
        [[{op,720,'=:=',{var,720,'EqualCols2'},{nil,720}},
          {op,720,'=:=',{var,720,'MatchCols2'},{nil,720}}]],
        [{tuple,721,[{nil,721},{nil,721}]}]},
       {clause,722,[],
        [[{op,722,'>',
           {call,722,{atom,722,length},[{var,722,'Tables'}]},
           {integer,722,2}}]],
        [{tuple,723,
          [{nil,723},
           {cons,724,
            {tuple,724,
             [{call,724,{atom,724,get},[{atom,63,qlc_current_file}]},
              {cons,724,
               {tuple,724,
                [{var,724,'LcL'},{atom,29,qlc},{atom,724,too_many_joins}]},
               {nil,724}}]},
            {nil,724}}]}]},
       {clause,725,[],
        [[{op,725,'=:=',{var,725,'EqualCols2'},{var,725,'MatchCols2'}}]],
        [{tuple,726,[{var,726,'EqualCols2'},{nil,726}]}]},
       {clause,727,[],
        [[{atom,727,true}]],
        [{tuple,728,
          [{tuple,728,[{var,728,'EqualCols2'},{var,728,'MatchCols2'}]},
           {nil,728}]}]}]}]}]},
 {function,731,qlc_kind,3,
  [{clause,731,
    [{var,731,'OrigE'},{var,731,'Qs'},{var,731,'State'}],
    [],
    [{match,732,
      {tuple,732,[{var,732,'OrigFilterData'},{var,732,'OrigGeneratorData'}]},
      {call,733,
       {atom,733,qual_data},
       [{call,733,
         {atom,733,undo_no_shadows},
         [{var,733,'Qs'},{var,733,'State'}]}]}},
     {match,734,
      {var,734,'OrigAllFilters'},
      {call,734,{atom,734,filters_as_one},[{var,734,'OrigFilterData'}]}},
     {match,735,
      {tuple,735,[{var,735,'_FilterData'},{var,735,'GeneratorData'}]},
      {call,735,{atom,735,qual_data},[{var,735,'Qs'}]}},
     {'case',736,
      {tuple,736,
       [{var,736,'OrigE'},
        {var,736,'OrigAllFilters'},
        {var,736,'OrigGeneratorData'}]},
      [{clause,737,
        [{tuple,737,
          [{tuple,737,[{atom,737,var},{var,737,'_'},{var,737,'V'}]},
           {tuple,737,[{atom,737,atom},{var,737,'_'},{atom,737,true}]},
           {cons,737,
            {tuple,737,
             [{var,737,'_'},
              {tuple,737,
               [{atom,737,gen},
                {tuple,737,
                 [{atom,737,var},{var,737,'PatternL'},{var,737,'V'}]},
                {var,737,'_LE'}]}]},
            {nil,737}}]}],
        [],
        [{match,738,
          {cons,738,
           {tuple,738,
            [{var,738,'_'},
             {tuple,738,[{atom,738,gen},{var,738,'_'},{var,738,'LE'}]}]},
           {nil,738}},
          {var,738,'GeneratorData'}},
         {tuple,739,
          [{atom,739,simple},
           {var,739,'PatternL'},
           {var,739,'LE'},
           {var,739,'V'}]}]},
       {clause,740,[{var,740,'_'}],[],[{atom,741,qlc}]}]}]}]},
 {function,747,warn_failing_qualifiers,4,
  [{clause,747,
    [{var,747,'Qualifiers'},
     {var,747,'AllIVs'},
     {var,747,'Dependencies'},
     {var,747,'State'}],
    [],
    [{match,748,
      {tuple,748,[{var,748,'FilterData'},{var,748,'GeneratorData'}]},
      {call,748,{atom,748,qual_data},[{var,748,'Qualifiers'}]}},
     {match,749,{var,749,'Anon'},{integer,749,1}},
     {match,750,
      {var,750,'BindFun'},
      {'fun',750,
       {clauses,
        [{clause,750,
          [{var,750,'_Op'},{var,750,'Value'}],
          [],
          [{call,750,{atom,750,is_bindable},[{var,750,'Value'}]}]}]}}},
     {match,751,
      {tuple,751,[{var,751,'PFrame'},{var,751,'_PatternVars'}]},
      {call,752,
       {atom,752,pattern_frame},
       [{var,752,'GeneratorData'},
        {var,752,'BindFun'},
        {var,752,'Anon'},
        {var,752,'State'}]}},
     {match,753,
      {tuple,753,[{var,753,'_'},{var,753,'_'},{var,753,'Imported'}]},
      {call,754,
       {atom,754,filter_info},
       [{var,754,'FilterData'},
        {var,754,'AllIVs'},
        {var,754,'Dependencies'},
        {var,754,'State'}]}},
     {match,755,
      {var,755,'PFrames'},
      {call,755,{atom,755,frame2frames},[{var,755,'PFrame'}]}},
     {match,756,
      {tuple,756,[{var,756,'_'},{var,756,'Warnings'}]},
      {call,757,
       {remote,757,{atom,757,lists},{atom,757,foldl}},
       [{'fun',757,
         {clauses,
          [{clause,757,
            [{tuple,757,
              [{var,757,'_QId'},
               {tuple,757,[{atom,757,fil},{var,757,'_Filter'}]}]},
             {tuple,757,
              [{match,757,{nil,757},{var,757,'Frames'}},
               {var,757,'Warnings'}]}],
            [],
            [{tuple,758,[{var,758,'Frames'},{var,758,'Warnings'}]}]},
           {clause,759,
            [{tuple,759,
              [{var,759,'_QId'},
               {tuple,759,[{atom,759,fil},{var,759,'Filter'}]}]},
             {tuple,759,[{var,759,'Frames'},{var,759,'Warnings'}]}],
            [],
            [{'case',760,
              {call,760,
               {atom,760,filter},
               [{call,760,{atom,760,reset_anno},[{var,760,'Filter'}]},
                {var,760,'Frames'},
                {var,760,'BindFun'},
                {var,761,'State'},
                {var,761,'Imported'}]},
              [{clause,762,
                [{nil,762}],
                [],
                [{tuple,763,
                  [{nil,763},
                   {cons,764,
                    {tuple,764,
                     [{call,764,{atom,764,get},[{atom,63,qlc_current_file}]},
                      {cons,765,
                       {tuple,765,
                        [{call,765,
                          {atom,765,loc},
                          [{call,765,
                            {atom,765,element},
                            [{integer,765,2},{var,765,'Filter'}]}]},
                         {atom,29,qlc},
                         {atom,766,nomatch_filter}]},
                       {nil,766}}]},
                    {var,766,'Warnings'}}]}]},
               {clause,767,
                [{var,767,'Frames1'}],
                [],
                [{tuple,768,[{var,768,'Frames1'},{var,768,'Warnings'}]}]}]}]},
           {clause,770,
            [{tuple,770,
              [{var,770,'_QId'},
               {tuple,770,
                [{atom,770,gen},{var,770,'Pattern'},{var,770,'_'}]}]},
             {tuple,770,[{var,770,'Frames'},{var,770,'Warnings'}]}],
            [],
            [{'case',771,
              {call,771,
               {atom,771,pattern},
               [{var,771,'Pattern'},
                {var,771,'Anon'},
                {nil,771},
                {var,771,'BindFun'},
                {var,771,'State'}]},
              [{clause,772,
                [{tuple,772,[{atom,772,failed},{var,772,'_'},{var,772,'_'}]}],
                [],
                [{tuple,773,
                  [{var,773,'Frames'},
                   {cons,774,
                    {tuple,774,
                     [{call,774,{atom,774,get},[{atom,63,qlc_current_file}]},
                      {cons,775,
                       {tuple,775,
                        [{call,775,
                          {atom,775,loc},
                          [{call,775,
                            {atom,775,element},
                            [{integer,775,2},{var,775,'Pattern'}]}]},
                         {atom,29,qlc},
                         {atom,776,nomatch_pattern}]},
                       {nil,776}}]},
                    {var,776,'Warnings'}}]}]},
               {clause,777,
                [{var,777,'_'}],
                [],
                [{tuple,778,
                  [{var,778,'Frames'},{var,778,'Warnings'}]}]}]}]}]}},
        {tuple,780,[{var,780,'PFrames'},{nil,780}]},
        {op,780,'++',{var,780,'FilterData'},{var,780,'GeneratorData'}}]}},
     {var,781,'Warnings'}]}]},
 {function,786,opt_info,7,
  [{clause,786,
    [{var,786,'TemplateInfo'},
     {var,786,'Sizes'},
     {var,786,'JoinInfo'},
     {var,786,'MSQs'},
     {var,786,'L'},
     {var,787,'EqColumnConstants0'},
     {var,787,'EqualColumnConstants0'}],
    [],
    [{match,788,
      {var,788,'SzCls'},
      {op,789,'++',
       {lc,788,
        {tuple,788,
         [{atom,788,clause},
          {var,788,'L'},
          {cons,788,
           {tuple,217,[{atom,217,integer},{var,217,'L'},{var,788,'C'}]},
           {nil,788}},
          {nil,788},
          {cons,788,
           {tuple,217,[{atom,217,integer},{var,217,'L'},{var,788,'Sz'}]},
           {nil,788}}]},
        [{generate,788,
          {tuple,788,[{var,788,'C'},{var,788,'Sz'}]},
          {call,788,
           {remote,788,{atom,788,lists},{atom,788,sort}},
           [{var,788,'Sizes'}]}}]},
       {cons,789,
        {tuple,789,
         [{atom,789,clause},
          {var,789,'L'},
          {cons,789,
           {tuple,219,[{atom,219,var},{var,219,'L'},{atom,789,'_'}]},
           {nil,789}},
          {nil,789},
          {cons,789,
           {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,789,undefined}]},
           {nil,789}}]},
        {nil,789}}}},
     {match,790,
      {var,790,'S'},
      {cons,790,
       {tuple,790,
        [{atom,790,size},
         {tuple,790,
          [{atom,790,'fun'},
           {var,790,'L'},
           {tuple,790,[{atom,790,clauses},{var,790,'SzCls'}]}]}]},
       {nil,790}}},
     {match,791,
      {var,791,'J'},
      {'case',791,
       {var,791,'JoinInfo'},
       [{clause,791,[{nil,791}],[],[{nil,791}]},
        {clause,791,
         [{var,791,'_'}],
         [],
         [{cons,791,
           {tuple,791,
            [{atom,791,join},
             {call,791,
              {atom,791,abstr},
              [{var,791,'JoinInfo'},{var,791,'L'}]}]},
           {nil,791}}]}]}},
     {match,793,
      {var,793,'TCls0'},
      {call,793,
       {remote,793,{atom,793,lists},{atom,793,append}},
       [{lc,794,
         {lc,794,
          {tuple,794,
           [{atom,794,clause},
            {var,794,'L'},
            {cons,794,
             {call,794,{atom,794,abstr},[{var,794,'Col'},{var,794,'L'}]},
             {cons,794,{var,794,'EqType'},{nil,794}}},
            {nil,794},
            {cons,795,
             {call,795,{atom,795,abstr},[{var,795,'TemplCols'},{var,795,'L'}]},
             {nil,795}}]},
          [{generate,796,
            {tuple,796,[{var,796,'Col'},{var,796,'TemplCols'}]},
            {var,796,'TemplateColumns'}}]},
         [{generate,797,
           {tuple,797,[{var,797,'EqType'},{var,797,'TemplateColumns'}]},
           {var,797,'TemplateInfo'}}]}]}},
     {match,798,
      {var,798,'TCls'},
      {op,798,'++',
       {call,798,
        {remote,798,{atom,798,lists},{atom,798,sort}},
        [{var,798,'TCls0'}]},
       {cons,798,
        {tuple,798,
         [{atom,798,clause},
          {var,798,'L'},
          {cons,798,
           {tuple,219,[{atom,219,var},{var,219,'L'},{atom,798,'_'}]},
           {cons,219,
            {tuple,219,[{atom,219,var},{var,219,'L'},{atom,798,'_'}]},
            {nil,798}}},
          {nil,798},
          {cons,798,{tuple,798,[{atom,798,nil},{var,798,'L'}]},{nil,798}}]},
        {nil,798}}}},
     {match,799,
      {var,799,'T'},
      {cons,799,
       {tuple,799,
        [{atom,799,template},
         {tuple,799,
          [{atom,799,'fun'},
           {var,799,'L'},
           {tuple,799,[{atom,799,clauses},{var,799,'TCls'}]}]}]},
       {nil,799}}},
     {match,803,
      {var,803,'EqColumnConstants'},
      {call,803,
       {atom,803,opt_column_constants},
       [{var,803,'EqColumnConstants0'}]}},
     {match,804,
      {var,804,'CCs'},
      {call,804,
       {atom,804,opt_constants},
       [{var,804,'L'},{var,804,'EqColumnConstants'}]}},
     {match,805,
      {var,805,'EqC'},
      {tuple,805,
       [{atom,805,constants},
        {tuple,805,
         [{atom,805,'fun'},
          {var,805,'L'},
          {tuple,805,[{atom,805,clauses},{var,805,'CCs'}]}]}]}},
     {match,807,
      {var,807,'EqualColumnConstants'},
      {call,807,
       {atom,807,opt_column_constants},
       [{var,807,'EqualColumnConstants0'}]}},
     {match,808,
      {var,808,'ECCs'},
      {call,808,
       {atom,808,opt_constants},
       [{var,808,'L'},{var,808,'EqualColumnConstants'}]}},
     {match,809,
      {var,809,'EqualC'},
      {tuple,809,
       [{atom,809,equal_constants},
        {tuple,809,
         [{atom,809,'fun'},
          {var,809,'L'},
          {tuple,809,[{atom,809,clauses},{var,809,'ECCs'}]}]}]}},
     {match,810,
      {var,810,'C'},
      {cons,810,
       {var,810,'EqC'},
       {lc,810,
        {var,810,'EqualC'},
        [{generate,810,
          {atom,810,true},
          {cons,810,
           {op,810,'=/=',{var,810,'CCs'},{var,810,'ECCs'}},
           {nil,810}}}]}}},
     {match,813,
      {var,813,'ConstCols'},
      {lc,813,
       {tuple,813,[{var,813,'IdNo'},{var,813,'Col'}]},
       [{generate,814,
         {tuple,814,
          [{tuple,814,[{var,814,'IdNo'},{var,814,'Col'}]},
           {cons,814,{var,814,'_'},{nil,814}},
           {var,814,'_FilNs'}]},
         {var,814,'EqualColumnConstants'}}]}},
     {match,815,
      {var,815,'ConstColsFamily'},
      {call,815,{atom,815,family_list},[{var,815,'ConstCols'}]}},
     {match,816,
      {var,816,'NSortedCols0'},
      {lc,816,
       {tuple,816,
        [{var,816,'IdNo'},
         {call,816,
          {atom,816,hd},
          [{op,816,'--',
            {call,816,
             {remote,816,{atom,816,lists},{atom,816,seq}},
             [{integer,816,1},
              {op,816,'+',
               {call,816,{atom,816,length},[{var,816,'Cols'}]},
               {integer,816,1}}]},
            {var,816,'Cols'}}]}]},
       [{generate,817,
         {tuple,817,[{var,817,'IdNo'},{var,817,'Cols'}]},
         {var,817,'ConstColsFamily'}}]}},
     {match,818,
      {var,818,'NCls'},
      {op,820,'++',
       {lc,818,
        {tuple,818,
         [{atom,818,clause},
          {var,818,'L'},
          {cons,818,
           {tuple,217,[{atom,217,integer},{var,217,'L'},{var,818,'IdNo'}]},
           {nil,818}},
          {nil,818},
          {cons,818,
           {tuple,217,
            [{atom,217,integer},
             {var,217,'L'},
             {op,818,'-',{var,818,'N'},{integer,818,1}}]},
           {nil,818}}]},
        [{generate,819,
          {tuple,819,[{var,819,'IdNo'},{var,819,'N'}]},
          {var,819,'NSortedCols0'}},
         {op,819,'>',{var,819,'N'},{integer,819,0}}]},
       {cons,820,
        {tuple,820,
         [{atom,820,clause},
          {var,820,'L'},
          {cons,820,
           {tuple,219,[{atom,219,var},{var,219,'L'},{atom,820,'_'}]},
           {nil,820}},
          {nil,820},
          {cons,820,
           {tuple,217,[{atom,217,integer},{var,217,'L'},{integer,820,0}]},
           {nil,820}}]},
        {nil,820}}}},
     {match,821,
      {var,821,'N'},
      {cons,821,
       {tuple,821,
        [{atom,821,n_leading_constant_columns},
         {tuple,821,
          [{atom,821,'fun'},
           {var,821,'L'},
           {tuple,821,[{atom,821,clauses},{var,821,'NCls'}]}]}]},
       {nil,821}}},
     {match,823,
      {var,823,'ConstCls'},
      {op,825,'++',
       {lc,823,
        {tuple,823,
         [{atom,823,clause},
          {var,823,'L'},
          {cons,823,
           {tuple,217,[{atom,217,integer},{var,217,'L'},{var,823,'IdNo'}]},
           {nil,823}},
          {nil,823},
          {cons,823,
           {call,823,{atom,823,abstr},[{var,823,'Cols'},{var,823,'L'}]},
           {nil,823}}]},
        [{generate,824,
          {tuple,824,[{var,824,'IdNo'},{var,824,'Cols'}]},
          {var,824,'ConstColsFamily'}}]},
       {cons,825,
        {tuple,825,
         [{atom,825,clause},
          {var,825,'L'},
          {cons,825,
           {tuple,219,[{atom,219,var},{var,219,'L'},{atom,825,'_'}]},
           {nil,825}},
          {nil,825},
          {cons,825,{tuple,825,[{atom,825,nil},{var,825,'L'}]},{nil,825}}]},
        {nil,825}}}},
     {match,826,
      {var,826,'CC'},
      {cons,826,
       {tuple,826,
        [{atom,826,constant_columns},
         {tuple,826,
          [{atom,826,'fun'},
           {var,826,'L'},
           {tuple,826,[{atom,826,clauses},{var,826,'ConstCls'}]}]}]},
       {nil,826}}},
     {match,828,
      {var,828,'MSCls'},
      {op,830,'++',
       {lc,828,
        {tuple,828,
         [{atom,828,clause},
          {var,828,'L'},
          {cons,828,
           {tuple,217,[{atom,217,integer},{var,217,'L'},{var,828,'G'}]},
           {nil,828}},
          {nil,828},
          {cons,828,
           {tuple,828,
            [{atom,828,tuple},
             {var,828,'L'},
             {cons,828,
              {var,828,'MS'},
              {cons,828,
               {call,828,{atom,828,abstr},[{var,828,'Fs'},{var,828,'L'}]},
               {nil,828}}}]},
           {nil,828}}]},
        [{generate,829,
          {tuple,829,[{var,829,'G'},{var,829,'MS'},{var,829,'Fs'}]},
          {var,829,'MSQs'}}]},
       {cons,830,
        {tuple,830,
         [{atom,830,clause},
          {var,830,'L'},
          {cons,830,
           {tuple,219,[{atom,219,var},{var,219,'L'},{atom,830,'_'}]},
           {nil,830}},
          {nil,830},
          {cons,830,
           {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,830,undefined}]},
           {nil,830}}]},
        {nil,830}}}},
     {match,831,
      {var,831,'MS'},
      {cons,831,
       {tuple,831,
        [{atom,831,match_specs},
         {tuple,831,
          [{atom,831,'fun'},
           {var,831,'L'},
           {tuple,831,[{atom,831,clauses},{var,831,'MSCls'}]}]}]},
       {nil,831}}},
     {match,833,
      {var,833,'Cls'},
      {op,835,'++',
       {lc,833,
        {tuple,833,
         [{atom,833,clause},
          {var,833,'L'},
          {cons,833,
           {tuple,218,[{atom,218,atom},{var,218,'L'},{var,833,'Tag'}]},
           {nil,833}},
          {nil,833},
          {cons,833,{var,833,'V'},{nil,833}}]},
        [{generate,834,
          {tuple,834,[{var,834,'Tag'},{var,834,'V'}]},
          {call,834,
           {remote,834,{atom,834,lists},{atom,834,append}},
           [{cons,834,
             {var,834,'J'},
             {cons,834,
              {var,834,'S'},
              {cons,834,
               {var,834,'T'},
               {cons,834,
                {var,834,'C'},
                {cons,834,
                 {var,834,'N'},
                 {cons,834,
                  {var,834,'CC'},
                  {cons,834,{var,834,'MS'},{nil,834}}}}}}}}]}}]},
       {cons,835,
        {tuple,835,
         [{atom,835,clause},
          {var,835,'L'},
          {cons,835,
           {tuple,219,[{atom,219,var},{var,219,'L'},{atom,835,'_'}]},
           {nil,835}},
          {nil,835},
          {cons,835,
           {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,835,undefined}]},
           {nil,835}}]},
        {nil,835}}}},
     {tuple,836,
      [{atom,836,'fun'},
       {var,836,'L'},
       {tuple,836,[{atom,836,clauses},{var,836,'Cls'}]}]}]}]},
 {function,838,opt_column_constants,1,
  [{clause,838,
    [{var,838,'ColumnConstants0'}],
    [],
    [{lc,839,
      {var,839,'CC'},
      [{generate,839,
        {match,839,
         {tuple,839,
          [{tuple,839,[{var,839,'IdNo'},{var,839,'_Col'}]},
           {var,839,'Const'},
           {var,839,'_FilNs'}]},
         {var,839,'CC'}},
        {var,839,'ColumnConstants0'}},
       {op,840,'or',
        {op,840,'=/=',{var,840,'IdNo'},{integer,783,0}},
        {op,840,'=:=',
         {call,840,{atom,840,length},[{var,840,'Const'}]},
         {integer,840,1}}}]}]}]},
 {function,842,opt_constants,2,
  [{clause,842,
    [{var,842,'L'},{var,842,'ColumnConstants'}],
    [],
    [{match,843,
      {var,843,'Ns'},
      {call,843,
       {remote,843,{atom,843,lists},{atom,843,usort}},
       [{lc,843,
         {var,843,'IdNo'},
         [{generate,843,
           {tuple,843,
            [{tuple,843,[{var,843,'IdNo'},{var,843,'_Col'}]},
             {var,843,'_Const'},
             {var,843,'_FilNs'}]},
           {var,843,'ColumnConstants'}}]}]}},
     {op,846,'++',
      {lc,844,
       {tuple,844,
        [{atom,844,clause},
         {var,844,'L'},
         {cons,844,
          {tuple,217,[{atom,217,integer},{var,217,'L'},{var,844,'IdNo'}]},
          {nil,844}},
         {nil,844},
         {cons,844,
          {call,844,
           {atom,844,column_fun},
           [{var,844,'ColumnConstants'},{var,844,'IdNo'},{var,844,'L'}]},
          {nil,844}}]},
       [{generate,845,{var,845,'IdNo'},{var,845,'Ns'}}]},
      {cons,846,
       {tuple,846,
        [{atom,846,clause},
         {var,846,'L'},
         {cons,846,
          {tuple,219,[{atom,219,var},{var,219,'L'},{atom,846,'_'}]},
          {nil,846}},
         {nil,846},
         {cons,846,
          {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,846,no_column_fun}]},
          {nil,846}}]},
       {nil,846}}}]}]},
 {function,848,abstr,2,
  [{clause,848,
    [{var,848,'Term'},{var,848,'Anno'}],
    [],
    [{call,849,
      {remote,849,{atom,849,erl_parse},{atom,849,abstract}},
      [{var,849,'Term'},{call,849,{atom,849,loc},[{var,849,'Anno'}]}]}]}]},
 {function,852,join_quals,6,
  [{clause,852,
    [{var,852,'JoinInfo'},
     {var,852,'QCs'},
     {var,852,'L'},
     {var,852,'LcNo'},
     {var,852,'ExtraConstants'},
     {var,852,'AllVars'}],
    [],
    [{match,853,
      {tuple,853,[{var,853,'LastGoI'},{var,853,'LastSI'}]},
      {call,854,
       {remote,854,{atom,854,lists},{atom,854,foldl}},
       [{'fun',854,
         {clauses,
          [{clause,854,
            [{tuple,854,
              [{var,854,'_QId'},
               {tuple,854,
                [{var,854,'_QIVs'},
                 {tuple,854,
                  [{tuple,854,[{atom,854,fil},{var,854,'_'}]},
                   {var,854,'GoI'},
                   {var,854,'SI'}]}]}]},
             {tuple,855,[{var,855,'GoI0'},{var,855,'_SI0'}]}],
            [[{op,855,'>=',{var,855,'GoI'},{var,855,'GoI0'}}]],
            [{tuple,856,
              [{op,856,'+',{var,856,'GoI'},{integer,856,2}},
               {op,856,'+',{var,856,'SI'},{integer,856,1}}]}]},
           {clause,857,
            [{tuple,857,
              [{var,857,'_QId'},
               {tuple,857,
                [{var,857,'_QIVs'},
                 {tuple,857,
                  [{tuple,857,
                    [{atom,857,gen},
                     {var,857,'_'},
                     {var,857,'_'},
                     {var,857,'_'}]},
                   {var,857,'GoI'},
                   {var,857,'SI'}]}]}]},
             {tuple,858,[{var,858,'GoI0'},{var,858,'_SI0'}]}],
            [[{op,858,'>=',{var,858,'GoI'},{var,858,'GoI0'}}]],
            [{tuple,859,
              [{op,859,'+',{var,859,'GoI'},{integer,859,3}},
               {op,859,'+',{var,859,'SI'},{integer,859,2}}]}]},
           {clause,860,[{var,860,'_'},{var,860,'A'}],[],[{var,861,'A'}]}]}},
        {tuple,862,[{integer,862,0},{integer,862,0}]},
        {var,862,'QCs'}]}},
     {match,863,
      {var,863,'LastQId'},
      {call,863,
       {remote,863,{atom,863,lists},{atom,863,max}},
       [{lc,863,
         {var,863,'QId'},
         [{generate,863,
           {tuple,863,
            [{var,863,'QId'},
             {tuple,863,
              [{var,863,'_QIVs'},
               {tuple,863,
                [{var,863,'_Q'},{var,863,'_GoI'},{var,863,'_SI'}]}]}]},
           {var,863,'QCs'}}]}]}},
     {match,869,
      {var,869,'QNums'},
      {'case',869,
       {var,869,'JoinInfo'},
       [{clause,870,
         [{tuple,870,[{var,870,'EqualCols'},{var,870,'MatchCols'}]}],
         [],
         [{match,871,
           {var,871,'EQs'},
           {call,871,{atom,871,join_qnums},[{var,871,'EqualCols'}]}},
          {match,872,
           {var,872,'MQs'},
           {call,872,{atom,872,join_qnums},[{var,872,'MatchCols'}]}},
          {op,873,'++',
           {lc,873,
            {tuple,873,[{var,873,'Q1'},{var,873,'Q2'},{atom,873,'=:='}]},
            [{generate,873,
              {tuple,873,[{var,873,'Q1'},{var,873,'Q2'}]},
              {var,873,'MQs'}}]},
           {lc,874,
            {tuple,874,[{var,874,'Q1'},{var,874,'Q2'},{atom,874,'=='}]},
            [{generate,874,
              {tuple,874,[{var,874,'Q1'},{var,874,'Q2'}]},
              {op,874,'--',{var,874,'EQs'},{var,874,'MQs'}}}]}}]},
        {clause,875,
         [{var,875,'EqualCols'}],
         [],
         [{lc,876,
           {tuple,876,[{var,876,'Q1'},{var,876,'Q2'},{atom,876,'=='}]},
           [{generate,876,
             {tuple,876,[{var,876,'Q1'},{var,876,'Q2'}]},
             {call,876,{atom,876,join_qnums},[{var,876,'EqualCols'}]}}]}]}]}},
     {match,878,
      {var,878,'LD'},
      {lc,878,
       {block,878,
        [{match,879,
          {cons,879,
           {tuple,879,
            [{var,879,'QId1'},
             {var,879,'P1'},
             {var,879,'GV1'},
             {var,879,'QIVs1'}]},
           {nil,879}},
          {lc,880,
           {tuple,880,
            [{var,880,'QId'},{var,880,'P'},{var,880,'GV'},{var,880,'QIVs'}]},
           [{generate,881,
             {tuple,881,
              [{var,881,'QId'},
               {tuple,881,
                [{var,881,'QIVs'},
                 {tuple,881,
                  [{tuple,881,
                    [{atom,881,gen},
                     {var,881,'P'},
                     {var,881,'_'},
                     {var,881,'GV'}]},
                   {var,881,'_GoI'},
                   {var,881,'_SI'}]}]}]},
             {var,881,'QCs'}},
            {op,882,'=:=',
             {call,882,
              {remote,882,{atom,882,erlang},{atom,882,element}},
              [{integer,882,3},{var,882,'QId'}]},
             {var,882,'Q1'}}]}},
         {match,883,
          {cons,883,
           {tuple,883,[{var,883,'QId2'},{var,883,'P2'},{var,883,'QIVs2'}]},
           {nil,883}},
          {lc,884,
           {tuple,884,
            [{var,884,'QId'},
             {var,884,'P'},
             {op,884,'--',
              {var,884,'QIVs'},
              {cons,884,{var,884,'GV'},{nil,884}}}]},
           [{generate,885,
             {tuple,885,
              [{var,885,'QId'},
               {tuple,885,
                [{var,885,'QIVs'},
                 {tuple,885,
                  [{tuple,885,
                    [{atom,885,gen},
                     {var,885,'P'},
                     {var,885,'_'},
                     {var,885,'GV'}]},
                   {var,885,'_'},
                   {var,885,'_'}]}]}]},
             {var,885,'QCs'}},
            {op,886,'=:=',
             {call,886,
              {remote,886,{atom,886,erlang},{atom,886,element}},
              [{integer,886,3},{var,886,'QId'}]},
             {var,886,'Q2'}}]}},
         {tuple,887,
          [{var,887,'QId1'},
           {var,887,'Op'},
           {var,887,'P1'},
           {var,887,'GV1'},
           {op,887,'++',{var,887,'QIVs1'},{var,887,'QIVs2'}},
           {var,887,'QId2'},
           {var,887,'P2'}]}]},
       [{generate,888,
         {tuple,888,[{var,888,'Q1'},{var,888,'Q2'},{var,888,'Op'}]},
         {call,888,
          {remote,888,{atom,888,lists},{atom,888,usort}},
          [{var,888,'QNums'}]}}]}},
     {match,889,
      {var,889,'Aux'},
      {call,889,
       {atom,889,abst_vars},
       [{call,889,
         {atom,889,aux_vars},
         [{cons,889,
           {atom,889,'F'},
           {cons,889,
            {atom,889,'H'},
            {cons,889,{atom,889,'O'},{cons,889,{atom,889,'C'},{nil,889}}}}},
          {var,889,'LcNo'},
          {var,889,'AllVars'}]},
        {var,889,'L'}]}},
     {match,890,
      {var,890,'F'},
      {'fun',890,
       {clauses,
        [{clause,890,
          [{tuple,890,
            [{var,890,'QId1'},
             {var,890,'Op'},
             {var,890,'P1'},
             {var,890,'GV1'},
             {var,890,'QIVs'},
             {var,890,'QId2'},
             {var,890,'P2'}]},
           {tuple,890,[{var,890,'QId'},{var,890,'GoI'},{var,890,'SI'}]}],
          [],
          [{match,891,
            {var,891,'AP1'},
            {call,891,{atom,891,anon_pattern},[{var,891,'P1'}]}},
           {match,892,
            {var,892,'AP2'},
            {call,892,{atom,892,anon_pattern},[{var,892,'P2'}]}},
           {match,893,
            {var,893,'Cs1'},
            {call,893,
             {atom,893,join_handle_constants},
             [{var,893,'QId1'},{var,893,'ExtraConstants'}]}},
           {match,894,
            {var,894,'Cs2'},
            {call,894,
             {atom,894,join_handle_constants},
             [{var,894,'QId2'},{var,894,'ExtraConstants'}]}},
           {match,895,
            {var,895,'H1'},
            {call,895,
             {atom,895,join_handle},
             [{var,895,'AP1'},{var,895,'L'},{var,895,'Aux'},{var,895,'Cs1'}]}},
           {match,896,
            {var,896,'H2'},
            {call,896,
             {atom,896,join_handle},
             [{var,896,'AP2'},{var,896,'L'},{var,896,'Aux'},{var,896,'Cs2'}]}},
           {match,898,
            {var,898,'Join'},
            {tuple,898,
             [{atom,898,join},
              {var,898,'Op'},
              {call,898,
               {remote,898,{atom,898,erlang},{atom,898,element}},
               [{integer,898,3},{var,898,'QId1'}]},
              {call,898,
               {remote,898,{atom,898,erlang},{atom,898,element}},
               [{integer,898,3},{var,898,'QId2'}]},
              {var,898,'H1'},
              {var,898,'H2'},
              {var,898,'Cs1'},
              {var,898,'Cs2'}]}},
           {match,899,
            {var,899,'G'},
            {tuple,899,
             [{match,899,
               {var,899,'NQId'},
               {call,899,
                {remote,899,{atom,899,erlang},{atom,899,setelement}},
                [{integer,899,3},
                 {var,899,'QId'},
                 {op,899,'+',
                  {call,899,
                   {remote,899,{atom,899,erlang},{atom,899,element}},
                   [{integer,899,3},{var,899,'QId'}]},
                  {integer,899,1}}]}},
              {tuple,900,
               [{var,900,'QIVs'},
                {tuple,900,
                 [{tuple,900,
                   [{atom,900,gen},
                    {tuple,900,
                     [{atom,900,cons},
                      {var,900,'L'},
                      {var,900,'P1'},
                      {var,900,'P2'}]},
                    {var,900,'Join'},
                    {var,900,'GV1'}]},
                  {var,900,'GoI'},
                  {var,900,'SI'}]}]}]}},
           {match,901,
            {var,901,'A'},
            {tuple,901,
             [{var,901,'NQId'},
              {op,901,'+',{var,901,'GoI'},{integer,901,3}},
              {op,901,'+',{var,901,'SI'},{integer,901,2}}]}},
           {tuple,902,[{var,902,'G'},{var,902,'A'}]}]}]}}},
     {match,904,
      {tuple,904,[{var,904,'Qs'},{var,904,'_'}]},
      {call,904,
       {remote,904,{atom,904,lists},{atom,904,mapfoldl}},
       [{var,904,'F'},
        {tuple,904,
         [{var,904,'LastQId'},{var,904,'LastGoI'},{var,904,'LastSI'}]},
        {var,904,'LD'}]}},
     {var,905,'Qs'}]}]},
 {function,907,join_qnums,1,
  [{clause,907,
    [{var,907,'Cols'}],
    [],
    [{call,908,
      {remote,908,{atom,908,lists},{atom,908,usort}},
      [{lc,908,
        {tuple,908,[{var,908,'Q1'},{var,908,'Q2'}]},
        [{generate,908,
          {tuple,908,
           [{cons,908,
             {tuple,908,[{var,908,'Q1'},{var,908,'_C1'}]},
             {cons,908,
              {tuple,908,[{var,908,'Q2'},{var,908,'_C2'}]},
              {nil,908}}},
            {var,908,'_Skip'}]},
          {var,908,'Cols'}}]}]}]}]},
 {function,911,anon_pattern,1,
  [{clause,911,
    [{var,911,'P'}],
    [],
    [{match,912,
      {var,912,'MoreThanOnce'},
      {call,912,
       {remote,912,{atom,912,lists},{atom,912,usort}},
       [{op,912,'--',
         {call,912,{atom,912,occ_vars},[{var,912,'P'}]},
         {call,912,
          {remote,912,{atom,912,qlc},{atom,912,vars}},
          [{var,912,'P'}]}}]}},
     {match,913,
      {tuple,913,[{var,913,'AP'},{atom,913,foo}]},
      {call,913,
       {atom,913,var_mapfold},
       [{'fun',913,
         {clauses,
          [{clause,913,
            [{tuple,913,[{atom,913,var},{var,913,'L'},{var,913,'V'}]},
             {var,913,'A'}],
            [],
            [{'case',914,
              {call,914,
               {remote,914,{atom,914,lists},{atom,914,member}},
               [{var,914,'V'},{var,914,'MoreThanOnce'}]},
              [{clause,915,
                [{atom,915,true}],
                [],
                [{tuple,916,
                  [{tuple,916,[{atom,916,var},{var,916,'L'},{var,916,'V'}]},
                   {var,916,'A'}]}]},
               {clause,917,
                [{atom,917,false}],
                [],
                [{tuple,918,
                  [{tuple,918,[{atom,918,var},{var,918,'L'},{atom,918,'_'}]},
                   {var,918,'A'}]}]}]}]}]}},
        {atom,920,foo},
        {var,920,'P'}]}},
     {var,921,'AP'}]}]},
 {function,929,join_handle,4,
  [{clause,929,
    [{var,929,'AP'},
     {var,929,'L'},
     {cons,929,
      {var,929,'F'},
      {cons,929,
       {var,929,'H'},
       {cons,929,{var,929,'O'},{cons,929,{var,929,'C'},{nil,929}}}}},
     {var,929,'Constants'}],
    [],
    [{'case',930,
      {tuple,930,[{var,930,'AP'},{var,930,'Constants'}]},
      [{clause,931,
        [{tuple,931,
          [{tuple,931,[{atom,931,var},{var,931,'_'},{var,931,'_'}]},
           {nil,931}]}],
        [],
        [{tuple,932,
          [{atom,932,'fun'},
           {var,932,'L'},
           {tuple,932,
            [{atom,932,clauses},
             {cons,932,
              {tuple,932,
               [{atom,932,clause},
                {var,932,'L'},
                {cons,932,{var,932,'H'},{nil,932}},
                {nil,932},
                {cons,932,{var,932,'H'},{nil,932}}]},
              {nil,932}}]}]}]},
       {clause,933,
        [{var,933,'_'}],
        [],
        [{match,934,{var,934,'A'},{call,934,{atom,934,anno0},[]}},
         {match,935,
          {var,935,'G0'},
          {lc,935,
           {block,935,
            [{match,936,
              {var,936,'Call'},
              {tuple,936,
               [{atom,936,call},
                {var,936,'A'},
                {tuple,936,[{atom,936,atom},{var,936,'A'},{atom,936,element}]},
                {cons,936,
                 {tuple,936,
                  [{atom,936,integer},{var,936,'A'},{var,936,'Col'}]},
                 {cons,936,{var,936,'O'},{nil,936}}}]}},
             {call,937,
              {atom,937,list2op},
              [{lc,937,
                {tuple,937,
                 [{atom,937,op},
                  {var,937,'A'},
                  {var,937,'Op'},
                  {var,937,'Con'},
                  {var,937,'Call'}]},
                [{generate,937,
                  {tuple,937,[{var,937,'Con'},{var,937,'Op'}]},
                  {var,937,'Cs'}}]},
               {atom,937,'or'}]}]},
           [{generate,938,
             {tuple,938,[{var,938,'Col'},{var,938,'Cs'}]},
             {var,938,'Constants'}}]}},
         {match,939,
          {var,939,'G'},
          {'if',939,
           [{clause,939,[],
             [[{op,939,'=:=',{var,939,'G0'},{nil,939}}]],
             [{var,939,'G0'}]},
            {clause,939,[],
             [[{atom,939,true}]],
             [{cons,939,{var,939,'G0'},{nil,939}}]}]}},
         {match,940,
          {var,940,'CC1'},
          {tuple,940,
           [{atom,940,clause},
            {var,940,'L'},
            {cons,940,{var,940,'AP'},{nil,940}},
            {var,940,'G'},
            {cons,940,
             {tuple,940,
              [{atom,940,cons},
               {var,940,'L'},
               {var,940,'O'},
               {call,940,
                {atom,940,closure},
                [{tuple,940,
                  [{atom,940,call},
                   {var,940,'L'},
                   {var,940,'F'},
                   {cons,940,
                    {var,940,'F'},
                    {cons,940,{var,940,'C'},{nil,940}}}]},
                 {var,940,'L'}]}]},
             {nil,940}}]}},
         {match,941,
          {var,941,'CC2'},
          {tuple,941,
           [{atom,941,clause},
            {var,941,'L'},
            {cons,941,
             {tuple,219,[{atom,219,var},{var,219,'L'},{atom,941,'_'}]},
             {nil,941}},
            {nil,941},
            {cons,941,
             {tuple,941,
              [{atom,941,call},
               {var,941,'L'},
               {var,941,'F'},
               {cons,941,{var,941,'F'},{cons,941,{var,941,'C'},{nil,941}}}]},
             {nil,941}}]}},
         {match,942,
          {var,942,'Case'},
          {tuple,942,
           [{atom,942,'case'},
            {var,942,'L'},
            {var,942,'O'},
            {cons,942,{var,942,'CC1'},{cons,942,{var,942,'CC2'},{nil,942}}}]}},
         {match,943,
          {var,943,'Cls'},
          {cons,943,
           {tuple,943,
            [{atom,943,clause},
             {var,943,'L'},
             {cons,943,
              {tuple,219,[{atom,219,var},{var,219,'L'},{atom,943,'_'}]},
              {cons,943,{tuple,943,[{atom,943,nil},{var,943,'L'}]},{nil,943}}},
             {nil,943},
             {cons,943,{tuple,943,[{atom,943,nil},{var,943,'L'}]},{nil,943}}]},
           {cons,944,
            {tuple,944,
             [{atom,944,clause},
              {var,944,'L'},
              {cons,944,
               {var,944,'F'},
               {cons,944,
                {tuple,944,
                 [{atom,944,cons},{var,944,'L'},{var,944,'O'},{var,944,'C'}]},
                {nil,944}}},
              {nil,944},
              {cons,944,{var,944,'Case'},{nil,944}}]},
            {cons,945,
             {tuple,945,
              [{atom,945,clause},
               {var,945,'L'},
               {cons,945,{var,945,'F'},{cons,945,{var,945,'C'},{nil,945}}},
               {cons,945,
                {cons,945,
                 {tuple,945,
                  [{atom,945,call},
                   {var,945,'L'},
                   {tuple,218,
                    [{atom,218,atom},{var,218,'L'},{atom,945,is_function}]},
                   {cons,945,{var,945,'C'},{nil,945}}]},
                 {nil,945}},
                {nil,945}},
               {cons,946,
                {tuple,946,
                 [{atom,946,call},
                  {var,946,'L'},
                  {var,946,'F'},
                  {cons,946,
                   {var,946,'F'},
                   {cons,946,
                    {tuple,946,
                     [{atom,946,call},{var,946,'L'},{var,946,'C'},{nil,946}]},
                    {nil,946}}}]},
                {nil,946}}]},
             {cons,947,
              {tuple,947,
               [{atom,947,clause},
                {var,947,'L'},
                {cons,947,
                 {tuple,219,[{atom,219,var},{var,219,'L'},{atom,947,'_'}]},
                 {cons,947,{var,947,'C'},{nil,947}}},
                {nil,947},
                {cons,947,{var,947,'C'},{nil,947}}]},
              {nil,947}}}}}},
         {match,948,
          {var,948,'Fun'},
          {tuple,948,
           [{atom,948,'fun'},
            {var,948,'L'},
            {tuple,948,[{atom,948,clauses},{var,948,'Cls'}]}]}},
         {tuple,949,
          [{atom,949,'fun'},
           {var,949,'L'},
           {tuple,949,
            [{atom,949,clauses},
             {cons,949,
              {tuple,949,
               [{atom,949,clause},
                {var,949,'L'},
                {cons,949,{var,949,'H'},{nil,949}},
                {nil,949},
                {cons,949,
                 {tuple,949,
                  [{atom,949,match},
                   {var,949,'L'},
                   {var,949,'F'},
                   {var,949,'Fun'}]},
                 {cons,950,
                  {call,950,
                   {atom,950,closure},
                   [{tuple,950,
                     [{atom,950,call},
                      {var,950,'L'},
                      {var,950,'F'},
                      {cons,950,
                       {var,950,'F'},
                       {cons,950,{var,950,'H'},{nil,950}}}]},
                    {var,951,'L'}]},
                  {nil,951}}}]},
              {nil,951}}]}]}]}]}]}]},
 {function,954,join_handle_constants,2,
  [{clause,954,
    [{var,954,'QId'},{var,954,'ExtraConstants'}],
    [],
    [{match,955,
      {var,955,'IdNo'},
      {call,955,
       {remote,955,{atom,955,erlang},{atom,955,element}},
       [{integer,955,3},{var,955,'QId'}]}},
     {'case',956,
      {call,956,
       {remote,956,{atom,956,lists},{atom,956,keyfind}},
       [{var,956,'IdNo'},{integer,956,1},{var,956,'ExtraConstants'}]},
      [{clause,957,
        [{tuple,957,[{var,957,'IdNo'},{var,957,'ConstOps'}]}],
        [],
        [{var,958,'ConstOps'}]},
       {clause,959,[{atom,959,false}],[],[{nil,960}]}]}]}]},
 {function,973,column_fun,3,
  [{clause,973,
    [{var,973,'Columns'},{var,973,'QualifierNumber'},{var,973,'LcL'}],
    [],
    [{match,974,{var,974,'A'},{call,974,{atom,974,anno0},[]}},
     {match,975,
      {var,975,'ColCls0'},
      {op,995,'++',
       {lc,976,
        {block,976,
         [{match,977,{atom,977,true},{op,977,'=/=',{var,977,'Vs0'},{nil,977}}},
          {match,978,
           {var,978,'Vs1'},
           {call,978,{atom,978,list2cons},[{var,978,'Vs0'}]}},
          {match,979,
           {var,979,'Fils1'},
           {tuple,979,
            [{atom,979,tuple},
             {var,979,'A'},
             {cons,979,
              {tuple,979,[{atom,979,atom},{var,979,'A'},{var,979,'FTag'}]},
              {cons,980,
               {call,980,
                {remote,980,{atom,980,lists},{atom,980,foldr}},
                [{'fun',981,
                  {clauses,
                   [{clause,981,
                     [{var,981,'F'},{var,981,'Ac'}],
                     [],
                     [{tuple,981,
                       [{atom,981,cons},
                        {var,981,'A'},
                        {tuple,981,
                         [{atom,981,integer},{var,981,'A'},{var,981,'F'}]},
                        {var,981,'Ac'}]}]}]}},
                 {tuple,982,[{atom,982,nil},{var,982,'A'}]},
                 {var,982,'Fils'}]},
               {nil,982}}}]}},
          {match,983,
           {var,983,'Tag'},
           {'case',983,
            {call,983,
             {remote,983,{atom,983,ordsets},{atom,983,to_list}},
             [{call,983,
               {remote,983,{atom,983,qlc},{atom,983,vars}},
               [{var,983,'Vs1'}]}]},
            [{clause,984,
              [{var,984,'Imp'}],
              [[{op,984,'>',
                 {call,984,{atom,984,length},[{var,984,'Imp'}]},
                 {integer,984,0}},
                {op,985,'>',
                 {call,985,{atom,985,length},[{var,985,'Vs0'}]},
                 {integer,985,1}}]],
              [{atom,986,usort_needed}]},
             {clause,987,[{var,987,'_'}],[],[{atom,988,values}]}]}},
          {match,990,
           {var,990,'Vs'},
           {tuple,990,
            [{atom,990,tuple},
             {var,990,'A'},
             {cons,990,
              {tuple,990,[{atom,990,atom},{var,990,'A'},{var,990,'Tag'}]},
              {cons,990,
               {var,990,'Vs1'},
               {cons,990,{var,990,'Fils1'},{nil,990}}}}]}},
          {tuple,991,
           [{atom,991,clause},
            {var,991,'A'},
            {cons,991,
             {call,991,
              {remote,991,{atom,991,erl_parse},{atom,991,abstract}},
              [{var,991,'Col'}]},
             {nil,991}},
            {nil,991},
            {cons,991,{var,991,'Vs'},{nil,991}}]}]},
        [{generate,993,
          {tuple,993,
           [{tuple,993,[{var,993,'CIdNo'},{var,993,'Col'}]},
            {var,993,'Vs0'},
            {tuple,993,[{var,993,'FTag'},{var,993,'Fils'}]}]},
          {var,993,'Columns'}},
         {op,994,'=:=',{var,994,'CIdNo'},{var,994,'QualifierNumber'}}]},
       {cons,995,
        {tuple,995,
         [{atom,995,clause},
          {var,995,'A'},
          {cons,995,
           {tuple,995,[{atom,995,var},{var,995,'A'},{atom,995,'_'}]},
           {nil,995}},
          {nil,995},
          {cons,995,
           {tuple,995,[{atom,995,atom},{var,995,'A'},{atom,995,false}]},
           {nil,995}}]},
        {nil,995}}}},
     {match,996,
      {var,996,'ColCls'},
      {call,996,{atom,996,set_anno},[{var,996,'ColCls0'},{var,996,'LcL'}]}},
     {tuple,997,
      [{atom,997,'fun'},
       {var,997,'LcL'},
       {tuple,997,[{atom,997,clauses},{var,997,'ColCls'}]}]}]}]},
 {function,1011,template_columns,5,
  [{clause,1011,
    [{var,1011,'Qs0'},
     {var,1011,'E0'},
     {var,1011,'AllIVs'},
     {var,1011,'Dependencies'},
     {var,1011,'State'}],
    [],
    [{match,1012,
      {var,1012,'E'},
      {call,1012,
       {atom,1012,expand_expr_records},
       [{call,1012,{atom,1012,pre_expand},[{var,1012,'E0'}]},
        {var,1012,'State'}]}},
     {match,1013,
      {var,1013,'TemplateAsPattern'},
      {call,1013,{atom,1013,template_as_pattern},[{var,1013,'E'}]}},
     {match,1014,
      {var,1014,'Qs'},
      {cons,1014,{var,1014,'TemplateAsPattern'},{var,1014,'Qs0'}}},
     {match,1015,
      {var,1015,'EqualColumns'},
      {call,1015,
       {atom,1015,equal_columns2},
       [{var,1015,'Qs'},
        {var,1015,'AllIVs'},
        {var,1015,'Dependencies'},
        {var,1015,'State'}]}},
     {match,1016,
      {var,1016,'MatchColumns'},
      {call,1016,
       {atom,1016,eq_columns2},
       [{var,1016,'Qs'},
        {var,1016,'AllIVs'},
        {var,1016,'Dependencies'},
        {var,1016,'State'}]}},
     {match,1017,
      {var,1017,'Equal'},
      {call,1017,{atom,1017,template_cols},[{var,1017,'EqualColumns'}]}},
     {match,1018,
      {var,1018,'Match'},
      {call,1018,{atom,1018,template_cols},[{var,1018,'MatchColumns'}]}},
     {match,1019,{var,1019,'L'},{call,1019,{atom,1019,anno0},[]}},
     {'if',1020,
      [{clause,1021,[],
        [[{op,1021,'=:=',{var,1021,'Match'},{var,1021,'Equal'}}]],
        [{cons,1022,
          {tuple,1022,
           [{tuple,219,[{atom,219,var},{var,219,'L'},{atom,1022,'_'}]},
            {var,1022,'Match'}]},
          {nil,1022}}]},
       {clause,1023,[],
        [[{atom,1023,true}]],
        [{cons,1024,
          {tuple,1024,
           [{tuple,218,[{atom,218,atom},{var,218,'L'},{atom,1024,'=='}]},
            {var,1024,'Equal'}]},
          {cons,1024,
           {tuple,1024,
            [{tuple,218,[{atom,218,atom},{var,218,'L'},{atom,1024,'=:='}]},
             {var,1024,'Match'}]},
           {nil,1024}}}]}]}]}]},
 {function,1027,equal_columns2,4,
  [{clause,1027,
    [{var,1027,'Qualifiers'},
     {var,1027,'AllIVs'},
     {var,1027,'Dependencies'},
     {var,1027,'State'}],
    [],
    [{match,1028,
      {tuple,1028,[{var,1028,'JI'},{var,1028,'_Skip'}]},
      {call,1029,
       {atom,1029,join_info},
       [{var,1029,'Qualifiers'},
        {var,1029,'AllIVs'},
        {var,1029,'Dependencies'},
        {var,1029,'State'},
        {match,1029,{var,1029,'_JoinOp'},{atom,1029,'=='}}]}},
     {var,1030,'JI'}]}]},
 {function,1032,eq_columns2,4,
  [{clause,1032,
    [{var,1032,'Qualifiers'},
     {var,1032,'AllIVs'},
     {var,1032,'Dependencies'},
     {var,1032,'State'}],
    [],
    [{match,1033,
      {tuple,1033,[{var,1033,'JI'},{var,1033,'_SKip'}]},
      {call,1034,
       {atom,1034,join_info},
       [{var,1034,'Qualifiers'},
        {var,1034,'AllIVs'},
        {var,1034,'Dependencies'},
        {var,1034,'State'},
        {match,1034,{var,1034,'_JoinOp'},{atom,1034,'=:='}}]}},
     {var,1035,'JI'}]}]},
 {function,1037,template_cols,1,
  [{clause,1037,
    [{var,1037,'ColumnClasses'}],
    [],
    [{call,1038,
      {remote,1038,{atom,1038,lists},{atom,1038,sort}},
      [{lc,1038,
        {tuple,1038,
         [{tuple,1038,[{var,1038,'IdNo'},{var,1038,'Col'}]},
          {call,1038,
           {remote,1038,{atom,1038,lists},{atom,1038,usort}},
           [{var,1038,'Cs'}]}]},
        [{generate,1039,{var,1039,'Class'},{var,1039,'ColumnClasses'}},
         {generate,1040,
          {tuple,1040,[{var,1040,'IdNo'},{var,1040,'Col'}]},
          {var,1040,'Class'}},
         {op,1041,'=/=',{var,1041,'IdNo'},{integer,783,0}},
         {op,1042,'=/=',
          {nil,1042},
          {match,1042,
           {var,1042,'Cs'},
           {lc,1042,
            {var,1042,'C'},
            [{generate,1042,
              {tuple,1042,[{integer,783,0},{var,1042,'C'}]},
              {var,1042,'Class'}}]}}}]}]}]}]},
 {function,1044,template_as_pattern,1,
  [{clause,1044,
    [{var,1044,'E'}],
    [],
    [{match,1045,
      {var,1045,'P'},
      {call,1045,{atom,1045,simple_template},[{var,1045,'E'}]}},
     {tuple,1046,
      [{tuple,784,[{atom,784,qid},{atom,784,template},{integer,783,0}]},
       {atom,1046,foo},
       {atom,1046,foo},
       {tuple,1046,
        [{atom,1046,gen},
         {var,1046,'P'},
         {tuple,1046,
          [{atom,1046,nil},{call,1046,{atom,1046,anno0},[]}]}]}]}]}]},
 {function,1048,simple_template,1,
  [{clause,1048,
    [{tuple,1048,
      [{atom,1048,call},
       {var,1048,'L'},
       {match,1048,
        {tuple,1048,
         [{atom,1048,remote},
          {var,1048,'_'},
          {tuple,1048,[{atom,1048,atom},{var,1048,'_'},{atom,1048,erlang}]},
          {tuple,1048,[{atom,1048,atom},{var,1048,'_'},{atom,1048,element}]}]},
        {var,1048,'Call'}},
       {cons,1049,
        {match,1049,
         {tuple,1049,[{atom,1049,integer},{var,1049,'_'},{var,1049,'I'}]},
         {var,1049,'A1'}},
        {cons,1049,{var,1049,'A2'},{nil,1049}}}]}],
    [[{op,1049,'>',{var,1049,'I'},{integer,1049,0}}]],
    [{tuple,1051,
      [{atom,1051,call},
       {var,1051,'L'},
       {var,1051,'Call'},
       {cons,1051,
        {var,1051,'A1'},
        {cons,1051,
         {call,1051,{atom,1051,simple_template},[{var,1051,'A2'}]},
         {nil,1051}}}]}]},
   {clause,1052,
    [{match,1052,
      {tuple,1052,[{atom,1052,var},{var,1052,'_'},{var,1052,'_'}]},
      {var,1052,'E'}}],
    [],
    [{var,1053,'E'}]},
   {clause,1054,
    [{tuple,1054,[{atom,1054,tuple},{var,1054,'L'},{var,1054,'Es'}]}],
    [],
    [{tuple,1055,
      [{atom,1055,tuple},
       {var,1055,'L'},
       {lc,1055,
        {call,1055,{atom,1055,simple_template},[{var,1055,'E'}]},
        [{generate,1055,{var,1055,'E'},{var,1055,'Es'}}]}]}]},
   {clause,1056,
    [{tuple,1056,
      [{atom,1056,cons},{var,1056,'L'},{var,1056,'H'},{var,1056,'T'}]}],
    [],
    [{tuple,1057,
      [{atom,1057,cons},
       {var,1057,'L'},
       {call,1057,{atom,1057,simple_template},[{var,1057,'H'}]},
       {call,1057,{atom,1057,simple_template},[{var,1057,'T'}]}]}]},
   {clause,1058,
    [{var,1058,'E'}],
    [],
    [{'case',1059,
      {'catch',1059,
       {call,1059,
        {remote,1059,{atom,1059,erl_parse},{atom,1059,normalise}},
        [{var,1059,'E'}]}},
      [{clause,1060,
        [{tuple,1060,[{atom,1060,'EXIT'},{var,1060,'_'}]}],
        [],
        [{call,1060,{atom,1060,unique_var},[]}]},
       {clause,1061,[{var,1061,'_'}],[],[{var,1061,'E'}]}]}]}]},
 {function,1066,qualifier_dependencies,2,
  [{clause,1066,
    [{var,1066,'Qualifiers'},{var,1066,'IntroVs'}],
    [],
    [{match,1067,
      {var,1067,'Intro'},
      {call,1067,
       {remote,1067,{atom,1067,sofs},{atom,1067,relation}},
       [{lc,1067,
         {tuple,1067,[{var,1067,'IV'},{var,1067,'QId'}]},
         [{generate,1067,
           {tuple,1067,[{var,1067,'QId'},{var,1067,'IVs'}]},
           {var,1067,'IntroVs'}},
          {generate,1067,{var,1067,'IV'},{var,1067,'IVs'}}]}]}},
     {match,1068,
      {tuple,1068,[{var,1068,'FilterData'},{var,1068,'_'}]},
      {call,1068,{atom,1068,qual_data},[{var,1068,'Qualifiers'}]}},
     {match,1069,
      {var,1069,'Used'},
      {call,1069,
       {remote,1069,{atom,1069,sofs},{atom,1069,relation}},
       [{lc,1069,
         {tuple,1069,[{var,1069,'QId'},{var,1069,'UV'}]},
         [{generate,1070,
           {tuple,1070,
            [{var,1070,'QId'},{tuple,1070,[{atom,1070,fil},{var,1070,'F'}]}]},
           {var,1070,'FilterData'}},
          {generate,1071,
           {var,1071,'UV'},
           {call,1071,
            {remote,1071,{atom,1071,qlc},{atom,1071,vars}},
            [{var,1071,'F'}]}}]}]}},
     {match,1072,
      {var,1072,'Depend'},
      {call,1072,
       {remote,1072,{atom,1072,sofs},{atom,1072,strict_relation}},
       [{call,1072,
         {remote,1072,{atom,1072,sofs},{atom,1072,relative_product}},
         [{var,1072,'Used'},{var,1072,'Intro'}]}]}},
     {match,1073,
      {var,1073,'G'},
      {call,1073,
       {remote,1073,{atom,1073,sofs},{atom,1073,family_to_digraph}},
       [{call,1073,
         {remote,1073,{atom,1073,sofs},{atom,1073,relation_to_family}},
         [{var,1073,'Depend'}]}]}},
     {match,1074,
      {var,1074,'Dep0'},
      {lc,1074,
       {tuple,1074,
        [{var,1074,'V'},
         {call,1074,
          {remote,1074,
           {atom,1074,digraph_utils},
           {atom,1074,reachable_neighbours}},
          [{cons,1074,{var,1074,'V'},{nil,1074}},{var,1074,'G'}]}]},
       [{generate,1075,
         {var,1075,'V'},
         {call,1075,
          {remote,1075,{atom,1075,digraph},{atom,1075,vertices}},
          [{var,1075,'G'}]}}]}},
     {match,1076,
      {atom,1076,true},
      {call,1076,
       {remote,1076,{atom,1076,digraph},{atom,1076,delete}},
       [{var,1076,'G'}]}},
     {match,1077,
      {var,1077,'FilterIds'},
      {call,1077,
       {remote,1077,{atom,1077,sofs},{atom,1077,set}},
       [{call,1077,{atom,1077,filter_ids},[{var,1077,'Qualifiers'}]}]}},
     {match,1078,
      {var,1078,'Dep1'},
      {call,1078,
       {remote,1078,{atom,1078,sofs},{atom,1078,restriction}},
       [{call,1078,
         {remote,1078,{atom,1078,sofs},{atom,1078,family}},
         [{var,1078,'Dep0'}]},
        {var,1078,'FilterIds'}]}},
     {match,1079,
      {var,1079,'NoDep'},
      {call,1079,
       {remote,1079,{atom,1079,sofs},{atom,1079,constant_function}},
       [{var,1079,'FilterIds'},
        {call,1079,{remote,1079,{atom,1079,sofs},{atom,1079,empty_set}},[]}]}},
     {call,1080,
      {remote,1080,{atom,1080,sofs},{atom,1080,to_external}},
      [{call,1080,
        {remote,1080,{atom,1080,sofs},{atom,1080,family_union}},
        [{var,1080,'Dep1'},{var,1080,'NoDep'}]}]}]}]},
 {function,1082,filter_ids,1,
  [{clause,1082,
    [{var,1082,'Qualifiers'}],
    [],
    [{match,1083,
      {tuple,1083,[{var,1083,'FilterData'},{var,1083,'_'}]},
      {call,1083,{atom,1083,qual_data},[{var,1083,'Qualifiers'}]}},
     {lc,1084,
      {var,1084,'QId'},
      [{generate,1084,
        {tuple,1084,[{var,1084,'QId'},{var,1084,'_'}]},
        {var,1084,'FilterData'}}]}]}]},
 {function,1092,match_spec_quals,4,
  [{clause,1092,
    [{var,1092,'Template'},
     {var,1092,'Dependencies'},
     {var,1092,'Qualifiers'},
     {var,1092,'State'}],
    [],
    [{match,1093,
      {tuple,1093,[{var,1093,'FilterData'},{var,1093,'GeneratorData'}]},
      {call,1093,{atom,1093,qual_data},[{var,1093,'Qualifiers'}]}},
     {match,1094,
      {var,1094,'NoFilterGIds'},
      {op,1095,'--',
       {lc,1094,
        {var,1094,'GId'},
        [{generate,1094,
          {tuple,1094,[{var,1094,'GId'},{var,1094,'_'}]},
          {var,1094,'GeneratorData'}}]},
       {call,1095,
        {remote,1095,{atom,1095,lists},{atom,1095,flatmap}},
        [{'fun',1095,
          {clauses,
           [{clause,1095,
             [{tuple,1095,[{var,1095,'_'},{var,1095,'GIds'}]}],
             [],
             [{var,1095,'GIds'}]}]}},
         {var,1095,'Dependencies'}]}}},
     {match,1096,
      {var,1096,'Filters'},
      {call,1096,
       {atom,1096,filter_list},
       [{var,1096,'FilterData'},
        {var,1096,'Dependencies'},
        {var,1096,'State'}]}},
     {match,1097,
      {var,1097,'Candidates'},
      {op,1103,'++',
       {lc,1097,
        {tuple,1097,
         [{call,1097,
           {remote,1097,{atom,1097,erlang},{atom,1097,element}},
           [{integer,1097,3},{var,1097,'QId2'}]},
          {var,1097,'Pattern'},
          {cons,1097,{var,1097,'Filter'},{nil,1097}},
          {var,1097,'F'}]},
        [{generate,1098,
          {tuple,1098,
           [{var,1098,'QId'},{cons,1098,{var,1098,'QId2'},{nil,1098}}]},
          {var,1098,'Dependencies'}},
         {generate,1099,
          {tuple,1099,
           [{var,1099,'GQId'},
            {tuple,1099,
             [{atom,1099,gen},{var,1099,'Pattern'},{var,1099,'_'}]}]},
          {var,1099,'GeneratorData'}},
         {op,1100,'=:=',{var,1100,'GQId'},{var,1100,'QId2'}},
         {generate,1101,
          {match,1101,
           {tuple,1101,
            [{var,1101,'FQId'},{tuple,1101,[{atom,1101,fil},{var,1101,'F'}]}]},
           {var,1101,'Filter'}},
          {var,1101,'Filters'}},
         {op,1102,'=:=',{var,1102,'FQId'},{var,1102,'QId'}}]},
       {lc,1103,
        {tuple,1103,
         [{call,1103,
           {remote,1103,{atom,1103,erlang},{atom,1103,element}},
           [{integer,1103,3},{var,1103,'GId'}]},
          {var,1103,'Pattern'},
          {nil,1103},
          {tuple,1103,
           [{atom,1103,atom},
            {call,1103,{atom,1103,anno0},[]},
            {atom,1103,true}]}]},
        [{generate,1104,
          {tuple,1104,
           [{var,1104,'GId'},
            {tuple,1104,
             [{atom,1104,gen},{var,1104,'Pattern'},{var,1104,'_'}]}]},
          {var,1104,'GeneratorData'}},
         {call,1105,
          {remote,1105,{atom,1105,lists},{atom,1105,member}},
          [{var,1105,'GId'},{var,1105,'NoFilterGIds'}]}]}}},
     {match,1106,
      {var,1106,'E'},
      {tuple,1106,[{atom,1106,nil},{call,1106,{atom,1106,anno0},[]}]}},
     {match,1107,
      {var,1107,'GF'},
      {lc,1107,
       {tuple,1107,
        [{tuple,1107,[{var,1107,'GNum'},{var,1107,'Pattern'}]},
         {var,1107,'Filter'}]},
       [{generate,1108,
         {tuple,1108,
          [{var,1108,'GNum'},
           {var,1108,'Pattern'},
           {var,1108,'Filter'},
           {var,1108,'F'}]},
         {var,1108,'Candidates'}},
        {op,1109,'=/=',
         {atom,1109,no},
         {call,1109,
          {atom,1109,try_ms},
          [{var,1109,'E'},
           {var,1109,'Pattern'},
           {var,1109,'F'},
           {var,1109,'State'}]}}]}},
     {match,1110,
      {var,1110,'GFF'},
      {call,1110,
       {remote,1110,{atom,1110,sofs},{atom,1110,relation_to_family}},
       [{call,1110,
         {remote,1110,{atom,1110,sofs},{atom,1110,relation}},
         [{var,1110,'GF'},
          {cons,1111,
           {tuple,1111,
            [{atom,1111,gnum_pattern},
             {cons,1111,{atom,1111,filter},{nil,1111}}]},
           {nil,1111}}]}]}},
     {match,1112,
      {var,1112,'GFFL'},
      {call,1112,
       {remote,1112,{atom,1112,sofs},{atom,1112,to_external}},
       [{call,1112,
         {remote,1112,{atom,1112,sofs},{atom,1112,family_union}},
         [{var,1112,'GFF'}]}]}},
     {'try',1113,
      [{match,1114,
        {cons,1114,
         {tuple,1114,
          [{tuple,1114,[{var,1114,'GNum'},{var,1114,'Pattern'}]},
           {var,1114,'GFilterData'}]},
         {nil,1114}},
        {var,1114,'GFFL'}},
       {match,1115,
        {atom,1115,true},
        {op,1115,'=:=',
         {call,1115,{atom,1115,length},[{var,1115,'GFilterData'}]},
         {call,1115,{atom,1115,length},[{var,1115,'FilterData'}]}}},
       {match,1116,
        {cons,1116,{var,1116,'_'},{nil,1116}},
        {var,1116,'GeneratorData'}},
       {match,1117,
        {var,1117,'AbstrMS'},
        {call,1117,
         {atom,1117,gen_ms},
         [{var,1117,'Template'},
          {var,1117,'Pattern'},
          {var,1117,'GFilterData'},
          {var,1117,'State'}]}},
       {cons,1121,
        {tuple,1121,[{var,1121,'GNum'},{var,1121,'AbstrMS'},{atom,1121,all}]},
        {nil,1121}}],
      [],
      [{clause,1122,
        [{tuple,1122,[{var,1122,'_'},{var,1122,'_'},{var,1122,'_'}]}],
        [],
        [{match,1123,
          {tuple,1123,[{var,1123,'TemplVar'},{var,1123,'_'}]},
          {call,1123,
           {atom,1123,anon_var},
           [{tuple,1123,
             [{atom,1123,var},
              {call,1123,{atom,1123,anno0},[]},
              {atom,1123,'_'}]},
            {integer,1123,0}]}},
         {lc,1124,
          {call,1124,
           {atom,1124,one_gen_match_spec},
           [{var,1124,'GNum'},
            {var,1124,'Pattern'},
            {var,1124,'GFilterData'},
            {var,1124,'State'},
            {var,1124,'TemplVar'}]},
          [{generate,1125,
            {tuple,1125,
             [{tuple,1125,[{var,1125,'GNum'},{var,1125,'Pattern'}]},
              {var,1125,'GFilterData'}]},
            {var,1125,'GFFL'}}]}]}],
      []}]}]},
 {function,1128,one_gen_match_spec,5,
  [{clause,1128,
    [{var,1128,'GNum'},
     {var,1128,'Pattern0'},
     {var,1128,'GFilterData'},
     {var,1128,'State'},
     {var,1128,'TemplVar'}],
    [],
    [{match,1129,
      {tuple,1129,[{var,1129,'E'},{var,1129,'Pattern'}]},
      {call,1129,
       {atom,1129,pattern_as_template},
       [{var,1129,'Pattern0'},{var,1129,'TemplVar'}]}},
     {match,1130,
      {var,1130,'AbstrMS'},
      {call,1130,
       {atom,1130,gen_ms},
       [{var,1130,'E'},
        {var,1130,'Pattern'},
        {var,1130,'GFilterData'},
        {var,1130,'State'}]}},
     {tuple,1131,
      [{var,1131,'GNum'},
       {var,1131,'AbstrMS'},
       {lc,1131,
        {call,1131,
         {remote,1131,{atom,1131,erlang},{atom,1131,element}},
         [{integer,1131,3},{var,1131,'FId'}]},
        [{generate,1131,
          {tuple,1131,[{var,1131,'FId'},{var,1131,'_'}]},
          {var,1131,'GFilterData'}}]}]}]}]},
 {function,1133,gen_ms,4,
  [{clause,1133,
    [{var,1133,'E'},
     {var,1133,'Pattern'},
     {var,1133,'GFilterData'},
     {var,1133,'State'}],
    [],
    [{match,1134,
      {tuple,1134,[{atom,1134,ok},{var,1134,'MS'},{var,1134,'AMS'}]},
      {call,1134,
       {atom,1134,try_ms},
       [{var,1134,'E'},
        {var,1134,'Pattern'},
        {call,1134,{atom,1134,filters_as_one},[{var,1134,'GFilterData'}]},
        {var,1134,'State'}]}},
     {'case',1135,
      {var,1135,'MS'},
      [{clause,1136,
        [{cons,1136,
          {tuple,1136,
           [{atom,1136,'$1'},
            {cons,1136,{atom,1136,true},{nil,1136}},
            {cons,1136,{atom,1136,'$1'},{nil,1136}}]},
          {nil,1136}}],
        [],
        [{tuple,1137,
          [{atom,1137,atom},
           {call,1137,{atom,1137,anno0},[]},
           {atom,1137,no_match_spec}]}]},
       {clause,1138,[{var,1138,'_'}],[],[{var,1139,'AMS'}]}]}]}]},
 {function,1146,pattern_as_template,2,
  [{clause,1146,
    [{tuple,1146,[{atom,1146,var},{var,1146,'_'},{atom,1146,'_'}]},
     {var,1146,'TemplVar'}],
    [],
    [{tuple,1147,[{var,1147,'TemplVar'},{var,1147,'TemplVar'}]}]},
   {clause,1148,
    [{match,1148,
      {tuple,1148,[{atom,1148,var},{var,1148,'_'},{var,1148,'_'}]},
      {var,1148,'V'}},
     {var,1148,'_TemplVar'}],
    [],
    [{tuple,1149,[{var,1149,'V'},{var,1149,'V'}]}]},
   {clause,1150,
    [{tuple,1150,
      [{atom,1150,match},
       {var,1150,'L'},
       {var,1150,'E'},
       {tuple,1150,[{atom,1150,var},{var,1150,'_'},{atom,1150,'_'}]}]},
     {var,1150,'TemplVar'}],
    [],
    [{tuple,1151,
      [{var,1151,'TemplVar'},
       {tuple,1151,
        [{atom,1151,match},
         {var,1151,'L'},
         {var,1151,'E'},
         {var,1151,'TemplVar'}]}]}]},
   {clause,1152,
    [{tuple,1152,
      [{atom,1152,match},
       {var,1152,'L'},
       {tuple,1152,[{atom,1152,var},{var,1152,'_'},{atom,1152,'_'}]},
       {var,1152,'E'}]},
     {var,1152,'TemplVar'}],
    [],
    [{tuple,1153,
      [{var,1153,'TemplVar'},
       {tuple,1153,
        [{atom,1153,match},
         {var,1153,'L'},
         {var,1153,'E'},
         {var,1153,'TemplVar'}]}]}]},
   {clause,1154,
    [{match,1154,
      {tuple,1154,
       [{atom,1154,match},
        {var,1154,'_'},
        {var,1154,'_E'},
        {match,1154,
         {tuple,1154,[{atom,1154,var},{var,1154,'_'},{var,1154,'_'}]},
         {var,1154,'V'}}]},
      {var,1154,'P'}},
     {var,1154,'_TemplVar'}],
    [],
    [{tuple,1155,[{var,1155,'V'},{var,1155,'P'}]}]},
   {clause,1156,
    [{match,1156,
      {tuple,1156,
       [{atom,1156,match},
        {var,1156,'_'},
        {match,1156,
         {tuple,1156,[{atom,1156,var},{var,1156,'_'},{var,1156,'_'}]},
         {var,1156,'V'}},
        {var,1156,'_E'}]},
      {var,1156,'P'}},
     {var,1156,'_TemplVar'}],
    [],
    [{tuple,1157,[{var,1157,'V'},{var,1157,'P'}]}]},
   {clause,1158,
    [{var,1158,'E'},{var,1158,'TemplVar'}],
    [],
    [{match,1159,{var,1159,'L'},{call,1159,{atom,1159,anno0},[]}},
     {tuple,1160,
      [{var,1160,'TemplVar'},
       {tuple,1160,
        [{atom,1160,match},
         {var,1160,'L'},
         {var,1160,'E'},
         {var,1160,'TemplVar'}]}]}]}]},
 {function,1180,constants_and_sizes,5,
  [{clause,1180,
    [{var,1180,'Qualifiers0'},
     {var,1180,'E'},
     {var,1180,'Dependencies'},
     {var,1180,'AllIVs'},
     {var,1180,'State'}],
    [],
    [{match,1181,
      {var,1181,'TemplateAsPattern'},
      {call,1181,{atom,1181,template_as_pattern},[{var,1181,'E'}]}},
     {match,1182,
      {var,1182,'Qualifiers'},
      {cons,1182,{var,1182,'TemplateAsPattern'},{var,1182,'Qualifiers0'}}},
     {match,1183,
      {tuple,1183,[{var,1183,'FilterData'},{var,1183,'GeneratorData'}]},
      {call,1183,{atom,1183,qual_data},[{var,1183,'Qualifiers'}]}},
     {match,1184,
      {tuple,1184,
       [{var,1184,'Filter'},{var,1184,'Anon1'},{var,1184,'Imported'}]},
      {call,1185,
       {atom,1185,filter_info},
       [{var,1185,'FilterData'},
        {var,1185,'AllIVs'},
        {var,1185,'Dependencies'},
        {var,1185,'State'}]}},
     {match,1186,
      {var,1186,'PatBindFun'},
      {'fun',1186,
       {clauses,
        [{clause,1186,
          [{var,1186,'_Op'},{var,1186,'Value'}],
          [],
          [{call,1186,{atom,1186,is_bindable},[{var,1186,'Value'}]}]}]}}},
     {match,1187,
      {tuple,1187,[{var,1187,'PatternFrame'},{var,1187,'PatternVars'}]},
      {call,1188,
       {atom,1188,pattern_frame},
       [{var,1188,'GeneratorData'},
        {var,1188,'PatBindFun'},
        {var,1188,'Anon1'},
        {var,1188,'State'}]}},
     {match,1189,
      {var,1189,'PatternFrames'},
      {call,1189,{atom,1189,frame2frames},[{var,1189,'PatternFrame'}]}},
     {match,1190,
      {var,1190,'FilterFun'},
      {'fun',1191,
       {clauses,
        [{clause,1191,
          [{var,1191,'BindFun'}],
          [],
          [{call,1192,
            {atom,1192,filter},
            [{var,1192,'Filter'},
             {var,1192,'PatternFrames'},
             {var,1192,'BindFun'},
             {var,1192,'State'},
             {var,1192,'Imported'}]}]}]}}},
     {match,1194,
      {var,1194,'SzFs'},
      {call,1194,{var,1194,'FilterFun'},[{var,1194,'PatBindFun'}]}},
     {match,1196,
      {var,1196,'SizeInfo'},
      {call,1196,
       {atom,1196,pattern_sizes},
       [{var,1196,'PatternVars'},{var,1196,'SzFs'}]}},
     {match,1197,
      {var,1197,'SelectorFun'},
      {call,1197,{atom,1197,const_selector},[{var,1197,'Imported'}]}},
     {match,1198,
      {var,1198,'PatternConstants'},
      {call,1199,
       {remote,1199,{atom,1199,lists},{atom,1199,flatten}},
       [{call,1199,
         {atom,1199,frames_to_columns},
         [{var,1199,'PatternFrames'},
          {var,1199,'PatternVars'},
          {call,1200,{atom,1200,deref_pattern},[{var,1200,'Imported'}]},
          {var,1201,'SelectorFun'},
          {var,1201,'Imported'},
          {atom,1202,'=:='}]}]}},
     {match,1204,
      {tuple,1204,
       [{var,1204,'EqColumnConstants'},{var,1204,'_EqExtraConsts'}]},
      {call,1205,
       {atom,1205,constants},
       [{var,1205,'FilterFun'},
        {var,1205,'PatternVars'},
        {var,1205,'PatternConstants'},
        {var,1205,'PatternFrame'},
        {var,1206,'FilterData'},
        {var,1206,'Dependencies'},
        {match,1206,{var,1206,'_LookupOp1'},{atom,1206,'=:='}},
        {var,1207,'Imported'},
        {var,1207,'State'}]}},
     {match,1208,
      {tuple,1208,
       [{var,1208,'EqualColumnConstants'},{var,1208,'EqualExtraConsts'}]},
      {call,1209,
       {atom,1209,constants},
       [{var,1209,'FilterFun'},
        {var,1209,'PatternVars'},
        {var,1209,'PatternConstants'},
        {var,1209,'PatternFrame'},
        {var,1210,'FilterData'},
        {var,1210,'Dependencies'},
        {match,1210,{var,1210,'_LookupOp2'},{atom,1210,'=='}},
        {var,1211,'Imported'},
        {var,1211,'State'}]}},
     {match,1219,
      {var,1219,'ExtraCon1'},
      {lc,1220,
       {tuple,1220,
        [{tuple,1220,[{var,1220,'GId'},{var,1220,'Col'}]},
         {tuple,1220,[{var,1220,'Val'},{var,1220,'Op'}]}]},
       [{generate,1221,
         {tuple,1221,[{var,1221,'Consts'},{var,1221,'Op'}]},
         {cons,1221,
          {tuple,1221,[{var,1221,'EqualExtraConsts'},{atom,1221,'=='}]},
          {nil,1221}}},
        {generate,1222,
         {tuple,1222,
          [{tuple,1222,[{var,1222,'GId'},{var,1222,'Col'}]},{var,1222,'Val'}]},
         {var,1222,'Consts'}}]}},
     {match,1223,
      {var,1223,'ExtraConstants'},
      {call,1224,
       {atom,1224,family_list},
       [{lc,1224,
         {tuple,1224,
          [{var,1224,'GId'},
           {tuple,1224,[{var,1224,'Col'},{var,1224,'ValOps'}]}]},
         [{generate,1225,
           {tuple,1225,
            [{tuple,1225,[{var,1225,'GId'},{var,1225,'Col'}]},
             {var,1225,'ValOps'}]},
           {call,1225,{atom,1225,family_list},[{var,1225,'ExtraCon1'}]}}]}]}},
     {tuple,1226,
      [{var,1226,'EqColumnConstants'},
       {var,1226,'EqualColumnConstants'},
       {var,1226,'ExtraConstants'},
       {var,1226,'SizeInfo'}]}]}]},
 {function,1228,constants,9,
  [{clause,1228,
    [{var,1228,'FilterFun'},
     {var,1228,'PatternVars'},
     {var,1228,'PatternConstants'},
     {var,1228,'PatternFrame'},
     {var,1229,'FilterData'},
     {var,1229,'Dependencies'},
     {var,1229,'LookupOp'},
     {var,1229,'Imported'},
     {var,1229,'State'}],
    [],
    [{match,1230,
      {var,1230,'BindFun'},
      {'fun',1230,
       {clauses,
        [{clause,1230,
          [{var,1230,'_Op'},{var,1230,'Value'}],
          [],
          [{call,1230,{atom,1230,is_bindable},[{var,1230,'Value'}]}]}]}}},
     {match,1231,
      {var,1231,'Fs'},
      {call,1231,{var,1231,'FilterFun'},[{var,1231,'BindFun'}]}},
     {match,1232,
      {var,1232,'SelectorFun'},
      {call,1232,{atom,1232,const_selector},[{var,1232,'Imported'}]}},
     {match,1233,
      {var,1233,'ColumnConstants0'},
      {call,1233,
       {atom,1233,frames_to_columns},
       [{var,1233,'Fs'},
        {var,1233,'PatternVars'},
        {call,1234,
         {atom,1234,deref_lookup},
         [{var,1234,'Imported'},{var,1234,'LookupOp'}]},
        {var,1235,'SelectorFun'},
        {var,1235,'Imported'},
        {var,1235,'LookupOp'}]}},
     {match,1236,
      {var,1236,'ColumnConstants1'},
      {call,1236,
       {remote,1236,{atom,1236,lists},{atom,1236,flatten}},
       [{var,1236,'ColumnConstants0'}]}},
     {match,1237,
      {var,1237,'ExtraConstants'},
      {lc,1238,
       {tuple,1238,
        [{tuple,1238,[{var,1238,'GId'},{var,1238,'Col'}]},{var,1238,'Val'}]},
       [{generate,1239,
         {tuple,1239,
          [{tuple,1239,[{var,1239,'GId'},{var,1239,'Col'}]},
           {var,1239,'Vals'}]},
         {op,1239,'--',
          {var,1239,'ColumnConstants1'},
          {var,1239,'PatternConstants'}}},
        {op,1240,'=/=',{var,1240,'GId'},{integer,783,0}},
        {generate,1241,{var,1241,'Val'},{var,1241,'Vals'}}]}},
     {match,1242,
      {var,1242,'ColumnConstants'},
      {call,1242,
       {atom,1242,lu_skip},
       [{var,1242,'ColumnConstants1'},
        {var,1242,'FilterData'},
        {var,1242,'PatternFrame'},
        {var,1243,'PatternVars'},
        {var,1243,'Dependencies'},
        {var,1243,'State'},
        {var,1244,'Imported'},
        {var,1244,'LookupOp'}]}},
     {tuple,1245,
      [{var,1245,'ColumnConstants'},{var,1245,'ExtraConstants'}]}]}]},
 {function,1264,deref_lookup,2,
  [{clause,1264,
    [{var,1264,'Imported'},{atom,1264,'=='}],
    [],
    [{'fun',1266,
      {clauses,
       [{clause,1266,
         [{var,1266,'PV'},{var,1266,'F'}],
         [],
         [{call,1266,
           {atom,1266,deref_values},
           [{var,1266,'PV'},{var,1266,'F'},{var,1266,'Imported'}]}]}]}}]},
   {clause,1267,
    [{var,1267,'Imported'},{atom,1267,'=:='}],
    [],
    [{match,1270,
      {var,1270,'BFun'},
      {'fun',1270,
       {clauses,
        [{clause,1270,
          [{var,1270,'DV'},{var,1270,'Op'}],
          [],
          [{op,1271,'orelse',
            {op,1271,'=:=',{var,1271,'Op'},{atom,1271,'=:='}},
            {call,1271,
             {atom,1271,free_of_integers},
             [{var,1271,'DV'},{var,1271,'Imported'}]}}]}]}}},
     {'fun',1273,
      {clauses,
       [{clause,1273,
         [{var,1273,'PV'},{var,1273,'F'}],
         [],
         [{call,1273,
           {atom,1273,deref_values},
           [{var,1273,'PV'},
            {var,1273,'F'},
            {var,1273,'BFun'},
            {var,1273,'Imported'}]}]}]}}]}]},
 {function,1278,lu_skip,8,
  [{clause,1278,
    [{var,1278,'ColConstants'},
     {var,1278,'FilterData'},
     {var,1278,'PatternFrame'},
     {var,1278,'PatternVars'},
     {var,1279,'Dependencies'},
     {var,1279,'State'},
     {var,1279,'Imported'},
     {var,1279,'LookupOp'}],
    [],
    [{match,1282,
      {var,1282,'FailSelector'},
      {'fun',1282,
       {clauses,
        [{clause,1282,
          [{var,1282,'_Frame'}],
          [],
          [{'fun',1282,
            {clauses,
             [{clause,1282,
               [{var,1282,'Value'}],
               [],
               [{tuple,1282,[{atom,1282,yes},{var,1282,'Value'}]}]}]}}]}]}}},
     {match,1285,
      {var,1285,'PatternFrames'},
      {call,1285,{atom,1285,frame2frames},[{var,1285,'PatternFrame'}]}},
     {match,1286,
      {var,1286,'PatternColumns'},
      {call,1287,
       {remote,1287,{atom,1287,lists},{atom,1287,flatten}},
       [{call,1287,
         {atom,1287,frames_to_columns},
         [{var,1287,'PatternFrames'},
          {var,1287,'PatternVars'},
          {call,1288,{atom,1288,deref_pattern},[{var,1288,'Imported'}]},
          {var,1288,'FailSelector'},
          {var,1289,'Imported'},
          {var,1289,'LookupOp'}]}]}},
     {match,1298,
      {var,1298,'BindFun'},
      {'fun',1298,
       {clauses,
        [{clause,1298,
          [{var,1298,'_Op'},{var,1298,'Value'}],
          [],
          [{call,1298,{atom,1298,is_bindable},[{var,1298,'Value'}]}]}]}}},
     {match,1299,
      {var,1299,'ColFil'},
      {lc,1299,
       {tuple,1299,
        [{var,1299,'Column'},
         {call,1299,
          {remote,1299,{atom,1299,erlang},{atom,1299,element}},
          [{integer,1299,3},{var,1299,'FId'}]}]},
       [{generate,1300,
         {tuple,1300,
          [{var,1300,'FId'},{tuple,1300,[{atom,1300,fil},{var,1300,'Fil'}]}]},
         {call,1301,
          {atom,1301,filter_list},
          [{var,1301,'FilterData'},
           {var,1301,'Dependencies'},
           {var,1301,'State'}]}},
        {op,1302,'=/=',
         {nil,1302},
         {match,1302,
          {var,1302,'SFs'},
          {call,1302,
           {atom,1302,safe_filter},
           [{call,1302,{atom,1302,reset_anno},[{var,1302,'Fil'}]},
            {var,1302,'PatternFrames'},
            {var,1303,'BindFun'},
            {var,1303,'State'},
            {var,1303,'Imported'}]}}},
        {generate,1304,
         {tuple,1304,[{var,1304,'GId'},{var,1304,'PV'}]},
         {var,1304,'PatternVars'}},
        {op,1305,'=/=',
         {nil,1305},
         {match,1306,
          {var,1306,'Cols'},
          {call,1306,
           {atom,1306,hd},
           [{call,1306,
             {atom,1306,frames_to_columns},
             [{var,1306,'SFs'},
              {cons,1306,
               {tuple,1306,[{var,1306,'GId'},{var,1306,'PV'}]},
               {nil,1306}},
              {call,1307,
               {atom,1307,deref_lu_skip},
               [{var,1307,'LookupOp'},{var,1308,'Imported'}]},
              {call,1309,{atom,1309,const_selector},[{var,1309,'Imported'}]},
              {var,1310,'Imported'},
              {var,1310,'LookupOp'}]}]}}},
        {op,1316,'=:=',
         {call,1316,
          {atom,1316,length},
          [{match,1316,
            {var,1316,'D'},
            {op,1316,'--',{var,1316,'Cols'},{var,1316,'PatternColumns'}}}]},
         {integer,1316,1}},
        {generate,1317,
         {tuple,1317,
          [{match,1317,
            {tuple,1317,[{var,1317,'_'},{var,1317,'Col'}]},
            {var,1317,'Column'}},
           {var,1317,'Constants'}]},
         {var,1317,'D'}},
        {call,1319,
         {remote,1319,{atom,1319,lists},{atom,1319,all}},
         [{'fun',1320,
           {clauses,
            [{clause,1320,
              [{var,1320,'Frame'}],
              [],
              [{match,1325,
                {tuple,1325,[{var,1325,'VarI'},{var,1325,'FrameI'}]},
                {call,1325,
                 {atom,1325,unify_column},
                 [{var,1325,'Frame'},
                  {var,1325,'PV'},
                  {var,1325,'Col'},
                  {var,1325,'BindFun'},
                  {var,1326,'Imported'}]}},
               {match,1327,
                {var,1327,'VarValues'},
                {call,1327,
                 {atom,1327,deref_skip},
                 [{var,1327,'VarI'},
                  {var,1327,'FrameI'},
                  {var,1327,'LookupOp'},
                  {var,1327,'Imported'}]}},
               {match,1329,
                {tuple,1329,[{var,1329,'NV'},{var,1329,'F1'}]},
                {call,1329,
                 {atom,1329,unify_column},
                 [{var,1329,'PatternFrame'},
                  {var,1329,'PV'},
                  {var,1329,'Col'},
                  {var,1329,'BindFun'},
                  {var,1330,'Imported'}]}},
               {match,1331,
                {var,1331,'F2'},
                {call,1331,
                 {atom,1331,unify_var_bindings},
                 [{var,1331,'VarValues'},
                  {atom,1331,'=:='},
                  {var,1331,'NV'},
                  {var,1331,'F1'},
                  {var,1332,'BindFun'},
                  {var,1332,'Imported'},
                  {atom,1332,false}]}},
               {match,1343,
                {var,1343,'LookedUpConstants'},
                {'case',1344,
                 {call,1344,
                  {remote,1344,{atom,1344,lists},{atom,1344,keyfind}},
                  [{var,1344,'Column'},
                   {integer,1344,1},
                   {var,1344,'ColConstants'}]},
                 [{clause,1345,[{atom,1345,false}],[],[{nil,1345}]},
                  {clause,1346,
                   [{tuple,1346,[{var,1346,'Column'},{var,1346,'LUCs'}]}],
                   [],
                   [{var,1346,'LUCs'}]}]}},
               {op,1350,'andalso',
                {op,1350,'=<',
                 {call,1350,{atom,1350,length},[{var,1350,'VarValues'}]},
                 {integer,1350,1}},
                {op,1351,'andalso',
                 {op,1351,'=:=',
                  {op,1351,'--',
                   {var,1351,'Constants'},
                   {var,1351,'LookedUpConstants'}},
                  {nil,1351}},
                 {call,1352,
                  {atom,1352,bindings_is_subset},
                  [{var,1352,'Frame'},
                   {var,1352,'F2'},
                   {var,1352,'Imported'}]}}}]}]}},
          {var,1353,'SFs'}]}]}},
     {match,1354,
      {var,1354,'ColFils'},
      {call,1354,{atom,1354,family_list},[{var,1354,'ColFil'}]}},
     {lc,1358,
      {tuple,1358,
       [{var,1358,'Col'},
        {var,1358,'Constants'},
        {call,1358,
         {atom,1358,skip_tag},
         [{var,1358,'Col'},{var,1358,'ColFils'},{var,1358,'FilterData'}]}]},
      [{generate,1359,
        {tuple,1359,[{var,1359,'Col'},{var,1359,'Constants'}]},
        {var,1359,'ColConstants'}}]}]}]},
 {function,1361,deref_skip,4,
  [{clause,1361,
    [{var,1361,'E'},
     {var,1361,'F'},
     {var,1361,'_LookupOp'},
     {var,1361,'Imported'}],
    [],
    [{call,1362,
      {atom,1362,deref},
      [{var,1362,'E'},{var,1362,'F'},{var,1362,'Imported'}]}]}]},
 {function,1364,deref_lu_skip,2,
  [{clause,1364,
    [{atom,1364,'=='},{var,1364,'Imported'}],
    [],
    [{match,1366,
      {var,1366,'BFun'},
      {'fun',1366,
       {clauses,
        [{clause,1366,
          [{var,1366,'DV'},{var,1366,'Op'}],
          [],
          [{op,1367,'orelse',
            {op,1367,'=:=',{var,1367,'Op'},{atom,1367,'=='}},
            {call,1367,
             {atom,1367,free_of_integers},
             [{var,1367,'DV'},{var,1367,'Imported'}]}}]}]}}},
     {'fun',1369,
      {clauses,
       [{clause,1369,
         [{var,1369,'PV'},{var,1369,'F'}],
         [],
         [{call,1369,
           {atom,1369,deref_values},
           [{var,1369,'PV'},
            {var,1369,'F'},
            {var,1369,'BFun'},
            {var,1369,'Imported'}]}]}]}}]},
   {clause,1370,
    [{atom,1370,'=:='},{var,1370,'Imported'}],
    [],
    [{'fun',1372,
      {clauses,
       [{clause,1372,
         [{var,1372,'PV'},{var,1372,'F'}],
         [],
         [{call,1372,
           {atom,1372,deref_values},
           [{var,1372,'PV'},{var,1372,'F'},{var,1372,'Imported'}]}]}]}}]}]},
 {function,1374,equal_columns,4,
  [{clause,1374,
    [{var,1374,'Qualifiers'},
     {var,1374,'AllIVs'},
     {var,1374,'Dependencies'},
     {var,1374,'State'}],
    [],
    [{match,1375,
      {tuple,1375,[{var,1375,'Cs'},{var,1375,'Skip'}]},
      {call,1376,
       {atom,1376,join_info},
       [{var,1376,'Qualifiers'},
        {var,1376,'AllIVs'},
        {var,1376,'Dependencies'},
        {var,1376,'State'},
        {match,1376,{var,1376,'_JoinOp'},{atom,1376,'=='}}]}},
     {call,1377,
      {atom,1377,join_gens},
      [{var,1377,'Cs'},{var,1377,'Qualifiers'},{var,1377,'Skip'}]}]}]},
 {function,1379,eq_columns,4,
  [{clause,1379,
    [{var,1379,'Qualifiers'},
     {var,1379,'AllIVs'},
     {var,1379,'Dependencies'},
     {var,1379,'State'}],
    [],
    [{match,1380,
      {tuple,1380,[{var,1380,'Cs'},{var,1380,'Skip'}]},
      {call,1381,
       {atom,1381,join_info},
       [{var,1381,'Qualifiers'},
        {var,1381,'AllIVs'},
        {var,1381,'Dependencies'},
        {var,1381,'State'},
        {match,1381,{var,1381,'_JoinOp'},{atom,1381,'=:='}}]}},
     {call,1382,
      {atom,1382,join_gens},
      [{var,1382,'Cs'},{var,1382,'Qualifiers'},{var,1382,'Skip'}]}]}]},
 {function,1385,join_gens,3,
  [{clause,1385,
    [{var,1385,'Cs0'},{var,1385,'Qs'},{var,1385,'Skip'}],
    [],
    [{match,1386,
      {var,1386,'Cs'},
      {lc,1386,
       {call,1386,{atom,1386,family_list},[{var,1386,'C'}]},
       [{generate,1386,{var,1386,'C'},{var,1386,'Cs0'}}]}},
     {match,1387,
      {tuple,1387,[{var,1387,'FD'},{var,1387,'_GeneratorData'}]},
      {call,1387,{atom,1387,qual_data},[{var,1387,'Qs'}]}},
     {tuple,1388,
      [{call,1388,
        {atom,1388,join_gens2},
        [{call,1388,
          {remote,1388,{atom,1388,lists},{atom,1388,filter}},
          [{'fun',1388,
            {clauses,
             [{clause,1388,
               [{var,1388,'C'}],
               [],
               [{op,1388,'=:=',
                 {call,1388,{atom,1388,length},[{var,1388,'C'}]},
                 {integer,1388,2}}]}]}},
           {var,1388,'Cs'}]},
         {var,1388,'FD'},
         {var,1388,'Skip'}]},
       {call,1389,
        {atom,1389,join_gens2},
        [{call,1389,
          {remote,1389,{atom,1389,lists},{atom,1389,filter}},
          [{'fun',1389,
            {clauses,
             [{clause,1389,
               [{var,1389,'C'}],
               [],
               [{op,1389,'>',
                 {call,1389,{atom,1389,length},[{var,1389,'C'}]},
                 {integer,1389,2}}]}]}},
           {var,1389,'Cs'}]},
         {var,1389,'FD'},
         {var,1389,'Skip'}]}]}]}]},
 {function,1391,join_gens2,3,
  [{clause,1391,
    [{var,1391,'Cs0'},{var,1391,'FilterData'},{var,1391,'Skip'}],
    [],
    [{lc,1392,
      {tuple,1392,
       [{var,1392,'J'},
        {call,1392,
         {atom,1392,skip_tag},
         [{'case',1392,
           {call,1392,
            {remote,1392,{atom,1392,lists},{atom,1392,keyfind}},
            [{var,1392,'J'},{integer,1392,1},{var,1392,'Skip'}]},
           [{clause,1393,
             [{tuple,1393,[{var,1393,'J'},{var,1393,'FilL'}]}],
             [],
             [{var,1394,'FilL'}]},
            {clause,1395,[{atom,1395,false}],[],[{nil,1396}]}]},
          {var,1397,'FilterData'}]}]},
      [{generate,1398,
        {var,1398,'J'},
        {call,1398,
         {remote,1398,{atom,1398,lists},{atom,1398,append}},
         [{lc,1398,
           {call,1398,
            {remote,1398,{atom,1398,qlc},{atom,1398,all_selections}},
            [{var,1398,'C'}]},
           [{generate,1398,{var,1398,'C'},{var,1398,'Cs0'}}]}]}}]}]}]},
 {function,1400,skip_tag,2,
  [{clause,1400,
    [{var,1400,'FilList'},{var,1400,'FilterData'}],
    [],
    [{tuple,1401,
      [{'if',1401,
        [{clause,1402,[],
          [[{op,1402,'=:=',
             {call,1402,{atom,1402,length},[{var,1402,'FilterData'}]},
             {call,1402,{atom,1402,length},[{var,1402,'FilList'}]}}]],
          [{atom,1403,all}]},
         {clause,1404,[],[[{atom,1404,true}]],[{atom,1405,some}]}]},
       {var,1406,'FilList'}]}]}]},
 {function,1408,skip_tag,3,
  [{clause,1408,
    [{var,1408,'Col'},{var,1408,'ColFils'},{var,1408,'FilterData'}],
    [],
    [{'case',1409,
      {call,1409,
       {remote,1409,{atom,1409,lists},{atom,1409,keyfind}},
       [{var,1409,'Col'},{integer,1409,1},{var,1409,'ColFils'}]},
      [{clause,1410,
        [{tuple,1410,[{var,1410,'Col'},{var,1410,'FilL'}]}],
        [],
        [{match,1411,
          {var,1411,'Tag'},
          {'if',1411,
           [{clause,1412,[],
             [[{op,1412,'=:=',
                {call,1412,{atom,1412,length},[{var,1412,'FilterData'}]},
                {call,1412,{atom,1412,length},[{var,1412,'FilL'}]}}]],
             [{atom,1413,all}]},
            {clause,1414,[],[[{atom,1414,true}]],[{atom,1415,some}]}]}},
         {tuple,1417,[{var,1417,'Tag'},{var,1417,'FilL'}]}]},
       {clause,1418,
        [{atom,1418,false}],
        [],
        [{tuple,1419,[{atom,1419,some},{nil,1419}]}]}]}]}]},
 {function,1427,join_info,5,
  [{clause,1427,
    [{var,1427,'Qualifiers'},
     {var,1427,'AllIVs'},
     {var,1427,'Dependencies'},
     {var,1427,'State'},
     {var,1427,'JoinOp'}],
    [],
    [{match,1428,
      {tuple,1428,[{var,1428,'FilterData'},{var,1428,'GeneratorData'}]},
      {call,1428,{atom,1428,qual_data},[{var,1428,'Qualifiers'}]}},
     {match,1429,
      {tuple,1429,
       [{var,1429,'Filter'},{var,1429,'Anon1'},{var,1429,'Imported'}]},
      {call,1430,
       {atom,1430,filter_info},
       [{var,1430,'FilterData'},
        {var,1430,'AllIVs'},
        {var,1430,'Dependencies'},
        {var,1430,'State'}]}},
     {match,1431,
      {var,1431,'BindFun'},
      {'fun',1431,
       {clauses,
        [{clause,1431,
          [{var,1431,'_Op'},{var,1431,'V'}],
          [],
          [{call,1431,
            {atom,1431,bind_no_const},
            [{var,1431,'V'},{var,1431,'Imported'}]}]}]}}},
     {match,1432,
      {tuple,1432,[{var,1432,'PatternFrame'},{var,1432,'PatternVars'}]},
      {call,1433,
       {atom,1433,pattern_frame},
       [{var,1433,'GeneratorData'},
        {var,1433,'BindFun'},
        {var,1433,'Anon1'},
        {var,1433,'State'}]}},
     {match,1434,
      {var,1434,'PatternFrames'},
      {call,1434,{atom,1434,frame2frames},[{var,1434,'PatternFrame'}]}},
     {match,1435,
      {var,1435,'Fs'},
      {call,1435,
       {atom,1435,filter},
       [{var,1435,'Filter'},
        {var,1435,'PatternFrames'},
        {var,1435,'BindFun'},
        {var,1435,'State'},
        {var,1435,'Imported'}]}},
     {match,1436,
      {var,1436,'SelectorFun'},
      {call,1436,{atom,1436,no_const_selector},[{var,1436,'Imported'}]}},
     {match,1437,
      {var,1437,'Cols'},
      {call,1437,
       {atom,1437,frames_to_columns},
       [{var,1437,'Fs'},
        {var,1437,'PatternVars'},
        {'fun',1438,
         {clauses,
          [{clause,1438,
            [{var,1438,'PV1'},{var,1438,'F'}],
            [],
            [{call,1438,
              {atom,1438,deref_join},
              [{var,1438,'PV1'},{var,1438,'F'},{var,1438,'JoinOp'}]}]}]}},
        {var,1439,'SelectorFun'},
        {var,1439,'Imported'},
        {atom,1439,'=:='}]}},
     {match,1440,
      {var,1440,'JC'},
      {call,1440,{atom,1440,join_classes},[{var,1440,'Cols'}]}},
     {match,1441,
      {var,1441,'Skip'},
      {call,1441,
       {atom,1441,join_skip},
       [{var,1441,'JC'},
        {var,1441,'FilterData'},
        {var,1441,'PatternFrame'},
        {var,1442,'PatternVars'},
        {var,1442,'Dependencies'},
        {var,1442,'State'},
        {var,1442,'Imported'},
        {var,1442,'JoinOp'}]}},
     {tuple,1443,[{var,1443,'JC'},{var,1443,'Skip'}]}]}]},
 {function,1445,deref_join,3,
  [{clause,1445,
    [{var,1445,'E'},{var,1445,'Frame'},{atom,1445,'=='}],
    [],
    [{call,1446,
      {atom,1446,deref_values},
      [{var,1446,'E'},
       {var,1446,'Frame'},
       {match,1446,{var,1446,'_Imp'},{nil,1446}}]}]},
   {clause,1447,
    [{var,1447,'E'},{var,1447,'Frame'},{atom,1447,'=:='}],
    [],
    [{call,1452,
      {atom,1452,deref_values},
      [{var,1452,'E'},
       {var,1452,'Frame'},
       {'fun',1452,
        {clauses,
         [{clause,1452,
           [{var,1452,'_DV'},{var,1452,'Op'}],
           [],
           [{op,1452,'=:=',{var,1452,'Op'},{atom,1452,'=:='}}]}]}},
       {atom,1452,all}]}]}]},
 {function,1454,join_classes,1,
  [{clause,1454,
    [{var,1454,'Cols0'}],
    [],
    [{match,1455,
      {var,1455,'ColVar'},
      {call,1455,
       {remote,1455,{atom,1455,sofs},{atom,1455,relation}},
       [{call,1455,
         {remote,1455,{atom,1455,lists},{atom,1455,append}},
         [{var,1455,'Cols0'}]}]}},
     {match,1456,
      {var,1456,'Cols'},
      {call,1456,
       {remote,1456,{atom,1456,sofs},{atom,1456,partition}},
       [{integer,1456,2},{var,1456,'ColVar'}]}},
     {lc,1457,
      {lc,1457,
       {var,1457,'C'},
       [{generate,1457,
         {tuple,1457,[{var,1457,'C'},{var,1457,'_'}]},
         {var,1457,'Cs'}}]},
      [{generate,1457,
        {var,1457,'Cs'},
        {call,1457,
         {remote,1457,{atom,1457,sofs},{atom,1457,to_external}},
         [{var,1457,'Cols'}]}},
       {op,1457,'>',
        {call,1457,{atom,1457,length},[{var,1457,'Cs'}]},
        {integer,1457,1}}]}]}]},
 {function,1459,join_skip,8,
  [{clause,1459,
    [{var,1459,'JoinClasses'},
     {var,1459,'FilterData'},
     {var,1459,'PatternFrame'},
     {var,1459,'PatternVars'},
     {var,1459,'Dependencies'},
     {var,1460,'State'},
     {var,1460,'Imported'},
     {var,1460,'JoinOp'}],
    [],
    [{match,1461,
      {var,1461,'PatternFrames'},
      {call,1461,{atom,1461,frame2frames},[{var,1461,'PatternFrame'}]}},
     {match,1462,
      {var,1462,'ColFil'},
      {lc,1462,
       {tuple,1462,
        [{var,1462,'JoinClass'},
         {call,1462,
          {remote,1462,{atom,1462,erlang},{atom,1462,element}},
          [{integer,1462,3},{var,1462,'FId'}]}]},
       [{generate,1463,
         {match,1463,
          {cons,1463,
           {tuple,1463,[{var,1463,'Q1'},{var,1463,'C1'}]},
           {cons,1463,
            {tuple,1463,[{var,1463,'Q2'},{var,1463,'C2'}]},
            {nil,1463}}},
          {var,1463,'JoinClass'}},
         {var,1463,'JoinClasses'}},
        {generate,1464,
         {tuple,1464,[{var,1464,'GId1'},{var,1464,'PV1'}]},
         {var,1464,'PatternVars'}},
        {op,1465,'=:=',
         {call,1465,
          {remote,1465,{atom,1465,erlang},{atom,1465,element}},
          [{integer,1465,3},{var,1465,'GId1'}]},
         {var,1465,'Q1'}},
        {generate,1466,
         {tuple,1466,[{var,1466,'GId2'},{var,1466,'PV2'}]},
         {var,1466,'PatternVars'}},
        {op,1467,'=:=',
         {call,1467,
          {remote,1467,{atom,1467,erlang},{atom,1467,element}},
          [{integer,1467,3},{var,1467,'GId2'}]},
         {var,1467,'Q2'}},
        {generate,1470,
         {tuple,1470,
          [{var,1470,'FId'},{tuple,1470,[{atom,1470,fil},{var,1470,'Fil'}]}]},
         {call,1471,
          {atom,1471,filter_list},
          [{var,1471,'FilterData'},
           {var,1471,'Dependencies'},
           {var,1471,'State'}]}},
        {generate,1472,
         {tuple,1472,
          [{atom,1472,value},{tuple,1472,[{var,1472,'_'},{var,1472,'GIds'}]}]},
         {cons,1473,
          {call,1473,
           {remote,1473,{atom,1473,lists},{atom,1473,keysearch}},
           [{var,1473,'FId'},{integer,1473,1},{var,1473,'Dependencies'}]},
          {nil,1473}}},
        {op,1474,'=:=',
         {var,1474,'GIds'},
         {call,1474,
          {remote,1474,{atom,1474,lists},{atom,1474,sort}},
          [{cons,1474,
            {var,1474,'GId1'},
            {cons,1474,{var,1474,'GId2'},{nil,1474}}}]}},
        {block,1476,
         [{match,1483,
           {var,1483,'BindFun'},
           {'fun',1483,
            {clauses,
             [{clause,1483,
               [{var,1483,'_Op'},{var,1483,'V'}],
               [],
               [{call,1483,{atom,1483,is_bindable},[{var,1483,'V'}]}]}]}}},
          {match,1484,
           {tuple,1484,[{var,1484,'V1'},{var,1484,'JF1'}]},
           {call,1485,
            {atom,1485,unify_column},
            [{var,1485,'PatternFrame'},
             {var,1485,'PV1'},
             {var,1485,'C1'},
             {var,1485,'BindFun'},
             {var,1485,'Imported'}]}},
          {match,1486,
           {tuple,1486,[{var,1486,'V2'},{var,1486,'JF2'}]},
           {call,1487,
            {atom,1487,unify_column},
            [{var,1487,'JF1'},
             {var,1487,'PV2'},
             {var,1487,'C2'},
             {var,1487,'BindFun'},
             {var,1487,'Imported'}]}},
          {match,1488,
           {var,1488,'JF'},
           {call,1488,
            {atom,1488,unify},
            [{var,1488,'JoinOp'},
             {var,1488,'V1'},
             {var,1488,'V2'},
             {var,1488,'JF2'},
             {var,1488,'BindFun'},
             {var,1488,'Imported'}]}},
          {match,1491,
           {var,1491,'SFs'},
           {call,1491,
            {atom,1491,safe_filter},
            [{call,1491,{atom,1491,reset_anno},[{var,1491,'Fil'}]},
             {var,1491,'PatternFrames'},
             {var,1492,'BindFun'},
             {var,1492,'State'},
             {var,1492,'Imported'}]}},
          {match,1493,
           {var,1493,'JImp'},
           {call,1493,
            {remote,1493,{atom,1493,qlc},{atom,1493,vars}},
            [{cons,1493,
              {var,1493,'SFs'},
              {cons,1493,{var,1493,'JF'},{nil,1493}}}]}},
          {op,1496,'andalso',
           {call,1494,
            {remote,1494,{atom,1494,lists},{atom,1494,all}},
            [{'fun',1494,
              {clauses,
               [{clause,1494,
                 [{var,1494,'Frame'}],
                 [],
                 [{call,1495,
                   {atom,1495,bindings_is_subset},
                   [{var,1495,'Frame'},
                    {var,1495,'JF'},
                    {var,1495,'JImp'}]}]}]}},
             {var,1496,'SFs'}]},
           {op,1496,'=/=',{var,1496,'SFs'},{nil,1496}}}]}]}},
     {call,1498,{atom,1498,family_list},[{var,1498,'ColFil'}]}]}]},
 {function,1500,filter_info,4,
  [{clause,1500,
    [{var,1500,'FilterData'},
     {var,1500,'AllIVs'},
     {var,1500,'Dependencies'},
     {var,1500,'State'}],
    [],
    [{match,1501,
      {var,1501,'FilterList'},
      {call,1501,
       {atom,1501,filter_list},
       [{var,1501,'FilterData'},
        {var,1501,'Dependencies'},
        {var,1501,'State'}]}},
     {match,1502,
      {var,1502,'Filter0'},
      {call,1502,
       {atom,1502,reset_anno},
       [{call,1502,{atom,1502,filters_as_one},[{var,1502,'FilterList'}]}]}},
     {match,1503,{var,1503,'Anon0'},{integer,1503,0}},
     {match,1504,
      {tuple,1504,[{var,1504,'Filter'},{var,1504,'Anon1'}]},
      {call,1504,
       {atom,1504,anon_var},
       [{var,1504,'Filter0'},{var,1504,'Anon0'}]}},
     {match,1505,
      {var,1505,'Imported'},
      {call,1505,
       {remote,1505,{atom,1505,ordsets},{atom,1505,subtract}},
       [{call,1505,
         {remote,1505,{atom,1505,qlc},{atom,1505,vars}},
         [{var,1505,'Filter'}]},
        {call,1506,
         {remote,1506,{atom,1506,ordsets},{atom,1506,from_list}},
         [{var,1506,'AllIVs'}]}]}},
     {tuple,1507,
      [{var,1507,'Filter'},{var,1507,'Anon1'},{var,1507,'Imported'}]}]}]},
 {function,1519,filter_list,3,
  [{clause,1519,
    [{var,1519,'FilterData'},{var,1519,'Dependencies'},{var,1519,'State'}],
    [],
    [{match,1520,
      {var,1520,'RDs'},
      {call,1520,
       {remote,1520,{atom,1520,erlang},{atom,1520,element}},
       [{integer,1520,4},{var,1520,'State'}]}},
     {call,1521,
      {atom,1521,sel_gf},
      [{var,1521,'FilterData'},
       {integer,1521,1},
       {var,1521,'Dependencies'},
       {var,1521,'RDs'},
       {nil,1521},
       {nil,1521}]}]}]},
 {function,1523,sel_gf,6,
  [{clause,1523,
    [{nil,1523},
     {var,1523,'_N'},
     {var,1523,'_Deps'},
     {var,1523,'_RDs'},
     {var,1523,'_Gens'},
     {var,1523,'_Gens1'}],
    [],
    [{nil,1524}]},
   {clause,1525,
    [{cons,1525,
      {match,1525,
       {tuple,1525,
        [{match,1525,
          {tuple,1525,[{atom,1525,qid},{var,1525,'_'},{var,1525,'N'}]},
          {var,1525,'Id'}},
         {tuple,1525,[{atom,1525,fil},{var,1525,'F'}]}]},
       {var,1525,'Fil'}},
      {var,1525,'FData'}},
     {var,1525,'N'},
     {var,1525,'Deps'},
     {var,1525,'RDs'},
     {var,1525,'Gens'},
     {var,1525,'Gens1'}],
    [],
    [{'case',1526,
      {call,1526,
       {remote,1526,{atom,1526,erl_lint},{atom,1526,is_guard_test}},
       [{var,1526,'F'},{var,1526,'RDs'}]},
      [{clause,1527,
        [{atom,1527,true}],
        [],
        [{match,1528,
          {tuple,1528,[{var,1528,'Id'},{var,1528,'GIds'}]},
          {call,1528,
           {remote,1528,{atom,1528,lists},{atom,1528,keyfind}},
           [{var,1528,'Id'},{integer,1528,1},{var,1528,'Deps'}]}},
         {'case',1529,
          {op,1529,'=<',
           {call,1529,{atom,1529,length},[{var,1529,'GIds'}]},
           {integer,1529,1}},
          [{clause,1530,
            [{atom,1530,true}],
            [],
            [{'case',1531,
              {call,1531,
               {atom,1531,generators_in_scope},
               [{var,1531,'GIds'},{var,1531,'Gens1'}]},
              [{clause,1532,
                [{atom,1532,true}],
                [],
                [{cons,1533,
                  {var,1533,'Fil'},
                  {call,1533,
                   {atom,1533,sel_gf},
                   [{var,1533,'FData'},
                    {op,1533,'+',{var,1533,'N'},{integer,1533,1}},
                    {var,1533,'Deps'},
                    {var,1533,'RDs'},
                    {var,1533,'Gens'},
                    {var,1533,'Gens1'}]}}]},
               {clause,1534,
                [{atom,1534,false}],
                [],
                [{call,1535,
                  {atom,1535,sel_gf},
                  [{var,1535,'FData'},
                   {op,1535,'+',{var,1535,'N'},{integer,1535,1}},
                   {var,1535,'Deps'},
                   {var,1535,'RDs'},
                   {nil,1535},
                   {nil,1535}]}]}]}]},
           {clause,1537,
            [{atom,1537,false}],
            [],
            [{'case',1538,
              {call,1538,
               {atom,1538,generators_in_scope},
               [{var,1538,'GIds'},{var,1538,'Gens'}]},
              [{clause,1539,
                [{atom,1539,true}],
                [],
                [{cons,1540,
                  {var,1540,'Fil'},
                  {call,1540,
                   {atom,1540,sel_gf},
                   [{var,1540,'FData'},
                    {op,1540,'+',{var,1540,'N'},{integer,1540,1}},
                    {var,1540,'Deps'},
                    {var,1540,'RDs'},
                    {var,1540,'Gens'},
                    {nil,1540}]}}]},
               {clause,1541,
                [{atom,1541,false}],
                [],
                [{call,1542,
                  {atom,1542,sel_gf},
                  [{var,1542,'FData'},
                   {op,1542,'+',{var,1542,'N'},{integer,1542,1}},
                   {var,1542,'Deps'},
                   {var,1542,'RDs'},
                   {nil,1542},
                   {nil,1542}]}]}]}]}]}]},
       {clause,1545,
        [{atom,1545,false}],
        [],
        [{call,1546,
          {atom,1546,sel_gf},
          [{var,1546,'FData'},
           {op,1546,'+',{var,1546,'N'},{integer,1546,1}},
           {var,1546,'Deps'},
           {var,1546,'RDs'},
           {nil,1546},
           {nil,1546}]}]}]}]},
   {clause,1548,
    [{var,1548,'FData'},
     {var,1548,'N'},
     {var,1548,'Deps'},
     {var,1548,'RDs'},
     {var,1548,'Gens'},
     {var,1548,'Gens1'}],
    [],
    [{call,1549,
      {atom,1549,sel_gf},
      [{var,1549,'FData'},
       {op,1549,'+',{var,1549,'N'},{integer,1549,1}},
       {var,1549,'Deps'},
       {var,1549,'RDs'},
       {cons,1549,{var,1549,'N'},{var,1549,'Gens'}},
       {cons,1549,{var,1549,'N'},{var,1549,'Gens1'}}]}]}]},
 {function,1551,generators_in_scope,2,
  [{clause,1551,
    [{var,1551,'GenIds'},{var,1551,'GenNumbers'}],
    [],
    [{call,1552,
      {remote,1552,{atom,1552,lists},{atom,1552,all}},
      [{'fun',1552,
        {clauses,
         [{clause,1552,
           [{tuple,1552,[{atom,1552,qid},{var,1552,'_'},{var,1552,'N'}]}],
           [],
           [{call,1552,
             {remote,1552,{atom,1552,lists},{atom,1552,member}},
             [{var,1552,'N'},{var,1552,'GenNumbers'}]}]}]}},
       {var,1552,'GenIds'}]}]}]},
 {function,1554,pattern_frame,4,
  [{clause,1554,
    [{var,1554,'GeneratorData'},
     {var,1554,'BindFun'},
     {var,1554,'Anon1'},
     {var,1554,'State'}],
    [],
    [{match,1555,{var,1555,'Frame0'},{nil,1555}},
     {match,1556,
      {tuple,1556,
       [{var,1556,'PatternFrame'},
        {var,1556,'_Anon2'},
        {var,1556,'PatternVars'}]},
      {call,1557,
       {remote,1557,{atom,1557,lists},{atom,1557,foldl}},
       [{'fun',1557,
         {clauses,
          [{clause,1557,
            [{tuple,1557,
              [{var,1557,'QId'},
               {tuple,1557,
                [{atom,1557,gen},{var,1557,'Pattern'},{var,1557,'_'}]}]},
             {tuple,1557,[{var,1557,'F0'},{var,1557,'An0'},{var,1557,'PVs'}]}],
            [],
            [{match,1558,
              {tuple,1558,[{var,1558,'F1'},{var,1558,'An1'},{var,1558,'PV'}]},
              {call,1559,
               {atom,1559,pattern},
               [{var,1559,'Pattern'},
                {var,1559,'An0'},
                {var,1559,'F0'},
                {var,1559,'BindFun'},
                {var,1559,'State'}]}},
             {tuple,1560,
              [{var,1560,'F1'},
               {var,1560,'An1'},
               {cons,1560,
                {tuple,1560,[{var,1560,'QId'},{var,1560,'PV'}]},
                {var,1560,'PVs'}}]}]}]}},
        {tuple,1561,[{var,1561,'Frame0'},{var,1561,'Anon1'},{nil,1561}]},
        {var,1561,'GeneratorData'}]}},
     {tuple,1562,[{var,1562,'PatternFrame'},{var,1562,'PatternVars'}]}]}]},
 {function,1564,const_selector,1,
  [{clause,1564,
    [{var,1564,'Imported'}],
    [],
    [{call,1565,
      {atom,1565,selector},
      [{var,1565,'Imported'},{'fun',1565,{function,is_const,2}}]}]}]},
 {function,1567,no_const_selector,1,
  [{clause,1567,
    [{var,1567,'Imported'}],
    [],
    [{call,1568,
      {atom,1568,selector},
      [{var,1568,'Imported'},
       {'fun',1568,
        {clauses,
         [{clause,1568,
           [{var,1568,'V'},{var,1568,'I'}],
           [],
           [{op,1568,'not',
             {call,1568,
              {atom,1568,is_const},
              [{var,1568,'V'},{var,1568,'I'}]}}]}]}}]}]}]},
 {function,1570,selector,2,
  [{clause,1570,
    [{var,1570,'Imported'},{var,1570,'TestFun'}],
    [],
    [{'fun',1571,
      {clauses,
       [{clause,1571,
         [{var,1571,'_Frame'}],
         [],
         [{'fun',1572,
           {clauses,
            [{clause,1572,
              [{var,1572,'Value'}],
              [],
              [{'case',1573,
                {call,1573,
                 {var,1573,'TestFun'},
                 [{var,1573,'Value'},{var,1573,'Imported'}]},
                [{clause,1574,
                  [{atom,1574,true}],
                  [],
                  [{tuple,1575,[{atom,1575,yes},{var,1575,'Value'}]}]},
                 {clause,1576,
                  [{atom,1576,false}],
                  [],
                  [{atom,1577,no}]}]}]}]}}]}]}}]}]},
 {function,1582,bind_no_const,2,
  [{clause,1582,
    [{var,1582,'Value'},{var,1582,'Imported'}],
    [],
    [{'case',1583,
      {call,1583,
       {atom,1583,is_const},
       [{var,1583,'Value'},{var,1583,'Imported'}]},
      [{clause,1584,[{atom,1584,true}],[],[{atom,1585,false}]},
       {clause,1586,
        [{atom,1586,false}],
        [],
        [{call,1587,{atom,1587,is_bindable},[{var,1587,'Value'}]}]}]}]}]},
 {function,1591,is_const,2,
  [{clause,1591,
    [{var,1591,'Value'},{var,1591,'Imported'}],
    [],
    [{op,1593,'=:=',
      {nil,1593},
      {call,1593,
       {remote,1593,{atom,1593,ordsets},{atom,1593,to_list}},
       [{call,1593,
         {remote,1593,{atom,1593,ordsets},{atom,1593,subtract}},
         [{call,1593,
           {remote,1593,{atom,1593,qlc},{atom,1593,vars}},
           [{var,1593,'Value'}]},
          {var,1593,'Imported'}]}]}}]}]},
 {function,1595,is_bindable,1,
  [{clause,1595,
    [{var,1595,'Value'}],
    [],
    [{'case',1596,
      {call,1596,{atom,1596,normalise},[{var,1596,'Value'}]},
      [{clause,1597,
        [{tuple,1597,[{atom,1597,ok},{var,1597,'_C'}]}],
        [],
        [{atom,1598,true}]},
       {clause,1599,[{atom,1599,not_ok}],[],[{atom,1600,false}]}]}]}]},
 {function,1603,pattern,5,
  [{clause,1603,
    [{var,1603,'P0'},
     {var,1603,'AnonI'},
     {var,1603,'Frame0'},
     {var,1603,'BindFun'},
     {var,1603,'State'}],
    [],
    [{match,1604,
      {var,1604,'P1'},
      {'try',1604,
       [{call,1605,
         {atom,1605,expand_pattern_records},
         [{var,1605,'P0'},{var,1605,'State'}]}],
       [],
       [{clause,1606,
         [{tuple,1606,[{var,1606,'_'},{var,1606,'_'},{var,1606,'_'}]}],
         [],
         [{var,1606,'P0'}]}],
       []}},
     {match,1609,
      {var,1609,'P2'},
      {call,1609,{atom,1609,reset_anno},[{var,1609,'P1'}]}},
     {match,1610,
      {tuple,1610,[{var,1610,'P3'},{var,1610,'AnonN'}]},
      {call,1610,{atom,1610,anon_var},[{var,1610,'P2'},{var,1610,'AnonI'}]}},
     {match,1611,
      {tuple,1611,[{var,1611,'P4'},{var,1611,'F1'}]},
      {call,1611,
       {atom,1611,match_in_pattern},
       [{call,1611,{atom,1611,tuple2cons},[{var,1611,'P3'}]},
        {var,1611,'Frame0'},
        {var,1611,'BindFun'}]}},
     {match,1612,
      {tuple,1612,[{var,1612,'P'},{var,1612,'F2'}]},
      {call,1612,
       {atom,1612,element_calls},
       [{var,1612,'P4'},
        {var,1612,'F1'},
        {var,1612,'BindFun'},
        {match,1612,{var,1612,'_Imp'},{nil,1612}}]}},
     {match,1613,
      {tuple,1613,[{atom,1613,var},{var,1613,'_'},{var,1613,'PatternVar'}]},
      {match,1613,
       {var,1613,'UniqueVar'},
       {call,1613,{atom,1613,unique_var},[]}}},
     {match,1614,
      {var,1614,'F'},
      {call,1614,
       {atom,1614,unify},
       [{atom,1614,'=:='},
        {var,1614,'UniqueVar'},
        {var,1614,'P'},
        {var,1614,'F2'},
        {var,1614,'BindFun'},
        {match,1614,{var,1614,'_Imported'},{nil,1614}}]}},
     {tuple,1615,
      [{var,1615,'F'},{var,1615,'AnonN'},{var,1615,'PatternVar'}]}]}]},
 {function,1617,frame2frames,1,
  [{clause,1617,[{atom,1617,failed}],[],[{nil,1618}]},
   {clause,1619,[{var,1619,'F'}],[],[{cons,1620,{var,1620,'F'},{nil,1620}}]}]},
 {function,1622,match_in_pattern,3,
  [{clause,1622,
    [{tuple,1622,
      [{atom,1622,match},{var,1622,'_'},{var,1622,'E10'},{var,1622,'E20'}]},
     {var,1622,'F0'},
     {var,1622,'BF'}],
    [],
    [{match,1623,
      {tuple,1623,[{var,1623,'E1'},{var,1623,'F1'}]},
      {call,1623,
       {atom,1623,match_in_pattern},
       [{var,1623,'E10'},{var,1623,'F0'},{var,1623,'BF'}]}},
     {match,1624,
      {tuple,1624,[{var,1624,'E2'},{var,1624,'F'}]},
      {call,1624,
       {atom,1624,match_in_pattern},
       [{var,1624,'E20'},{var,1624,'F1'},{var,1624,'BF'}]}},
     {match,1626,
      {var,1626,'E'},
      {'case',1626,
       {call,1626,{var,1626,'BF'},[{atom,1626,'=:='},{var,1626,'E1'}]},
       [{clause,1627,[{atom,1627,true}],[],[{var,1627,'E1'}]},
        {clause,1628,[{atom,1628,false}],[],[{var,1628,'E2'}]}]}},
     {tuple,1630,
      [{var,1630,'E'},
       {call,1630,
        {atom,1630,unify},
        [{atom,1630,'=:='},
         {var,1630,'E1'},
         {var,1630,'E2'},
         {var,1630,'F'},
         {var,1630,'BF'},
         {match,1630,{var,1630,'_Imported'},{nil,1630}}]}]}]},
   {clause,1631,
    [{var,1631,'T'},{var,1631,'F0'},{var,1631,'BF'}],
    [[{call,1631,{atom,1631,is_tuple},[{var,1631,'T'}]}]],
    [{match,1632,
      {tuple,1632,[{var,1632,'L'},{var,1632,'F'}]},
      {call,1632,
       {atom,1632,match_in_pattern},
       [{call,1632,{atom,1632,tuple_to_list},[{var,1632,'T'}]},
        {var,1632,'F0'},
        {var,1632,'BF'}]}},
     {tuple,1633,
      [{call,1633,{atom,1633,list_to_tuple},[{var,1633,'L'}]},
       {var,1633,'F'}]}]},
   {clause,1634,
    [{cons,1634,{var,1634,'E0'},{var,1634,'Es0'}},
     {var,1634,'F0'},
     {var,1634,'BF'}],
    [],
    [{match,1635,
      {tuple,1635,[{var,1635,'E'},{var,1635,'F1'}]},
      {call,1635,
       {atom,1635,match_in_pattern},
       [{var,1635,'E0'},{var,1635,'F0'},{var,1635,'BF'}]}},
     {match,1636,
      {tuple,1636,[{var,1636,'Es'},{var,1636,'F'}]},
      {call,1636,
       {atom,1636,match_in_pattern},
       [{var,1636,'Es0'},{var,1636,'F1'},{var,1636,'BF'}]}},
     {tuple,1637,
      [{cons,1637,{var,1637,'E'},{var,1637,'Es'}},{var,1637,'F'}]}]},
   {clause,1638,
    [{var,1638,'E'},{var,1638,'F'},{var,1638,'_BF'}],
    [],
    [{tuple,1639,[{var,1639,'E'},{var,1639,'F'}]}]}]},
 {function,1643,anon_var,2,
  [{clause,1643,
    [{var,1643,'E'},{var,1643,'AnonI'}],
    [],
    [{call,1644,
      {atom,1644,var_mapfold},
      [{'fun',1644,
        {clauses,
         [{clause,1644,
           [{tuple,1644,[{atom,1644,var},{var,1644,'L'},{atom,1644,'_'}]},
            {var,1644,'N'}],
           [],
           [{tuple,1645,
             [{tuple,1645,[{atom,1645,var},{var,1645,'L'},{var,1645,'N'}]},
              {op,1645,'+',{var,1645,'N'},{integer,1645,1}}]}]},
          {clause,1646,
           [{var,1646,'Var'},{var,1646,'N'}],
           [],
           [{tuple,1646,[{var,1646,'Var'},{var,1646,'N'}]}]}]}},
       {var,1647,'AnonI'},
       {var,1647,'E'}]}]}]},
 {function,1649,reset_anno,1,
  [{clause,1649,
    [{var,1649,'T'}],
    [],
    [{call,1650,
      {atom,1650,set_anno},
      [{var,1650,'T'},{call,1650,{atom,1650,anno0},[]}]}]}]},
 {function,1652,set_anno,2,
  [{clause,1652,
    [{var,1652,'T'},{var,1652,'A'}],
    [],
    [{call,1653,
      {remote,1653,{atom,1653,erl_parse},{atom,1653,map_anno}},
      [{'fun',1653,
        {clauses,[{clause,1653,[{var,1653,'_L'}],[],[{var,1653,'A'}]}]}},
       {var,1653,'T'}]}]}]},
 {function,1657,filter,5,
  [{clause,1657,
    [{var,1657,'_E'},
     {match,1657,{nil,1657},{var,1657,'Frames0'}},
     {var,1657,'_BF'},
     {var,1657,'_State'},
     {var,1657,'_Imported'}],
    [],
    [{var,1658,'Frames0'}]},
   {clause,1659,
    [{var,1659,'E0'},
     {var,1659,'Frames0'},
     {var,1659,'BF'},
     {var,1659,'State'},
     {var,1659,'Imported'}],
    [],
    [{match,1660,
      {var,1660,'E'},
      {call,1660,{atom,1660,pre_expand},[{var,1660,'E0'}]}},
     {match,1661,
      {var,1661,'FState'},
      {tuple,1661,
       [{atom,1661,fstate},
        {var,1661,'State'},
        {var,1661,'BF'},
        {var,1661,'Imported'}]}},
     {call,1662,
      {atom,1662,filter1},
      [{var,1662,'E'},{var,1662,'Frames0'},{var,1662,'FState'}]}]}]},
 {function,1688,filter1,3,
  [{clause,1688,
    [{tuple,1688,
      [{atom,1688,op},
       {var,1688,'_'},
       {var,1688,'Op'},
       {var,1688,'L0'},
       {var,1688,'R0'}]},
     {var,1688,'Fs'},
     {var,1688,'FS'}],
    [[{op,1688,'=:=',{var,1688,'Op'},{atom,1688,'=:='}}],
     [{op,1688,'=:=',{var,1688,'Op'},{atom,1688,'=='}}]],
    [{match,1689,
      {tuple,1689,
       [{atom,1689,fstate},
        {var,1689,'S'},
        {var,1689,'BF'},
        {var,1689,'Imported'}]},
      {var,1689,'FS'}},
     {call,1692,
      {remote,1692,{atom,1692,lists},{atom,1692,flatmap}},
      [{'fun',1692,
        {clauses,
         [{clause,1692,
           [{var,1692,'F0'}],
           [],
           [{match,1693,
             {tuple,1693,[{var,1693,'L'},{var,1693,'F1'}]},
             {call,1693,
              {atom,1693,prep_expr},
              [{var,1693,'L0'},
               {var,1693,'F0'},
               {var,1693,'S'},
               {var,1693,'BF'},
               {var,1693,'Imported'}]}},
            {match,1694,
             {tuple,1694,[{var,1694,'R'},{var,1694,'F2'}]},
             {call,1694,
              {atom,1694,prep_expr},
              [{var,1694,'R0'},
               {var,1694,'F1'},
               {var,1694,'S'},
               {var,1694,'BF'},
               {var,1694,'Imported'}]}},
            {'case',1695,
             {call,1695,
              {atom,1695,unify},
              [{var,1695,'Op'},
               {var,1695,'L'},
               {var,1695,'R'},
               {var,1695,'F2'},
               {var,1695,'BF'},
               {var,1695,'Imported'}]},
             [{clause,1696,[{atom,1696,failed}],[],[{nil,1696}]},
              {clause,1697,
               [{var,1697,'F'}],
               [],
               [{cons,1697,{var,1697,'F'},{nil,1697}}]}]}]}]}},
       {var,1699,'Fs'}]}]},
   {clause,1700,
    [{tuple,1700,
      [{atom,1700,op},
       {var,1700,'_'},
       {var,1700,'Op'},
       {var,1700,'L'},
       {var,1700,'R'}]},
     {var,1700,'Fs'},
     {var,1700,'FS'}],
    [[{op,1700,'=:=',{var,1700,'Op'},{atom,1700,'and'}}],
     [{op,1700,'=:=',{var,1700,'Op'},{atom,1700,'andalso'}}]],
    [{call,1701,
      {atom,1701,filter1},
      [{var,1701,'R'},
       {call,1701,
        {atom,1701,filter1},
        [{var,1701,'L'},{var,1701,'Fs'},{var,1701,'FS'}]},
       {var,1701,'FS'}]}]},
   {clause,1702,
    [{tuple,1702,
      [{atom,1702,op},
       {var,1702,'_'},
       {var,1702,'Op'},
       {var,1702,'L'},
       {var,1702,'R'}]},
     {var,1702,'Fs'},
     {var,1702,'FS'}],
    [[{op,1702,'=:=',{var,1702,'Op'},{atom,1702,'or'}}],
     [{op,1703,'=:=',{var,1703,'Op'},{atom,1703,'orelse'}}],
     [{op,1704,'=:=',{var,1704,'Op'},{atom,1704,'xor'}}]],
    [{op,1705,'++',
      {call,1705,
       {atom,1705,filter1},
       [{var,1705,'L'},{var,1705,'Fs'},{var,1705,'FS'}]},
      {call,1705,
       {atom,1705,filter1},
       [{var,1705,'R'},{var,1705,'Fs'},{var,1705,'FS'}]}}]},
   {clause,1706,
    [{tuple,1706,[{atom,1706,atom},{var,1706,'_'},{var,1706,'Atom'}]},
     {var,1706,'_Fs'},
     {var,1706,'_FS'}],
    [[{op,1706,'=/=',{var,1706,'Atom'},{atom,1706,true}}]],
    [{nil,1707}]},
   {clause,1708,
    [{tuple,1708,
      [{atom,1708,call},
       {var,1708,'L'},
       {tuple,1708,
        [{atom,1708,remote},
         {var,1708,'_'},
         {tuple,1708,[{atom,1708,atom},{var,1708,'_'},{atom,1708,erlang}]},
         {tuple,1708,
          [{atom,1708,atom},{var,1708,'_'},{atom,1708,is_record}]}]},
       {cons,1708,{var,1708,'T'},{cons,1708,{var,1708,'R'},{nil,1708}}}]},
     {var,1709,'Fs'},
     {var,1709,'FS'}],
    [],
    [{call,1710,
      {atom,1710,filter1},
      [{tuple,1710,
        [{atom,1710,op},
         {var,1710,'L'},
         {atom,1710,'=:='},
         {tuple,1710,
          [{atom,1710,call},
           {var,1710,'L'},
           {tuple,1710,
            [{atom,1710,remote},
             {var,1710,'L'},
             {tuple,1710,[{atom,1710,atom},{var,1710,'L'},{atom,1710,erlang}]},
             {tuple,1710,
              [{atom,1710,atom},{var,1710,'L'},{atom,1710,element}]}]},
           {cons,1711,
            {tuple,1711,[{atom,1711,integer},{var,1711,'L'},{integer,1711,1}]},
            {cons,1711,{var,1711,'T'},{nil,1711}}}]},
         {var,1711,'R'}]},
       {var,1712,'Fs'},
       {var,1712,'FS'}]}]},
   {clause,1714,
    [{tuple,1714,
      [{atom,1714,call},
       {var,1714,'L'},
       {tuple,1714,
        [{atom,1714,remote},
         {var,1714,'L1'},
         {match,1714,
          {tuple,1714,[{atom,1714,atom},{var,1714,'_'},{atom,1714,erlang}]},
          {var,1714,'M'}},
         {tuple,1714,
          [{atom,1714,atom},{var,1714,'L2'},{atom,1714,is_record}]}]},
       {cons,1714,
        {var,1714,'T'},
        {cons,1714,{var,1714,'R'},{cons,1714,{var,1714,'_Sz'},{nil,1714}}}}]},
     {var,1715,'Fs'},
     {var,1715,'FS'}],
    [],
    [{call,1716,
      {atom,1716,filter1},
      [{tuple,1716,
        [{atom,1716,call},
         {var,1716,'L'},
         {tuple,1716,
          [{atom,1716,remote},
           {var,1716,'L1'},
           {var,1716,'M'},
           {tuple,1716,
            [{atom,1716,atom},{var,1716,'L2'},{atom,1716,is_record}]}]},
         {cons,1716,{var,1716,'T'},{cons,1716,{var,1716,'R'},{nil,1716}}}]},
       {var,1716,'Fs'},
       {var,1716,'FS'}]}]},
   {clause,1717,
    [{var,1717,'_E'},{var,1717,'Fs'},{var,1717,'_FS'}],
    [],
    [{var,1718,'Fs'}]}]},
 {function,1724,safe_filter,5,
  [{clause,1724,
    [{var,1724,'_E'},
     {match,1724,{nil,1724},{var,1724,'Frames0'}},
     {var,1724,'_BF'},
     {var,1724,'_State'},
     {var,1724,'_Imported'}],
    [],
    [{var,1725,'Frames0'}]},
   {clause,1726,
    [{var,1726,'E0'},
     {var,1726,'Frames0'},
     {var,1726,'BF'},
     {var,1726,'State'},
     {var,1726,'Imported'}],
    [],
    [{match,1727,
      {var,1727,'E'},
      {call,1727,{atom,1727,pre_expand},[{var,1727,'E0'}]}},
     {match,1728,
      {var,1728,'FState'},
      {tuple,1728,
       [{atom,1728,fstate},
        {var,1728,'State'},
        {var,1728,'BF'},
        {var,1728,'Imported'}]}},
     {call,1729,
      {atom,1729,safe_filter1},
      [{var,1729,'E'},{var,1729,'Frames0'},{var,1729,'FState'}]}]}]},
 {function,1731,safe_filter1,3,
  [{clause,1731,
    [{tuple,1731,
      [{atom,1731,op},
       {var,1731,'_'},
       {var,1731,'Op'},
       {var,1731,'L0'},
       {var,1731,'R0'}]},
     {var,1731,'Fs'},
     {var,1731,'FS'}],
    [[{op,1731,'=:=',{var,1731,'Op'},{atom,1731,'=:='}}],
     [{op,1731,'=:=',{var,1731,'Op'},{atom,1731,'=='}}]],
    [{match,1732,
      {tuple,1732,
       [{atom,1732,fstate},
        {var,1732,'S'},
        {var,1732,'BF'},
        {var,1732,'Imported'}]},
      {var,1732,'FS'}},
     {call,1733,
      {remote,1733,{atom,1733,lists},{atom,1733,flatmap}},
      [{'fun',1733,
        {clauses,
         [{clause,1733,
           [{var,1733,'F0'}],
           [],
           [{match,1734,
             {tuple,1734,[{var,1734,'L'},{var,1734,'F1'}]},
             {call,1734,
              {atom,1734,prep_expr},
              [{var,1734,'L0'},
               {var,1734,'F0'},
               {var,1734,'S'},
               {var,1734,'BF'},
               {var,1734,'Imported'}]}},
            {match,1735,
             {tuple,1735,[{var,1735,'R'},{var,1735,'F2'}]},
             {call,1735,
              {atom,1735,prep_expr},
              [{var,1735,'R0'},
               {var,1735,'F1'},
               {var,1735,'S'},
               {var,1735,'BF'},
               {var,1735,'Imported'}]}},
            {'case',1736,
             {call,1736,
              {atom,1736,safe_unify},
              [{var,1736,'Op'},
               {var,1736,'L'},
               {var,1736,'R'},
               {var,1736,'F2'},
               {var,1736,'BF'},
               {var,1736,'Imported'}]},
             [{clause,1737,[{atom,1737,failed}],[],[{nil,1737}]},
              {clause,1738,
               [{var,1738,'F'}],
               [],
               [{cons,1738,{var,1738,'F'},{nil,1738}}]}]}]}]}},
       {var,1740,'Fs'}]}]},
   {clause,1741,
    [{tuple,1741,
      [{atom,1741,op},
       {var,1741,'_'},
       {var,1741,'Op'},
       {var,1741,'L'},
       {var,1741,'R'}]},
     {var,1741,'Fs'},
     {var,1741,'FS'}],
    [[{op,1741,'=:=',{var,1741,'Op'},{atom,1741,'and'}}],
     [{op,1741,'=:=',{var,1741,'Op'},{atom,1741,'andalso'}}]],
    [{call,1742,
      {atom,1742,safe_filter1},
      [{var,1742,'R'},
       {call,1742,
        {atom,1742,safe_filter1},
        [{var,1742,'L'},{var,1742,'Fs'},{var,1742,'FS'}]},
       {var,1742,'FS'}]}]},
   {clause,1743,
    [{tuple,1743,
      [{atom,1743,op},
       {var,1743,'_'},
       {var,1743,'Op'},
       {var,1743,'L'},
       {var,1743,'R'}]},
     {var,1743,'Fs'},
     {var,1743,'FS'}],
    [[{op,1743,'=:=',{var,1743,'Op'},{atom,1743,'or'}}],
     [{op,1743,'=:=',{var,1743,'Op'},{atom,1743,'orelse'}}]],
    [{op,1744,'++',
      {call,1744,
       {atom,1744,safe_filter1},
       [{var,1744,'L'},{var,1744,'Fs'},{var,1744,'FS'}]},
      {call,1744,
       {atom,1744,safe_filter1},
       [{var,1744,'R'},{var,1744,'Fs'},{var,1744,'FS'}]}}]},
   {clause,1745,
    [{tuple,1745,[{atom,1745,atom},{var,1745,'_'},{atom,1745,true}]},
     {var,1745,'Fs'},
     {var,1745,'_FS'}],
    [],
    [{var,1746,'Fs'}]},
   {clause,1747,
    [{var,1747,'_E'},{var,1747,'_Fs'},{var,1747,'_FS'}],
    [],
    [{nil,1748}]}]},
 {function,1752,pre_expand,1,
  [{clause,1752,
    [{tuple,1752,
      [{atom,1752,call},
       {var,1752,'L1'},
       {tuple,1752,[{atom,1752,atom},{var,1752,'L2'},{atom,1752,record}]},
       {var,1752,'As'}]}],
    [],
    [{call,1753,
      {atom,1753,pre_expand},
      [{tuple,1753,
        [{atom,1753,call},
         {var,1753,'L1'},
         {tuple,1753,[{atom,1753,atom},{var,1753,'L2'},{atom,1753,is_record}]},
         {var,1753,'As'}]}]}]},
   {clause,1754,
    [{tuple,1754,
      [{atom,1754,call},
       {var,1754,'L'},
       {match,1754,
        {tuple,1754,[{atom,1754,atom},{var,1754,'_'},{var,1754,'_'}]},
        {var,1754,'F'}},
       {var,1754,'As'}]}],
    [],
    [{call,1755,
      {atom,1755,pre_expand},
      [{tuple,1755,
        [{atom,1755,call},
         {var,1755,'L'},
         {tuple,1755,
          [{atom,1755,remote},
           {var,1755,'L'},
           {tuple,1755,[{atom,1755,atom},{var,1755,'L'},{atom,1755,erlang}]},
           {var,1755,'F'}]},
         {var,1755,'As'}]}]}]},
   {clause,1756,
    [{tuple,1756,
      [{atom,1756,call},
       {var,1756,'L'},
       {tuple,1756,
        [{atom,1756,tuple},
         {var,1756,'_'},
         {cons,1756,{var,1756,'M'},{cons,1756,{var,1756,'F'},{nil,1756}}}]},
       {var,1756,'As'}]}],
    [],
    [{call,1757,
      {atom,1757,pre_expand},
      [{tuple,1757,
        [{atom,1757,call},
         {var,1757,'L'},
         {tuple,1757,
          [{atom,1757,remote},{var,1757,'L'},{var,1757,'M'},{var,1757,'F'}]},
         {var,1757,'As'}]}]}]},
   {clause,1758,
    [{var,1758,'T'}],
    [[{call,1758,{atom,1758,is_tuple},[{var,1758,'T'}]}]],
    [{call,1759,
      {atom,1759,list_to_tuple},
      [{call,1759,
        {atom,1759,pre_expand},
        [{call,1759,{atom,1759,tuple_to_list},[{var,1759,'T'}]}]}]}]},
   {clause,1760,
    [{cons,1760,{var,1760,'E'},{var,1760,'Es'}}],
    [],
    [{cons,1761,
      {call,1761,{atom,1761,pre_expand},[{var,1761,'E'}]},
      {call,1761,{atom,1761,pre_expand},[{var,1761,'Es'}]}}]},
   {clause,1762,[{var,1762,'T'}],[],[{var,1763,'T'}]}]},
 {function,1766,frames_to_columns,6,
  [{clause,1766,
    [{nil,1766},
     {var,1766,'_PatternVars'},
     {var,1766,'_DerefFun'},
     {var,1766,'_SelectorFun'},
     {var,1766,'_Imp'},
     {var,1766,'_CompOp'}],
    [],
    [{nil,1767}]},
   {clause,1768,
    [{var,1768,'Fs'},
     {var,1768,'PatternVars'},
     {var,1768,'DerefFun'},
     {var,1768,'SelectorFun'},
     {var,1768,'Imp'},
     {var,1768,'CompOp'}],
    [],
    [{match,1773,
      {var,1773,'SizesVarsL'},
      {lc,1774,
       {block,1774,
        [{match,1775,
          {var,1775,'PatVar'},
          {tuple,1775,
           [{atom,1775,var},
            {call,1775,{atom,1775,anno0},[]},
            {var,1775,'PV'}]}},
         {match,1776,
          {var,1776,'PatternSizes'},
          {lc,1776,
           {call,1776,
            {atom,1776,pattern_size},
            [{cons,1776,{var,1776,'F'},{nil,1776}},
             {var,1776,'PatVar'},
             {atom,1776,false}]},
           [{generate,1777,{var,1777,'F'},{var,1777,'Fs'}}]}},
         {match,1778,
          {var,1778,'MaxPZ'},
          {call,1778,
           {remote,1778,{atom,1778,lists},{atom,1778,max}},
           [{cons,1778,
             {integer,1778,0},
             {op,1778,'--',
              {var,1778,'PatternSizes'},
              {cons,1778,{atom,1778,undefined},{nil,1778}}}}]}},
         {match,1779,
          {var,1779,'Vars'},
          {call,1779,{atom,1779,pat_vars},[{var,1779,'MaxPZ'}]}},
         {tuple,1780,
          [{call,1780,
            {remote,1780,{atom,1780,erlang},{atom,1780,element}},
            [{integer,1780,3},{var,1780,'PatternId'}]},
           {var,1780,'PatVar'},
           {var,1780,'PatternSizes'},
           {var,1780,'Vars'}]}]},
       [{generate,1781,
         {tuple,1781,[{var,1781,'PatternId'},{var,1781,'PV'}]},
         {var,1781,'PatternVars'}}]}},
     {match,1782,
      {var,1782,'BF'},
      {'fun',1782,
       {clauses,
        [{clause,1782,
          [{var,1782,'_Op'},{var,1782,'Value'}],
          [],
          [{call,1782,{atom,1782,is_bindable},[{var,1782,'Value'}]}]}]}}},
     {match,1783,
      {var,1783,'Fun'},
      {'fun',1783,
       {clauses,
        [{clause,1783,
          [{tuple,1783,
            [{var,1783,'_PatN'},
             {var,1783,'PatVar'},
             {var,1783,'PatSizes'},
             {var,1783,'Vars'}]},
           {var,1783,'Frames'}],
          [],
          [{lc,1784,
            {call,1784,
             {atom,1784,unify},
             [{atom,1784,'=:='},
              {call,1784,
               {atom,1784,pat_tuple},
               [{var,1784,'Sz'},{var,1784,'Vars'}]},
              {var,1784,'PatVar'},
              {var,1784,'Frame'},
              {var,1784,'BF'},
              {var,1784,'Imp'}]},
            [{generate,1785,
              {tuple,1785,[{var,1785,'Sz'},{var,1785,'Frame'}]},
              {call,1785,
               {remote,1785,{atom,1785,lists},{atom,1785,zip}},
               [{var,1785,'PatSizes'},{var,1785,'Frames'}]}}]}]}]}}},
     {match,1787,
      {var,1787,'NFs'},
      {call,1787,
       {remote,1787,{atom,1787,lists},{atom,1787,foldl}},
       [{var,1787,'Fun'},{var,1787,'Fs'},{var,1787,'SizesVarsL'}]}},
     {lc,1788,
      {call,1788,
       {atom,1788,frames2cols},
       [{var,1788,'NFs'},
        {var,1788,'PatN'},
        {var,1788,'PatSizes'},
        {var,1788,'Vars'},
        {var,1788,'DerefFun'},
        {var,1788,'SelectorFun'},
        {var,1788,'CompOp'}]},
      [{generate,1789,
        {tuple,1789,
         [{var,1789,'PatN'},
          {var,1789,'_PatVar'},
          {var,1789,'PatSizes'},
          {var,1789,'Vars'}]},
        {var,1789,'SizesVarsL'}}]}]}]},
 {function,1791,frames2cols,7,
  [{clause,1791,
    [{var,1791,'Fs'},
     {var,1791,'PatN'},
     {var,1791,'PatSizes'},
     {var,1791,'Vars'},
     {var,1791,'DerefFun'},
     {var,1791,'SelectorFun'},
     {var,1791,'CompOp'}],
    [],
    [{match,1792,
      {var,1792,'Rs'},
      {lc,1792,
       {block,1792,
        [{match,1793,
          {var,1793,'RL'},
          {lc,1793,
           {tuple,1793,
            [{tuple,1793,[{var,1793,'PatN'},{var,1793,'Col'}]},
             {call,1793,
              {atom,1793,cons2tuple},
              [{call,1793,
                {atom,1793,element},
                [{integer,1793,2},{var,1793,'Const'}]}]}]},
           [{generate,1794,
             {tuple,1794,[{var,1794,'V'},{var,1794,'Col'}]},
             {call,1794,
              {remote,1794,{atom,1794,lists},{atom,1794,zip}},
              [{call,1794,
                {remote,1794,{atom,1794,lists},{atom,1794,sublist}},
                [{var,1794,'Vars'},{var,1794,'PatSz'}]},
               {call,1795,
                {remote,1795,{atom,1795,lists},{atom,1795,seq}},
                [{integer,1795,1},{var,1795,'PatSz'}]}]}},
            {op,1812,'=:=',
             {call,1812,
              {atom,1812,tl},
              [{match,1812,
                {var,1812,'Consts'},
                {call,1812,
                 {var,1812,'DerefFun'},
                 [{var,1812,'V'},{var,1812,'F'}]}}]},
             {nil,1812}},
            {op,1813,'=/=',
             {match,1813,
              {var,1813,'Const'},
              {call,1813,
               {call,1813,{var,1813,'SelectorFun'},[{var,1813,'F'}]},
               [{call,1813,{atom,1813,hd},[{var,1813,'Consts'}]}]}},
             {atom,1813,no}}]}},
         {call,1814,
          {remote,1814,{atom,1814,sofs},{atom,1814,relation}},
          [{var,1814,'RL'}]}]},
       [{generate,1815,
         {tuple,1815,[{var,1815,'F'},{var,1815,'PatSz'}]},
         {call,1815,
          {remote,1815,{atom,1815,lists},{atom,1815,zip}},
          [{var,1815,'Fs'},{var,1815,'PatSizes'}]}}]}},
     {match,1816,
      {var,1816,'Ss'},
      {call,1816,
       {remote,1816,{atom,1816,sofs},{atom,1816,from_sets}},
       [{var,1816,'Rs'}]}},
     {match,1818,
      {var,1818,'D'},
      {call,1818,
       {remote,1818,{atom,1818,sofs},{atom,1818,intersection}},
       [{call,1818,
         {remote,1818,{atom,1818,sofs},{atom,1818,projection}},
         [{'fun',1818,
           {clauses,
            [{clause,1818,
              [{var,1818,'S'}],
              [],
              [{call,1818,
                {remote,1818,{atom,1818,sofs},{atom,1818,projection}},
                [{integer,1818,1},{var,1818,'S'}]}]}]}},
          {var,1819,'Ss'}]}]}},
     {match,1820,
      {var,1820,'Cs'},
      {call,1820,
       {remote,1820,{atom,1820,sofs},{atom,1820,restriction}},
       [{call,1820,
         {remote,1820,{atom,1820,sofs},{atom,1820,relation_to_family}},
         [{call,1820,
           {remote,1820,{atom,1820,sofs},{atom,1820,union}},
           [{var,1820,'Ss'}]}]},
        {var,1820,'D'}]}},
     {lc,1821,
      {var,1821,'C'},
      [{generate,1821,
        {match,1821,
         {tuple,1821,[{var,1821,'_'},{var,1821,'Vs'}]},
         {var,1821,'C'}},
        {call,1821,
         {remote,1821,{atom,1821,sofs},{atom,1821,to_external}},
         [{var,1821,'Cs'}]}},
       {op,1821,'not',
        {call,1821,
         {atom,1821,col_ignore},
         [{var,1821,'Vs'},{var,1821,'CompOp'}]}}]}]}]},
 {function,1823,pat_vars,1,
  [{clause,1823,
    [{var,1823,'N'}],
    [],
    [{lc,1824,
      {call,1824,{atom,1824,unique_var},[]},
      [{generate,1824,
        {var,1824,'_'},
        {call,1824,
         {remote,1824,{atom,1824,lists},{atom,1824,seq}},
         [{integer,1824,1},{var,1824,'N'}]}}]}]}]},
 {function,1826,pat_tuple,2,
  [{clause,1826,
    [{var,1826,'Sz'},{var,1826,'Vars'}],
    [[{call,1826,{atom,1826,is_integer},[{var,1826,'Sz'}]},
      {op,1826,'>',{var,1826,'Sz'},{integer,1826,0}}]],
    [{match,1827,{var,1827,'TupleTail'},{call,1827,{atom,1827,unique_var},[]}},
     {tuple,1828,
      [{atom,1828,cons_tuple},
       {call,1828,
        {atom,1828,list2cons},
        [{op,1828,'++',
          {call,1828,
           {remote,1828,{atom,1828,lists},{atom,1828,sublist}},
           [{var,1828,'Vars'},{var,1828,'Sz'}]},
          {var,1828,'TupleTail'}}]}]}]},
   {clause,1829,
    [{var,1829,'_'},{var,1829,'_Vars'}],
    [],
    [{call,1830,{atom,1830,unique_var},[]}]}]},
 {function,1834,col_ignore,2,
  [{clause,1834,[{var,1834,'_Vs'},{atom,1834,'=:='}],[],[{atom,1835,false}]},
   {clause,1836,
    [{var,1836,'Vs'},{atom,1836,'=='}],
    [],
    [{op,1837,'=/=',
      {call,1837,{atom,1837,length},[{var,1837,'Vs'}]},
      {call,1837,
       {atom,1837,length},
       [{call,1837,
         {remote,1837,{atom,1837,lists},{atom,1837,usort}},
         [{lc,1837,
           {call,1837,
            {atom,1837,element},
            [{integer,1837,2},
             {call,1837,{atom,1837,normalise},[{var,1837,'V'}]}]},
           [{generate,1837,{var,1837,'V'},{var,1837,'Vs'}}]}]}]}}]}]},
 {function,1839,pattern_sizes,2,
  [{clause,1839,
    [{var,1839,'PatternVars'},{var,1839,'Fs'}],
    [],
    [{lc,1840,
      {tuple,1840,
       [{call,1840,
         {remote,1840,{atom,1840,erlang},{atom,1840,element}},
         [{integer,1840,3},{var,1840,'QId'}]},
        {var,1840,'Size'}]},
      [{generate,1841,
        {tuple,1841,[{var,1841,'QId'},{var,1841,'PV'}]},
        {var,1841,'PatternVars'}},
       {op,1842,'=/=',
        {atom,1842,undefined},
        {match,1842,
         {var,1842,'Size'},
         {call,1842,
          {atom,1842,pattern_size},
          [{var,1842,'Fs'},
           {tuple,1842,
            [{atom,1842,var},
             {call,1842,{atom,1842,anno0},[]},
             {var,1842,'PV'}]},
           {atom,1842,true}]}}}]}]}]},
 {function,1844,pattern_size,3,
  [{clause,1844,
    [{var,1844,'Fs'},{var,1844,'PatternVar'},{var,1844,'Exact'}],
    [],
    [{match,1845,
      {var,1845,'Fun'},
      {'fun',1845,
       {clauses,
        [{clause,1845,
          [{var,1845,'F'}],
          [],
          [{call,1845,
            {call,1845,
             {atom,1845,deref_pattern},
             [{match,1845,{var,1845,'_Imported'},{nil,1845}}]},
            [{var,1845,'PatternVar'},{var,1845,'F'}]}]}]}}},
     {match,1846,
      {var,1846,'Derefs'},
      {call,1846,
       {remote,1846,{atom,1846,lists},{atom,1846,flatmap}},
       [{var,1846,'Fun'},{var,1846,'Fs'}]}},
     {match,1847,
      {var,1847,'Szs'},
      {lc,1847,
       {call,1847,
        {atom,1847,pattern_sz},
        [{var,1847,'Cs'},{integer,1847,0},{var,1847,'Exact'}]},
       [{generate,1847,
         {tuple,1847,[{atom,1847,cons_tuple},{var,1847,'Cs'}]},
         {var,1847,'Derefs'}}]}},
     {'case',1848,
      {call,1848,
       {remote,1848,{atom,1848,lists},{atom,1848,usort}},
       [{var,1848,'Szs'}]},
      [{clause,1849,
        [{cons,1849,{var,1849,'Sz'},{nil,1849}}],
        [[{call,1849,{atom,1849,is_integer},[{var,1849,'Sz'}]},
          {op,1849,'>=',{var,1849,'Sz'},{integer,1849,0}}]],
        [{var,1849,'Sz'}]},
       {clause,1850,
        [{nil,1850}],
        [[{op,1850,'not',{var,1850,'Exact'}}]],
        [{integer,1850,0}]},
       {clause,1851,[{var,1851,'_'}],[],[{atom,1851,undefined}]}]}]}]},
 {function,1854,pattern_sz,3,
  [{clause,1854,
    [{tuple,1854,
      [{atom,1854,cons},{var,1854,'_'},{var,1854,'_C'},{var,1854,'E'}]},
     {var,1854,'Col'},
     {var,1854,'Exact'}],
    [],
    [{call,1855,
      {atom,1855,pattern_sz},
      [{var,1855,'E'},
       {op,1855,'+',{var,1855,'Col'},{integer,1855,1}},
       {var,1855,'Exact'}]}]},
   {clause,1856,
    [{tuple,1856,[{atom,1856,nil},{var,1856,'_'}]},
     {var,1856,'Sz'},
     {var,1856,'_Exact'}],
    [],
    [{var,1857,'Sz'}]},
   {clause,1858,
    [{var,1858,'_'},{var,1858,'_Sz'},{atom,1858,true}],
    [],
    [{atom,1859,undefined}]},
   {clause,1860,
    [{var,1860,'_'},{var,1860,'Sz'},{atom,1860,false}],
    [],
    [{var,1861,'Sz'}]}]},
 {function,1863,deref_pattern,1,
  [{clause,1863,
    [{var,1863,'Imported'}],
    [],
    [{'fun',1864,
      {clauses,
       [{clause,1864,
         [{var,1864,'PV'},{var,1864,'F'}],
         [],
         [{call,1864,
           {atom,1864,deref_values},
           [{var,1864,'PV'},{var,1864,'F'},{var,1864,'Imported'}]}]}]}}]}]},
 {function,1866,prep_expr,5,
  [{clause,1866,
    [{var,1866,'E'},
     {var,1866,'F'},
     {var,1866,'S'},
     {var,1866,'BF'},
     {var,1866,'Imported'}],
    [],
    [{call,1867,
      {atom,1867,element_calls},
      [{call,1867,
        {atom,1867,tuple2cons},
        [{call,1867,
          {atom,1867,expand_expr_records},
          [{var,1867,'E'},{var,1867,'S'}]}]},
       {var,1867,'F'},
       {var,1867,'BF'},
       {var,1867,'Imported'}]}]}]},
 {function,1869,unify_column,5,
  [{clause,1869,
    [{var,1869,'Frame'},
     {var,1869,'Var'},
     {var,1869,'Col'},
     {var,1869,'BindFun'},
     {var,1869,'Imported'}],
    [],
    [{match,1870,{var,1870,'A'},{call,1870,{atom,1870,anno0},[]}},
     {match,1871,
      {var,1871,'Call'},
      {tuple,1871,
       [{atom,1871,call},
        {var,1871,'A'},
        {tuple,1871,[{atom,1871,atom},{var,1871,'A'},{atom,1871,element}]},
        {cons,1871,
         {tuple,1871,[{atom,1871,integer},{var,1871,'A'},{var,1871,'Col'}]},
         {cons,1871,
          {tuple,1871,[{atom,1871,var},{var,1871,'A'},{var,1871,'Var'}]},
          {nil,1871}}}]}},
     {call,1872,
      {atom,1872,element_calls},
      [{var,1872,'Call'},
       {var,1872,'Frame'},
       {var,1872,'BindFun'},
       {var,1872,'Imported'}]}]}]},
 {function,1879,element_calls,4,
  [{clause,1879,
    [{tuple,1879,
      [{atom,1879,call},
       {var,1879,'_'},
       {tuple,1879,
        [{atom,1879,remote},
         {var,1879,'_'},
         {tuple,1879,[{atom,1879,atom},{var,1879,'_'},{atom,1879,erlang}]},
         {tuple,1879,[{atom,1879,atom},{var,1879,'_'},{atom,1879,element}]}]},
       {cons,1880,
        {tuple,1880,[{atom,1880,integer},{var,1880,'_'},{var,1880,'I'}]},
        {cons,1880,{var,1880,'Term0'},{nil,1880}}}]},
     {var,1880,'F0'},
     {var,1880,'BF'},
     {var,1880,'Imported'}],
    [[{op,1880,'>',{var,1880,'I'},{integer,1880,0}}]],
    [{match,1881,{var,1881,'TupleTail'},{call,1881,{atom,1881,unique_var},[]}},
     {match,1882,
      {var,1882,'VarsL'},
      {lc,1882,
       {call,1882,{atom,1882,unique_var},[]},
       [{generate,1882,
         {var,1882,'_'},
         {call,1882,
          {remote,1882,{atom,1882,lists},{atom,1882,seq}},
          [{integer,1882,1},{var,1882,'I'}]}}]}},
     {match,1883,
      {var,1883,'Vars'},
      {op,1883,'++',{var,1883,'VarsL'},{var,1883,'TupleTail'}}},
     {match,1884,
      {var,1884,'Tuple'},
      {tuple,1884,
       [{atom,1884,cons_tuple},
        {call,1884,{atom,1884,list2cons},[{var,1884,'Vars'}]}]}},
     {match,1885,
      {var,1885,'VarI'},
      {call,1885,
       {remote,1885,{atom,1885,lists},{atom,1885,nth}},
       [{var,1885,'I'},{var,1885,'VarsL'}]}},
     {match,1886,
      {tuple,1886,[{var,1886,'Term'},{var,1886,'F'}]},
      {call,1886,
       {atom,1886,element_calls},
       [{var,1886,'Term0'},
        {var,1886,'F0'},
        {var,1886,'BF'},
        {var,1886,'Imported'}]}},
     {tuple,1887,
      [{var,1887,'VarI'},
       {call,1887,
        {atom,1887,unify},
        [{atom,1887,'=:='},
         {var,1887,'Tuple'},
         {var,1887,'Term'},
         {var,1887,'F'},
         {var,1887,'BF'},
         {var,1887,'Imported'}]}]}]},
   {clause,1888,
    [{tuple,1888,
      [{atom,1888,call},
       {var,1888,'L1'},
       {match,1888,
        {tuple,1888,[{atom,1888,atom},{var,1888,'_'},{atom,1888,element}]},
        {var,1888,'E'}},
       {var,1888,'As'}]},
     {var,1888,'F0'},
     {var,1888,'BF'},
     {var,1888,'Imported'}],
    [],
    [{call,1890,
      {atom,1890,element_calls},
      [{tuple,1890,
        [{atom,1890,call},
         {var,1890,'L1'},
         {tuple,1890,
          [{atom,1890,remote},
           {var,1890,'L1'},
           {tuple,1890,[{atom,1890,atom},{var,1890,'L1'},{atom,1890,erlang}]},
           {var,1890,'E'}]},
         {var,1890,'As'}]},
       {var,1890,'F0'},
       {var,1890,'BF'},
       {var,1891,'Imported'}]}]},
   {clause,1892,
    [{var,1892,'T'},{var,1892,'F0'},{var,1892,'BF'},{var,1892,'Imported'}],
    [[{call,1892,{atom,1892,is_tuple},[{var,1892,'T'}]}]],
    [{match,1893,
      {tuple,1893,[{var,1893,'L'},{var,1893,'F'}]},
      {call,1893,
       {atom,1893,element_calls},
       [{call,1893,{atom,1893,tuple_to_list},[{var,1893,'T'}]},
        {var,1893,'F0'},
        {var,1893,'BF'},
        {var,1893,'Imported'}]}},
     {tuple,1894,
      [{call,1894,{atom,1894,list_to_tuple},[{var,1894,'L'}]},
       {var,1894,'F'}]}]},
   {clause,1895,
    [{cons,1895,{var,1895,'E0'},{var,1895,'Es0'}},
     {var,1895,'F0'},
     {var,1895,'BF'},
     {var,1895,'Imported'}],
    [],
    [{match,1896,
      {tuple,1896,[{var,1896,'E'},{var,1896,'F1'}]},
      {call,1896,
       {atom,1896,element_calls},
       [{var,1896,'E0'},
        {var,1896,'F0'},
        {var,1896,'BF'},
        {var,1896,'Imported'}]}},
     {match,1897,
      {tuple,1897,[{var,1897,'Es'},{var,1897,'F'}]},
      {call,1897,
       {atom,1897,element_calls},
       [{var,1897,'Es0'},
        {var,1897,'F1'},
        {var,1897,'BF'},
        {var,1897,'Imported'}]}},
     {tuple,1898,
      [{cons,1898,{var,1898,'E'},{var,1898,'Es'}},{var,1898,'F'}]}]},
   {clause,1899,
    [{var,1899,'E'},{var,1899,'F'},{var,1899,'_BF'},{var,1899,'_Imported'}],
    [],
    [{tuple,1900,[{var,1900,'E'},{var,1900,'F'}]}]}]},
 {function,1902,unique_var,0,
  [{clause,1902,[],[],
    [{tuple,1903,
      [{atom,1903,var},
       {call,1903,{atom,1903,anno0},[]},
       {call,1903,{atom,1903,make_ref},[]}]}]}]},
 {function,1905,is_unique_var,1,
  [{clause,1905,
    [{tuple,1905,[{atom,1905,var},{var,1905,'_L'},{var,1905,'V'}]}],
    [],
    [{call,1906,{atom,1906,is_reference},[{var,1906,'V'}]}]}]},
 {function,1908,expand_pattern_records,2,
  [{clause,1908,
    [{var,1908,'P'},{var,1908,'State'}],
    [],
    [{match,1909,{var,1909,'A'},{call,1909,{atom,1909,anno0},[]}},
     {match,1910,
      {var,1910,'E'},
      {tuple,1910,
       [{atom,1910,'case'},
        {var,1910,'A'},
        {tuple,1910,[{atom,1910,atom},{var,1910,'A'},{atom,1910,true}]},
        {cons,1910,
         {tuple,1910,
          [{atom,1910,clause},
           {var,1910,'A'},
           {cons,1910,{var,1910,'P'},{nil,1910}},
           {nil,1910},
           {cons,1910,
            {tuple,1910,[{atom,1910,atom},{var,1910,'A'},{atom,1910,true}]},
            {nil,1910}}]},
         {nil,1910}}]}},
     {match,1911,
      {tuple,1911,
       [{atom,1911,'case'},
        {var,1911,'_'},
        {var,1911,'_'},
        {cons,1911,
         {tuple,1911,
          [{atom,1911,clause},
           {var,1911,'A'},
           {cons,1911,{var,1911,'NP'},{nil,1911}},
           {var,1911,'_'},
           {var,1911,'_'}]},
         {nil,1911}}]},
      {call,1911,
       {atom,1911,expand_expr_records},
       [{var,1911,'E'},{var,1911,'State'}]}},
     {var,1912,'NP'}]}]},
 {function,1914,expand_expr_records,2,
  [{clause,1914,
    [{var,1914,'E'},{var,1914,'State'}],
    [],
    [{match,1915,
      {var,1915,'RecordDefs'},
      {call,1915,
       {remote,1915,{atom,1915,erlang},{atom,1915,element}},
       [{integer,1915,4},{var,1915,'State'}]}},
     {match,1916,{var,1916,'A'},{call,1916,{atom,1916,anno1},[]}},
     {match,1917,
      {var,1917,'Forms'},
      {op,1917,'++',
       {var,1917,'RecordDefs'},
       {cons,1917,
        {tuple,1917,
         [{atom,1917,function},
          {var,1917,'A'},
          {atom,1917,foo},
          {integer,1917,0},
          {cons,1917,
           {tuple,1917,
            [{atom,1917,clause},
             {var,1917,'A'},
             {nil,1917},
             {nil,1917},
             {cons,1917,
              {call,1917,{atom,1917,pe},[{var,1917,'E'}]},
              {nil,1917}}]},
           {nil,1917}}]},
        {nil,1917}}}},
     {match,1918,
      {cons,1918,
       {tuple,1918,
        [{atom,1918,function},
         {var,1918,'_'},
         {atom,1918,foo},
         {integer,1918,0},
         {cons,1918,
          {tuple,1918,
           [{atom,1918,clause},
            {var,1918,'_'},
            {nil,1918},
            {nil,1918},
            {cons,1918,{var,1918,'NE'},{nil,1918}}]},
          {nil,1918}}]},
       {nil,1918}},
      {call,1919,
       {remote,1919,{atom,1919,erl_expand_records},{atom,1919,module}},
       [{var,1919,'Forms'},
        {cons,1919,{atom,1919,no_strict_record_tests},{nil,1919}}]}},
     {var,1920,'NE'}]}]},
 {function,1923,pe,1,
  [{clause,1923,
    [{tuple,1923,
      [{atom,1923,op},{var,1923,'Line'},{var,1923,'Op'},{var,1923,'A'}]}],
    [],
    [{call,1924,
      {remote,1924,{atom,1924,erl_eval},{atom,1924,partial_eval}},
      [{tuple,1924,
        [{atom,1924,op},
         {var,1924,'Line'},
         {var,1924,'Op'},
         {call,1924,{atom,1924,pe},[{var,1924,'A'}]}]}]}]},
   {clause,1925,
    [{tuple,1925,
      [{atom,1925,op},
       {var,1925,'Line'},
       {var,1925,'Op'},
       {var,1925,'L'},
       {var,1925,'R'}]}],
    [],
    [{call,1926,
      {remote,1926,{atom,1926,erl_eval},{atom,1926,partial_eval}},
      [{tuple,1926,
        [{atom,1926,op},
         {var,1926,'Line'},
         {var,1926,'Op'},
         {call,1926,{atom,1926,pe},[{var,1926,'L'}]},
         {call,1926,{atom,1926,pe},[{var,1926,'R'}]}]}]}]},
   {clause,1927,
    [{var,1927,'T'}],
    [[{call,1927,{atom,1927,is_tuple},[{var,1927,'T'}]}]],
    [{call,1928,
      {atom,1928,list_to_tuple},
      [{call,1928,
        {atom,1928,pe},
        [{call,1928,{atom,1928,tuple_to_list},[{var,1928,'T'}]}]}]}]},
   {clause,1929,
    [{cons,1929,{var,1929,'E'},{var,1929,'Es'}}],
    [],
    [{cons,1930,
      {call,1930,{atom,1930,pe},[{var,1930,'E'}]},
      {call,1930,{atom,1930,pe},[{var,1930,'Es'}]}}]},
   {clause,1931,[{var,1931,'E'}],[],[{var,1932,'E'}]}]},
 {function,1934,unify,6,
  [{clause,1934,
    [{var,1934,'Op'},
     {var,1934,'E1'},
     {var,1934,'E2'},
     {var,1934,'F'},
     {var,1934,'BF'},
     {var,1934,'Imported'}],
    [],
    [{call,1935,
      {atom,1935,unify},
      [{var,1935,'Op'},
       {var,1935,'E1'},
       {var,1935,'E2'},
       {var,1935,'F'},
       {var,1935,'BF'},
       {var,1935,'Imported'},
       {atom,1935,false}]}]}]},
 {function,1937,safe_unify,6,
  [{clause,1937,
    [{var,1937,'Op'},
     {var,1937,'E1'},
     {var,1937,'E2'},
     {var,1937,'F'},
     {var,1937,'BF'},
     {var,1937,'Imported'}],
    [],
    [{call,1938,
      {atom,1938,unify},
      [{var,1938,'Op'},
       {var,1938,'E1'},
       {var,1938,'E2'},
       {var,1938,'F'},
       {var,1938,'BF'},
       {var,1938,'Imported'},
       {atom,1938,true}]}]}]},
 {function,1940,unify,7,
  [{clause,1940,
    [{var,1940,'_Op'},
     {var,1940,'_E1'},
     {var,1940,'_E2'},
     {atom,1940,failed},
     {var,1940,'_BF'},
     {var,1940,'_Imported'},
     {var,1940,'_Safe'}],
    [],
    [{atom,1941,failed}]},
   {clause,1942,
    [{var,1942,'_Op'},
     {var,1942,'E'},
     {var,1942,'E'},
     {var,1942,'F'},
     {var,1942,'_BF'},
     {var,1942,'_Imported'},
     {var,1942,'_Safe'}],
    [],
    [{var,1943,'F'}]},
   {clause,1944,
    [{var,1944,'Op'},
     {match,1944,
      {tuple,1944,[{atom,1944,var},{var,1944,'_'},{var,1944,'_'}]},
      {var,1944,'Var'}},
     {var,1944,'E2'},
     {var,1944,'F'},
     {var,1944,'BF'},
     {var,1944,'Imported'},
     {var,1944,'Safe'}],
    [],
    [{call,1945,
      {atom,1945,extend_frame},
      [{var,1945,'Op'},
       {var,1945,'Var'},
       {var,1945,'E2'},
       {var,1945,'F'},
       {var,1945,'BF'},
       {var,1945,'Imported'},
       {var,1945,'Safe'}]}]},
   {clause,1946,
    [{var,1946,'Op'},
     {var,1946,'E1'},
     {match,1946,
      {tuple,1946,[{atom,1946,var},{var,1946,'_'},{var,1946,'_'}]},
      {var,1946,'Var'}},
     {var,1946,'F'},
     {var,1946,'BF'},
     {var,1946,'Imported'},
     {var,1946,'Safe'}],
    [],
    [{call,1947,
      {atom,1947,extend_frame},
      [{var,1947,'Op'},
       {var,1947,'Var'},
       {var,1947,'E1'},
       {var,1947,'F'},
       {var,1947,'BF'},
       {var,1947,'Imported'},
       {var,1947,'Safe'}]}]},
   {clause,1948,
    [{var,1948,'Op'},
     {tuple,1948,[{atom,1948,cons_tuple},{var,1948,'Es1'}]},
     {tuple,1948,[{atom,1948,cons_tuple},{var,1948,'Es2'}]},
     {var,1948,'F'},
     {var,1948,'BF'},
     {var,1948,'Imported'},
     {var,1948,'Safe'}],
    [],
    [{call,1949,
      {atom,1949,unify},
      [{var,1949,'Op'},
       {var,1949,'Es1'},
       {var,1949,'Es2'},
       {var,1949,'F'},
       {var,1949,'BF'},
       {var,1949,'Imported'},
       {var,1949,'Safe'}]}]},
   {clause,1950,
    [{var,1950,'Op'},
     {tuple,1950,
      [{atom,1950,cons},{var,1950,'_'},{var,1950,'L1'},{var,1950,'R1'}]},
     {tuple,1950,
      [{atom,1950,cons},{var,1950,'_'},{var,1950,'L2'},{var,1950,'R2'}]},
     {var,1950,'F'},
     {var,1950,'BF'},
     {var,1950,'Imported'},
     {var,1950,'Safe'}],
    [],
    [{match,1951,
      {var,1951,'E'},
      {call,1951,
       {atom,1951,unify},
       [{var,1951,'Op'},
        {var,1951,'L1'},
        {var,1951,'L2'},
        {var,1951,'F'},
        {var,1951,'BF'},
        {var,1951,'Imported'},
        {var,1951,'Safe'}]}},
     {call,1952,
      {atom,1952,unify},
      [{var,1952,'Op'},
       {var,1952,'R1'},
       {var,1952,'R2'},
       {var,1952,'E'},
       {var,1952,'BF'},
       {var,1952,'Imported'},
       {var,1952,'Safe'}]}]},
   {clause,1953,
    [{var,1953,'Op'},
     {var,1953,'E1'},
     {var,1953,'E2'},
     {var,1953,'F'},
     {var,1953,'_BF'},
     {var,1953,'_Imported'},
     {var,1953,'Safe'}],
    [],
    [{'try',1954,
      [{match,1955,
        {tuple,1955,[{atom,1955,ok},{var,1955,'C1'}]},
        {call,1955,{atom,1955,normalise},[{var,1955,'E1'}]}},
       {match,1956,
        {tuple,1956,[{atom,1956,ok},{var,1956,'C2'}]},
        {call,1956,{atom,1956,normalise},[{var,1956,'E2'}]}},
       {'if',1957,
        [{clause,1958,[],
          [[{op,1958,'=:=',{var,1958,'Op'},{atom,1958,'=:='}},
            {op,1958,'=:=',{var,1958,'C1'},{var,1958,'C2'}}]],
          [{var,1959,'F'}]},
         {clause,1960,[],
          [[{op,1960,'=:=',{var,1960,'Op'},{atom,1960,'=='}},
            {op,1960,'==',{var,1960,'C1'},{var,1960,'C2'}}]],
          [{var,1961,'F'}]},
         {clause,1962,[],[[{atom,1962,true}]],[{atom,1963,failed}]}]}],
      [],
      [{clause,1965,
        [{tuple,1965,[{atom,1965,error},{var,1965,'_'},{var,1965,'_'}]}],
        [[{var,1965,'Safe'}]],
        [{atom,1965,failed}]},
       {clause,1966,
        [{tuple,1966,[{atom,1966,error},{var,1966,'_'},{var,1966,'_'}]}],
        [[{op,1966,'not',{var,1966,'Safe'}}]],
        [{var,1966,'F'}]}],
      []}]}]},
 {function,1981,extend_frame,7,
  [{clause,1981,
    [{var,1981,'Op'},
     {var,1981,'Var'},
     {var,1981,'Value'},
     {var,1981,'F'},
     {var,1981,'BF'},
     {var,1981,'Imported'},
     {var,1981,'Safe'}],
    [],
    [{'case',1982,
      {call,1982,{atom,1982,var_values},[{var,1982,'Var'},{var,1982,'F'}]},
      [{clause,1983,
        [{nil,1983}],
        [],
        [{'case',1984,
          {var,1984,'Value'},
          [{clause,1985,
            [{tuple,1985,[{atom,1985,var},{var,1985,'_'},{var,1985,'_'}]}],
            [],
            [{'case',1986,
              {call,1986,
               {atom,1986,var_values},
               [{var,1986,'Value'},{var,1986,'F'}]},
              [{clause,1987,
                [{nil,1987}],
                [],
                [{call,1988,
                  {atom,1988,add_binding},
                  [{var,1988,'Op'},
                   {var,1988,'Value'},
                   {var,1988,'Var'},
                   {var,1988,'F'},
                   {var,1988,'BF'},
                   {var,1988,'Imported'},
                   {var,1988,'Safe'}]}]},
               {clause,1989,
                [{var,1989,'ValsOps'}],
                [],
                [{call,1990,
                  {atom,1990,maybe_add_binding},
                  [{var,1990,'ValsOps'},
                   {var,1990,'Op'},
                   {var,1990,'Value'},
                   {var,1990,'Var'},
                   {var,1990,'F'},
                   {var,1991,'BF'},
                   {var,1991,'Imported'},
                   {var,1991,'Safe'}]}]}]}]},
           {clause,1993,
            [{var,1993,'_'}],
            [],
            [{call,1994,
              {atom,1994,add_binding},
              [{var,1994,'Op'},
               {var,1994,'Var'},
               {var,1994,'Value'},
               {var,1994,'F'},
               {var,1994,'BF'},
               {var,1994,'Imported'},
               {var,1994,'Safe'}]}]}]}]},
       {clause,1996,
        [{var,1996,'ValsOps'}],
        [],
        [{call,1997,
          {atom,1997,maybe_add_binding},
          [{var,1997,'ValsOps'},
           {var,1997,'Op'},
           {var,1997,'Var'},
           {var,1997,'Value'},
           {var,1997,'F'},
           {var,1997,'BF'},
           {var,1997,'Imported'},
           {var,1997,'Safe'}]}]}]}]}]},
 {function,2000,maybe_add_binding,8,
  [{clause,2000,
    [{var,2000,'ValsOps'},
     {var,2000,'Op'},
     {var,2000,'Var'},
     {var,2000,'Value'},
     {var,2000,'F0'},
     {var,2000,'BF'},
     {var,2000,'Imported'},
     {var,2000,'Safe'}],
    [],
    [{'case',2001,
      {call,2001,
       {atom,2001,unify_var_bindings},
       [{var,2001,'ValsOps'},
        {var,2001,'Op'},
        {var,2001,'Value'},
        {var,2001,'F0'},
        {var,2001,'BF'},
        {var,2001,'Imported'},
        {var,2001,'Safe'}]},
      [{clause,2002,[{atom,2002,failed}],[],[{atom,2003,failed}]},
       {clause,2004,
        [{var,2004,'F'}],
        [],
        [{'case',2005,
          {call,2005,
           {atom,2005,already_bound},
           [{var,2005,'Op'},
            {var,2005,'Var'},
            {var,2005,'Value'},
            {var,2005,'F'}]},
          [{clause,2006,[{atom,2006,true}],[],[{var,2007,'F'}]},
           {clause,2008,
            [{atom,2008,false}],
            [],
            [{call,2009,
              {atom,2009,add_binding},
              [{var,2009,'Op'},
               {var,2009,'Var'},
               {var,2009,'Value'},
               {var,2009,'F'},
               {var,2009,'BF'},
               {var,2009,'Imported'},
               {var,2009,'Safe'}]}]}]}]}]}]}]},
 {function,2013,already_bound,4,
  [{clause,2013,
    [{var,2013,'Op'},{var,2013,'Var'},{var,2013,'Value'},{var,2013,'F'}],
    [],
    [{match,2016,
      {var,2016,'BFun'},
      {'fun',2016,
       {clauses,
        [{clause,2016,
          [{var,2016,'_DV'},{var,2016,'BOp'}],
          [],
          [{op,2016,'=:=',{var,2016,'Op'},{var,2016,'BOp'}}]}]}}},
     {match,2017,
      {var,2017,'DerefValue'},
      {call,2017,
       {atom,2017,deref_value},
       [{var,2017,'Value'},
        {var,2017,'Op'},
        {var,2017,'F'},
        {var,2017,'BFun'},
        {atom,2017,all}]}},
     {match,2018,
      {var,2018,'DerefVar'},
      {call,2018,
       {atom,2018,deref_var},
       [{var,2018,'Var'},{var,2018,'F'},{var,2018,'BFun'},{atom,2018,all}]}},
     {op,2019,'=:=',
      {op,2019,'--',{var,2019,'DerefValue'},{var,2019,'DerefVar'}},
      {nil,2019}}]}]},
 {function,2021,unify_var_bindings,7,
  [{clause,2021,
    [{nil,2021},
     {var,2021,'_Op'},
     {var,2021,'_Value'},
     {var,2021,'F'},
     {var,2021,'_BF'},
     {var,2021,'_Imported'},
     {var,2021,'_Safe'}],
    [],
    [{var,2022,'F'}]},
   {clause,2023,
    [{cons,2023,
      {tuple,2023,[{var,2023,'VarValue'},{var,2023,'Op2'}]},
      {var,2023,'Bindings'}},
     {var,2024,'Op1'},
     {var,2024,'Value'},
     {var,2024,'F0'},
     {var,2024,'BF'},
     {var,2024,'Imported'},
     {var,2024,'Safe'}],
    [],
    [{match,2025,
      {var,2025,'Op'},
      {call,2025,{atom,2025,deref_op},[{var,2025,'Op1'},{var,2025,'Op2'}]}},
     {'case',2026,
      {call,2026,
       {atom,2026,unify},
       [{var,2026,'Op'},
        {var,2026,'VarValue'},
        {var,2026,'Value'},
        {var,2026,'F0'},
        {var,2026,'BF'},
        {var,2026,'Imported'},
        {var,2026,'Safe'}]},
      [{clause,2027,[{atom,2027,failed}],[],[{atom,2028,failed}]},
       {clause,2029,
        [{var,2029,'F'}],
        [],
        [{call,2030,
          {atom,2030,unify_var_bindings},
          [{var,2030,'Bindings'},
           {var,2030,'Op1'},
           {var,2030,'Value'},
           {var,2030,'F'},
           {var,2030,'BF'},
           {var,2030,'Imported'},
           {var,2030,'Safe'}]}]}]}]}]},
 {function,2033,deref_op,2,
  [{clause,2033,[{atom,2033,'=:='},{atom,2033,'=:='}],[],[{atom,2034,'=:='}]},
   {clause,2035,[{var,2035,'_'},{var,2035,'_'}],[],[{atom,2036,'=='}]}]},
 {function,2040,var_values,2,
  [{clause,2040,
    [{var,2040,'Var'},{var,2040,'Frame'}],
    [],
    [{lc,2041,
      {tuple,2041,[{var,2041,'Value'},{var,2041,'Op'}]},
      [{generate,2042,
        {tuple,2042,
         [{atom,2042,bind},
          {atom,2042,undefined},
          {var,2042,'Value'},
          {var,2042,'Op'}]},
        {call,2042,
         {atom,2042,var_bindings},
         [{var,2042,'Var'},{var,2042,'Frame'}]}}]}]}]},
 {function,2044,deref_var,3,
  [{clause,2044,
    [{var,2044,'Var'},{var,2044,'Frame'},{var,2044,'Imported'}],
    [],
    [{call,2045,
      {atom,2045,deref_var},
      [{var,2045,'Var'},
       {var,2045,'Frame'},
       {'fun',2045,
        {clauses,
         [{clause,2045,
           [{var,2045,'_DV'},{var,2045,'_Op'}],
           [],
           [{atom,2045,true}]}]}},
       {var,2045,'Imported'}]}]}]},
 {function,2047,deref_var,4,
  [{clause,2047,
    [{var,2047,'Var'},
     {var,2047,'Frame'},
     {var,2047,'BFun'},
     {var,2047,'Imported'}],
    [],
    [{call,2048,
      {remote,2048,{atom,2048,lists},{atom,2048,usort}},
      [{lc,2048,
        {var,2048,'ValOp'},
        [{generate,2049,
          {tuple,2049,
           [{atom,2049,bind},
            {atom,2049,undefined},
            {var,2049,'Value'},
            {var,2049,'Op'}]},
          {call,2049,
           {atom,2049,var_bindings},
           [{var,2049,'Var'},{var,2049,'Frame'}]}},
         {generate,2050,
          {var,2050,'ValOp'},
          {call,2050,
           {atom,2050,deref_value},
           [{var,2050,'Value'},
            {var,2050,'Op'},
            {var,2050,'Frame'},
            {var,2050,'BFun'},
            {var,2050,'Imported'}]}}]}]}]}]},
 {function,2052,deref_value,5,
  [{clause,2052,
    [{var,2052,'Value'},
     {var,2052,'Op'},
     {var,2052,'Frame'},
     {var,2052,'BFun'},
     {var,2052,'Imported'}],
    [],
    [{call,2053,
      {remote,2053,{atom,2053,lists},{atom,2053,usort}},
      [{lc,2053,
        {tuple,2053,
         [{var,2053,'Val'},
          {call,2053,
           {atom,2053,value_op},
           [{var,2053,'ValOp'},{var,2053,'Op'},{var,2053,'Imported'}]}]},
        [{generate,2054,
          {match,2054,
           {tuple,2054,[{var,2054,'Val'},{var,2054,'_Op'}]},
           {var,2054,'ValOp'}},
          {call,2054,
           {atom,2054,deref},
           [{var,2054,'Value'},
            {var,2054,'Frame'},
            {var,2054,'BFun'},
            {var,2054,'Imported'}]}}]}]}]}]},
 {function,2056,add_binding,7,
  [{clause,2056,
    [{var,2056,'Op'},
     {var,2056,'Var0'},
     {var,2056,'Value0'},
     {var,2056,'F'},
     {var,2056,'BF'},
     {var,2056,'Imported'},
     {var,2056,'Safe'}],
    [],
    [{match,2057,
      {tuple,2057,[{var,2057,'Var'},{var,2057,'Value'}]},
      {call,2057,
       {atom,2057,maybe_swap_var_value},
       [{var,2057,'Var0'},
        {var,2057,'Value0'},
        {var,2057,'F'},
        {var,2057,'Imported'}]}},
     {'case',2058,
      {call,2058,{var,2058,'BF'},[{var,2058,'Op'},{var,2058,'Value'}]},
      [{clause,2059,
        [{atom,2059,true}],
        [],
        [{call,2060,
          {atom,2060,add_binding2},
          [{var,2060,'Var'},
           {var,2060,'Value'},
           {var,2060,'Op'},
           {var,2060,'F'}]}]},
       {clause,2061,
        [{atom,2061,false}],
        [[{var,2061,'Safe'}]],
        [{atom,2062,failed}]},
       {clause,2063,
        [{atom,2063,false}],
        [[{op,2063,'not',{var,2063,'Safe'}}]],
        [{var,2064,'F'}]}]}]}]},
 {function,2067,add_binding2,4,
  [{clause,2067,
    [{var,2067,'Var'},{var,2067,'Value'},{var,2067,'Op'},{var,2067,'F'}],
    [],
    [{'case',2068,
      {call,2068,
       {atom,2068,occurs},
       [{var,2068,'Var'},{var,2068,'Value'},{var,2068,'F'}]},
      [{clause,2069,[{atom,2069,true}],[],[{atom,2070,failed}]},
       {clause,2071,
        [{atom,2071,false}],
        [],
        [{cons,2072,
          {tuple,2072,
           [{atom,2072,bind},
            {var,2072,'Var'},
            {var,2072,'Value'},
            {var,2072,'Op'}]},
          {var,2072,'F'}}]}]}]}]},
 {function,2078,maybe_swap_var_value,4,
  [{clause,2078,
    [{var,2078,'Var'},
     {var,2078,'Value'},
     {var,2078,'Frame'},
     {var,2078,'Imported'}],
    [],
    [{'case',2079,
      {call,2079,
       {atom,2079,do_swap_var_value},
       [{var,2079,'Var'},
        {var,2079,'Value'},
        {var,2079,'Frame'},
        {var,2079,'Imported'}]},
      [{clause,2080,
        [{atom,2080,true}],
        [],
        [{tuple,2081,[{var,2081,'Value'},{var,2081,'Var'}]}]},
       {clause,2082,
        [{atom,2082,false}],
        [],
        [{tuple,2083,[{var,2083,'Var'},{var,2083,'Value'}]}]}]}]}]},
 {function,2086,do_swap_var_value,4,
  [{clause,2086,
    [{match,2086,
      {tuple,2086,[{atom,2086,var},{var,2086,'_'},{var,2086,'V1'}]},
      {var,2086,'Var1'}},
     {match,2086,
      {tuple,2086,[{atom,2086,var},{var,2086,'_'},{var,2086,'V2'}]},
      {var,2086,'Var2'}},
     {var,2086,'F'},
     {var,2086,'Imported'}],
    [],
    [{'case',2087,
      {call,2087,
       {atom,2087,swap_vv},
       [{var,2087,'Var1'},{var,2087,'Var2'},{var,2087,'F'}]},
      [{clause,2088,
        [{nil,2088}],
        [],
        [{'case',2089,
          {call,2089,
           {atom,2089,swap_vv},
           [{var,2089,'Var2'},{var,2089,'Var1'},{var,2089,'F'}]},
          [{clause,2090,
            [{nil,2090}],
            [],
            [{op,2091,'andalso',
              {call,2091,
               {remote,2091,{atom,2091,ordsets},{atom,2091,is_element}},
               [{var,2091,'V1'},{var,2091,'Imported'}]},
              {op,2092,'not',
               {call,2092,
                {remote,2092,{atom,2092,ordsets},{atom,2092,is_element}},
                [{var,2092,'V2'},{var,2092,'Imported'}]}}}]},
           {clause,2093,[{var,2093,'_Bs'}],[],[{atom,2094,true}]}]}]},
       {clause,2096,[{var,2096,'_Bs'}],[],[{atom,2097,false}]}]}]},
   {clause,2099,
    [{var,2099,'_'},{var,2099,'_'},{var,2099,'_F'},{var,2099,'_Imp'}],
    [],
    [{atom,2100,false}]}]},
 {function,2102,swap_vv,3,
  [{clause,2102,
    [{var,2102,'V1'},{var,2102,'V2'},{var,2102,'F'}],
    [],
    [{lc,2103,
      {var,2103,'V'},
      [{generate,2103,
        {tuple,2103,
         [{atom,2103,bind},
          {atom,2103,undefined},
          {var,2103,'V'},
          {atom,2103,undefined}]},
        {call,2103,{atom,2103,var_bindings},[{var,2103,'V1'},{var,2103,'F'}]}},
       {op,2103,'=:=',{var,2103,'V'},{var,2103,'V2'}}]}]}]},
 {function,2105,normalise,1,
  [{clause,2105,
    [{var,2105,'E'}],
    [],
    [{'case',2107,
      {'catch',2107,
       {call,2107,
        {remote,2107,{atom,2107,erl_parse},{atom,2107,normalise}},
        [{call,2107,
          {atom,2107,var2const},
          [{call,2107,{atom,2107,cons2tuple},[{var,2107,'E'}]}]}]}},
      [{clause,2108,
        [{tuple,2108,[{atom,2108,'EXIT'},{var,2108,'_'}]}],
        [],
        [{atom,2109,not_ok}]},
       {clause,2110,
        [{var,2110,'C'}],
        [],
        [{tuple,2111,[{atom,2111,ok},{var,2111,'C'}]}]}]}]}]},
 {function,2114,occurs,3,
  [{clause,2114,
    [{var,2114,'V'},{var,2114,'V'},{var,2114,'_F'}],
    [],
    [{atom,2115,true}]},
   {clause,2116,
    [{var,2116,'V'},
     {match,2116,
      {tuple,2116,[{atom,2116,var},{var,2116,'_'},{var,2116,'_'}]},
      {var,2116,'Var'}},
     {var,2116,'F'}],
    [],
    [{call,2117,
      {remote,2117,{atom,2117,lists},{atom,2117,any}},
      [{'fun',2117,
        {clauses,
         [{clause,2117,
           [{var,2117,'B'}],
           [],
           [{call,2117,
             {atom,2117,occurs},
             [{var,2117,'V'},
              {call,2117,
               {remote,2117,{atom,2117,erlang},{atom,2117,element}},
               [{integer,2117,3},{var,2117,'B'}]},
              {var,2117,'F'}]}]}]}},
       {call,2117,
        {atom,2117,var_bindings},
        [{var,2117,'Var'},{var,2117,'F'}]}]}]},
   {clause,2118,
    [{var,2118,'V'},{var,2118,'T'},{var,2118,'F'}],
    [[{call,2118,{atom,2118,is_tuple},[{var,2118,'T'}]}]],
    [{call,2119,
      {remote,2119,{atom,2119,lists},{atom,2119,any}},
      [{'fun',2119,
        {clauses,
         [{clause,2119,
           [{var,2119,'E'}],
           [],
           [{call,2119,
             {atom,2119,occurs},
             [{var,2119,'V'},{var,2119,'E'},{var,2119,'F'}]}]}]}},
       {call,2119,{atom,2119,tuple_to_list},[{var,2119,'T'}]}]}]},
   {clause,2120,
    [{var,2120,'V'},{cons,2120,{var,2120,'E'},{var,2120,'Es'}},{var,2120,'F'}],
    [],
    [{op,2121,'orelse',
      {call,2121,
       {atom,2121,occurs},
       [{var,2121,'V'},{var,2121,'E'},{var,2121,'F'}]},
      {call,2121,
       {atom,2121,occurs},
       [{var,2121,'V'},{var,2121,'Es'},{var,2121,'F'}]}}]},
   {clause,2122,
    [{var,2122,'_V'},{var,2122,'_E'},{var,2122,'_F'}],
    [],
    [{atom,2123,false}]}]},
 {function,2125,deref_values,3,
  [{clause,2125,
    [{var,2125,'E'},{var,2125,'Frame'},{var,2125,'Imported'}],
    [],
    [{call,2126,
      {atom,2126,deref_values},
      [{var,2126,'E'},
       {var,2126,'Frame'},
       {'fun',2126,
        {clauses,
         [{clause,2126,
           [{var,2126,'_DV'},{var,2126,'_Op'}],
           [],
           [{atom,2126,true}]}]}},
       {var,2126,'Imported'}]}]}]},
 {function,2128,deref_values,4,
  [{clause,2128,
    [{var,2128,'E'},
     {var,2128,'Frame'},
     {var,2128,'BFun'},
     {var,2128,'Imported'}],
    [],
    [{call,2129,
      {remote,2129,{atom,2129,lists},{atom,2129,usort}},
      [{lc,2129,
        {var,2129,'V'},
        [{generate,2130,
          {tuple,2130,[{var,2130,'V'},{var,2130,'Op'}]},
          {call,2130,
           {atom,2130,deref},
           [{var,2130,'E'},
            {var,2130,'Frame'},
            {var,2130,'BFun'},
            {var,2130,'Imported'}]}},
         {call,2131,
          {var,2131,'BFun'},
          [{var,2131,'V'},{var,2131,'Op'}]}]}]}]}]},
 {function,2133,deref,3,
  [{clause,2133,
    [{var,2133,'E'},{var,2133,'F'},{var,2133,'Imp'}],
    [],
    [{match,2134,
      {var,2134,'BFun'},
      {'fun',2134,
       {clauses,
        [{clause,2134,
          [{var,2134,'_DV'},{var,2134,'_Op'}],
          [],
          [{atom,2134,true}]}]}}},
     {call,2135,
      {atom,2135,deref},
      [{var,2135,'E'},{var,2135,'F'},{var,2135,'BFun'},{var,2135,'Imp'}]}]}]},
 {function,2137,deref,4,
  [{clause,2137,
    [{match,2137,
      {tuple,2137,[{atom,2137,var},{var,2137,'_'},{var,2137,'_'}]},
      {var,2137,'V'}},
     {var,2137,'F'},
     {var,2137,'BFun'},
     {var,2137,'Imp'}],
    [],
    [{match,2138,
      {var,2138,'DBs'},
      {call,2138,
       {remote,2138,{atom,2138,lists},{atom,2138,flatmap}},
       [{'fun',2138,
         {clauses,
          [{clause,2138,
            [{var,2138,'B'}],
            [],
            [{call,2138,
              {atom,2138,deref_binding},
              [{var,2138,'B'},
               {var,2138,'F'},
               {var,2138,'BFun'},
               {var,2138,'Imp'}]}]}]}},
        {call,2139,
         {atom,2139,var_bindings},
         [{var,2139,'V'},{var,2139,'F'}]}]}},
     {'case',2140,
      {var,2140,'DBs'},
      [{clause,2141,
        [{nil,2141}],
        [],
        [{cons,2142,
          {tuple,2142,[{var,2142,'V'},{atom,2142,'=:='}]},
          {nil,2142}}]},
       {clause,2143,
        [{var,2143,'_'}],
        [],
        [{call,2144,
          {remote,2144,{atom,2144,lists},{atom,2144,usort}},
          [{var,2144,'DBs'}]}]}]}]},
   {clause,2146,
    [{var,2146,'T'},{var,2146,'F'},{var,2146,'BFun'},{var,2146,'Imp'}],
    [[{call,2146,{atom,2146,is_tuple},[{var,2146,'T'}]}]],
    [{lc,2147,
      {tuple,2147,
       [{call,2147,{atom,2147,list_to_tuple},[{var,2147,'DL'}]},
        {var,2147,'Op'}]},
      [{generate,2148,
        {tuple,2148,[{var,2148,'DL'},{var,2148,'Op'}]},
        {call,2148,
         {atom,2148,deref},
         [{call,2148,{atom,2148,tuple_to_list},[{var,2148,'T'}]},
          {var,2148,'F'},
          {var,2148,'BFun'},
          {var,2148,'Imp'}]}}]}]},
   {clause,2149,
    [{var,2149,'Es'},{var,2149,'F'},{var,2149,'BFun'},{var,2149,'Imp'}],
    [[{call,2149,{atom,2149,is_list},[{var,2149,'Es'}]}]],
    [{match,2150,
      {var,2150,'L'},
      {lc,2150,
       {call,2150,
        {atom,2150,deref},
        [{var,2150,'C'},{var,2150,'F'},{var,2150,'BFun'},{var,2150,'Imp'}]},
       [{generate,2150,{var,2150,'C'},{var,2150,'Es'}}]}},
     {call,2151,
      {remote,2151,{atom,2151,lists},{atom,2151,usort}},
      [{lc,2151,
        {call,2151,{atom,2151,deref_list},[{var,2151,'S'}]},
        [{generate,2151,
          {var,2151,'S'},
          {call,2151,{atom,2151,all_comb},[{var,2151,'L'}]}}]}]}]},
   {clause,2152,
    [{var,2152,'E'},{var,2152,'_F'},{var,2152,'_BFun'},{var,2152,'_Imp'}],
    [],
    [{cons,2153,
      {tuple,2153,[{var,2153,'E'},{atom,2153,'=:='}]},
      {nil,2153}}]}]},
 {function,2155,var_bindings,2,
  [{clause,2155,
    [{var,2155,'Var'},{var,2155,'F'}],
    [],
    [{lc,2156,
      {var,2156,'B'},
      [{generate,2156,
        {match,2156,
         {tuple,2156,
          [{atom,2156,bind},{var,2156,'V'},{var,2156,'_'},{var,2156,'_'}]},
         {var,2156,'B'}},
        {var,2156,'F'}},
       {op,2156,'=:=',{var,2156,'V'},{var,2156,'Var'}}]}]}]},
 {function,2158,deref_binding,4,
  [{clause,2158,
    [{var,2158,'Bind'},{var,2158,'Frame'},{var,2158,'BFun'},{var,2158,'Imp'}],
    [],
    [{match,2159,
      {tuple,2159,
       [{atom,2159,bind},{var,2159,'_'},{var,2159,'Value'},{var,2159,'Op0'}]},
      {var,2159,'Bind'}},
     {lc,2160,
      {tuple,2160,[{var,2160,'Val'},{var,2160,'Op'}]},
      [{generate,2161,
        {match,2161,
         {tuple,2161,[{var,2161,'Val'},{var,2161,'_Op'}]},
         {var,2161,'ValOp'}},
        {call,2161,
         {atom,2161,deref},
         [{var,2161,'Value'},
          {var,2161,'Frame'},
          {var,2161,'BFun'},
          {var,2161,'Imp'}]}},
       {call,2162,
        {var,2162,'BFun'},
        [{var,2162,'Val'},
         {match,2162,
          {var,2162,'Op'},
          {call,2162,
           {atom,2162,value_op},
           [{var,2162,'ValOp'},{var,2162,'Op0'},{var,2162,'Imp'}]}}]}]}]}]},
 {function,2164,deref_list,1,
  [{clause,2164,
    [{var,2164,'L'}],
    [],
    [{match,2165,
      {var,2165,'Op'},
      {'case',2165,
       {call,2165,
        {remote,2165,{atom,2165,lists},{atom,2165,usort}},
        [{lc,2165,
          {var,2165,'Op'},
          [{generate,2165,
            {tuple,2165,[{var,2165,'_Val'},{var,2165,'Op'}]},
            {var,2165,'L'}}]}]},
       [{clause,2166,
         [{cons,2166,{atom,2166,'=:='},{nil,2166}}],
         [],
         [{atom,2167,'=:='}]},
        {clause,2168,[{var,2168,'_'}],[],[{atom,2169,'=='}]}]}},
     {tuple,2171,
      [{lc,2171,
        {var,2171,'V'},
        [{generate,2171,
          {tuple,2171,[{var,2171,'V'},{var,2171,'_Op'}]},
          {var,2171,'L'}}]},
       {var,2171,'Op'}]}]}]},
 {function,2173,value_op,3,
  [{clause,2173,
    [{tuple,2173,[{var,2173,'_V'},{atom,2173,'=='}]},
     {var,2173,'_BindOp'},
     {var,2173,'_Imp'}],
    [],
    [{atom,2174,'=='}]},
   {clause,2175,
    [{tuple,2175,[{var,2175,'_V'},{atom,2175,'=:='}]},
     {match,2175,{var,2175,'_BindOp'},{atom,2175,'=:='}},
     {var,2175,'_Imp'}],
    [],
    [{atom,2176,'=:='}]},
   {clause,2177,
    [{tuple,2177,[{var,2177,'V'},{atom,2177,'=:='}]},
     {match,2177,{var,2177,'_BindOp'},{atom,2177,'=='}},
     {var,2177,'Imp'}],
    [],
    [{'case',2178,
      {call,2178,
       {atom,2178,free_of_integers},
       [{var,2178,'V'},{var,2178,'Imp'}]},
      [{clause,2179,[{atom,2179,true}],[],[{atom,2180,'=:='}]},
       {clause,2181,[{atom,2181,false}],[],[{atom,2182,'=='}]}]}]}]},
 {function,2185,all_comb,1,
  [{clause,2185,[{nil,2185}],[],[{cons,2186,{nil,2186},{nil,2186}}]},
   {clause,2187,
    [{cons,2187,{var,2187,'Cs'},{var,2187,'ICs'}}],
    [],
    [{lc,2188,
      {cons,2188,{var,2188,'C'},{var,2188,'L'}},
      [{generate,2188,{var,2188,'C'},{var,2188,'Cs'}},
       {generate,2188,
        {var,2188,'L'},
        {call,2188,{atom,2188,all_comb},[{var,2188,'ICs'}]}}]}]}]},
 {function,2193,free_of_integers,2,
  [{clause,2193,
    [{var,2193,'V'},{var,2193,'Imported'}],
    [],
    [{op,2194,'andalso',
      {op,2194,'not',{call,2194,{atom,2194,has_integer},[{var,2194,'V'}]}},
      {op,2194,'not',
       {call,2194,
        {atom,2194,has_imported_vars},
        [{var,2194,'V'},{var,2194,'Imported'}]}}}]}]},
 {function,2198,has_imported_vars,2,
  [{clause,2198,
    [{var,2198,'Value'},{atom,2198,all}],
    [],
    [{op,2199,'=/=',
      {call,2199,
       {remote,2199,{atom,2199,qlc},{atom,2199,vars}},
       [{var,2199,'Value'}]},
      {nil,2199}}]},
   {clause,2200,
    [{var,2200,'Value'},{var,2200,'Imported'}],
    [],
    [{op,2201,'=/=',
      {lc,2201,
       {var,2201,'Var'},
       [{generate,2201,
         {var,2201,'Var'},
         {call,2201,
          {remote,2201,{atom,2201,qlc},{atom,2201,vars}},
          [{var,2201,'Value'}]}},
        {call,2201,
         {remote,2201,{atom,2201,lists},{atom,2201,member}},
         [{var,2201,'Var'},{var,2201,'Imported'}]}]},
      {nil,2201}}]}]},
 {function,2203,has_integer,1,
  [{clause,2203,
    [{var,2203,'Abstr'}],
    [],
    [{'try',2204,
      [{call,2205,{atom,2205,has_int},[{var,2205,'Abstr'}]}],
      [],
      [{clause,2206,
        [{tuple,2206,[{atom,2206,throw},{atom,2206,true},{var,2206,'_'}]}],
        [],
        [{atom,2206,true}]}],
      []}]}]},
 {function,2209,has_int,1,
  [{clause,2209,
    [{tuple,2209,[{atom,2209,integer},{var,2209,'_'},{var,2209,'I'}]}],
    [[{op,2209,'==',
       {call,2209,{atom,2209,float},[{var,2209,'I'}]},
       {var,2209,'I'}}]],
    [{call,2210,{atom,2210,throw},[{atom,2210,true}]}]},
   {clause,2211,
    [{tuple,2211,[{atom,2211,float},{var,2211,'_'},{var,2211,'F'}]}],
    [[{op,2211,'==',
       {call,2211,{atom,2211,round},[{var,2211,'F'}]},
       {var,2211,'F'}}]],
    [{call,2212,{atom,2212,throw},[{atom,2212,true}]}]},
   {clause,2213,
    [{var,2213,'T'}],
    [[{call,2213,{atom,2213,is_tuple},[{var,2213,'T'}]}]],
    [{call,2214,
      {atom,2214,has_int},
      [{call,2214,{atom,2214,tuple_to_list},[{var,2214,'T'}]}]}]},
   {clause,2215,
    [{cons,2215,{var,2215,'E'},{var,2215,'Es'}}],
    [],
    [{call,2216,{atom,2216,has_int},[{var,2216,'E'}]},
     {call,2217,{atom,2217,has_int},[{var,2217,'Es'}]}]},
   {clause,2218,[{var,2218,'_'}],[],[{atom,2219,false}]}]},
 {function,2221,tuple2cons,1,
  [{clause,2221,
    [{tuple,2221,[{atom,2221,tuple},{var,2221,'_'},{var,2221,'Es'}]}],
    [],
    [{tuple,2222,
      [{atom,2222,cons_tuple},
       {call,2222,
        {atom,2222,list2cons},
        [{call,2222,{atom,2222,tuple2cons},[{var,2222,'Es'}]}]}]}]},
   {clause,2223,
    [{var,2223,'T'}],
    [[{call,2223,{atom,2223,is_tuple},[{var,2223,'T'}]}]],
    [{call,2224,
      {atom,2224,list_to_tuple},
      [{call,2224,
        {atom,2224,tuple2cons},
        [{call,2224,{atom,2224,tuple_to_list},[{var,2224,'T'}]}]}]}]},
   {clause,2225,
    [{cons,2225,{var,2225,'E'},{var,2225,'Es'}}],
    [],
    [{cons,2226,
      {call,2226,{atom,2226,tuple2cons},[{var,2226,'E'}]},
      {call,2226,{atom,2226,tuple2cons},[{var,2226,'Es'}]}}]},
   {clause,2227,[{var,2227,'E'}],[],[{var,2228,'E'}]}]},
 {function,2230,list2cons,1,
  [{clause,2230,
    [{cons,2230,{var,2230,'E'},{var,2230,'Es'}}],
    [],
    [{tuple,2231,
      [{atom,2231,cons},
       {call,2231,{atom,2231,anno0},[]},
       {var,2231,'E'},
       {call,2231,{atom,2231,list2cons},[{var,2231,'Es'}]}]}]},
   {clause,2232,
    [{nil,2232}],
    [],
    [{tuple,2233,[{atom,2233,nil},{call,2233,{atom,2233,anno0},[]}]}]},
   {clause,2234,[{var,2234,'E'}],[],[{var,2235,'E'}]}]},
 {function,2238,cons2tuple,1,
  [{clause,2238,
    [{tuple,2238,[{atom,2238,cons_tuple},{var,2238,'Es'}]}],
    [],
    [{tuple,2239,
      [{atom,2239,tuple},
       {call,2239,{atom,2239,anno0},[]},
       {call,2239,{atom,2239,cons2list},[{var,2239,'Es'}]}]}]},
   {clause,2240,
    [{var,2240,'T'}],
    [[{call,2240,{atom,2240,is_tuple},[{var,2240,'T'}]}]],
    [{call,2241,
      {atom,2241,list_to_tuple},
      [{call,2241,
        {atom,2241,cons2tuple},
        [{call,2241,{atom,2241,tuple_to_list},[{var,2241,'T'}]}]}]}]},
   {clause,2242,
    [{cons,2242,{var,2242,'E'},{var,2242,'Es'}}],
    [],
    [{cons,2243,
      {call,2243,{atom,2243,cons2tuple},[{var,2243,'E'}]},
      {call,2243,{atom,2243,cons2tuple},[{var,2243,'Es'}]}}]},
   {clause,2244,[{var,2244,'E'}],[],[{var,2245,'E'}]}]},
 {function,2247,cons2list,1,
  [{clause,2247,
    [{tuple,2247,
      [{atom,2247,cons},{var,2247,'_'},{var,2247,'L'},{var,2247,'R'}]}],
    [],
    [{cons,2248,
      {call,2248,{atom,2248,cons2tuple},[{var,2248,'L'}]},
      {call,2248,{atom,2248,cons2list},[{var,2248,'R'}]}}]},
   {clause,2249,
    [{tuple,2249,[{atom,2249,nil},{var,2249,'_'}]}],
    [],
    [{nil,2250}]},
   {clause,2251,
    [{var,2251,'E'}],
    [],
    [{cons,2252,
      {call,2252,{atom,2252,cons2tuple},[{var,2252,'E'}]},
      {nil,2252}}]}]},
 {function,2258,bindings_is_subset,3,
  [{clause,2258,
    [{var,2258,'F1'},{var,2258,'F2'},{var,2258,'Imported'}],
    [],
    [{match,2259,
      {var,2259,'BF'},
      {'fun',2259,
       {clauses,
        [{clause,2259,
          [{var,2259,'_Op'},{var,2259,'_Value'}],
          [],
          [{atom,2259,true}]}]}}},
     {match,2261,
      {var,2261,'F'},
      {call,2261,
       {remote,2261,{atom,2261,lists},{atom,2261,foldl}},
       [{'fun',2261,
         {clauses,
          [{clause,2261,
            [{tuple,2261,
              [{atom,2261,bind},
               {var,2261,'V'},
               {var,2261,'Value'},
               {var,2261,'Op'}]},
             {var,2261,'Frame'}],
            [],
            [{call,2262,
              {atom,2262,unify},
              [{var,2262,'Op'},
               {var,2262,'V'},
               {var,2262,'Value'},
               {var,2262,'Frame'},
               {var,2262,'BF'},
               {var,2262,'Imported'}]}]}]}},
        {var,2263,'F2'},
        {var,2263,'F1'}]}},
     {op,2264,'andalso',
      {call,2264,
       {atom,2264,bindings_subset},
       [{var,2264,'F'},{var,2264,'F2'},{var,2264,'Imported'}]},
      {call,2264,
       {atom,2264,bindings_subset},
       [{var,2264,'F2'},{var,2264,'F'},{var,2264,'Imported'}]}}]}]},
 {function,2266,bindings_subset,3,
  [{clause,2266,
    [{var,2266,'F1'},{var,2266,'F2'},{var,2266,'Imp'}],
    [],
    [{match,2267,
      {var,2267,'Vars'},
      {call,2267,
       {remote,2267,{atom,2267,lists},{atom,2267,usort}},
       [{lc,2267,
         {var,2267,'V'},
         [{generate,2267,
           {tuple,2267,
            [{atom,2267,bind},
             {var,2267,'V'},
             {atom,2267,undefined},
             {atom,2267,undefined}]},
           {var,2267,'F1'}},
          {op,2267,'not',
           {call,2267,{atom,2267,is_unique_var},[{var,2267,'V'}]}}]}]}},
     {call,2268,
      {remote,2268,{atom,2268,lists},{atom,2268,all}},
      [{'fun',2268,
        {clauses,
         [{clause,2268,
           [{var,2268,'V'}],
           [],
           [{op,2269,'=:=',
             {call,2269,
              {atom,2269,deref_var},
              [{var,2269,'V'},{var,2269,'F1'},{var,2269,'Imp'}]},
             {call,2269,
              {atom,2269,deref_var},
              [{var,2269,'V'},{var,2269,'F2'},{var,2269,'Imp'}]}}]}]}},
       {var,2270,'Vars'}]}]}]},
 {function,2277,try_ms,4,
  [{clause,2277,
    [{var,2277,'E'},{var,2277,'P'},{var,2277,'Fltr'},{var,2277,'State'}],
    [],
    [{match,2278,{var,2278,'L'},{call,2278,{atom,2278,anno1},[]}},
     {match,2279,
      {var,2279,'Fun'},
      {tuple,2279,
       [{atom,2279,'fun'},
        {var,2279,'L'},
        {tuple,2279,
         [{atom,2279,clauses},
          {cons,2279,
           {tuple,2279,
            [{atom,2279,clause},
             {var,2279,'L'},
             {cons,2279,{var,2279,'P'},{nil,2279}},
             {cons,2279,{cons,2279,{var,2279,'Fltr'},{nil,2279}},{nil,2279}},
             {cons,2279,{var,2279,'E'},{nil,2279}}]},
           {nil,2279}}]}]}},
     {match,2280,
      {var,2280,'Expr'},
      {tuple,2280,
       [{atom,2280,call},
        {var,2280,'L'},
        {tuple,2280,
         [{atom,2280,remote},
          {var,2280,'L'},
          {tuple,2280,[{atom,2280,atom},{var,2280,'L'},{atom,2280,ets}]},
          {tuple,2280,[{atom,2280,atom},{var,2280,'L'},{atom,2280,fun2ms}]}]},
        {cons,2280,{var,2280,'Fun'},{nil,2280}}]}},
     {match,2281,
      {var,2281,'Form'},
      {tuple,2281,
       [{atom,2281,function},
        {var,2281,'L'},
        {atom,2281,foo},
        {integer,2281,0},
        {cons,2281,
         {tuple,2281,
          [{atom,2281,clause},
           {var,2281,'L'},
           {nil,2281},
           {nil,2281},
           {cons,2281,{var,2281,'Expr'},{nil,2281}}]},
         {nil,2281}}]}},
     {match,2282,
      {var,2282,'X'},
      {call,2282,
       {remote,2282,{atom,2282,ms_transform},{atom,2282,parse_transform}},
       [{op,2282,'++',
         {call,2282,
          {remote,2282,{atom,2282,erlang},{atom,2282,element}},
          [{integer,2282,4},{var,2282,'State'}]},
         {cons,2282,{var,2282,'Form'},{nil,2282}}},
        {nil,2282}]}},
     {'case',2283,
      {'catch',2283,
       {block,2284,
        [{match,2285,
          {tuple,2285,
           [{atom,2285,function},
            {var,2285,'L'},
            {atom,2285,foo},
            {integer,2285,0},
            {cons,2285,
             {tuple,2285,
              [{atom,2285,clause},
               {var,2285,'L'},
               {nil,2285},
               {nil,2285},
               {cons,2285,{var,2285,'MS0'},{nil,2285}}]},
             {nil,2285}}]},
          {call,2285,
           {remote,2285,{atom,2285,lists},{atom,2285,last}},
           [{var,2285,'X'}]}},
         {match,2286,
          {var,2286,'MS'},
          {call,2286,
           {remote,2286,{atom,2286,erl_parse},{atom,2286,normalise}},
           [{call,2286,{atom,2286,var2const},[{var,2286,'MS0'}]}]}},
         {match,2287,
          {var,2287,'XMS'},
          {call,2287,
           {remote,2287,{atom,2287,ets},{atom,2287,match_spec_compile}},
           [{var,2287,'MS'}]}},
         {match,2288,
          {atom,2288,true},
          {call,2288,
           {remote,2288,{atom,2288,ets},{atom,2288,is_compiled_ms}},
           [{var,2288,'XMS'}]}},
         {tuple,2289,[{atom,2289,ok},{var,2289,'MS'},{var,2289,'MS0'}]}]}},
      [{clause,2291,
        [{tuple,2291,[{atom,2291,'EXIT'},{var,2291,'_Reason'}]}],
        [],
        [{atom,2292,no}]},
       {clause,2293,[{var,2293,'Reply'}],[],[{var,2294,'Reply'}]}]}]}]},
 {function,2297,filters_as_one,1,
  [{clause,2297,
    [{nil,2297}],
    [],
    [{tuple,2298,
      [{atom,2298,atom},{call,2298,{atom,2298,anno0},[]},{atom,2298,true}]}]},
   {clause,2299,
    [{var,2299,'FilterData'}],
    [],
    [{match,2300,
      {cons,2300,
       {tuple,2300,
        [{var,2300,'_'},{tuple,2300,[{atom,2300,fil},{var,2300,'Filter1'}]}]},
       {var,2300,'Filters'}},
      {call,2300,
       {remote,2300,{atom,2300,lists},{atom,2300,reverse}},
       [{var,2300,'FilterData'}]}},
     {call,2301,
      {remote,2301,{atom,2301,lists},{atom,2301,foldr}},
      [{'fun',2301,
        {clauses,
         [{clause,2301,
           [{tuple,2301,
             [{var,2301,'_QId'},
              {tuple,2301,[{atom,2301,fil},{var,2301,'Filter'}]}]},
            {var,2301,'AbstF'}],
           [],
           [{tuple,2302,
             [{atom,2302,op},
              {call,2302,{atom,2302,anno0},[]},
              {atom,2302,'andalso'},
              {var,2302,'Filter'},
              {var,2302,'AbstF'}]}]}]}},
       {var,2303,'Filter1'},
       {var,2303,'Filters'}]}]}]},
 {function,2305,qual_data,1,
  [{clause,2305,
    [{var,2305,'Qualifiers'}],
    [],
    [{match,2306,
      {var,2306,'F'},
      {'fun',2306,
       {clauses,
        [{clause,2306,
          [{var,2306,'T'}],
          [],
          [{lc,2307,
            {tuple,2307,[{var,2307,'QId'},{var,2307,'Q'}]},
            [{generate,2307,
              {tuple,2307,
               [{var,2307,'QId'},
                {var,2307,'_'},
                {var,2307,'_'},
                {var,2307,'Q'}]},
              {var,2307,'Qualifiers'}},
             {op,2307,'=:=',
              {call,2307,
               {atom,2307,element},
               [{integer,2307,1},{var,2307,'Q'}]},
              {var,2307,'T'}}]}]}]}}},
     {tuple,2309,
      [{call,2309,{var,2309,'F'},[{atom,2309,fil}]},
       {call,2309,{var,2309,'F'},[{atom,2309,gen}]}]}]}]},
 {function,2311,set_field,3,
  [{clause,2311,
    [{var,2311,'Pos'},{var,2311,'Fs'},{var,2311,'Data'}],
    [],
    [{op,2312,'++',
      {call,2312,
       {remote,2312,{atom,2312,lists},{atom,2312,sublist}},
       [{var,2312,'Fs'},{op,2312,'-',{var,2312,'Pos'},{integer,2312,1}}]},
      {op,2312,'++',
       {cons,2312,{var,2312,'Data'},{nil,2312}},
       {call,2312,
        {remote,2312,{atom,2312,lists},{atom,2312,nthtail}},
        [{var,2312,'Pos'},{var,2312,'Fs'}]}}}]}]},
 {function,2314,qdata,2,
  [{clause,2314,
    [{cons,2314,
      {tuple,2314,
       [{tuple,2314,[{atom,2314,qid},{var,2314,'_'},{var,2314,'QIdNo'}]},
        {tuple,2314,
         [{var,2314,'_QIVs'},
          {tuple,2314,
           [{tuple,2314,
             [{atom,2314,gen},
              {var,2314,'_P'},
              {var,2314,'LE'},
              {var,2314,'_GV'}]},
            {var,2314,'GoI'},
            {var,2314,'SI'}]}]}]},
      {var,2314,'QCs'}},
     {var,2314,'L'}],
    [],
    [{match,2315,
      {var,2315,'Init'},
      {'case',2315,
       {var,2315,'LE'},
       [{clause,2316,
         [{tuple,2316,
           [{atom,2316,join},
            {var,2316,'Op'},
            {var,2316,'Q1'},
            {var,2316,'Q2'},
            {var,2316,'H1'},
            {var,2316,'H2'},
            {var,2316,'Cs1_0'},
            {var,2316,'Cs2_0'}]}],
         [],
         [{match,2317,
           {var,2317,'Cs1'},
           {call,2317,{atom,2317,qcon},[{var,2317,'Cs1_0'}]}},
          {match,2318,
           {var,2318,'Cs2'},
           {call,2318,{atom,2318,qcon},[{var,2318,'Cs2_0'}]}},
          {match,2321,
           {var,2321,'Compat'},
           {tuple,2321,[{atom,2321,atom},{var,2321,'L'},{atom,2321,v1}]}},
          {match,2322,
           {var,2322,'CF'},
           {call,2322,
            {atom,2322,closure},
            [{tuple,2322,
              [{atom,2322,tuple},
               {var,2322,'L'},
               {cons,2322,
                {var,2322,'Cs1'},
                {cons,2322,
                 {var,2322,'Cs2'},
                 {cons,2322,{var,2322,'Compat'},{nil,2322}}}}]},
             {var,2322,'L'}]}},
          {tuple,2323,
           [{atom,2323,tuple},
            {var,2323,'L'},
            {cons,2323,
             {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,2323,join}]},
             {cons,218,
              {tuple,218,[{atom,218,atom},{var,218,'L'},{var,2323,'Op'}]},
              {cons,217,
               {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2323,'Q1'}]},
               {cons,217,
                {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2323,'Q2'}]},
                {cons,2323,
                 {var,2323,'H1'},
                 {cons,2323,
                  {var,2323,'H2'},
                  {cons,2323,{var,2323,'CF'},{nil,2323}}}}}}}}]}]},
        {clause,2324,
         [{var,2324,'_'}],
         [],
         [{call,2325,
           {atom,2325,closure},
           [{var,2325,'LE'},{var,2325,'L'}]}]}]}},
     {tuple,2328,
      [{atom,2328,cons},
       {var,2328,'L'},
       {tuple,2328,
        [{atom,2328,tuple},
         {var,2328,'L'},
         {cons,2328,
          {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2328,'QIdNo'}]},
          {cons,217,
           {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2328,'GoI'}]},
           {cons,217,
            {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2328,'SI'}]},
            {cons,2328,
             {tuple,2328,
              [{atom,2328,tuple},
               {var,2328,'L'},
               {cons,2328,
                {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,2328,gen}]},
                {cons,2328,{var,2328,'Init'},{nil,2328}}}]},
             {nil,2328}}}}}]},
       {call,2329,{atom,2329,qdata},[{var,2329,'QCs'},{var,2329,'L'}]}]}]},
   {clause,2330,
    [{cons,2330,
      {tuple,2330,
       [{tuple,2330,
         [{atom,2330,qid},{atom,2330,undefined},{var,2330,'QIdNo'}]},
        {tuple,2330,
         [{var,2330,'_QIVs'},
          {tuple,2330,
           [{tuple,2330,[{atom,2330,fil},{var,2330,'_F'}]},
            {var,2330,'GoI'},
            {var,2330,'SI'}]}]}]},
      {var,2330,'QCs'}},
     {var,2330,'L'}],
    [],
    [{tuple,2332,
      [{atom,2332,cons},
       {var,2332,'L'},
       {tuple,2332,
        [{atom,2332,tuple},
         {var,2332,'L'},
         {cons,2332,
          {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2332,'QIdNo'}]},
          {cons,217,
           {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2332,'GoI'}]},
           {cons,217,
            {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2332,'SI'}]},
            {cons,218,
             {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,2332,fil}]},
             {nil,2332}}}}}]},
       {call,2332,{atom,2332,qdata},[{var,2332,'QCs'},{var,2332,'L'}]}]}]},
   {clause,2333,
    [{nil,2333},{var,2333,'L'}],
    [],
    [{tuple,2334,[{atom,2334,nil},{var,2334,'L'}]}]}]},
 {function,2336,qcon,1,
  [{clause,2336,
    [{var,2336,'Cs'}],
    [],
    [{match,2337,{var,2337,'A'},{call,2337,{atom,2337,anno0},[]}},
     {call,2338,
      {atom,2338,list2cons},
      [{lc,2338,
        {tuple,2338,
         [{atom,2338,tuple},
          {var,2338,'A'},
          {cons,2338,
           {tuple,2338,[{atom,2338,integer},{var,2338,'A'},{var,2338,'Col'}]},
           {cons,2338,
            {call,2338,
             {atom,2338,list2cons},
             [{call,2338,{atom,2338,qcon1},[{var,2338,'ConstOps'}]}]},
            {nil,2338}}}]},
        [{generate,2339,
          {tuple,2339,[{var,2339,'Col'},{var,2339,'ConstOps'}]},
          {var,2339,'Cs'}}]}]}]}]},
 {function,2341,qcon1,1,
  [{clause,2341,
    [{var,2341,'ConstOps'}],
    [],
    [{match,2342,{var,2342,'A'},{call,2342,{atom,2342,anno0},[]}},
     {lc,2343,
      {tuple,2343,
       [{atom,2343,tuple},
        {var,2343,'A'},
        {cons,2343,
         {var,2343,'Const'},
         {cons,2343,
          {call,2343,{atom,2343,abstr},[{var,2343,'Op'},{var,2343,'A'}]},
          {nil,2343}}}]},
      [{generate,2343,
        {tuple,2343,[{var,2343,'Const'},{var,2343,'Op'}]},
        {var,2343,'ConstOps'}}]}]}]},
 {function,2348,qcode,5,
  [{clause,2348,
    [{var,2348,'E'},
     {var,2348,'QCs'},
     {var,2348,'Source'},
     {var,2348,'L'},
     {var,2348,'State'}],
    [],
    [{match,2349,
      {var,2349,'CL'},
      {lc,2349,
       {block,2349,
        [{match,2350,
          {var,2350,'Bin'},
          {call,2350,
           {atom,2350,term_to_binary},
           [{var,2350,'C'},{cons,2350,{atom,2350,compressed},{nil,2350}}]}},
         {tuple,2351,
          [{atom,2351,bin},
           {var,2351,'L'},
           {cons,2351,
            {tuple,2351,
             [{atom,2351,bin_element},
              {var,2351,'L'},
              {tuple,2352,
               [{atom,2352,string},
                {var,2352,'L'},
                {call,2352,{atom,2352,binary_to_list},[{var,2352,'Bin'}]}]},
              {atom,2353,default},
              {atom,2353,default}]},
            {nil,2353}}]}]},
       [{generate,2354,
         {tuple,2354,[{var,2354,'_'},{var,2354,'C'}]},
         {call,2354,
          {remote,2354,{atom,2354,lists},{atom,2354,keysort}},
          [{integer,2354,1},
           {cons,2354,
            {tuple,2354,
             [{call,2354,
               {remote,2354,{atom,2354,qlc},{atom,2354,template_state}},
               []},
              {var,2354,'E'}]},
            {call,2355,
             {atom,2355,qcode},
             [{var,2355,'QCs'},{var,2355,'Source'},{var,2355,'State'}]}}]}}]}},
     {tuple,2356,
      [{atom,2356,'fun'},
       {var,2356,'L'},
       {tuple,2356,
        [{atom,2356,clauses},
         {cons,2356,
          {tuple,2356,
           [{atom,2356,clause},
            {var,2356,'L'},
            {nil,2356},
            {nil,2356},
            {cons,2356,
             {tuple,2356,[{atom,2356,tuple},{var,2356,'L'},{var,2356,'CL'}]},
             {nil,2356}}]},
          {nil,2356}}]}]}]}]},
 {function,2358,qcode,3,
  [{clause,2358,
    [{cons,2358,
      {tuple,2358,
       [{var,2358,'_QId'},
        {tuple,2358,
         [{var,2358,'_QIvs'},
          {tuple,2358,
           [{tuple,2358,
             [{atom,2358,gen},
              {var,2358,'P'},
              {var,2358,'_LE'},
              {var,2358,'_GV'}]},
            {var,2358,'GoI'},
            {var,2358,'_SI'}]}]}]},
      {var,2358,'QCs'}},
     {var,2358,'Source'},
     {var,2358,'State'}],
    [],
    [{cons,2359,
      {tuple,2359,
       [{var,2359,'GoI'},
        {call,2359,
         {atom,2359,undo_no_shadows},
         [{var,2359,'P'},{var,2359,'State'}]}]},
      {call,2359,
       {atom,2359,qcode},
       [{var,2359,'QCs'},{var,2359,'Source'},{var,2359,'State'}]}}]},
   {clause,2360,
    [{cons,2360,
      {tuple,2360,
       [{var,2360,'QId'},
        {tuple,2360,
         [{var,2360,'_QIVs'},
          {tuple,2360,
           [{tuple,2360,[{atom,2360,fil},{var,2360,'_F'}]},
            {var,2360,'GoI'},
            {var,2360,'_SI'}]}]}]},
      {var,2360,'QCs'}},
     {var,2360,'Source'},
     {var,2360,'State'}],
    [],
    [{match,2361,
      {tuple,2361,[{atom,2361,ok},{var,2361,'OrigF'}]},
      {call,2361,
       {remote,2361,{atom,2361,dict},{atom,2361,find}},
       [{var,2361,'QId'},{var,2361,'Source'}]}},
     {cons,2362,
      {tuple,2362,
       [{var,2362,'GoI'},
        {call,2362,
         {atom,2362,undo_no_shadows},
         [{var,2362,'OrigF'},{var,2362,'State'}]}]},
      {call,2362,
       {atom,2362,qcode},
       [{var,2362,'QCs'},{var,2362,'Source'},{var,2362,'State'}]}}]},
   {clause,2363,
    [{nil,2363},{var,2363,'_Source'},{var,2363,'_State'}],
    [],
    [{nil,2364}]}]},
 {function,2366,closure,2,
  [{clause,2366,
    [{var,2366,'Code'},{var,2366,'L'}],
    [],
    [{tuple,2367,
      [{atom,2367,'fun'},
       {var,2367,'L'},
       {tuple,2367,
        [{atom,2367,clauses},
         {cons,2367,
          {tuple,2367,
           [{atom,2367,clause},
            {var,2367,'L'},
            {nil,2367},
            {nil,2367},
            {cons,2367,{var,2367,'Code'},{nil,2367}}]},
          {nil,2367}}]}]}]}]},
 {function,2369,simple,4,
  [{clause,2369,
    [{var,2369,'L'},{var,2369,'Var'},{var,2369,'Init'},{var,2369,'Anno'}],
    [],
    [{tuple,2370,
      [{atom,2370,tuple},
       {var,2370,'L'},
       {cons,2370,
        {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,2370,simple_v1}]},
        {cons,218,
         {tuple,218,[{atom,218,atom},{var,218,'L'},{var,2370,'Var'}]},
         {cons,2370,
          {var,2370,'Init'},
          {cons,2370,
           {call,2370,
            {atom,2370,abstr},
            [{call,2370,{atom,2370,loc},[{var,2370,'Anno'}]},
             {var,2370,'Anno'}]},
           {nil,2370}}}}}]}]}]},
 {function,2372,clauses,8,
  [{clause,2372,
    [{cons,2372,
      {tuple,2372,
       [{var,2372,'QId'},
        {tuple,2372,
         [{var,2372,'QIVs'},
          {tuple,2372,
           [{var,2372,'QualData'},{var,2372,'GoI'},{var,2372,'S'}]}]}]},
      {var,2372,'QCs'}},
     {var,2372,'RL'},
     {var,2372,'Fun'},
     {var,2372,'Go'},
     {var,2372,'NGV'},
     {var,2372,'E'},
     {var,2372,'IVs'},
     {var,2372,'St'}],
    [],
    [{atom,55,ok},
     {atom,55,ok},
     {atom,55,ok},
     {match,2376,
      {var,2376,'L'},
      {call,2376,
       {atom,2376,no_compiler_warning},
       [{call,2376,
         {atom,2376,get_lcid_line},
         [{call,2376,
           {remote,2376,{atom,2376,erlang},{atom,2376,element}},
           [{integer,2376,2},{var,2376,'QId'}]}]}]}},
     {match,2377,
      {var,2377,'Cs'},
      {'case',2377,
       {var,2377,'QualData'},
       [{clause,2378,
         [{tuple,2378,
           [{atom,2378,gen},{var,2378,'P'},{var,2378,'_LE'},{var,2378,'GV'}]}],
         [],
         [{call,2379,
           {atom,2379,generator},
           [{var,2379,'S'},
            {var,2379,'QIVs'},
            {var,2379,'P'},
            {var,2379,'GV'},
            {var,2379,'NGV'},
            {var,2379,'E'},
            {var,2379,'IVs'},
            {var,2379,'RL'},
            {var,2379,'Fun'},
            {var,2379,'Go'},
            {var,2379,'GoI'},
            {var,2379,'L'},
            {var,2379,'St'}]}]},
        {clause,2380,
         [{tuple,2380,[{atom,2380,fil},{var,2380,'F'}]}],
         [],
         [{call,2381,
           {atom,2381,filter},
           [{var,2381,'F'},
            {var,2381,'L'},
            {var,2381,'QIVs'},
            {var,2381,'S'},
            {var,2381,'RL'},
            {var,2381,'Fun'},
            {var,2381,'Go'},
            {var,2381,'GoI'},
            {var,2381,'IVs'},
            {var,2381,'St'}]}]}]}},
     {op,2383,'++',
      {var,2383,'Cs'},
      {call,2383,
       {atom,2383,clauses},
       [{var,2383,'QCs'},
        {var,2383,'RL'},
        {var,2383,'Fun'},
        {var,2383,'Go'},
        {var,2383,'NGV'},
        {var,2383,'E'},
        {var,2383,'IVs'},
        {var,2383,'St'}]}}]},
   {clause,2384,
    [{nil,2384},
     {var,2384,'_RL'},
     {var,2384,'_Fun'},
     {var,2384,'_Go'},
     {var,2384,'_NGV'},
     {var,2384,'_IVs'},
     {var,2384,'_E'},
     {var,2384,'_St'}],
    [],
    [{nil,2385}]}]},
 {function,2387,final,4,
  [{clause,2387,
    [{var,2387,'RL'},{var,2387,'IVs'},{var,2387,'L'},{var,2387,'State'}],
    [],
    [{match,2388,
      {var,2388,'IAs'},
      {call,2388,
       {atom,2388,replace},
       [{var,2388,'IVs'},{var,2388,'IVs'},{atom,2388,'_'}]}},
     {match,2389,
      {var,2389,'AsL'},
      {call,2389,
       {atom,2389,pack_args},
       [{cons,2389,
         {tuple,217,[{atom,217,integer},{var,217,'L'},{integer,2389,0}]},
         {call,2389,
          {atom,2389,abst_vars},
          [{op,2389,'++',
            {cons,2389,
             {var,2389,'RL'},
             {cons,2389,
              {atom,2389,'_'},
              {cons,2389,{atom,2389,'_'},{nil,2389}}}},
            {var,2389,'IAs'}},
           {var,2389,'L'}]}},
        {var,2389,'L'},
        {var,2389,'State'}]}},
     {match,2390,
      {var,2390,'Grd'},
      {cons,2390,
       {call,2390,{atom,2390,is_list_c},[{var,2390,'RL'},{var,2390,'L'}]},
       {nil,2390}}},
     {match,2391,
      {var,2391,'Rev'},
      {tuple,2391,
       [{atom,2391,call},
        {var,2391,'L'},
        {tuple,2391,
         [{atom,2391,remote},
          {var,2391,'L'},
          {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,2391,lists}]},
          {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,2391,reverse}]}]},
        {cons,2391,
         {tuple,219,[{atom,219,var},{var,219,'L'},{var,2391,'RL'}]},
         {nil,2391}}]}},
     {match,2392,
      {var,2392,'CL'},
      {tuple,2392,
       [{atom,2392,clause},
        {var,2392,'L'},
        {var,2392,'AsL'},
        {cons,2392,{var,2392,'Grd'},{nil,2392}},
        {cons,2392,{var,2392,'Rev'},{nil,2392}}]}},
     {match,2393,
      {var,2393,'AsF'},
      {call,2393,
       {atom,2393,pack_args},
       [{cons,2393,
         {tuple,217,[{atom,217,integer},{var,217,'L'},{integer,2393,0}]},
         {call,2393,
          {atom,2393,abst_vars},
          [{op,2393,'++',
            {cons,2393,
             {atom,2393,'_'},
             {cons,2393,
              {atom,2393,'_'},
              {cons,2393,{atom,2393,'_'},{nil,2393}}}},
            {var,2393,'IAs'}},
           {var,2393,'L'}]}},
        {var,2393,'L'},
        {var,2393,'State'}]}},
     {match,2394,
      {var,2394,'CF'},
      {tuple,2394,
       [{atom,2394,clause},
        {var,2394,'L'},
        {var,2394,'AsF'},
        {nil,2394},
        {cons,2394,{tuple,220,[{atom,220,nil},{var,220,'L'}]},{nil,2394}}]}},
     {cons,2395,{var,2395,'CL'},{cons,2395,{var,2395,'CF'},{nil,2395}}}]}]},
 {function,2397,template,8,
  [{clause,2397,
    [{var,2397,'E'},
     {var,2397,'RL'},
     {var,2397,'Fun'},
     {var,2397,'Go'},
     {var,2397,'AT'},
     {var,2397,'L'},
     {var,2397,'IVs'},
     {var,2397,'State'}],
    [],
    [{match,2398,
      {var,2398,'I'},
      {call,2398,{remote,2398,{atom,2398,qlc},{atom,2398,template_state}},[]}},
     {match,2398,
      {var,2398,'GoI'},
      {call,2398,{remote,2398,{atom,2398,qlc},{atom,2398,template_state}},[]}},
     {match,2399,
      {var,2399,'ARL'},
      {tuple,2399,
       [{atom,2399,cons},
        {var,2399,'L'},
        {var,2399,'E'},
        {call,2399,{atom,2399,abst_vars},[{var,2399,'RL'},{var,2399,'L'}]}]}},
     {match,2400,
      {var,2400,'Next'},
      {call,2400,
       {atom,2400,next},
       [{var,2400,'Go'},{var,2400,'GoI'},{var,2400,'L'}]}},
     {match,2401,
      {var,2401,'As0'},
      {call,2401,
       {atom,2401,abst_vars},
       [{op,2401,'++',
         {cons,2401,
          {var,2401,'RL'},
          {cons,2401,{var,2401,'Fun'},{cons,2401,{var,2401,'Go'},{nil,2401}}}},
         {var,2401,'IVs'}},
        {var,2401,'L'}]}},
     {match,2402,
      {var,2402,'As'},
      {call,2402,
       {atom,2402,pack_args},
       [{cons,2402,
         {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2402,'I'}]},
         {var,2402,'As0'}},
        {var,2402,'L'},
        {var,2402,'State'}]}},
     {match,2403,
      {var,2403,'NAs'},
      {call,2403,
       {atom,2403,pack_args},
       [{op,2403,'++',
         {cons,2403,{var,2403,'Next'},{cons,2403,{var,2403,'ARL'},{nil,2403}}},
         {call,2403,
          {atom,2403,abst_vars},
          [{op,2403,'++',
            {cons,2403,
             {var,2403,'Fun'},
             {cons,2403,{var,2403,'Go'},{nil,2403}}},
            {var,2403,'IVs'}},
           {var,2403,'L'}]}},
        {var,2403,'L'},
        {var,2403,'State'}]}},
     {match,2404,
      {var,2404,'Grd'},
      {cons,2404,
       {call,2404,{atom,2404,is_list_c},[{var,2404,'RL'},{var,2404,'L'}]},
       {nil,2404}}},
     {match,2405,
      {var,2405,'CL'},
      {tuple,2405,
       [{atom,2405,clause},
        {var,2405,'L'},
        {var,2405,'As'},
        {cons,2405,{var,2405,'Grd'},{nil,2405}},
        {cons,2405,
         {tuple,2405,
          [{atom,2405,call},
           {var,2405,'L'},
           {tuple,219,[{atom,219,var},{var,219,'L'},{var,2405,'Fun'}]},
           {var,2405,'NAs'}]},
         {nil,2405}}]}},
     {match,2408,
      {var,2408,'F'},
      {'case',2408,
       {call,2408,
        {atom,2408,split_args},
        [{cons,2408,{var,2408,'Next'},{var,2408,'As0'}},
         {var,2408,'L'},
         {var,2408,'State'}]},
       [{clause,2409,
         [{tuple,2409,[{var,2409,'ArgsL'},{var,2409,'ArgsT'}]}],
         [],
         [{match,2410,
           {var,2410,'Call'},
           {tuple,2410,
            [{atom,2410,call},
             {var,2410,'L'},
             {tuple,219,[{atom,219,var},{var,219,'L'},{var,2410,'Fun'}]},
             {op,2410,'++',
              {var,2410,'ArgsL'},
              {cons,2410,
               {tuple,2410,[{atom,2410,var},{var,2410,'L'},{var,2410,'AT'}]},
               {nil,2410}}}]}},
          {tuple,2411,
           [{atom,2411,block},
            {var,2411,'L'},
            {cons,2412,
             {tuple,2412,
              [{atom,2412,match},
               {var,2412,'L'},
               {tuple,2412,[{atom,2412,var},{var,2412,'L'},{var,2412,'AT'}]},
               {var,2412,'ArgsT'}]},
             {cons,2413,
              {tuple,2413,
               [{atom,2413,'fun'},
                {var,2413,'L'},
                {tuple,2413,
                 [{atom,2413,clauses},
                  {cons,2413,
                   {tuple,2413,
                    [{atom,2413,clause},
                     {var,2413,'L'},
                     {nil,2413},
                     {nil,2413},
                     {cons,2413,{var,2413,'Call'},{nil,2413}}]},
                   {nil,2413}}]}]},
              {nil,2413}}}]}]},
        {clause,2414,
         [{var,2414,'FNAs'}],
         [],
         [{tuple,2415,
           [{atom,2415,'fun'},
            {var,2415,'L'},
            {tuple,2415,
             [{atom,2415,clauses},
              {cons,2415,
               {tuple,2415,
                [{atom,2415,clause},
                 {var,2415,'L'},
                 {nil,2415},
                 {nil,2415},
                 {cons,2415,
                  {tuple,2415,
                   [{atom,2415,call},
                    {var,2415,'L'},
                    {tuple,219,
                     [{atom,219,var},{var,219,'L'},{var,2415,'Fun'}]},
                    {var,2415,'FNAs'}]},
                  {nil,2415}}]},
               {nil,2415}}]}]}]}]}},
     {match,2417,
      {var,2417,'CF'},
      {tuple,2417,
       [{atom,2417,clause},
        {var,2417,'L'},
        {var,2417,'As'},
        {nil,2417},
        {cons,2417,
         {tuple,221,
          [{atom,221,cons},{var,221,'L'},{var,2417,'E'},{var,2417,'F'}]},
         {nil,2417}}]}},
     {cons,2418,{var,2418,'CL'},{cons,2418,{var,2418,'CF'},{nil,2418}}}]}]},
 {function,2420,generator,13,
  [{clause,2420,
    [{var,2420,'S'},
     {var,2420,'QIVs'},
     {var,2420,'P'},
     {var,2420,'GV'},
     {var,2420,'NGV'},
     {var,2420,'E'},
     {var,2420,'IVs'},
     {var,2420,'RL'},
     {var,2420,'Fun'},
     {var,2420,'Go'},
     {var,2420,'GoI'},
     {var,2420,'L'},
     {var,2420,'State'}],
    [],
    [{match,2421,
      {var,2421,'ComAs'},
      {call,2421,
       {atom,2421,abst_vars},
       [{cons,2421,
         {var,2421,'RL'},
         {cons,2421,{var,2421,'Fun'},{cons,2421,{var,2421,'Go'},{nil,2421}}}},
        {var,2421,'L'}]}},
     {match,2422,
      {var,2422,'InitC'},
      {call,2422,
       {atom,2422,generator_init},
       [{var,2422,'S'},
        {var,2422,'L'},
        {var,2422,'GV'},
        {var,2422,'RL'},
        {var,2422,'Fun'},
        {var,2422,'Go'},
        {var,2422,'GoI'},
        {var,2422,'IVs'},
        {var,2422,'State'}]}},
     {match,2423,
      {var,2423,'As'},
      {cons,2423,
       {tuple,217,
        [{atom,217,integer},
         {var,217,'L'},
         {op,2423,'+',{var,2423,'S'},{integer,2423,1}}]},
       {op,2423,'++',
        {var,2423,'ComAs'},
        {call,2423,
         {atom,2423,abst_vars},
         [{call,2423,
           {atom,2423,replace},
           [{op,2423,'--',
             {var,2423,'QIVs'},
             {cons,2423,{var,2423,'GV'},{nil,2423}}},
            {var,2423,'IVs'},
            {atom,2423,'_'}]},
          {var,2423,'L'}]}}}},
     {match,2425,
      {var,2425,'MatchS'},
      {call,2425,
       {atom,2425,next},
       [{var,2425,'Go'},
        {op,2425,'+',{var,2425,'GoI'},{integer,2425,1}},
        {var,2425,'L'}]}},
     {match,2426,
      {var,2426,'AsM0'},
      {cons,2426,
       {var,2426,'MatchS'},
       {op,2426,'++',
        {var,2426,'ComAs'},
        {call,2426,
         {atom,2426,abst_vars},
         [{call,2426,
           {atom,2426,replace},
           [{cons,2426,{var,2426,'GV'},{nil,2426}},
            {var,2426,'IVs'},
            {var,2426,'NGV'}]},
          {var,2426,'L'}]}}}},
     {match,2427,
      {var,2427,'AsM'},
      {call,2427,
       {atom,2427,pack_args},
       [{var,2427,'AsM0'},{var,2427,'L'},{var,2427,'State'}]}},
     {match,2429,
      {var,2429,'ContS'},
      {tuple,217,
       [{atom,217,integer},
        {var,217,'L'},
        {op,2429,'+',{var,2429,'S'},{integer,2429,1}}]}},
     {match,2430,
      {var,2430,'QIVs__GV'},
      {op,2430,'--',{var,2430,'QIVs'},{cons,2430,{var,2430,'GV'},{nil,2430}}}},
     {match,2431,
      {var,2431,'Tmp'},
      {call,2431,
       {atom,2431,replace},
       [{cons,2431,{var,2431,'GV'},{nil,2431}},
        {call,2431,
         {atom,2431,replace},
         [{var,2431,'QIVs__GV'},{var,2431,'IVs'},{atom,2431,nil}]},
        {var,2431,'NGV'}]}},
     {match,2432,
      {var,2432,'AsC'},
      {call,2432,
       {atom,2432,pack_args},
       [{cons,2432,
         {var,2432,'ContS'},
         {op,2432,'++',
          {var,2432,'ComAs'},
          {call,2432,
           {atom,2432,abst_vars},
           [{var,2432,'Tmp'},{var,2432,'L'}]}}},
        {var,2432,'L'},
        {var,2432,'State'}]}},
     {match,2434,
      {var,2434,'DoneS'},
      {call,2434,
       {atom,2434,next},
       [{var,2434,'Go'},{var,2434,'GoI'},{var,2434,'L'}]}},
     {match,2435,
      {var,2435,'AsD0'},
      {cons,2435,
       {var,2435,'DoneS'},
       {op,2435,'++',
        {var,2435,'ComAs'},
        {call,2435,
         {atom,2435,abst_vars},
         [{call,2435,
           {atom,2435,replace},
           [{var,2435,'QIVs'},{var,2435,'IVs'},{atom,2435,nil}]},
          {var,2435,'L'}]}}}},
     {match,2436,
      {var,2436,'AsD'},
      {call,2436,
       {atom,2436,pack_args},
       [{var,2436,'AsD0'},{var,2436,'L'},{var,2436,'State'}]}},
     {match,2438,
      {var,2438,'CsL'},
      {call,2438,
       {atom,2438,generator_list},
       [{var,2438,'P'},
        {var,2438,'GV'},
        {var,2438,'NGV'},
        {var,2438,'As'},
        {var,2438,'AsM'},
        {var,2438,'AsC'},
        {var,2438,'AsD'},
        {var,2438,'Fun'},
        {var,2438,'L'},
        {var,2438,'State'}]}},
     {match,2439,
      {var,2439,'CsF'},
      {call,2439,
       {atom,2439,generator_cont},
       [{var,2439,'P'},
        {var,2439,'GV'},
        {var,2439,'NGV'},
        {var,2439,'E'},
        {var,2439,'As'},
        {var,2439,'AsM'},
        {var,2439,'AsC'},
        {var,2439,'AsD'},
        {var,2439,'Fun'},
        {var,2439,'L'},
        {var,2439,'State'}]}},
     {cons,2440,
      {var,2440,'InitC'},
      {op,2440,'++',{var,2440,'CsL'},{var,2440,'CsF'}}}]}]},
 {function,2442,generator_init,9,
  [{clause,2442,
    [{var,2442,'S'},
     {var,2442,'L'},
     {var,2442,'GV'},
     {var,2442,'RL'},
     {var,2442,'Fun'},
     {var,2442,'Go'},
     {var,2442,'GoI'},
     {var,2442,'IVs'},
     {var,2442,'State'}],
    [],
    [{match,2443,
      {var,2443,'As0'},
      {call,2443,
       {atom,2443,abst_vars},
       [{op,2443,'++',
         {cons,2443,
          {var,2443,'RL'},
          {cons,2443,{var,2443,'Fun'},{cons,2443,{var,2443,'Go'},{nil,2443}}}},
         {call,2443,
          {atom,2443,replace},
          [{cons,2443,{var,2443,'GV'},{nil,2443}},
           {var,2443,'IVs'},
           {atom,2443,'_'}]}},
        {var,2443,'L'}]}},
     {match,2444,
      {var,2444,'As'},
      {call,2444,
       {atom,2444,pack_args},
       [{cons,2444,
         {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2444,'S'}]},
         {var,2444,'As0'}},
        {var,2444,'L'},
        {var,2444,'State'}]}},
     {match,2445,
      {var,2445,'Next'},
      {call,2445,
       {atom,2445,next},
       [{var,2445,'Go'},
        {op,2445,'+',{var,2445,'GoI'},{integer,2445,2}},
        {var,2445,'L'}]}},
     {match,2446,
      {var,2446,'NAs'},
      {call,2446,
       {atom,2446,pack_args},
       [{cons,2446,
         {tuple,217,
          [{atom,217,integer},
           {var,217,'L'},
           {op,2446,'+',{var,2446,'S'},{integer,2446,1}}]},
         {call,2446,
          {atom,2446,replace},
          [{cons,2446,
            {tuple,219,[{atom,219,var},{var,219,'L'},{atom,2446,'_'}]},
            {nil,2446}},
           {var,2446,'As0'},
           {var,2446,'Next'}]}},
        {var,2446,'L'},
        {var,2446,'State'}]}},
     {tuple,2447,
      [{atom,2447,clause},
       {var,2447,'L'},
       {var,2447,'As'},
       {nil,2447},
       {cons,2447,
        {tuple,2447,
         [{atom,2447,call},
          {var,2447,'L'},
          {tuple,219,[{atom,219,var},{var,219,'L'},{var,2447,'Fun'}]},
          {var,2447,'NAs'}]},
        {nil,2447}}]}]}]},
 {function,2449,generator_list,10,
  [{clause,2449,
    [{var,2449,'P'},
     {var,2449,'GV'},
     {var,2449,'NGV'},
     {var,2449,'As'},
     {var,2449,'AsM'},
     {var,2449,'AsC'},
     {var,2449,'AsD'},
     {var,2449,'Fun'},
     {var,2449,'L'},
     {var,2449,'State'}],
    [],
    [{match,2450,
      {var,2450,'As1'},
      {call,2450,
       {atom,2450,pack_args},
       [{call,2450,
         {atom,2450,replace},
         [{cons,2450,
           {tuple,219,[{atom,219,var},{var,219,'L'},{var,2450,'GV'}]},
           {nil,2450}},
          {var,2450,'As'},
          {tuple,2450,
           [{atom,2450,cons},
            {var,2450,'L'},
            {var,2450,'P'},
            {tuple,219,[{atom,219,var},{var,219,'L'},{var,2450,'NGV'}]}]}]},
        {var,2450,'L'},
        {var,2450,'State'}]}},
     {match,2451,
      {var,2451,'As2'},
      {call,2451,
       {atom,2451,pack_args},
       [{call,2451,
         {atom,2451,replace},
         [{cons,2451,
           {tuple,219,[{atom,219,var},{var,219,'L'},{var,2451,'GV'}]},
           {nil,2451}},
          {var,2451,'As'},
          {tuple,2451,
           [{atom,2451,cons},
            {var,2451,'L'},
            {tuple,219,[{atom,219,var},{var,219,'L'},{atom,2451,'_'}]},
            {tuple,219,[{atom,219,var},{var,219,'L'},{var,2451,'NGV'}]}]}]},
        {var,2451,'L'},
        {var,2451,'State'}]}},
     {match,2452,
      {var,2452,'As3'},
      {call,2452,
       {atom,2452,pack_args},
       [{call,2452,
         {atom,2452,replace},
         [{cons,2452,
           {tuple,219,[{atom,219,var},{var,219,'L'},{var,2452,'GV'}]},
           {nil,2452}},
          {var,2452,'As'},
          {tuple,2452,[{atom,2452,nil},{var,2452,'L'}]}]},
        {var,2452,'L'},
        {var,2452,'State'}]}},
     {match,2453,
      {var,2453,'CM'},
      {tuple,2453,
       [{atom,2453,clause},
        {var,2453,'L'},
        {var,2453,'As1'},
        {nil,2453},
        {cons,2453,
         {tuple,2453,
          [{atom,2453,call},
           {var,2453,'L'},
           {tuple,219,[{atom,219,var},{var,219,'L'},{var,2453,'Fun'}]},
           {var,2453,'AsM'}]},
         {nil,2453}}]}},
     {match,2454,
      {var,2454,'CC'},
      {tuple,2454,
       [{atom,2454,clause},
        {var,2454,'L'},
        {var,2454,'As2'},
        {nil,2454},
        {cons,2454,
         {tuple,2454,
          [{atom,2454,call},
           {var,2454,'L'},
           {tuple,219,[{atom,219,var},{var,219,'L'},{var,2454,'Fun'}]},
           {var,2454,'AsC'}]},
         {nil,2454}}]}},
     {match,2455,
      {var,2455,'CD'},
      {tuple,2455,
       [{atom,2455,clause},
        {var,2455,'L'},
        {var,2455,'As3'},
        {nil,2455},
        {cons,2455,
         {tuple,2455,
          [{atom,2455,call},
           {var,2455,'L'},
           {tuple,219,[{atom,219,var},{var,219,'L'},{var,2455,'Fun'}]},
           {var,2455,'AsD'}]},
         {nil,2455}}]}},
     {cons,2456,
      {var,2456,'CM'},
      {cons,2456,{var,2456,'CC'},{cons,2456,{var,2456,'CD'},{nil,2456}}}}]}]},
 {function,2460,generator_cont,11,
  [{clause,2460,
    [{var,2460,'P'},
     {var,2460,'GV'},
     {var,2460,'NGV'},
     {var,2460,'E'},
     {var,2460,'As0'},
     {var,2460,'AsM'},
     {var,2460,'AsC'},
     {var,2460,'AsD'},
     {var,2460,'Fun'},
     {var,2460,'L'},
     {var,2460,'State'}],
    [],
    [{match,2461,
      {var,2461,'As'},
      {call,2461,
       {atom,2461,pack_args},
       [{var,2461,'As0'},{var,2461,'L'},{var,2461,'State'}]}},
     {match,2462,
      {var,2462,'CF1'},
      {tuple,221,
       [{atom,221,cons},
        {var,221,'L'},
        {var,2462,'P'},
        {tuple,219,[{atom,219,var},{var,219,'L'},{var,2462,'NGV'}]}]}},
     {match,2463,
      {var,2463,'CF2'},
      {tuple,221,
       [{atom,221,cons},
        {var,221,'L'},
        {tuple,219,[{atom,219,var},{var,219,'L'},{atom,2463,'_'}]},
        {tuple,219,[{atom,219,var},{var,219,'L'},{var,2463,'NGV'}]}]}},
     {match,2464,{var,2464,'CF3'},{tuple,220,[{atom,220,nil},{var,220,'L'}]}},
     {match,2465,
      {var,2465,'CF4'},
      {tuple,219,[{atom,219,var},{var,219,'L'},{var,2465,'E'}]}},
     {match,2466,
      {var,2466,'CM'},
      {tuple,2466,
       [{atom,2466,clause},
        {var,2466,'L'},
        {cons,2466,{var,2466,'CF1'},{nil,2466}},
        {nil,2466},
        {cons,2466,
         {tuple,2466,
          [{atom,2466,call},
           {var,2466,'L'},
           {tuple,219,[{atom,219,var},{var,219,'L'},{var,2466,'Fun'}]},
           {var,2466,'AsM'}]},
         {nil,2466}}]}},
     {match,2467,
      {var,2467,'CC'},
      {tuple,2467,
       [{atom,2467,clause},
        {var,2467,'L'},
        {cons,2467,{var,2467,'CF2'},{nil,2467}},
        {nil,2467},
        {cons,2467,
         {tuple,2467,
          [{atom,2467,call},
           {var,2467,'L'},
           {tuple,219,[{atom,219,var},{var,219,'L'},{var,2467,'Fun'}]},
           {var,2467,'AsC'}]},
         {nil,2467}}]}},
     {match,2468,
      {var,2468,'CD'},
      {tuple,2468,
       [{atom,2468,clause},
        {var,2468,'L'},
        {cons,2468,{var,2468,'CF3'},{nil,2468}},
        {nil,2468},
        {cons,2468,
         {tuple,2468,
          [{atom,2468,call},
           {var,2468,'L'},
           {tuple,219,[{atom,219,var},{var,219,'L'},{var,2468,'Fun'}]},
           {var,2468,'AsD'}]},
         {nil,2468}}]}},
     {match,2469,
      {var,2469,'CE'},
      {tuple,2469,
       [{atom,2469,clause},
        {var,2469,'L'},
        {cons,2469,{var,2469,'CF4'},{nil,2469}},
        {nil,2469},
        {cons,2469,{var,2469,'CF4'},{nil,2469}}]}},
     {match,2470,
      {var,2470,'Cls'},
      {cons,2470,
       {var,2470,'CM'},
       {cons,2470,
        {var,2470,'CC'},
        {cons,2470,{var,2470,'CD'},{cons,2470,{var,2470,'CE'},{nil,2470}}}}}},
     {match,2471,
      {var,2471,'B'},
      {tuple,2471,
       [{atom,2471,'case'},
        {var,2471,'L'},
        {tuple,2471,
         [{atom,2471,call},
          {var,2471,'L'},
          {tuple,219,[{atom,219,var},{var,219,'L'},{var,2471,'GV'}]},
          {nil,2471}]},
        {var,2471,'Cls'}]}},
     {cons,2472,
      {tuple,2472,
       [{atom,2472,clause},
        {var,2472,'L'},
        {var,2472,'As'},
        {nil,2472},
        {cons,2472,{var,2472,'B'},{nil,2472}}]},
      {nil,2472}}]}]},
 {function,2474,filter,10,
  [{clause,2474,
    [{var,2474,'E'},
     {var,2474,'L'},
     {var,2474,'QIVs'},
     {var,2474,'S'},
     {var,2474,'RL'},
     {var,2474,'Fun'},
     {var,2474,'Go'},
     {var,2474,'GoI'},
     {var,2474,'IVs'},
     {var,2474,'State'}],
    [],
    [{match,2475,
      {var,2475,'IAs'},
      {call,2475,
       {atom,2475,replace},
       [{var,2475,'QIVs'},{var,2475,'IVs'},{atom,2475,'_'}]}},
     {match,2476,
      {var,2476,'As'},
      {call,2476,
       {atom,2476,pack_args},
       [{cons,2476,
         {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2476,'S'}]},
         {call,2476,
          {atom,2476,abst_vars},
          [{op,2476,'++',
            {cons,2476,
             {var,2476,'RL'},
             {cons,2476,
              {var,2476,'Fun'},
              {cons,2476,{var,2476,'Go'},{nil,2476}}}},
            {var,2476,'IAs'}},
           {var,2476,'L'}]}},
        {var,2476,'L'},
        {var,2476,'State'}]}},
     {match,2477,
      {var,2477,'NAs'},
      {call,2477,
       {atom,2477,abst_vars},
       [{op,2477,'++',
         {cons,2477,
          {var,2477,'RL'},
          {cons,2477,{var,2477,'Fun'},{cons,2477,{var,2477,'Go'},{nil,2477}}}},
         {var,2477,'IVs'}},
        {var,2477,'L'}]}},
     {match,2478,
      {var,2478,'TNext'},
      {call,2478,
       {atom,2478,next},
       [{var,2478,'Go'},
        {op,2478,'+',{var,2478,'GoI'},{integer,2478,1}},
        {var,2478,'L'}]}},
     {match,2479,
      {var,2479,'FNext'},
      {call,2479,
       {atom,2479,next},
       [{var,2479,'Go'},{var,2479,'GoI'},{var,2479,'L'}]}},
     {match,2480,
      {var,2480,'NAsT'},
      {call,2480,
       {atom,2480,pack_args},
       [{cons,2480,{var,2480,'TNext'},{var,2480,'NAs'}},
        {var,2480,'L'},
        {var,2480,'State'}]}},
     {match,2481,
      {var,2481,'NAsF'},
      {call,2481,
       {atom,2481,pack_args},
       [{cons,2481,{var,2481,'FNext'},{var,2481,'NAs'}},
        {var,2481,'L'},
        {var,2481,'State'}]}},
     {match,2485,
      {var,2485,'Body'},
      {'case',2485,
       {call,2485,
        {remote,2485,{atom,2485,erl_lint},{atom,2485,is_guard_test}},
        [{var,2485,'E'},
         {call,2485,
          {remote,2485,{atom,2485,erlang},{atom,2485,element}},
          [{integer,2485,4},{var,2485,'State'}]}]},
       [{clause,2486,
         [{atom,2486,true}],
         [],
         [{match,2487,
           {var,2487,'CT'},
           {tuple,2487,
            [{atom,2487,clause},
             {var,2487,'L'},
             {nil,2487},
             {cons,2487,{cons,2487,{var,2487,'E'},{nil,2487}},{nil,2487}},
             {cons,2487,
              {tuple,2487,
               [{atom,2487,call},
                {var,2487,'L'},
                {tuple,219,[{atom,219,var},{var,219,'L'},{var,2487,'Fun'}]},
                {var,2487,'NAsT'}]},
              {nil,2487}}]}},
          {match,2488,
           {var,2488,'CF'},
           {tuple,2488,
            [{atom,2488,clause},
             {var,2488,'L'},
             {nil,2488},
             {cons,2488,
              {cons,2488,
               {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,2488,true}]},
               {nil,2488}},
              {nil,2488}},
             {cons,2488,
              {tuple,2488,
               [{atom,2488,call},
                {var,2488,'L'},
                {tuple,219,[{atom,219,var},{var,219,'L'},{var,2488,'Fun'}]},
                {var,2488,'NAsF'}]},
              {nil,2488}}]}},
          {cons,2489,
           {tuple,2489,
            [{atom,2489,'if'},
             {var,2489,'L'},
             {cons,2489,
              {var,2489,'CT'},
              {cons,2489,{var,2489,'CF'},{nil,2489}}}]},
           {nil,2489}}]},
        {clause,2490,
         [{atom,2490,false}],
         [],
         [{match,2491,
           {var,2491,'CT'},
           {tuple,2491,
            [{atom,2491,clause},
             {var,2491,'L'},
             {cons,2491,
              {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,2491,true}]},
              {nil,2491}},
             {nil,2491},
             {cons,2491,
              {tuple,2491,
               [{atom,2491,call},
                {var,2491,'L'},
                {tuple,219,[{atom,219,var},{var,219,'L'},{var,2491,'Fun'}]},
                {var,2491,'NAsT'}]},
              {nil,2491}}]}},
          {match,2492,
           {var,2492,'CF'},
           {tuple,2492,
            [{atom,2492,clause},
             {var,2492,'L'},
             {cons,2492,
              {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,2492,false}]},
              {nil,2492}},
             {nil,2492},
             {cons,2492,
              {tuple,2492,
               [{atom,2492,call},
                {var,2492,'L'},
                {tuple,219,[{atom,219,var},{var,219,'L'},{var,2492,'Fun'}]},
                {var,2492,'NAsF'}]},
              {nil,2492}}]}},
          {cons,2493,
           {tuple,2493,
            [{atom,2493,'case'},
             {var,2493,'L'},
             {var,2493,'E'},
             {cons,2493,
              {var,2493,'CT'},
              {cons,2493,{var,2493,'CF'},{nil,2493}}}]},
           {nil,2493}}]}]}},
     {cons,2495,
      {tuple,2495,
       [{atom,2495,clause},
        {var,2495,'L'},
        {var,2495,'As'},
        {nil,2495},
        {var,2495,'Body'}]},
      {nil,2495}}]}]},
 {function,2497,pack_args,3,
  [{clause,2497,
    [{var,2497,'Args'},{var,2497,'L'},{var,2497,'State'}],
    [],
    [{'case',2498,
      {call,2498,
       {atom,2498,split_args},
       [{var,2498,'Args'},{var,2498,'L'},{var,2498,'State'}]},
      [{clause,2499,
        [{tuple,2499,[{var,2499,'ArgsL'},{var,2499,'ArgsT'}]}],
        [],
        [{op,2500,'++',
          {var,2500,'ArgsL'},
          {cons,2500,{var,2500,'ArgsT'},{nil,2500}}}]},
       {clause,2501,[{var,2501,'_'}],[],[{var,2502,'Args'}]}]}]}]},
 {function,2505,split_args,3,
  [{clause,2505,
    [{var,2505,'Args'},{var,2505,'L'},{var,2505,'State'}],
    [[{op,2505,'>',
       {call,2505,{atom,2505,length},[{var,2505,'Args'}]},
       {call,2505,
        {remote,2505,{atom,2505,erlang},{atom,2505,element}},
        [{integer,2505,3},{var,2505,'State'}]}}]],
    [{tuple,2506,
      [{call,2506,
        {remote,2506,{atom,2506,lists},{atom,2506,sublist}},
        [{var,2506,'Args'},
         {op,2506,'-',
          {call,2506,
           {remote,2506,{atom,2506,erlang},{atom,2506,element}},
           [{integer,2506,3},{var,2506,'State'}]},
          {integer,2506,1}}]},
       {tuple,2507,
        [{atom,2507,tuple},
         {var,2507,'L'},
         {call,2507,
          {remote,2507,{atom,2507,lists},{atom,2507,nthtail}},
          [{op,2507,'-',
            {call,2507,
             {remote,2507,{atom,2507,erlang},{atom,2507,element}},
             [{integer,2507,3},{var,2507,'State'}]},
            {integer,2507,1}},
           {var,2507,'Args'}]}]}]}]},
   {clause,2508,
    [{var,2508,'Args'},{var,2508,'_L'},{var,2508,'_State'}],
    [],
    [{var,2509,'Args'}]}]},
 {function,2513,replace,3,
  [{clause,2513,
    [{var,2513,'Es'},{var,2513,'IEs'},{var,2513,'R'}],
    [],
    [{lc,2514,
      {'case',2514,
       {call,2514,
        {remote,2514,{atom,2514,lists},{atom,2514,member}},
        [{var,2514,'E'},{var,2514,'Es'}]},
       [{clause,2515,[{atom,2515,true}],[],[{var,2515,'R'}]},
        {clause,2516,[{atom,2516,false}],[],[{var,2516,'E'}]}]},
      [{generate,2517,{var,2517,'E'},{var,2517,'IEs'}}]}]}]},
 {function,2519,is_list_c,2,
  [{clause,2519,
    [{var,2519,'V'},{var,2519,'L'}],
    [],
    [{tuple,2520,
      [{atom,2520,call},
       {var,2520,'L'},
       {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,2520,is_list}]},
       {cons,2520,
        {tuple,219,[{atom,219,var},{var,219,'L'},{var,2520,'V'}]},
        {nil,2520}}]}]}]},
 {function,2522,next,3,
  [{clause,2522,
    [{var,2522,'Go'},{var,2522,'GoI'},{var,2522,'L'}],
    [],
    [{tuple,2523,
      [{atom,2523,call},
       {var,2523,'L'},
       {tuple,218,[{atom,218,atom},{var,218,'L'},{atom,2523,element}]},
       {cons,2523,
        {tuple,217,[{atom,217,integer},{var,217,'L'},{var,2523,'GoI'}]},
        {cons,219,
         {tuple,219,[{atom,219,var},{var,219,'L'},{var,2523,'Go'}]},
         {nil,2523}}}]}]}]},
 {function,2525,aux_vars,3,
  [{clause,2525,
    [{var,2525,'Vars'},{var,2525,'LcN'},{var,2525,'AllVars'}],
    [],
    [{lc,2526,
      {call,2526,
       {atom,2526,aux_var},
       [{var,2526,'Name'},
        {var,2526,'LcN'},
        {integer,2526,0},
        {integer,2526,1},
        {var,2526,'AllVars'}]},
      [{generate,2526,{var,2526,'Name'},{var,2526,'Vars'}}]}]}]},
 {function,2528,aux_var,5,
  [{clause,2528,
    [{var,2528,'Name'},
     {var,2528,'LcN'},
     {var,2528,'QN'},
     {var,2528,'N'},
     {var,2528,'AllVars'}],
    [],
    [{call,2529,
      {remote,2529,{atom,2529,qlc},{atom,2529,aux_name}},
      [{call,2529,
        {remote,2529,{atom,2529,lists},{atom,2529,concat}},
        [{cons,2529,
          {var,2529,'Name'},
          {cons,2529,
           {var,2529,'LcN'},
           {cons,2529,
            {atom,2529,'_'},
            {cons,2529,
             {var,2529,'QN'},
             {cons,2529,{atom,2529,'_'},{nil,2529}}}}}}]},
       {var,2529,'N'},
       {var,2529,'AllVars'}]}]}]},
 {function,2531,no_compiler_warning,1,
  [{clause,2531,
    [{var,2531,'L'}],
    [],
    [{match,2532,
      {var,2532,'Anno'},
      {call,2532,
       {remote,2532,{atom,2532,erl_anno},{atom,2532,new}},
       [{var,2532,'L'}]}},
     {call,2533,
      {remote,2533,{atom,2533,erl_anno},{atom,2533,set_generated}},
      [{atom,2533,true},{var,2533,'Anno'}]}]}]},
 {function,2535,loc,1,
  [{clause,2535,
    [{var,2535,'A'}],
    [],
    [{call,2536,
      {remote,2536,{atom,2536,erl_anno},{atom,2536,location}},
      [{var,2536,'A'}]}]}]},
 {function,2538,list2op,2,
  [{clause,2538,
    [{cons,2538,{var,2538,'E'},{nil,2538}},{var,2538,'_Op'}],
    [],
    [{var,2539,'E'}]},
   {clause,2540,
    [{cons,2540,{var,2540,'E'},{var,2540,'Es'}},{var,2540,'Op'}],
    [],
    [{tuple,2541,
      [{atom,2541,op},
       {call,2541,{atom,2541,anno0},[]},
       {var,2541,'Op'},
       {var,2541,'E'},
       {call,2541,{atom,2541,list2op},[{var,2541,'Es'},{var,2541,'Op'}]}]}]}]},
 {function,2543,anno0,0,
  [{clause,2543,[],[],
    [{call,2544,
      {remote,2544,{atom,2544,erl_anno},{atom,2544,new}},
      [{integer,2544,0}]}]}]},
 {function,2546,anno1,0,
  [{clause,2546,[],[],
    [{call,2547,
      {remote,2547,{atom,2547,erl_anno},{atom,2547,new}},
      [{integer,2547,1}]}]}]},
 {function,2551,qual_fold,5,
  [{clause,2551,
    [{var,2551,'Fun'},
     {var,2551,'GlobAcc0'},
     {var,2551,'Acc0'},
     {var,2551,'Forms'},
     {var,2551,'State'}],
    [],
    [{match,2552,
      {var,2552,'F'},
      {'fun',2552,
       {clauses,
        [{clause,2552,
          [{var,2552,'Id'},
           {tuple,2552,
            [{atom,2552,lc},{var,2552,'L'},{var,2552,'E'},{var,2552,'Qs0'}]},
           {var,2552,'GA0'}],
          [],
          [{match,2553,
            {tuple,2553,[{var,2553,'Qs'},{var,2553,'GA'},{var,2553,'_NA'}]},
            {call,2553,
             {atom,2553,qual_fold},
             [{var,2553,'Qs0'},
              {var,2553,'Fun'},
              {var,2553,'GA0'},
              {var,2553,'Acc0'},
              {var,2553,'Id'},
              {integer,2553,1},
              {nil,2553}]}},
           {tuple,2554,
            [{tuple,2554,
              [{atom,2554,lc},{var,2554,'L'},{var,2554,'E'},{var,2554,'Qs'}]},
             {var,2554,'GA'}]}]},
         {clause,2555,
          [{var,2555,'_Id'},{var,2555,'Expr'},{var,2555,'GA'}],
          [],
          [{tuple,2556,[{var,2556,'Expr'},{var,2556,'GA'}]}]}]}}},
     {call,2558,
      {atom,2558,qlc_mapfold},
      [{var,2558,'F'},
       {var,2558,'GlobAcc0'},
       {var,2558,'Forms'},
       {var,2558,'State'}]}]}]},
 {function,2560,qual_fold,7,
  [{clause,2560,
    [{cons,2560,{var,2560,'Q0'},{var,2560,'Qs'}},
     {var,2560,'F'},
     {var,2560,'GA0'},
     {var,2560,'A0'},
     {var,2560,'Id'},
     {var,2560,'No'},
     {var,2560,'NQs'}],
    [],
    [{match,2561,
      {var,2561,'QId'},
      {call,2561,{atom,2561,qid},[{var,2561,'Id'},{var,2561,'No'}]}},
     {match,2562,
      {tuple,2562,[{var,2562,'Q'},{var,2562,'GA'},{var,2562,'A'}]},
      {call,2562,
       {var,2562,'F'},
       [{var,2562,'QId'},{var,2562,'Q0'},{var,2562,'GA0'},{var,2562,'A0'}]}},
     {call,2563,
      {atom,2563,qual_fold},
      [{var,2563,'Qs'},
       {var,2563,'F'},
       {var,2563,'GA'},
       {var,2563,'A'},
       {var,2563,'Id'},
       {op,2563,'+',{var,2563,'No'},{integer,2563,1}},
       {cons,2563,{var,2563,'Q'},{var,2563,'NQs'}}]}]},
   {clause,2564,
    [{nil,2564},
     {var,2564,'_F'},
     {var,2564,'GA'},
     {var,2564,'A'},
     {var,2564,'_Id'},
     {var,2564,'_No'},
     {var,2564,'NQs'}],
    [],
    [{tuple,2565,
      [{call,2565,
        {remote,2565,{atom,2565,lists},{atom,2565,reverse}},
        [{var,2565,'NQs'}]},
       {var,2565,'GA'},
       {var,2565,'A'}]}]}]},
 {function,2567,qlc_mapfold,4,
  [{clause,2567,
    [{var,2567,'Fun'},
     {var,2567,'Acc0'},
     {var,2567,'Forms0'},
     {var,2567,'State'}],
    [],
    [{match,2568,
      {tuple,2568,[{var,2568,'Forms'},{var,2568,'A'},{var,2568,'_NNo'}]},
      {call,2568,
       {atom,2568,qlcmf},
       [{var,2568,'Forms0'},
        {var,2568,'Fun'},
        {call,2568,
         {remote,2568,{atom,2568,erlang},{atom,2568,element}},
         [{integer,2568,2},{var,2568,'State'}]},
        {var,2568,'Acc0'},
        {integer,2568,1}]}},
     {call,2569,{atom,2569,erase},[{atom,63,qlc_current_file}]},
     {tuple,2570,[{var,2570,'Forms'},{var,2570,'A'}]}]}]},
 {function,2572,qlcmf,5,
  [{clause,2572,
    [{cons,2572,{var,2572,'E0'},{var,2572,'Es0'}},
     {var,2572,'F'},
     {var,2572,'Imp'},
     {var,2572,'A0'},
     {var,2572,'No0'}],
    [],
    [{match,2573,
      {tuple,2573,[{var,2573,'E'},{var,2573,'A1'},{var,2573,'No1'}]},
      {call,2573,
       {atom,2573,qlcmf},
       [{var,2573,'E0'},
        {var,2573,'F'},
        {var,2573,'Imp'},
        {var,2573,'A0'},
        {var,2573,'No0'}]}},
     {match,2574,
      {tuple,2574,[{var,2574,'Es'},{var,2574,'A'},{var,2574,'No'}]},
      {call,2574,
       {atom,2574,qlcmf},
       [{var,2574,'Es0'},
        {var,2574,'F'},
        {var,2574,'Imp'},
        {var,2574,'A1'},
        {var,2574,'No1'}]}},
     {tuple,2575,
      [{cons,2575,{var,2575,'E'},{var,2575,'Es'}},
       {var,2575,'A'},
       {var,2575,'No'}]}]},
   {clause,2576,
    [{tuple,34,
      [{atom,34,call},
       {var,2576,'L1'},
       {tuple,34,
        [{atom,34,remote},
         {var,2576,'L2'},
         {tuple,34,[{atom,34,atom},{var,2576,'L3'},{atom,29,qlc}]},
         {tuple,34,[{atom,34,atom},{var,2576,'L4'},{atom,30,q}]}]},
       {cons,34,{var,2576,'LC0'},{var,2576,'Os0'}}]},
     {var,2576,'F'},
     {var,2576,'Imp'},
     {var,2576,'A0'},
     {var,2576,'No0'}],
    [[{op,2576,'<',
       {call,2576,{atom,2576,length},[{var,2576,'Os0'}]},
       {integer,2576,2}}]],
    [{match,2577,
      {tuple,2577,[{var,2577,'Os'},{var,2577,'A1'},{var,2577,'No1'}]},
      {call,2577,
       {atom,2577,qlcmf},
       [{var,2577,'Os0'},
        {var,2577,'F'},
        {var,2577,'Imp'},
        {var,2577,'A0'},
        {var,2577,'No0'}]}},
     {match,2578,
      {tuple,2578,[{var,2578,'LC'},{var,2578,'A2'},{var,2578,'No'}]},
      {call,2578,
       {atom,2578,qlcmf},
       [{var,2578,'LC0'},
        {var,2578,'F'},
        {var,2578,'Imp'},
        {var,2578,'A1'},
        {var,2578,'No1'}]}},
     {match,2579,
      {var,2579,'NL'},
      {call,2579,{atom,2579,make_lcid},[{var,2579,'L1'},{var,2579,'No'}]}},
     {match,2580,
      {tuple,2580,[{var,2580,'T'},{var,2580,'A'}]},
      {call,2580,
       {var,2580,'F'},
       [{var,2580,'NL'},{var,2580,'LC'},{var,2580,'A2'}]}},
     {tuple,2581,
      [{tuple,34,
        [{atom,34,call},
         {var,2581,'L1'},
         {tuple,34,
          [{atom,34,remote},
           {var,2581,'L2'},
           {tuple,34,[{atom,34,atom},{var,2581,'L3'},{atom,29,qlc}]},
           {tuple,34,[{atom,34,atom},{var,2581,'L4'},{atom,30,q}]}]},
         {cons,34,{var,2581,'T'},{var,2581,'Os'}}]},
       {var,2581,'A'},
       {op,2581,'+',{var,2581,'No'},{integer,2581,1}}]}]},
   {clause,2582,
    [{tuple,35,
      [{atom,35,call},
       {var,35,'L'},
       {tuple,35,[{atom,35,atom},{var,2582,'L2'},{atom,30,q}]},
       {cons,35,{var,2582,'LC0'},{var,2582,'Os0'}}]},
     {var,2582,'F'},
     {match,2582,{var,2582,'Imp'},{atom,2582,true}},
     {var,2582,'A0'},
     {var,2582,'No0'}],
    [[{op,2582,'<',
       {call,2582,{atom,2582,length},[{var,2582,'Os0'}]},
       {integer,2582,2}}]],
    [{match,2583,
      {tuple,2583,[{var,2583,'Os'},{var,2583,'A1'},{var,2583,'No1'}]},
      {call,2583,
       {atom,2583,qlcmf},
       [{var,2583,'Os0'},
        {var,2583,'F'},
        {var,2583,'Imp'},
        {var,2583,'A0'},
        {var,2583,'No0'}]}},
     {match,2584,
      {tuple,2584,[{var,2584,'LC'},{var,2584,'A2'},{var,2584,'No'}]},
      {call,2584,
       {atom,2584,qlcmf},
       [{var,2584,'LC0'},
        {var,2584,'F'},
        {var,2584,'Imp'},
        {var,2584,'A1'},
        {var,2584,'No1'}]}},
     {match,2585,
      {var,2585,'NL'},
      {call,2585,{atom,2585,make_lcid},[{var,2585,'L'},{var,2585,'No'}]}},
     {match,2586,
      {tuple,2586,[{var,2586,'T'},{var,2586,'A'}]},
      {call,2586,
       {var,2586,'F'},
       [{var,2586,'NL'},{var,2586,'LC'},{var,2586,'A2'}]}},
     {tuple,2587,
      [{tuple,35,
        [{atom,35,call},
         {var,35,'L'},
         {tuple,35,[{atom,35,atom},{var,2587,'L2'},{atom,30,q}]},
         {cons,35,{var,2587,'T'},{var,2587,'Os'}}]},
       {var,2587,'A'},
       {op,2587,'+',{var,2587,'No'},{integer,2587,1}}]}]},
   {clause,2588,
    [{match,2588,
      {tuple,2588,
       [{atom,2588,attribute},
        {var,2588,'_L'},
        {atom,2588,file},
        {tuple,2588,[{var,2588,'File'},{var,2588,'_Line'}]}]},
      {var,2588,'Attr'}},
     {var,2588,'_F'},
     {var,2588,'_Imp'},
     {var,2588,'A'},
     {var,2588,'No'}],
    [],
    [{call,2589,
      {atom,2589,put},
      [{atom,63,qlc_current_file},{var,2589,'File'}]},
     {tuple,2590,[{var,2590,'Attr'},{var,2590,'A'},{var,2590,'No'}]}]},
   {clause,2591,
    [{var,2591,'T'},
     {var,2591,'F'},
     {var,2591,'Imp'},
     {var,2591,'A0'},
     {var,2591,'No0'}],
    [[{call,2591,{atom,2591,is_tuple},[{var,2591,'T'}]}]],
    [{match,2592,
      {tuple,2592,[{var,2592,'TL'},{var,2592,'A'},{var,2592,'No'}]},
      {call,2592,
       {atom,2592,qlcmf},
       [{call,2592,{atom,2592,tuple_to_list},[{var,2592,'T'}]},
        {var,2592,'F'},
        {var,2592,'Imp'},
        {var,2592,'A0'},
        {var,2592,'No0'}]}},
     {tuple,2593,
      [{call,2593,{atom,2593,list_to_tuple},[{var,2593,'TL'}]},
       {var,2593,'A'},
       {var,2593,'No'}]}]},
   {clause,2594,
    [{var,2594,'T'},
     {var,2594,'_F'},
     {var,2594,'_Imp'},
     {var,2594,'A'},
     {var,2594,'No'}],
    [],
    [{tuple,2595,[{var,2595,'T'},{var,2595,'A'},{var,2595,'No'}]}]}]},
 {function,2597,occ_vars,1,
  [{clause,2597,
    [{var,2597,'E'}],
    [],
    [{call,2598,
      {remote,2598,{atom,2598,qlc},{atom,2598,var_fold}},
      [{'fun',2598,
        {clauses,
         [{clause,2598,
           [{tuple,2598,[{atom,2598,var},{var,2598,'_L'},{var,2598,'V'}]}],
           [],
           [{var,2598,'V'}]}]}},
       {nil,2598},
       {var,2598,'E'}]}]}]},
 {function,2604,save_anno,2,
  [{clause,2604,
    [{var,2604,'Abstr'},{var,2604,'NodeInfo'}],
    [],
    [{match,2605,
      {var,2605,'F'},
      {'fun',2605,
       {clauses,
        [{clause,2605,
          [{var,2605,'Anno'}],
          [],
          [{match,2606,
            {var,2606,'N'},
            {call,2606,{atom,2606,next_slot},[{var,2606,'NodeInfo'}]}},
           {match,2607,
            {var,2607,'Location'},
            {call,2607,
             {remote,2607,{atom,2607,erl_anno},{atom,2607,location}},
             [{var,2607,'Anno'}]}},
           {match,2608,
            {var,2608,'Data'},
            {tuple,2608,
             [{var,2608,'N'},
              {map,2608,
               [{map_field_assoc,2608,
                 {atom,2608,location},
                 {var,2608,'Location'}}]}]}},
           {match,2609,
            {atom,2609,true},
            {call,2609,
             {remote,2609,{atom,2609,ets},{atom,2609,insert}},
             [{var,2609,'NodeInfo'},{var,2609,'Data'}]}},
           {call,2610,
            {remote,2610,{atom,2610,erl_anno},{atom,2610,new}},
            [{var,2610,'N'}]}]}]}}},
     {call,2612,
      {remote,2612,{atom,2612,erl_parse},{atom,2612,map_anno}},
      [{var,2612,'F'},{var,2612,'Abstr'}]}]}]},
 {function,2614,next_slot,1,
  [{clause,2614,
    [{var,2614,'T'}],
    [],
    [{match,2615,
      {var,2615,'I'},
      {call,2615,
       {remote,2615,{atom,2615,ets},{atom,2615,update_counter}},
       [{var,2615,'T'},{atom,2615,var_n},{integer,2615,1}]}},
     {'case',2616,
      {call,2616,
       {remote,2616,{atom,2616,ets},{atom,2616,lookup}},
       [{var,2616,'T'},{var,2616,'I'}]},
      [{clause,2617,[{nil,2617}],[],[{var,2618,'I'}]},
       {clause,2619,
        [{var,2619,'_'}],
        [],
        [{call,2620,{atom,2620,next_slot},[{var,2620,'T'}]}]}]}]}]},
 {function,2623,restore_anno,2,
  [{clause,2623,
    [{var,2623,'Abstr'},{var,2623,'NodeInfo'}],
    [],
    [{match,2624,
      {var,2624,'F'},
      {'fun',2624,
       {clauses,
        [{clause,2624,
          [{var,2624,'Anno'}],
          [],
          [{match,2625,
            {var,2625,'Location'},
            {call,2625,
             {remote,2625,{atom,2625,erl_anno},{atom,2625,location}},
             [{var,2625,'Anno'}]}},
           {'case',2626,
            {call,2626,
             {remote,2626,{atom,2626,ets},{atom,2626,lookup}},
             [{var,2626,'NodeInfo'},{var,2626,'Location'}]},
            [{clause,2627,
              [{cons,2627,
                {tuple,2627,[{var,2627,'Location'},{var,2627,'Data'}]},
                {nil,2627}}],
              [],
              [{match,2628,
                {var,2628,'OrigLocation'},
                {call,2628,
                 {remote,2628,{atom,2628,maps},{atom,2628,get}},
                 [{atom,2628,location},{var,2628,'Data'}]}},
               {call,2629,
                {remote,2629,{atom,2629,erl_anno},{atom,2629,set_location}},
                [{var,2629,'OrigLocation'},{var,2629,'Anno'}]}]},
             {clause,2630,
              [{cons,2630,{tuple,2630,[{var,2630,'Location'}]},{nil,2630}}],
              [],
              [{var,2631,'Anno'}]},
             {clause,2632,[{nil,2632}],[],[{var,2633,'Anno'}]}]}]}]}}},
     {call,2636,
      {remote,2636,{atom,2636,erl_parse},{atom,2636,map_anno}},
      [{var,2636,'F'},{var,2636,'Abstr'}]}]}]},
 {function,2638,restore_loc,2,
  [{clause,2638,
    [{var,2638,'Location'},
     {tuple,2638,
      [{atom,2638,state},
       {var,2638,'_'},
       {var,2638,'_'},
       {var,2638,'_'},
       {var,2638,'_'},
       {var,2638,'_'},
       {var,2638,'NodeInfo'}]}],
    [],
    [{'case',2639,
      {call,2639,
       {remote,2639,{atom,2639,ets},{atom,2639,lookup}},
       [{var,2639,'NodeInfo'},{var,2639,'Location'}]},
      [{clause,2640,
        [{cons,2640,
          {tuple,2640,
           [{var,2640,'Location'},
            {map,2640,
             [{map_field_exact,2640,
               {atom,2640,location},
               {var,2640,'OrigLocation'}}]}]},
          {nil,2640}}],
        [],
        [{var,2641,'OrigLocation'}]},
       {clause,2642,
        [{cons,2642,{tuple,2642,[{var,2642,'Location'}]},{nil,2642}}],
        [],
        [{var,2643,'Location'}]},
       {clause,2644,[{nil,2644}],[],[{var,2645,'Location'}]}]}]}]},
 {function,2648,no_shadows,2,
  [{clause,2648,
    [{var,2648,'Forms0'},{var,2648,'State'}],
    [],
    [{match,2666,
      {var,2666,'AllVars'},
      {call,2666,
       {remote,2666,{atom,2666,sets},{atom,2666,from_list}},
       [{call,2666,
         {remote,2666,{atom,2666,ordsets},{atom,2666,to_list}},
         [{call,2666,
           {remote,2666,{atom,2666,qlc},{atom,2666,vars}},
           [{var,2666,'Forms0'}]}]}]}},
     {atom,55,ok},
     {match,2668,
      {var,2668,'VFun'},
      {'fun',2668,
       {clauses,
        [{clause,2668,
          [{var,2668,'_Id'},{var,2668,'LC'},{var,2668,'Vs'}],
          [],
          [{call,2668,{atom,2668,nos},[{var,2668,'LC'},{var,2668,'Vs'}]}]}]}}},
     {match,2669,
      {var,2669,'LI'},
      {call,2669,
       {remote,2669,{atom,2669,ets},{atom,2669,new}},
       [{atom,29,qlc},{nil,2669}]}},
     {match,2670,
      {var,2670,'UV'},
      {call,2670,
       {remote,2670,{atom,2670,ets},{atom,2670,new}},
       [{atom,29,qlc},{nil,2670}]}},
     {match,2671,
      {var,2671,'D0'},
      {call,2671,{remote,2671,{atom,2671,dict},{atom,2671,new}},[]}},
     {match,2672,
      {var,2672,'S1'},
      {tuple,2672,
       [{var,2672,'LI'},
        {var,2672,'D0'},
        {var,2672,'UV'},
        {var,2672,'AllVars'},
        {nil,2672},
        {var,2672,'State'}]}},
     {match,2673,
      {var,2673,'_'},
      {call,2673,
       {atom,2673,qlc_mapfold},
       [{var,2673,'VFun'},
        {var,2673,'S1'},
        {var,2673,'Forms0'},
        {var,2673,'State'}]}},
     {atom,55,ok},
     {match,2675,
      {var,2675,'Singletons'},
      {call,2675,
       {remote,2675,{atom,2675,ets},{atom,2675,select}},
       [{var,2675,'UV'},
        {call,2675,
         {remote,2675,{atom,2675,ets},{atom,2675,fun2ms}},
         [{'fun',2675,
           {clauses,
            [{clause,2675,
              [{tuple,2675,[{var,2675,'K'},{integer,2675,0}]}],
              [],
              [{var,2675,'K'}]}]}}]}]}},
     {atom,55,ok},
     {match,2677,
      {atom,2677,true},
      {call,2677,
       {remote,2677,{atom,2677,ets},{atom,2677,delete_all_objects}},
       [{var,2677,'LI'}]}},
     {match,2678,
      {atom,2678,true},
      {call,2678,
       {remote,2678,{atom,2678,ets},{atom,2678,delete_all_objects}},
       [{var,2678,'UV'}]}},
     {match,2680,
      {var,2680,'S2'},
      {tuple,2680,
       [{var,2680,'LI'},
        {var,2680,'D0'},
        {var,2680,'UV'},
        {var,2680,'AllVars'},
        {var,2680,'Singletons'},
        {var,2680,'State'}]}},
     {match,2681,
      {tuple,2681,[{var,2681,'Forms'},{var,2681,'_'}]},
      {call,2681,
       {atom,2681,qlc_mapfold},
       [{var,2681,'VFun'},
        {var,2681,'S2'},
        {var,2681,'Forms0'},
        {var,2681,'State'}]}},
     {match,2682,
      {atom,2682,true},
      {call,2682,
       {remote,2682,{atom,2682,ets},{atom,2682,delete}},
       [{var,2682,'LI'}]}},
     {match,2683,
      {atom,2683,true},
      {call,2683,
       {remote,2683,{atom,2683,ets},{atom,2683,delete}},
       [{var,2683,'UV'}]}},
     {var,2684,'Forms'}]}]},
 {function,2686,nos,2,
  [{clause,2686,
    [{cons,2686,{var,2686,'E0'},{var,2686,'Es0'}},{var,2686,'S0'}],
    [],
    [{match,2687,
      {tuple,2687,[{var,2687,'E'},{var,2687,'S1'}]},
      {call,2687,{atom,2687,nos},[{var,2687,'E0'},{var,2687,'S0'}]}},
     {match,2688,
      {tuple,2688,[{var,2688,'Es'},{var,2688,'S'}]},
      {call,2688,{atom,2688,nos},[{var,2688,'Es0'},{var,2688,'S1'}]}},
     {tuple,2689,
      [{cons,2689,{var,2689,'E'},{var,2689,'Es'}},{var,2689,'S'}]}]},
   {clause,2690,
    [{tuple,2690,
      [{atom,2690,'fun'},
       {var,2690,'L'},
       {tuple,2690,[{atom,2690,clauses},{var,2690,'Cs'}]}]},
     {var,2690,'S'}],
    [],
    [{match,2691,
      {var,2691,'NCs'},
      {lc,2691,
       {block,2691,
        [{match,2692,
          {tuple,2692,[{var,2692,'H'},{var,2692,'S1'}]},
          {call,2692,
           {atom,2692,nos_pattern},
           [{var,2692,'H0'},{var,2692,'S'}]}},
         {match,2693,
          {tuple,2693,
           [{cons,2693,{var,2693,'G'},{cons,2693,{var,2693,'B'},{nil,2693}}},
            {var,2693,'_'}]},
          {call,2693,
           {atom,2693,nos},
           [{cons,2693,{var,2693,'G0'},{cons,2693,{var,2693,'B0'},{nil,2693}}},
            {var,2693,'S1'}]}},
         {tuple,2694,
          [{atom,2694,clause},
           {var,2694,'Ln'},
           {var,2694,'H'},
           {var,2694,'G'},
           {var,2694,'B'}]}]},
       [{generate,2695,
         {tuple,2695,
          [{atom,2695,clause},
           {var,2695,'Ln'},
           {var,2695,'H0'},
           {var,2695,'G0'},
           {var,2695,'B0'}]},
         {var,2695,'Cs'}}]}},
     {tuple,2696,
      [{tuple,2696,
        [{atom,2696,'fun'},
         {var,2696,'L'},
         {tuple,2696,[{atom,2696,clauses},{var,2696,'NCs'}]}]},
       {var,2696,'S'}]}]},
   {clause,2697,
    [{tuple,2697,
      [{atom,2697,named_fun},
       {var,2697,'Loc'},
       {var,2697,'Name'},
       {var,2697,'Cs'}]},
     {var,2697,'S'}],
    [],
    [{match,2698,
      {tuple,2698,
       [{tuple,2698,[{atom,2698,var},{var,2698,'NLoc'},{var,2698,'NName'}]},
        {var,2698,'S1'}]},
      {'case',2698,
       {var,2698,'Name'},
       [{clause,2699,[{atom,2699,'_'}],[],[{var,2700,'S'}]},
        {clause,2701,
         [{var,2701,'Name'}],
         [],
         [{call,2702,
           {atom,2702,nos_pattern},
           [{tuple,2702,[{atom,2702,var},{var,2702,'Loc'},{var,2702,'Name'}]},
            {var,2702,'S'}]}]}]}},
     {match,2704,
      {var,2704,'NCs'},
      {lc,2704,
       {block,2704,
        [{match,2705,
          {tuple,2705,[{var,2705,'H'},{var,2705,'S2'}]},
          {call,2705,
           {atom,2705,nos_pattern},
           [{var,2705,'H0'},{var,2705,'S1'}]}},
         {match,2706,
          {tuple,2706,
           [{cons,2706,{var,2706,'G'},{cons,2706,{var,2706,'B'},{nil,2706}}},
            {var,2706,'_'}]},
          {call,2706,
           {atom,2706,nos},
           [{cons,2706,{var,2706,'G0'},{cons,2706,{var,2706,'B0'},{nil,2706}}},
            {var,2706,'S2'}]}},
         {tuple,2707,
          [{atom,2707,clause},
           {var,2707,'CLoc'},
           {var,2707,'H'},
           {var,2707,'G'},
           {var,2707,'B'}]}]},
       [{generate,2708,
         {tuple,2708,
          [{atom,2708,clause},
           {var,2708,'CLoc'},
           {var,2708,'H0'},
           {var,2708,'G0'},
           {var,2708,'B0'}]},
         {var,2708,'Cs'}}]}},
     {tuple,2709,
      [{tuple,2709,
        [{atom,2709,named_fun},
         {var,2709,'NLoc'},
         {var,2709,'NName'},
         {var,2709,'NCs'}]},
       {var,2709,'S'}]}]},
   {clause,2710,
    [{tuple,2710,
      [{atom,2710,lc},{var,2710,'L'},{var,2710,'E0'},{var,2710,'Qs0'}]},
     {var,2710,'S'}],
    [],
    [{match,2714,
      {var,2714,'F'},
      {'fun',2714,
       {clauses,
        [{clause,2714,
          [{tuple,2714,
            [{var,2714,'T'},{var,2714,'Ln'},{var,2714,'P0'},{var,2714,'LE0'}]},
           {var,2714,'QS0'}],
          [[{op,2714,'=:=',{var,2714,'T'},{atom,2714,b_generate}}],
           [{op,2714,'=:=',{var,2714,'T'},{atom,2714,generate}}]],
          [{match,2715,
            {tuple,2715,[{var,2715,'LE'},{var,2715,'_'}]},
            {call,2715,{atom,2715,nos},[{var,2715,'LE0'},{var,2715,'QS0'}]}},
           {match,2716,
            {tuple,2716,[{var,2716,'P'},{var,2716,'QS'}]},
            {call,2716,
             {atom,2716,nos_pattern},
             [{var,2716,'P0'},{var,2716,'QS0'}]}},
           {tuple,2717,
            [{tuple,2717,
              [{var,2717,'T'},{var,2717,'Ln'},{var,2717,'P'},{var,2717,'LE'}]},
             {var,2717,'QS'}]}]},
         {clause,2718,
          [{var,2718,'Filter'},{var,2718,'QS'}],
          [],
          [{call,2719,
            {atom,2719,nos},
            [{var,2719,'Filter'},{var,2719,'QS'}]}]}]}}},
     {match,2721,
      {tuple,2721,[{var,2721,'Qs'},{var,2721,'S1'}]},
      {call,2721,
       {remote,2721,{atom,2721,lists},{atom,2721,mapfoldl}},
       [{var,2721,'F'},{var,2721,'S'},{var,2721,'Qs0'}]}},
     {match,2722,
      {tuple,2722,[{var,2722,'E'},{var,2722,'_'}]},
      {call,2722,{atom,2722,nos},[{var,2722,'E0'},{var,2722,'S1'}]}},
     {tuple,2723,
      [{tuple,2723,
        [{atom,2723,lc},{var,2723,'L'},{var,2723,'E'},{var,2723,'Qs'}]},
       {var,2723,'S'}]}]},
   {clause,2724,
    [{match,2724,
      {tuple,2724,[{atom,2724,var},{var,2724,'L'},{var,2724,'V'}]},
      {var,2724,'Var'}},
     {match,2724,
      {tuple,2724,
       [{var,2724,'_LI'},
        {var,2724,'Vs'},
        {var,2724,'UV'},
        {var,2724,'_A'},
        {var,2724,'_Sg'},
        {var,2724,'State'}]},
      {var,2724,'S'}}],
    [[{op,2724,'=/=',{var,2724,'V'},{atom,2724,'_'}}]],
    [{'case',2725,
      {call,2725,
       {atom,2725,used_var},
       [{var,2725,'V'},{var,2725,'Vs'},{var,2725,'UV'}]},
      [{clause,2726,
        [{tuple,2726,[{atom,2726,true},{var,2726,'VN'}]}],
        [],
        [{call,2727,
          {atom,2727,nos_var},
          [{var,2727,'L'},{var,2727,'V'},{var,2727,'State'}]},
         {tuple,2728,
          [{tuple,2728,[{atom,2728,var},{var,2728,'L'},{var,2728,'VN'}]},
           {var,2728,'S'}]}]},
       {clause,2729,
        [{atom,2729,false}],
        [],
        [{tuple,2730,[{var,2730,'Var'},{var,2730,'S'}]}]}]}]},
   {clause,2732,
    [{var,2732,'T'},{var,2732,'S0'}],
    [[{call,2732,{atom,2732,is_tuple},[{var,2732,'T'}]}]],
    [{match,2733,
      {tuple,2733,[{var,2733,'TL'},{var,2733,'S'}]},
      {call,2733,
       {atom,2733,nos},
       [{call,2733,{atom,2733,tuple_to_list},[{var,2733,'T'}]},
        {var,2733,'S0'}]}},
     {tuple,2734,
      [{call,2734,{atom,2734,list_to_tuple},[{var,2734,'TL'}]},
       {var,2734,'S'}]}]},
   {clause,2735,
    [{var,2735,'T'},{var,2735,'S'}],
    [],
    [{tuple,2736,[{var,2736,'T'},{var,2736,'S'}]}]}]},
 {function,2738,nos_pattern,2,
  [{clause,2738,
    [{var,2738,'P'},{var,2738,'S'}],
    [],
    [{match,2739,
      {tuple,2739,[{var,2739,'T'},{var,2739,'NS'},{var,2739,'_'}]},
      {call,2739,
       {atom,2739,nos_pattern},
       [{var,2739,'P'},{var,2739,'S'},{nil,2739}]}},
     {tuple,2740,[{var,2740,'T'},{var,2740,'NS'}]}]}]},
 {function,2742,nos_pattern,3,
  [{clause,2742,
    [{cons,2742,{var,2742,'P0'},{var,2742,'Ps0'}},
     {var,2742,'S0'},
     {var,2742,'PVs0'}],
    [],
    [{match,2743,
      {tuple,2743,[{var,2743,'P'},{var,2743,'S1'},{var,2743,'PVs1'}]},
      {call,2743,
       {atom,2743,nos_pattern},
       [{var,2743,'P0'},{var,2743,'S0'},{var,2743,'PVs0'}]}},
     {match,2744,
      {tuple,2744,[{var,2744,'Ps'},{var,2744,'S'},{var,2744,'PVs'}]},
      {call,2744,
       {atom,2744,nos_pattern},
       [{var,2744,'Ps0'},{var,2744,'S1'},{var,2744,'PVs1'}]}},
     {tuple,2745,
      [{cons,2745,{var,2745,'P'},{var,2745,'Ps'}},
       {var,2745,'S'},
       {var,2745,'PVs'}]}]},
   {clause,2746,
    [{tuple,2746,[{atom,2746,var},{var,2746,'L'},{var,2746,'V'}]},
     {tuple,2746,
      [{var,2746,'LI'},
       {var,2746,'Vs0'},
       {var,2746,'UV'},
       {var,2746,'A'},
       {var,2746,'Sg'},
       {var,2746,'State'}]},
     {var,2746,'PVs0'}],
    [[{op,2746,'=/=',{var,2746,'V'},{atom,2746,'_'}}]],
    [{match,2747,
      {tuple,2747,[{var,2747,'Name'},{var,2747,'Vs'},{var,2747,'PVs'}]},
      {'case',2748,
       {call,2748,
        {remote,2748,{atom,2748,lists},{atom,2748,keyfind}},
        [{var,2748,'V'},{integer,2748,1},{var,2748,'PVs0'}]},
       [{clause,2749,
         [{tuple,2749,[{var,2749,'V'},{var,2749,'VN'}]}],
         [],
         [{match,2750,
           {var,2750,'_'},
           {call,2750,
            {atom,2750,used_var},
            [{var,2750,'V'},{var,2750,'Vs0'},{var,2750,'UV'}]}},
          {tuple,2751,[{var,2751,'VN'},{var,2751,'Vs0'},{var,2751,'PVs0'}]}]},
        {clause,2752,
         [{atom,2752,false}],
         [],
         [{match,2753,
           {tuple,2753,[{var,2753,'VN'},{var,2753,'Vs1'}]},
           {call,2753,
            {atom,2753,next_var},
            [{var,2753,'V'},
             {var,2753,'Vs0'},
             {var,2753,'A'},
             {var,2753,'LI'},
             {var,2753,'UV'}]}},
          {match,2754,
           {var,2754,'N'},
           {'case',2754,
            {call,2754,
             {remote,2754,{atom,2754,lists},{atom,2754,member}},
             [{var,2754,'VN'},{var,2754,'Sg'}]},
            [{clause,2755,[{atom,2755,true}],[],[{atom,2755,'_'}]},
             {clause,2756,[{atom,2756,false}],[],[{var,2756,'VN'}]}]}},
          {tuple,2758,
           [{var,2758,'N'},
            {var,2758,'Vs1'},
            {cons,2758,
             {tuple,2758,[{var,2758,'V'},{var,2758,'VN'}]},
             {var,2758,'PVs0'}}]}]}]}},
     {call,2760,
      {atom,2760,nos_var},
      [{var,2760,'L'},{var,2760,'V'},{var,2760,'State'}]},
     {tuple,2761,
      [{tuple,2761,[{atom,2761,var},{var,2761,'L'},{var,2761,'Name'}]},
       {tuple,2761,
        [{var,2761,'LI'},
         {var,2761,'Vs'},
         {var,2761,'UV'},
         {var,2761,'A'},
         {var,2761,'Sg'},
         {var,2761,'State'}]},
       {var,2761,'PVs'}]}]},
   {clause,2762,
    [{var,2762,'T'},{var,2762,'S0'},{var,2762,'PVs0'}],
    [[{call,2762,{atom,2762,is_tuple},[{var,2762,'T'}]}]],
    [{match,2763,
      {tuple,2763,[{var,2763,'TL'},{var,2763,'S'},{var,2763,'PVs'}]},
      {call,2763,
       {atom,2763,nos_pattern},
       [{call,2763,{atom,2763,tuple_to_list},[{var,2763,'T'}]},
        {var,2763,'S0'},
        {var,2763,'PVs0'}]}},
     {tuple,2764,
      [{call,2764,{atom,2764,list_to_tuple},[{var,2764,'TL'}]},
       {var,2764,'S'},
       {var,2764,'PVs'}]}]},
   {clause,2765,
    [{var,2765,'T'},{var,2765,'S'},{var,2765,'PVs'}],
    [],
    [{tuple,2766,[{var,2766,'T'},{var,2766,'S'},{var,2766,'PVs'}]}]}]},
 {function,2768,nos_var,3,
  [{clause,2768,
    [{var,2768,'Anno'},{var,2768,'Name'},{var,2768,'State'}],
    [],
    [{match,2769,
      {var,2769,'NodeInfo'},
      {call,2769,
       {remote,2769,{atom,2769,erlang},{atom,2769,element}},
       [{integer,2769,7},{var,2769,'State'}]}},
     {match,2770,
      {var,2770,'Location'},
      {call,2770,
       {remote,2770,{atom,2770,erl_anno},{atom,2770,location}},
       [{var,2770,'Anno'}]}},
     {'case',2771,
      {call,2771,
       {remote,2771,{atom,2771,ets},{atom,2771,lookup}},
       [{var,2771,'NodeInfo'},{var,2771,'Location'}]},
      [{clause,2772,
        [{cons,2772,
          {tuple,2772,
           [{var,2772,'Location'},
            {map,2772,
             [{map_field_exact,2772,{atom,2772,name},{var,2772,'_'}}]}]},
          {nil,2772}}],
        [],
        [{atom,2773,true}]},
       {clause,2774,
        [{cons,2774,
          {tuple,2774,[{var,2774,'Location'},{var,2774,'Data'}]},
          {nil,2774}}],
        [],
        [{match,2775,
          {atom,2775,true},
          {call,2775,
           {remote,2775,{atom,2775,ets},{atom,2775,insert}},
           [{var,2775,'NodeInfo'},
            {tuple,2775,
             [{var,2775,'Location'},
              {map,2775,
               {var,2775,'Data'},
               [{map_field_assoc,2775,
                 {atom,2775,name},
                 {var,2775,'Name'}}]}]}]}}]},
       {clause,2776,[{nil,2776}],[],[{atom,2777,true}]}]}]}]},
 {function,2780,used_var,3,
  [{clause,2780,
    [{var,2780,'V'},{var,2780,'Vs'},{var,2780,'UV'}],
    [],
    [{'case',2781,
      {call,2781,
       {remote,2781,{atom,2781,dict},{atom,2781,find}},
       [{var,2781,'V'},{var,2781,'Vs'}]},
      [{clause,2782,
        [{tuple,2782,[{atom,2782,ok},{var,2782,'Value'}]}],
        [],
        [{match,2783,
          {var,2783,'VN'},
          {call,2783,
           {remote,2783,{atom,2783,qlc},{atom,2783,name_suffix}},
           [{var,2783,'V'},{var,2783,'Value'}]}},
         {match,2784,
          {var,2784,'_'},
          {call,2784,
           {remote,2784,{atom,2784,ets},{atom,2784,update_counter}},
           [{var,2784,'UV'},{var,2784,'VN'},{integer,2784,1}]}},
         {tuple,2785,[{atom,2785,true},{var,2785,'VN'}]}]},
       {clause,2786,[{atom,2786,error}],[],[{atom,2786,false}]}]}]}]},
 {function,2789,next_var,5,
  [{clause,2789,
    [{var,2789,'V'},
     {var,2789,'Vs'},
     {var,2789,'AllVars'},
     {var,2789,'LI'},
     {var,2789,'UV'}],
    [],
    [{match,2790,
      {var,2790,'NValue'},
      {'case',2790,
       {call,2790,
        {remote,2790,{atom,2790,ets},{atom,2790,lookup}},
        [{var,2790,'LI'},{var,2790,'V'}]},
       [{clause,2791,
         [{cons,2791,
           {tuple,2791,[{var,2791,'V'},{var,2791,'Value'}]},
           {nil,2791}}],
         [],
         [{op,2791,'+',{var,2791,'Value'},{integer,2791,1}}]},
        {clause,2792,[{nil,2792}],[],[{integer,2792,1}]}]}},
     {match,2794,
      {atom,2794,true},
      {call,2794,
       {remote,2794,{atom,2794,ets},{atom,2794,insert}},
       [{var,2794,'LI'},{tuple,2794,[{var,2794,'V'},{var,2794,'NValue'}]}]}},
     {match,2795,
      {var,2795,'VN'},
      {call,2795,
       {remote,2795,{atom,2795,qlc},{atom,2795,name_suffix}},
       [{var,2795,'V'},{var,2795,'NValue'}]}},
     {'case',2796,
      {call,2796,
       {remote,2796,{atom,2796,sets},{atom,2796,is_element}},
       [{var,2796,'VN'},{var,2796,'AllVars'}]},
      [{clause,2797,
        [{atom,2797,true}],
        [],
        [{call,2797,
          {atom,2797,next_var},
          [{var,2797,'V'},
           {var,2797,'Vs'},
           {var,2797,'AllVars'},
           {var,2797,'LI'},
           {var,2797,'UV'}]}]},
       {clause,2798,
        [{atom,2798,false}],
        [],
        [{match,2798,
          {atom,2798,true},
          {call,2798,
           {remote,2798,{atom,2798,ets},{atom,2798,insert}},
           [{var,2798,'UV'},{tuple,2798,[{var,2798,'VN'},{integer,2798,0}]}]}},
         {match,2799,
          {var,2799,'NVs'},
          {call,2799,
           {remote,2799,{atom,2799,dict},{atom,2799,store}},
           [{var,2799,'V'},{var,2799,'NValue'},{var,2799,'Vs'}]}},
         {tuple,2800,[{var,2800,'VN'},{var,2800,'NVs'}]}]}]}]}]},
 {function,2803,undo_no_shadows,2,
  [{clause,2803,
    [{var,2803,'E'},{var,2803,'State'}],
    [],
    [{call,2804,
      {atom,2804,var_map},
      [{'fun',2804,
        {clauses,
         [{clause,2804,
           [{var,2804,'Anno'}],
           [],
           [{call,2804,
             {atom,2804,undo_no_shadows1},
             [{var,2804,'Anno'},{var,2804,'State'}]}]}]}},
       {var,2804,'E'}]}]}]},
 {function,2806,undo_no_shadows1,2,
  [{clause,2806,
    [{match,2806,
      {tuple,2806,[{atom,2806,var},{var,2806,'Anno'},{var,2806,'_'}]},
      {var,2806,'Var'}},
     {var,2806,'State'}],
    [],
    [{match,2807,
      {var,2807,'Location'},
      {call,2807,
       {remote,2807,{atom,2807,erl_anno},{atom,2807,location}},
       [{var,2807,'Anno'}]}},
     {match,2808,
      {var,2808,'NodeInfo'},
      {call,2808,
       {remote,2808,{atom,2808,erlang},{atom,2808,element}},
       [{integer,2808,7},{var,2808,'State'}]}},
     {'case',2809,
      {call,2809,
       {remote,2809,{atom,2809,ets},{atom,2809,lookup}},
       [{var,2809,'NodeInfo'},{var,2809,'Location'}]},
      [{clause,2810,
        [{cons,2810,
          {tuple,2810,
           [{var,2810,'Location'},
            {map,2810,
             [{map_field_exact,2810,{atom,2810,name},{var,2810,'Name'}}]}]},
          {nil,2810}}],
        [],
        [{tuple,2811,[{atom,2811,var},{var,2811,'Anno'},{var,2811,'Name'}]}]},
       {clause,2812,[{var,2812,'_'}],[],[{var,2813,'Var'}]}]}]}]},
 {function,2819,make_lcid,2,
  [{clause,2819,
    [{var,2819,'Anno'},{var,2819,'No'}],
    [[{call,2819,{atom,2819,is_integer},[{var,2819,'No'}]},
      {op,2819,'>',{var,2819,'No'},{integer,2819,0}}]],
    [{tuple,2820,
      [{var,2820,'No'},
       {call,2820,
        {remote,2820,{atom,2820,erl_anno},{atom,2820,line}},
        [{var,2820,'Anno'}]}]}]}]},
 {function,2822,get_lcid_no,1,
  [{clause,2822,
    [{tuple,2822,[{var,2822,'No'},{var,2822,'_Line'}]}],
    [],
    [{var,2823,'No'}]}]},
 {function,2825,get_lcid_line,1,
  [{clause,2825,
    [{tuple,2825,[{var,2825,'_No'},{var,2825,'Line'}]}],
    [],
    [{var,2826,'Line'}]}]},
 {function,2828,qid,2,
  [{clause,2828,
    [{var,2828,'LCId'},{var,2828,'No'}],
    [],
    [{tuple,2829,[{atom,2829,qid},{var,2829,'LCId'},{var,2829,'No'}]}]}]},
 {function,2831,abst_vars,2,
  [{clause,2831,
    [{cons,2831,{var,2831,'V'},{var,2831,'Vs'}},{var,2831,'L'}],
    [],
    [{cons,2832,
      {call,2832,{atom,2832,abst_vars},[{var,2832,'V'},{var,2832,'L'}]},
      {call,2832,{atom,2832,abst_vars},[{var,2832,'Vs'},{var,2832,'L'}]}}]},
   {clause,2833,[{nil,2833},{var,2833,'_L'}],[],[{nil,2834}]},
   {clause,2835,
    [{atom,2835,nil},{var,2835,'L'}],
    [],
    [{tuple,2836,[{atom,2836,nil},{var,2836,'L'}]}]},
   {clause,2837,
    [{var,2837,'V'},{var,2837,'L'}],
    [],
    [{tuple,2838,[{atom,2838,var},{var,2838,'L'},{var,2838,'V'}]}]}]},
 {function,2840,embed_vars,2,
  [{clause,2840,
    [{var,2840,'Vars'},{var,2840,'L'}],
    [],
    [{call,2841,
      {atom,2841,embed_expr},
      [{tuple,2841,[{atom,2841,tuple},{var,2841,'L'},{var,2841,'Vars'}]},
       {var,2841,'L'}]}]}]},
 {function,2844,embed_expr,2,
  [{clause,2844,
    [{var,2844,'Expr'},{var,2844,'L'}],
    [],
    [{tuple,2845,
      [{atom,2845,lc},
       {var,2845,'L'},
       {var,2845,'Expr'},
       {cons,2845,
        {tuple,2845,
         [{atom,2845,generate},
          {var,2845,'L'},
          {tuple,2845,[{atom,2845,var},{var,2845,'L'},{atom,2845,'_'}]},
          {tuple,2845,[{atom,2845,nil},{var,2845,'L'}]}]},
        {nil,2845}}]}]}]},
 {function,2848,var2const,1,
  [{clause,2848,
    [{var,2848,'E'}],
    [],
    [{call,2849,
      {atom,2849,var_map},
      [{'fun',2849,
        {clauses,
         [{clause,2849,
           [{tuple,2849,[{atom,2849,var},{var,2849,'L'},{var,2849,'V'}]}],
           [],
           [{tuple,2849,[{atom,2849,atom},{var,2849,'L'},{var,2849,'V'}]}]}]}},
       {var,2849,'E'}]}]}]},
 {function,2851,var_map,2,
  [{clause,2851,
    [{var,2851,'F'},
     {match,2851,
      {tuple,2851,[{atom,2851,var},{var,2851,'_'},{var,2851,'_'}]},
      {var,2851,'V'}}],
    [],
    [{call,2852,{var,2852,'F'},[{var,2852,'V'}]}]},
   {clause,2853,
    [{var,2853,'F'},
     {tuple,2853,
      [{atom,2853,named_fun},
       {var,2853,'NLoc'},
       {var,2853,'NName'},
       {var,2853,'Cs'}]}],
    [],
    [{match,2854,
      {tuple,2854,[{atom,2854,var},{var,2854,'Loc'},{var,2854,'Name'}]},
      {call,2854,
       {var,2854,'F'},
       [{tuple,2854,[{atom,2854,var},{var,2854,'NLoc'},{var,2854,'NName'}]}]}},
     {tuple,2855,
      [{atom,2855,named_fun},
       {var,2855,'Loc'},
       {var,2855,'Name'},
       {call,2855,{atom,2855,var_map},[{var,2855,'F'},{var,2855,'Cs'}]}]}]},
   {clause,2856,
    [{var,2856,'F'},{var,2856,'T'}],
    [[{call,2856,{atom,2856,is_tuple},[{var,2856,'T'}]}]],
    [{call,2857,
      {atom,2857,list_to_tuple},
      [{call,2857,
        {atom,2857,var_map},
        [{var,2857,'F'},
         {call,2857,{atom,2857,tuple_to_list},[{var,2857,'T'}]}]}]}]},
   {clause,2858,
    [{var,2858,'F'},{cons,2858,{var,2858,'E'},{var,2858,'Es'}}],
    [],
    [{cons,2859,
      {call,2859,{atom,2859,var_map},[{var,2859,'F'},{var,2859,'E'}]},
      {call,2859,{atom,2859,var_map},[{var,2859,'F'},{var,2859,'Es'}]}}]},
   {clause,2860,[{var,2860,'_F'},{var,2860,'E'}],[],[{var,2861,'E'}]}]},
 {function,2863,var_mapfold,3,
  [{clause,2863,
    [{var,2863,'F'},
     {var,2863,'A'},
     {match,2863,
      {tuple,2863,[{atom,2863,var},{var,2863,'_'},{var,2863,'_'}]},
      {var,2863,'V'}}],
    [],
    [{call,2864,{var,2864,'F'},[{var,2864,'V'},{var,2864,'A'}]}]},
   {clause,2865,
    [{var,2865,'F'},{var,2865,'A0'},{var,2865,'T'}],
    [[{call,2865,{atom,2865,is_tuple},[{var,2865,'T'}]}]],
    [{match,2866,
      {tuple,2866,[{var,2866,'L'},{var,2866,'A'}]},
      {call,2866,
       {atom,2866,var_mapfold},
       [{var,2866,'F'},
        {var,2866,'A0'},
        {call,2866,{atom,2866,tuple_to_list},[{var,2866,'T'}]}]}},
     {tuple,2867,
      [{call,2867,{atom,2867,list_to_tuple},[{var,2867,'L'}]},
       {var,2867,'A'}]}]},
   {clause,2868,
    [{var,2868,'F'},
     {var,2868,'A0'},
     {cons,2868,{var,2868,'E0'},{var,2868,'Es0'}}],
    [],
    [{match,2869,
      {tuple,2869,[{var,2869,'E'},{var,2869,'A1'}]},
      {call,2869,
       {atom,2869,var_mapfold},
       [{var,2869,'F'},{var,2869,'A0'},{var,2869,'E0'}]}},
     {match,2870,
      {tuple,2870,[{var,2870,'Es'},{var,2870,'A'}]},
      {call,2870,
       {atom,2870,var_mapfold},
       [{var,2870,'F'},{var,2870,'A1'},{var,2870,'Es0'}]}},
     {tuple,2871,
      [{cons,2871,{var,2871,'E'},{var,2871,'Es'}},{var,2871,'A'}]}]},
   {clause,2872,
    [{var,2872,'_F'},{var,2872,'A'},{var,2872,'E'}],
    [],
    [{tuple,2873,[{var,2873,'E'},{var,2873,'A'}]}]}]},
 {function,2875,family_list,1,
  [{clause,2875,
    [{var,2875,'L'}],
    [],
    [{call,2876,
      {remote,2876,{atom,2876,sofs},{atom,2876,to_external}},
      [{call,2876,{atom,2876,family},[{var,2876,'L'}]}]}]}]},
 {function,2878,family,1,
  [{clause,2878,
    [{var,2878,'L'}],
    [],
    [{call,2879,
      {remote,2879,{atom,2879,sofs},{atom,2879,relation_to_family}},
      [{call,2879,
        {remote,2879,{atom,2879,sofs},{atom,2879,relation}},
        [{var,2879,'L'}]}]}]}]},
 {function,2889,display_forms,1,
  [{clause,2889,[{var,2889,'_'}],[],[{atom,2890,ok}]}]}]
