edlin_expand
[{lists,reverse,1},{lists,nthtail,2},{lists,prefix,2}]
[]
[{function,35,expand,1,
  [{clause,35,
    [{var,35,'Bef0'}],
    [],
    [{match,36,
      {tuple,36,[{var,36,'Bef1'},{var,36,'Word'},{var,36,'_'}]},
      {call,36,
       {remote,36,{atom,36,edlin},{atom,36,over_word}},
       [{var,36,'Bef0'},{nil,36},{integer,36,0}]}},
     {'case',37,
      {call,37,{atom,37,over_white},[{var,37,'Bef1'},{nil,37},{integer,37,0}]},
      [{clause,38,
        [{tuple,38,
          [{cons,38,{char,38,58},{var,38,'Bef2'}},
           {var,38,'_White'},
           {var,38,'_Nwh'}]}],
        [],
        [{match,39,
          {tuple,39,[{var,39,'Bef3'},{var,39,'_White1'},{var,39,'_Nwh1'}]},
          {call,39,
           {atom,39,over_white},
           [{var,39,'Bef2'},{nil,39},{integer,39,0}]}},
         {match,40,
          {tuple,40,[{var,40,'_'},{var,40,'Mod'},{var,40,'_Nm'}]},
          {call,40,
           {remote,40,{atom,40,edlin},{atom,40,over_word}},
           [{var,40,'Bef3'},{nil,40},{integer,40,0}]}},
         {call,41,
          {atom,41,expand_function_name},
          [{var,41,'Mod'},{var,41,'Word'}]}]},
       {clause,42,
        [{tuple,42,[{var,42,'_'},{var,42,'_'},{var,42,'_'}]}],
        [],
        [{call,43,{atom,43,expand_module_name},[{var,43,'Word'}]}]}]}]}]},
 {function,46,expand_module_name,1,
  [{clause,46,
    [{var,46,'Prefix'}],
    [],
    [{call,47,
      {atom,47,match},
      [{var,47,'Prefix'},
       {call,47,{remote,47,{atom,47,code},{atom,47,all_loaded}},[]},
       {string,47,":"}]}]}]},
 {function,49,expand_function_name,2,
  [{clause,49,
    [{var,49,'ModStr'},{var,49,'FuncPrefix'}],
    [],
    [{'case',50,
      {call,50,{atom,50,to_atom},[{var,50,'ModStr'}]},
      [{clause,51,
        [{tuple,51,[{atom,51,ok},{var,51,'Mod'}]}],
        [],
        [{'case',52,
          {call,52,
           {remote,52,{atom,52,erlang},{atom,52,module_loaded}},
           [{var,52,'Mod'}]},
          [{clause,53,
            [{atom,53,true}],
            [],
            [{match,54,
              {var,54,'L'},
              {call,54,{remote,54,{var,54,'Mod'},{atom,54,module_info}},[]}},
             {'case',55,
              {call,55,
               {remote,55,{atom,55,lists},{atom,55,keyfind}},
               [{atom,55,exports},{integer,55,1},{var,55,'L'}]},
              [{clause,56,
                [{tuple,56,[{var,56,'_'},{var,56,'Exports'}]}],
                [],
                [{call,57,
                  {atom,57,match},
                  [{var,57,'FuncPrefix'},
                   {var,57,'Exports'},
                   {string,57,"("}]}]},
               {clause,58,
                [{var,58,'_'}],
                [],
                [{tuple,59,[{atom,59,no},{nil,59},{nil,59}]}]}]}]},
           {clause,61,
            [{atom,61,false}],
            [],
            [{tuple,62,[{atom,62,no},{nil,62},{nil,62}]}]}]}]},
       {clause,64,
        [{atom,64,error}],
        [],
        [{tuple,65,[{atom,65,no},{nil,65},{nil,65}]}]}]}]}]},
 {function,69,to_atom,1,
  [{clause,69,
    [{var,69,'Str'}],
    [],
    [{'case',70,
      {call,70,
       {remote,70,{atom,70,erl_scan},{atom,70,string}},
       [{var,70,'Str'}]},
      [{clause,71,
        [{tuple,71,
          [{atom,71,ok},
           {cons,71,
            {tuple,71,[{atom,71,atom},{var,71,'_'},{var,71,'A'}]},
            {nil,71}},
           {var,71,'_'}]}],
        [],
        [{tuple,72,[{atom,72,ok},{var,72,'A'}]}]},
       {clause,73,[{var,73,'_'}],[],[{atom,74,error}]}]}]}]},
 {function,77,match,3,
  [{clause,77,
    [{var,77,'Prefix'},{var,77,'Alts'},{var,77,'Extra0'}],
    [],
    [{match,78,{var,78,'Len'},{call,78,{atom,78,length},[{var,78,'Prefix'}]}},
     {match,79,
      {var,79,'Matches'},
      {call,79,
       {remote,79,{atom,79,lists},{atom,79,sort}},
       [{lc,80,
         {tuple,80,[{var,80,'S'},{var,80,'A'}]},
         [{generate,80,{tuple,80,[{var,80,'H'},{var,80,'A'}]},{var,80,'Alts'}},
          {call,81,
           {atom,81,prefix},
           [{var,81,'Prefix'},
            {match,81,
             {var,81,'S'},
             {call,81,
              {atom,81,hd},
              [{call,81,
                {remote,81,{atom,81,io_lib},{atom,81,fwrite}},
                [{string,81,"~w"},{cons,81,{var,81,'H'},{nil,81}}]}]}}]}]}]}},
     {'case',82,
      {call,82,
       {atom,82,longest_common_head},
       [{lc,82,
         {var,82,'N'},
         [{generate,82,
           {tuple,82,[{var,82,'N'},{var,82,'_'}]},
           {var,82,'Matches'}}]}]},
      [{clause,83,
        [{tuple,83,[{atom,83,partial},{nil,83}]}],
        [],
        [{tuple,84,[{atom,84,no},{nil,84},{var,84,'Matches'}]}]},
       {clause,85,
        [{tuple,85,[{atom,85,partial},{var,85,'Str'}]}],
        [],
        [{'case',86,
          {call,86,{atom,86,nthtail},[{var,86,'Len'},{var,86,'Str'}]},
          [{clause,87,
            [{nil,87}],
            [],
            [{tuple,88,[{atom,88,yes},{nil,88},{var,88,'Matches'}]}]},
           {clause,89,
            [{var,89,'Remain'}],
            [],
            [{tuple,90,[{atom,90,yes},{var,90,'Remain'},{nil,90}]}]}]}]},
       {clause,92,
        [{tuple,92,[{atom,92,complete},{var,92,'Str'}]}],
        [],
        [{match,93,
          {var,93,'Extra'},
          {'case',93,
           {tuple,93,[{var,93,'Extra0'},{var,93,'Matches'}]},
           [{clause,94,
             [{tuple,94,
               [{string,94,"("},
                {cons,94,
                 {tuple,94,[{var,94,'Str'},{integer,94,0}]},
                 {nil,94}}]}],
             [],
             [{string,94,"()"}]},
            {clause,95,
             [{tuple,95,[{var,95,'_'},{var,95,'_'}]}],
             [],
             [{var,95,'Extra0'}]}]}},
         {tuple,97,
          [{atom,97,yes},
           {op,97,'++',
            {call,97,{atom,97,nthtail},[{var,97,'Len'},{var,97,'Str'}]},
            {var,97,'Extra'}},
           {nil,97}]}]},
       {clause,98,
        [{atom,98,no}],
        [],
        [{tuple,99,[{atom,99,no},{nil,99},{nil,99}]}]}]}]}]},
 {function,103,format_matches,1,
  [{clause,103,
    [{var,103,'L'}],
    [],
    [{match,104,
      {var,104,'S'},
      {call,104,
       {atom,104,format_col},
       [{call,104,
         {remote,104,{atom,104,lists},{atom,104,sort}},
         [{var,104,'L'}]},
        {nil,104}]}},
     {cons,105,{string,105,"\n"},{var,105,'S'}}]}]},
 {function,107,format_col,2,
  [{clause,107,[{nil,107},{var,107,'_'}],[],[{nil,107}]},
   {clause,108,
    [{var,108,'L'},{var,108,'Acc'}],
    [],
    [{call,108,
      {atom,108,format_col},
      [{var,108,'L'},
       {call,108,{atom,108,field_width},[{var,108,'L'}]},
       {integer,108,0},
       {var,108,'Acc'}]}]}]},
 {function,110,format_col,4,
  [{clause,110,
    [{var,110,'X'},{var,110,'Width'},{var,110,'Len'},{var,110,'Acc'}],
    [[{op,110,'>',
       {op,110,'+',{var,110,'Width'},{var,110,'Len'}},
       {integer,110,79}}]],
    [{call,111,
      {atom,111,format_col},
      [{var,111,'X'},
       {var,111,'Width'},
       {integer,111,0},
       {cons,111,{string,111,"\n"},{var,111,'Acc'}}]}]},
   {clause,112,
    [{cons,112,{var,112,'A'},{var,112,'T'}},
     {var,112,'Width'},
     {var,112,'Len'},
     {var,112,'Acc0'}],
    [],
    [{match,113,
      {var,113,'H'},
      {'case',113,
       {var,113,'A'},
       [{clause,116,
         [{tuple,116,[{var,116,'H0'},{var,116,'I'}]}],
         [[{call,116,{atom,116,is_integer},[{var,116,'I'}]}]],
         [{op,117,'++',
           {var,117,'H0'},
           {op,117,'++',
            {string,117,"/"},
            {call,117,{atom,117,integer_to_list},[{var,117,'I'}]}}}]},
        {clause,118,
         [{tuple,118,[{var,118,'H1'},{var,118,'_'}]}],
         [],
         [{var,118,'H1'}]},
        {clause,119,[{var,119,'H2'}],[],[{var,119,'H2'}]}]}},
     {match,121,
      {var,121,'Acc'},
      {cons,121,
       {call,121,
        {remote,121,{atom,121,io_lib},{atom,121,format}},
        [{string,121,"~-*s"},
         {cons,121,{var,121,'Width'},{cons,121,{var,121,'H'},{nil,121}}}]},
       {var,121,'Acc0'}}},
     {call,122,
      {atom,122,format_col},
      [{var,122,'T'},
       {var,122,'Width'},
       {op,122,'+',{var,122,'Len'},{var,122,'Width'}},
       {var,122,'Acc'}]}]},
   {clause,123,
    [{nil,123},{var,123,'_'},{var,123,'_'},{var,123,'Acc'}],
    [],
    [{call,124,
      {remote,124,{atom,124,lists},{atom,124,reverse}},
      [{var,124,'Acc'},{string,124,"\n"}]}]}]},
 {function,126,field_width,1,
  [{clause,126,
    [{var,126,'L'}],
    [],
    [{call,126,{atom,126,field_width},[{var,126,'L'},{integer,126,0}]}]}]},
 {function,128,field_width,2,
  [{clause,128,
    [{cons,128,{tuple,128,[{var,128,'H'},{var,128,'_'}]},{var,128,'T'}},
     {var,128,'W'}],
    [],
    [{'case',129,
      {call,129,{atom,129,length},[{var,129,'H'}]},
      [{clause,130,
        [{var,130,'L'}],
        [[{op,130,'>',{var,130,'L'},{var,130,'W'}}]],
        [{call,130,{atom,130,field_width},[{var,130,'T'},{var,130,'L'}]}]},
       {clause,131,
        [{var,131,'_'}],
        [],
        [{call,131,{atom,131,field_width},[{var,131,'T'},{var,131,'W'}]}]}]}]},
   {clause,133,
    [{cons,133,{var,133,'H'},{var,133,'T'}},{var,133,'W'}],
    [],
    [{'case',134,
      {call,134,{atom,134,length},[{var,134,'H'}]},
      [{clause,135,
        [{var,135,'L'}],
        [[{op,135,'>',{var,135,'L'},{var,135,'W'}}]],
        [{call,135,{atom,135,field_width},[{var,135,'T'},{var,135,'L'}]}]},
       {clause,136,
        [{var,136,'_'}],
        [],
        [{call,136,{atom,136,field_width},[{var,136,'T'},{var,136,'W'}]}]}]}]},
   {clause,138,
    [{nil,138},{var,138,'W'}],
    [[{op,138,'<',{var,138,'W'},{integer,138,40}}]],
    [{op,139,'+',{var,139,'W'},{integer,139,4}}]},
   {clause,140,[{nil,140},{var,140,'_'}],[],[{integer,141,40}]}]},
 {function,143,longest_common_head,1,
  [{clause,143,[{nil,143}],[],[{atom,144,no}]},
   {clause,145,
    [{var,145,'LL'}],
    [],
    [{call,146,{atom,146,longest_common_head},[{var,146,'LL'},{nil,146}]}]}]},
 {function,148,longest_common_head,2,
  [{clause,148,
    [{cons,148,{nil,148},{var,148,'_'}},{var,148,'L'}],
    [],
    [{tuple,149,
      [{atom,149,partial},{call,149,{atom,149,reverse},[{var,149,'L'}]}]}]},
   {clause,150,
    [{var,150,'LL'},{var,150,'L'}],
    [],
    [{'case',151,
      {call,151,{atom,151,same_head},[{var,151,'LL'}]},
      [{clause,152,
        [{atom,152,true}],
        [],
        [{match,153,
          {cons,153,{cons,153,{var,153,'H'},{var,153,'_'}},{var,153,'_'}},
          {var,153,'LL'}},
         {match,154,
          {var,154,'LL1'},
          {call,154,{atom,154,all_tails},[{var,154,'LL'}]}},
         {'case',155,
          {call,155,{atom,155,all_nil},[{var,155,'LL1'}]},
          [{clause,156,
            [{atom,156,false}],
            [],
            [{call,157,
              {atom,157,longest_common_head},
              [{var,157,'LL1'},{cons,157,{var,157,'H'},{var,157,'L'}}]}]},
           {clause,158,
            [{atom,158,true}],
            [],
            [{tuple,159,
              [{atom,159,complete},
               {call,159,
                {atom,159,reverse},
                [{cons,159,{var,159,'H'},{var,159,'L'}}]}]}]}]}]},
       {clause,161,
        [{atom,161,false}],
        [],
        [{tuple,162,
          [{atom,162,partial},
           {call,162,{atom,162,reverse},[{var,162,'L'}]}]}]}]}]}]},
 {function,165,same_head,1,
  [{clause,165,
    [{cons,165,{cons,165,{var,165,'H'},{var,165,'_'}},{var,165,'T1'}}],
    [],
    [{call,165,{atom,165,same_head},[{var,165,'H'},{var,165,'T1'}]}]}]},
 {function,167,same_head,2,
  [{clause,167,
    [{var,167,'H'},
     {cons,167,{cons,167,{var,167,'H'},{var,167,'_'}},{var,167,'T'}}],
    [],
    [{call,167,{atom,167,same_head},[{var,167,'H'},{var,167,'T'}]}]},
   {clause,168,[{var,168,'_'},{nil,168}],[],[{atom,168,true}]},
   {clause,169,[{var,169,'_'},{var,169,'_'}],[],[{atom,169,false}]}]},
 {function,171,all_tails,1,
  [{clause,171,
    [{var,171,'LL'}],
    [],
    [{call,171,{atom,171,all_tails},[{var,171,'LL'},{nil,171}]}]}]},
 {function,173,all_tails,2,
  [{clause,173,
    [{cons,173,{cons,173,{var,173,'_'},{var,173,'T'}},{var,173,'T1'}},
     {var,173,'L'}],
    [],
    [{call,173,
      {atom,173,all_tails},
      [{var,173,'T1'},{cons,173,{var,173,'T'},{var,173,'L'}}]}]},
   {clause,174,[{nil,174},{var,174,'L'}],[],[{var,174,'L'}]}]},
 {function,176,all_nil,1,
  [{clause,176,[{nil,176}],[],[{atom,176,true}]},
   {clause,177,
    [{cons,177,{nil,177},{var,177,'Rest'}}],
    [],
    [{call,177,{atom,177,all_nil},[{var,177,'Rest'}]}]},
   {clause,178,[{var,178,'_'}],[],[{atom,178,false}]}]},
 {function,183,over_white,3,
  [{clause,183,
    [{cons,183,{char,183,32},{var,183,'Cs'}},{var,183,'Stack'},{var,183,'N'}],
    [],
    [{call,184,
      {atom,184,over_white},
      [{var,184,'Cs'},
       {cons,184,{char,184,32},{var,184,'Stack'}},
       {op,184,'+',{var,184,'N'},{integer,184,1}}]}]},
   {clause,185,
    [{cons,185,{char,185,9},{var,185,'Cs'}},{var,185,'Stack'},{var,185,'N'}],
    [],
    [{call,186,
      {atom,186,over_white},
      [{var,186,'Cs'},
       {cons,186,{char,186,9},{var,186,'Stack'}},
       {op,186,'+',{var,186,'N'},{integer,186,1}}]}]},
   {clause,187,
    [{var,187,'Cs'},{var,187,'Stack'},{var,187,'N'}],
    [[{call,187,{atom,187,is_list},[{var,187,'Cs'}]}]],
    [{tuple,188,[{var,188,'Cs'},{var,188,'Stack'},{var,188,'N'}]}]}]}]
