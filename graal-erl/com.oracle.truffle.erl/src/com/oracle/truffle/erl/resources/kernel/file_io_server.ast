file_io_server
[]
[]
[{function,40,format_error,1,
  [{clause,40,
    [{tuple,40,[{var,40,'_Line'},{atom,-1,file_io_server},{var,40,'Reason'}]}],
    [],
    [{call,41,
      {remote,41,{atom,41,io_lib},{atom,41,format}},
      [{string,41,"~w"},{cons,41,{var,41,'Reason'},{nil,41}}]}]},
   {clause,42,
    [{tuple,42,[{var,42,'_Line'},{var,42,'Mod'},{var,42,'Reason'}]}],
    [],
    [{call,43,
      {remote,43,{var,43,'Mod'},{atom,43,format_error}},
      [{var,43,'Reason'}]}]},
   {clause,44,
    [{atom,44,invalid_unicode}],
    [],
    [{call,45,
      {remote,45,{atom,45,io_lib},{atom,45,format}},
      [{string,45,"cannot translate from UTF-8"},{nil,45}]}]},
   {clause,46,
    [{var,46,'ErrorId'}],
    [],
    [{call,47,
      {remote,47,{atom,47,erl_posix_msg},{atom,47,message}},
      [{var,47,'ErrorId'}]}]}]},
 {function,49,start,3,
  [{clause,49,
    [{var,49,'Owner'},{var,49,'FileName'},{var,49,'ModeList'}],
    [[{call,50,{atom,50,is_pid},[{var,50,'Owner'}]},
      {op,50,'orelse',
       {call,50,{atom,50,is_list},[{var,50,'FileName'}]},
       {call,50,{atom,50,is_binary},[{var,50,'FileName'}]}},
      {call,50,{atom,50,is_list},[{var,50,'ModeList'}]}]],
    [{call,51,
      {atom,51,do_start},
      [{atom,51,spawn},
       {var,51,'Owner'},
       {var,51,'FileName'},
       {var,51,'ModeList'}]}]}]},
 {function,53,start_link,3,
  [{clause,53,
    [{var,53,'Owner'},{var,53,'FileName'},{var,53,'ModeList'}],
    [[{call,54,{atom,54,is_pid},[{var,54,'Owner'}]},
      {op,54,'orelse',
       {call,54,{atom,54,is_list},[{var,54,'FileName'}]},
       {call,54,{atom,54,is_binary},[{var,54,'FileName'}]}},
      {call,54,{atom,54,is_list},[{var,54,'ModeList'}]}]],
    [{call,55,
      {atom,55,do_start},
      [{atom,55,spawn_link},
       {var,55,'Owner'},
       {var,55,'FileName'},
       {var,55,'ModeList'}]}]}]},
 {function,60,do_start,4,
  [{clause,60,
    [{var,60,'Spawn'},
     {var,60,'Owner'},
     {var,60,'FileName'},
     {var,60,'ModeList'}],
    [],
    [{match,61,{var,61,'Self'},{call,61,{atom,61,self},[]}},
     {match,62,{var,62,'Ref'},{call,62,{atom,62,make_ref},[]}},
     {match,63,
      {var,63,'Utag'},
      {call,63,
       {remote,63,{atom,63,erlang},{atom,63,dt_spread_tag}},
       [{atom,63,true}]}},
     {match,64,
      {var,64,'Pid'},
      {call,65,
       {remote,65,{atom,65,erlang},{var,65,'Spawn'}},
       [{'fun',66,
         {clauses,
          [{clause,66,[],[],
            [{call,67,
              {remote,67,{atom,67,erlang},{atom,67,dt_restore_tag}},
              [{var,67,'Utag'}]},
             {'case',69,
              {call,69,{atom,69,parse_options},[{var,69,'ModeList'}]},
              [{clause,70,
                [{tuple,70,
                  [{var,70,'ReadMode'},
                   {var,70,'UnicodeMode'},
                   {var,70,'Opts'}]}],
                [],
                [{'case',71,
                  {call,71,
                   {remote,71,{atom,31,prim_file},{atom,71,open}},
                   [{var,71,'FileName'},{var,71,'Opts'}]},
                  [{clause,72,
                    [{match,72,
                      {tuple,72,[{atom,72,error},{var,72,'Reason'}]},
                      {var,72,'Error'}}],
                    [],
                    [{op,73,'!',
                      {var,73,'Self'},
                      {tuple,73,[{var,73,'Ref'},{var,73,'Error'}]}},
                     {call,74,{atom,74,exit},[{var,74,'Reason'}]}]},
                   {clause,75,
                    [{tuple,75,[{atom,75,ok},{var,75,'Handle'}]}],
                    [],
                    [{match,77,
                      {var,77,'M'},
                      {call,77,
                       {remote,77,{atom,77,erlang},{atom,77,monitor}},
                       [{atom,77,process},{var,77,'Owner'}]}},
                     {op,78,'!',
                      {var,78,'Self'},
                      {tuple,78,[{var,78,'Ref'},{atom,78,ok}]}},
                     {call,79,
                      {atom,79,server_loop},
                      [{tuple,80,
                        [{atom,80,state},
                         {var,80,'Handle'},
                         {var,81,'Owner'},
                         {var,82,'M'},
                         {bin,83,[]},
                         {var,84,'ReadMode'},
                         {var,85,'UnicodeMode'}]}]}]}]}]},
               {clause,87,
                [{match,87,
                  {tuple,87,[{atom,87,error},{var,87,'Reason1'}]},
                  {var,87,'Error1'}}],
                [],
                [{op,88,'!',
                  {var,88,'Self'},
                  {tuple,88,[{var,88,'Ref'},{var,88,'Error1'}]}},
                 {call,89,{atom,89,exit},[{var,89,'Reason1'}]}]}]}]}]}}]}},
     {call,92,
      {remote,92,{atom,92,erlang},{atom,92,dt_restore_tag}},
      [{var,92,'Utag'}]},
     {match,93,
      {var,93,'Mref'},
      {call,93,
       {remote,93,{atom,93,erlang},{atom,93,monitor}},
       [{atom,93,process},{var,93,'Pid'}]}},
     {'receive',94,
      [{clause,95,
        [{tuple,95,
          [{var,95,'Ref'},
           {match,95,
            {tuple,95,[{atom,95,error},{var,95,'_Reason'}]},
            {var,95,'Error'}}]}],
        [],
        [{call,96,
          {remote,96,{atom,96,erlang},{atom,96,demonitor}},
          [{var,96,'Mref'},{cons,96,{atom,96,flush},{nil,96}}]},
         {var,97,'Error'}]},
       {clause,98,
        [{tuple,98,[{var,98,'Ref'},{atom,98,ok}]}],
        [],
        [{call,99,
          {remote,99,{atom,99,erlang},{atom,99,demonitor}},
          [{var,99,'Mref'}]},
         {'receive',100,
          [{clause,101,
            [{tuple,101,
              [{atom,101,'DOWN'},
               {var,101,'Mref'},
               {var,101,'_'},
               {var,101,'_'},
               {var,101,'Reason'}]}],
            [],
            [{tuple,102,[{atom,102,error},{var,102,'Reason'}]}]}],
          {integer,103,0},
          [{tuple,104,[{atom,104,ok},{var,104,'Pid'}]}]}]},
       {clause,106,
        [{tuple,106,
          [{atom,106,'DOWN'},
           {var,106,'Mref'},
           {var,106,'_'},
           {var,106,'_'},
           {var,106,'Reason'}]}],
        [],
        [{tuple,107,[{atom,107,error},{var,107,'Reason'}]}]}]}]}]},
 {function,111,parse_options,1,
  [{clause,111,
    [{var,111,'List'}],
    [],
    [{call,112,
      {atom,112,parse_options},
      [{call,112,{atom,112,expand_encoding},[{var,112,'List'}]},
       {atom,112,list},
       {atom,112,latin1},
       {nil,112}]}]}]},
 {function,114,parse_options,4,
  [{clause,114,
    [{nil,114},{atom,114,list},{var,114,'Uni'},{var,114,'Acc'}],
    [],
    [{tuple,115,
      [{atom,115,list},
       {var,115,'Uni'},
       {cons,115,
        {atom,115,binary},
        {call,115,
         {remote,115,{atom,115,lists},{atom,115,reverse}},
         [{var,115,'Acc'}]}}]}]},
   {clause,116,
    [{nil,116},{atom,116,binary},{var,116,'Uni'},{var,116,'Acc'}],
    [],
    [{tuple,117,
      [{atom,117,binary},
       {var,117,'Uni'},
       {call,117,
        {remote,117,{atom,117,lists},{atom,117,reverse}},
        [{var,117,'Acc'}]}]}]},
   {clause,118,
    [{cons,118,
      {tuple,118,[{atom,118,encoding},{var,118,'Encoding'}]},
      {var,118,'T'}},
     {var,118,'RMode'},
     {var,118,'_'},
     {var,118,'Acc'}],
    [],
    [{'case',119,
      {call,119,{atom,119,valid_enc},[{var,119,'Encoding'}]},
      [{clause,120,
        [{tuple,120,[{atom,120,ok},{var,120,'ExpandedEnc'}]}],
        [],
        [{call,121,
          {atom,121,parse_options},
          [{var,121,'T'},
           {var,121,'RMode'},
           {var,121,'ExpandedEnc'},
           {var,121,'Acc'}]}]},
       {clause,122,
        [{match,122,
          {tuple,122,[{atom,122,error},{var,122,'_Reason'}]},
          {var,122,'Error'}}],
        [],
        [{var,123,'Error'}]}]}]},
   {clause,125,
    [{cons,125,{atom,125,binary},{var,125,'T'}},
     {var,125,'_'},
     {var,125,'Uni'},
     {var,125,'Acc'}],
    [],
    [{call,126,
      {atom,126,parse_options},
      [{var,126,'T'},
       {atom,126,binary},
       {var,126,'Uni'},
       {cons,126,{atom,126,binary},{var,126,'Acc'}}]}]},
   {clause,127,
    [{cons,127,{var,127,'H'},{var,127,'T'}},
     {var,127,'R'},
     {var,127,'U'},
     {var,127,'Acc'}],
    [],
    [{call,128,
      {atom,128,parse_options},
      [{var,128,'T'},
       {var,128,'R'},
       {var,128,'U'},
       {cons,128,{var,128,'H'},{var,128,'Acc'}}]}]}]},
 {function,130,expand_encoding,1,
  [{clause,130,[{nil,130}],[],[{nil,131}]},
   {clause,132,
    [{cons,132,{atom,132,latin1},{var,132,'T'}}],
    [],
    [{cons,133,
      {tuple,133,[{atom,133,encoding},{atom,133,latin1}]},
      {call,133,{atom,133,expand_encoding},[{var,133,'T'}]}}]},
   {clause,134,
    [{cons,134,{atom,134,unicode},{var,134,'T'}}],
    [],
    [{cons,135,
      {tuple,135,[{atom,135,encoding},{atom,135,unicode}]},
      {call,135,{atom,135,expand_encoding},[{var,135,'T'}]}}]},
   {clause,136,
    [{cons,136,{var,136,'H'},{var,136,'T'}}],
    [],
    [{cons,137,
      {var,137,'H'},
      {call,137,{atom,137,expand_encoding},[{var,137,'T'}]}}]}]},
 {function,139,valid_enc,1,
  [{clause,139,
    [{atom,139,latin1}],
    [],
    [{tuple,140,[{atom,140,ok},{atom,140,latin1}]}]},
   {clause,141,
    [{atom,141,utf8}],
    [],
    [{tuple,142,[{atom,142,ok},{atom,142,unicode}]}]},
   {clause,143,
    [{atom,143,unicode}],
    [],
    [{tuple,144,[{atom,144,ok},{atom,144,unicode}]}]},
   {clause,145,
    [{atom,145,utf16}],
    [],
    [{tuple,146,
      [{atom,146,ok},{tuple,146,[{atom,146,utf16},{atom,146,big}]}]}]},
   {clause,147,
    [{tuple,147,[{atom,147,utf16},{atom,147,big}]}],
    [],
    [{tuple,148,
      [{atom,148,ok},{tuple,148,[{atom,148,utf16},{atom,148,big}]}]}]},
   {clause,149,
    [{tuple,149,[{atom,149,utf16},{atom,149,little}]}],
    [],
    [{tuple,150,
      [{atom,150,ok},{tuple,150,[{atom,150,utf16},{atom,150,little}]}]}]},
   {clause,151,
    [{atom,151,utf32}],
    [],
    [{tuple,152,
      [{atom,152,ok},{tuple,152,[{atom,152,utf32},{atom,152,big}]}]}]},
   {clause,153,
    [{tuple,153,[{atom,153,utf32},{atom,153,big}]}],
    [],
    [{tuple,154,
      [{atom,154,ok},{tuple,154,[{atom,154,utf32},{atom,154,big}]}]}]},
   {clause,155,
    [{tuple,155,[{atom,155,utf32},{atom,155,little}]}],
    [],
    [{tuple,156,
      [{atom,156,ok},{tuple,156,[{atom,156,utf32},{atom,156,little}]}]}]},
   {clause,157,
    [{var,157,'_Other'}],
    [],
    [{tuple,158,[{atom,158,error},{atom,158,badarg}]}]}]},
 {function,161,server_loop,1,
  [{clause,161,
    [{match,161,
      {tuple,161,
       [{atom,161,state},
        {var,161,'_'},
        {var,161,'_'},
        {var,161,'Mref'},
        {var,161,'_'},
        {var,161,'_'},
        {var,161,'_'}]},
      {var,161,'State'}}],
    [],
    [{'receive',162,
      [{clause,163,
        [{tuple,163,
          [{atom,163,file_request},
           {var,163,'From'},
           {var,163,'ReplyAs'},
           {var,163,'Request'}]}],
        [[{call,163,{atom,163,is_pid},[{var,163,'From'}]}]],
        [{'case',164,
          {call,164,
           {atom,164,file_request},
           [{var,164,'Request'},{var,164,'State'}]},
          [{clause,165,
            [{tuple,165,
              [{atom,165,reply},{var,165,'Reply'},{var,165,'NewState'}]}],
            [],
            [{match,166,
              {var,166,'_'},
              {call,166,
               {atom,166,file_reply},
               [{var,166,'From'},{var,166,'ReplyAs'},{var,166,'Reply'}]}},
             {call,167,{atom,167,server_loop},[{var,167,'NewState'}]}]},
           {clause,168,
            [{tuple,168,
              [{atom,168,error},{var,168,'Reply'},{var,168,'NewState'}]}],
            [],
            [{match,171,
              {var,171,'_'},
              {call,171,
               {atom,171,file_reply},
               [{var,171,'From'},{var,171,'ReplyAs'},{var,171,'Reply'}]}},
             {call,172,{atom,172,server_loop},[{var,172,'NewState'}]}]},
           {clause,173,
            [{tuple,173,
              [{atom,173,stop},
               {var,173,'Reason'},
               {var,173,'Reply'},
               {var,173,'_NewState'}]}],
            [],
            [{match,174,
              {var,174,'_'},
              {call,174,
               {atom,174,file_reply},
               [{var,174,'From'},{var,174,'ReplyAs'},{var,174,'Reply'}]}},
             {call,175,{atom,175,exit},[{var,175,'Reason'}]}]}]}]},
       {clause,177,
        [{tuple,177,
          [{atom,177,io_request},
           {var,177,'From'},
           {var,177,'ReplyAs'},
           {var,177,'Request'}]}],
        [[{call,177,{atom,177,is_pid},[{var,177,'From'}]}]],
        [{'case',178,
          {call,178,
           {atom,178,io_request},
           [{var,178,'Request'},{var,178,'State'}]},
          [{clause,179,
            [{tuple,179,
              [{atom,179,reply},{var,179,'Reply'},{var,179,'NewState'}]}],
            [],
            [{match,180,
              {var,180,'_'},
              {call,180,
               {atom,180,io_reply},
               [{var,180,'From'},{var,180,'ReplyAs'},{var,180,'Reply'}]}},
             {call,181,{atom,181,server_loop},[{var,181,'NewState'}]}]},
           {clause,182,
            [{tuple,182,
              [{atom,182,error},{var,182,'Reply'},{var,182,'NewState'}]}],
            [],
            [{match,185,
              {var,185,'_'},
              {call,185,
               {atom,185,io_reply},
               [{var,185,'From'},{var,185,'ReplyAs'},{var,185,'Reply'}]}},
             {call,186,{atom,186,server_loop},[{var,186,'NewState'}]}]},
           {clause,187,
            [{tuple,187,
              [{atom,187,stop},
               {var,187,'Reason'},
               {var,187,'Reply'},
               {var,187,'_NewState'}]}],
            [],
            [{match,188,
              {var,188,'_'},
              {call,188,
               {atom,188,io_reply},
               [{var,188,'From'},{var,188,'ReplyAs'},{var,188,'Reply'}]}},
             {call,189,{atom,189,exit},[{var,189,'Reason'}]}]}]}]},
       {clause,191,
        [{tuple,191,
          [{atom,191,'DOWN'},
           {var,191,'Mref'},
           {var,191,'_'},
           {var,191,'_'},
           {var,191,'Reason'}]}],
        [],
        [{call,192,{atom,192,exit},[{var,192,'Reason'}]}]},
       {clause,193,
        [{var,193,'_'}],
        [],
        [{call,194,{atom,194,server_loop},[{var,194,'State'}]}]}]}]}]},
 {function,197,file_reply,3,
  [{clause,197,
    [{var,197,'From'},{var,197,'ReplyAs'},{var,197,'Reply'}],
    [],
    [{op,198,'!',
      {var,198,'From'},
      {tuple,198,
       [{atom,198,file_reply},{var,198,'ReplyAs'},{var,198,'Reply'}]}}]}]},
 {function,200,io_reply,3,
  [{clause,200,
    [{var,200,'From'},{var,200,'ReplyAs'},{var,200,'Reply'}],
    [],
    [{op,201,'!',
      {var,201,'From'},
      {tuple,201,
       [{atom,201,io_reply},{var,201,'ReplyAs'},{var,201,'Reply'}]}}]}]},
 {function,206,file_request,2,
  [{clause,206,
    [{tuple,206,
      [{atom,206,advise},
       {var,206,'Offset'},
       {var,206,'Length'},
       {var,206,'Advise'}]},
     {match,207,
      {tuple,207,
       [{atom,207,state},
        {var,207,'Handle'},
        {var,207,'_'},
        {var,207,'_'},
        {var,207,'_'},
        {var,207,'_'},
        {var,207,'_'}]},
      {var,207,'State'}}],
    [],
    [{'case',208,
      {call,208,
       {remote,208,{atom,31,prim_file},{atom,208,advise}},
       [{var,208,'Handle'},
        {var,208,'Offset'},
        {var,208,'Length'},
        {var,208,'Advise'}]},
      [{clause,209,
        [{match,209,
          {tuple,209,[{atom,209,error},{var,209,'_'}]},
          {var,209,'Reply'}}],
        [],
        [{tuple,210,
          [{atom,210,stop},
           {atom,210,normal},
           {var,210,'Reply'},
           {var,210,'State'}]}]},
       {clause,211,
        [{var,211,'Reply'}],
        [],
        [{tuple,212,
          [{atom,212,reply},{var,212,'Reply'},{var,212,'State'}]}]}]}]},
   {clause,214,
    [{tuple,214,[{atom,214,allocate},{var,214,'Offset'},{var,214,'Length'}]},
     {match,215,
      {tuple,215,
       [{atom,215,state},
        {var,215,'Handle'},
        {var,215,'_'},
        {var,215,'_'},
        {var,215,'_'},
        {var,215,'_'},
        {var,215,'_'}]},
      {var,215,'State'}}],
    [],
    [{match,216,
      {var,216,'Reply'},
      {call,216,
       {remote,216,{atom,31,prim_file},{atom,216,allocate}},
       [{var,216,'Handle'},{var,216,'Offset'},{var,216,'Length'}]}},
     {tuple,217,[{atom,217,reply},{var,217,'Reply'},{var,217,'State'}]}]},
   {clause,218,
    [{tuple,218,[{atom,218,pread},{var,218,'At'},{var,218,'Sz'}]},
     {match,219,
      {tuple,219,
       [{atom,219,state},
        {var,219,'Handle'},
        {var,219,'_'},
        {var,219,'_'},
        {var,219,'Buf'},
        {var,219,'ReadMode'},
        {var,219,'_'}]},
      {var,219,'State'}}],
    [],
    [{'case',220,
      {call,220,
       {atom,220,position},
       [{var,220,'Handle'},{var,220,'At'},{var,220,'Buf'}]},
      [{clause,221,
        [{tuple,221,[{atom,221,ok},{var,221,'_Offs'}]}],
        [],
        [{'case',222,
          {call,222,
           {remote,222,{atom,31,prim_file},{atom,222,read}},
           [{var,222,'Handle'},{var,222,'Sz'}]},
          [{clause,223,
            [{tuple,223,[{atom,223,ok},{var,223,'Bin'}]}],
            [[{op,223,'=:=',{var,223,'ReadMode'},{atom,223,list}}]],
            [{call,224,
              {atom,224,std_reply},
              [{tuple,224,
                [{atom,224,ok},
                 {call,224,{atom,224,binary_to_list},[{var,224,'Bin'}]}]},
               {var,224,'State'}]}]},
           {clause,225,
            [{var,225,'Reply'}],
            [],
            [{call,226,
              {atom,226,std_reply},
              [{var,226,'Reply'},{var,226,'State'}]}]}]}]},
       {clause,228,
        [{var,228,'Reply'}],
        [],
        [{call,229,
          {atom,229,std_reply},
          [{var,229,'Reply'},{var,229,'State'}]}]}]}]},
   {clause,231,
    [{tuple,231,[{atom,231,pwrite},{var,231,'At'},{var,231,'Data'}]},
     {match,232,
      {tuple,232,
       [{atom,232,state},
        {var,232,'Handle'},
        {var,232,'_'},
        {var,232,'_'},
        {var,232,'Buf'},
        {var,232,'_'},
        {var,232,'_'}]},
      {var,232,'State'}}],
    [],
    [{'case',233,
      {call,233,
       {atom,233,position},
       [{var,233,'Handle'},{var,233,'At'},{var,233,'Buf'}]},
      [{clause,234,
        [{tuple,234,[{atom,234,ok},{var,234,'_Offs'}]}],
        [],
        [{call,235,
          {atom,235,std_reply},
          [{call,235,
            {remote,235,{atom,31,prim_file},{atom,235,write}},
            [{var,235,'Handle'},{var,235,'Data'}]},
           {var,235,'State'}]}]},
       {clause,236,
        [{var,236,'Reply'}],
        [],
        [{call,237,
          {atom,237,std_reply},
          [{var,237,'Reply'},{var,237,'State'}]}]}]}]},
   {clause,239,
    [{atom,239,datasync},
     {match,240,
      {tuple,240,
       [{atom,240,state},
        {var,240,'Handle'},
        {var,240,'_'},
        {var,240,'_'},
        {var,240,'_'},
        {var,240,'_'},
        {var,240,'_'}]},
      {var,240,'State'}}],
    [],
    [{'case',241,
      {call,241,
       {remote,241,{atom,31,prim_file},{atom,241,datasync}},
       [{var,241,'Handle'}]},
      [{clause,242,
        [{match,242,
          {tuple,242,[{atom,242,error},{var,242,'_'}]},
          {var,242,'Reply'}}],
        [],
        [{tuple,243,
          [{atom,243,stop},
           {atom,243,normal},
           {var,243,'Reply'},
           {var,243,'State'}]}]},
       {clause,244,
        [{var,244,'Reply'}],
        [],
        [{tuple,245,
          [{atom,245,reply},{var,245,'Reply'},{var,245,'State'}]}]}]}]},
   {clause,247,
    [{atom,247,sync},
     {match,248,
      {tuple,248,
       [{atom,248,state},
        {var,248,'Handle'},
        {var,248,'_'},
        {var,248,'_'},
        {var,248,'_'},
        {var,248,'_'},
        {var,248,'_'}]},
      {var,248,'State'}}],
    [],
    [{'case',249,
      {call,249,
       {remote,249,{atom,31,prim_file},{atom,249,sync}},
       [{var,249,'Handle'}]},
      [{clause,250,
        [{match,250,
          {tuple,250,[{atom,250,error},{var,250,'_'}]},
          {var,250,'Reply'}}],
        [],
        [{tuple,251,
          [{atom,251,stop},
           {atom,251,normal},
           {var,251,'Reply'},
           {var,251,'State'}]}]},
       {clause,252,
        [{var,252,'Reply'}],
        [],
        [{tuple,253,
          [{atom,253,reply},{var,253,'Reply'},{var,253,'State'}]}]}]}]},
   {clause,255,
    [{atom,255,close},
     {match,256,
      {tuple,256,
       [{atom,256,state},
        {var,256,'Handle'},
        {var,256,'_'},
        {var,256,'_'},
        {var,256,'_'},
        {var,256,'_'},
        {var,256,'_'}]},
      {var,256,'State'}}],
    [],
    [{tuple,257,
      [{atom,257,stop},
       {atom,257,normal},
       {call,257,
        {remote,257,{atom,31,prim_file},{atom,257,close}},
        [{var,257,'Handle'}]},
       {call,257,
        {remote,257,{atom,257,erlang},{atom,257,setelement}},
        [{integer,257,5},{var,257,'State'},{bin,257,[]}]}]}]},
   {clause,258,
    [{tuple,258,[{atom,258,position},{var,258,'At'}]},
     {match,259,
      {tuple,259,
       [{atom,259,state},
        {var,259,'Handle'},
        {var,259,'_'},
        {var,259,'_'},
        {var,259,'Buf'},
        {var,259,'_'},
        {var,259,'_'}]},
      {var,259,'State'}}],
    [],
    [{call,260,
      {atom,260,std_reply},
      [{call,260,
        {atom,260,position},
        [{var,260,'Handle'},{var,260,'At'},{var,260,'Buf'}]},
       {var,260,'State'}]}]},
   {clause,261,
    [{atom,261,truncate},
     {match,262,
      {tuple,262,
       [{atom,262,state},
        {var,262,'Handle'},
        {var,262,'_'},
        {var,262,'_'},
        {var,262,'_'},
        {var,262,'_'},
        {var,262,'_'}]},
      {var,262,'State'}}],
    [],
    [{'case',263,
      {call,263,
       {remote,263,{atom,31,prim_file},{atom,263,truncate}},
       [{var,263,'Handle'}]},
      [{clause,264,
        [{match,264,
          {tuple,264,[{atom,264,error},{var,264,'_Reason'}]},
          {var,264,'Reply'}}],
        [],
        [{tuple,265,
          [{atom,265,stop},
           {atom,265,normal},
           {var,265,'Reply'},
           {call,265,
            {remote,265,{atom,265,erlang},{atom,265,setelement}},
            [{integer,265,5},{var,265,'State'},{bin,265,[]}]}]}]},
       {clause,266,
        [{var,266,'Reply'}],
        [],
        [{tuple,267,
          [{atom,267,reply},{var,267,'Reply'},{var,267,'State'}]}]}]}]},
   {clause,269,
    [{var,269,'Unknown'},
     {match,270,
      {tuple,270,
       [{atom,270,state},
        {var,270,'_'},
        {var,270,'_'},
        {var,270,'_'},
        {var,270,'_'},
        {var,270,'_'},
        {var,270,'_'}]},
      {var,270,'State'}}],
    [],
    [{match,271,
      {var,271,'Reason'},
      {tuple,271,[{atom,271,request},{var,271,'Unknown'}]}},
     {tuple,272,
      [{atom,272,error},
       {tuple,272,[{atom,272,error},{var,272,'Reason'}]},
       {var,272,'State'}]}]}]},
 {function,274,std_reply,2,
  [{clause,274,
    [{match,274,
      {tuple,274,[{atom,274,error},{var,274,'_'}]},
      {var,274,'Reply'}},
     {var,274,'State'}],
    [],
    [{tuple,275,
      [{atom,275,error},
       {var,275,'Reply'},
       {call,275,
        {remote,275,{atom,275,erlang},{atom,275,setelement}},
        [{integer,275,5},{var,275,'State'},{bin,275,[]}]}]}]},
   {clause,276,
    [{var,276,'Reply'},{var,276,'State'}],
    [],
    [{tuple,277,
      [{atom,277,reply},
       {var,277,'Reply'},
       {call,277,
        {remote,277,{atom,277,erlang},{atom,277,setelement}},
        [{integer,277,5},{var,277,'State'},{bin,277,[]}]}]}]}]},
 {function,283,io_request,2,
  [{clause,283,
    [{tuple,283,[{atom,283,put_chars},{var,283,'Enc'},{var,283,'Chars'}]},
     {match,284,
      {tuple,284,
       [{atom,284,state},
        {var,284,'_'},
        {var,284,'_'},
        {var,284,'_'},
        {bin,284,[]},
        {var,284,'_'},
        {var,284,'_'}]},
      {var,284,'State'}}],
    [],
    [{call,285,
      {atom,285,put_chars},
      [{var,285,'Chars'},{var,285,'Enc'},{var,285,'State'}]}]},
   {clause,286,
    [{tuple,286,[{atom,286,put_chars},{var,286,'Enc'},{var,286,'Chars'}]},
     {match,287,
      {tuple,287,
       [{atom,287,state},
        {var,287,'Handle'},
        {var,287,'_'},
        {var,287,'_'},
        {var,287,'Buf'},
        {var,287,'_'},
        {var,287,'_'}]},
      {var,287,'State'}}],
    [],
    [{'case',288,
      {call,288,
       {atom,288,position},
       [{var,288,'Handle'},{atom,288,cur},{var,288,'Buf'}]},
      [{clause,289,
        [{match,289,
          {tuple,289,[{atom,289,error},{var,289,'_'}]},
          {var,289,'Reply'}}],
        [],
        [{tuple,290,
          [{atom,290,stop},
           {atom,290,normal},
           {var,290,'Reply'},
           {call,290,
            {remote,290,{atom,290,erlang},{atom,290,setelement}},
            [{integer,290,5},{var,290,'State'},{bin,290,[]}]}]}]},
       {clause,291,
        [{var,291,'_'}],
        [],
        [{call,292,
          {atom,292,put_chars},
          [{var,292,'Chars'},
           {var,292,'Enc'},
           {call,292,
            {remote,292,{atom,292,erlang},{atom,292,setelement}},
            [{integer,292,5},{var,292,'State'},{bin,292,[]}]}]}]}]}]},
   {clause,294,
    [{tuple,294,
      [{atom,294,put_chars},
       {var,294,'Enc'},
       {var,294,'Mod'},
       {var,294,'Func'},
       {var,294,'Args'}]},
     {match,295,
      {tuple,295,
       [{atom,295,state},
        {var,295,'_'},
        {var,295,'_'},
        {var,295,'_'},
        {var,295,'_'},
        {var,295,'_'},
        {var,295,'_'}]},
      {var,295,'State'}}],
    [],
    [{'case',296,
      {'catch',296,
       {call,296,
        {atom,296,apply},
        [{var,296,'Mod'},{var,296,'Func'},{var,296,'Args'}]}},
      [{clause,297,
        [{var,297,'Chars'}],
        [[{call,297,{atom,297,is_list},[{var,297,'Chars'}]}],
         [{call,297,{atom,297,is_binary},[{var,297,'Chars'}]}]],
        [{call,298,
          {atom,298,io_request},
          [{tuple,298,
            [{atom,298,put_chars},{var,298,'Enc'},{var,298,'Chars'}]},
           {var,298,'State'}]}]},
       {clause,299,
        [{var,299,'_'}],
        [],
        [{tuple,300,
          [{atom,300,error},
           {tuple,300,[{atom,300,error},{var,300,'Func'}]},
           {var,300,'State'}]}]}]}]},
   {clause,304,
    [{tuple,304,
      [{atom,304,get_until},
       {var,304,'Enc'},
       {var,304,'_Prompt'},
       {var,304,'Mod'},
       {var,304,'Func'},
       {var,304,'XtraArgs'}]},
     {match,305,
      {tuple,305,
       [{atom,305,state},
        {atom,305,undefined},
        {atom,305,undefined},
        {atom,305,undefined},
        {atom,305,undefined},
        {atom,305,undefined},
        {atom,305,undefined}]},
      {var,305,'State'}}],
    [],
    [{call,306,
      {atom,306,get_chars},
      [{atom,306,io_lib},
       {atom,306,get_until},
       {tuple,306,[{var,306,'Mod'},{var,306,'Func'},{var,306,'XtraArgs'}]},
       {var,306,'Enc'},
       {var,306,'State'}]}]},
   {clause,307,
    [{tuple,307,
      [{atom,307,get_chars},
       {var,307,'Enc'},
       {var,307,'_Prompt'},
       {var,307,'N'}]},
     {match,308,
      {tuple,308,
       [{atom,308,state},
        {atom,308,undefined},
        {atom,308,undefined},
        {atom,308,undefined},
        {atom,308,undefined},
        {atom,308,undefined},
        {atom,308,undefined}]},
      {var,308,'State'}}],
    [],
    [{call,309,
      {atom,309,get_chars},
      [{var,309,'N'},{var,309,'Enc'},{var,309,'State'}]}]},
   {clause,311,
    [{tuple,311,[{atom,311,get_line},{var,311,'OutEnc'},{var,311,'_Prompt'}]},
     {match,311,
      {tuple,311,
       [{atom,311,state},
        {atom,311,undefined},
        {atom,311,undefined},
        {atom,311,undefined},
        {var,311,'Buf'},
        {var,311,'Mode'},
        {var,311,'InEnc'}]},
      {var,311,'State0'}}],
    [],
    [{'try',312,
      [{match,314,
        {var,314,'WorkEnc'},
        {'case',314,
         {var,314,'InEnc'},
         [{clause,315,
           [{tuple,315,[{var,315,'_'},{var,315,'_'}]}],
           [],
           [{var,315,'OutEnc'}]},
          {clause,316,[{var,316,'_'}],[],[{var,316,'InEnc'}]}]}},
       {match,318,
        {tuple,318,[{var,318,'Res'},{var,318,'State'}]},
        {call,318,
         {atom,318,get_line},
         [{atom,318,start},
          {call,318,
           {atom,318,convert_enc},
           [{var,318,'Buf'},{var,318,'InEnc'},{var,318,'WorkEnc'}]},
          {var,318,'WorkEnc'},
          {var,318,'State0'}]}},
       {tuple,319,
        [{atom,319,reply},
         {call,319,
          {atom,319,cast},
          [{var,319,'Res'},
           {var,319,'Mode'},
           {var,319,'WorkEnc'},
           {var,319,'OutEnc'}]},
         {var,319,'State'}]}],
      [],
      [{clause,320,
        [{tuple,320,[{atom,320,exit},{var,320,'ExError'},{var,320,'_'}]}],
        [],
        [{tuple,321,
          [{atom,321,stop},
           {var,321,'ExError'},
           {tuple,321,[{atom,321,error},{var,321,'ExError'}]},
           {call,321,
            {remote,321,{atom,321,erlang},{atom,321,setelement}},
            [{integer,321,5},{var,321,'State0'},{bin,321,[]}]}]}]}],
      []}]},
   {clause,324,
    [{tuple,324,[{atom,324,setopts},{var,324,'Opts'}]},
     {match,325,
      {tuple,325,
       [{atom,325,state},
        {atom,325,undefined},
        {atom,325,undefined},
        {atom,325,undefined},
        {atom,325,undefined},
        {atom,325,undefined},
        {atom,325,undefined}]},
      {var,325,'State'}}],
    [[{call,325,{atom,325,is_list},[{var,325,'Opts'}]}]],
    [{call,326,{atom,326,setopts},[{var,326,'Opts'},{var,326,'State'}]}]},
   {clause,328,
    [{atom,328,getopts},
     {match,329,
      {tuple,329,
       [{atom,329,state},
        {atom,329,undefined},
        {atom,329,undefined},
        {atom,329,undefined},
        {atom,329,undefined},
        {atom,329,undefined},
        {atom,329,undefined}]},
      {var,329,'State'}}],
    [],
    [{call,330,{atom,330,getopts},[{var,330,'State'}]}]},
   {clause,333,
    [{tuple,333,[{atom,333,put_chars},{var,333,'Chars'}]},
     {match,333,
      {tuple,333,
       [{atom,333,state},
        {atom,333,undefined},
        {atom,333,undefined},
        {atom,333,undefined},
        {atom,333,undefined},
        {atom,333,undefined},
        {atom,333,undefined}]},
      {var,333,'State'}}],
    [],
    [{call,334,
      {atom,334,io_request},
      [{tuple,334,[{atom,334,put_chars},{atom,334,latin1},{var,334,'Chars'}]},
       {var,334,'State'}]}]},
   {clause,335,
    [{tuple,335,
      [{atom,335,put_chars},
       {var,335,'Mod'},
       {var,335,'Func'},
       {var,335,'Args'}]},
     {match,335,
      {tuple,335,
       [{atom,335,state},
        {atom,335,undefined},
        {atom,335,undefined},
        {atom,335,undefined},
        {atom,335,undefined},
        {atom,335,undefined},
        {atom,335,undefined}]},
      {var,335,'State'}}],
    [],
    [{call,336,
      {atom,336,io_request},
      [{tuple,336,
        [{atom,336,put_chars},
         {atom,336,latin1},
         {var,336,'Mod'},
         {var,336,'Func'},
         {var,336,'Args'}]},
       {var,336,'State'}]}]},
   {clause,337,
    [{tuple,337,
      [{atom,337,get_until},
       {var,337,'_Prompt'},
       {var,337,'Mod'},
       {var,337,'Func'},
       {var,337,'XtraArgs'}]},
     {match,337,
      {tuple,337,
       [{atom,337,state},
        {atom,337,undefined},
        {atom,337,undefined},
        {atom,337,undefined},
        {atom,337,undefined},
        {atom,337,undefined},
        {atom,337,undefined}]},
      {var,337,'State'}}],
    [],
    [{call,338,
      {atom,338,io_request},
      [{tuple,338,
        [{atom,338,get_until},
         {atom,338,latin1},
         {var,338,'_Prompt'},
         {var,338,'Mod'},
         {var,338,'Func'},
         {var,338,'XtraArgs'}]},
       {var,338,'State'}]}]},
   {clause,339,
    [{tuple,339,[{atom,339,get_chars},{var,339,'_Prompt'},{var,339,'N'}]},
     {match,339,
      {tuple,339,
       [{atom,339,state},
        {atom,339,undefined},
        {atom,339,undefined},
        {atom,339,undefined},
        {atom,339,undefined},
        {atom,339,undefined},
        {atom,339,undefined}]},
      {var,339,'State'}}],
    [],
    [{call,340,
      {atom,340,io_request},
      [{tuple,340,
        [{atom,340,get_chars},
         {atom,340,latin1},
         {var,340,'_Prompt'},
         {var,340,'N'}]},
       {var,340,'State'}]}]},
   {clause,341,
    [{tuple,341,[{atom,341,get_line},{var,341,'_Prompt'}]},
     {match,341,
      {tuple,341,
       [{atom,341,state},
        {atom,341,undefined},
        {atom,341,undefined},
        {atom,341,undefined},
        {atom,341,undefined},
        {atom,341,undefined},
        {atom,341,undefined}]},
      {var,341,'State'}}],
    [],
    [{call,342,
      {atom,342,io_request},
      [{tuple,342,[{atom,342,get_line},{atom,342,latin1},{var,342,'_Prompt'}]},
       {var,342,'State'}]}]},
   {clause,344,
    [{tuple,344,[{atom,344,requests},{var,344,'Requests'}]},
     {match,345,
      {tuple,345,
       [{atom,345,state},
        {atom,345,undefined},
        {atom,345,undefined},
        {atom,345,undefined},
        {atom,345,undefined},
        {atom,345,undefined},
        {atom,345,undefined}]},
      {var,345,'State'}}],
    [[{call,345,{atom,345,is_list},[{var,345,'Requests'}]}]],
    [{call,346,
      {atom,346,io_request_loop},
      [{var,346,'Requests'},
       {tuple,346,[{atom,346,reply},{atom,346,ok},{var,346,'State'}]}]}]},
   {clause,347,
    [{var,347,'Unknown'},
     {match,348,
      {tuple,348,
       [{atom,348,state},
        {atom,348,undefined},
        {atom,348,undefined},
        {atom,348,undefined},
        {atom,348,undefined},
        {atom,348,undefined},
        {atom,348,undefined}]},
      {var,348,'State'}}],
    [],
    [{match,349,
      {var,349,'Reason'},
      {tuple,349,[{atom,349,request},{var,349,'Unknown'}]}},
     {tuple,350,
      [{atom,350,error},
       {tuple,350,[{atom,350,error},{var,350,'Reason'}]},
       {var,350,'State'}]}]}]},
 {function,355,io_request_loop,2,
  [{clause,355,[{nil,355},{var,355,'Result'}],[],[{var,356,'Result'}]},
   {clause,357,
    [{cons,357,{var,357,'_Request'},{var,357,'_Tail'}},
     {match,358,
      {tuple,358,
       [{atom,358,stop},
        {var,358,'_Reason'},
        {var,358,'_Reply'},
        {var,358,'_State'}]},
      {var,358,'Result'}}],
    [],
    [{var,359,'Result'}]},
   {clause,360,
    [{cons,360,{var,360,'_Request'},{var,360,'_Tail'}},
     {match,361,
      {tuple,361,[{atom,361,error},{var,361,'_Reply'},{var,361,'_State'}]},
      {var,361,'Result'}}],
    [],
    [{var,362,'Result'}]},
   {clause,363,
    [{cons,363,{var,363,'Request'},{var,363,'Tail'}},
     {tuple,364,[{atom,364,reply},{var,364,'_Reply'},{var,364,'State'}]}],
    [],
    [{call,365,
      {atom,365,io_request_loop},
      [{var,365,'Tail'},
       {call,365,
        {atom,365,io_request},
        [{var,365,'Request'},{var,365,'State'}]}]}]}]},
 {function,370,put_chars,3,
  [{clause,370,
    [{var,370,'Chars'},
     {atom,370,latin1},
     {match,370,
      {tuple,370,
       [{atom,370,state},
        {var,370,'Handle'},
        {var,370,'_'},
        {var,370,'_'},
        {var,370,'_'},
        {var,370,'_'},
        {atom,370,latin1}]},
      {var,370,'State'}}],
    [],
    [{'case',371,
      {call,371,
       {remote,371,{atom,31,prim_file},{atom,371,write}},
       [{var,371,'Handle'},{var,371,'Chars'}]},
      [{clause,372,
        [{match,372,
          {tuple,372,[{atom,372,error},{var,372,'_'}]},
          {var,372,'Reply'}}],
        [],
        [{tuple,373,
          [{atom,373,stop},
           {atom,373,normal},
           {var,373,'Reply'},
           {var,373,'State'}]}]},
       {clause,374,
        [{var,374,'Reply'}],
        [],
        [{tuple,375,
          [{atom,375,reply},{var,375,'Reply'},{var,375,'State'}]}]}]}]},
   {clause,377,
    [{var,377,'Chars'},
     {var,377,'InEncoding'},
     {match,377,
      {tuple,377,
       [{atom,377,state},
        {var,377,'Handle'},
        {var,377,'_'},
        {var,377,'_'},
        {var,377,'_'},
        {var,377,'_'},
        {var,377,'OutEncoding'}]},
      {var,377,'State'}}],
    [],
    [{'case',378,
      {call,378,
       {remote,378,{atom,378,unicode},{atom,378,characters_to_binary}},
       [{var,378,'Chars'},{var,378,'InEncoding'},{var,378,'OutEncoding'}]},
      [{clause,379,
        [{var,379,'Bin'}],
        [[{call,379,{atom,379,is_binary},[{var,379,'Bin'}]}]],
        [{'case',380,
          {call,380,
           {remote,380,{atom,31,prim_file},{atom,380,write}},
           [{var,380,'Handle'},{var,380,'Bin'}]},
          [{clause,381,
            [{match,381,
              {tuple,381,[{atom,381,error},{var,381,'_'}]},
              {var,381,'Reply'}}],
            [],
            [{tuple,382,
              [{atom,382,stop},
               {atom,382,normal},
               {var,382,'Reply'},
               {var,382,'State'}]}]},
           {clause,383,
            [{var,383,'Reply'}],
            [],
            [{tuple,384,
              [{atom,384,reply},{var,384,'Reply'},{var,384,'State'}]}]}]}]},
       {clause,386,
        [{tuple,386,[{atom,386,error},{var,386,'_'},{var,386,'_'}]}],
        [],
        [{tuple,387,
          [{atom,387,stop},
           {atom,387,normal},
           {tuple,387,
            [{atom,387,error},
             {tuple,387,
              [{atom,387,no_translation},
               {var,387,'InEncoding'},
               {var,387,'OutEncoding'}]}]},
           {var,387,'State'}]}]}]}]}]},
 {function,390,get_line,4,
  [{clause,390,
    [{var,390,'S'},
     {tuple,390,[{bin,390,[]},{var,390,'Cont'}]},
     {var,390,'OutEnc'},
     {match,391,
      {tuple,391,
       [{atom,391,state},
        {var,391,'Handle'},
        {var,391,'_'},
        {var,391,'_'},
        {var,391,'_'},
        {var,391,'Mode'},
        {var,391,'InEnc'}]},
      {var,391,'State'}}],
    [],
    [{'case',392,
      {call,392,
       {remote,392,{atom,31,prim_file},{atom,392,read}},
       [{var,392,'Handle'},
        {call,392,{atom,392,read_size},[{var,392,'Mode'}]}]},
      [{clause,393,
        [{tuple,393,[{atom,393,ok},{var,393,'Bin'}]}],
        [],
        [{call,394,
          {atom,394,get_line},
          [{var,394,'S'},
           {call,394,
            {atom,394,convert_enc},
            [{cons,394,{var,394,'Cont'},{cons,394,{var,394,'Bin'},{nil,394}}},
             {var,394,'InEnc'},
             {var,394,'OutEnc'}]},
           {var,394,'OutEnc'},
           {var,394,'State'}]}]},
       {clause,395,
        [{atom,395,eof}],
        [],
        [{call,396,
          {atom,396,get_line},
          [{var,396,'S'},
           {tuple,396,[{atom,396,eof},{var,396,'Cont'}]},
           {var,396,'OutEnc'},
           {var,396,'State'}]}]},
       {clause,397,
        [{match,397,
          {tuple,397,[{atom,397,error},{var,397,'Reason'}]},
          {var,397,'Error'}}],
        [],
        [{tuple,398,
          [{atom,398,stop},
           {var,398,'Reason'},
           {var,398,'Error'},
           {var,398,'State'}]}]}]}]},
   {clause,400,
    [{var,400,'S0'},
     {tuple,400,[{var,400,'Buf'},{var,400,'BCont'}]},
     {var,400,'OutEnc'},
     {match,400,
      {tuple,400,
       [{atom,400,state},
        {var,400,'_'},
        {var,400,'_'},
        {var,400,'_'},
        {var,400,'_'},
        {var,400,'_'},
        {var,400,'InEnc'}]},
      {var,400,'State'}}],
    [],
    [{'case',401,
      {call,401,
       {remote,401,{atom,401,io_lib},{atom,401,collect_line}},
       [{var,401,'S0'},{var,401,'Buf'},{var,401,'OutEnc'},{nil,401}]},
      [{clause,402,
        [{tuple,402,[{atom,402,stop},{var,402,'Result'},{var,402,'Cont0'}]}],
        [],
        [{match,404,
          {tuple,404,[{var,404,'Cont'},{bin,404,[]}]},
          {call,404,
           {atom,404,convert_enc},
           [{var,404,'Cont0'},{var,404,'OutEnc'},{var,404,'InEnc'}]}},
         {tuple,405,
          [{var,405,'Result'},
           {call,405,
            {remote,405,{atom,405,erlang},{atom,405,setelement}},
            [{integer,405,5},
             {var,405,'State'},
             {call,405,
              {atom,405,cast_binary},
              [{cons,405,
                {var,405,'Cont'},
                {cons,405,{var,405,'BCont'},{nil,405}}}]}]}]}]},
       {clause,406,
        [{var,406,'S'}],
        [],
        [{call,407,
          {atom,407,get_line},
          [{var,407,'S'},
           {tuple,407,[{bin,407,[]},{var,407,'BCont'}]},
           {var,407,'OutEnc'},
           {var,407,'State'}]}]}]}]}]},
 {function,410,convert_enc,3,
  [{clause,410,
    [{var,410,'Bins'},{var,410,'Enc'},{var,410,'Enc'}],
    [],
    [{tuple,411,
      [{call,411,{atom,411,cast_binary},[{var,411,'Bins'}]},{bin,411,[]}]}]},
   {clause,412,
    [{atom,412,eof},{var,412,'_'},{var,412,'_'}],
    [],
    [{tuple,413,[{bin,413,[]},{bin,413,[]}]}]},
   {clause,414,
    [{var,414,'Bin'},{var,414,'InEnc'},{var,414,'OutEnc'}],
    [],
    [{'case',415,
      {call,415,
       {remote,415,{atom,415,unicode},{atom,415,characters_to_binary}},
       [{var,415,'Bin'},{var,415,'InEnc'},{var,415,'OutEnc'}]},
      [{clause,416,
        [{var,416,'Res'}],
        [[{call,416,{atom,416,is_binary},[{var,416,'Res'}]}]],
        [{tuple,417,[{var,417,'Res'},{bin,417,[]}]}]},
       {clause,418,
        [{tuple,418,[{atom,418,incomplete},{var,418,'Res'},{var,418,'Cont'}]}],
        [],
        [{tuple,419,[{var,419,'Res'},{var,419,'Cont'}]}]},
       {clause,420,
        [{tuple,420,[{atom,420,error},{var,420,'_'},{var,420,'_'}]}],
        [],
        [{call,421,
          {atom,421,exit},
          [{tuple,421,
            [{atom,421,no_translation},
             {var,421,'InEnc'},
             {var,421,'OutEnc'}]}]}]}]}]}]},
 {function,427,get_chars,3,
  [{clause,427,
    [{integer,427,0},
     {var,427,'Enc'},
     {match,427,
      {tuple,427,
       [{atom,427,state},
        {var,427,'_'},
        {var,427,'_'},
        {var,427,'_'},
        {var,427,'_'},
        {var,427,'ReadMode'},
        {var,427,'InEncoding'}]},
      {var,427,'State'}}],
    [],
    [{tuple,428,
      [{atom,428,reply},
       {call,428,
        {atom,428,cast},
        [{bin,428,[]},
         {var,428,'ReadMode'},
         {var,428,'InEncoding'},
         {var,428,'Enc'}]},
       {var,428,'State'}]}]},
   {clause,429,
    [{var,429,'N'},
     {var,429,'Enc'},
     {match,429,
      {tuple,429,
       [{atom,429,state},
        {var,429,'_'},
        {var,429,'_'},
        {var,429,'_'},
        {var,429,'Buf'},
        {var,429,'ReadMode'},
        {atom,429,latin1}]},
      {var,429,'State'}}],
    [[{call,430,{atom,430,is_integer},[{var,430,'N'}]},
      {op,430,'>',{var,430,'N'},{integer,430,0}},
      {op,430,'=<',
       {var,430,'N'},
       {call,430,{atom,430,byte_size},[{var,430,'Buf'}]}}]],
    [{match,431,
      {tuple,431,[{var,431,'B1'},{var,431,'B2'}]},
      {call,431,{atom,431,split_binary},[{var,431,'Buf'},{var,431,'N'}]}},
     {tuple,432,
      [{atom,432,reply},
       {call,432,
        {atom,432,cast},
        [{var,432,'B1'},
         {var,432,'ReadMode'},
         {atom,432,latin1},
         {var,432,'Enc'}]},
       {call,432,
        {remote,432,{atom,432,erlang},{atom,432,setelement}},
        [{integer,432,5},{var,432,'State'},{var,432,'B2'}]}]}]},
   {clause,433,
    [{var,433,'N'},
     {var,433,'Enc'},
     {match,433,
      {tuple,433,
       [{atom,433,state},
        {var,433,'_'},
        {var,433,'_'},
        {var,433,'_'},
        {var,433,'Buf'},
        {var,433,'ReadMode'},
        {atom,433,latin1}]},
      {var,433,'State'}}],
    [[{call,434,{atom,434,is_integer},[{var,434,'N'}]},
      {op,434,'>',{var,434,'N'},{integer,434,0}},
      {op,434,'=<',
       {var,434,'N'},
       {call,434,{atom,434,byte_size},[{var,434,'Buf'}]}}]],
    [{match,435,
      {tuple,435,[{var,435,'B1'},{var,435,'B2'}]},
      {call,435,{atom,435,split_binary},[{var,435,'Buf'},{var,435,'N'}]}},
     {tuple,436,
      [{atom,436,reply},
       {call,436,
        {atom,436,cast},
        [{var,436,'B1'},
         {var,436,'ReadMode'},
         {atom,436,latin1},
         {var,436,'Enc'}]},
       {call,436,
        {remote,436,{atom,436,erlang},{atom,436,setelement}},
        [{integer,436,5},{var,436,'State'},{var,436,'B2'}]}]}]},
   {clause,437,
    [{var,437,'N'},
     {var,437,'OutEnc'},
     {match,437,
      {tuple,437,
       [{atom,437,state},
        {var,437,'Handle'},
        {var,437,'_'},
        {var,437,'_'},
        {var,437,'Buf'},
        {var,437,'ReadMode'},
        {atom,437,latin1}]},
      {var,437,'State'}}],
    [[{call,438,{atom,438,is_integer},[{var,438,'N'}]},
      {op,438,'>',{var,438,'N'},{integer,438,0}}]],
    [{match,439,
      {var,439,'BufSize'},
      {call,439,{atom,439,byte_size},[{var,439,'Buf'}]}},
     {match,440,
      {var,440,'NeedSize'},
      {op,440,'-',{var,440,'N'},{var,440,'BufSize'}}},
     {match,441,
      {var,441,'Size'},
      {call,441,
       {remote,441,{atom,441,erlang},{atom,441,max}},
       [{var,441,'NeedSize'},{op,33,'*',{integer,33,8},{integer,33,1024}}]}},
     {'case',442,
      {call,442,
       {remote,442,{atom,31,prim_file},{atom,442,read}},
       [{var,442,'Handle'},{var,442,'Size'}]},
      [{clause,443,
        [{tuple,443,[{atom,443,ok},{var,443,'B'}]}],
        [],
        [{'if',444,
          [{clause,444,[],
            [[{op,444,'<',
               {op,444,'+',
                {var,444,'BufSize'},
                {call,444,{atom,444,byte_size},[{var,444,'B'}]}},
               {var,444,'N'}}]],
            [{call,445,
              {atom,445,std_reply},
              [{call,445,
                {atom,445,cat},
                [{var,445,'Buf'},
                 {var,445,'B'},
                 {var,445,'ReadMode'},
                 {atom,445,latin1},
                 {var,445,'OutEnc'}]},
               {var,445,'State'}]}]},
           {clause,446,[],
            [[{atom,446,true}]],
            [{match,447,
              {tuple,447,[{var,447,'B1'},{var,447,'B2'}]},
              {call,447,
               {atom,447,split_binary},
               [{var,447,'B'},{var,447,'NeedSize'}]}},
             {tuple,448,
              [{atom,448,reply},
               {call,448,
                {atom,448,cat},
                [{var,448,'Buf'},
                 {var,448,'B1'},
                 {var,448,'ReadMode'},
                 {atom,448,latin1},
                 {var,448,'OutEnc'}]},
               {call,448,
                {remote,448,{atom,448,erlang},{atom,448,setelement}},
                [{integer,448,5},{var,448,'State'},{var,448,'B2'}]}]}]}]}]},
       {clause,450,
        [{atom,450,eof}],
        [[{op,450,'=:=',{var,450,'BufSize'},{integer,450,0}}]],
        [{tuple,451,[{atom,451,reply},{atom,451,eof},{var,451,'State'}]}]},
       {clause,452,
        [{atom,452,eof}],
        [],
        [{call,453,
          {atom,453,std_reply},
          [{call,453,
            {atom,453,cast},
            [{var,453,'Buf'},
             {var,453,'ReadMode'},
             {atom,453,latin1},
             {var,453,'OutEnc'}]},
           {var,453,'State'}]}]},
       {clause,454,
        [{match,454,
          {tuple,454,[{atom,454,error},{var,454,'Reason'}]},
          {var,454,'Error'}}],
        [],
        [{tuple,455,
          [{atom,455,stop},
           {var,455,'Reason'},
           {var,455,'Error'},
           {call,455,
            {remote,455,{atom,455,erlang},{atom,455,setelement}},
            [{integer,455,5},{var,455,'State'},{bin,455,[]}]}]}]}]}]},
   {clause,457,
    [{var,457,'N'},
     {var,457,'OutEnc'},
     {match,457,
      {tuple,457,
       [{atom,457,state},
        {var,457,'Handle'},
        {var,457,'_'},
        {var,457,'_'},
        {var,457,'Buf'},
        {var,457,'ReadMode'},
        {var,457,'InEncoding'}]},
      {var,457,'State'}}],
    [[{call,458,{atom,458,is_integer},[{var,458,'N'}]},
      {op,458,'>',{var,458,'N'},{integer,458,0}}]],
    [{'try',459,
      [{match,462,
        {tuple,462,[{var,462,'BufCount'},{var,462,'SplitPos'}]},
        {call,462,
         {atom,462,count_and_find},
         [{var,462,'Buf'},{var,462,'N'},{var,462,'InEncoding'}]}},
       {'case',463,
        {op,463,'>=',{var,463,'BufCount'},{var,463,'N'}},
        [{clause,464,
          [{atom,464,true}],
          [],
          [{match,465,
            {tuple,465,[{var,465,'B1'},{var,465,'B2'}]},
            {'case',465,
             {var,465,'SplitPos'},
             [{clause,466,
               [{atom,466,none}],
               [],
               [{tuple,466,[{var,466,'Buf'},{bin,466,[]}]}]},
              {clause,467,
               [{var,467,'_'}],
               [],
               [{call,467,
                 {atom,467,split_binary},
                 [{var,467,'Buf'},{var,467,'SplitPos'}]}]}]}},
           {tuple,469,
            [{atom,469,reply},
             {call,469,
              {atom,469,cast},
              [{var,469,'B1'},
               {var,469,'ReadMode'},
               {var,469,'InEncoding'},
               {var,469,'OutEnc'}]},
             {call,469,
              {remote,469,{atom,469,erlang},{atom,469,setelement}},
              [{integer,469,5},{var,469,'State'},{var,469,'B2'}]}]}]},
         {clause,470,
          [{atom,470,false}],
          [],
          [{match,472,
            {var,472,'NeedSize'},
            {op,472,'*',
             {op,472,'-',{var,472,'N'},{var,472,'BufCount'}},
             {integer,472,4}}},
           {match,473,
            {var,473,'Size'},
            {call,473,
             {remote,473,{atom,473,erlang},{atom,473,max}},
             [{var,473,'NeedSize'},
              {op,33,'*',{integer,33,8},{integer,33,1024}}]}},
           {'case',474,
            {call,474,
             {remote,474,{atom,31,prim_file},{atom,474,read}},
             [{var,474,'Handle'},{var,474,'Size'}]},
            [{clause,475,
              [{tuple,475,[{atom,475,ok},{var,475,'B'}]}],
              [],
              [{match,476,
                {var,476,'NewBuf'},
                {call,476,
                 {atom,476,list_to_binary},
                 [{cons,476,
                   {var,476,'Buf'},
                   {cons,476,{var,476,'B'},{nil,476}}}]}},
               {match,477,
                {tuple,477,[{var,477,'NewCount'},{var,477,'NewSplit'}]},
                {call,477,
                 {atom,477,count_and_find},
                 [{var,477,'NewBuf'},{var,477,'N'},{var,477,'InEncoding'}]}},
               {'case',478,
                {op,478,'>=',{var,478,'NewCount'},{var,478,'N'}},
                [{clause,479,
                  [{atom,479,true}],
                  [],
                  [{match,480,
                    {tuple,480,[{var,480,'B01'},{var,480,'B02'}]},
                    {'case',480,
                     {var,480,'NewSplit'},
                     [{clause,481,
                       [{atom,481,none}],
                       [],
                       [{tuple,481,[{var,481,'NewBuf'},{bin,481,[]}]}]},
                      {clause,482,
                       [{var,482,'_'}],
                       [],
                       [{call,482,
                         {atom,482,split_binary},
                         [{var,482,'NewBuf'},{var,482,'NewSplit'}]}]}]}},
                   {tuple,484,
                    [{atom,484,reply},
                     {call,484,
                      {atom,484,cast},
                      [{var,484,'B01'},
                       {var,484,'ReadMode'},
                       {var,484,'InEncoding'},
                       {var,484,'OutEnc'}]},
                     {call,485,
                      {remote,485,{atom,485,erlang},{atom,485,setelement}},
                      [{integer,485,5},{var,485,'State'},{var,485,'B02'}]}]}]},
                 {clause,486,
                  [{atom,486,false}],
                  [],
                  [{call,488,
                    {atom,488,std_reply},
                    [{call,488,
                      {atom,488,cast},
                      [{var,488,'NewBuf'},
                       {var,488,'ReadMode'},
                       {var,488,'InEncoding'},
                       {var,488,'OutEnc'}]},
                     {call,489,
                      {remote,489,{atom,489,erlang},{atom,489,setelement}},
                      [{integer,489,5},
                       {var,489,'State'},
                       {bin,489,[]}]}]}]}]}]},
             {clause,491,
              [{atom,491,eof}],
              [[{op,491,'=:=',{var,491,'BufCount'},{integer,491,0}}]],
              [{tuple,492,
                [{atom,492,reply},{atom,492,eof},{var,492,'State'}]}]},
             {clause,493,
              [{atom,493,eof}],
              [],
              [{call,494,
                {atom,494,std_reply},
                [{call,494,
                  {atom,494,cast},
                  [{var,494,'Buf'},
                   {var,494,'ReadMode'},
                   {var,494,'InEncoding'},
                   {var,494,'OutEnc'}]},
                 {call,494,
                  {remote,494,{atom,494,erlang},{atom,494,setelement}},
                  [{integer,494,5},{var,494,'State'},{bin,494,[]}]}]}]},
             {clause,495,
              [{match,495,
                {tuple,495,[{atom,495,error},{var,495,'Reason'}]},
                {var,495,'Error'}}],
              [],
              [{tuple,496,
                [{atom,496,stop},
                 {var,496,'Reason'},
                 {var,496,'Error'},
                 {call,496,
                  {remote,496,{atom,496,erlang},{atom,496,setelement}},
                  [{integer,496,5},{var,496,'State'},{bin,496,[]}]}]}]}]}]}]}],
      [],
      [{clause,500,
        [{tuple,500,[{atom,500,exit},{var,500,'ExError'},{var,500,'_'}]}],
        [],
        [{tuple,501,
          [{atom,501,stop},
           {var,501,'ExError'},
           {tuple,501,[{atom,501,error},{var,501,'ExError'}]},
           {call,501,
            {remote,501,{atom,501,erlang},{atom,501,setelement}},
            [{integer,501,5},{var,501,'State'},{bin,501,[]}]}]}]}],
      []}]},
   {clause,504,
    [{var,504,'_N'},
     {var,504,'_'},
     {match,504,
      {tuple,504,
       [{atom,504,state},
        {atom,504,undefined},
        {atom,504,undefined},
        {atom,504,undefined},
        {atom,504,undefined},
        {atom,504,undefined},
        {atom,504,undefined}]},
      {var,504,'State'}}],
    [],
    [{tuple,505,
      [{atom,505,error},
       {tuple,505,[{atom,505,error},{atom,505,get_chars}]},
       {var,505,'State'}]}]}]},
 {function,507,get_chars,5,
  [{clause,507,
    [{var,507,'Mod'},
     {var,507,'Func'},
     {var,507,'XtraArg'},
     {var,507,'OutEnc'},
     {match,507,
      {tuple,507,
       [{atom,507,state},
        {var,507,'_'},
        {var,507,'_'},
        {var,507,'_'},
        {bin,507,[]},
        {var,507,'_'},
        {var,507,'_'}]},
      {var,507,'State'}}],
    [],
    [{call,508,
      {atom,508,get_chars_empty},
      [{var,508,'Mod'},
       {var,508,'Func'},
       {var,508,'XtraArg'},
       {atom,508,start},
       {var,508,'OutEnc'},
       {var,508,'State'}]}]},
   {clause,509,
    [{var,509,'Mod'},
     {var,509,'Func'},
     {var,509,'XtraArg'},
     {var,509,'OutEnc'},
     {match,509,
      {tuple,509,
       [{atom,509,state},
        {var,509,'_'},
        {var,509,'_'},
        {var,509,'_'},
        {var,509,'Buf'},
        {var,509,'_'},
        {var,509,'_'}]},
      {var,509,'State'}}],
    [],
    [{call,510,
      {atom,510,get_chars_apply},
      [{var,510,'Mod'},
       {var,510,'Func'},
       {var,510,'XtraArg'},
       {atom,510,start},
       {var,510,'OutEnc'},
       {call,510,
        {remote,510,{atom,510,erlang},{atom,510,setelement}},
        [{integer,510,5},{var,510,'State'},{bin,510,[]}]},
       {var,510,'Buf'}]}]}]},
 {function,512,get_chars_empty,6,
  [{clause,512,
    [{var,512,'Mod'},
     {var,512,'Func'},
     {var,512,'XtraArg'},
     {var,512,'S'},
     {atom,512,latin1},
     {match,513,
      {tuple,513,
       [{atom,513,state},
        {var,513,'Handle'},
        {var,513,'_'},
        {var,513,'_'},
        {var,513,'_'},
        {var,513,'ReadMode'},
        {atom,513,latin1}]},
      {var,513,'State'}}],
    [],
    [{'case',514,
      {call,514,
       {remote,514,{atom,31,prim_file},{atom,514,read}},
       [{var,514,'Handle'},
        {call,514,{atom,514,read_size},[{var,514,'ReadMode'}]}]},
      [{clause,515,
        [{tuple,515,[{atom,515,ok},{var,515,'Bin'}]}],
        [],
        [{call,516,
          {atom,516,get_chars_apply},
          [{var,516,'Mod'},
           {var,516,'Func'},
           {var,516,'XtraArg'},
           {var,516,'S'},
           {atom,516,latin1},
           {var,516,'State'},
           {var,516,'Bin'}]}]},
       {clause,517,
        [{atom,517,eof}],
        [],
        [{call,518,
          {atom,518,get_chars_apply},
          [{var,518,'Mod'},
           {var,518,'Func'},
           {var,518,'XtraArg'},
           {var,518,'S'},
           {atom,518,latin1},
           {var,518,'State'},
           {atom,518,eof}]}]},
       {clause,519,
        [{match,519,
          {tuple,519,[{atom,519,error},{var,519,'Reason'}]},
          {var,519,'Error'}}],
        [],
        [{tuple,520,
          [{atom,520,stop},
           {var,520,'Reason'},
           {var,520,'Error'},
           {var,520,'State'}]}]}]}]},
   {clause,522,
    [{var,522,'Mod'},
     {var,522,'Func'},
     {var,522,'XtraArg'},
     {var,522,'S'},
     {var,522,'OutEnc'},
     {match,523,
      {tuple,523,
       [{atom,523,state},
        {var,523,'Handle'},
        {var,523,'_'},
        {var,523,'_'},
        {var,523,'_'},
        {var,523,'ReadMode'},
        {var,523,'_'}]},
      {var,523,'State'}}],
    [],
    [{'case',524,
      {call,524,
       {remote,524,{atom,31,prim_file},{atom,524,read}},
       [{var,524,'Handle'},
        {call,524,{atom,524,read_size},[{var,524,'ReadMode'}]}]},
      [{clause,525,
        [{tuple,525,[{atom,525,ok},{var,525,'Bin'}]}],
        [],
        [{call,526,
          {atom,526,get_chars_apply},
          [{var,526,'Mod'},
           {var,526,'Func'},
           {var,526,'XtraArg'},
           {var,526,'S'},
           {var,526,'OutEnc'},
           {var,526,'State'},
           {var,526,'Bin'}]}]},
       {clause,527,
        [{atom,527,eof}],
        [],
        [{call,528,
          {atom,528,get_chars_apply},
          [{var,528,'Mod'},
           {var,528,'Func'},
           {var,528,'XtraArg'},
           {var,528,'S'},
           {var,528,'OutEnc'},
           {var,528,'State'},
           {atom,528,eof}]}]},
       {clause,529,
        [{match,529,
          {tuple,529,[{atom,529,error},{var,529,'Reason'}]},
          {var,529,'Error'}}],
        [],
        [{tuple,530,
          [{atom,530,stop},
           {var,530,'Reason'},
           {var,530,'Error'},
           {var,530,'State'}]}]}]}]}]},
 {function,532,get_chars_notempty,6,
  [{clause,532,
    [{var,532,'Mod'},
     {var,532,'Func'},
     {var,532,'XtraArg'},
     {var,532,'S'},
     {var,532,'OutEnc'},
     {match,533,
      {tuple,533,
       [{atom,533,state},
        {var,533,'Handle'},
        {var,533,'_'},
        {var,533,'_'},
        {var,533,'B'},
        {var,533,'ReadMode'},
        {var,533,'_'}]},
      {var,533,'State'}}],
    [],
    [{'case',534,
      {call,534,
       {remote,534,{atom,31,prim_file},{atom,534,read}},
       [{var,534,'Handle'},
        {call,534,{atom,534,read_size},[{var,534,'ReadMode'}]}]},
      [{clause,535,
        [{tuple,535,[{atom,535,ok},{var,535,'Bin'}]}],
        [],
        [{call,536,
          {atom,536,get_chars_apply},
          [{var,536,'Mod'},
           {var,536,'Func'},
           {var,536,'XtraArg'},
           {var,536,'S'},
           {var,536,'OutEnc'},
           {var,536,'State'},
           {call,536,
            {atom,536,list_to_binary},
            [{cons,536,
              {var,536,'B'},
              {cons,536,{var,536,'Bin'},{nil,536}}}]}]}]},
       {clause,537,
        [{atom,537,eof}],
        [],
        [{'case',538,
          {var,538,'B'},
          [{clause,539,
            [{bin,539,[]}],
            [],
            [{call,540,
              {atom,540,get_chars_apply},
              [{var,540,'Mod'},
               {var,540,'Func'},
               {var,540,'XtraArg'},
               {var,540,'S'},
               {var,540,'OutEnc'},
               {var,540,'State'},
               {atom,540,eof}]}]},
           {clause,541,
            [{var,541,'_'}],
            [],
            [{tuple,542,
              [{atom,542,stop},
               {atom,542,invalid_unicode},
               {call,542,
                {atom,542,invalid_unicode_error},
                [{var,542,'Mod'},
                 {var,542,'Func'},
                 {var,542,'XtraArg'},
                 {var,542,'S'}]},
               {var,542,'State'}]}]}]}]},
       {clause,544,
        [{match,544,
          {tuple,544,[{atom,544,error},{var,544,'Reason'}]},
          {var,544,'Error'}}],
        [],
        [{tuple,545,
          [{atom,545,stop},
           {var,545,'Reason'},
           {var,545,'Error'},
           {var,545,'State'}]}]}]}]}]},
 {function,549,get_chars_apply,7,
  [{clause,549,
    [{var,549,'Mod'},
     {var,549,'Func'},
     {var,549,'XtraArg'},
     {var,549,'S0'},
     {atom,549,latin1},
     {match,550,
      {tuple,550,
       [{atom,550,state},
        {var,550,'_'},
        {var,550,'_'},
        {var,550,'_'},
        {var,550,'_'},
        {var,550,'ReadMode'},
        {atom,550,latin1}]},
      {var,550,'State'}},
     {var,550,'Data0'}],
    [],
    [{match,551,
      {var,551,'Data1'},
      {'case',551,
       {var,551,'ReadMode'},
       [{clause,552,
         [{atom,552,list}],
         [[{call,552,{atom,552,is_binary},[{var,552,'Data0'}]}]],
         [{call,552,{atom,552,binary_to_list},[{var,552,'Data0'}]}]},
        {clause,553,[{var,553,'_'}],[],[{var,553,'Data0'}]}]}},
     {'case',555,
      {'catch',555,
       {call,555,
        {remote,555,{var,555,'Mod'},{var,555,'Func'}},
        [{var,555,'S0'},
         {var,555,'Data1'},
         {atom,555,latin1},
         {var,555,'XtraArg'}]}},
      [{clause,556,
        [{tuple,556,[{atom,556,stop},{var,556,'Result'},{var,556,'Buf'}]}],
        [],
        [{tuple,557,
          [{atom,557,reply},
           {var,557,'Result'},
           {call,557,
            {remote,557,{atom,557,erlang},{atom,557,setelement}},
            [{integer,557,5},
             {var,557,'State'},
             {call,557,{atom,557,cast_binary},[{var,557,'Buf'}]}]}]}]},
       {clause,558,
        [{tuple,558,[{atom,558,'EXIT'},{var,558,'Reason'}]}],
        [],
        [{tuple,559,
          [{atom,559,stop},
           {var,559,'Reason'},
           {tuple,559,
            [{atom,559,error},
             {call,559,
              {atom,559,err_func},
              [{var,559,'Mod'},{var,559,'Func'},{var,559,'XtraArg'}]}]},
           {var,559,'State'}]}]},
       {clause,560,
        [{var,560,'S1'}],
        [],
        [{call,561,
          {atom,561,get_chars_empty},
          [{var,561,'Mod'},
           {var,561,'Func'},
           {var,561,'XtraArg'},
           {var,561,'S1'},
           {atom,561,latin1},
           {var,561,'State'}]}]}]}]},
   {clause,563,
    [{var,563,'Mod'},
     {var,563,'Func'},
     {var,563,'XtraArg'},
     {var,563,'S0'},
     {var,563,'OutEnc'},
     {match,564,
      {tuple,564,
       [{atom,564,state},
        {var,564,'_'},
        {var,564,'_'},
        {var,564,'_'},
        {var,564,'_'},
        {var,564,'ReadMode'},
        {var,564,'InEnc'}]},
      {var,564,'State'}},
     {var,564,'Data0'}],
    [],
    [{'try',565,
      [{match,566,
        {tuple,566,[{var,566,'Data1'},{var,566,'NewBuff'}]},
        {'case',566,
         {var,566,'ReadMode'},
         [{clause,567,
           [{atom,567,list}],
           [[{call,567,{atom,567,is_binary},[{var,567,'Data0'}]}]],
           [{'case',568,
             {call,568,
              {remote,568,{atom,568,unicode},{atom,568,characters_to_list}},
              [{var,568,'Data0'},{var,568,'InEnc'}]},
             [{clause,569,
               [{tuple,569,
                 [{var,569,'Tag'},{var,569,'Decoded'},{var,569,'Rest'}]}],
               [[{op,569,'=/=',{var,569,'Decoded'},{nil,569}},
                 {op,569,'=:=',{var,569,'Tag'},{atom,569,error}}],
                [{op,569,'=/=',{var,569,'Decoded'},{nil,569}},
                 {op,569,'=:=',{var,569,'Tag'},{atom,569,incomplete}}]],
               [{tuple,570,
                 [{var,570,'Decoded'},
                  {call,570,
                   {remote,570,{atom,570,erlang},{atom,570,iolist_to_binary}},
                   [{var,570,'Rest'}]}]}]},
              {clause,571,
               [{tuple,571,[{atom,571,error},{nil,571},{var,571,'_'}]}],
               [],
               [{call,572,{atom,572,exit},[{atom,572,invalid_unicode}]}]},
              {clause,573,
               [{tuple,573,[{atom,573,incomplete},{nil,573},{var,573,'R'}]}],
               [],
               [{tuple,574,[{nil,574},{var,574,'R'}]}]},
              {clause,575,
               [{var,575,'List'}],
               [[{call,575,{atom,575,is_list},[{var,575,'List'}]}]],
               [{tuple,576,[{var,576,'List'},{bin,576,[]}]}]}]}]},
          {clause,578,
           [{atom,578,binary}],
           [[{call,578,{atom,578,is_binary},[{var,578,'Data0'}]}]],
           [{'case',579,
             {call,579,
              {remote,579,{atom,579,unicode},{atom,579,characters_to_binary}},
              [{var,579,'Data0'},{var,579,'InEnc'},{var,579,'OutEnc'}]},
             [{clause,580,
               [{tuple,580,
                 [{var,580,'Tag2'},{var,580,'Decoded2'},{var,580,'Rest2'}]}],
               [[{op,580,'=/=',{var,580,'Decoded2'},{bin,580,[]}},
                 {op,580,'=:=',{var,580,'Tag2'},{atom,580,error}}],
                [{op,580,'=/=',{var,580,'Decoded2'},{bin,580,[]}},
                 {op,580,'=:=',{var,580,'Tag2'},{atom,580,incomplete}}]],
               [{tuple,581,
                 [{var,581,'Decoded2'},
                  {call,581,
                   {remote,581,{atom,581,erlang},{atom,581,iolist_to_binary}},
                   [{var,581,'Rest2'}]}]}]},
              {clause,582,
               [{tuple,582,[{atom,582,error},{bin,582,[]},{var,582,'_'}]}],
               [],
               [{call,583,{atom,583,exit},[{atom,583,invalid_unicode}]}]},
              {clause,584,
               [{tuple,584,
                 [{atom,584,incomplete},{bin,584,[]},{var,584,'R'}]}],
               [],
               [{tuple,585,[{bin,585,[]},{var,585,'R'}]}]},
              {clause,586,
               [{var,586,'Binary'}],
               [[{call,586,{atom,586,is_binary},[{var,586,'Binary'}]}]],
               [{tuple,587,[{var,587,'Binary'},{bin,587,[]}]}]}]}]},
          {clause,589,
           [{var,589,'_'}],
           [],
           [{tuple,590,[{var,590,'Data0'},{bin,590,[]}]}]}]}},
       {'case',592,
        {'catch',592,
         {call,592,
          {remote,592,{var,592,'Mod'},{var,592,'Func'}},
          [{var,592,'S0'},
           {var,592,'Data1'},
           {var,592,'OutEnc'},
           {var,592,'XtraArg'}]}},
        [{clause,593,
          [{tuple,593,[{atom,593,stop},{var,593,'Result'},{var,593,'Buf'}]}],
          [],
          [{tuple,594,
            [{atom,594,reply},
             {var,594,'Result'},
             {call,594,
              {remote,594,{atom,594,erlang},{atom,594,setelement}},
              [{integer,594,5},
               {var,594,'State'},
               {'if',594,
                [{clause,595,[],
                  [[{call,595,{atom,595,is_binary},[{var,595,'Buf'}]}]],
                  [{call,596,
                    {atom,596,list_to_binary},
                    [{cons,596,
                      {call,596,
                       {remote,596,
                        {atom,596,unicode},
                        {atom,596,characters_to_binary}},
                       [{var,596,'Buf'},{var,596,'OutEnc'},{var,596,'InEnc'}]},
                      {cons,596,{var,596,'NewBuff'},{nil,596}}}]}]},
                 {clause,597,[],
                  [[{call,597,{atom,597,is_list},[{var,597,'Buf'}]}]],
                  [{call,598,
                    {atom,598,list_to_binary},
                    [{cons,598,
                      {call,598,
                       {remote,598,
                        {atom,598,unicode},
                        {atom,598,characters_to_binary}},
                       [{var,598,'Buf'},{atom,598,unicode},{var,598,'InEnc'}]},
                      {cons,598,{var,598,'NewBuff'},{nil,598}}}]}]},
                 {clause,599,[],
                  [[{atom,599,true}]],
                  [{var,600,'NewBuff'}]}]}]}]}]},
         {clause,602,
          [{tuple,602,[{atom,602,'EXIT'},{var,602,'Reason'}]}],
          [],
          [{tuple,603,
            [{atom,603,stop},
             {var,603,'Reason'},
             {tuple,603,
              [{atom,603,error},
               {call,603,
                {atom,603,err_func},
                [{var,603,'Mod'},{var,603,'Func'},{var,603,'XtraArg'}]}]},
             {var,603,'State'}]}]},
         {clause,604,
          [{var,604,'S1'}],
          [],
          [{call,605,
            {atom,605,get_chars_notempty},
            [{var,605,'Mod'},
             {var,605,'Func'},
             {var,605,'XtraArg'},
             {var,605,'S1'},
             {var,605,'OutEnc'},
             {call,605,
              {remote,605,{atom,605,erlang},{atom,605,setelement}},
              [{integer,605,5},{var,605,'State'},{var,605,'NewBuff'}]}]}]}]}],
      [],
      [{clause,608,
        [{tuple,608,[{atom,608,exit},{var,608,'ExReason'},{var,608,'_'}]}],
        [],
        [{tuple,609,
          [{atom,609,stop},
           {var,609,'ExReason'},
           {call,609,
            {atom,609,invalid_unicode_error},
            [{var,609,'Mod'},
             {var,609,'Func'},
             {var,609,'XtraArg'},
             {var,609,'S0'}]},
           {var,609,'State'}]}]},
       {clause,610,
        [{tuple,610,[{atom,610,error},{var,610,'ErrReason'},{var,610,'_'}]}],
        [],
        [{tuple,611,
          [{atom,611,stop},
           {var,611,'ErrReason'},
           {tuple,611,
            [{atom,611,error},
             {call,611,
              {atom,611,err_func},
              [{var,611,'Mod'},{var,611,'Func'},{var,611,'XtraArg'}]}]},
           {var,611,'State'}]}]}],
      []}]}]},
 {function,616,invalid_unicode_error,4,
  [{clause,616,
    [{var,616,'Mod'},{var,616,'Func'},{var,616,'XtraArg'},{var,616,'S'}],
    [],
    [{'try',617,
      [{match,618,
        {tuple,618,[{atom,618,erl_scan},{atom,618,tokens},{var,618,'_Args'}]},
        {var,618,'XtraArg'}},
       {match,619,
        {var,619,'Location'},
        {call,619,
         {remote,619,{atom,619,erl_scan},{atom,619,continuation_location}},
         [{var,619,'S'}]}},
       {tuple,620,
        [{atom,620,error},
         {tuple,620,
          [{var,620,'Location'},
           {atom,-1,file_io_server},
           {atom,620,invalid_unicode}]},
         {var,620,'Location'}]}],
      [],
      [{clause,622,
        [{tuple,622,[{var,622,'_'},{var,622,'_'},{var,622,'_'}]}],
        [],
        [{tuple,623,
          [{atom,623,error},
           {call,623,
            {atom,623,err_func},
            [{var,623,'Mod'},{var,623,'Func'},{var,623,'XtraArg'}]}]}]}],
      []}]}]},
 {function,627,err_func,3,
  [{clause,627,
    [{atom,627,io_lib},
     {atom,627,get_until},
     {tuple,627,[{var,627,'_'},{var,627,'F'},{var,627,'_'}]}],
    [],
    [{var,628,'F'}]}]},
 {function,635,setopts,2,
  [{clause,635,
    [{var,635,'Opts0'},{var,635,'State'}],
    [],
    [{match,636,
      {var,636,'Opts'},
      {call,636,
       {remote,636,{atom,636,proplists},{atom,636,unfold}},
       [{call,637,
         {remote,637,{atom,637,proplists},{atom,637,substitute_negations}},
         [{cons,638,{tuple,638,[{atom,638,list},{atom,638,binary}]},{nil,638}},
          {call,639,{atom,639,expand_encoding},[{var,639,'Opts0'}]}]}]}},
     {'case',640,
      {call,640,{atom,640,check_valid_opts},[{var,640,'Opts'}]},
      [{clause,641,
        [{atom,641,true}],
        [],
        [{call,642,
          {atom,642,do_setopts},
          [{var,642,'Opts'},{var,642,'State'}]}]},
       {clause,643,
        [{atom,643,false}],
        [],
        [{tuple,644,
          [{atom,644,error},
           {tuple,644,[{atom,644,error},{atom,644,enotsup}]},
           {var,644,'State'}]}]}]}]}]},
 {function,646,check_valid_opts,1,
  [{clause,646,[{nil,646}],[],[{atom,647,true}]},
   {clause,648,
    [{cons,648,{tuple,648,[{atom,648,binary},{var,648,'_'}]},{var,648,'T'}}],
    [],
    [{call,649,{atom,649,check_valid_opts},[{var,649,'T'}]}]},
   {clause,650,
    [{cons,650,
      {tuple,650,[{atom,650,encoding},{var,650,'_Enc'}]},
      {var,650,'T'}}],
    [],
    [{call,651,{atom,651,check_valid_opts},[{var,651,'T'}]}]},
   {clause,652,[{var,652,'_'}],[],[{atom,653,false}]}]},
 {function,654,do_setopts,2,
  [{clause,654,
    [{var,654,'Opts'},{var,654,'State'}],
    [],
    [{'case',655,
      {call,655,
       {atom,655,valid_enc},
       [{call,655,
         {remote,655,{atom,655,proplists},{atom,655,get_value}},
         [{atom,655,encoding},
          {var,655,'Opts'},
          {call,655,
           {remote,655,{atom,655,erlang},{atom,655,element}},
           [{integer,655,7},{var,655,'State'}]}]}]},
      [{clause,656,
        [{tuple,656,[{atom,656,ok},{var,656,'NewUnic'}]}],
        [],
        [{'case',657,
          {call,657,
           {remote,657,{atom,657,proplists},{atom,657,get_value}},
           [{atom,657,binary},{var,657,'Opts'}]},
          [{clause,658,
            [{atom,658,true}],
            [],
            [{tuple,659,
              [{atom,659,reply},
               {atom,659,ok},
               {call,659,
                {remote,659,{atom,659,erlang},{atom,659,setelement}},
                [{integer,659,7},
                 {call,659,
                  {remote,659,{atom,659,erlang},{atom,659,setelement}},
                  [{integer,659,6},{var,659,'State'},{atom,659,binary}]},
                 {var,659,'NewUnic'}]}]}]},
           {clause,660,
            [{atom,660,false}],
            [],
            [{tuple,661,
              [{atom,661,reply},
               {atom,661,ok},
               {call,661,
                {remote,661,{atom,661,erlang},{atom,661,setelement}},
                [{integer,661,7},
                 {call,661,
                  {remote,661,{atom,661,erlang},{atom,661,setelement}},
                  [{integer,661,6},{var,661,'State'},{atom,661,list}]},
                 {var,661,'NewUnic'}]}]}]},
           {clause,662,
            [{atom,662,undefined}],
            [],
            [{tuple,663,
              [{atom,663,reply},
               {atom,663,ok},
               {call,663,
                {remote,663,{atom,663,erlang},{atom,663,setelement}},
                [{integer,663,7},
                 {var,663,'State'},
                 {var,663,'NewUnic'}]}]}]}]}]},
       {clause,665,
        [{var,665,'_'}],
        [],
        [{tuple,666,
          [{atom,666,error},
           {tuple,666,[{atom,666,error},{atom,666,badarg}]},
           {var,666,'State'}]}]}]}]}]},
 {function,669,getopts,1,
  [{clause,669,
    [{match,669,
      {tuple,669,
       [{atom,669,state},
        {var,669,'_'},
        {var,669,'_'},
        {var,669,'_'},
        {var,669,'_'},
        {var,669,'RM'},
        {var,669,'Unic'}]},
      {var,669,'State'}}],
    [],
    [{match,670,
      {var,670,'Bin'},
      {tuple,670,
       [{atom,670,binary},{op,670,'=:=',{var,670,'RM'},{atom,670,binary}}]}},
     {match,671,
      {var,671,'Uni'},
      {tuple,671,[{atom,671,encoding},{var,671,'Unic'}]}},
     {tuple,672,
      [{atom,672,reply},
       {cons,672,{var,672,'Bin'},{cons,672,{var,672,'Uni'},{nil,672}}},
       {var,672,'State'}]}]}]},
 {function,675,cat,5,
  [{clause,675,
    [{var,675,'B1'},
     {var,675,'B2'},
     {atom,675,binary},
     {atom,675,latin1},
     {atom,675,latin1}],
    [],
    [{call,676,
      {atom,676,list_to_binary},
      [{cons,676,{var,676,'B1'},{cons,676,{var,676,'B2'},{nil,676}}}]}]},
   {clause,677,
    [{var,677,'B1'},
     {var,677,'B2'},
     {atom,677,binary},
     {var,677,'InEncoding'},
     {var,677,'OutEncoding'}],
    [],
    [{'case',678,
      {call,678,
       {remote,678,{atom,678,unicode},{atom,678,characters_to_binary}},
       [{cons,678,{var,678,'B1'},{cons,678,{var,678,'B2'},{nil,678}}},
        {var,678,'InEncoding'},
        {var,678,'OutEncoding'}]},
      [{clause,679,
        [{var,679,'Good'}],
        [[{call,679,{atom,679,is_binary},[{var,679,'Good'}]}]],
        [{var,680,'Good'}]},
       {clause,681,
        [{var,681,'_'}],
        [],
        [{call,682,
          {atom,682,exit},
          [{tuple,682,
            [{atom,682,no_translation},
             {var,682,'InEncoding'},
             {var,682,'OutEncoding'}]}]}]}]}]},
   {clause,695,
    [{var,695,'B1'},
     {var,695,'B2'},
     {atom,695,list},
     {atom,695,latin1},
     {var,695,'_'}],
    [],
    [{op,696,'++',
      {call,696,{atom,696,binary_to_list},[{var,696,'B1'}]},
      {call,696,{atom,696,binary_to_list},[{var,696,'B2'}]}}]}]},
 {function,699,cast,4,
  [{clause,699,
    [{atom,699,eof},{var,699,'_'},{var,699,'_'},{var,699,'_'}],
    [],
    [{atom,700,eof}]},
   {clause,701,
    [{var,701,'B'},{atom,701,binary},{atom,701,latin1},{atom,701,latin1}],
    [],
    [{var,702,'B'}]},
   {clause,703,
    [{var,703,'B'},
     {atom,703,binary},
     {var,703,'InEncoding'},
     {var,703,'OutEncoding'}],
    [],
    [{'case',704,
      {call,704,
       {remote,704,{atom,704,unicode},{atom,704,characters_to_binary}},
       [{var,704,'B'},{var,704,'InEncoding'},{var,704,'OutEncoding'}]},
      [{clause,705,
        [{var,705,'Good'}],
        [[{call,705,{atom,705,is_binary},[{var,705,'Good'}]}]],
        [{var,706,'Good'}]},
       {clause,707,
        [{var,707,'_'}],
        [],
        [{call,708,
          {atom,708,exit},
          [{tuple,708,
            [{atom,708,no_translation},
             {var,708,'InEncoding'},
             {var,708,'OutEncoding'}]}]}]}]}]},
   {clause,710,
    [{var,710,'B'},{atom,710,list},{atom,710,latin1},{var,710,'_'}],
    [],
    [{call,711,{atom,711,binary_to_list},[{var,711,'B'}]}]},
   {clause,712,
    [{var,712,'B'},
     {atom,712,list},
     {var,712,'InEncoding'},
     {var,712,'OutEncoding'}],
    [],
    [{'try',713,
      [{call,714,
        {remote,714,{atom,714,unicode},{atom,714,characters_to_list}},
        [{call,714,
          {remote,714,{atom,714,unicode},{atom,714,characters_to_binary}},
          [{var,714,'B'},{var,714,'InEncoding'},{var,714,'OutEncoding'}]},
         {var,715,'OutEncoding'}]}],
      [],
      [{clause,717,
        [{tuple,717,[{atom,717,error},{var,717,'_'},{var,717,'_'}]}],
        [],
        [{call,718,
          {atom,718,exit},
          [{tuple,718,
            [{atom,718,no_translation},
             {var,718,'InEncoding'},
             {var,718,'OutEncoding'}]}]}]}],
      []}]}]},
 {function,722,cast_binary,1,
  [{clause,722,
    [{var,722,'Binary'}],
    [[{call,722,{atom,722,is_binary},[{var,722,'Binary'}]}]],
    [{var,723,'Binary'}]},
   {clause,724,
    [{cons,724,{bin,724,[]},{var,724,'List'}}],
    [],
    [{call,725,{atom,725,cast_binary},[{var,725,'List'}]}]},
   {clause,726,
    [{var,726,'List'}],
    [[{call,726,{atom,726,is_list},[{var,726,'List'}]}]],
    [{call,727,{atom,727,list_to_binary},[{var,727,'List'}]}]},
   {clause,728,[{var,728,'_EOF'}],[],[{bin,729,[]}]}]},
 {function,732,read_size,1,
  [{clause,732,
    [{atom,732,binary}],
    [],
    [{op,33,'*',{integer,33,8},{integer,33,1024}}]},
   {clause,734,[{atom,734,list}],[],[{integer,32,128}]}]},
 {function,738,count_and_find,3,
  [{clause,738,
    [{var,738,'Bin'},{var,738,'N'},{var,738,'Encoding'}],
    [],
    [{call,739,
      {atom,739,cafu},
      [{var,739,'Bin'},
       {var,739,'N'},
       {integer,739,0},
       {integer,739,0},
       {atom,739,none},
       {'case',739,
        {var,739,'Encoding'},
        [{clause,740,[{atom,740,unicode}],[],[{atom,740,utf8}]},
         {clause,741,[{var,741,'Oth'}],[],[{var,741,'Oth'}]}]}]}]}]},
 {function,744,cafu,6,
  [{clause,744,
    [{bin,744,[]},
     {integer,744,0},
     {var,744,'Count'},
     {var,744,'ByteCount'},
     {var,744,'_SavePos'},
     {var,744,'_'}],
    [],
    [{tuple,745,[{var,745,'Count'},{var,745,'ByteCount'}]}]},
   {clause,746,
    [{bin,746,[]},
     {var,746,'_N'},
     {var,746,'Count'},
     {var,746,'_ByteCount'},
     {var,746,'SavePos'},
     {var,746,'_'}],
    [],
    [{tuple,747,[{var,747,'Count'},{var,747,'SavePos'}]}]},
   {clause,748,
    [{bin,748,
      [{bin_element,748,{var,748,'_'},default,[utf8]},
       {bin_element,748,{var,748,'Rest'},default,[binary]}]},
     {integer,748,0},
     {var,748,'Count'},
     {var,748,'ByteCount'},
     {var,748,'_SavePos'},
     {atom,748,utf8}],
    [],
    [{call,749,
      {atom,749,cafu},
      [{var,749,'Rest'},
       {op,749,'-',{integer,749,1}},
       {op,749,'+',{var,749,'Count'},{integer,749,1}},
       {integer,749,0},
       {var,749,'ByteCount'},
       {atom,749,utf8}]}]},
   {clause,750,
    [{bin,750,
      [{bin_element,750,{var,750,'_'},default,[utf8]},
       {bin_element,750,{var,750,'Rest'},default,[binary]}]},
     {var,750,'N'},
     {var,750,'Count'},
     {var,750,'_ByteCount'},
     {var,750,'SavePos'},
     {atom,750,utf8}],
    [[{op,750,'<',{var,750,'N'},{integer,750,0}}]],
    [{call,751,
      {atom,751,cafu},
      [{var,751,'Rest'},
       {op,751,'-',{integer,751,1}},
       {op,751,'+',{var,751,'Count'},{integer,751,1}},
       {integer,751,0},
       {var,751,'SavePos'},
       {atom,751,utf8}]}]},
   {clause,752,
    [{match,752,
      {bin,752,
       [{bin_element,752,{var,752,'_'},default,[utf8]},
        {bin_element,752,{var,752,'Rest'},default,[binary]}]},
      {var,752,'Whole'}},
     {var,752,'N'},
     {var,752,'Count'},
     {var,752,'ByteCount'},
     {var,752,'SavePos'},
     {atom,752,utf8}],
    [],
    [{match,753,
      {var,753,'Delta'},
      {op,753,'-',
       {call,753,{atom,753,byte_size},[{var,753,'Whole'}]},
       {call,753,{atom,753,byte_size},[{var,753,'Rest'}]}}},
     {call,754,
      {atom,754,cafu},
      [{var,754,'Rest'},
       {op,754,'-',{var,754,'N'},{integer,754,1}},
       {op,754,'+',{var,754,'Count'},{integer,754,1}},
       {op,754,'+',{var,754,'ByteCount'},{var,754,'Delta'}},
       {var,754,'SavePos'},
       {atom,754,utf8}]}]},
   {clause,755,
    [{bin,755,
      [{bin_element,755,{var,755,'_'},default,[utf16,big]},
       {bin_element,755,{var,755,'Rest'},default,[binary]}]},
     {integer,755,0},
     {var,755,'Count'},
     {var,755,'ByteCount'},
     {var,755,'_SavePos'},
     {tuple,755,[{atom,755,utf16},{atom,755,big}]}],
    [],
    [{call,756,
      {atom,756,cafu},
      [{var,756,'Rest'},
       {op,756,'-',{integer,756,1}},
       {op,756,'+',{var,756,'Count'},{integer,756,1}},
       {integer,756,0},
       {var,756,'ByteCount'},
       {tuple,756,[{atom,756,utf16},{atom,756,big}]}]}]},
   {clause,757,
    [{bin,757,
      [{bin_element,757,{var,757,'_'},default,[utf16,big]},
       {bin_element,757,{var,757,'Rest'},default,[binary]}]},
     {var,757,'N'},
     {var,757,'Count'},
     {var,757,'_ByteCount'},
     {var,757,'SavePos'},
     {tuple,757,[{atom,757,utf16},{atom,757,big}]}],
    [[{op,757,'<',{var,757,'N'},{integer,757,0}}]],
    [{call,758,
      {atom,758,cafu},
      [{var,758,'Rest'},
       {op,758,'-',{integer,758,1}},
       {op,758,'+',{var,758,'Count'},{integer,758,1}},
       {integer,758,0},
       {var,758,'SavePos'},
       {tuple,758,[{atom,758,utf16},{atom,758,big}]}]}]},
   {clause,759,
    [{match,759,
      {bin,759,
       [{bin_element,759,{var,759,'_'},default,[utf16,big]},
        {bin_element,759,{var,759,'Rest'},default,[binary]}]},
      {var,759,'Whole'}},
     {var,759,'N'},
     {var,759,'Count'},
     {var,759,'ByteCount'},
     {var,759,'SavePos'},
     {tuple,759,[{atom,759,utf16},{atom,759,big}]}],
    [],
    [{match,760,
      {var,760,'Delta'},
      {op,760,'-',
       {call,760,{atom,760,byte_size},[{var,760,'Whole'}]},
       {call,760,{atom,760,byte_size},[{var,760,'Rest'}]}}},
     {call,761,
      {atom,761,cafu},
      [{var,761,'Rest'},
       {op,761,'-',{var,761,'N'},{integer,761,1}},
       {op,761,'+',{var,761,'Count'},{integer,761,1}},
       {op,761,'+',{var,761,'ByteCount'},{var,761,'Delta'}},
       {var,761,'SavePos'},
       {tuple,761,[{atom,761,utf16},{atom,761,big}]}]}]},
   {clause,762,
    [{bin,762,
      [{bin_element,762,{var,762,'_'},default,[utf16,little]},
       {bin_element,762,{var,762,'Rest'},default,[binary]}]},
     {integer,762,0},
     {var,762,'Count'},
     {var,762,'ByteCount'},
     {var,762,'_SavePos'},
     {tuple,762,[{atom,762,utf16},{atom,762,little}]}],
    [],
    [{call,763,
      {atom,763,cafu},
      [{var,763,'Rest'},
       {op,763,'-',{integer,763,1}},
       {op,763,'+',{var,763,'Count'},{integer,763,1}},
       {integer,763,0},
       {var,763,'ByteCount'},
       {tuple,763,[{atom,763,utf16},{atom,763,little}]}]}]},
   {clause,764,
    [{bin,764,
      [{bin_element,764,{var,764,'_'},default,[utf16,little]},
       {bin_element,764,{var,764,'Rest'},default,[binary]}]},
     {var,764,'N'},
     {var,764,'Count'},
     {var,764,'_ByteCount'},
     {var,764,'SavePos'},
     {tuple,764,[{atom,764,utf16},{atom,764,little}]}],
    [[{op,764,'<',{var,764,'N'},{integer,764,0}}]],
    [{call,765,
      {atom,765,cafu},
      [{var,765,'Rest'},
       {op,765,'-',{integer,765,1}},
       {op,765,'+',{var,765,'Count'},{integer,765,1}},
       {integer,765,0},
       {var,765,'SavePos'},
       {tuple,765,[{atom,765,utf16},{atom,765,little}]}]}]},
   {clause,766,
    [{match,766,
      {bin,766,
       [{bin_element,766,{var,766,'_'},default,[utf16,little]},
        {bin_element,766,{var,766,'Rest'},default,[binary]}]},
      {var,766,'Whole'}},
     {var,766,'N'},
     {var,766,'Count'},
     {var,766,'ByteCount'},
     {var,766,'SavePos'},
     {tuple,766,[{atom,766,utf16},{atom,766,little}]}],
    [],
    [{match,767,
      {var,767,'Delta'},
      {op,767,'-',
       {call,767,{atom,767,byte_size},[{var,767,'Whole'}]},
       {call,767,{atom,767,byte_size},[{var,767,'Rest'}]}}},
     {call,768,
      {atom,768,cafu},
      [{var,768,'Rest'},
       {op,768,'-',{var,768,'N'},{integer,768,1}},
       {op,768,'+',{var,768,'Count'},{integer,768,1}},
       {op,768,'+',{var,768,'ByteCount'},{var,768,'Delta'}},
       {var,768,'SavePos'},
       {tuple,768,[{atom,768,utf16},{atom,768,little}]}]}]},
   {clause,769,
    [{bin,769,
      [{bin_element,769,{var,769,'_'},default,[utf32,big]},
       {bin_element,769,{var,769,'Rest'},default,[binary]}]},
     {integer,769,0},
     {var,769,'Count'},
     {var,769,'ByteCount'},
     {var,769,'_SavePos'},
     {tuple,769,[{atom,769,utf32},{atom,769,big}]}],
    [],
    [{call,770,
      {atom,770,cafu},
      [{var,770,'Rest'},
       {op,770,'-',{integer,770,1}},
       {op,770,'+',{var,770,'Count'},{integer,770,1}},
       {integer,770,0},
       {var,770,'ByteCount'},
       {tuple,770,[{atom,770,utf32},{atom,770,big}]}]}]},
   {clause,771,
    [{bin,771,
      [{bin_element,771,{var,771,'_'},default,[utf32,big]},
       {bin_element,771,{var,771,'Rest'},default,[binary]}]},
     {var,771,'N'},
     {var,771,'Count'},
     {var,771,'_ByteCount'},
     {var,771,'SavePos'},
     {tuple,771,[{atom,771,utf32},{atom,771,big}]}],
    [[{op,771,'<',{var,771,'N'},{integer,771,0}}]],
    [{call,772,
      {atom,772,cafu},
      [{var,772,'Rest'},
       {op,772,'-',{integer,772,1}},
       {op,772,'+',{var,772,'Count'},{integer,772,1}},
       {integer,772,0},
       {var,772,'SavePos'},
       {tuple,772,[{atom,772,utf32},{atom,772,big}]}]}]},
   {clause,773,
    [{match,773,
      {bin,773,
       [{bin_element,773,{var,773,'_'},default,[utf32,big]},
        {bin_element,773,{var,773,'Rest'},default,[binary]}]},
      {var,773,'Whole'}},
     {var,773,'N'},
     {var,773,'Count'},
     {var,773,'ByteCount'},
     {var,773,'SavePos'},
     {tuple,773,[{atom,773,utf32},{atom,773,big}]}],
    [],
    [{match,774,
      {var,774,'Delta'},
      {op,774,'-',
       {call,774,{atom,774,byte_size},[{var,774,'Whole'}]},
       {call,774,{atom,774,byte_size},[{var,774,'Rest'}]}}},
     {call,775,
      {atom,775,cafu},
      [{var,775,'Rest'},
       {op,775,'-',{var,775,'N'},{integer,775,1}},
       {op,775,'+',{var,775,'Count'},{integer,775,1}},
       {op,775,'+',{var,775,'ByteCount'},{var,775,'Delta'}},
       {var,775,'SavePos'},
       {tuple,775,[{atom,775,utf32},{atom,775,big}]}]}]},
   {clause,776,
    [{bin,776,
      [{bin_element,776,{var,776,'_'},default,[utf32,little]},
       {bin_element,776,{var,776,'Rest'},default,[binary]}]},
     {integer,776,0},
     {var,776,'Count'},
     {var,776,'ByteCount'},
     {var,776,'_SavePos'},
     {tuple,776,[{atom,776,utf32},{atom,776,little}]}],
    [],
    [{call,777,
      {atom,777,cafu},
      [{var,777,'Rest'},
       {op,777,'-',{integer,777,1}},
       {op,777,'+',{var,777,'Count'},{integer,777,1}},
       {integer,777,0},
       {var,777,'ByteCount'},
       {tuple,777,[{atom,777,utf32},{atom,777,little}]}]}]},
   {clause,778,
    [{bin,778,
      [{bin_element,778,{var,778,'_'},default,[utf32,little]},
       {bin_element,778,{var,778,'Rest'},default,[binary]}]},
     {var,778,'N'},
     {var,778,'Count'},
     {var,778,'_ByteCount'},
     {var,778,'SavePos'},
     {tuple,778,[{atom,778,utf32},{atom,778,little}]}],
    [[{op,778,'<',{var,778,'N'},{integer,778,0}}]],
    [{call,779,
      {atom,779,cafu},
      [{var,779,'Rest'},
       {op,779,'-',{integer,779,1}},
       {op,779,'+',{var,779,'Count'},{integer,779,1}},
       {integer,779,0},
       {var,779,'SavePos'},
       {tuple,779,[{atom,779,utf32},{atom,779,little}]}]}]},
   {clause,780,
    [{match,780,
      {bin,780,
       [{bin_element,780,{var,780,'_'},default,[utf32,little]},
        {bin_element,780,{var,780,'Rest'},default,[binary]}]},
      {var,780,'Whole'}},
     {var,780,'N'},
     {var,780,'Count'},
     {var,780,'ByteCount'},
     {var,780,'SavePos'},
     {tuple,780,[{atom,780,utf32},{atom,780,little}]}],
    [],
    [{match,781,
      {var,781,'Delta'},
      {op,781,'-',
       {call,781,{atom,781,byte_size},[{var,781,'Whole'}]},
       {call,781,{atom,781,byte_size},[{var,781,'Rest'}]}}},
     {call,782,
      {atom,782,cafu},
      [{var,782,'Rest'},
       {op,782,'-',{var,782,'N'},{integer,782,1}},
       {op,782,'+',{var,782,'Count'},{integer,782,1}},
       {op,782,'+',{var,782,'ByteCount'},{var,782,'Delta'}},
       {var,782,'SavePos'},
       {tuple,782,[{atom,782,utf32},{atom,782,little}]}]}]},
   {clause,783,
    [{var,783,'_Other'},
     {integer,783,0},
     {var,783,'Count'},
     {var,783,'ByteCount'},
     {var,783,'_'},
     {var,783,'_'}],
    [],
    [{tuple,785,[{var,785,'Count'},{var,785,'ByteCount'}]}]},
   {clause,786,
    [{var,786,'Other'},
     {var,786,'_N'},
     {var,786,'Count'},
     {integer,786,0},
     {var,786,'SavePos'},
     {var,786,'Enc'}],
    [],
    [{'case',788,
      {call,788,{atom,788,cbv},[{var,788,'Enc'},{var,788,'Other'}]},
      [{clause,789,
        [{atom,789,false}],
        [],
        [{call,790,{atom,790,exit},[{atom,790,invalid_unicode}]}]},
       {clause,791,
        [{var,791,'_'}],
        [],
        [{tuple,792,[{var,792,'Count'},{var,792,'SavePos'}]}]}]}]},
   {clause,794,
    [{var,794,'Other'},
     {var,794,'_N'},
     {var,794,'Count'},
     {var,794,'ByteCount'},
     {atom,794,none},
     {var,794,'Enc'}],
    [],
    [{'case',797,
      {call,797,{atom,797,cbv},[{var,797,'Enc'},{var,797,'Other'}]},
      [{clause,798,
        [{atom,798,false}],
        [],
        [{call,799,{atom,799,exit},[{atom,799,invalid_unicode}]}]},
       {clause,800,
        [{var,800,'_'}],
        [],
        [{tuple,801,[{var,801,'Count'},{var,801,'ByteCount'}]}]}]}]},
   {clause,803,
    [{var,803,'Other'},
     {var,803,'_N'},
     {var,803,'Count'},
     {var,803,'_ByteCount'},
     {var,803,'SavePos'},
     {var,803,'Enc'}],
    [],
    [{'case',805,
      {call,805,{atom,805,cbv},[{var,805,'Enc'},{var,805,'Other'}]},
      [{clause,806,
        [{atom,806,false}],
        [],
        [{call,807,{atom,807,exit},[{atom,807,invalid_unicode}]}]},
       {clause,808,
        [{var,808,'_'}],
        [],
        [{tuple,809,[{var,809,'Count'},{var,809,'SavePos'}]}]}]}]}]},
 {function,815,cbv,2,
  [{clause,815,
    [{atom,815,utf8},
     {bin,815,
      [{bin_element,815,{integer,815,1},{integer,815,1},default},
       {bin_element,815,{integer,815,1},{integer,815,1},default},
       {bin_element,815,{integer,815,0},{integer,815,1},default},
       {bin_element,815,{var,815,'_'},{integer,815,5},default}]}],
    [],
    [{integer,816,1}]},
   {clause,817,
    [{atom,817,utf8},
     {bin,817,
      [{bin_element,817,{integer,817,1},{integer,817,1},default},
       {bin_element,817,{integer,817,1},{integer,817,1},default},
       {bin_element,817,{integer,817,1},{integer,817,1},default},
       {bin_element,817,{integer,817,0},{integer,817,1},default},
       {bin_element,817,{var,817,'_'},{integer,817,4},default},
       {bin_element,817,{var,817,'R'},default,[binary]}]}],
    [],
    [{'case',818,
      {var,818,'R'},
      [{clause,819,[{bin,819,[]}],[],[{integer,820,2}]},
       {clause,821,
        [{bin,821,
          [{bin_element,821,{integer,821,1},{integer,821,1},default},
           {bin_element,821,{integer,821,0},{integer,821,1},default},
           {bin_element,821,{var,821,'_'},{integer,821,6},default}]}],
        [],
        [{integer,822,1}]},
       {clause,823,[{var,823,'_'}],[],[{atom,824,false}]}]}]},
   {clause,826,
    [{atom,826,utf8},
     {bin,826,
      [{bin_element,826,{integer,826,1},{integer,826,1},default},
       {bin_element,826,{integer,826,1},{integer,826,1},default},
       {bin_element,826,{integer,826,1},{integer,826,1},default},
       {bin_element,826,{integer,826,1},{integer,826,1},default},
       {bin_element,826,{integer,826,0},{integer,826,1},default},
       {bin_element,826,{var,826,'_'},{integer,826,3},default},
       {bin_element,826,{var,826,'R'},default,[binary]}]}],
    [],
    [{'case',827,
      {var,827,'R'},
      [{clause,828,[{bin,828,[]}],[],[{integer,829,3}]},
       {clause,830,
        [{bin,830,
          [{bin_element,830,{integer,830,1},{integer,830,1},default},
           {bin_element,830,{integer,830,0},{integer,830,1},default},
           {bin_element,830,{var,830,'_'},{integer,830,6},default}]}],
        [],
        [{integer,831,2}]},
       {clause,832,
        [{bin,832,
          [{bin_element,832,{integer,832,1},{integer,832,1},default},
           {bin_element,832,{integer,832,0},{integer,832,1},default},
           {bin_element,832,{var,832,'_'},{integer,832,6},default},
           {bin_element,832,{integer,832,1},{integer,832,1},default},
           {bin_element,832,{integer,832,0},{integer,832,1},default},
           {bin_element,832,{var,832,'_'},{integer,832,6},default}]}],
        [],
        [{integer,833,1}]},
       {clause,834,[{var,834,'_'}],[],[{atom,835,false}]}]}]},
   {clause,837,[{atom,837,utf8},{var,837,'_'}],[],[{atom,838,false}]},
   {clause,840,
    [{tuple,840,[{atom,840,utf16},{atom,840,big}]},
     {bin,840,[{bin_element,840,{var,840,'A'},{integer,840,8},default}]}],
    [[{op,840,'=<',{var,840,'A'},{integer,840,215}}],
     [{op,840,'>=',{var,840,'A'},{integer,840,224}}]],
    [{integer,841,1}]},
   {clause,842,
    [{tuple,842,[{atom,842,utf16},{atom,842,big}]},
     {bin,842,
      [{bin_element,842,{integer,842,54},{integer,842,6},default},
       {bin_element,842,{var,842,'_'},{integer,842,2},default}]}],
    [],
    [{integer,843,3}]},
   {clause,844,
    [{tuple,844,[{atom,844,utf16},{atom,844,big}]},
     {bin,844,
      [{bin_element,844,{integer,844,54},{integer,844,6},default},
       {bin_element,844,{var,844,'_'},{integer,844,10},default}]}],
    [],
    [{integer,845,2}]},
   {clause,846,
    [{tuple,846,[{atom,846,utf16},{atom,846,big}]},
     {bin,846,
      [{bin_element,846,{integer,846,54},{integer,846,6},default},
       {bin_element,846,{var,846,'_'},{integer,846,10},default},
       {bin_element,846,{integer,846,55},{integer,846,6},default},
       {bin_element,846,{var,846,'_'},{integer,846,2},default}]}],
    [],
    [{integer,847,1}]},
   {clause,848,
    [{tuple,848,[{atom,848,utf16},{atom,848,big}]},{var,848,'_'}],
    [],
    [{atom,849,false}]},
   {clause,850,
    [{tuple,850,[{atom,850,utf16},{atom,850,little}]},
     {bin,850,[{bin_element,850,{var,850,'_'},{integer,850,8},default}]}],
    [],
    [{integer,851,1}]},
   {clause,852,
    [{tuple,852,[{atom,852,utf16},{atom,852,little}]},
     {bin,852,
      [{bin_element,852,{var,852,'_'},{integer,852,8},default},
       {bin_element,852,{integer,852,54},{integer,852,6},default},
       {bin_element,852,{var,852,'_'},{integer,852,2},default}]}],
    [],
    [{integer,853,2}]},
   {clause,854,
    [{tuple,854,[{atom,854,utf16},{atom,854,little}]},
     {bin,854,
      [{bin_element,854,{var,854,'_'},{integer,854,8},default},
       {bin_element,854,{integer,854,54},{integer,854,6},default},
       {bin_element,854,{var,854,'_'},{integer,854,2},default},
       {bin_element,854,{var,854,'_'},{integer,854,8},default}]}],
    [],
    [{integer,855,1}]},
   {clause,856,
    [{tuple,856,[{atom,856,utf16},{atom,856,little}]},{var,856,'_'}],
    [],
    [{atom,857,false}]},
   {clause,860,
    [{tuple,860,[{atom,860,utf32},{atom,860,big}]},
     {bin,860,[{bin_element,860,{integer,860,0},{integer,860,8},default}]}],
    [],
    [{integer,861,3}]},
   {clause,862,
    [{tuple,862,[{atom,862,utf32},{atom,862,big}]},
     {bin,862,
      [{bin_element,862,{integer,862,0},{integer,862,8},default},
       {bin_element,862,{var,862,'X'},{integer,862,8},default}]}],
    [[{op,862,'=<',{var,862,'X'},{integer,862,16}}]],
    [{integer,863,2}]},
   {clause,864,
    [{tuple,864,[{atom,864,utf32},{atom,864,big}]},
     {bin,864,
      [{bin_element,864,{integer,864,0},{integer,864,8},default},
       {bin_element,864,{var,864,'X'},{integer,864,8},default},
       {bin_element,864,{var,864,'Y'},{integer,864,8},default}]}],
    [[{op,865,'=<',{var,865,'X'},{integer,865,16}},
      {op,865,'or',
       {op,865,'>',{var,865,'X'},{integer,865,0}},
       {op,865,'or',
        {op,865,'=<',{var,865,'Y'},{integer,865,215}},
        {op,865,'>=',{var,865,'Y'},{integer,865,224}}}}]],
    [{integer,866,1}]},
   {clause,867,
    [{tuple,867,[{atom,867,utf32},{atom,867,big}]},{var,867,'_'}],
    [],
    [{atom,868,false}]},
   {clause,869,
    [{tuple,869,[{atom,869,utf32},{atom,869,little}]},
     {bin,869,[{bin_element,869,{var,869,'_'},{integer,869,8},default}]}],
    [],
    [{integer,870,3}]},
   {clause,871,
    [{tuple,871,[{atom,871,utf32},{atom,871,little}]},
     {bin,871,
      [{bin_element,871,{var,871,'_'},{integer,871,8},default},
       {bin_element,871,{var,871,'_'},{integer,871,8},default}]}],
    [],
    [{integer,872,2}]},
   {clause,873,
    [{tuple,873,[{atom,873,utf32},{atom,873,little}]},
     {bin,873,
      [{bin_element,873,{var,873,'X'},{integer,873,8},default},
       {bin_element,873,{integer,873,255},{integer,873,8},default},
       {bin_element,873,{integer,873,0},{integer,873,8},default}]}],
    [[{op,873,'=:=',{var,873,'X'},{integer,873,254}}],
     [{op,873,'=:=',{var,873,'X'},{integer,873,255}}]],
    [{atom,874,false}]},
   {clause,875,
    [{tuple,875,[{atom,875,utf32},{atom,875,little}]},
     {bin,875,
      [{bin_element,875,{var,875,'_'},{integer,875,8},default},
       {bin_element,875,{var,875,'Y'},{integer,875,8},default},
       {bin_element,875,{var,875,'X'},{integer,875,8},default}]}],
    [[{op,876,'=<',{var,876,'X'},{integer,876,16}},
      {op,876,'or',
       {op,876,'>',{var,876,'X'},{integer,876,0}},
       {op,876,'or',
        {op,876,'=<',{var,876,'Y'},{integer,876,215}},
        {op,876,'>=',{var,876,'Y'},{integer,876,224}}}}]],
    [{integer,877,1}]},
   {clause,878,
    [{tuple,878,[{atom,878,utf32},{atom,878,little}]},{var,878,'_'}],
    [],
    [{atom,879,false}]}]},
 {function,888,position,3,
  [{clause,888,
    [{var,888,'Handle'},{atom,888,cur},{var,888,'Buf'}],
    [],
    [{call,889,
      {atom,889,position},
      [{var,889,'Handle'},
       {tuple,889,[{atom,889,cur},{integer,889,0}]},
       {var,889,'Buf'}]}]},
   {clause,890,
    [{var,890,'Handle'},
     {tuple,890,[{atom,890,cur},{var,890,'Offs'}]},
     {var,890,'Buf'}],
    [[{call,890,{atom,890,is_binary},[{var,890,'Buf'}]}]],
    [{call,891,
      {remote,891,{atom,31,prim_file},{atom,891,position}},
      [{var,891,'Handle'},
       {tuple,891,
        [{atom,891,cur},
         {op,891,'-',
          {var,891,'Offs'},
          {call,891,{atom,891,byte_size},[{var,891,'Buf'}]}}]}]}]},
   {clause,892,
    [{var,892,'Handle'},{var,892,'At'},{var,892,'_Buf'}],
    [],
    [{call,893,
      {remote,893,{atom,31,prim_file},{atom,893,position}},
      [{var,893,'Handle'},{var,893,'At'}]}]}]}]
