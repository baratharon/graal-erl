user
[]
[]
[{function,37,start,0,
  [{clause,37,[],[],
    [{call,38,
      {atom,38,start_port},
      [{cons,38,{atom,38,eof},{cons,38,{atom,38,binary},{nil,38}}}]}]}]},
 {function,40,start,1,
  [{clause,40,
    [{cons,40,{var,40,'Mod'},{cons,40,{var,40,'Fun'},{var,40,'Args'}}}],
    [],
    [{match,43,
      {var,43,'Pid'},
      {call,43,
       {atom,43,apply},
       [{var,43,'Mod'},{var,43,'Fun'},{var,43,'Args'}]}},
     {match,44,
      {var,44,'Id'},
      {call,44,
       {atom,44,spawn},
       [{'fun',44,
         {clauses,
          [{clause,44,[],[],
            [{call,44,{atom,44,server},[{var,44,'Pid'}]}]}]}}]}},
     {call,45,{atom,45,register},[{atom,28,user},{var,45,'Id'}]},
     {var,46,'Id'}]}]},
 {function,48,start_out,0,
  [{clause,48,[],[],
    [{call,50,
      {atom,50,start_port},
      [{cons,50,{atom,50,out},{cons,50,{atom,50,binary},{nil,50}}}]}]}]},
 {function,52,start_port,1,
  [{clause,52,
    [{var,52,'PortSettings'}],
    [],
    [{match,53,
      {var,53,'Id'},
      {call,53,
       {atom,53,spawn},
       [{'fun',53,
         {clauses,
          [{clause,53,[],[],
            [{call,53,
              {atom,53,server},
              [{tuple,53,[{atom,53,fd},{integer,53,0},{integer,53,1}]},
               {var,53,'PortSettings'}]}]}]}}]}},
     {call,54,{atom,54,register},[{atom,28,user},{var,54,'Id'}]},
     {var,55,'Id'}]}]},
 {function,60,interfaces,1,
  [{clause,60,
    [{var,60,'User'}],
    [],
    [{'case',61,
      {call,61,{atom,61,process_info},[{var,61,'User'},{atom,61,dictionary}]},
      [{clause,62,
        [{tuple,62,[{atom,62,dictionary},{var,62,'Dict'}]}],
        [],
        [{'case',63,
          {call,63,
           {remote,63,{atom,63,lists},{atom,63,keysearch}},
           [{atom,63,shell},{integer,63,1},{var,63,'Dict'}]},
          [{clause,64,
            [{tuple,64,
              [{atom,64,value},
               {match,64,
                {var,64,'Sh'},
                {tuple,64,[{atom,64,shell},{var,64,'Shell'}]}}]}],
            [[{call,64,{atom,64,is_pid},[{var,64,'Shell'}]}]],
            [{cons,65,{var,65,'Sh'},{nil,65}}]},
           {clause,66,[{var,66,'_'}],[],[{nil,67}]}]}]},
       {clause,69,[{var,69,'_'}],[],[{nil,70}]}]}]}]},
 {function,73,server,1,
  [{clause,73,
    [{var,73,'Pid'}],
    [[{call,73,{atom,73,is_pid},[{var,73,'Pid'}]}]],
    [{call,74,{atom,74,process_flag},[{atom,74,trap_exit},{atom,74,true}]},
     {call,75,{atom,75,link},[{var,75,'Pid'}]},
     {call,76,{atom,76,run},[{var,76,'Pid'}]}]}]},
 {function,78,server,2,
  [{clause,78,
    [{var,78,'PortName'},{var,78,'PortSettings'}],
    [],
    [{call,79,{atom,79,process_flag},[{atom,79,trap_exit},{atom,79,true}]},
     {match,80,
      {var,80,'Port'},
      {call,80,
       {atom,80,open_port},
       [{var,80,'PortName'},{var,80,'PortSettings'}]}},
     {call,81,{atom,81,run},[{var,81,'Port'}]}]}]},
 {function,83,run,1,
  [{clause,83,
    [{var,83,'P'}],
    [],
    [{call,84,{atom,84,put},[{atom,84,read_mode},{atom,84,list}]},
     {call,85,{atom,85,put},[{atom,85,encoding},{atom,85,latin1}]},
     {'case',86,
      {call,86,
       {remote,86,{atom,86,init},{atom,86,get_argument}},
       [{atom,86,noshell}]},
      [{clause,88,
        [{tuple,88,[{atom,88,ok},{cons,88,{var,88,'_'},{var,88,'_'}}]}],
        [],
        [{call,89,{atom,89,put},[{atom,89,shell},{atom,89,noshell}]},
         {call,90,
          {atom,90,server_loop},
          [{var,90,'P'},
           {call,90,{remote,90,{atom,90,queue},{atom,90,new}},[]}]}]},
       {clause,91,
        [{var,91,'_'}],
        [],
        [{call,92,
          {atom,92,group_leader},
          [{call,92,{atom,92,self},[]},{call,92,{atom,92,self},[]}]},
         {call,93,
          {atom,93,catch_loop},
          [{var,93,'P'},{call,93,{atom,93,start_init_shell},[]}]}]}]}]}]},
 {function,96,catch_loop,2,
  [{clause,96,
    [{var,96,'Port'},{var,96,'Shell'}],
    [],
    [{call,97,
      {atom,97,catch_loop},
      [{var,97,'Port'},
       {var,97,'Shell'},
       {call,97,{remote,97,{atom,97,queue},{atom,97,new}},[]}]}]}]},
 {function,99,catch_loop,3,
  [{clause,99,
    [{var,99,'Port'},{var,99,'Shell'},{var,99,'Q'}],
    [],
    [{'case',100,
      {'catch',100,
       {call,100,{atom,100,server_loop},[{var,100,'Port'},{var,100,'Q'}]}},
      [{clause,101,
        [{atom,101,new_shell}],
        [],
        [{call,102,{atom,102,exit},[{var,102,'Shell'},{atom,102,kill}]},
         {call,103,
          {atom,103,catch_loop},
          [{var,103,'Port'},{call,103,{atom,103,start_new_shell},[]}]}]},
       {clause,104,
        [{tuple,104,
          [{atom,104,unknown_exit},
           {tuple,104,[{var,104,'Shell'},{var,104,'Reason'}]},
           {var,104,'_'}]}],
        [],
        [{'case',105,
          {var,105,'Reason'},
          [{clause,106,
            [{atom,106,normal}],
            [],
            [{call,107,
              {atom,107,put_port},
              [{bin,107,
                [{bin_element,107,{string,107,"*** "},default,default}]},
               {var,107,'Port'}]}]},
           {clause,108,
            [{var,108,'_'}],
            [],
            [{call,109,
              {atom,109,put_port},
              [{bin,109,
                [{bin_element,109,
                  {string,109,"*** ERROR: "},
                  default,default}]},
               {var,109,'Port'}]}]}]},
         {call,111,
          {atom,111,put_port},
          [{bin,111,
            [{bin_element,111,
              {string,111,"Shell process terminated! ***\n"},
              default,default}]},
           {var,111,'Port'}]},
         {call,112,
          {atom,112,catch_loop},
          [{var,112,'Port'},{call,112,{atom,112,start_new_shell},[]}]}]},
       {clause,113,
        [{tuple,113,[{atom,113,unknown_exit},{var,113,'_'},{var,113,'Q1'}]}],
        [],
        [{call,114,
          {atom,114,catch_loop},
          [{var,114,'Port'},{var,114,'Shell'},{var,114,'Q1'}]}]},
       {clause,115,
        [{tuple,115,[{atom,115,'EXIT'},{var,115,'R'}]}],
        [],
        [{call,116,{atom,116,exit},[{var,116,'R'}]}]}]}]}]},
 {function,119,link_and_save_shell,1,
  [{clause,119,
    [{var,119,'Shell'}],
    [],
    [{call,120,{atom,120,link},[{var,120,'Shell'}]},
     {call,121,{atom,121,put},[{atom,121,shell},{var,121,'Shell'}]},
     {var,122,'Shell'}]}]},
 {function,124,start_init_shell,0,
  [{clause,124,[],[],
    [{call,125,
      {atom,125,link_and_save_shell},
      [{call,125,
        {remote,125,{atom,125,shell},{atom,125,start}},
        [{atom,125,init}]}]}]}]},
 {function,127,start_new_shell,0,
  [{clause,127,[],[],
    [{call,128,
      {atom,128,link_and_save_shell},
      [{call,128,{remote,128,{atom,128,shell},{atom,128,start}},[]}]}]}]},
 {function,130,server_loop,2,
  [{clause,130,
    [{var,130,'Port'},{var,130,'Q'}],
    [],
    [{'receive',131,
      [{clause,132,
        [{tuple,132,
          [{atom,132,io_request},
           {var,132,'From'},
           {var,132,'ReplyAs'},
           {var,132,'Request'}]}],
        [[{call,132,{atom,132,is_pid},[{var,132,'From'}]}]],
        [{call,133,
          {atom,133,server_loop},
          [{var,133,'Port'},
           {call,133,
            {atom,133,do_io_request},
            [{var,133,'Request'},
             {var,133,'From'},
             {var,133,'ReplyAs'},
             {var,133,'Port'},
             {var,133,'Q'}]}]}]},
       {clause,134,
        [{tuple,134,
          [{var,134,'Port'},{tuple,134,[{atom,134,data},{var,134,'Bytes'}]}]}],
        [],
        [{'case',135,
          {call,135,{atom,135,get},[{atom,135,shell}]},
          [{clause,136,
            [{atom,136,noshell}],
            [],
            [{call,137,
              {atom,137,server_loop},
              [{var,137,'Port'},
               {call,137,
                {remote,137,{atom,137,queue},{atom,137,snoc}},
                [{var,137,'Q'},{var,137,'Bytes'}]}]}]},
           {clause,138,
            [{var,138,'_'}],
            [],
            [{'case',139,
              {call,139,
               {atom,139,contains_ctrl_g_or_ctrl_c},
               [{var,139,'Bytes'}]},
              [{clause,140,
                [{atom,140,false}],
                [],
                [{call,141,
                  {atom,141,server_loop},
                  [{var,141,'Port'},
                   {call,141,
                    {remote,141,{atom,141,queue},{atom,141,snoc}},
                    [{var,141,'Q'},{var,141,'Bytes'}]}]}]},
               {clause,142,
                [{var,142,'_'}],
                [],
                [{call,143,{atom,143,throw},[{atom,143,new_shell}]}]}]}]}]}]},
       {clause,146,
        [{tuple,146,[{var,146,'Port'},{atom,146,eof}]}],
        [],
        [{call,147,{atom,147,put},[{atom,147,eof},{atom,147,true}]},
         {call,148,{atom,148,server_loop},[{var,148,'Port'},{var,148,'Q'}]}]},
       {clause,151,
        [{tuple,151,[{atom,151,'EXIT'},{var,151,'Port'},{atom,151,badsig}]}],
        [],
        [{call,152,{atom,152,server_loop},[{var,152,'Port'},{var,152,'Q'}]}]},
       {clause,153,
        [{tuple,153,[{atom,153,'EXIT'},{var,153,'Port'},{var,153,'What'}]}],
        [],
        [{call,154,{atom,154,exit},[{var,154,'What'}]}]},
       {clause,157,
        [{tuple,157,[{atom,157,'EXIT'},{var,157,'SomePid'},{var,157,'What'}]}],
        [],
        [{'case',158,
          {call,158,{atom,158,get},[{atom,158,shell}]},
          [{clause,159,
            [{atom,159,noshell}],
            [],
            [{call,160,
              {atom,160,server_loop},
              [{var,160,'Port'},{var,160,'Q'}]}]},
           {clause,161,
            [{var,161,'_'}],
            [],
            [{call,162,
              {atom,162,throw},
              [{tuple,162,
                [{atom,162,unknown_exit},
                 {tuple,162,[{var,162,'SomePid'},{var,162,'What'}]},
                 {var,162,'Q'}]}]}]}]}]},
       {clause,165,
        [{var,165,'_Other'}],
        [],
        [{call,166,
          {atom,166,server_loop},
          [{var,166,'Port'},{var,166,'Q'}]}]}]}]}]},
 {function,170,get_fd_geometry,1,
  [{clause,170,
    [{var,170,'Port'}],
    [],
    [{'case',171,
      {'catch',171,
       {call,171,
        {atom,171,port_control},
        [{var,171,'Port'},{integer,31,100},{nil,171}]}},
      [{clause,172,
        [{var,172,'List'}],
        [[{op,172,'=:=',
           {call,172,{atom,172,length},[{var,172,'List'}]},
           {integer,172,8}}]],
        [{match,173,
          {bin,173,
           [{bin_element,173,{var,173,'W'},{integer,173,32},[native]},
            {bin_element,173,{var,173,'H'},{integer,173,32},[native]}]},
          {call,173,{atom,173,list_to_binary},[{var,173,'List'}]}},
         {tuple,174,[{var,174,'W'},{var,174,'H'}]}]},
       {clause,175,[{var,175,'_'}],[],[{atom,176,error}]}]}]}]},
 {function,182,do_io_request,5,
  [{clause,182,
    [{var,182,'Req'},
     {var,182,'From'},
     {var,182,'ReplyAs'},
     {var,182,'Port'},
     {var,182,'Q0'}],
    [],
    [{'case',183,
      {call,183,
       {atom,183,io_request},
       [{var,183,'Req'},{var,183,'Port'},{var,183,'Q0'}]},
      [{clause,184,
        [{tuple,184,[{var,184,'_Status'},{var,184,'Reply'},{var,184,'Q1'}]}],
        [],
        [{match,185,
          {var,185,'_'},
          {call,185,
           {atom,185,io_reply},
           [{var,185,'From'},{var,185,'ReplyAs'},{var,185,'Reply'}]}},
         {var,186,'Q1'}]},
       {clause,187,
        [{tuple,187,[{atom,187,exit},{var,187,'What'}]}],
        [],
        [{match,188,
          {atom,188,ok},
          {call,188,{atom,188,send_port},[{var,188,'Port'},{atom,188,close}]}},
         {call,189,{atom,189,exit},[{var,189,'What'}]}]}]}]}]},
 {function,194,io_request,3,
  [{clause,194,
    [{tuple,194,[{atom,194,put_chars},{atom,194,unicode},{var,194,'Chars'}]},
     {var,194,'Port'},
     {var,194,'Q'}],
    [],
    [{'case',195,
      {call,195,
       {atom,195,wrap_characters_to_binary},
       [{var,195,'Chars'},
        {atom,195,unicode},
        {call,195,{atom,195,get},[{atom,195,encoding}]}]},
      [{clause,196,
        [{atom,196,error}],
        [],
        [{tuple,197,
          [{atom,197,error},
           {tuple,197,[{atom,197,error},{atom,197,put_chars}]},
           {var,197,'Q'}]}]},
       {clause,198,
        [{var,198,'Bin'}],
        [],
        [{call,199,
          {atom,199,put_chars},
          [{var,199,'Bin'},{var,199,'Port'},{var,199,'Q'}]}]}]}]},
   {clause,201,
    [{tuple,201,
      [{atom,201,put_chars},
       {atom,201,unicode},
       {var,201,'Mod'},
       {var,201,'Func'},
       {var,201,'Args'}]},
     {var,201,'Port'},
     {var,201,'Q'}],
    [],
    [{'case',202,
      {'catch',202,
       {call,202,
        {atom,202,apply},
        [{var,202,'Mod'},{var,202,'Func'},{var,202,'Args'}]}},
      [{clause,203,
        [{var,203,'Data'}],
        [[{call,203,{atom,203,is_list},[{var,203,'Data'}]}],
         [{call,203,{atom,203,is_binary},[{var,203,'Data'}]}]],
        [{'case',204,
          {call,204,
           {atom,204,wrap_characters_to_binary},
           [{var,204,'Data'},
            {atom,204,unicode},
            {call,204,{atom,204,get},[{atom,204,encoding}]}]},
          [{clause,205,
            [{var,205,'Bin'}],
            [[{call,205,{atom,205,is_binary},[{var,205,'Bin'}]}]],
            [{call,206,
              {atom,206,put_chars},
              [{var,206,'Bin'},{var,206,'Port'},{var,206,'Q'}]}]},
           {clause,207,
            [{atom,207,error}],
            [],
            [{tuple,208,
              [{atom,208,error},
               {tuple,208,[{atom,208,error},{atom,208,put_chars}]},
               {var,208,'Q'}]}]}]}]},
       {clause,210,
        [{var,210,'Undef'}],
        [],
        [{call,211,
          {atom,211,put_chars},
          [{var,211,'Undef'},{var,211,'Port'},{var,211,'Q'}]}]}]}]},
   {clause,213,
    [{tuple,213,[{atom,213,put_chars},{atom,213,latin1},{var,213,'Chars'}]},
     {var,213,'Port'},
     {var,213,'Q'}],
    [],
    [{'case',214,
      {'catch',214,
       {call,214,
        {remote,214,{atom,214,unicode},{atom,214,characters_to_binary}},
        [{var,214,'Chars'},
         {atom,214,latin1},
         {call,214,{atom,214,get},[{atom,214,encoding}]}]}},
      [{clause,215,
        [{var,215,'Data'}],
        [[{call,215,{atom,215,is_binary},[{var,215,'Data'}]}]],
        [{call,216,
          {atom,216,put_chars},
          [{var,216,'Data'},{var,216,'Port'},{var,216,'Q'}]}]},
       {clause,217,
        [{var,217,'_'}],
        [],
        [{tuple,218,
          [{atom,218,error},
           {tuple,218,[{atom,218,error},{atom,218,put_chars}]},
           {var,218,'Q'}]}]}]}]},
   {clause,220,
    [{tuple,220,
      [{atom,220,put_chars},
       {atom,220,latin1},
       {var,220,'Mod'},
       {var,220,'Func'},
       {var,220,'Args'}]},
     {var,220,'Port'},
     {var,220,'Q'}],
    [],
    [{'case',221,
      {'catch',221,
       {call,221,
        {atom,221,apply},
        [{var,221,'Mod'},{var,221,'Func'},{var,221,'Args'}]}},
      [{clause,222,
        [{var,222,'Data'}],
        [[{call,222,{atom,222,is_list},[{var,222,'Data'}]}],
         [{call,222,{atom,222,is_binary},[{var,222,'Data'}]}]],
        [{'case',223,
          {'catch',224,
           {call,224,
            {remote,224,{atom,224,unicode},{atom,224,characters_to_binary}},
            [{var,224,'Data'},
             {atom,224,latin1},
             {call,224,{atom,224,get},[{atom,224,encoding}]}]}},
          [{clause,226,
            [{var,226,'Bin'}],
            [[{call,226,{atom,226,is_binary},[{var,226,'Bin'}]}]],
            [{call,227,
              {atom,227,put_chars},
              [{var,227,'Bin'},{var,227,'Port'},{var,227,'Q'}]}]},
           {clause,228,
            [{var,228,'_'}],
            [],
            [{tuple,229,
              [{atom,229,error},
               {tuple,229,[{atom,229,error},{atom,229,put_chars}]},
               {var,229,'Q'}]}]}]}]},
       {clause,231,
        [{var,231,'Undef'}],
        [],
        [{call,232,
          {atom,232,put_chars},
          [{var,232,'Undef'},{var,232,'Port'},{var,232,'Q'}]}]}]}]},
   {clause,234,
    [{tuple,234,
      [{atom,234,get_chars},{var,234,'Enc'},{var,234,'Prompt'},{var,234,'N'}]},
     {var,234,'Port'},
     {var,234,'Q'}],
    [],
    [{call,235,
      {atom,235,get_chars},
      [{var,235,'Prompt'},
       {atom,235,io_lib},
       {atom,235,collect_chars},
       {var,235,'N'},
       {var,235,'Port'},
       {var,235,'Q'},
       {var,235,'Enc'}]}]},
   {clause,236,
    [{tuple,236,[{atom,236,get_line},{var,236,'Enc'},{var,236,'Prompt'}]},
     {var,236,'Port'},
     {var,236,'Q'}],
    [],
    [{'case',237,
      {call,237,{atom,237,get},[{atom,237,read_mode}]},
      [{clause,238,
        [{atom,238,binary}],
        [],
        [{call,239,
          {atom,239,get_line_bin},
          [{var,239,'Prompt'},
           {var,239,'Port'},
           {var,239,'Q'},
           {var,239,'Enc'}]}]},
       {clause,240,
        [{var,240,'_'}],
        [],
        [{call,241,
          {atom,241,get_chars},
          [{var,241,'Prompt'},
           {atom,241,io_lib},
           {atom,241,collect_line},
           {nil,241},
           {var,241,'Port'},
           {var,241,'Q'},
           {var,241,'Enc'}]}]}]}]},
   {clause,243,
    [{tuple,243,
      [{atom,243,get_until},
       {var,243,'Enc'},
       {var,243,'Prompt'},
       {var,243,'M'},
       {var,243,'F'},
       {var,243,'As'}]},
     {var,243,'Port'},
     {var,243,'Q'}],
    [],
    [{call,244,
      {atom,244,get_chars},
      [{var,244,'Prompt'},
       {atom,244,io_lib},
       {atom,244,get_until},
       {tuple,244,[{var,244,'M'},{var,244,'F'},{var,244,'As'}]},
       {var,244,'Port'},
       {var,244,'Q'},
       {var,244,'Enc'}]}]},
   {clause,246,
    [{atom,246,getopts},{var,246,'Port'},{var,246,'Q'}],
    [],
    [{call,247,{atom,247,getopts},[{var,247,'Port'},{var,247,'Q'}]}]},
   {clause,248,
    [{tuple,248,[{atom,248,setopts},{var,248,'Opts'}]},
     {var,248,'Port'},
     {var,248,'Q'}],
    [[{call,248,{atom,248,is_list},[{var,248,'Opts'}]}]],
    [{call,249,
      {atom,249,setopts},
      [{var,249,'Opts'},{var,249,'Port'},{var,249,'Q'}]}]},
   {clause,250,
    [{tuple,250,[{atom,250,requests},{var,250,'Reqs'}]},
     {var,250,'Port'},
     {var,250,'Q'}],
    [],
    [{call,251,
      {atom,251,io_requests},
      [{var,251,'Reqs'},
       {tuple,251,[{atom,251,ok},{atom,251,ok},{var,251,'Q'}]},
       {var,251,'Port'}]}]},
   {clause,254,
    [{tuple,254,[{atom,254,get_geometry},{atom,254,columns}]},
     {var,254,'Port'},
     {var,254,'Q'}],
    [],
    [{'case',255,
      {call,255,{atom,255,get_fd_geometry},[{var,255,'Port'}]},
      [{clause,256,
        [{tuple,256,[{var,256,'W'},{var,256,'_H'}]}],
        [],
        [{tuple,257,[{atom,257,ok},{var,257,'W'},{var,257,'Q'}]}]},
       {clause,258,
        [{var,258,'_'}],
        [],
        [{tuple,259,
          [{atom,259,error},
           {tuple,259,[{atom,259,error},{atom,259,enotsup}]},
           {var,259,'Q'}]}]}]}]},
   {clause,261,
    [{tuple,261,[{atom,261,get_geometry},{atom,261,rows}]},
     {var,261,'Port'},
     {var,261,'Q'}],
    [],
    [{'case',262,
      {call,262,{atom,262,get_fd_geometry},[{var,262,'Port'}]},
      [{clause,263,
        [{tuple,263,[{var,263,'_W'},{var,263,'H'}]}],
        [],
        [{tuple,264,[{atom,264,ok},{var,264,'H'},{var,264,'Q'}]}]},
       {clause,265,
        [{var,265,'_'}],
        [],
        [{tuple,266,
          [{atom,266,error},
           {tuple,266,[{atom,266,error},{atom,266,enotsup}]},
           {var,266,'Q'}]}]}]}]},
   {clause,269,
    [{tuple,269,[{atom,269,put_chars},{var,269,'Chars'}]},
     {var,269,'Port'},
     {var,269,'Q'}],
    [],
    [{call,270,
      {atom,270,io_request},
      [{tuple,270,[{atom,270,put_chars},{atom,270,latin1},{var,270,'Chars'}]},
       {var,270,'Port'},
       {var,270,'Q'}]}]},
   {clause,271,
    [{tuple,271,
      [{atom,271,put_chars},
       {var,271,'Mod'},
       {var,271,'Func'},
       {var,271,'Args'}]},
     {var,271,'Port'},
     {var,271,'Q'}],
    [],
    [{call,272,
      {atom,272,io_request},
      [{tuple,272,
        [{atom,272,put_chars},
         {atom,272,latin1},
         {var,272,'Mod'},
         {var,272,'Func'},
         {var,272,'Args'}]},
       {var,272,'Port'},
       {var,272,'Q'}]}]},
   {clause,273,
    [{tuple,273,[{atom,273,get_chars},{var,273,'Prompt'},{var,273,'N'}]},
     {var,273,'Port'},
     {var,273,'Q'}],
    [],
    [{call,274,
      {atom,274,io_request},
      [{tuple,274,
        [{atom,274,get_chars},
         {atom,274,latin1},
         {var,274,'Prompt'},
         {var,274,'N'}]},
       {var,274,'Port'},
       {var,274,'Q'}]}]},
   {clause,275,
    [{tuple,275,[{atom,275,get_line},{var,275,'Prompt'}]},
     {var,275,'Port'},
     {var,275,'Q'}],
    [],
    [{call,276,
      {atom,276,io_request},
      [{tuple,276,[{atom,276,get_line},{atom,276,latin1},{var,276,'Prompt'}]},
       {var,276,'Port'},
       {var,276,'Q'}]}]},
   {clause,277,
    [{tuple,277,
      [{atom,277,get_until},
       {var,277,'Prompt'},
       {var,277,'M'},
       {var,277,'F'},
       {var,277,'As'}]},
     {var,277,'Port'},
     {var,277,'Q'}],
    [],
    [{call,278,
      {atom,278,io_request},
      [{tuple,278,
        [{atom,278,get_until},
         {atom,278,latin1},
         {var,278,'Prompt'},
         {var,278,'M'},
         {var,278,'F'},
         {var,278,'As'}]},
       {var,278,'Port'},
       {var,278,'Q'}]}]},
   {clause,280,
    [{var,280,'R'},{var,280,'_Port'},{var,280,'Q'}],
    [],
    [{tuple,281,
      [{atom,281,error},
       {tuple,281,
        [{atom,281,error},{tuple,281,[{atom,281,request},{var,281,'R'}]}]},
       {var,281,'Q'}]}]}]},
 {function,286,io_requests,3,
  [{clause,286,
    [{cons,286,{var,286,'R'},{var,286,'Rs'}},
     {tuple,286,[{atom,286,ok},{var,286,'_Res'},{var,286,'Q'}]},
     {var,286,'Port'}],
    [],
    [{call,287,
      {atom,287,io_requests},
      [{var,287,'Rs'},
       {call,287,
        {atom,287,io_request},
        [{var,287,'R'},{var,287,'Port'},{var,287,'Q'}]},
       {var,287,'Port'}]}]},
   {clause,288,
    [{cons,288,{var,288,'_'},{var,288,'_'}},{var,288,'Error'},{var,288,'_'}],
    [],
    [{var,289,'Error'}]},
   {clause,290,
    [{nil,290},{var,290,'Stat'},{var,290,'_'}],
    [],
    [{var,291,'Stat'}]}]},
 {function,297,put_port,2,
  [{clause,297,
    [{var,297,'List'},{var,297,'Port'}],
    [],
    [{call,298,
      {atom,298,send_port},
      [{var,298,'Port'},
       {tuple,298,[{atom,298,command},{var,298,'List'}]}]}]}]},
 {function,302,send_port,2,
  [{clause,302,
    [{var,302,'Port'},{var,302,'Command'}],
    [],
    [{op,303,'!',
      {var,303,'Port'},
      {tuple,303,[{call,303,{atom,303,self},[]},{var,303,'Command'}]}},
     {atom,304,ok}]}]},
 {function,310,io_reply,3,
  [{clause,310,
    [{var,310,'From'},{var,310,'ReplyAs'},{var,310,'Reply'}],
    [],
    [{op,311,'!',
      {var,311,'From'},
      {tuple,311,
       [{atom,311,io_reply},{var,311,'ReplyAs'},{var,311,'Reply'}]}}]}]},
 {function,314,put_chars,3,
  [{clause,314,
    [{var,314,'Chars'},{var,314,'Port'},{var,314,'Q'}],
    [[{call,314,{atom,314,is_binary},[{var,314,'Chars'}]}]],
    [{match,315,
      {atom,315,ok},
      {call,315,{atom,315,put_port},[{var,315,'Chars'},{var,315,'Port'}]}},
     {tuple,316,[{atom,316,ok},{atom,316,ok},{var,316,'Q'}]}]},
   {clause,317,
    [{var,317,'Chars'},{var,317,'Port'},{var,317,'Q'}],
    [],
    [{'case',318,
      {'catch',318,{call,318,{atom,318,list_to_binary},[{var,318,'Chars'}]}},
      [{clause,319,
        [{var,319,'Binary'}],
        [[{call,319,{atom,319,is_binary},[{var,319,'Binary'}]}]],
        [{call,320,
          {atom,320,put_chars},
          [{var,320,'Binary'},{var,320,'Port'},{var,320,'Q'}]}]},
       {clause,321,
        [{var,321,'_'}],
        [],
        [{tuple,322,
          [{atom,322,error},
           {tuple,322,[{atom,322,error},{atom,322,put_chars}]},
           {var,322,'Q'}]}]}]}]}]},
 {function,325,expand_encoding,1,
  [{clause,325,[{nil,325}],[],[{nil,326}]},
   {clause,327,
    [{cons,327,{atom,327,latin1},{var,327,'T'}}],
    [],
    [{cons,328,
      {tuple,328,[{atom,328,encoding},{atom,328,latin1}]},
      {call,328,{atom,328,expand_encoding},[{var,328,'T'}]}}]},
   {clause,329,
    [{cons,329,{atom,329,unicode},{var,329,'T'}}],
    [],
    [{cons,330,
      {tuple,330,[{atom,330,encoding},{atom,330,unicode}]},
      {call,330,{atom,330,expand_encoding},[{var,330,'T'}]}}]},
   {clause,331,
    [{cons,331,{var,331,'H'},{var,331,'T'}}],
    [],
    [{cons,332,
      {var,332,'H'},
      {call,332,{atom,332,expand_encoding},[{var,332,'T'}]}}]}]},
 {function,335,setopts,3,
  [{clause,335,
    [{var,335,'Opts0'},{var,335,'Port'},{var,335,'Q'}],
    [],
    [{match,336,
      {var,336,'Opts'},
      {call,336,
       {remote,336,{atom,336,proplists},{atom,336,unfold}},
       [{call,337,
         {remote,337,{atom,337,proplists},{atom,337,substitute_negations}},
         [{cons,338,{tuple,338,[{atom,338,list},{atom,338,binary}]},{nil,338}},
          {call,339,{atom,339,expand_encoding},[{var,339,'Opts0'}]}]}]}},
     {'case',340,
      {call,340,{atom,340,check_valid_opts},[{var,340,'Opts'}]},
      [{clause,341,
        [{atom,341,true}],
        [],
        [{call,342,
          {atom,342,do_setopts},
          [{var,342,'Opts'},{var,342,'Port'},{var,342,'Q'}]}]},
       {clause,343,
        [{atom,343,false}],
        [],
        [{tuple,344,
          [{atom,344,error},
           {tuple,344,[{atom,344,error},{atom,344,enotsup}]},
           {var,344,'Q'}]}]}]}]}]},
 {function,346,check_valid_opts,1,
  [{clause,346,[{nil,346}],[],[{atom,347,true}]},
   {clause,348,
    [{cons,348,{tuple,348,[{atom,348,binary},{var,348,'_'}]},{var,348,'T'}}],
    [],
    [{call,349,{atom,349,check_valid_opts},[{var,349,'T'}]}]},
   {clause,350,
    [{cons,350,
      {tuple,350,[{atom,350,encoding},{var,350,'Valid'}]},
      {var,350,'T'}}],
    [[{op,350,'=:=',{var,350,'Valid'},{atom,350,latin1}}],
     [{op,350,'=:=',{var,350,'Valid'},{atom,350,utf8}}],
     [{op,350,'=:=',{var,350,'Valid'},{atom,350,unicode}}]],
    [{call,351,{atom,351,check_valid_opts},[{var,351,'T'}]}]},
   {clause,352,[{var,352,'_'}],[],[{atom,353,false}]}]},
 {function,355,do_setopts,3,
  [{clause,355,
    [{var,355,'Opts'},{var,355,'_Port'},{var,355,'Q'}],
    [],
    [{'case',356,
      {call,356,
       {remote,356,{atom,356,proplists},{atom,356,get_value}},
       [{atom,356,encoding},{var,356,'Opts'}]},
      [{clause,357,
        [{var,357,'Valid'}],
        [[{op,357,'=:=',{var,357,'Valid'},{atom,357,unicode}}],
         [{op,357,'=:=',{var,357,'Valid'},{atom,357,utf8}}]],
        [{call,358,{atom,358,put},[{atom,358,encoding},{atom,358,unicode}]}]},
       {clause,359,
        [{atom,359,latin1}],
        [],
        [{call,360,{atom,360,put},[{atom,360,encoding},{atom,360,latin1}]}]},
       {clause,361,[{atom,361,undefined}],[],[{atom,362,ok}]}]},
     {'case',364,
      {call,364,
       {remote,364,{atom,364,proplists},{atom,364,get_value}},
       [{atom,364,binary},{var,364,'Opts'}]},
      [{clause,365,
        [{atom,365,true}],
        [],
        [{call,366,{atom,366,put},[{atom,366,read_mode},{atom,366,binary}]},
         {tuple,367,[{atom,367,ok},{atom,367,ok},{var,367,'Q'}]}]},
       {clause,368,
        [{atom,368,false}],
        [],
        [{call,369,{atom,369,put},[{atom,369,read_mode},{atom,369,list}]},
         {tuple,370,[{atom,370,ok},{atom,370,ok},{var,370,'Q'}]}]},
       {clause,371,
        [{var,371,'_'}],
        [],
        [{tuple,372,[{atom,372,ok},{atom,372,ok},{var,372,'Q'}]}]}]}]}]},
 {function,375,getopts,2,
  [{clause,375,
    [{var,375,'_Port'},{var,375,'Q'}],
    [],
    [{match,376,
      {var,376,'Bin'},
      {tuple,376,
       [{atom,376,binary},
        {op,376,'=:=',
         {call,376,{atom,376,get},[{atom,376,read_mode}]},
         {atom,376,binary}}]}},
     {match,377,
      {var,377,'Uni'},
      {tuple,377,
       [{atom,377,encoding},{call,377,{atom,377,get},[{atom,377,encoding}]}]}},
     {tuple,378,
      [{atom,378,ok},
       {cons,378,{var,378,'Bin'},{cons,378,{var,378,'Uni'},{nil,378}}},
       {var,378,'Q'}]}]}]},
 {function,380,get_line_bin,4,
  [{clause,380,
    [{var,380,'Prompt'},{var,380,'Port'},{var,380,'Q'},{var,380,'Enc'}],
    [],
    [{'case',381,
      {call,381,{atom,381,prompt},[{var,381,'Port'},{var,381,'Prompt'}]},
      [{clause,382,
        [{atom,382,error}],
        [],
        [{tuple,383,
          [{atom,383,error},
           {tuple,383,[{atom,383,error},{atom,383,get_line}]},
           {var,383,'Q'}]}]},
       {clause,384,
        [{atom,384,ok}],
        [],
        [{'case',385,
          {tuple,385,
           [{call,385,{atom,385,get},[{atom,385,eof}]},
            {call,385,
             {remote,385,{atom,385,queue},{atom,385,is_empty}},
             [{var,385,'Q'}]}]},
          [{clause,386,
            [{tuple,386,[{atom,386,true},{atom,386,true}]}],
            [],
            [{tuple,387,[{atom,387,ok},{atom,387,eof},{var,387,'Q'}]}]},
           {clause,388,
            [{var,388,'_'}],
            [],
            [{call,389,
              {atom,389,get_line},
              [{var,389,'Prompt'},
               {var,389,'Port'},
               {var,389,'Q'},
               {nil,389},
               {var,389,'Enc'}]}]}]}]}]}]}]},
 {function,393,get_line,5,
  [{clause,393,
    [{var,393,'Prompt'},
     {var,393,'Port'},
     {var,393,'Q'},
     {var,393,'Acc'},
     {var,393,'Enc'}],
    [],
    [{'case',394,
      {call,394,
       {remote,394,{atom,394,queue},{atom,394,is_empty}},
       [{var,394,'Q'}]},
      [{clause,395,
        [{atom,395,true}],
        [],
        [{'receive',396,
          [{clause,397,
            [{tuple,397,
              [{var,397,'Port'},
               {tuple,397,[{atom,397,data},{var,397,'Bytes'}]}]}],
            [],
            [{call,398,
              {atom,398,get_line_bytes},
              [{var,398,'Prompt'},
               {var,398,'Port'},
               {var,398,'Q'},
               {var,398,'Acc'},
               {var,398,'Bytes'},
               {var,398,'Enc'}]}]},
           {clause,399,
            [{tuple,399,[{var,399,'Port'},{atom,399,eof}]}],
            [],
            [{call,400,{atom,400,put},[{atom,400,eof},{atom,400,true}]},
             {tuple,401,[{atom,401,ok},{atom,401,eof},{nil,401}]}]},
           {clause,402,
            [{tuple,402,
              [{atom,402,io_request},
               {var,402,'From'},
               {var,402,'ReplyAs'},
               {match,402,
                {tuple,402,[{atom,402,get_geometry},{var,402,'_'}]},
                {var,402,'Req'}}]}],
            [[{call,402,{atom,402,is_pid},[{var,402,'From'}]}]],
            [{call,403,
              {atom,403,do_io_request},
              [{var,403,'Req'},
               {var,403,'From'},
               {var,403,'ReplyAs'},
               {var,403,'Port'},
               {call,404,{remote,404,{atom,404,queue},{atom,404,new}},[]}]},
             {call,406,
              {atom,406,get_line},
              [{var,406,'Prompt'},
               {var,406,'Port'},
               {var,406,'Q'},
               {var,406,'Acc'},
               {var,406,'Enc'}]}]},
           {clause,407,
            [{tuple,407,
              [{atom,407,io_request},
               {var,407,'From'},
               {var,407,'ReplyAs'},
               {var,407,'Request'}]}],
            [[{call,407,{atom,407,is_pid},[{var,407,'From'}]}]],
            [{call,408,
              {atom,408,do_io_request},
              [{var,408,'Request'},
               {var,408,'From'},
               {var,408,'ReplyAs'},
               {var,408,'Port'},
               {call,408,{remote,408,{atom,408,queue},{atom,408,new}},[]}]},
             {'case',409,
              {call,409,
               {atom,409,prompt},
               [{var,409,'Port'},{var,409,'Prompt'}]},
              [{clause,410,
                [{atom,410,error}],
                [],
                [{tuple,411,
                  [{atom,411,error},
                   {tuple,411,[{atom,411,error},{atom,411,get_line}]},
                   {var,411,'Q'}]}]},
               {clause,412,
                [{atom,412,ok}],
                [],
                [{call,413,
                  {atom,413,get_line},
                  [{var,413,'Prompt'},
                   {var,413,'Port'},
                   {var,413,'Q'},
                   {var,413,'Acc'},
                   {var,413,'Enc'}]}]}]}]},
           {clause,415,
            [{tuple,415,
              [{atom,415,'EXIT'},{var,415,'From'},{var,415,'What'}]}],
            [[{op,415,'=:=',
               {call,415,{atom,415,node},[{var,415,'From'}]},
               {call,415,{atom,415,node},[]}}]],
            [{tuple,416,[{atom,416,exit},{var,416,'What'}]}]}]}]},
       {clause,418,
        [{atom,418,false}],
        [],
        [{call,419,
          {atom,419,get_line_doit},
          [{var,419,'Prompt'},
           {var,419,'Port'},
           {var,419,'Q'},
           {var,419,'Acc'},
           {var,419,'Enc'}]}]}]}]}]},
 {function,422,get_line_bytes,6,
  [{clause,422,
    [{var,422,'Prompt'},
     {var,422,'Port'},
     {var,422,'Q'},
     {var,422,'Acc'},
     {var,422,'Bytes'},
     {var,422,'Enc'}],
    [],
    [{'case',423,
      {call,423,{atom,423,get},[{atom,423,shell}]},
      [{clause,424,
        [{atom,424,noshell}],
        [],
        [{call,425,
          {atom,425,get_line_doit},
          [{var,425,'Prompt'},
           {var,425,'Port'},
           {call,425,
            {remote,425,{atom,425,queue},{atom,425,snoc}},
            [{var,425,'Q'},{var,425,'Bytes'}]},
           {var,425,'Acc'},
           {var,425,'Enc'}]}]},
       {clause,426,
        [{var,426,'_'}],
        [],
        [{'case',427,
          {call,427,{atom,427,contains_ctrl_g_or_ctrl_c},[{var,427,'Bytes'}]},
          [{clause,428,
            [{atom,428,false}],
            [],
            [{call,429,
              {atom,429,get_line_doit},
              [{var,429,'Prompt'},
               {var,429,'Port'},
               {call,429,
                {remote,429,{atom,429,queue},{atom,429,snoc}},
                [{var,429,'Q'},{var,429,'Bytes'}]},
               {var,429,'Acc'},
               {var,429,'Enc'}]}]},
           {clause,430,
            [{var,430,'_'}],
            [],
            [{call,431,{atom,431,throw},[{atom,431,new_shell}]}]}]}]}]}]}]},
 {function,434,is_cr_at,2,
  [{clause,434,
    [{var,434,'Pos'},{var,434,'Bin'}],
    [],
    [{'case',435,
      {var,435,'Bin'},
      [{clause,436,
        [{bin,436,
          [{bin_element,436,{var,436,'_'},{var,436,'Pos'},[binary]},
           {bin_element,436,{char,436,13},default,default},
           {bin_element,436,{var,436,'_'},default,[binary]}]}],
        [],
        [{atom,437,true}]},
       {clause,438,[{var,438,'_'}],[],[{atom,439,false}]}]}]}]},
 {function,441,srch,3,
  [{clause,441,
    [{bin,441,[]},{var,441,'_'},{var,441,'_'}],
    [],
    [{atom,442,nomatch}]},
   {clause,443,
    [{bin,443,
      [{bin_element,443,{var,443,'X'},{integer,443,8},default},
       {bin_element,443,{var,443,'_'},default,[binary]}]},
     {var,443,'X'},
     {var,443,'N'}],
    [],
    [{tuple,444,
      [{atom,444,match},
       {cons,444,{tuple,444,[{var,444,'N'},{integer,444,1}]},{nil,444}}]}]},
   {clause,445,
    [{bin,445,
      [{bin_element,445,{var,445,'_'},{integer,445,8},default},
       {bin_element,445,{var,445,'T'},default,[binary]}]},
     {var,445,'X'},
     {var,445,'N'}],
    [],
    [{call,446,
      {atom,446,srch},
      [{var,446,'T'},
       {var,446,'X'},
       {op,446,'+',{var,446,'N'},{integer,446,1}}]}]}]},
 {function,448,get_line_doit,5,
  [{clause,448,
    [{var,448,'Prompt'},
     {var,448,'Port'},
     {var,448,'Q'},
     {var,448,'Accu'},
     {var,448,'Enc'}],
    [],
    [{'case',449,
      {call,449,
       {remote,449,{atom,449,queue},{atom,449,is_empty}},
       [{var,449,'Q'}]},
      [{clause,450,
        [{atom,450,true}],
        [],
        [{'case',451,
          {call,451,{atom,451,get},[{atom,451,eof}]},
          [{clause,452,
            [{atom,452,true}],
            [],
            [{'case',453,
              {var,453,'Accu'},
              [{clause,454,
                [{nil,454}],
                [],
                [{tuple,455,[{atom,455,ok},{atom,455,eof},{var,455,'Q'}]}]},
               {clause,456,
                [{var,456,'_'}],
                [],
                [{tuple,457,
                  [{atom,457,ok},
                   {call,457,{atom,457,binrev},[{var,457,'Accu'},{nil,457}]},
                   {var,457,'Q'}]}]}]}]},
           {clause,459,
            [{var,459,'_'}],
            [],
            [{call,460,
              {atom,460,get_line},
              [{var,460,'Prompt'},
               {var,460,'Port'},
               {var,460,'Q'},
               {var,460,'Accu'},
               {var,460,'Enc'}]}]}]}]},
       {clause,462,
        [{atom,462,false}],
        [],
        [{match,463,
          {var,463,'Bin'},
          {call,463,
           {remote,463,{atom,463,queue},{atom,463,head}},
           [{var,463,'Q'}]}},
         {'case',464,
          {call,464,
           {atom,464,srch},
           [{var,464,'Bin'},{char,464,10},{integer,464,0}]},
          [{clause,465,
            [{atom,465,nomatch}],
            [],
            [{match,466,
              {var,466,'X'},
              {op,466,'-',
               {call,466,{atom,466,byte_size},[{var,466,'Bin'}]},
               {integer,466,1}}},
             {'case',467,
              {call,467,{atom,467,is_cr_at},[{var,467,'X'},{var,467,'Bin'}]},
              [{clause,468,
                [{atom,468,true}],
                [],
                [{match,469,
                  {bin,469,
                   [{bin_element,469,{var,469,'D'},{var,469,'X'},[binary]},
                    {bin_element,469,{var,469,'_'},default,[binary]}]},
                  {var,469,'Bin'}},
                 {call,470,
                  {atom,470,get_line_doit},
                  [{var,470,'Prompt'},
                   {var,470,'Port'},
                   {call,470,
                    {remote,470,{atom,470,queue},{atom,470,tail}},
                    [{var,470,'Q'}]},
                   {cons,471,
                    {bin,471,
                     [{bin_element,471,{char,471,13},default,default}]},
                    {cons,471,{var,471,'D'},{var,471,'Accu'}}},
                   {var,471,'Enc'}]}]},
               {clause,472,
                [{atom,472,false}],
                [],
                [{call,473,
                  {atom,473,get_line_doit},
                  [{var,473,'Prompt'},
                   {var,473,'Port'},
                   {call,473,
                    {remote,473,{atom,473,queue},{atom,473,tail}},
                    [{var,473,'Q'}]},
                   {cons,474,{var,474,'Bin'},{var,474,'Accu'}},
                   {var,474,'Enc'}]}]}]}]},
           {clause,476,
            [{tuple,476,
              [{atom,476,match},
               {cons,476,
                {tuple,476,[{var,476,'Pos'},{integer,476,1}]},
                {nil,476}}]}],
            [],
            [{match,478,
              {var,478,'PosPlus'},
              {op,478,'+',{var,478,'Pos'},{integer,478,1}}},
             {'case',479,
              {var,479,'Accu'},
              [{clause,480,
                [{nil,480}],
                [],
                [{match,481,
                  {tuple,481,[{var,481,'Head'},{var,481,'Tail'}]},
                  {'case',482,
                   {call,482,
                    {atom,482,is_cr_at},
                    [{op,482,'-',{var,482,'Pos'},{integer,482,1}},
                     {var,482,'Bin'}]},
                   [{clause,483,
                     [{atom,483,false}],
                     [],
                     [{match,485,
                       {bin,484,
                        [{bin_element,484,
                          {var,484,'H'},
                          {var,484,'PosPlus'},
                          [binary]},
                         {bin_element,485,{var,485,'T'},default,[binary]}]},
                       {var,485,'Bin'}},
                      {tuple,486,[{var,486,'H'},{var,486,'T'}]}]},
                    {clause,487,
                     [{atom,487,true}],
                     [],
                     [{match,488,
                       {var,488,'PosMinus'},
                       {op,488,'-',{var,488,'Pos'},{integer,488,1}}},
                      {match,490,
                       {bin,489,
                        [{bin_element,489,
                          {var,489,'H'},
                          {var,489,'PosMinus'},
                          [binary]},
                         {bin_element,490,{var,490,'_'},default,default},
                         {bin_element,490,{var,490,'_'},default,default},
                         {bin_element,490,{var,490,'T'},default,[binary]}]},
                       {var,490,'Bin'}},
                      {tuple,491,
                       [{call,491,
                         {atom,491,binrev},
                         [{nil,491},
                          {cons,491,
                           {var,491,'H'},
                           {cons,491,{char,491,10},{nil,491}}}]},
                        {var,491,'T'}]}]}]}},
                 {'case',493,
                  {var,493,'Tail'},
                  [{clause,494,
                    [{bin,494,[]}],
                    [],
                    [{tuple,495,
                      [{atom,495,ok},
                       {call,495,
                        {atom,495,cast},
                        [{var,495,'Head'},{var,495,'Enc'}]},
                       {call,495,
                        {remote,495,{atom,495,queue},{atom,495,tail}},
                        [{var,495,'Q'}]}]}]},
                   {clause,496,
                    [{var,496,'_'}],
                    [],
                    [{tuple,497,
                      [{atom,497,ok},
                       {call,497,
                        {atom,497,cast},
                        [{var,497,'Head'},{var,497,'Enc'}]},
                       {call,498,
                        {remote,498,{atom,498,queue},{atom,498,cons}},
                        [{var,498,'Tail'},
                         {call,498,
                          {remote,498,{atom,498,queue},{atom,498,tail}},
                          [{var,498,'Q'}]}]}]}]}]}]},
               {clause,500,
                [{cons,500,
                  {bin,500,[{bin_element,500,{char,500,13},default,default}]},
                  {var,500,'Stack1'}}],
                [[{op,500,'=:=',{var,500,'Pos'},{integer,500,0}}]],
                [{match,501,
                  {bin,501,
                   [{bin_element,501,
                     {var,501,'_'},
                     {var,501,'PosPlus'},
                     [binary]},
                    {bin_element,501,{var,501,'Tail'},default,[binary]}]},
                  {var,501,'Bin'}},
                 {'case',502,
                  {var,502,'Tail'},
                  [{clause,503,
                    [{bin,503,[]}],
                    [],
                    [{tuple,504,
                      [{atom,504,ok},
                       {call,504,
                        {atom,504,cast},
                        [{call,504,
                          {atom,504,binrev},
                          [{var,504,'Stack1'},
                           {cons,504,{char,504,10},{nil,504}}]},
                         {var,504,'Enc'}]},
                       {call,505,
                        {remote,505,{atom,505,queue},{atom,505,tail}},
                        [{var,505,'Q'}]}]}]},
                   {clause,506,
                    [{var,506,'_'}],
                    [],
                    [{tuple,507,
                      [{atom,507,ok},
                       {call,507,
                        {atom,507,cast},
                        [{call,507,
                          {atom,507,binrev},
                          [{var,507,'Stack1'},
                           {cons,507,{char,507,10},{nil,507}}]},
                         {var,507,'Enc'}]},
                       {call,508,
                        {remote,508,{atom,508,queue},{atom,508,cons}},
                        [{var,508,'Tail'},
                         {call,508,
                          {remote,508,{atom,508,queue},{atom,508,tail}},
                          [{var,508,'Q'}]}]}]}]}]}]},
               {clause,510,
                [{var,510,'_'}],
                [],
                [{match,511,
                  {tuple,511,[{var,511,'Head'},{var,511,'Tail'}]},
                  {'case',512,
                   {call,512,
                    {atom,512,is_cr_at},
                    [{op,512,'-',{var,512,'Pos'},{integer,512,1}},
                     {var,512,'Bin'}]},
                   [{clause,513,
                     [{atom,513,false}],
                     [],
                     [{match,515,
                       {bin,514,
                        [{bin_element,514,
                          {var,514,'H'},
                          {var,514,'PosPlus'},
                          [binary]},
                         {bin_element,515,{var,515,'T'},default,[binary]}]},
                       {var,515,'Bin'}},
                      {tuple,516,[{var,516,'H'},{var,516,'T'}]}]},
                    {clause,517,
                     [{atom,517,true}],
                     [],
                     [{match,518,
                       {var,518,'PosMinus'},
                       {op,518,'-',{var,518,'Pos'},{integer,518,1}}},
                      {match,520,
                       {bin,519,
                        [{bin_element,519,
                          {var,519,'H'},
                          {var,519,'PosMinus'},
                          [binary]},
                         {bin_element,520,{var,520,'_'},default,default},
                         {bin_element,520,{var,520,'_'},default,default},
                         {bin_element,520,{var,520,'T'},default,[binary]}]},
                       {var,520,'Bin'}},
                      {tuple,521,
                       [{cons,521,
                         {var,521,'H'},
                         {cons,521,{char,521,10},{nil,521}}},
                        {var,521,'T'}]}]}]}},
                 {'case',523,
                  {var,523,'Tail'},
                  [{clause,524,
                    [{bin,524,[]}],
                    [],
                    [{tuple,525,
                      [{atom,525,ok},
                       {call,525,
                        {atom,525,cast},
                        [{call,525,
                          {atom,525,binrev},
                          [{var,525,'Accu'},
                           {cons,525,{var,525,'Head'},{nil,525}}]},
                         {var,525,'Enc'}]},
                       {call,526,
                        {remote,526,{atom,526,queue},{atom,526,tail}},
                        [{var,526,'Q'}]}]}]},
                   {clause,527,
                    [{var,527,'_'}],
                    [],
                    [{tuple,528,
                      [{atom,528,ok},
                       {call,528,
                        {atom,528,cast},
                        [{call,528,
                          {atom,528,binrev},
                          [{var,528,'Accu'},
                           {cons,528,{var,528,'Head'},{nil,528}}]},
                         {var,528,'Enc'}]},
                       {call,529,
                        {remote,529,{atom,529,queue},{atom,529,cons}},
                        [{var,529,'Tail'},
                         {call,529,
                          {remote,529,{atom,529,queue},{atom,529,tail}},
                          [{var,529,'Q'}]}]}]}]}]}]}]}]}]}]}]}]}]},
 {function,535,binrev,2,
  [{clause,535,
    [{var,535,'L'},{var,535,'T'}],
    [],
    [{call,536,
      {atom,536,list_to_binary},
      [{call,536,
        {remote,536,{atom,536,lists},{atom,536,reverse}},
        [{var,536,'L'},{var,536,'T'}]}]}]}]},
 {function,596,get_chars,7,
  [{clause,596,
    [{var,596,'Prompt'},
     {var,596,'M'},
     {var,596,'F'},
     {var,596,'Xa'},
     {var,596,'Port'},
     {var,596,'Q'},
     {var,596,'Enc'}],
    [],
    [{'case',597,
      {call,597,{atom,597,prompt},[{var,597,'Port'},{var,597,'Prompt'}]},
      [{clause,598,
        [{atom,598,error}],
        [],
        [{tuple,599,
          [{atom,599,error},
           {tuple,599,[{atom,599,error},{atom,599,get_chars}]},
           {var,599,'Q'}]}]},
       {clause,600,
        [{atom,600,ok}],
        [],
        [{'case',601,
          {tuple,601,
           [{call,601,{atom,601,get},[{atom,601,eof}]},
            {call,601,
             {remote,601,{atom,601,queue},{atom,601,is_empty}},
             [{var,601,'Q'}]}]},
          [{clause,602,
            [{tuple,602,[{atom,602,true},{atom,602,true}]}],
            [],
            [{tuple,603,[{atom,603,ok},{atom,603,eof},{var,603,'Q'}]}]},
           {clause,604,
            [{var,604,'_'}],
            [],
            [{call,605,
              {atom,605,get_chars},
              [{var,605,'Prompt'},
               {var,605,'M'},
               {var,605,'F'},
               {var,605,'Xa'},
               {var,605,'Port'},
               {var,605,'Q'},
               {atom,605,start},
               {var,605,'Enc'}]}]}]}]}]}]}]},
 {function,610,get_chars,8,
  [{clause,610,
    [{var,610,'Prompt'},
     {var,610,'M'},
     {var,610,'F'},
     {var,610,'Xa'},
     {var,610,'Port'},
     {var,610,'Q'},
     {var,610,'State'},
     {var,610,'Enc'}],
    [],
    [{'case',611,
      {call,611,
       {remote,611,{atom,611,queue},{atom,611,is_empty}},
       [{var,611,'Q'}]},
      [{clause,612,
        [{atom,612,true}],
        [],
        [{'receive',613,
          [{clause,614,
            [{tuple,614,
              [{var,614,'Port'},
               {tuple,614,[{atom,614,data},{var,614,'Bytes'}]}]}],
            [],
            [{call,615,
              {atom,615,get_chars_bytes},
              [{var,615,'State'},
               {var,615,'M'},
               {var,615,'F'},
               {var,615,'Xa'},
               {var,615,'Port'},
               {var,615,'Q'},
               {var,615,'Bytes'},
               {var,615,'Enc'}]}]},
           {clause,616,
            [{tuple,616,[{var,616,'Port'},{atom,616,eof}]}],
            [],
            [{call,617,{atom,617,put},[{atom,617,eof},{atom,617,true}]},
             {tuple,618,[{atom,618,ok},{atom,618,eof},{nil,618}]}]},
           {clause,622,
            [{tuple,622,
              [{atom,622,io_request},
               {var,622,'From'},
               {var,622,'ReplyAs'},
               {match,622,
                {tuple,622,[{atom,622,get_geometry},{var,622,'_'}]},
                {var,622,'Req'}}]}],
            [[{call,622,{atom,622,is_pid},[{var,622,'From'}]}]],
            [{call,623,
              {atom,623,do_io_request},
              [{var,623,'Req'},
               {var,623,'From'},
               {var,623,'ReplyAs'},
               {var,623,'Port'},
               {call,624,{remote,624,{atom,624,queue},{atom,624,new}},[]}]},
             {call,626,
              {atom,626,get_chars},
              [{var,626,'Prompt'},
               {var,626,'M'},
               {var,626,'F'},
               {var,626,'Xa'},
               {var,626,'Port'},
               {var,626,'Q'},
               {var,626,'State'},
               {var,626,'Enc'}]}]},
           {clause,627,
            [{tuple,627,
              [{atom,627,io_request},
               {var,627,'From'},
               {var,627,'ReplyAs'},
               {var,627,'Request'}]}],
            [[{call,627,{atom,627,is_pid},[{var,627,'From'}]}]],
            [{call,628,
              {atom,628,get_chars_req},
              [{var,628,'Prompt'},
               {var,628,'M'},
               {var,628,'F'},
               {var,628,'Xa'},
               {var,628,'Port'},
               {var,628,'Q'},
               {var,628,'State'},
               {var,629,'Request'},
               {var,629,'From'},
               {var,629,'ReplyAs'},
               {var,629,'Enc'}]}]},
           {clause,630,
            [{tuple,630,
              [{atom,630,'EXIT'},{var,630,'From'},{var,630,'What'}]}],
            [[{op,630,'=:=',
               {call,630,{atom,630,node},[{var,630,'From'}]},
               {call,630,{atom,630,node},[]}}]],
            [{tuple,631,[{atom,631,exit},{var,631,'What'}]}]}]}]},
       {clause,633,
        [{atom,633,false}],
        [],
        [{call,634,
          {atom,634,get_chars_apply},
          [{var,634,'State'},
           {var,634,'M'},
           {var,634,'F'},
           {var,634,'Xa'},
           {var,634,'Port'},
           {var,634,'Q'},
           {var,634,'Enc'}]}]}]}]}]},
 {function,637,get_chars_req,11,
  [{clause,637,
    [{var,637,'Prompt'},
     {var,637,'M'},
     {var,637,'F'},
     {var,637,'XtraArg'},
     {var,637,'Port'},
     {var,637,'Q'},
     {var,637,'State'},
     {var,638,'Req'},
     {var,638,'From'},
     {var,638,'ReplyAs'},
     {var,638,'Enc'}],
    [],
    [{call,639,
      {atom,639,do_io_request},
      [{var,639,'Req'},
       {var,639,'From'},
       {var,639,'ReplyAs'},
       {var,639,'Port'},
       {call,639,{remote,639,{atom,639,queue},{atom,639,new}},[]}]},
     {'case',640,
      {call,640,{atom,640,prompt},[{var,640,'Port'},{var,640,'Prompt'}]},
      [{clause,641,
        [{atom,641,error}],
        [],
        [{tuple,642,
          [{atom,642,error},
           {tuple,642,[{atom,642,error},{atom,642,get_chars}]},
           {var,642,'Q'}]}]},
       {clause,643,
        [{atom,643,ok}],
        [],
        [{call,644,
          {atom,644,get_chars},
          [{var,644,'Prompt'},
           {var,644,'M'},
           {var,644,'F'},
           {var,644,'XtraArg'},
           {var,644,'Port'},
           {var,644,'Q'},
           {var,644,'State'},
           {var,644,'Enc'}]}]}]}]}]},
 {function,649,get_chars_bytes,8,
  [{clause,649,
    [{var,649,'State'},
     {var,649,'M'},
     {var,649,'F'},
     {var,649,'Xa'},
     {var,649,'Port'},
     {var,649,'Q'},
     {var,649,'Bytes'},
     {var,649,'Enc'}],
    [],
    [{'case',650,
      {call,650,{atom,650,get},[{atom,650,shell}]},
      [{clause,651,
        [{atom,651,noshell}],
        [],
        [{call,652,
          {atom,652,get_chars_apply},
          [{var,652,'State'},
           {var,652,'M'},
           {var,652,'F'},
           {var,652,'Xa'},
           {var,652,'Port'},
           {call,652,
            {remote,652,{atom,652,queue},{atom,652,snoc}},
            [{var,652,'Q'},{var,652,'Bytes'}]},
           {var,652,'Enc'}]}]},
       {clause,653,
        [{var,653,'_'}],
        [],
        [{'case',654,
          {call,654,{atom,654,contains_ctrl_g_or_ctrl_c},[{var,654,'Bytes'}]},
          [{clause,655,
            [{atom,655,false}],
            [],
            [{call,656,
              {atom,656,get_chars_apply},
              [{var,656,'State'},
               {var,656,'M'},
               {var,656,'F'},
               {var,656,'Xa'},
               {var,656,'Port'},
               {call,657,
                {remote,657,{atom,657,queue},{atom,657,snoc}},
                [{var,657,'Q'},{var,657,'Bytes'}]},
               {var,657,'Enc'}]}]},
           {clause,658,
            [{var,658,'_'}],
            [],
            [{call,659,{atom,659,throw},[{atom,659,new_shell}]}]}]}]}]}]}]},
 {function,663,get_chars_apply,7,
  [{clause,663,
    [{var,663,'State0'},
     {var,663,'M'},
     {var,663,'F'},
     {var,663,'Xa'},
     {var,663,'Port'},
     {var,663,'Q'},
     {var,663,'Enc'}],
    [],
    [{'case',664,
      {'catch',664,
       {call,664,
        {remote,664,{var,664,'M'},{var,664,'F'}},
        [{var,664,'State0'},
         {call,664,
          {atom,664,cast},
          [{call,664,
            {remote,664,{atom,664,queue},{atom,664,head}},
            [{var,664,'Q'}]},
           {var,664,'Enc'}]},
         {var,664,'Enc'},
         {var,664,'Xa'}]}},
      [{clause,665,
        [{tuple,665,[{atom,665,stop},{var,665,'Result'},{bin,665,[]}]}],
        [],
        [{tuple,666,
          [{atom,666,ok},
           {var,666,'Result'},
           {call,666,
            {remote,666,{atom,666,queue},{atom,666,tail}},
            [{var,666,'Q'}]}]}]},
       {clause,667,
        [{tuple,667,[{atom,667,stop},{var,667,'Result'},{nil,667}]}],
        [],
        [{tuple,668,
          [{atom,668,ok},
           {var,668,'Result'},
           {call,668,
            {remote,668,{atom,668,queue},{atom,668,tail}},
            [{var,668,'Q'}]}]}]},
       {clause,669,
        [{tuple,669,[{atom,669,stop},{var,669,'Result'},{atom,669,eof}]}],
        [],
        [{tuple,670,
          [{atom,670,ok},
           {var,670,'Result'},
           {call,670,
            {remote,670,{atom,670,queue},{atom,670,tail}},
            [{var,670,'Q'}]}]}]},
       {clause,671,
        [{tuple,671,[{atom,671,stop},{var,671,'Result'},{var,671,'Buf'}]}],
        [],
        [{tuple,672,
          [{atom,672,ok},
           {var,672,'Result'},
           {call,672,
            {remote,672,{atom,672,queue},{atom,672,cons}},
            [{var,672,'Buf'},
             {call,672,
              {remote,672,{atom,672,queue},{atom,672,tail}},
              [{var,672,'Q'}]}]}]}]},
       {clause,673,
        [{tuple,673,[{atom,673,'EXIT'},{var,673,'_Why'}]}],
        [],
        [{tuple,674,
          [{atom,674,error},
           {tuple,674,
            [{atom,674,error},
             {call,674,
              {atom,674,err_func},
              [{var,674,'M'},{var,674,'F'},{var,674,'Xa'}]}]},
           {call,674,{remote,674,{atom,674,queue},{atom,674,new}},[]}]}]},
       {clause,675,
        [{var,675,'State1'}],
        [],
        [{call,676,
          {atom,676,get_chars_more},
          [{var,676,'State1'},
           {var,676,'M'},
           {var,676,'F'},
           {var,676,'Xa'},
           {var,676,'Port'},
           {call,676,
            {remote,676,{atom,676,queue},{atom,676,tail}},
            [{var,676,'Q'}]},
           {var,676,'Enc'}]}]}]}]}]},
 {function,679,get_chars_more,7,
  [{clause,679,
    [{var,679,'State'},
     {var,679,'M'},
     {var,679,'F'},
     {var,679,'Xa'},
     {var,679,'Port'},
     {var,679,'Q'},
     {var,679,'Enc'}],
    [],
    [{'case',680,
      {call,680,
       {remote,680,{atom,680,queue},{atom,680,is_empty}},
       [{var,680,'Q'}]},
      [{clause,681,
        [{atom,681,true}],
        [],
        [{'case',682,
          {call,682,{atom,682,get},[{atom,682,eof}]},
          [{clause,683,
            [{atom,683,undefined}],
            [],
            [{'receive',684,
              [{clause,685,
                [{tuple,685,
                  [{var,685,'Port'},
                   {tuple,685,[{atom,685,data},{var,685,'Bytes'}]}]}],
                [],
                [{call,686,
                  {atom,686,get_chars_bytes},
                  [{var,686,'State'},
                   {var,686,'M'},
                   {var,686,'F'},
                   {var,686,'Xa'},
                   {var,686,'Port'},
                   {var,686,'Q'},
                   {var,686,'Bytes'},
                   {var,686,'Enc'}]}]},
               {clause,687,
                [{tuple,687,[{var,687,'Port'},{atom,687,eof}]}],
                [],
                [{call,688,{atom,688,put},[{atom,688,eof},{atom,688,true}]},
                 {call,689,
                  {atom,689,get_chars_apply},
                  [{var,689,'State'},
                   {var,689,'M'},
                   {var,689,'F'},
                   {var,689,'Xa'},
                   {var,689,'Port'},
                   {call,690,
                    {remote,690,{atom,690,queue},{atom,690,snoc}},
                    [{var,690,'Q'},{atom,690,eof}]},
                   {var,690,'Enc'}]}]},
               {clause,691,
                [{tuple,691,
                  [{atom,691,'EXIT'},{var,691,'From'},{var,691,'What'}]}],
                [[{op,691,'=:=',
                   {call,691,{atom,691,node},[{var,691,'From'}]},
                   {call,691,{atom,691,node},[]}}]],
                [{tuple,692,[{atom,692,exit},{var,692,'What'}]}]}]}]},
           {clause,694,
            [{var,694,'_'}],
            [],
            [{call,695,
              {atom,695,get_chars_apply},
              [{var,695,'State'},
               {var,695,'M'},
               {var,695,'F'},
               {var,695,'Xa'},
               {var,695,'Port'},
               {call,695,
                {remote,695,{atom,695,queue},{atom,695,snoc}},
                [{var,695,'Q'},{atom,695,eof}]},
               {var,695,'Enc'}]}]}]}]},
       {clause,697,
        [{atom,697,false}],
        [],
        [{call,698,
          {atom,698,get_chars_apply},
          [{var,698,'State'},
           {var,698,'M'},
           {var,698,'F'},
           {var,698,'Xa'},
           {var,698,'Port'},
           {var,698,'Q'},
           {var,698,'Enc'}]}]}]}]}]},
 {function,706,prompt,2,
  [{clause,706,[{var,706,'_Port'},{atom,706,''}],[],[{atom,706,ok}]},
   {clause,707,
    [{var,707,'Port'},{var,707,'Prompt'}],
    [],
    [{match,708,
      {var,708,'Encoding'},
      {call,708,{atom,708,get},[{atom,708,encoding}]}},
     {match,709,
      {var,709,'PromptString'},
      {call,709,
       {remote,709,{atom,709,io_lib},{atom,709,format_prompt}},
       [{var,709,'Prompt'},{var,709,'Encoding'}]}},
     {'case',710,
      {call,710,
       {atom,710,wrap_characters_to_binary},
       [{var,710,'PromptString'},{atom,710,unicode},{var,710,'Encoding'}]},
      [{clause,711,
        [{var,711,'Bin'}],
        [[{call,711,{atom,711,is_binary},[{var,711,'Bin'}]}]],
        [{call,712,{atom,712,put_port},[{var,712,'Bin'},{var,712,'Port'}]}]},
       {clause,713,[{atom,713,error}],[],[{atom,714,error}]}]}]}]},
 {function,718,err_func,3,
  [{clause,718,
    [{atom,718,io_lib},
     {atom,718,get_until},
     {tuple,718,[{var,718,'_'},{var,718,'F'},{var,718,'_'}]}],
    [],
    [{var,719,'F'}]},
   {clause,720,
    [{var,720,'_'},{var,720,'F'},{var,720,'_'}],
    [],
    [{var,721,'F'}]}]},
 {function,725,contains_ctrl_g_or_ctrl_c,1,
  [{clause,725,
    [{var,725,'BinOrList'}],
    [],
    [{'case',726,
      {tuple,726,
       [{call,726,
         {remote,726,{atom,726,re},{atom,726,run}},
         [{var,726,'BinOrList'},
          {bin,726,[{bin_element,726,{integer,726,3},default,default}]}]},
        {call,726,
         {remote,726,{atom,726,re},{atom,726,run}},
         [{var,726,'BinOrList'},
          {bin,726,[{bin_element,726,{integer,726,7},default,default}]}]}]},
      [{clause,727,
        [{tuple,727,[{atom,727,nomatch},{atom,727,nomatch}]}],
        [],
        [{atom,727,false}]},
       {clause,728,[{var,728,'_'}],[],[{atom,728,true}]}]}]}]},
 {function,732,cast,2,
  [{clause,732,
    [{var,732,'Data'},{var,732,'_Encoding'}],
    [[{call,732,{atom,732,is_atom},[{var,732,'Data'}]}]],
    [{var,733,'Data'}]},
   {clause,734,
    [{var,734,'Data'},{var,734,'Encoding'}],
    [],
    [{match,735,
      {var,735,'IoEncoding'},
      {call,735,{atom,735,get},[{atom,735,encoding}]}},
     {call,736,
      {atom,736,cast},
      [{var,736,'Data'},
       {call,736,{atom,736,get},[{atom,736,read_mode}]},
       {var,736,'IoEncoding'},
       {var,736,'Encoding'}]}]}]},
 {function,738,cast,4,
  [{clause,738,
    [{var,738,'B'},{atom,738,binary},{atom,738,latin1},{atom,738,latin1}],
    [[{call,738,{atom,738,is_binary},[{var,738,'B'}]}]],
    [{var,739,'B'}]},
   {clause,740,
    [{var,740,'L'},{atom,740,binary},{atom,740,latin1},{atom,740,latin1}],
    [],
    [{'case',741,
      {'catch',741,
       {call,741,
        {remote,741,{atom,741,erlang},{atom,741,iolist_to_binary}},
        [{var,741,'L'}]}},
      [{clause,742,
        [{var,742,'Bin'}],
        [[{call,742,{atom,742,is_binary},[{var,742,'Bin'}]}]],
        [{var,742,'Bin'}]},
       {clause,743,
        [{var,743,'_'}],
        [],
        [{call,743,
          {atom,743,exit},
          [{tuple,743,
            [{atom,743,no_translation},
             {atom,743,latin1},
             {atom,743,latin1}]}]}]}]}]},
   {clause,745,
    [{var,745,'Data'},{atom,745,binary},{atom,745,unicode},{atom,745,latin1}],
    [[{call,745,{atom,745,is_binary},[{var,745,'Data'}]}],
     [{call,745,{atom,745,is_list},[{var,745,'Data'}]}]],
    [{'case',746,
      {'catch',746,
       {call,746,
        {remote,746,{atom,746,unicode},{atom,746,characters_to_binary}},
        [{var,746,'Data'},{atom,746,unicode},{atom,746,latin1}]}},
      [{clause,747,
        [{var,747,'Bin'}],
        [[{call,747,{atom,747,is_binary},[{var,747,'Bin'}]}]],
        [{var,747,'Bin'}]},
       {clause,748,
        [{var,748,'_'}],
        [],
        [{call,748,
          {atom,748,exit},
          [{tuple,748,
            [{atom,748,no_translation},
             {atom,748,unicode},
             {atom,748,latin1}]}]}]}]}]},
   {clause,750,
    [{var,750,'Data'},{atom,750,binary},{atom,750,latin1},{atom,750,unicode}],
    [[{call,750,{atom,750,is_binary},[{var,750,'Data'}]}],
     [{call,750,{atom,750,is_list},[{var,750,'Data'}]}]],
    [{'case',751,
      {'catch',751,
       {call,751,
        {remote,751,{atom,751,unicode},{atom,751,characters_to_binary}},
        [{var,751,'Data'},{atom,751,latin1},{atom,751,unicode}]}},
      [{clause,752,
        [{var,752,'Bin'}],
        [[{call,752,{atom,752,is_binary},[{var,752,'Bin'}]}]],
        [{var,752,'Bin'}]},
       {clause,753,
        [{var,753,'_'}],
        [],
        [{call,753,
          {atom,753,exit},
          [{tuple,753,
            [{atom,753,no_translation},
             {atom,753,latin1},
             {atom,753,unicode}]}]}]}]}]},
   {clause,755,
    [{var,755,'B'},{atom,755,binary},{atom,755,unicode},{atom,755,unicode}],
    [[{call,755,{atom,755,is_binary},[{var,755,'B'}]}]],
    [{var,756,'B'}]},
   {clause,757,
    [{var,757,'L'},{atom,757,binary},{atom,757,unicode},{atom,757,unicode}],
    [],
    [{'case',758,
      {'catch',758,
       {call,758,
        {remote,758,{atom,758,unicode},{atom,758,characters_to_binary}},
        [{var,758,'L'},{atom,758,unicode}]}},
      [{clause,759,
        [{var,759,'Bin'}],
        [[{call,759,{atom,759,is_binary},[{var,759,'Bin'}]}]],
        [{var,759,'Bin'}]},
       {clause,760,
        [{var,760,'_'}],
        [],
        [{call,760,
          {atom,760,exit},
          [{tuple,760,
            [{atom,760,no_translation},
             {atom,760,unicode},
             {atom,760,unicode}]}]}]}]}]},
   {clause,762,
    [{var,762,'B'},{atom,762,list},{atom,762,latin1},{atom,762,latin1}],
    [[{call,762,{atom,762,is_binary},[{var,762,'B'}]}]],
    [{call,763,{atom,763,binary_to_list},[{var,763,'B'}]}]},
   {clause,764,
    [{var,764,'L'},{atom,764,list},{atom,764,latin1},{atom,764,latin1}],
    [],
    [{'case',765,
      {'catch',765,
       {call,765,
        {remote,765,{atom,765,erlang},{atom,765,iolist_to_binary}},
        [{var,765,'L'}]}},
      [{clause,766,
        [{var,766,'Bin'}],
        [[{call,766,{atom,766,is_binary},[{var,766,'Bin'}]}]],
        [{call,766,{atom,766,binary_to_list},[{var,766,'Bin'}]}]},
       {clause,767,
        [{var,767,'_'}],
        [],
        [{call,767,
          {atom,767,exit},
          [{tuple,767,
            [{atom,767,no_translation},
             {atom,767,latin1},
             {atom,767,latin1}]}]}]}]}]},
   {clause,769,
    [{var,769,'Data'},{atom,769,list},{atom,769,unicode},{atom,769,latin1}],
    [[{call,769,{atom,769,is_binary},[{var,769,'Data'}]}],
     [{call,769,{atom,769,is_list},[{var,769,'Data'}]}]],
    [{'case',770,
      {'catch',770,
       {call,770,
        {remote,770,{atom,770,unicode},{atom,770,characters_to_list}},
        [{var,770,'Data'},{atom,770,unicode}]}},
      [{clause,771,
        [{var,771,'Chars'}],
        [[{call,771,{atom,771,is_list},[{var,771,'Chars'}]}]],
        [{lc,772,
          {'case',772,
           {var,772,'X'},
           [{clause,773,
             [{var,773,'High'}],
             [[{op,773,'>',{var,773,'High'},{integer,773,255}}]],
             [{call,774,
               {atom,774,exit},
               [{tuple,774,
                 [{atom,774,no_translation},
                  {atom,774,unicode},
                  {atom,774,latin1}]}]}]},
            {clause,775,[{var,775,'Low'}],[],[{var,776,'Low'}]}]},
          [{generate,777,{var,777,'X'},{var,777,'Chars'}}]}]},
       {clause,778,
        [{var,778,'_'}],
        [],
        [{call,779,
          {atom,779,exit},
          [{tuple,779,
            [{atom,779,no_translation},
             {atom,779,unicode},
             {atom,779,latin1}]}]}]}]}]},
   {clause,781,
    [{var,781,'Data'},{atom,781,list},{atom,781,latin1},{atom,781,unicode}],
    [[{call,781,{atom,781,is_binary},[{var,781,'Data'}]}],
     [{call,781,{atom,781,is_list},[{var,781,'Data'}]}]],
    [{'case',782,
      {'catch',782,
       {call,782,
        {remote,782,{atom,782,unicode},{atom,782,characters_to_list}},
        [{var,782,'Data'},{atom,782,latin1}]}},
      [{clause,783,
        [{var,783,'Chars'}],
        [[{call,783,{atom,783,is_list},[{var,783,'Chars'}]}]],
        [{var,783,'Chars'}]},
       {clause,784,
        [{var,784,'_'}],
        [],
        [{call,784,
          {atom,784,exit},
          [{tuple,784,
            [{atom,784,no_translation},
             {atom,784,latin1},
             {atom,784,unicode}]}]}]}]}]},
   {clause,786,
    [{var,786,'Data'},{atom,786,list},{atom,786,unicode},{atom,786,unicode}],
    [[{call,786,{atom,786,is_binary},[{var,786,'Data'}]}],
     [{call,786,{atom,786,is_list},[{var,786,'Data'}]}]],
    [{'case',787,
      {'catch',787,
       {call,787,
        {remote,787,{atom,787,unicode},{atom,787,characters_to_list}},
        [{var,787,'Data'},{atom,787,unicode}]}},
      [{clause,788,
        [{var,788,'Chars'}],
        [[{call,788,{atom,788,is_list},[{var,788,'Chars'}]}]],
        [{var,788,'Chars'}]},
       {clause,789,
        [{var,789,'_'}],
        [],
        [{call,789,
          {atom,789,exit},
          [{tuple,789,
            [{atom,789,no_translation},
             {atom,789,unicode},
             {atom,789,unicode}]}]}]}]}]}]},
 {function,792,wrap_characters_to_binary,3,
  [{clause,792,
    [{var,792,'Chars'},{atom,792,unicode},{atom,792,latin1}],
    [],
    [{'case',793,
      {'catch',793,
       {call,793,
        {remote,793,{atom,793,unicode},{atom,793,characters_to_binary}},
        [{var,793,'Chars'},{atom,793,unicode},{atom,793,latin1}]}},
      [{clause,794,
        [{var,794,'Bin'}],
        [[{call,794,{atom,794,is_binary},[{var,794,'Bin'}]}]],
        [{var,795,'Bin'}]},
       {clause,796,
        [{var,796,'_'}],
        [],
        [{'case',797,
          {'catch',797,
           {call,797,
            {remote,797,{atom,797,unicode},{atom,797,characters_to_list}},
            [{var,797,'Chars'},{atom,797,unicode}]}},
          [{clause,798,
            [{var,798,'L'}],
            [[{call,798,{atom,798,is_list},[{var,798,'L'}]}]],
            [{call,799,
              {atom,799,list_to_binary},
              [{lc,800,
                {'case',800,
                 {var,800,'X'},
                 [{clause,801,
                   [{var,801,'High'}],
                   [[{op,801,'>',{var,801,'High'},{integer,801,255}}]],
                   [{cons,802,
                     {string,802,"\\x{"},
                     {cons,802,
                      {call,802,
                       {remote,802,
                        {atom,802,erlang},
                        {atom,802,integer_to_list}},
                       [{var,802,'X'},{integer,802,16}]},
                      {cons,802,{char,802,125},{nil,802}}}}]},
                  {clause,803,[{var,803,'Low'}],[],[{var,804,'Low'}]}]},
                [{generate,805,{var,805,'X'},{var,805,'L'}}]}]}]},
           {clause,806,[{var,806,'_'}],[],[{atom,807,error}]}]}]}]}]},
   {clause,810,
    [{var,810,'Bin'},{var,810,'From'},{var,810,'From'}],
    [[{call,810,{atom,810,is_binary},[{var,810,'Bin'}]}]],
    [{var,811,'Bin'}]},
   {clause,812,
    [{var,812,'Chars'},{var,812,'From'},{var,812,'To'}],
    [],
    [{'case',813,
      {'catch',813,
       {call,813,
        {remote,813,{atom,813,unicode},{atom,813,characters_to_binary}},
        [{var,813,'Chars'},{var,813,'From'},{var,813,'To'}]}},
      [{clause,814,
        [{var,814,'Bin'}],
        [[{call,814,{atom,814,is_binary},[{var,814,'Bin'}]}]],
        [{var,815,'Bin'}]},
       {clause,816,[{var,816,'_'}],[],[{atom,817,error}]}]}]}]}]
