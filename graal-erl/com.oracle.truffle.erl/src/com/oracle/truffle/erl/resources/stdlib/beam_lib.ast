beam_lib
[{lists,append,1},{lists,delete,2},{lists,foreach,2},{lists,keysort,2},{lists,member,2},{lists,reverse,1},{lists,sort,1},{lists,splitwith,2}]
[]
[{function,124,info,1,
  [{clause,124,
    [{var,124,'File'}],
    [],
    [{call,125,
      {atom,125,read_info},
      [{call,125,{atom,125,beam_filename},[{var,125,'File'}]}]}]}]},
 {function,133,chunks,2,
  [{clause,133,
    [{var,133,'File'},{var,133,'Chunks'}],
    [],
    [{call,134,
      {atom,134,read_chunk_data},
      [{var,134,'File'},{var,134,'Chunks'}]}]}]},
 {function,144,chunks,3,
  [{clause,144,
    [{var,144,'File'},{var,144,'Chunks'},{var,144,'Options'}],
    [],
    [{'try',145,
      [{call,145,
        {atom,145,read_chunk_data},
        [{var,145,'File'},{var,145,'Chunks'},{var,145,'Options'}]}],
      [],
      [{clause,146,
        [{tuple,146,[{atom,146,throw},{var,146,'Error'},{var,146,'_'}]}],
        [],
        [{var,146,'Error'}]}],
      []}]}]},
 {function,150,all_chunks,1,
  [{clause,150,
    [{var,150,'File'}],
    [],
    [{call,151,{atom,151,read_all_chunks},[{var,151,'File'}]}]}]},
 {function,157,cmp,2,
  [{clause,157,
    [{var,157,'File1'},{var,157,'File2'}],
    [],
    [{'try',158,
      [{call,158,{atom,158,cmp_files},[{var,158,'File1'},{var,158,'File2'}]}],
      [],
      [{clause,159,
        [{tuple,159,[{atom,159,throw},{var,159,'Error'},{var,159,'_'}]}],
        [],
        [{var,159,'Error'}]}],
      []}]}]},
 {function,170,cmp_dirs,2,
  [{clause,170,
    [{var,170,'Dir1'},{var,170,'Dir2'}],
    [],
    [{'catch',171,
      {call,171,
       {atom,171,compare_dirs},
       [{var,171,'Dir1'},{var,171,'Dir2'}]}}]}]},
 {function,178,diff_dirs,2,
  [{clause,178,
    [{var,178,'Dir1'},{var,178,'Dir2'}],
    [],
    [{'catch',179,
      {call,179,
       {atom,179,diff_directories},
       [{var,179,'Dir1'},{var,179,'Dir2'}]}}]}]},
 {function,186,strip,1,
  [{clause,186,
    [{var,186,'FileName'}],
    [],
    [{'try',187,
      [{call,187,{atom,187,strip_file},[{var,187,'FileName'}]}],
      [],
      [{clause,188,
        [{tuple,188,[{atom,188,throw},{var,188,'Error'},{var,188,'_'}]}],
        [],
        [{var,188,'Error'}]}],
      []}]}]},
 {function,195,strip_files,1,
  [{clause,195,
    [{var,195,'Files'}],
    [[{call,195,{atom,195,is_list},[{var,195,'Files'}]}]],
    [{'try',196,
      [{call,196,{atom,196,strip_fils},[{var,196,'Files'}]}],
      [],
      [{clause,197,
        [{tuple,197,[{atom,197,throw},{var,197,'Error'},{var,197,'_'}]}],
        [],
        [{var,197,'Error'}]}],
      []}]}]},
 {function,205,strip_release,1,
  [{clause,205,
    [{var,205,'Root'}],
    [],
    [{'catch',206,{call,206,{atom,206,strip_rel},[{var,206,'Root'}]}}]}]},
 {function,213,version,1,
  [{clause,213,
    [{var,213,'File'}],
    [],
    [{'case',214,
      {'catch',214,
       {call,214,
        {atom,214,read_chunk_data},
        [{var,214,'File'},{cons,214,{atom,214,attributes},{nil,214}}]}},
      [{clause,215,
        [{tuple,215,
          [{atom,215,ok},
           {tuple,215,
            [{var,215,'Module'},
             {cons,215,
              {tuple,215,[{atom,215,attributes},{var,215,'Attrs'}]},
              {nil,215}}]}]}],
        [],
        [{match,216,
          {tuple,216,[{atom,216,vsn},{var,216,'Version'}]},
          {call,216,
           {remote,216,{atom,216,lists},{atom,216,keyfind}},
           [{atom,216,vsn},{integer,216,1},{var,216,'Attrs'}]}},
         {tuple,217,
          [{atom,217,ok},
           {tuple,217,[{var,217,'Module'},{var,217,'Version'}]}]}]},
       {clause,218,[{var,218,'Error'}],[],[{var,219,'Error'}]}]}]}]},
 {function,227,md5,1,
  [{clause,227,
    [{var,227,'File'}],
    [],
    [{'case',228,
      {'catch',228,
       {call,228,
        {atom,228,read_significant_chunks},
        [{var,228,'File'},{call,228,{atom,228,md5_chunks},[]}]}},
      [{clause,229,
        [{tuple,229,
          [{atom,229,ok},
           {tuple,229,[{var,229,'Module'},{var,229,'Chunks0'}]}]}],
        [],
        [{match,230,
          {var,230,'Chunks'},
          {call,230,{atom,230,filter_funtab},[{var,230,'Chunks0'}]}},
         {tuple,231,
          [{atom,231,ok},
           {tuple,231,
            [{var,231,'Module'},
             {call,231,
              {remote,231,{atom,231,erlang},{atom,231,md5}},
              [{lc,231,
                {var,231,'C'},
                [{generate,231,
                  {tuple,231,[{var,231,'_Id'},{var,231,'C'}]},
                  {var,231,'Chunks'}}]}]}]}]}]},
       {clause,232,[{var,232,'Error'}],[],[{var,233,'Error'}]}]}]}]},
 {function,239,format_error,1,
  [{clause,239,
    [{tuple,239,[{atom,239,error},{var,239,'Error'}]}],
    [],
    [{call,240,{atom,240,format_error},[{var,240,'Error'}]}]},
   {clause,241,
    [{tuple,241,[{atom,241,error},{var,241,'Module'},{var,241,'Error'}]}],
    [],
    [{call,242,
      {remote,242,{var,242,'Module'},{atom,242,format_error}},
      [{var,242,'Error'}]}]},
   {clause,243,
    [{tuple,243,
      [{atom,243,unknown_chunk},{var,243,'File'},{var,243,'ChunkName'}]}],
    [],
    [{call,244,
      {remote,244,{atom,244,io_lib},{atom,244,format}},
      [{string,244,"~tp: Cannot find chunk ~p~n"},
       {cons,244,
        {var,244,'File'},
        {cons,244,{var,244,'ChunkName'},{nil,244}}}]}]},
   {clause,245,
    [{tuple,245,
      [{atom,245,invalid_chunk},{var,245,'File'},{var,245,'ChunkId'}]}],
    [],
    [{call,246,
      {remote,246,{atom,246,io_lib},{atom,246,format}},
      [{string,246,"~tp: Invalid contents of chunk ~p~n"},
       {cons,246,
        {var,246,'File'},
        {cons,246,{var,246,'ChunkId'},{nil,246}}}]}]},
   {clause,247,
    [{tuple,247,[{atom,247,not_a_beam_file},{var,247,'File'}]}],
    [],
    [{call,248,
      {remote,248,{atom,248,io_lib},{atom,248,format}},
      [{string,248,"~tp: Not a BEAM file~n"},
       {cons,248,{var,248,'File'},{nil,248}}]}]},
   {clause,249,
    [{tuple,249,[{atom,249,file_error},{var,249,'File'},{var,249,'Reason'}]}],
    [],
    [{call,250,
      {remote,250,{atom,250,io_lib},{atom,250,format}},
      [{string,250,"~tp: ~tp~n"},
       {cons,250,
        {var,250,'File'},
        {cons,250,
         {call,250,
          {remote,250,{atom,250,file},{atom,250,format_error}},
          [{var,250,'Reason'}]},
         {nil,250}}}]}]},
   {clause,251,
    [{tuple,251,
      [{atom,251,missing_chunk},{var,251,'File'},{var,251,'ChunkId'}]}],
    [],
    [{call,252,
      {remote,252,{atom,252,io_lib},{atom,252,format}},
      [{string,252,"~tp: Not a BEAM file: no IFF \"~s\" chunk~n"},
       {cons,253,
        {var,253,'File'},
        {cons,253,{var,253,'ChunkId'},{nil,253}}}]}]},
   {clause,254,
    [{tuple,254,
      [{atom,254,invalid_beam_file},{var,254,'File'},{var,254,'Pos'}]}],
    [],
    [{call,255,
      {remote,255,{atom,255,io_lib},{atom,255,format}},
      [{string,255,"~tp: Invalid format of BEAM file near byte number ~p~n"},
       {cons,256,{var,256,'File'},{cons,256,{var,256,'Pos'},{nil,256}}}]}]},
   {clause,257,
    [{tuple,257,
      [{atom,257,chunk_too_big},
       {var,257,'File'},
       {var,257,'ChunkId'},
       {var,257,'Size'},
       {var,257,'Len'}]}],
    [],
    [{call,258,
      {remote,258,{atom,258,io_lib},{atom,258,format}},
      [{string,258,
        "~tp: Size of chunk \"~s\" is ~p bytes, but only ~p bytes could be read~n"},
       {cons,260,
        {var,260,'File'},
        {cons,260,
         {var,260,'ChunkId'},
         {cons,260,
          {var,260,'Size'},
          {cons,260,{var,260,'Len'},{nil,260}}}}}]}]},
   {clause,261,
    [{tuple,261,[{atom,261,chunks_different},{var,261,'Id'}]}],
    [],
    [{call,262,
      {remote,262,{atom,262,io_lib},{atom,262,format}},
      [{string,262,"Chunk \"~s\" differs in the two files~n"},
       {cons,262,{var,262,'Id'},{nil,262}}]}]},
   {clause,263,
    [{atom,263,different_chunks}],
    [],
    [{string,264,"The two files have different chunks\n"}]},
   {clause,265,
    [{tuple,265,
      [{atom,265,modules_different},{var,265,'Module1'},{var,265,'Module2'}]}],
    [],
    [{call,266,
      {remote,266,{atom,266,io_lib},{atom,266,format}},
      [{string,266,"Module names ~p and ~p differ in the two files~n"},
       {cons,267,
        {var,267,'Module1'},
        {cons,267,{var,267,'Module2'},{nil,267}}}]}]},
   {clause,268,
    [{tuple,268,[{atom,268,not_a_directory},{var,268,'Name'}]}],
    [],
    [{call,269,
      {remote,269,{atom,269,io_lib},{atom,269,format}},
      [{string,269,"~tp: Not a directory~n"},
       {cons,269,{var,269,'Name'},{nil,269}}]}]},
   {clause,270,
    [{tuple,270,
      [{atom,270,key_missing_or_invalid},
       {var,270,'File'},
       {atom,270,abstract_code}]}],
    [],
    [{call,271,
      {remote,271,{atom,271,io_lib},{atom,271,format}},
      [{string,271,
        "~tp: Cannot decrypt abstract code because key is missing or invalid"},
       {cons,272,{var,272,'File'},{nil,272}}]}]},
   {clause,273,
    [{atom,273,badfun}],
    [],
    [{string,274,"not a fun or the fun has the wrong arity"}]},
   {clause,275,
    [{atom,275,exists}],
    [],
    [{string,276,"a fun has already been installed"}]},
   {clause,277,
    [{var,277,'E'}],
    [],
    [{call,278,
      {remote,278,{atom,278,io_lib},{atom,278,format}},
      [{string,278,"~tp~n"},{cons,278,{var,278,'E'},{nil,278}}]}]}]},
 {function,294,crypto_key_fun,1,
  [{clause,294,
    [{var,294,'F'}],
    [],
    [{call,295,
      {atom,295,call_crypto_server},
      [{tuple,295,[{atom,295,crypto_key_fun},{var,295,'F'}]}]}]}]},
 {function,300,clear_crypto_key_fun,0,
  [{clause,300,[],[],
    [{call,301,
      {atom,301,call_crypto_server},
      [{atom,301,clear_crypto_key_fun}]}]}]},
 {function,306,make_crypto_key,2,
  [{clause,306,
    [{match,306,{atom,306,des3_cbc},{var,306,'Type'}},{var,306,'String'}],
    [],
    [{match,307,
      {bin,307,
       [{bin_element,307,{var,307,'K1'},{integer,307,8},[binary]},
        {bin_element,307,{var,307,'K2'},{integer,307,8},[binary]}]},
      {match,307,
       {var,307,'First'},
       {call,307,
        {remote,307,{atom,307,erlang},{atom,307,md5}},
        [{var,307,'String'}]}}},
     {match,308,
      {bin,308,
       [{bin_element,308,{var,308,'K3'},{integer,308,8},[binary]},
        {bin_element,308,{var,308,'IVec'},{integer,308,8},[binary]}]},
      {call,308,
       {remote,308,{atom,308,erlang},{atom,308,md5}},
       [{cons,308,
         {var,308,'First'},
         {call,308,{atom,308,reverse},[{var,308,'String'}]}}]}},
     {tuple,309,
      [{var,309,'Type'},
       {cons,309,
        {var,309,'K1'},
        {cons,309,{var,309,'K2'},{cons,309,{var,309,'K3'},{nil,309}}}},
       {var,309,'IVec'},
       {integer,309,8}]}]}]},
 {function,315,read_info,1,
  [{clause,315,
    [{var,315,'File'}],
    [],
    [{'try',316,
      [{match,317,
        {tuple,317,[{atom,317,ok},{var,317,'Module'},{var,317,'Data'}]},
        {call,317,{atom,317,scan_beam},[{var,317,'File'},{atom,317,info}]}},
       {cons,318,
        {'if',318,
         [{clause,319,[],
           [[{call,319,{atom,319,is_binary},[{var,319,'File'}]}]],
           [{tuple,319,[{atom,319,binary},{var,319,'File'}]}]},
          {clause,320,[],
           [[{atom,320,true}]],
           [{tuple,320,[{atom,320,file},{var,320,'File'}]}]}]},
        {cons,321,
         {tuple,321,[{atom,321,module},{var,321,'Module'}]},
         {cons,321,
          {tuple,321,[{atom,321,chunks},{var,321,'Data'}]},
          {nil,321}}}}],
      [],
      [{clause,322,
        [{tuple,322,[{atom,322,throw},{var,322,'Error'},{var,322,'_'}]}],
        [],
        [{var,322,'Error'}]}],
      []}]}]},
 {function,324,diff_directories,2,
  [{clause,324,
    [{var,324,'Dir1'},{var,324,'Dir2'}],
    [],
    [{match,325,
      {tuple,325,[{var,325,'OnlyDir1'},{var,325,'OnlyDir2'},{var,325,'Diff'}]},
      {call,325,{atom,325,compare_dirs},[{var,325,'Dir1'},{var,325,'Dir2'}]}},
     {call,326,{atom,326,diff_only},[{var,326,'Dir1'},{var,326,'OnlyDir1'}]},
     {call,327,{atom,327,diff_only},[{var,327,'Dir2'},{var,327,'OnlyDir2'}]},
     {call,328,
      {atom,328,foreach},
      [{'fun',328,
        {clauses,
         [{clause,328,
           [{var,328,'D'}],
           [],
           [{call,328,
             {remote,328,{atom,328,io},{atom,328,format}},
             [{string,328,"** different: ~tp~n"},
              {cons,328,{var,328,'D'},{nil,328}}]}]}]}},
       {var,328,'Diff'}]},
     {atom,329,ok}]}]},
 {function,331,diff_only,2,
  [{clause,331,[{var,331,'_Dir'},{nil,331}],[],[{atom,332,ok}]},
   {clause,333,
    [{var,333,'Dir'},{var,333,'Only'}],
    [],
    [{call,334,
      {remote,334,{atom,334,io},{atom,334,format}},
      [{string,334,"Only in ~tp: ~tp~n"},
       {cons,334,{var,334,'Dir'},{cons,334,{var,334,'Only'},{nil,334}}}]}]}]},
 {function,337,compare_dirs,2,
  [{clause,337,
    [{var,337,'Dir1'},{var,337,'Dir2'}],
    [],
    [{match,338,
      {var,338,'R1'},
      {call,338,
       {remote,338,{atom,338,sofs},{atom,338,relation}},
       [{call,338,{atom,338,beam_files},[{var,338,'Dir1'}]}]}},
     {match,339,
      {var,339,'R2'},
      {call,339,
       {remote,339,{atom,339,sofs},{atom,339,relation}},
       [{call,339,{atom,339,beam_files},[{var,339,'Dir2'}]}]}},
     {match,340,
      {var,340,'F1'},
      {call,340,
       {remote,340,{atom,340,sofs},{atom,340,domain}},
       [{var,340,'R1'}]}},
     {match,341,
      {var,341,'F2'},
      {call,341,
       {remote,341,{atom,341,sofs},{atom,341,domain}},
       [{var,341,'R2'}]}},
     {match,342,
      {tuple,342,[{var,342,'O1'},{var,342,'Both'},{var,342,'O2'}]},
      {call,342,
       {remote,342,{atom,342,sofs},{atom,342,symmetric_partition}},
       [{var,342,'F1'},{var,342,'F2'}]}},
     {match,343,
      {var,343,'OnlyL1'},
      {call,343,
       {remote,343,{atom,343,sofs},{atom,343,image}},
       [{var,343,'R1'},{var,343,'O1'}]}},
     {match,344,
      {var,344,'OnlyL2'},
      {call,344,
       {remote,344,{atom,344,sofs},{atom,344,image}},
       [{var,344,'R2'},{var,344,'O2'}]}},
     {match,345,
      {var,345,'B1'},
      {call,345,
       {remote,345,{atom,345,sofs},{atom,345,to_external}},
       [{call,345,
         {remote,345,{atom,345,sofs},{atom,345,restriction}},
         [{var,345,'R1'},{var,345,'Both'}]}]}},
     {match,346,
      {var,346,'B2'},
      {call,346,
       {remote,346,{atom,346,sofs},{atom,346,to_external}},
       [{call,346,
         {remote,346,{atom,346,sofs},{atom,346,restriction}},
         [{var,346,'R2'},{var,346,'Both'}]}]}},
     {match,347,
      {var,347,'Diff'},
      {call,347,
       {atom,347,compare_files},
       [{var,347,'B1'},{var,347,'B2'},{nil,347}]}},
     {tuple,348,
      [{call,348,
        {remote,348,{atom,348,sofs},{atom,348,to_external}},
        [{var,348,'OnlyL1'}]},
       {call,348,
        {remote,348,{atom,348,sofs},{atom,348,to_external}},
        [{var,348,'OnlyL2'}]},
       {var,348,'Diff'}]}]}]},
 {function,350,compare_files,3,
  [{clause,350,
    [{nil,350},{nil,350},{var,350,'Acc'}],
    [],
    [{call,351,
      {remote,351,{atom,351,lists},{atom,351,reverse}},
      [{var,351,'Acc'}]}]},
   {clause,352,
    [{cons,352,{tuple,352,[{var,352,'_'},{var,352,'F1'}]},{var,352,'R1'}},
     {cons,352,{tuple,352,[{var,352,'_'},{var,352,'F2'}]},{var,352,'R2'}},
     {var,352,'Acc'}],
    [],
    [{match,353,
      {var,353,'NAcc'},
      {'case',353,
       {'catch',353,
        {call,353,{atom,353,cmp_files},[{var,353,'F1'},{var,353,'F2'}]}},
       [{clause,354,
         [{tuple,354,[{atom,354,error},{var,354,'_Mod'},{var,354,'_Reason'}]}],
         [],
         [{cons,355,
           {tuple,355,[{var,355,'F1'},{var,355,'F2'}]},
           {var,355,'Acc'}}]},
        {clause,356,[{atom,356,ok}],[],[{var,357,'Acc'}]}]}},
     {call,359,
      {atom,359,compare_files},
      [{var,359,'R1'},{var,359,'R2'},{var,359,'NAcc'}]}]}]},
 {function,361,beam_files,1,
  [{clause,361,
    [{var,361,'Dir'}],
    [],
    [{match,362,
      {atom,362,ok},
      {call,362,{atom,362,assert_directory},[{var,362,'Dir'}]}},
     {match,363,
      {var,363,'L'},
      {call,363,
       {remote,363,{atom,363,filelib},{atom,363,wildcard}},
       [{call,363,
         {remote,363,{atom,363,filename},{atom,363,join}},
         [{var,363,'Dir'},{string,363,"*.beam"}]}]}},
     {lc,364,
      {tuple,364,
       [{call,364,
         {remote,364,{atom,364,filename},{atom,364,basename}},
         [{var,364,'Path'}]},
        {var,364,'Path'}]},
      [{generate,364,{var,364,'Path'},{var,364,'L'}}]}]}]},
 {function,367,cmp_files,2,
  [{clause,367,
    [{var,367,'File1'},{var,367,'File2'}],
    [],
    [{match,368,
      {tuple,368,[{atom,368,ok},{tuple,368,[{var,368,'M1'},{var,368,'L1'}]}]},
      {call,368,{atom,368,read_all_but_useless_chunks},[{var,368,'File1'}]}},
     {match,369,
      {tuple,369,[{atom,369,ok},{tuple,369,[{var,369,'M2'},{var,369,'L2'}]}]},
      {call,369,{atom,369,read_all_but_useless_chunks},[{var,369,'File2'}]}},
     {'if',370,
      [{clause,371,[],
        [[{op,371,'=:=',{var,371,'M1'},{var,371,'M2'}}]],
        [{call,372,{atom,372,cmp_lists},[{var,372,'L1'},{var,372,'L2'}]}]},
       {clause,373,[],
        [[{atom,373,true}]],
        [{call,374,
          {atom,374,error},
          [{tuple,374,
            [{atom,374,modules_different},
             {var,374,'M1'},
             {var,374,'M2'}]}]}]}]}]}]},
 {function,377,cmp_lists,2,
  [{clause,377,[{nil,377},{nil,377}],[],[{atom,378,ok}]},
   {clause,379,
    [{cons,379,{tuple,379,[{var,379,'Id'},{var,379,'C1'}]},{var,379,'R1'}},
     {cons,379,{tuple,379,[{var,379,'Id'},{var,379,'C2'}]},{var,379,'R2'}}],
    [],
    [{'if',380,
      [{clause,381,[],
        [[{op,381,'=:=',{var,381,'C1'},{var,381,'C2'}}]],
        [{call,382,{atom,382,cmp_lists},[{var,382,'R1'},{var,382,'R2'}]}]},
       {clause,383,[],
        [[{atom,383,true}]],
        [{call,384,
          {atom,384,error},
          [{tuple,384,[{atom,384,chunks_different},{var,384,'Id'}]}]}]}]}]},
   {clause,386,
    [{var,386,'_'},{var,386,'_'}],
    [],
    [{call,387,{atom,387,error},[{atom,387,different_chunks}]}]}]},
 {function,389,strip_rel,1,
  [{clause,389,
    [{var,389,'Root'}],
    [],
    [{match,390,
      {atom,390,ok},
      {call,390,{atom,390,assert_directory},[{var,390,'Root'}]}},
     {call,391,
      {atom,391,strip_fils},
      [{call,391,
        {remote,391,{atom,391,filelib},{atom,391,wildcard}},
        [{call,391,
          {remote,391,{atom,391,filename},{atom,391,join}},
          [{var,391,'Root'},{string,391,"lib/*/ebin/*.beam"}]}]}]}]}]},
 {function,394,strip_fils,1,
  [{clause,394,
    [{var,394,'Files'}],
    [],
    [{tuple,395,
      [{atom,395,ok},
       {lc,395,
        {block,395,
         [{match,395,
           {tuple,395,[{atom,395,ok},{var,395,'Reply'}]},
           {call,395,{atom,395,strip_file},[{var,395,'F'}]}},
          {var,395,'Reply'}]},
        [{generate,395,{var,395,'F'},{var,395,'Files'}}]}]}]}]},
 {function,398,strip_file,1,
  [{clause,398,
    [{var,398,'File'}],
    [],
    [{match,399,
      {tuple,399,
       [{atom,399,ok},{tuple,399,[{var,399,'Mod'},{var,399,'Chunks'}]}]},
      {call,399,
       {atom,399,read_significant_chunks},
       [{var,399,'File'},{call,399,{atom,399,significant_chunks},[]}]}},
     {match,400,
      {tuple,400,[{atom,400,ok},{var,400,'Stripped0'}]},
      {call,400,{atom,400,build_module},[{var,400,'Chunks'}]}},
     {match,401,
      {var,401,'Stripped'},
      {call,401,{atom,401,compress},[{var,401,'Stripped0'}]}},
     {'case',402,
      {var,402,'File'},
      [{clause,403,
        [{var,403,'_'}],
        [[{call,403,{atom,403,is_binary},[{var,403,'File'}]}]],
        [{tuple,404,
          [{atom,404,ok},
           {tuple,404,[{var,404,'Mod'},{var,404,'Stripped'}]}]}]},
       {clause,405,
        [{var,405,'_'}],
        [],
        [{match,406,
          {var,406,'FileName'},
          {call,406,{atom,406,beam_filename},[{var,406,'File'}]}},
         {'case',407,
          {call,407,
           {remote,407,{atom,407,file},{atom,407,open}},
           [{var,407,'FileName'},
            {cons,407,
             {atom,407,raw},
             {cons,407,
              {atom,407,binary},
              {cons,407,{atom,407,write},{nil,407}}}}]},
          [{clause,408,
            [{tuple,408,[{atom,408,ok},{var,408,'Fd'}]}],
            [],
            [{'case',409,
              {call,409,
               {remote,409,{atom,409,file},{atom,409,write}},
               [{var,409,'Fd'},{var,409,'Stripped'}]},
              [{clause,410,
                [{atom,410,ok}],
                [],
                [{match,411,
                  {atom,411,ok},
                  {call,411,
                   {remote,411,{atom,411,file},{atom,411,close}},
                   [{var,411,'Fd'}]}},
                 {tuple,412,
                  [{atom,412,ok},
                   {tuple,412,[{var,412,'Mod'},{var,412,'FileName'}]}]}]},
               {clause,413,
                [{var,413,'Error'}],
                [],
                [{match,414,
                  {atom,414,ok},
                  {call,414,
                   {remote,414,{atom,414,file},{atom,414,close}},
                   [{var,414,'Fd'}]}},
                 {call,415,
                  {atom,415,file_error},
                  [{var,415,'FileName'},{var,415,'Error'}]}]}]}]},
           {clause,417,
            [{var,417,'Error'}],
            [],
            [{call,418,
              {atom,418,file_error},
              [{var,418,'FileName'},{var,418,'Error'}]}]}]}]}]}]}]},
 {function,422,build_module,1,
  [{clause,422,
    [{var,422,'Chunks0'}],
    [],
    [{match,423,
      {var,423,'Chunks'},
      {call,423,
       {atom,423,list_to_binary},
       [{call,423,{atom,423,build_chunks},[{var,423,'Chunks0'}]}]}},
     {match,424,
      {var,424,'Size'},
      {call,424,{atom,424,byte_size},[{var,424,'Chunks'}]}},
     {match,425,
      {integer,425,0},
      {op,425,'rem',{var,425,'Size'},{integer,425,4}}},
     {tuple,426,
      [{atom,426,ok},
       {bin,426,
        [{bin_element,426,{string,426,"FOR1"},default,default},
         {bin_element,426,
          {op,426,'+',{var,426,'Size'},{integer,426,4}},
          {integer,426,32},
          default},
         {bin_element,426,{string,426,"BEAM"},default,default},
         {bin_element,426,{var,426,'Chunks'},default,[binary]}]}]}]}]},
 {function,428,build_chunks,1,
  [{clause,428,
    [{cons,428,
      {tuple,428,[{var,428,'Id'},{var,428,'Data'}]},
      {var,428,'Chunks'}}],
    [],
    [{match,429,
      {var,429,'BId'},
      {call,429,{atom,429,list_to_binary},[{var,429,'Id'}]}},
     {match,430,
      {var,430,'Size'},
      {call,430,{atom,430,byte_size},[{var,430,'Data'}]}},
     {match,431,
      {var,431,'Chunk'},
      {cons,431,
       {bin,431,
        [{bin_element,431,{var,431,'BId'},default,[binary]},
         {bin_element,431,{var,431,'Size'},{integer,431,32},default}]},
       {cons,431,
        {var,431,'Data'},
        {call,431,{atom,431,pad},[{var,431,'Size'}]}}}},
     {cons,432,
      {var,432,'Chunk'},
      {call,432,{atom,432,build_chunks},[{var,432,'Chunks'}]}}]},
   {clause,433,[{nil,433}],[],[{nil,434}]}]},
 {function,436,pad,1,
  [{clause,436,
    [{var,436,'Size'}],
    [],
    [{'case',437,
      {op,437,'rem',{var,437,'Size'},{integer,437,4}},
      [{clause,438,[{integer,438,0}],[],[{nil,438}]},
       {clause,439,
        [{var,439,'Rem'}],
        [],
        [{call,439,
          {remote,439,{atom,439,lists},{atom,439,duplicate}},
          [{op,439,'-',{integer,439,4},{var,439,'Rem'}},
           {integer,439,0}]}]}]}]}]},
 {function,443,read_all_but_useless_chunks,1,
  [{clause,443,
    [{var,443,'File0'}],
    [[{call,443,{atom,443,is_atom},[{var,443,'File0'}]}],
     [{call,444,{atom,444,is_list},[{var,444,'File0'}]}],
     [{call,445,{atom,445,is_binary},[{var,445,'File0'}]}]],
    [{match,446,
      {var,446,'File'},
      {call,446,{atom,446,beam_filename},[{var,446,'File0'}]}},
     {match,447,
      {tuple,447,[{atom,447,ok},{var,447,'Module'},{var,447,'ChunkIds0'}]},
      {call,447,{atom,447,scan_beam},[{var,447,'File'},{atom,447,info}]}},
     {match,448,
      {var,448,'ChunkIds'},
      {lc,448,
       {var,448,'Name'},
       [{generate,448,
         {tuple,448,[{var,448,'Name'},{var,448,'_'},{var,448,'_'}]},
         {var,448,'ChunkIds0'}},
        {op,449,'not',
         {call,449,{atom,449,is_useless_chunk},[{var,449,'Name'}]}}]}},
     {match,450,
      {tuple,450,[{atom,450,ok},{var,450,'Module'},{var,450,'Chunks'}]},
      {call,450,{atom,450,scan_beam},[{var,450,'File'},{var,450,'ChunkIds'}]}},
     {tuple,451,
      [{atom,451,ok},
       {tuple,451,
        [{var,451,'Module'},
         {call,451,
          {remote,451,{atom,451,lists},{atom,451,reverse}},
          [{var,451,'Chunks'}]}]}]}]}]},
 {function,453,is_useless_chunk,1,
  [{clause,453,[{string,453,"CInf"}],[],[{atom,453,true}]},
   {clause,454,[{var,454,'_'}],[],[{atom,454,false}]}]},
 {function,457,read_significant_chunks,2,
  [{clause,457,
    [{var,457,'File'},{var,457,'ChunkList'}],
    [],
    [{'case',458,
      {call,458,
       {atom,458,read_chunk_data},
       [{var,458,'File'},
        {var,458,'ChunkList'},
        {cons,458,{atom,458,allow_missing_chunks},{nil,458}}]},
      [{clause,459,
        [{tuple,459,
          [{atom,459,ok},
           {tuple,459,[{var,459,'Module'},{var,459,'Chunks0'}]}]}],
        [],
        [{match,460,
          {var,460,'Mandatory'},
          {call,460,{atom,460,mandatory_chunks},[]}},
         {match,461,
          {var,461,'Chunks'},
          {call,461,
           {atom,461,filter_significant_chunks},
           [{var,461,'Chunks0'},
            {var,461,'Mandatory'},
            {var,461,'File'},
            {var,461,'Module'}]}},
         {tuple,462,
          [{atom,462,ok},
           {tuple,462,[{var,462,'Module'},{var,462,'Chunks'}]}]}]}]}]}]},
 {function,465,filter_significant_chunks,4,
  [{clause,465,
    [{cons,465,
      {match,465,
       {tuple,465,[{var,465,'_'},{var,465,'Data'}]},
       {var,465,'Pair'}},
      {var,465,'Cs'}},
     {var,465,'Mandatory'},
     {var,465,'File'},
     {var,465,'Mod'}],
    [[{call,466,{atom,466,is_binary},[{var,466,'Data'}]}]],
    [{cons,467,
      {var,467,'Pair'},
      {call,467,
       {atom,467,filter_significant_chunks},
       [{var,467,'Cs'},
        {var,467,'Mandatory'},
        {var,467,'File'},
        {var,467,'Mod'}]}}]},
   {clause,468,
    [{cons,468,
      {tuple,468,[{var,468,'Id'},{atom,468,missing_chunk}]},
      {var,468,'Cs'}},
     {var,468,'Mandatory'},
     {var,468,'File'},
     {var,468,'Mod'}],
    [],
    [{'case',469,
      {call,469,{atom,469,member},[{var,469,'Id'},{var,469,'Mandatory'}]},
      [{clause,470,
        [{atom,470,false}],
        [],
        [{call,471,
          {atom,471,filter_significant_chunks},
          [{var,471,'Cs'},
           {var,471,'Mandatory'},
           {var,471,'File'},
           {var,471,'Mod'}]}]},
       {clause,472,
        [{atom,472,true}],
        [],
        [{call,473,
          {atom,473,error},
          [{tuple,473,
            [{atom,473,missing_chunk},
             {var,473,'File'},
             {var,473,'Id'}]}]}]}]}]},
   {clause,475,
    [{nil,475},{var,475,'_'},{var,475,'_'},{var,475,'_'}],
    [],
    [{nil,475}]}]},
 {function,477,filter_funtab,1,
  [{clause,477,
    [{cons,477,
      {tuple,477,
       [{match,477,{string,477,"FunT"},{var,477,'Tag'}},
        {bin,477,
         [{bin_element,477,{var,477,'L'},{integer,477,4},[binary]},
          {bin_element,477,{var,477,'Data0'},default,[binary]}]}]},
      {var,477,'Cs'}}],
    [],
    [{match,478,
      {var,478,'Data'},
      {call,478,
       {atom,478,filter_funtab_1},
       [{var,478,'Data0'},
        {bin,478,
         [{bin_element,478,{integer,478,0},{integer,478,32},default}]}]}},
     {match,479,
      {var,479,'Funtab'},
      {bin,479,
       [{bin_element,479,{var,479,'L'},default,[binary]},
        {bin_element,479,
         {call,479,{atom,479,iolist_to_binary},[{var,479,'Data'}]},
         default,
         [binary]}]}},
     {cons,480,
      {tuple,480,[{var,480,'Tag'},{var,480,'Funtab'}]},
      {call,480,{atom,480,filter_funtab},[{var,480,'Cs'}]}}]},
   {clause,481,
    [{cons,481,{var,481,'H'},{var,481,'T'}}],
    [],
    [{cons,482,
      {var,482,'H'},
      {call,482,{atom,482,filter_funtab},[{var,482,'T'}]}}]},
   {clause,483,[{nil,483}],[],[{nil,483}]}]},
 {function,485,filter_funtab_1,2,
  [{clause,485,
    [{bin,485,
      [{bin_element,485,{var,485,'Important'},{integer,485,20},[binary]},
       {bin_element,485,{var,485,'_OldUniq'},{integer,485,4},[binary]},
       {bin_element,485,{var,485,'T'},default,[binary]}]},
     {var,485,'Zero'}],
    [],
    [{cons,486,
      {var,486,'Important'},
      {cons,486,
       {var,486,'Zero'},
       {call,486,
        {atom,486,filter_funtab_1},
        [{var,486,'T'},{var,486,'Zero'}]}}}]},
   {clause,487,
    [{var,487,'Tail'},{var,487,'_'}],
    [[{call,487,{atom,487,is_binary},[{var,487,'Tail'}]}]],
    [{cons,487,{var,487,'Tail'},{nil,487}}]}]},
 {function,489,read_all_chunks,1,
  [{clause,489,
    [{var,489,'File0'}],
    [[{call,489,{atom,489,is_atom},[{var,489,'File0'}]}],
     [{call,490,{atom,490,is_list},[{var,490,'File0'}]}],
     [{call,491,{atom,491,is_binary},[{var,491,'File0'}]}]],
    [{'try',492,
      [{match,493,
        {var,493,'File'},
        {call,493,{atom,493,beam_filename},[{var,493,'File0'}]}},
       {match,494,
        {tuple,494,[{atom,494,ok},{var,494,'Module'},{var,494,'ChunkIds0'}]},
        {call,494,{atom,494,scan_beam},[{var,494,'File'},{atom,494,info}]}},
       {match,495,
        {var,495,'ChunkIds'},
        {lc,495,
         {var,495,'Name'},
         [{generate,495,
           {tuple,495,[{var,495,'Name'},{var,495,'_'},{var,495,'_'}]},
           {var,495,'ChunkIds0'}}]}},
       {match,496,
        {tuple,496,[{atom,496,ok},{var,496,'Module'},{var,496,'Chunks'}]},
        {call,496,
         {atom,496,scan_beam},
         [{var,496,'File'},{var,496,'ChunkIds'}]}},
       {tuple,497,
        [{atom,497,ok},
         {var,497,'Module'},
         {call,497,
          {remote,497,{atom,497,lists},{atom,497,reverse}},
          [{var,497,'Chunks'}]}]}],
      [],
      [{clause,498,
        [{tuple,498,[{atom,498,throw},{var,498,'Error'},{var,498,'_'}]}],
        [],
        [{var,498,'Error'}]}],
      []}]}]},
 {function,500,read_chunk_data,2,
  [{clause,500,
    [{var,500,'File0'},{var,500,'ChunkNames'}],
    [],
    [{'try',501,
      [{call,501,
        {atom,501,read_chunk_data},
        [{var,501,'File0'},{var,501,'ChunkNames'},{nil,501}]}],
      [],
      [{clause,502,
        [{tuple,502,[{atom,502,throw},{var,502,'Error'},{var,502,'_'}]}],
        [],
        [{var,502,'Error'}]}],
      []}]}]},
 {function,505,read_chunk_data,3,
  [{clause,505,
    [{var,505,'File0'},{var,505,'ChunkNames0'},{var,505,'Options'}],
    [[{call,506,{atom,506,is_atom},[{var,506,'File0'}]}],
     [{call,506,{atom,506,is_list},[{var,506,'File0'}]}],
     [{call,506,{atom,506,is_binary},[{var,506,'File0'}]}]],
    [{match,507,
      {var,507,'File'},
      {call,507,{atom,507,beam_filename},[{var,507,'File0'}]}},
     {match,508,
      {tuple,508,[{var,508,'ChunkIds'},{var,508,'Names'}]},
      {call,508,
       {atom,508,check_chunks},
       [{var,508,'ChunkNames0'},{var,508,'File'},{nil,508},{nil,508}]}},
     {match,509,
      {var,509,'AllowMissingChunks'},
      {call,509,
       {atom,509,member},
       [{atom,509,allow_missing_chunks},{var,509,'Options'}]}},
     {match,510,
      {tuple,510,[{atom,510,ok},{var,510,'Module'},{var,510,'Chunks'}]},
      {call,510,
       {atom,510,scan_beam},
       [{var,510,'File'},
        {var,510,'ChunkIds'},
        {var,510,'AllowMissingChunks'}]}},
     {match,511,
      {var,511,'AT'},
      {call,511,
       {remote,511,{atom,511,ets},{atom,511,new}},
       [{atom,511,beam_symbols},{nil,511}]}},
     {match,512,{var,512,'T'},{tuple,512,[{atom,512,empty},{var,512,'AT'}]}},
     {'try',513,
      [{call,513,
        {atom,513,chunks_to_data},
        [{var,513,'Names'},
         {var,513,'Chunks'},
         {var,513,'File'},
         {var,513,'Chunks'},
         {var,513,'Module'},
         {var,513,'T'},
         {nil,513}]}],
      [],[],
      [{call,514,
        {remote,514,{atom,514,ets},{atom,514,delete}},
        [{var,514,'AT'}]}]}]}]},
 {function,518,check_chunks,4,
  [{clause,518,
    [{cons,518,{var,518,'ChunkName'},{var,518,'Ids'}},
     {var,518,'File'},
     {var,518,'IL'},
     {var,518,'L'}],
    [[{call,518,{atom,518,is_atom},[{var,518,'ChunkName'}]}]],
    [{match,519,
      {var,519,'ChunkId'},
      {call,519,
       {atom,519,chunk_name_to_id},
       [{var,519,'ChunkName'},{var,519,'File'}]}},
     {call,520,
      {atom,520,check_chunks},
      [{var,520,'Ids'},
       {var,520,'File'},
       {cons,520,{var,520,'ChunkId'},{var,520,'IL'}},
       {cons,520,
        {tuple,520,[{var,520,'ChunkId'},{var,520,'ChunkName'}]},
        {var,520,'L'}}]}]},
   {clause,521,
    [{cons,521,{var,521,'ChunkId'},{var,521,'Ids'}},
     {var,521,'File'},
     {var,521,'IL'},
     {var,521,'L'}],
    [],
    [{call,522,
      {atom,522,check_chunks},
      [{var,522,'Ids'},
       {var,522,'File'},
       {cons,522,{var,522,'ChunkId'},{var,522,'IL'}},
       {cons,522,
        {tuple,522,[{var,522,'ChunkId'},{var,522,'ChunkId'}]},
        {var,522,'L'}}]}]},
   {clause,523,
    [{nil,523},{var,523,'_File'},{var,523,'IL'},{var,523,'L'}],
    [],
    [{tuple,524,
      [{call,524,
        {remote,524,{atom,524,lists},{atom,524,usort}},
        [{var,524,'IL'}]},
       {call,524,{atom,524,reverse},[{var,524,'L'}]}]}]}]},
 {function,527,scan_beam,2,
  [{clause,527,
    [{var,527,'File'},{var,527,'What'}],
    [],
    [{call,528,
      {atom,528,scan_beam},
      [{var,528,'File'},{var,528,'What'},{atom,528,false}]}]}]},
 {function,531,scan_beam,3,
  [{clause,531,
    [{var,531,'File'},{var,531,'What0'},{var,531,'AllowMissingChunks'}],
    [],
    [{'case',532,
      {call,532,{atom,532,scan_beam1},[{var,532,'File'},{var,532,'What0'}]},
      [{clause,533,
        [{tuple,533,
          [{atom,533,missing},
           {var,533,'_FD'},
           {var,533,'Mod'},
           {var,533,'Data'},
           {var,533,'What'}]}],
        [[{var,533,'AllowMissingChunks'}]],
        [{tuple,534,
          [{atom,534,ok},
           {var,534,'Mod'},
           {op,534,'++',
            {lc,534,
             {tuple,534,[{var,534,'Id'},{atom,534,missing_chunk}]},
             [{generate,534,{var,534,'Id'},{var,534,'What'}}]},
            {var,534,'Data'}}]}]},
       {clause,535,
        [{tuple,535,
          [{atom,535,missing},
           {var,535,'FD'},
           {var,535,'_Mod'},
           {var,535,'_Data'},
           {var,535,'What'}]}],
        [],
        [{call,536,
          {atom,536,error},
          [{tuple,536,
            [{atom,536,missing_chunk},
             {call,536,{atom,536,filename},[{var,536,'FD'}]},
             {call,536,{atom,536,hd},[{var,536,'What'}]}]}]}]},
       {clause,537,[{var,537,'R'}],[],[{var,538,'R'}]}]}]}]},
 {function,542,scan_beam1,2,
  [{clause,542,
    [{var,542,'File'},{var,542,'What'}],
    [],
    [{match,543,
      {var,543,'FD'},
      {call,543,{atom,543,open_file},[{var,543,'File'}]}},
     {'case',544,
      {'catch',544,
       {call,544,{atom,544,scan_beam2},[{var,544,'FD'},{var,544,'What'}]}},
      [{clause,545,
        [{var,545,'Error'}],
        [[{op,545,'=:=',
           {atom,545,error},
           {call,545,
            {atom,545,element},
            [{integer,545,1},{var,545,'Error'}]}}]],
        [{call,546,{atom,546,throw},[{var,546,'Error'}]}]},
       {clause,547,[{var,547,'R'}],[],[{var,548,'R'}]}]}]}]},
 {function,551,scan_beam2,2,
  [{clause,551,
    [{var,551,'FD'},{var,551,'What'}],
    [],
    [{'case',552,
      {call,552,
       {atom,552,pread},
       [{var,552,'FD'},{integer,552,0},{integer,552,12}]},
      [{clause,553,
        [{tuple,553,
          [{var,553,'NFD'},
           {tuple,553,
            [{atom,553,ok},
             {bin,553,
              [{bin_element,553,{string,553,"FOR1"},default,default},
               {bin_element,553,{var,553,'_Size'},{integer,553,32},default},
               {bin_element,553,{string,553,"BEAM"},default,default}]}]}]}],
        [],
        [{match,554,{var,554,'Start'},{integer,554,12}},
         {call,555,
          {atom,555,scan_beam},
          [{var,555,'NFD'},
           {var,555,'Start'},
           {var,555,'What'},
           {integer,555,17},
           {nil,555}]}]},
       {clause,556,
        [{var,556,'_Error'}],
        [],
        [{call,557,
          {atom,557,error},
          [{tuple,557,
            [{atom,557,not_a_beam_file},
             {call,557,{atom,557,filename},[{var,557,'FD'}]}]}]}]}]}]}]},
 {function,560,scan_beam,5,
  [{clause,560,
    [{var,560,'_FD'},
     {var,560,'_Pos'},
     {nil,560},
     {var,560,'Mod'},
     {var,560,'Data'}],
    [[{op,560,'=/=',{var,560,'Mod'},{integer,560,17}}]],
    [{tuple,561,[{atom,561,ok},{var,561,'Mod'},{var,561,'Data'}]}]},
   {clause,562,
    [{var,562,'FD'},
     {var,562,'Pos'},
     {var,562,'What'},
     {var,562,'Mod'},
     {var,562,'Data'}],
    [],
    [{'case',563,
      {call,563,
       {atom,563,pread},
       [{var,563,'FD'},{var,563,'Pos'},{integer,563,8}]},
      [{clause,564,
        [{tuple,564,[{var,564,'_NFD'},{atom,564,eof}]}],
        [[{op,564,'=:=',{var,564,'Mod'},{integer,564,17}}]],
        [{call,565,
          {atom,565,error},
          [{tuple,565,
            [{atom,565,missing_chunk},
             {call,565,{atom,565,filename},[{var,565,'FD'}]},
             {string,565,"Atom"}]}]}]},
       {clause,566,
        [{tuple,566,[{var,566,'_NFD'},{atom,566,eof}]}],
        [[{op,566,'=:=',{var,566,'What'},{atom,566,info}}]],
        [{tuple,567,
          [{atom,567,ok},
           {var,567,'Mod'},
           {call,567,{atom,567,reverse},[{var,567,'Data'}]}]}]},
       {clause,568,
        [{tuple,568,[{var,568,'NFD'},{atom,568,eof}]}],
        [],
        [{tuple,569,
          [{atom,569,missing},
           {var,569,'NFD'},
           {var,569,'Mod'},
           {var,569,'Data'},
           {var,569,'What'}]}]},
       {clause,570,
        [{tuple,570,
          [{var,570,'NFD'},
           {tuple,570,
            [{atom,570,ok},
             {bin,570,
              [{bin_element,570,{var,570,'IdL'},{integer,570,4},[binary]},
               {bin_element,570,
                {var,570,'Sz'},
                {integer,570,32},
                default}]}]}]}],
        [],
        [{match,571,
          {var,571,'Id'},
          {call,571,{atom,571,binary_to_list},[{var,571,'IdL'}]}},
         {match,572,
          {var,572,'Pos1'},
          {op,572,'+',{var,572,'Pos'},{integer,572,8}}},
         {match,573,
          {var,573,'Pos2'},
          {op,573,'+',
           {op,573,'*',
            {integer,573,4},
            {call,573,
             {atom,573,trunc},
             [{op,573,'/',
               {op,573,'+',{var,573,'Sz'},{integer,573,3}},
               {integer,573,4}}]}},
           {var,573,'Pos1'}}},
         {call,574,
          {atom,574,get_data},
          [{var,574,'What'},
           {var,574,'Id'},
           {var,574,'NFD'},
           {var,574,'Sz'},
           {var,574,'Pos1'},
           {var,574,'Pos2'},
           {var,574,'Mod'},
           {var,574,'Data'}]}]},
       {clause,575,
        [{tuple,575,
          [{var,575,'_NFD'},
           {tuple,575,[{atom,575,ok},{var,575,'_ChunkHead'}]}]}],
        [],
        [{call,576,
          {atom,576,error},
          [{tuple,576,
            [{atom,576,invalid_beam_file},
             {call,576,{atom,576,filename},[{var,576,'FD'}]},
             {var,576,'Pos'}]}]}]}]}]}]},
 {function,579,get_data,8,
  [{clause,579,
    [{var,579,'Cs'},
     {match,579,{string,579,"Atom"},{var,579,'Id'}},
     {var,579,'FD'},
     {var,579,'Size'},
     {var,579,'Pos'},
     {var,579,'Pos2'},
     {var,579,'_Mod'},
     {var,579,'Data'}],
    [],
    [{match,580,
      {var,580,'NewCs'},
      {call,580,{atom,580,del_chunk},[{var,580,'Id'},{var,580,'Cs'}]}},
     {match,581,
      {tuple,581,[{var,581,'NFD'},{var,581,'Chunk'}]},
      {call,581,
       {atom,581,get_chunk},
       [{var,581,'Id'},{var,581,'Pos'},{var,581,'Size'},{var,581,'FD'}]}},
     {match,582,
      {bin,582,
       [{bin_element,582,{var,582,'_Num'},{integer,582,32},default},
        {bin_element,582,{var,582,'Chunk2'},default,[binary]}]},
      {var,582,'Chunk'}},
     {match,583,
      {tuple,583,[{var,583,'Module'},{var,583,'_'}]},
      {call,583,{atom,583,extract_atom},[{var,583,'Chunk2'}]}},
     {match,584,
      {var,584,'C'},
      {'case',584,
       {var,584,'Cs'},
       [{clause,585,
         [{atom,585,info}],
         [],
         [{tuple,586,[{var,586,'Id'},{var,586,'Pos'},{var,586,'Size'}]}]},
        {clause,587,
         [{var,587,'_'}],
         [],
         [{tuple,588,[{var,588,'Id'},{var,588,'Chunk'}]}]}]}},
     {call,590,
      {atom,590,scan_beam},
      [{var,590,'NFD'},
       {var,590,'Pos2'},
       {var,590,'NewCs'},
       {var,590,'Module'},
       {cons,590,{var,590,'C'},{var,590,'Data'}}]}]},
   {clause,591,
    [{atom,591,info},
     {var,591,'Id'},
     {var,591,'FD'},
     {var,591,'Size'},
     {var,591,'Pos'},
     {var,591,'Pos2'},
     {var,591,'Mod'},
     {var,591,'Data'}],
    [],
    [{call,592,
      {atom,592,scan_beam},
      [{var,592,'FD'},
       {var,592,'Pos2'},
       {atom,592,info},
       {var,592,'Mod'},
       {cons,592,
        {tuple,592,[{var,592,'Id'},{var,592,'Pos'},{var,592,'Size'}]},
        {var,592,'Data'}}]}]},
   {clause,593,
    [{var,593,'Chunks'},
     {var,593,'Id'},
     {var,593,'FD'},
     {var,593,'Size'},
     {var,593,'Pos'},
     {var,593,'Pos2'},
     {var,593,'Mod'},
     {var,593,'Data'}],
    [],
    [{match,594,
      {tuple,594,[{var,594,'NFD'},{var,594,'NewData'}]},
      {'case',594,
       {call,594,{atom,594,member},[{var,594,'Id'},{var,594,'Chunks'}]},
       [{clause,595,
         [{atom,595,true}],
         [],
         [{match,596,
           {tuple,596,[{var,596,'FD1'},{var,596,'Chunk'}]},
           {call,596,
            {atom,596,get_chunk},
            [{var,596,'Id'},{var,596,'Pos'},{var,596,'Size'},{var,596,'FD'}]}},
          {tuple,597,
           [{var,597,'FD1'},
            {cons,597,
             {tuple,597,[{var,597,'Id'},{var,597,'Chunk'}]},
             {var,597,'Data'}}]}]},
        {clause,598,
         [{atom,598,false}],
         [],
         [{tuple,599,[{var,599,'FD'},{var,599,'Data'}]}]}]}},
     {match,601,
      {var,601,'NewChunks'},
      {call,601,{atom,601,del_chunk},[{var,601,'Id'},{var,601,'Chunks'}]}},
     {call,602,
      {atom,602,scan_beam},
      [{var,602,'NFD'},
       {var,602,'Pos2'},
       {var,602,'NewChunks'},
       {var,602,'Mod'},
       {var,602,'NewData'}]}]}]},
 {function,604,del_chunk,2,
  [{clause,604,[{var,604,'_Id'},{atom,604,info}],[],[{atom,605,info}]},
   {clause,606,
    [{var,606,'Id'},{var,606,'Chunks'}],
    [],
    [{call,607,{atom,607,delete},[{var,607,'Id'},{var,607,'Chunks'}]}]}]},
 {function,610,get_chunk,4,
  [{clause,610,
    [{var,610,'Id'},{var,610,'Pos'},{var,610,'Size'},{var,610,'FD'}],
    [],
    [{'case',611,
      {call,611,
       {atom,611,pread},
       [{var,611,'FD'},{var,611,'Pos'},{var,611,'Size'}]},
      [{clause,612,
        [{tuple,612,[{var,612,'NFD'},{atom,612,eof}]}],
        [[{op,612,'=:=',{var,612,'Size'},{integer,612,0}}]],
        [{tuple,613,[{var,613,'NFD'},{bin,613,[]}]}]},
       {clause,614,
        [{tuple,614,[{var,614,'_NFD'},{atom,614,eof}]}],
        [[{op,614,'>',{var,614,'Size'},{integer,614,0}}]],
        [{call,615,
          {atom,615,error},
          [{tuple,615,
            [{atom,615,chunk_too_big},
             {call,615,{atom,615,filename},[{var,615,'FD'}]},
             {var,615,'Id'},
             {var,615,'Size'},
             {integer,615,0}]}]}]},
       {clause,616,
        [{tuple,616,
          [{var,616,'_NFD'},{tuple,616,[{atom,616,ok},{var,616,'Chunk'}]}]}],
        [[{op,616,'>',
           {var,616,'Size'},
           {call,616,{atom,616,byte_size},[{var,616,'Chunk'}]}}]],
        [{call,617,
          {atom,617,error},
          [{tuple,617,
            [{atom,617,chunk_too_big},
             {call,617,{atom,617,filename},[{var,617,'FD'}]},
             {var,617,'Id'},
             {var,617,'Size'},
             {call,617,{atom,617,byte_size},[{var,617,'Chunk'}]}]}]}]},
       {clause,618,
        [{tuple,618,
          [{var,618,'NFD'},{tuple,618,[{atom,618,ok},{var,618,'Chunk'}]}]}],
        [],
        [{tuple,619,[{var,619,'NFD'},{var,619,'Chunk'}]}]}]}]}]},
 {function,622,chunks_to_data,7,
  [{clause,622,
    [{cons,622,{tuple,622,[{var,622,'Id'},{var,622,'Name'}]},{var,622,'CNs'}},
     {var,622,'Chunks'},
     {var,622,'File'},
     {var,622,'Cs'},
     {var,622,'Module'},
     {var,622,'Atoms'},
     {var,622,'L'}],
    [],
    [{match,623,
      {tuple,623,[{var,623,'_Id'},{var,623,'Chunk'}]},
      {call,623,
       {remote,623,{atom,623,lists},{atom,623,keyfind}},
       [{var,623,'Id'},{integer,623,1},{var,623,'Chunks'}]}},
     {match,624,
      {tuple,624,[{var,624,'NewAtoms'},{var,624,'Ret'}]},
      {call,624,
       {atom,624,chunk_to_data},
       [{var,624,'Name'},
        {var,624,'Chunk'},
        {var,624,'File'},
        {var,624,'Cs'},
        {var,624,'Atoms'},
        {var,624,'Module'}]}},
     {call,625,
      {atom,625,chunks_to_data},
      [{var,625,'CNs'},
       {var,625,'Chunks'},
       {var,625,'File'},
       {var,625,'Cs'},
       {var,625,'Module'},
       {var,625,'NewAtoms'},
       {cons,625,{var,625,'Ret'},{var,625,'L'}}]}]},
   {clause,626,
    [{nil,626},
     {var,626,'_Chunks'},
     {var,626,'_File'},
     {var,626,'_Cs'},
     {var,626,'Module'},
     {var,626,'_Atoms'},
     {var,626,'L'}],
    [],
    [{tuple,627,
      [{atom,627,ok},
       {tuple,627,
        [{var,627,'Module'},
         {call,627,{atom,627,reverse},[{var,627,'L'}]}]}]}]}]},
 {function,629,chunk_to_data,6,
  [{clause,629,
    [{match,629,{atom,629,attributes},{var,629,'Id'}},
     {var,629,'Chunk'},
     {var,629,'File'},
     {var,629,'_Cs'},
     {var,629,'AtomTable'},
     {var,629,'_Mod'}],
    [],
    [{'try',630,
      [{match,631,
        {var,631,'Term'},
        {call,631,{atom,631,binary_to_term},[{var,631,'Chunk'}]}},
       {tuple,632,
        [{var,632,'AtomTable'},
         {tuple,632,
          [{var,632,'Id'},
           {call,632,{atom,632,attributes},[{var,632,'Term'}]}]}]}],
      [],
      [{clause,634,
        [{tuple,634,[{atom,634,error},{atom,634,badarg},{var,634,'_'}]}],
        [],
        [{call,635,
          {atom,635,error},
          [{tuple,635,
            [{atom,635,invalid_chunk},
             {var,635,'File'},
             {call,635,
              {atom,635,chunk_name_to_id},
              [{var,635,'Id'},{var,635,'File'}]}]}]}]}],
      []}]},
   {clause,637,
    [{match,637,{atom,637,compile_info},{var,637,'Id'}},
     {var,637,'Chunk'},
     {var,637,'File'},
     {var,637,'_Cs'},
     {var,637,'AtomTable'},
     {var,637,'_Mod'}],
    [],
    [{'try',638,
      [{tuple,639,
        [{var,639,'AtomTable'},
         {tuple,639,
          [{var,639,'Id'},
           {call,639,{atom,639,binary_to_term},[{var,639,'Chunk'}]}]}]}],
      [],
      [{clause,641,
        [{tuple,641,[{atom,641,error},{atom,641,badarg},{var,641,'_'}]}],
        [],
        [{call,642,
          {atom,642,error},
          [{tuple,642,
            [{atom,642,invalid_chunk},
             {var,642,'File'},
             {call,642,
              {atom,642,chunk_name_to_id},
              [{var,642,'Id'},{var,642,'File'}]}]}]}]}],
      []}]},
   {clause,644,
    [{match,644,{atom,644,abstract_code},{var,644,'Id'}},
     {var,644,'Chunk'},
     {var,644,'File'},
     {var,644,'_Cs'},
     {var,644,'AtomTable'},
     {var,644,'Mod'}],
    [],
    [{'case',645,
      {var,645,'Chunk'},
      [{clause,646,
        [{bin,646,[]}],
        [],
        [{tuple,647,
          [{var,647,'AtomTable'},
           {tuple,647,[{var,647,'Id'},{atom,647,no_abstract_code}]}]}]},
       {clause,648,
        [{bin,648,
          [{bin_element,648,{integer,648,0},{integer,648,8},default},
           {bin_element,648,{var,648,'N'},{integer,648,8},default},
           {bin_element,648,{var,648,'Mode0'},{var,648,'N'},[binary]},
           {bin_element,648,{var,648,'Rest'},default,[binary]}]}],
        [],
        [{match,649,
          {var,649,'Mode'},
          {call,649,
           {atom,649,list_to_atom},
           [{call,649,{atom,649,binary_to_list},[{var,649,'Mode0'}]}]}},
         {call,650,
          {atom,650,decrypt_abst},
          [{var,650,'Mode'},
           {var,650,'Mod'},
           {var,650,'File'},
           {var,650,'Id'},
           {var,650,'AtomTable'},
           {var,650,'Rest'}]}]},
       {clause,651,
        [{var,651,'_'}],
        [],
        [{'case',652,
          {'catch',652,
           {call,652,{atom,652,binary_to_term},[{var,652,'Chunk'}]}},
          [{clause,653,
            [{tuple,653,[{atom,653,'EXIT'},{var,653,'_'}]}],
            [],
            [{call,654,
              {atom,654,error},
              [{tuple,654,
                [{atom,654,invalid_chunk},
                 {var,654,'File'},
                 {call,654,
                  {atom,654,chunk_name_to_id},
                  [{var,654,'Id'},{var,654,'File'}]}]}]}]},
           {clause,655,
            [{var,655,'Term'}],
            [],
            [{'try',656,
              [{tuple,657,
                [{var,657,'AtomTable'},
                 {tuple,657,
                  [{var,657,'Id'},
                   {call,657,
                    {atom,657,anno_from_term},
                    [{var,657,'Term'}]}]}]}],
              [],
              [{clause,659,
                [{tuple,659,[{var,659,'_'},{var,659,'_'},{var,659,'_'}]}],
                [],
                [{call,660,
                  {atom,660,error},
                  [{tuple,660,
                    [{atom,660,invalid_chunk},
                     {var,660,'File'},
                     {call,661,
                      {atom,661,chunk_name_to_id},
                      [{var,661,'Id'},{var,661,'File'}]}]}]}]}],
              []}]}]}]}]}]},
   {clause,665,
    [{match,665,{atom,665,atoms},{var,665,'Id'}},
     {var,665,'_Chunk'},
     {var,665,'_File'},
     {var,665,'Cs'},
     {var,665,'AtomTable0'},
     {var,665,'_Mod'}],
    [],
    [{match,666,
      {var,666,'AtomTable'},
      {call,666,
       {atom,666,ensure_atoms},
       [{var,666,'AtomTable0'},{var,666,'Cs'}]}},
     {match,667,
      {var,667,'Atoms'},
      {call,667,
       {remote,667,{atom,667,ets},{atom,667,tab2list}},
       [{var,667,'AtomTable'}]}},
     {tuple,668,
      [{var,668,'AtomTable'},
       {tuple,668,
        [{var,668,'Id'},
         {call,668,
          {remote,668,{atom,668,lists},{atom,668,sort}},
          [{var,668,'Atoms'}]}]}]}]},
   {clause,669,
    [{var,669,'ChunkName'},
     {var,669,'Chunk'},
     {var,669,'File'},
     {var,670,'Cs'},
     {var,670,'AtomTable'},
     {var,670,'_Mod'}],
    [[{call,670,{atom,670,is_atom},[{var,670,'ChunkName'}]}]],
    [{'case',671,
      {'catch',671,
       {call,671,
        {atom,671,symbols},
        [{var,671,'Chunk'},
         {var,671,'AtomTable'},
         {var,671,'Cs'},
         {var,671,'ChunkName'}]}},
      [{clause,672,
        [{tuple,672,[{atom,672,ok},{var,672,'NewAtomTable'},{var,672,'S'}]}],
        [],
        [{tuple,673,
          [{var,673,'NewAtomTable'},
           {tuple,673,[{var,673,'ChunkName'},{var,673,'S'}]}]}]},
       {clause,674,
        [{tuple,674,[{atom,674,'EXIT'},{var,674,'_'}]}],
        [],
        [{call,675,
          {atom,675,error},
          [{tuple,675,
            [{atom,675,invalid_chunk},
             {var,675,'File'},
             {call,675,
              {atom,675,chunk_name_to_id},
              [{var,675,'ChunkName'},{var,675,'File'}]}]}]}]}]}]},
   {clause,677,
    [{var,677,'ChunkId'},
     {var,677,'Chunk'},
     {var,677,'_File'},
     {var,678,'_Cs'},
     {var,678,'AtomTable'},
     {var,678,'_Module'}],
    [[{call,678,{atom,678,is_list},[{var,678,'ChunkId'}]}]],
    [{tuple,679,
      [{var,679,'AtomTable'},
       {tuple,679,[{var,679,'ChunkId'},{var,679,'Chunk'}]}]}]}]},
 {function,681,chunk_name_to_id,2,
  [{clause,681,[{atom,681,atoms},{var,681,'_'}],[],[{string,681,"Atom"}]},
   {clause,682,
    [{atom,682,indexed_imports},{var,682,'_'}],
    [],
    [{string,682,"ImpT"}]},
   {clause,683,[{atom,683,imports},{var,683,'_'}],[],[{string,683,"ImpT"}]},
   {clause,684,[{atom,684,exports},{var,684,'_'}],[],[{string,684,"ExpT"}]},
   {clause,685,
    [{atom,685,labeled_exports},{var,685,'_'}],
    [],
    [{string,685,"ExpT"}]},
   {clause,686,[{atom,686,locals},{var,686,'_'}],[],[{string,686,"LocT"}]},
   {clause,687,
    [{atom,687,labeled_locals},{var,687,'_'}],
    [],
    [{string,687,"LocT"}]},
   {clause,688,[{atom,688,attributes},{var,688,'_'}],[],[{string,688,"Attr"}]},
   {clause,689,
    [{atom,689,abstract_code},{var,689,'_'}],
    [],
    [{string,689,"Abst"}]},
   {clause,690,
    [{atom,690,compile_info},{var,690,'_'}],
    [],
    [{string,690,"CInf"}]},
   {clause,691,
    [{var,691,'Other'},{var,691,'File'}],
    [],
    [{call,692,
      {atom,692,error},
      [{tuple,692,
        [{atom,692,unknown_chunk},{var,692,'File'},{var,692,'Other'}]}]}]}]},
 {function,696,attributes,1,
  [{clause,696,
    [{var,696,'Attrs'}],
    [],
    [{call,697,
      {atom,697,attributes},
      [{call,697,{atom,697,keysort},[{integer,697,1},{var,697,'Attrs'}]},
       {nil,697}]}]}]},
 {function,699,attributes,2,
  [{clause,699,
    [{nil,699},{var,699,'R'}],
    [],
    [{call,700,{atom,700,reverse},[{var,700,'R'}]}]},
   {clause,701,
    [{var,701,'L'},{var,701,'R'}],
    [],
    [{match,702,
      {var,702,'K'},
      {call,702,
       {atom,702,element},
       [{integer,702,1},{call,702,{atom,702,hd},[{var,702,'L'}]}]}},
     {match,703,
      {tuple,703,[{var,703,'L1'},{var,703,'L2'}]},
      {call,703,
       {atom,703,splitwith},
       [{'fun',703,
         {clauses,
          [{clause,703,
            [{var,703,'T'}],
            [],
            [{op,703,'=:=',
              {call,703,{atom,703,element},[{integer,703,1},{var,703,'T'}]},
              {var,703,'K'}}]}]}},
        {var,703,'L'}]}},
     {match,704,
      {var,704,'V'},
      {call,704,
       {atom,704,append},
       [{lc,704,
         {var,704,'A'},
         [{generate,704,
           {tuple,704,[{var,704,'_'},{var,704,'A'}]},
           {var,704,'L1'}}]}]}},
     {call,705,
      {atom,705,attributes},
      [{var,705,'L2'},
       {cons,705,
        {tuple,705,[{var,705,'K'},{var,705,'V'}]},
        {var,705,'R'}}]}]}]},
 {function,709,symbols,4,
  [{clause,709,
    [{bin,709,
      [{bin_element,709,{var,709,'_Num'},{integer,709,32},default},
       {bin_element,709,{var,709,'B'},default,[binary]}]},
     {var,709,'AT0'},
     {var,709,'Cs'},
     {var,709,'Name'}],
    [],
    [{match,710,
      {var,710,'AT'},
      {call,710,{atom,710,ensure_atoms},[{var,710,'AT0'},{var,710,'Cs'}]}},
     {call,711,
      {atom,711,symbols1},
      [{var,711,'B'},
       {var,711,'AT'},
       {var,711,'Name'},
       {nil,711},
       {integer,711,1}]}]}]},
 {function,713,symbols1,5,
  [{clause,713,
    [{bin,713,
      [{bin_element,713,{var,713,'I1'},{integer,713,32},default},
       {bin_element,713,{var,713,'I2'},{integer,713,32},default},
       {bin_element,713,{var,713,'I3'},{integer,713,32},default},
       {bin_element,713,{var,713,'B'},default,[binary]}]},
     {var,713,'AT'},
     {var,713,'Name'},
     {var,713,'S'},
     {var,713,'Cnt'}],
    [],
    [{match,714,
      {var,714,'Symbol'},
      {call,714,
       {atom,714,symbol},
       [{var,714,'Name'},
        {var,714,'AT'},
        {var,714,'I1'},
        {var,714,'I2'},
        {var,714,'I3'},
        {var,714,'Cnt'}]}},
     {call,715,
      {atom,715,symbols1},
      [{var,715,'B'},
       {var,715,'AT'},
       {var,715,'Name'},
       {cons,715,{var,715,'Symbol'},{var,715,'S'}},
       {op,715,'+',{var,715,'Cnt'},{integer,715,1}}]}]},
   {clause,716,
    [{bin,716,[]},
     {var,716,'AT'},
     {var,716,'_Name'},
     {var,716,'S'},
     {var,716,'_Cnt'}],
    [],
    [{tuple,717,
      [{atom,717,ok},
       {var,717,'AT'},
       {call,717,{atom,717,sort},[{var,717,'S'}]}]}]}]},
 {function,719,symbol,6,
  [{clause,719,
    [{atom,719,indexed_imports},
     {var,719,'AT'},
     {var,719,'I1'},
     {var,719,'I2'},
     {var,719,'I3'},
     {var,719,'Cnt'}],
    [],
    [{tuple,720,
      [{var,720,'Cnt'},
       {call,720,{atom,720,atm},[{var,720,'AT'},{var,720,'I1'}]},
       {call,720,{atom,720,atm},[{var,720,'AT'},{var,720,'I2'}]},
       {var,720,'I3'}]}]},
   {clause,721,
    [{atom,721,imports},
     {var,721,'AT'},
     {var,721,'I1'},
     {var,721,'I2'},
     {var,721,'I3'},
     {var,721,'_Cnt'}],
    [],
    [{tuple,722,
      [{call,722,{atom,722,atm},[{var,722,'AT'},{var,722,'I1'}]},
       {call,722,{atom,722,atm},[{var,722,'AT'},{var,722,'I2'}]},
       {var,722,'I3'}]}]},
   {clause,723,
    [{atom,723,labeled_exports},
     {var,723,'AT'},
     {var,723,'I1'},
     {var,723,'I2'},
     {var,723,'I3'},
     {var,723,'_Cnt'}],
    [],
    [{tuple,724,
      [{call,724,{atom,724,atm},[{var,724,'AT'},{var,724,'I1'}]},
       {var,724,'I2'},
       {var,724,'I3'}]}]},
   {clause,725,
    [{atom,725,labeled_locals},
     {var,725,'AT'},
     {var,725,'I1'},
     {var,725,'I2'},
     {var,725,'I3'},
     {var,725,'_Cnt'}],
    [],
    [{tuple,726,
      [{call,726,{atom,726,atm},[{var,726,'AT'},{var,726,'I1'}]},
       {var,726,'I2'},
       {var,726,'I3'}]}]},
   {clause,727,
    [{var,727,'_'},
     {var,727,'AT'},
     {var,727,'I1'},
     {var,727,'I2'},
     {var,727,'_I3'},
     {var,727,'_Cnt'}],
    [],
    [{tuple,728,
      [{call,728,{atom,728,atm},[{var,728,'AT'},{var,728,'I1'}]},
       {var,728,'I2'}]}]}]},
 {function,730,atm,2,
  [{clause,730,
    [{var,730,'AT'},{var,730,'N'}],
    [],
    [{match,731,
      {cons,731,{tuple,731,[{var,731,'_N'},{var,731,'S'}]},{nil,731}},
      {call,731,
       {remote,731,{atom,731,ets},{atom,731,lookup}},
       [{var,731,'AT'},{var,731,'N'}]}},
     {var,732,'S'}]}]},
 {function,735,ensure_atoms,2,
  [{clause,735,
    [{tuple,735,[{atom,735,empty},{var,735,'AT'}]},{var,735,'Cs'}],
    [],
    [{match,736,
      {tuple,736,[{var,736,'_Id'},{var,736,'AtomChunk'}]},
      {call,736,
       {remote,736,{atom,736,lists},{atom,736,keyfind}},
       [{string,736,"Atom"},{integer,736,1},{var,736,'Cs'}]}},
     {call,737,
      {atom,737,extract_atoms},
      [{var,737,'AtomChunk'},{var,737,'AT'}]},
     {var,738,'AT'}]},
   {clause,739,[{var,739,'AT'},{var,739,'_Cs'}],[],[{var,740,'AT'}]}]},
 {function,742,extract_atoms,2,
  [{clause,742,
    [{bin,742,
      [{bin_element,742,{var,742,'_Num'},{integer,742,32},default},
       {bin_element,742,{var,742,'B'},default,[binary]}]},
     {var,742,'AT'}],
    [],
    [{call,743,
      {atom,743,extract_atoms},
      [{var,743,'B'},{integer,743,1},{var,743,'AT'}]}]}]},
 {function,745,extract_atoms,3,
  [{clause,745,
    [{bin,745,[]},{var,745,'_I'},{var,745,'_AT'}],
    [],
    [{atom,746,true}]},
   {clause,747,
    [{var,747,'B'},{var,747,'I'},{var,747,'AT'}],
    [],
    [{match,748,
      {tuple,748,[{var,748,'Atom'},{var,748,'B1'}]},
      {call,748,{atom,748,extract_atom},[{var,748,'B'}]}},
     {match,749,
      {atom,749,true},
      {call,749,
       {remote,749,{atom,749,ets},{atom,749,insert}},
       [{var,749,'AT'},{tuple,749,[{var,749,'I'},{var,749,'Atom'}]}]}},
     {call,750,
      {atom,750,extract_atoms},
      [{var,750,'B1'},
       {op,750,'+',{var,750,'I'},{integer,750,1}},
       {var,750,'AT'}]}]}]},
 {function,752,extract_atom,1,
  [{clause,752,
    [{bin,752,
      [{bin_element,752,{var,752,'Len'},default,default},
       {bin_element,752,{var,752,'B'},default,[binary]}]}],
    [],
    [{match,753,
      {bin,753,
       [{bin_element,753,{var,753,'SB'},{var,753,'Len'},[binary]},
        {bin_element,753,{var,753,'Tail'},default,[binary]}]},
      {var,753,'B'}},
     {tuple,754,
      [{call,754,
        {atom,754,list_to_atom},
        [{call,754,{atom,754,binary_to_list},[{var,754,'SB'}]}]},
       {var,754,'Tail'}]}]}]},
 {function,762,open_file,1,
  [{clause,762,
    [{match,762,
      {bin,762,
       [{bin_element,762,{string,762,"FOR1"},default,default},
        {bin_element,762,{var,762,'_'},default,[binary]}]},
      {var,762,'Binary'}}],
    [],
    [{tuple,763,
      [{atom,763,bb},{integer,758,0},{var,763,'Binary'},{var,763,'Binary'}]}]},
   {clause,764,
    [{var,764,'Binary0'}],
    [[{call,764,{atom,764,is_binary},[{var,764,'Binary0'}]}]],
    [{match,765,
      {var,765,'Binary'},
      {call,765,{atom,765,uncompress},[{var,765,'Binary0'}]}},
     {tuple,766,
      [{atom,766,bb},{integer,758,0},{var,766,'Binary'},{var,766,'Binary'}]}]},
   {clause,767,
    [{var,767,'FileName'}],
    [],
    [{'case',768,
      {call,768,
       {remote,768,{atom,768,file},{atom,768,open}},
       [{var,768,'FileName'},
        {cons,768,
         {atom,768,read},
         {cons,768,{atom,768,raw},{cons,768,{atom,768,binary},{nil,768}}}}]},
      [{clause,769,
        [{tuple,769,[{atom,769,ok},{var,769,'Fd'}]}],
        [],
        [{call,770,
          {atom,770,read_all},
          [{var,770,'Fd'},{var,770,'FileName'},{nil,770}]}]},
       {clause,771,
        [{var,771,'Error'}],
        [],
        [{call,772,
          {atom,772,file_error},
          [{var,772,'FileName'},{var,772,'Error'}]}]}]}]}]},
 {function,775,read_all,3,
  [{clause,775,
    [{var,775,'Fd'},{var,775,'FileName'},{var,775,'Bins'}],
    [],
    [{'case',776,
      {call,776,
       {remote,776,{atom,776,file},{atom,776,read}},
       [{var,776,'Fd'},{op,776,'bsl',{integer,776,1},{integer,776,18}}]},
      [{clause,777,
        [{tuple,777,[{atom,777,ok},{var,777,'Bin'}]}],
        [],
        [{call,778,
          {atom,778,read_all},
          [{var,778,'Fd'},
           {var,778,'FileName'},
           {cons,778,{var,778,'Bin'},{var,778,'Bins'}}]}]},
       {clause,779,
        [{atom,779,eof}],
        [],
        [{match,780,
          {atom,780,ok},
          {call,780,
           {remote,780,{atom,780,file},{atom,780,close}},
           [{var,780,'Fd'}]}},
         {tuple,781,
          [{atom,781,bb},
           {integer,758,0},
           {call,781,
            {atom,781,uncompress},
            [{call,781,{atom,781,reverse},[{var,781,'Bins'}]}]},
           {var,781,'FileName'}]}]},
       {clause,782,
        [{var,782,'Error'}],
        [],
        [{match,783,
          {atom,783,ok},
          {call,783,
           {remote,783,{atom,783,file},{atom,783,close}},
           [{var,783,'Fd'}]}},
         {call,784,
          {atom,784,file_error},
          [{var,784,'FileName'},{var,784,'Error'}]}]}]}]}]},
 {function,787,pread,3,
  [{clause,787,
    [{var,787,'FD'},{var,787,'AtPos'},{var,787,'Size'}],
    [],
    [{match,788,
      {tuple,788,
       [{atom,788,bb},{var,788,'Pos'},{var,788,'Binary'},{var,788,'_'}]},
      {var,788,'FD'}},
     {match,789,
      {var,789,'Skip'},
      {op,789,'-',{var,789,'AtPos'},{var,789,'Pos'}}},
     {'case',790,
      {var,790,'Binary'},
      [{clause,791,
        [{bin,791,
          [{bin_element,791,{var,791,'_'},{var,791,'Skip'},[binary]},
           {bin_element,791,{var,791,'B'},{var,791,'Size'},[binary]},
           {bin_element,791,{var,791,'Bin'},default,[binary]}]}],
        [],
        [{match,792,
          {var,792,'NFD'},
          {call,792,
           {remote,792,{atom,792,erlang},{atom,792,setelement}},
           [{integer,792,3},
            {call,792,
             {remote,792,{atom,792,erlang},{atom,792,setelement}},
             [{integer,792,2},
              {var,792,'FD'},
              {op,792,'+',{var,792,'AtPos'},{var,792,'Size'}}]},
            {var,792,'Bin'}]}},
         {tuple,793,
          [{var,793,'NFD'},{tuple,793,[{atom,793,ok},{var,793,'B'}]}]}]},
       {clause,794,
        [{bin,794,
          [{bin_element,794,{var,794,'_'},{var,794,'Skip'},[binary]},
           {bin_element,794,{var,794,'Bin'},default,[binary]}]}],
        [[{op,794,'>',
           {call,794,{atom,794,byte_size},[{var,794,'Bin'}]},
           {integer,794,0}}]],
        [{match,795,
          {var,795,'NFD'},
          {call,795,
           {remote,795,{atom,795,erlang},{atom,795,setelement}},
           [{integer,795,3},
            {call,795,
             {remote,795,{atom,795,erlang},{atom,795,setelement}},
             [{integer,795,2},
              {var,795,'FD'},
              {op,795,'+',
               {var,795,'AtPos'},
               {call,795,{atom,795,byte_size},[{var,795,'Bin'}]}}]},
            {bin,795,[]}]}},
         {tuple,796,
          [{var,796,'NFD'},{tuple,796,[{atom,796,ok},{var,796,'Bin'}]}]}]},
       {clause,797,
        [{var,797,'_'}],
        [],
        [{tuple,798,[{var,798,'FD'},{atom,798,eof}]}]}]}]}]},
 {function,801,filename,1,
  [{clause,801,
    [{var,801,'BB'}],
    [[{call,801,
       {atom,801,is_binary},
       [{call,801,
         {remote,801,{atom,801,erlang},{atom,801,element}},
         [{integer,801,4},{var,801,'BB'}]}]}]],
    [{call,802,
      {remote,802,{atom,802,erlang},{atom,802,element}},
      [{integer,802,4},{var,802,'BB'}]}]},
   {clause,803,
    [{var,803,'BB'}],
    [],
    [{call,804,
      {atom,804,list_to_atom},
      [{call,804,
        {remote,804,{atom,804,erlang},{atom,804,element}},
        [{integer,804,4},{var,804,'BB'}]}]}]}]},
 {function,806,beam_filename,1,
  [{clause,806,
    [{var,806,'Bin'}],
    [[{call,806,{atom,806,is_binary},[{var,806,'Bin'}]}]],
    [{var,807,'Bin'}]},
   {clause,808,
    [{var,808,'File'}],
    [],
    [{op,809,'++',
      {call,809,
       {remote,809,{atom,809,filename},{atom,809,rootname}},
       [{var,809,'File'},{string,809,".beam"}]},
      {string,809,".beam"}}]}]},
 {function,812,uncompress,1,
  [{clause,812,
    [{var,812,'Binary0'}],
    [],
    [{match,813,
      {tuple,813,[{atom,813,ok},{var,813,'Fd'}]},
      {call,813,
       {remote,813,{atom,813,ram_file},{atom,813,open}},
       [{var,813,'Binary0'},
        {cons,813,{atom,813,write},{cons,813,{atom,813,binary},{nil,813}}}]}},
     {match,814,
      {tuple,814,[{atom,814,ok},{var,814,'_'}]},
      {call,814,
       {remote,814,{atom,814,ram_file},{atom,814,uncompress}},
       [{var,814,'Fd'}]}},
     {match,815,
      {tuple,815,[{atom,815,ok},{var,815,'Binary'}]},
      {call,815,
       {remote,815,{atom,815,ram_file},{atom,815,get_file}},
       [{var,815,'Fd'}]}},
     {match,816,
      {atom,816,ok},
      {call,816,
       {remote,816,{atom,816,ram_file},{atom,816,close}},
       [{var,816,'Fd'}]}},
     {var,817,'Binary'}]}]},
 {function,819,compress,1,
  [{clause,819,
    [{var,819,'Binary0'}],
    [],
    [{match,820,
      {tuple,820,[{atom,820,ok},{var,820,'Fd'}]},
      {call,820,
       {remote,820,{atom,820,ram_file},{atom,820,open}},
       [{var,820,'Binary0'},
        {cons,820,{atom,820,write},{cons,820,{atom,820,binary},{nil,820}}}]}},
     {match,821,
      {tuple,821,[{atom,821,ok},{var,821,'_'}]},
      {call,821,
       {remote,821,{atom,821,ram_file},{atom,821,compress}},
       [{var,821,'Fd'}]}},
     {match,822,
      {tuple,822,[{atom,822,ok},{var,822,'Binary'}]},
      {call,822,
       {remote,822,{atom,822,ram_file},{atom,822,get_file}},
       [{var,822,'Fd'}]}},
     {match,823,
      {atom,823,ok},
      {call,823,
       {remote,823,{atom,823,ram_file},{atom,823,close}},
       [{var,823,'Fd'}]}},
     {var,824,'Binary'}]}]},
 {function,827,assert_directory,1,
  [{clause,827,
    [{var,827,'FileName'}],
    [],
    [{'case',828,
      {call,828,
       {remote,828,{atom,828,filelib},{atom,828,is_dir}},
       [{var,828,'FileName'}]},
      [{clause,829,[{atom,829,true}],[],[{atom,830,ok}]},
       {clause,831,
        [{atom,831,false}],
        [],
        [{call,832,
          {atom,832,error},
          [{tuple,832,
            [{atom,832,not_a_directory},{var,832,'FileName'}]}]}]}]}]}]},
 {function,837,file_error,2,
  [{clause,837,
    [{var,837,'FileName'},{tuple,837,[{atom,837,error},{var,837,'Reason'}]}],
    [],
    [{call,838,
      {atom,838,error},
      [{tuple,838,
        [{atom,838,file_error},{var,838,'FileName'},{var,838,'Reason'}]}]}]}]},
 {function,842,error,1,
  [{clause,842,
    [{var,842,'Reason'}],
    [],
    [{call,843,
      {atom,843,throw},
      [{tuple,843,
        [{atom,843,error},{atom,-1,beam_lib},{var,843,'Reason'}]}]}]}]},
 {function,847,significant_chunks,0,
  [{clause,847,[],[],
    [{cons,848,{string,848,"Line"},{call,848,{atom,848,md5_chunks},[]}}]}]},
 {function,853,md5_chunks,0,
  [{clause,853,[],[],
    [{cons,854,
      {string,854,"Atom"},
      {cons,854,
       {string,854,"Code"},
       {cons,854,
        {string,854,"StrT"},
        {cons,854,
         {string,854,"ImpT"},
         {cons,854,
          {string,854,"ExpT"},
          {cons,854,
           {string,854,"FunT"},
           {cons,854,{string,854,"LitT"},{nil,854}}}}}}}}]}]},
 {function,858,mandatory_chunks,0,
  [{clause,858,[],[],
    [{cons,859,
      {string,859,"Code"},
      {cons,859,
       {string,859,"ExpT"},
       {cons,859,
        {string,859,"ImpT"},
        {cons,859,
         {string,859,"StrT"},
         {cons,859,{string,859,"Atom"},{nil,859}}}}}}]}]},
 {function,874,decrypt_abst,6,
  [{clause,874,
    [{var,874,'Type'},
     {var,874,'Module'},
     {var,874,'File'},
     {var,874,'Id'},
     {var,874,'AtomTable'},
     {var,874,'Bin'}],
    [],
    [{'try',875,
      [{match,876,
        {var,876,'KeyString'},
        {call,876,
         {atom,876,get_crypto_key},
         [{tuple,876,
           [{atom,876,debug_info},
            {var,876,'Type'},
            {var,876,'Module'},
            {var,876,'File'}]}]}},
       {match,877,
        {var,877,'Key'},
        {call,877,
         {atom,877,make_crypto_key},
         [{var,877,'Type'},{var,877,'KeyString'}]}},
       {match,878,
        {var,878,'Term'},
        {call,878,
         {atom,878,decrypt_abst_1},
         [{var,878,'Key'},{var,878,'Bin'}]}},
       {tuple,879,
        [{var,879,'AtomTable'},
         {tuple,879,[{var,879,'Id'},{var,879,'Term'}]}]}],
      [],
      [{clause,881,
        [{tuple,881,[{var,881,'_'},{var,881,'_'},{var,881,'_'}]}],
        [],
        [{call,882,
          {atom,882,error},
          [{tuple,882,
            [{atom,882,key_missing_or_invalid},
             {var,882,'File'},
             {var,882,'Id'}]}]}]}],
      []}]}]},
 {function,885,decrypt_abst_1,2,
  [{clause,885,
    [{tuple,885,
      [{var,885,'Type'},
       {var,885,'Key'},
       {var,885,'IVec'},
       {var,885,'_BlockSize'}]},
     {var,885,'Bin'}],
    [],
    [{match,886,{atom,886,ok},{call,886,{atom,886,start_crypto},[]}},
     {match,887,
      {var,887,'NewBin'},
      {call,887,
       {remote,887,{atom,887,crypto},{atom,887,block_decrypt}},
       [{var,887,'Type'},{var,887,'Key'},{var,887,'IVec'},{var,887,'Bin'}]}},
     {match,888,
      {var,888,'Term'},
      {call,888,{atom,888,binary_to_term},[{var,888,'NewBin'}]}},
     {call,889,{atom,889,anno_from_term},[{var,889,'Term'}]}]}]},
 {function,891,anno_from_term,1,
  [{clause,891,
    [{tuple,891,[{atom,891,raw_abstract_v1},{var,891,'Forms'}]}],
    [],
    [{tuple,892,
      [{atom,892,raw_abstract_v1},
       {call,892,{atom,892,anno_from_forms},[{var,892,'Forms'}]}]}]},
   {clause,893,
    [{tuple,893,[{var,893,'Tag'},{var,893,'Forms'}]}],
    [[{op,893,'=:=',{var,893,'Tag'},{atom,893,abstract_v1}}],
     [{op,893,'=:=',{var,893,'Tag'},{atom,893,abstract_v2}}]],
    [{'try',894,
      [{tuple,894,
        [{var,894,'Tag'},
         {call,894,{atom,894,anno_from_forms},[{var,894,'Forms'}]}]}],
      [],
      [{clause,896,
        [{tuple,896,[{var,896,'_'},{var,896,'_'},{var,896,'_'}]}],
        [],
        [{tuple,897,[{var,897,'Tag'},{var,897,'Forms'}]}]}],
      []}]},
   {clause,899,[{var,899,'T'}],[],[{var,900,'T'}]}]},
 {function,902,anno_from_forms,1,
  [{clause,902,
    [{var,902,'Forms'}],
    [],
    [{lc,903,
      {call,903,
       {remote,903,{atom,903,erl_parse},{atom,903,anno_from_term}},
       [{var,903,'Form'}]},
      [{generate,903,{var,903,'Form'},{var,903,'Forms'}}]}]}]},
 {function,905,start_crypto,0,
  [{clause,905,[],[],
    [{'case',906,
      {call,906,{remote,906,{atom,906,crypto},{atom,906,start}},[]},
      [{clause,907,
        [{tuple,907,
          [{atom,907,error},
           {tuple,907,[{atom,907,already_started},{var,907,'_'}]}]}],
        [],
        [{atom,908,ok}]},
       {clause,909,[{atom,909,ok}],[],[{atom,910,ok}]}]}]}]},
 {function,913,get_crypto_key,1,
  [{clause,913,
    [{var,913,'What'}],
    [],
    [{call,914,
      {atom,914,call_crypto_server},
      [{tuple,914,[{atom,914,get_crypto_key},{var,914,'What'}]}]}]}]},
 {function,916,call_crypto_server,1,
  [{clause,916,
    [{var,916,'Req'}],
    [],
    [{'try',917,
      [{call,918,
        {remote,918,{atom,918,gen_server},{atom,918,call}},
        [{atom,872,beam_lib__crypto_key_server},
         {var,918,'Req'},
         {atom,918,infinity}]}],
      [],
      [{clause,920,
        [{tuple,920,
          [{atom,920,exit},
           {tuple,920,[{atom,920,noproc},{var,920,'_'}]},
           {var,920,'_'}]}],
        [],
        [{call,922,{atom,922,call_crypto_server_1},[{var,922,'Req'}]}]},
       {clause,923,
        [{tuple,923,
          [{atom,923,exit},
           {tuple,923,[{atom,923,normal},{var,923,'_'}]},
           {var,923,'_'}]}],
        [],
        [{call,925,{atom,925,call_crypto_server_1},[{var,925,'Req'}]}]}],
      []}]}]},
 {function,928,call_crypto_server_1,1,
  [{clause,928,
    [{var,928,'Req'}],
    [],
    [{match,929,
      {tuple,929,[{atom,929,ok},{var,929,'_'}]},
      {call,929,
       {remote,929,{atom,929,gen_server},{atom,929,start}},
       [{tuple,929,[{atom,929,local},{atom,872,beam_lib__crypto_key_server}]},
        {atom,-1,beam_lib},
        {nil,929},
        {nil,929}]}},
     {call,930,{remote,930,{atom,930,erlang},{atom,930,yield}},[]},
     {call,931,{atom,931,call_crypto_server},[{var,931,'Req'}]}]}]},
 {function,935,init,1,
  [{clause,935,
    [{nil,935}],
    [],
    [{tuple,936,
      [{atom,936,ok},{tuple,936,[{atom,936,state},{atom,936,undefined}]}]}]}]},
 {function,947,handle_call,3,
  [{clause,947,
    [{match,947,
      {tuple,947,[{atom,947,get_crypto_key},{var,947,'_'}]},
      {var,947,'R'}},
     {var,947,'From'},
     {match,947,
      {tuple,947,[{atom,947,state},{atom,947,undefined}]},
      {var,947,'S'}}],
    [],
    [{'case',948,
      {call,948,{atom,948,crypto_key_fun_from_file},[]},
      [{clause,949,
        [{atom,949,error}],
        [],
        [{tuple,950,[{atom,950,reply},{atom,950,error},{var,950,'S'}]}]},
       {clause,951,
        [{var,951,'F'}],
        [[{call,951,{atom,951,is_function},[{var,951,'F'}]}]],
        [{call,953,
          {atom,953,handle_call},
          [{var,953,'R'},
           {var,953,'From'},
           {call,953,
            {remote,953,{atom,953,erlang},{atom,953,setelement}},
            [{integer,953,2},{var,953,'S'},{var,953,'F'}]}]}]}]}]},
   {clause,955,
    [{tuple,955,[{atom,955,get_crypto_key},{var,955,'What'}]},
     {var,955,'From'},
     {match,955,{tuple,955,[{atom,955,state},{var,955,'F'}]},{var,955,'S'}}],
    [],
    [{'try',956,
      [{match,957,
        {var,957,'Result'},
        {call,957,{var,957,'F'},[{var,957,'What'}]}},
       {call,960,
        {remote,960,{atom,960,gen_server},{atom,960,reply}},
        [{var,960,'From'},{var,960,'Result'}]},
       {call,961,{remote,961,{atom,961,erlang},{atom,961,garbage_collect}},[]},
       {tuple,962,[{atom,962,noreply},{var,962,'S'}]}],
      [],
      [{clause,964,
        [{tuple,964,[{var,964,'_'},{var,964,'_'},{var,964,'_'}]}],
        [],
        [{tuple,965,[{atom,965,reply},{atom,965,error},{var,965,'S'}]}]}],
      []}]},
   {clause,967,
    [{tuple,967,[{atom,967,crypto_key_fun},{var,967,'F'}]},
     {match,967,{tuple,967,[{var,967,'_'},{var,967,'_'}]},{var,967,'From'}},
     {var,967,'S'}],
    [],
    [{'case',968,
      {call,968,
       {remote,968,{atom,968,erlang},{atom,968,element}},
       [{integer,968,2},{var,968,'S'}]},
      [{clause,969,
        [{atom,969,undefined}],
        [],
        [{'if',972,
          [{clause,972,[],
            [[{call,972,{atom,972,is_function},[{var,972,'F'}]},
              {call,972,
               {atom,972,is_function},
               [{var,972,'F'},{integer,972,1}]}]],
            [{match,973,
              {tuple,973,
               [{var,973,'Result'},{var,973,'Fun'},{var,973,'Reply'}]},
              {'case',974,
               {'catch',974,{call,974,{var,974,'F'},[{atom,974,init}]}},
               [{clause,975,
                 [{atom,975,ok}],
                 [],
                 [{tuple,976,[{atom,976,true},{var,976,'F'},{atom,976,ok}]}]},
                {clause,977,
                 [{tuple,977,[{atom,977,ok},{var,977,'F1'}]}],
                 [[{call,977,{atom,977,is_function},[{var,977,'F1'}]}]],
                 [{'if',978,
                   [{clause,979,[],
                     [[{call,979,
                        {atom,979,is_function},
                        [{var,979,'F1'},{integer,979,1}]}]],
                     [{tuple,980,
                       [{atom,980,true},{var,980,'F1'},{atom,980,ok}]}]},
                    {clause,981,[],
                     [[{atom,981,true}]],
                     [{tuple,982,
                       [{atom,982,false},
                        {atom,982,undefined},
                        {tuple,983,
                         [{atom,983,error},{atom,983,badfun}]}]}]}]}]},
                {clause,985,
                 [{tuple,985,[{atom,985,error},{var,985,'Reason'}]}],
                 [],
                 [{tuple,986,
                   [{atom,986,false},
                    {atom,986,undefined},
                    {tuple,986,[{atom,986,error},{var,986,'Reason'}]}]}]},
                {clause,987,
                 [{tuple,987,[{atom,987,'EXIT'},{var,987,'Reason'}]}],
                 [],
                 [{tuple,988,
                   [{atom,988,false},
                    {atom,988,undefined},
                    {tuple,988,[{atom,988,error},{var,988,'Reason'}]}]}]}]}},
             {call,990,
              {remote,990,{atom,990,gen_server},{atom,990,reply}},
              [{var,990,'From'},{var,990,'Reply'}]},
             {call,991,
              {remote,991,{atom,991,erlang},{atom,991,garbage_collect}},
              []},
             {match,992,
              {var,992,'NewS'},
              {'case',992,
               {var,992,'Result'},
               [{clause,993,
                 [{atom,993,true}],
                 [],
                 [{call,994,
                   {remote,994,{atom,994,erlang},{atom,994,setelement}},
                   [{integer,994,2},{var,994,'S'},{var,994,'Fun'}]}]},
                {clause,995,[{atom,995,false}],[],[{var,996,'S'}]}]}},
             {tuple,998,[{atom,998,noreply},{var,998,'NewS'}]}]},
           {clause,999,[],
            [[{atom,999,true}]],
            [{tuple,1000,
              [{atom,1000,reply},
               {tuple,1000,[{atom,1000,error},{atom,1000,badfun}]},
               {var,1000,'S'}]}]}]}]},
       {clause,1002,
        [{var,1002,'OtherF'}],
        [[{call,1002,{atom,1002,is_function},[{var,1002,'OtherF'}]}]],
        [{tuple,1003,
          [{atom,1003,reply},
           {tuple,1003,[{atom,1003,error},{atom,1003,exists}]},
           {var,1003,'S'}]}]}]}]},
   {clause,1005,
    [{atom,1005,clear_crypto_key_fun},{var,1005,'_From'},{var,1005,'S'}],
    [],
    [{'case',1006,
      {call,1006,
       {remote,1006,{atom,1006,erlang},{atom,1006,element}},
       [{integer,1006,2},{var,1006,'S'}]},
      [{clause,1007,
        [{atom,1007,undefined}],
        [],
        [{tuple,1008,
          [{atom,1008,stop},
           {atom,1008,normal},
           {atom,1008,undefined},
           {var,1008,'S'}]}]},
       {clause,1009,
        [{var,1009,'F'}],
        [],
        [{match,1010,
          {var,1010,'Result'},
          {'catch',1010,{call,1010,{var,1010,'F'},[{atom,1010,clear}]}}},
         {tuple,1011,
          [{atom,1011,stop},
           {atom,1011,normal},
           {tuple,1011,[{atom,1011,ok},{var,1011,'Result'}]},
           {var,1011,'S'}]}]}]}]}]},
 {function,1016,handle_cast,2,
  [{clause,1016,
    [{var,1016,'_'},{var,1016,'State'}],
    [],
    [{tuple,1017,[{atom,1017,noreply},{var,1017,'State'}]}]}]},
 {function,1021,handle_info,2,
  [{clause,1021,
    [{var,1021,'_'},{var,1021,'State'}],
    [],
    [{tuple,1022,[{atom,1022,noreply},{var,1022,'State'}]}]}]},
 {function,1026,code_change,3,
  [{clause,1026,
    [{var,1026,'_OldVsn'},{var,1026,'State'},{var,1026,'_Extra'}],
    [],
    [{tuple,1027,[{atom,1027,ok},{var,1027,'State'}]}]}]},
 {function,1031,terminate,2,
  [{clause,1031,
    [{var,1031,'_Reason'},{var,1031,'_State'}],
    [],
    [{atom,1032,ok}]}]},
 {function,1034,crypto_key_fun_from_file,0,
  [{clause,1034,[],[],
    [{'case',1035,
      {call,1035,
       {remote,1035,{atom,1035,init},{atom,1035,get_argument}},
       [{atom,1035,home}]},
      [{clause,1036,
        [{tuple,1036,
          [{atom,1036,ok},
           {cons,1036,{cons,1036,{var,1036,'Home'},{nil,1036}},{nil,1036}}]}],
        [],
        [{call,1037,
          {atom,1037,crypto_key_fun_from_file_1},
          [{cons,1037,
            {string,1037,"."},
            {cons,1037,{var,1037,'Home'},{nil,1037}}}]}]},
       {clause,1038,
        [{var,1038,'_'}],
        [],
        [{call,1039,
          {atom,1039,crypto_key_fun_from_file_1},
          [{cons,1039,{string,1039,"."},{nil,1039}}]}]}]}]}]},
 {function,1042,crypto_key_fun_from_file_1,1,
  [{clause,1042,
    [{var,1042,'Path'}],
    [],
    [{'case',1043,
      {call,1043,
       {atom,1043,f_p_s},
       [{var,1043,'Path'},{string,1043,".erlang.crypt"}]},
      [{clause,1044,
        [{tuple,1044,[{atom,1044,ok},{var,1044,'KeyInfo'},{var,1044,'_'}]}],
        [],
        [{call,1045,{atom,1045,try_load_crypto_fun},[{var,1045,'KeyInfo'}]}]},
       {clause,1046,[{var,1046,'_'}],[],[{atom,1047,error}]}]}]}]},
 {function,1050,f_p_s,2,
  [{clause,1050,
    [{var,1050,'P'},{var,1050,'F'}],
    [],
    [{'case',1051,
      {call,1051,
       {remote,1051,{atom,1051,file},{atom,1051,path_script}},
       [{var,1051,'P'},{var,1051,'F'}]},
      [{clause,1052,
        [{tuple,1052,[{atom,1052,error},{atom,1052,enoent}]}],
        [],
        [{tuple,1053,[{atom,1053,error},{atom,1053,enoent}]}]},
       {clause,1054,
        [{tuple,1054,
          [{atom,1054,error},
           {match,1054,
            {tuple,1054,
             [{var,1054,'Line'},{var,1054,'_Mod'},{var,1054,'_Term'}]},
            {var,1054,'E'}}]}],
        [],
        [{call,1055,
          {atom,1055,error},
          [{string,1055,"file:path_script(~tp,~tp): error on line ~p: ~ts~n"},
           {cons,1056,
            {var,1056,'P'},
            {cons,1056,
             {var,1056,'F'},
             {cons,1056,
              {var,1056,'Line'},
              {cons,1056,
               {call,1056,
                {remote,1056,{atom,1056,file},{atom,1056,format_error}},
                [{var,1056,'E'}]},
               {nil,1056}}}}}]},
         {atom,1057,ok}]},
       {clause,1058,
        [{tuple,1058,[{atom,1058,error},{var,1058,'E'}]}],
        [[{call,1058,{atom,1058,is_atom},[{var,1058,'E'}]}]],
        [{call,1059,
          {atom,1059,error},
          [{string,1059,"file:path_script(~tp,~tp): ~ts~n"},
           {cons,1060,
            {var,1060,'P'},
            {cons,1060,
             {var,1060,'F'},
             {cons,1060,
              {call,1060,
               {remote,1060,{atom,1060,file},{atom,1060,format_error}},
               [{var,1060,'E'}]},
              {nil,1060}}}}]},
         {atom,1061,ok}]},
       {clause,1062,[{var,1062,'Other'}],[],[{var,1063,'Other'}]}]}]}]},
 {function,1066,try_load_crypto_fun,1,
  [{clause,1066,
    [{var,1066,'KeyInfo'}],
    [[{call,1066,{atom,1066,is_list},[{var,1066,'KeyInfo'}]}]],
    [{match,1067,
      {var,1067,'T'},
      {call,1067,
       {remote,1067,{atom,1067,ets},{atom,1067,new}},
       [{atom,1067,keys},
        {cons,1067,
         {atom,1067,private},
         {cons,1067,{atom,1067,set},{nil,1067}}}]}},
     {call,1068,
      {atom,1068,foreach},
      [{'fun',1069,
        {clauses,
         [{clause,1069,
           [{tuple,1069,
             [{atom,1069,debug_info},
              {var,1069,'Mode'},
              {var,1069,'M'},
              {var,1069,'Key'}]}],
           [[{call,1069,{atom,1069,is_atom},[{var,1069,'M'}]}]],
           [{call,1070,
             {remote,1070,{atom,1070,ets},{atom,1070,insert}},
             [{var,1070,'T'},
              {tuple,1070,
               [{tuple,1070,
                 [{atom,1070,debug_info},
                  {var,1070,'Mode'},
                  {var,1070,'M'},
                  {nil,1070}]},
                {var,1070,'Key'}]}]}]},
          {clause,1071,
           [{tuple,1071,
             [{atom,1071,debug_info},
              {var,1071,'Mode'},
              {nil,1071},
              {var,1071,'Key'}]}],
           [],
           [{call,1072,
             {remote,1072,{atom,1072,ets},{atom,1072,insert}},
             [{var,1072,'T'},
              {tuple,1072,
               [{tuple,1072,
                 [{atom,1072,debug_info},
                  {var,1072,'Mode'},
                  {nil,1072},
                  {nil,1072}]},
                {var,1072,'Key'}]}]}]},
          {clause,1073,
           [{var,1073,'Other'}],
           [],
           [{call,1074,
             {atom,1074,error},
             [{string,1074,"unknown key: ~p~n"},
              {cons,1074,{var,1074,'Other'},{nil,1074}}]}]}]}},
       {var,1075,'KeyInfo'}]},
     {'fun',1076,
      {clauses,
       [{clause,1076,
         [{tuple,1076,
           [{atom,1076,debug_info},
            {var,1076,'Mode'},
            {var,1076,'M'},
            {var,1076,'F'}]}],
         [],
         [{call,1077,
           {atom,1077,alt_lookup_key},
           [{cons,1078,
             {tuple,1078,
              [{atom,1078,debug_info},
               {var,1078,'Mode'},
               {var,1078,'M'},
               {var,1078,'F'}]},
             {cons,1079,
              {tuple,1079,
               [{atom,1079,debug_info},
                {var,1079,'Mode'},
                {var,1079,'M'},
                {nil,1079}]},
              {cons,1080,
               {tuple,1080,
                [{atom,1080,debug_info},
                 {var,1080,'Mode'},
                 {nil,1080},
                 {nil,1080}]},
               {nil,1080}}}},
            {var,1080,'T'}]}]},
        {clause,1081,
         [{atom,1081,clear}],
         [],
         [{call,1082,
           {remote,1082,{atom,1082,ets},{atom,1082,delete}},
           [{var,1082,'T'}]}]},
        {clause,1083,[{var,1083,'_'}],[],[{atom,1084,error}]}]}}]},
   {clause,1086,
    [{var,1086,'KeyInfo'}],
    [],
    [{call,1087,
      {atom,1087,error},
      [{string,1087,"unrecognized crypto key info: ~p\n"},
       {cons,1087,{var,1087,'KeyInfo'},{nil,1087}}]}]}]},
 {function,1089,alt_lookup_key,2,
  [{clause,1089,
    [{cons,1089,{var,1089,'H'},{var,1089,'T'}},{var,1089,'Tab'}],
    [],
    [{'case',1090,
      {call,1090,
       {remote,1090,{atom,1090,ets},{atom,1090,lookup}},
       [{var,1090,'Tab'},{var,1090,'H'}]},
      [{clause,1091,
        [{nil,1091}],
        [],
        [{call,1092,
          {atom,1092,alt_lookup_key},
          [{var,1092,'T'},{var,1092,'Tab'}]}]},
       {clause,1093,
        [{cons,1093,
          {tuple,1093,[{var,1093,'_'},{var,1093,'Val'}]},
          {nil,1093}}],
        [],
        [{var,1094,'Val'}]}]}]},
   {clause,1096,[{nil,1096},{var,1096,'_'}],[],[{atom,1097,error}]}]},
 {function,1099,error,2,
  [{clause,1099,
    [{var,1099,'Fmt'},{var,1099,'Args'}],
    [],
    [{call,1100,
      {remote,1100,{atom,1100,error_logger},{atom,1100,error_msg}},
      [{var,1100,'Fmt'},{var,1100,'Args'}]},
     {atom,1101,error}]}]}]
