erl_pp
[{erl_parse,inop_prec,1},{erl_parse,preop_prec,1},{erl_parse,func_prec,0},{erl_parse,max_prec,0},{erl_parse,type_inop_prec,1},{erl_parse,type_preop_prec,1},{io_lib,write,1},{io_lib,format,2},{lists,append,1},{lists,foldr,3},{lists,mapfoldl,3},{lists,reverse,1},{lists,reverse,2}]
[]
[{function,75,form,1,
  [{clause,75,
    [{var,75,'Thing'}],
    [],
    [{call,76,{atom,76,form},[{var,76,'Thing'},{atom,76,none}]}]}]},
 {function,82,form,2,
  [{clause,82,
    [{var,82,'Thing'},{var,82,'Options'}],
    [],
    [{atom,65,ok},
     {match,84,
      {var,84,'State'},
      {call,84,{atom,84,state},[{var,84,'Options'}]}},
     {call,85,
      {atom,85,frmt},
      [{call,85,
        {atom,85,lform},
        [{var,85,'Thing'},
         {call,85,{atom,85,options},[{var,85,'Options'}]},
         {var,85,'State'}]},
       {var,85,'State'}]}]}]},
 {function,90,attribute,1,
  [{clause,90,
    [{var,90,'Thing'}],
    [],
    [{call,91,{atom,91,attribute},[{var,91,'Thing'},{atom,91,none}]}]}]},
 {function,97,attribute,2,
  [{clause,97,
    [{var,97,'Thing'},{var,97,'Options'}],
    [],
    [{atom,65,ok},
     {match,99,
      {var,99,'State'},
      {call,99,{atom,99,state},[{var,99,'Options'}]}},
     {call,100,
      {atom,100,frmt},
      [{call,100,
        {atom,100,lattribute},
        [{var,100,'Thing'},
         {call,100,{atom,100,options},[{var,100,'Options'}]},
         {var,100,'State'}]},
       {var,100,'State'}]}]}]},
 {function,105,function,1,
  [{clause,105,
    [{var,105,'F'}],
    [],
    [{call,106,{atom,106,function},[{var,106,'F'},{atom,106,none}]}]}]},
 {function,112,function,2,
  [{clause,112,
    [{var,112,'F'},{var,112,'Options'}],
    [],
    [{atom,65,ok},
     {call,114,
      {atom,114,frmt},
      [{call,114,
        {atom,114,lfunction},
        [{var,114,'F'},{call,114,{atom,114,options},[{var,114,'Options'}]}]},
       {call,114,{atom,114,state},[{var,114,'Options'}]}]}]}]},
 {function,119,guard,1,
  [{clause,119,
    [{var,119,'Gs'}],
    [],
    [{call,120,{atom,120,guard},[{var,120,'Gs'},{atom,120,none}]}]}]},
 {function,126,guard,2,
  [{clause,126,
    [{var,126,'Gs'},{var,126,'Options'}],
    [],
    [{atom,65,ok},
     {call,128,
      {atom,128,frmt},
      [{call,128,
        {atom,128,lguard},
        [{var,128,'Gs'},{call,128,{atom,128,options},[{var,128,'Options'}]}]},
       {call,128,{atom,128,state},[{var,128,'Options'}]}]}]}]},
 {function,133,exprs,1,
  [{clause,133,
    [{var,133,'Es'}],
    [],
    [{call,134,
      {atom,134,exprs},
      [{var,134,'Es'},{integer,134,0},{atom,134,none}]}]}]},
 {function,140,exprs,2,
  [{clause,140,
    [{var,140,'Es'},{var,140,'Options'}],
    [],
    [{call,141,
      {atom,141,exprs},
      [{var,141,'Es'},{integer,141,0},{var,141,'Options'}]}]}]},
 {function,148,exprs,3,
  [{clause,148,
    [{var,148,'Es'},{var,148,'I'},{var,148,'Options'}],
    [],
    [{atom,65,ok},
     {call,150,
      {atom,150,frmt},
      [{tuple,150,
        [{atom,150,seq},
         {nil,150},
         {nil,150},
         {cons,150,{char,150,44},{nil,150}},
         {call,150,
          {atom,150,lexprs},
          [{var,150,'Es'},
           {call,150,{atom,150,options},[{var,150,'Options'}]}]}]},
       {var,150,'I'},
       {call,150,{atom,150,state},[{var,150,'Options'}]}]}]}]},
 {function,155,expr,1,
  [{clause,155,
    [{var,155,'E'}],
    [],
    [{atom,65,ok},
     {call,157,
      {atom,157,frmt},
      [{call,157,
        {atom,157,lexpr},
        [{var,157,'E'},
         {integer,157,0},
         {call,157,{atom,157,options},[{atom,157,none}]}]},
       {call,157,{atom,157,state},[{atom,157,none}]}]}]}]},
 {function,163,expr,2,
  [{clause,163,
    [{var,163,'E'},{var,163,'Options'}],
    [],
    [{atom,65,ok},
     {call,165,
      {atom,165,frmt},
      [{call,165,
        {atom,165,lexpr},
        [{var,165,'E'},
         {integer,165,0},
         {call,165,{atom,165,options},[{var,165,'Options'}]}]},
       {call,165,{atom,165,state},[{var,165,'Options'}]}]}]}]},
 {function,172,expr,3,
  [{clause,172,
    [{var,172,'E'},{var,172,'I'},{var,172,'Options'}],
    [],
    [{atom,65,ok},
     {call,174,
      {atom,174,frmt},
      [{call,174,
        {atom,174,lexpr},
        [{var,174,'E'},
         {integer,174,0},
         {call,174,{atom,174,options},[{var,174,'Options'}]}]},
       {var,174,'I'},
       {call,174,{atom,174,state},[{var,174,'Options'}]}]}]}]},
 {function,182,expr,4,
  [{clause,182,
    [{var,182,'E'},{var,182,'I'},{var,182,'P'},{var,182,'Options'}],
    [],
    [{atom,65,ok},
     {call,184,
      {atom,184,frmt},
      [{call,184,
        {atom,184,lexpr},
        [{var,184,'E'},
         {var,184,'P'},
         {call,184,{atom,184,options},[{var,184,'Options'}]}]},
       {var,184,'I'},
       {call,184,{atom,184,state},[{var,184,'Options'}]}]}]}]},
 {function,190,options,1,
  [{clause,190,
    [{var,190,'Options'}],
    [[{call,190,{atom,190,is_list},[{var,190,'Options'}]}]],
    [{match,191,
      {var,191,'Hook'},
      {call,191,
       {remote,191,{atom,191,proplists},{atom,191,get_value}},
       [{atom,191,hook},{var,191,'Options'},{atom,191,none}]}},
     {match,192,
      {var,192,'Encoding'},
      {call,192,{atom,192,encoding},[{var,192,'Options'}]}},
     {tuple,193,
      [{atom,193,options},
       {var,193,'Hook'},
       {var,193,'Encoding'},
       {var,193,'Options'}]}]},
   {clause,194,
    [{var,194,'Hook'}],
    [],
    [{tuple,195,
      [{atom,195,options},
       {var,195,'Hook'},
       {call,195,{atom,195,encoding},[{nil,195}]},
       {var,195,'Hook'}]}]}]},
 {function,197,state,1,
  [{clause,197,
    [{var,197,'Options'}],
    [[{call,197,{atom,197,is_list},[{var,197,'Options'}]}]],
    [{'case',198,
      {call,198,{atom,198,encoding},[{var,198,'Options'}]},
      [{clause,199,[{atom,199,latin1}],[],[{call,199,{atom,199,state},[]}]},
       {clause,200,
        [{atom,200,unicode}],
        [],
        [{call,200,{atom,200,unicode_state},[]}]}]}]},
   {clause,202,[{var,202,'_Hook'}],[],[{call,203,{atom,203,state},[]}]}]},
 {function,205,state,0,
  [{clause,205,[],[],
    [{tuple,206,
      [{atom,206,pp},
       {'fun',206,
        {function,
         {atom,206,io_lib},
         {atom,206,write_string_as_latin1},
         {integer,206,1}}},
       {'fun',207,
        {function,
         {atom,207,io_lib},
         {atom,207,write_char_as_latin1},
         {integer,207,1}}}]}]}]},
 {function,209,unicode_state,0,
  [{clause,209,[],[],
    [{tuple,210,
      [{atom,210,pp},
       {'fun',210,
        {function,{atom,210,io_lib},{atom,210,write_string},{integer,210,1}}},
       {'fun',211,
        {function,
         {atom,211,io_lib},
         {atom,211,write_char},
         {integer,211,1}}}]}]}]},
 {function,213,encoding,1,
  [{clause,213,
    [{var,213,'Options'}],
    [],
    [{'case',214,
      {call,214,
       {remote,214,{atom,214,proplists},{atom,214,get_value}},
       [{atom,214,encoding},
        {var,214,'Options'},
        {call,214,
         {remote,214,{atom,214,epp},{atom,214,default_encoding}},
         []}]},
      [{clause,215,[{atom,215,latin1}],[],[{atom,215,latin1}]},
       {clause,216,[{atom,216,utf8}],[],[{atom,216,unicode}]},
       {clause,217,[{atom,217,unicode}],[],[{atom,217,unicode}]}]}]}]},
 {function,220,lform,3,
  [{clause,220,
    [{tuple,220,
      [{atom,220,attribute},
       {var,220,'Line'},
       {var,220,'Name'},
       {var,220,'Arg'}]},
     {var,220,'Opts'},
     {var,220,'State'}],
    [],
    [{call,221,
      {atom,221,lattribute},
      [{tuple,221,
        [{atom,221,attribute},
         {var,221,'Line'},
         {var,221,'Name'},
         {var,221,'Arg'}]},
       {var,221,'Opts'},
       {var,221,'State'}]}]},
   {clause,222,
    [{tuple,222,
      [{atom,222,function},
       {var,222,'Line'},
       {var,222,'Name'},
       {var,222,'Arity'},
       {var,222,'Clauses'}]},
     {var,222,'Opts'},
     {var,222,'_State'}],
    [],
    [{call,223,
      {atom,223,lfunction},
      [{tuple,223,
        [{atom,223,function},
         {var,223,'Line'},
         {var,223,'Name'},
         {var,223,'Arity'},
         {var,223,'Clauses'}]},
       {var,223,'Opts'}]}]},
   {clause,225,
    [{tuple,225,[{atom,225,error},{var,225,'E'}]},
     {var,225,'_Opts'},
     {var,225,'_State'}],
    [],
    [{call,226,
      {atom,226,leaf},
      [{call,226,
        {atom,226,format},
        [{string,226,"~p\n"},
         {cons,226,
          {tuple,226,[{atom,226,error},{var,226,'E'}]},
          {nil,226}}]}]}]},
   {clause,227,
    [{tuple,227,[{atom,227,warning},{var,227,'W'}]},
     {var,227,'_Opts'},
     {var,227,'_State'}],
    [],
    [{call,228,
      {atom,228,leaf},
      [{call,228,
        {atom,228,format},
        [{string,228,"~p\n"},
         {cons,228,
          {tuple,228,[{atom,228,warning},{var,228,'W'}]},
          {nil,228}}]}]}]},
   {clause,229,
    [{tuple,229,[{atom,229,eof},{var,229,'_Line'}]},
     {var,229,'_Opts'},
     {var,229,'_State'}],
    [],
    [{char,230,10}]}]},
 {function,232,lattribute,3,
  [{clause,232,
    [{tuple,232,
      [{atom,232,attribute},
       {var,232,'_Line'},
       {atom,232,type},
       {var,232,'Type'}]},
     {var,232,'Opts'},
     {var,232,'_State'}],
    [],
    [{cons,233,
      {call,233,
       {atom,233,typeattr},
       [{atom,233,type},{var,233,'Type'},{var,233,'Opts'}]},
      {cons,233,{call,233,{atom,233,leaf},[{string,233,".\n"}]},{nil,233}}}]},
   {clause,234,
    [{tuple,234,
      [{atom,234,attribute},
       {var,234,'_Line'},
       {atom,234,opaque},
       {var,234,'Type'}]},
     {var,234,'Opts'},
     {var,234,'_State'}],
    [],
    [{cons,235,
      {call,235,
       {atom,235,typeattr},
       [{atom,235,opaque},{var,235,'Type'},{var,235,'Opts'}]},
      {cons,235,{call,235,{atom,235,leaf},[{string,235,".\n"}]},{nil,235}}}]},
   {clause,236,
    [{tuple,236,
      [{atom,236,attribute},
       {var,236,'_Line'},
       {atom,236,spec},
       {var,236,'Arg'}]},
     {var,236,'_Opts'},
     {var,236,'_State'}],
    [],
    [{cons,237,
      {call,237,{atom,237,specattr},[{atom,237,spec},{var,237,'Arg'}]},
      {cons,237,{call,237,{atom,237,leaf},[{string,237,".\n"}]},{nil,237}}}]},
   {clause,238,
    [{tuple,238,
      [{atom,238,attribute},
       {var,238,'_Line'},
       {atom,238,callback},
       {var,238,'Arg'}]},
     {var,238,'_Opts'},
     {var,238,'_State'}],
    [],
    [{cons,239,
      {call,239,{atom,239,specattr},[{atom,239,callback},{var,239,'Arg'}]},
      {cons,239,{call,239,{atom,239,leaf},[{string,239,".\n"}]},{nil,239}}}]},
   {clause,240,
    [{tuple,240,
      [{atom,240,attribute},
       {var,240,'_Line'},
       {var,240,'Name'},
       {var,240,'Arg'}]},
     {var,240,'Opts'},
     {var,240,'State'}],
    [],
    [{cons,241,
      {call,241,
       {atom,241,lattribute},
       [{var,241,'Name'},{var,241,'Arg'},{var,241,'Opts'},{var,241,'State'}]},
      {cons,241,
       {call,241,{atom,241,leaf},[{string,241,".\n"}]},
       {nil,241}}}]}]},
 {function,243,lattribute,4,
  [{clause,243,
    [{atom,243,module},
     {tuple,243,[{var,243,'M'},{var,243,'Vs'}]},
     {var,243,'_Opts'},
     {var,243,'_State'}],
    [],
    [{match,244,{var,244,'A'},{call,244,{atom,244,a0},[]}},
     {call,245,
      {atom,245,attr},
      [{string,245,"module"},
       {cons,245,
        {tuple,245,
         [{atom,245,var},
          {var,245,'A'},
          {call,245,{atom,245,pname},[{var,245,'M'}]}]},
        {cons,246,
         {call,246,
          {atom,246,foldr},
          [{'fun',246,
            {clauses,
             [{clause,246,
               [{var,246,'V'},{var,246,'C'}],
               [],
               [{tuple,246,
                 [{atom,246,cons},
                  {var,246,'A'},
                  {tuple,246,[{atom,246,var},{var,246,'A'},{var,246,'V'}]},
                  {var,246,'C'}]}]}]}},
           {tuple,247,[{atom,247,nil},{var,247,'A'}]},
           {var,247,'Vs'}]},
         {nil,247}}}]}]},
   {clause,248,
    [{atom,248,module},{var,248,'M'},{var,248,'_Opts'},{var,248,'_State'}],
    [],
    [{call,249,
      {atom,249,attr},
      [{string,249,"module"},
       {cons,249,
        {tuple,249,
         [{atom,249,var},
          {call,249,{atom,249,a0},[]},
          {call,249,{atom,249,pname},[{var,249,'M'}]}]},
        {nil,249}}]}]},
   {clause,250,
    [{atom,250,export},
     {var,250,'Falist'},
     {var,250,'_Opts'},
     {var,250,'_State'}],
    [],
    [{call,251,
      {atom,251,call},
      [{tuple,251,
        [{atom,251,var},{call,251,{atom,251,a0},[]},{string,251,"-export"}]},
       {cons,251,{call,251,{atom,251,falist},[{var,251,'Falist'}]},{nil,251}},
       {integer,251,0},
       {call,251,{atom,251,options},[{atom,251,none}]}]}]},
   {clause,252,
    [{atom,252,import},{var,252,'Name'},{var,252,'_Opts'},{var,252,'_State'}],
    [[{call,252,{atom,252,is_list},[{var,252,'Name'}]}]],
    [{call,253,
      {atom,253,attr},
      [{string,253,"import"},
       {cons,253,
        {tuple,253,
         [{atom,253,var},
          {call,253,{atom,253,a0},[]},
          {call,253,{atom,253,pname},[{var,253,'Name'}]}]},
        {nil,253}}]}]},
   {clause,254,
    [{atom,254,import},
     {tuple,254,[{var,254,'From'},{var,254,'Falist'}]},
     {var,254,'_Opts'},
     {var,254,'_State'}],
    [],
    [{call,255,
      {atom,255,attr},
      [{string,255,"import"},
       {cons,255,
        {tuple,255,
         [{atom,255,var},
          {call,255,{atom,255,a0},[]},
          {call,255,{atom,255,pname},[{var,255,'From'}]}]},
        {cons,255,
         {call,255,{atom,255,falist},[{var,255,'Falist'}]},
         {nil,255}}}]}]},
   {clause,256,
    [{atom,256,optional_callbacks},
     {var,256,'Falist'},
     {var,256,'Opts'},
     {var,256,'_State'}],
    [],
    [{match,257,
      {var,257,'ArgL'},
      {'try',257,
       [{call,257,{atom,257,falist},[{var,257,'Falist'}]}],
       [],
       [{clause,258,
         [{tuple,258,[{var,258,'_'},{var,258,'_'},{var,258,'_'}]}],
         [],
         [{call,258,
           {atom,258,abstract},
           [{var,258,'Falist'},{var,258,'Opts'}]}]}],
       []}},
     {call,260,
      {atom,260,call},
      [{tuple,260,
        [{atom,260,var},
         {call,260,{atom,260,a0},[]},
         {string,260,"-optional_callbacks"}]},
       {cons,260,{var,260,'ArgL'},{nil,260}},
       {integer,260,0},
       {call,260,{atom,260,options},[{atom,260,none}]}]}]},
   {clause,261,
    [{atom,261,file},
     {tuple,261,[{var,261,'Name'},{var,261,'Line'}]},
     {var,261,'_Opts'},
     {var,261,'State'}],
    [],
    [{call,262,
      {atom,262,attr},
      [{string,262,"file"},
       {cons,262,
        {tuple,262,
         [{atom,262,var},
          {call,262,{atom,262,a0},[]},
          {call,262,
           {call,262,
            {remote,262,{atom,262,erlang},{atom,262,element}},
            [{integer,262,2},{var,262,'State'}]},
           [{var,262,'Name'}]}]},
        {cons,262,
         {tuple,262,
          [{atom,262,integer},{call,262,{atom,262,a0},[]},{var,262,'Line'}]},
         {nil,262}}}]}]},
   {clause,263,
    [{atom,263,record},
     {tuple,263,[{var,263,'Name'},{var,263,'Is'}]},
     {var,263,'Opts'},
     {var,263,'_State'}],
    [],
    [{match,264,
      {var,264,'Nl'},
      {call,264,
       {atom,264,leaf},
       [{call,264,
         {atom,264,format},
         [{string,264,"-record(~w,"},
          {cons,264,{var,264,'Name'},{nil,264}}]}]}},
     {cons,265,
      {tuple,265,
       [{atom,265,first},
        {var,265,'Nl'},
        {call,265,
         {atom,265,record_fields},
         [{var,265,'Is'},{var,265,'Opts'}]}]},
      {cons,265,{char,265,41},{nil,265}}}]},
   {clause,266,
    [{var,266,'Name'},{var,266,'Arg'},{var,266,'Options'},{var,266,'_State'}],
    [],
    [{call,267,
      {atom,267,attr},
      [{call,267,{atom,267,write},[{var,267,'Name'}]},
       {cons,267,
        {call,267,{atom,267,abstract},[{var,267,'Arg'},{var,267,'Options'}]},
        {nil,267}}]}]}]},
 {function,269,abstract,2,
  [{clause,269,
    [{var,269,'Arg'},
     {tuple,269,
      [{atom,269,options},{var,269,'_'},{var,269,'Encoding'},{var,269,'_'}]}],
    [],
    [{call,270,
      {remote,270,{atom,270,erl_parse},{atom,270,abstract}},
      [{var,270,'Arg'},
       {cons,270,
        {tuple,270,[{atom,270,encoding},{var,270,'Encoding'}]},
        {nil,270}}]}]}]},
 {function,272,typeattr,3,
  [{clause,272,
    [{var,272,'Tag'},
     {tuple,272,[{var,272,'TypeName'},{var,272,'Type'},{var,272,'Args'}]},
     {var,272,'_Opts'}],
    [],
    [{tuple,273,
      [{atom,273,first},
       {call,273,
        {atom,273,leaf},
        [{op,273,'++',
          {string,273,"-"},
          {op,273,'++',
           {call,273,{atom,273,atom_to_list},[{var,273,'Tag'}]},
           {string,273," "}}}]},
       {call,274,
        {atom,274,typed},
        [{call,274,
          {atom,274,call},
          [{tuple,274,
            [{atom,274,atom},
             {call,274,{atom,274,a0},[]},
             {var,274,'TypeName'}]},
           {var,274,'Args'},
           {integer,274,0},
           {call,274,{atom,274,options},[{atom,274,none}]}]},
         {var,274,'Type'}]}]}]}]},
 {function,276,ltype,1,
  [{clause,276,
    [{var,276,'T'}],
    [],
    [{call,277,{atom,277,ltype},[{var,277,'T'},{integer,277,0}]}]}]},
 {function,279,ltype,2,
  [{clause,279,
    [{tuple,279,
      [{atom,279,ann_type},
       {var,279,'_Line'},
       {cons,279,{var,279,'V'},{cons,279,{var,279,'T'},{nil,279}}}]},
     {var,279,'Prec'}],
    [],
    [{match,280,
      {tuple,280,[{var,280,'_L'},{var,280,'P'},{var,280,'_R'}]},
      {call,280,{atom,280,type_inop_prec},[{atom,280,'::'}]}},
     {match,281,
      {var,281,'E'},
      {call,281,
       {atom,281,typed},
       [{call,281,
         {atom,281,lexpr},
         [{var,281,'V'},{call,281,{atom,281,options},[{atom,281,none}]}]},
        {var,281,'T'}]}},
     {call,282,
      {atom,282,maybe_paren},
      [{var,282,'P'},{var,282,'Prec'},{var,282,'E'}]}]},
   {clause,283,
    [{tuple,283,
      [{atom,283,paren_type},
       {var,283,'_Line'},
       {cons,283,{var,283,'T'},{nil,283}}]},
     {var,283,'P'}],
    [],
    [{call,285,{atom,285,ltype},[{var,285,'T'},{var,285,'P'}]}]},
   {clause,286,
    [{tuple,286,
      [{atom,286,type},{var,286,'_Line'},{atom,286,union},{var,286,'Ts'}]},
     {var,286,'Prec'}],
    [],
    [{match,287,
      {tuple,287,[{var,287,'_L'},{var,287,'P'},{var,287,'R'}]},
      {call,287,{atom,287,type_inop_prec},[{atom,287,'|'}]}},
     {match,288,
      {var,288,'E'},
      {tuple,288,
       [{atom,288,seq},
        {nil,288},
        {nil,288},
        {cons,288,{atom,288,' |'},{nil,288}},
        {call,288,{atom,288,ltypes},[{var,288,'Ts'},{var,288,'R'}]}]}},
     {call,289,
      {atom,289,maybe_paren},
      [{var,289,'P'},{var,289,'Prec'},{var,289,'E'}]}]},
   {clause,290,
    [{tuple,290,
      [{atom,290,type},
       {var,290,'_Line'},
       {atom,290,list},
       {cons,290,{var,290,'T'},{nil,290}}]},
     {var,290,'_'}],
    [],
    [{tuple,291,
      [{atom,291,seq},
       {char,291,91},
       {char,291,93},
       {char,291,44},
       {cons,291,{call,291,{atom,291,ltype},[{var,291,'T'}]},{nil,291}}]}]},
   {clause,292,
    [{tuple,292,
      [{atom,292,type},
       {var,292,'_Line'},
       {atom,292,nonempty_list},
       {cons,292,{var,292,'T'},{nil,292}}]},
     {var,292,'_'}],
    [],
    [{tuple,293,
      [{atom,293,seq},
       {char,293,91},
       {char,293,93},
       {cons,293,{char,293,44},{nil,293}},
       {cons,293,
        {call,293,{atom,293,ltype},[{var,293,'T'}]},
        {cons,293,
         {call,293,{atom,293,leaf},[{string,293,"..."}]},
         {nil,293}}}]}]},
   {clause,294,
    [{tuple,294,[{atom,294,type},{var,294,'Line'},{atom,294,nil},{nil,294}]},
     {var,294,'_'}],
    [],
    [{call,295,
      {atom,295,lexpr},
      [{tuple,295,[{atom,295,nil},{var,295,'Line'}]},
       {call,295,{atom,295,options},[{atom,295,none}]}]}]},
   {clause,296,
    [{tuple,296,
      [{atom,296,type},{var,296,'Line'},{atom,296,map},{atom,296,any}]},
     {var,296,'_'}],
    [],
    [{call,297,
      {atom,297,simple_type},
      [{tuple,297,[{atom,297,atom},{var,297,'Line'},{atom,297,map}]},
       {nil,297}]}]},
   {clause,298,
    [{tuple,298,
      [{atom,298,type},{var,298,'_Line'},{atom,298,map},{var,298,'Pairs'}]},
     {var,298,'Prec'}],
    [],
    [{match,299,
      {tuple,299,[{var,299,'P'},{var,299,'_R'}]},
      {call,299,{atom,299,type_preop_prec},[{atom,299,'#'}]}},
     {match,300,
      {var,300,'E'},
      {call,300,{atom,300,map_type},[{var,300,'Pairs'}]}},
     {call,301,
      {atom,301,maybe_paren},
      [{var,301,'P'},{var,301,'Prec'},{var,301,'E'}]}]},
   {clause,302,
    [{tuple,302,
      [{atom,302,type},{var,302,'Line'},{atom,302,tuple},{atom,302,any}]},
     {var,302,'_'}],
    [],
    [{call,303,
      {atom,303,simple_type},
      [{tuple,303,[{atom,303,atom},{var,303,'Line'},{atom,303,tuple}]},
       {nil,303}]}]},
   {clause,304,
    [{tuple,304,
      [{atom,304,type},{var,304,'_Line'},{atom,304,tuple},{var,304,'Ts'}]},
     {var,304,'_'}],
    [],
    [{call,305,
      {atom,305,tuple_type},
      [{var,305,'Ts'},{'fun',305,{function,ltype,2}}]}]},
   {clause,306,
    [{tuple,306,
      [{atom,306,type},
       {var,306,'_Line'},
       {atom,306,record},
       {cons,306,
        {tuple,306,[{atom,306,atom},{var,306,'_'},{var,306,'N'}]},
        {var,306,'Fs'}}]},
     {var,306,'Prec'}],
    [],
    [{match,307,
      {tuple,307,[{var,307,'P'},{var,307,'_R'}]},
      {call,307,{atom,307,type_preop_prec},[{atom,307,'#'}]}},
     {match,308,
      {var,308,'E'},
      {call,308,{atom,308,record_type},[{var,308,'N'},{var,308,'Fs'}]}},
     {call,309,
      {atom,309,maybe_paren},
      [{var,309,'P'},{var,309,'Prec'},{var,309,'E'}]}]},
   {clause,310,
    [{tuple,310,
      [{atom,310,type},
       {var,310,'_Line'},
       {atom,310,range},
       {match,310,
        {cons,310,{var,310,'_I1'},{cons,310,{var,310,'_I2'},{nil,310}}},
        {var,310,'Es'}}]},
     {var,310,'Prec'}],
    [],
    [{match,311,
      {tuple,311,[{var,311,'_L'},{var,311,'P'},{var,311,'R'}]},
      {call,311,{atom,311,type_inop_prec},[{atom,311,'..'}]}},
     {match,312,
      {var,312,'F'},
      {'fun',312,
       {clauses,
        [{clause,312,
          [{var,312,'E'},{var,312,'Opts'}],
          [],
          [{call,312,
            {atom,312,lexpr},
            [{var,312,'E'},{var,312,'R'},{var,312,'Opts'}]}]}]}}},
     {match,313,
      {var,313,'E'},
      {call,313,
       {atom,313,expr_list},
       [{var,313,'Es'},
        {atom,313,'..'},
        {var,313,'F'},
        {call,313,{atom,313,options},[{atom,313,none}]}]}},
     {call,314,
      {atom,314,maybe_paren},
      [{var,314,'P'},{var,314,'Prec'},{var,314,'E'}]}]},
   {clause,315,
    [{tuple,315,
      [{atom,315,type},
       {var,315,'_Line'},
       {atom,315,binary},
       {cons,315,{var,315,'I1'},{cons,315,{var,315,'I2'},{nil,315}}}]},
     {var,315,'_'}],
    [],
    [{call,316,{atom,316,binary_type},[{var,316,'I1'},{var,316,'I2'}]}]},
   {clause,317,
    [{tuple,317,
      [{atom,317,type},{var,317,'_Line'},{atom,317,'fun'},{nil,317}]},
     {var,317,'_'}],
    [],
    [{call,318,{atom,318,leaf},[{string,318,"fun()"}]}]},
   {clause,319,
    [{match,319,
      {tuple,319,
       [{atom,319,type},
        {var,319,'_'},
        {atom,319,'fun'},
        {cons,319,
         {tuple,319,[{atom,319,type},{var,319,'_'},{atom,319,any}]},
         {cons,319,{var,319,'_'},{nil,319}}}]},
      {var,319,'FunType'}},
     {var,319,'_'}],
    [],
    [{cons,320,
      {call,320,
       {atom,320,fun_type},
       [{cons,320,{atom,320,'fun'},{cons,320,{char,320,40},{nil,320}}},
        {var,320,'FunType'}]},
      {cons,320,{char,320,41},{nil,320}}}]},
   {clause,321,
    [{match,321,
      {tuple,321,
       [{atom,321,type},
        {var,321,'_Line'},
        {atom,321,'fun'},
        {cons,321,
         {tuple,321,
          [{atom,321,type},{var,321,'_'},{atom,321,product},{var,321,'_'}]},
         {cons,321,{var,321,'_'},{nil,321}}}]},
      {var,321,'FunType'}},
     {var,321,'_'}],
    [],
    [{cons,322,
      {call,322,
       {atom,322,fun_type},
       [{cons,322,{atom,322,'fun'},{cons,322,{char,322,40},{nil,322}}},
        {var,322,'FunType'}]},
      {cons,322,{char,322,41},{nil,322}}}]},
   {clause,323,
    [{tuple,323,
      [{atom,323,type},{var,323,'Line'},{var,323,'T'},{var,323,'Ts'}]},
     {var,323,'_'}],
    [],
    [{call,325,
      {atom,325,simple_type},
      [{tuple,325,[{atom,325,atom},{var,325,'Line'},{var,325,'T'}]},
       {var,325,'Ts'}]}]},
   {clause,326,
    [{tuple,326,
      [{atom,326,user_type},{var,326,'Line'},{var,326,'T'},{var,326,'Ts'}]},
     {var,326,'_'}],
    [],
    [{call,327,
      {atom,327,simple_type},
      [{tuple,327,[{atom,327,atom},{var,327,'Line'},{var,327,'T'}]},
       {var,327,'Ts'}]}]},
   {clause,328,
    [{tuple,328,
      [{atom,328,remote_type},
       {var,328,'Line'},
       {cons,328,
        {var,328,'M'},
        {cons,328,{var,328,'F'},{cons,328,{var,328,'Ts'},{nil,328}}}}]},
     {var,328,'_'}],
    [],
    [{call,329,
      {atom,329,simple_type},
      [{tuple,329,
        [{atom,329,remote},{var,329,'Line'},{var,329,'M'},{var,329,'F'}]},
       {var,329,'Ts'}]}]},
   {clause,330,
    [{tuple,330,[{atom,330,atom},{var,330,'_'},{var,330,'T'}]},{var,330,'_'}],
    [],
    [{call,331,
      {atom,331,leaf},
      [{call,331,{atom,331,write},[{var,331,'T'}]}]}]},
   {clause,332,
    [{var,332,'E'},{var,332,'P'}],
    [],
    [{call,333,
      {atom,333,lexpr},
      [{var,333,'E'},
       {var,333,'P'},
       {call,333,{atom,333,options},[{atom,333,none}]}]}]}]},
 {function,335,binary_type,2,
  [{clause,335,
    [{var,335,'I1'},{var,335,'I2'}],
    [],
    [{match,336,
      {var,336,'B'},
      {op,336,'=:=',
       {lc,336,
        {nil,336},
        [{generate,336,
          {tuple,336,[{atom,336,integer},{var,336,'_'},{integer,336,0}]},
          {cons,336,{var,336,'I1'},{nil,336}}}]},
       {nil,336}}},
     {match,337,
      {var,337,'U'},
      {op,337,'=:=',
       {lc,337,
        {nil,337},
        [{generate,337,
          {tuple,337,[{atom,337,integer},{var,337,'_'},{integer,337,0}]},
          {cons,337,{var,337,'I2'},{nil,337}}}]},
       {nil,337}}},
     {match,338,{var,338,'P'},{call,338,{atom,338,max_prec},[]}},
     {match,339,
      {var,339,'E1'},
      {lc,339,
       {cons,339,
        {call,339,{atom,339,leaf},[{string,339,"_:"}]},
        {cons,339,
         {call,339,
          {atom,339,lexpr},
          [{var,339,'I1'},
           {var,339,'P'},
           {call,339,{atom,339,options},[{atom,339,none}]}]},
         {nil,339}}},
       [{var,339,'B'}]}},
     {match,340,
      {var,340,'E2'},
      {lc,340,
       {cons,340,
        {call,340,{atom,340,leaf},[{string,340,"_:_*"}]},
        {cons,340,
         {call,340,
          {atom,340,lexpr},
          [{var,340,'I2'},
           {var,340,'P'},
           {call,340,{atom,340,options},[{atom,340,none}]}]},
         {nil,340}}},
       [{var,340,'U'}]}},
     {tuple,341,
      [{atom,341,seq},
       {atom,341,'<<'},
       {atom,341,'>>'},
       {cons,341,{char,341,44},{nil,341}},
       {op,341,'++',{var,341,'E1'},{var,341,'E2'}}]}]}]},
 {function,343,map_type,1,
  [{clause,343,
    [{var,343,'Fs'}],
    [],
    [{tuple,344,
      [{atom,344,first},
       {cons,344,{char,344,35},{nil,344}},
       {call,344,{atom,344,map_pair_types},[{var,344,'Fs'}]}]}]}]},
 {function,346,map_pair_types,1,
  [{clause,346,
    [{var,346,'Fs'}],
    [],
    [{call,347,
      {atom,347,tuple_type},
      [{var,347,'Fs'},{'fun',347,{function,map_pair_type,2}}]}]}]},
 {function,349,map_pair_type,2,
  [{clause,349,
    [{tuple,349,
      [{atom,349,type},
       {var,349,'_Line'},
       {atom,349,map_field_assoc},
       {cons,349,{var,349,'Ktype'},{cons,349,{var,349,'Vtype'},{nil,349}}}]},
     {var,349,'Prec'}],
    [],
    [{call,350,
      {atom,350,map_assoc_typed},
      [{call,350,{atom,350,ltype},[{var,350,'Ktype'}]},
       {var,350,'Vtype'},
       {var,350,'Prec'}]}]}]},
 {function,352,map_assoc_typed,3,
  [{clause,352,
    [{var,352,'B'},
     {tuple,352,
      [{atom,352,type},{var,352,'_'},{atom,352,union},{var,352,'Ts'}]},
     {var,352,'Prec'}],
    [],
    [{tuple,353,
      [{atom,353,first},
       {cons,353,{var,353,'B'},{cons,353,{char,353,32},{nil,353}}},
       {tuple,353,
        [{atom,353,seq},
         {nil,353},
         {nil,353},
         {nil,353},
         {call,353,
          {atom,353,map_assoc_union_type},
          [{var,353,'Ts'},{var,353,'Prec'}]}]}]}]},
   {clause,354,
    [{var,354,'B'},{var,354,'Type'},{var,354,'Prec'}],
    [],
    [{tuple,355,
      [{atom,355,list},
       {cons,355,
        {tuple,355,
         [{atom,355,cstep},
          {cons,355,{var,355,'B'},{cons,355,{string,355," =>"},{nil,355}}},
          {call,355,{atom,355,ltype},[{var,355,'Type'},{var,355,'Prec'}]}]},
        {nil,355}}]}]}]},
 {function,357,map_assoc_union_type,2,
  [{clause,357,
    [{cons,357,{var,357,'T'},{var,357,'Ts'}},{var,357,'Prec'}],
    [],
    [{cons,358,
      {cons,358,
       {call,358,{atom,358,leaf},[{string,358,"=> "}]},
       {cons,358,{call,358,{atom,358,ltype},[{var,358,'T'}]},{nil,358}}},
      {call,358,
       {atom,358,ltypes},
       [{var,358,'Ts'},
        {'fun',358,{function,union_elem,2}},
        {var,358,'Prec'}]}}]}]},
 {function,360,record_type,2,
  [{clause,360,
    [{var,360,'Name'},{var,360,'Fields'}],
    [],
    [{tuple,361,
      [{atom,361,first},
       {cons,361,
        {call,361,{atom,361,record_name},[{var,361,'Name'}]},
        {nil,361}},
       {call,361,{atom,361,field_types},[{var,361,'Fields'}]}]}]}]},
 {function,363,field_types,1,
  [{clause,363,
    [{var,363,'Fs'}],
    [],
    [{call,364,
      {atom,364,tuple_type},
      [{var,364,'Fs'},{'fun',364,{function,field_type,2}}]}]}]},
 {function,366,field_type,2,
  [{clause,366,
    [{tuple,366,
      [{atom,366,type},
       {var,366,'_Line'},
       {atom,366,field_type},
       {cons,366,{var,366,'Name'},{cons,366,{var,366,'Type'},{nil,366}}}]},
     {var,366,'_Prec'}],
    [],
    [{call,367,
      {atom,367,typed},
      [{call,367,
        {atom,367,lexpr},
        [{var,367,'Name'},{call,367,{atom,367,options},[{atom,367,none}]}]},
       {var,367,'Type'}]}]}]},
 {function,369,typed,2,
  [{clause,369,
    [{var,369,'B'},{var,369,'Type'}],
    [],
    [{match,370,
      {tuple,370,[{var,370,'_L'},{var,370,'_P'},{var,370,'R'}]},
      {call,370,{atom,370,type_inop_prec},[{atom,370,'::'}]}},
     {tuple,371,
      [{atom,371,list},
       {cons,371,
        {tuple,371,
         [{atom,371,cstep},
          {cons,371,{var,371,'B'},{cons,371,{atom,371,' ::'},{nil,371}}},
          {call,371,{atom,371,ltype},[{var,371,'Type'},{var,371,'R'}]}]},
        {nil,371}}]}]}]},
 {function,373,union_elem,2,
  [{clause,373,
    [{var,373,'T'},{var,373,'Prec'}],
    [],
    [{cons,374,
      {call,374,{atom,374,leaf},[{string,374," | "}]},
      {cons,374,
       {call,374,{atom,374,ltype},[{var,374,'T'},{var,374,'Prec'}]},
       {nil,374}}}]}]},
 {function,376,tuple_type,2,
  [{clause,376,
    [{var,376,'Ts'},{var,376,'F'}],
    [],
    [{tuple,377,
      [{atom,377,seq},
       {char,377,123},
       {char,377,125},
       {cons,377,{char,377,44},{nil,377}},
       {call,377,
        {atom,377,ltypes},
        [{var,377,'Ts'},{var,377,'F'},{integer,377,0}]}]}]}]},
 {function,379,specattr,2,
  [{clause,379,
    [{var,379,'SpecKind'},
     {tuple,379,[{var,379,'FuncSpec'},{var,379,'TypeSpecs'}]}],
    [],
    [{match,380,
      {var,380,'Func'},
      {'case',380,
       {var,380,'FuncSpec'},
       [{clause,381,
         [{tuple,381,[{var,381,'F'},{var,381,'_A'}]}],
         [],
         [{call,382,
           {atom,382,format},
           [{string,382,"~w"},{cons,382,{var,382,'F'},{nil,382}}]}]},
        {clause,383,
         [{tuple,383,[{var,383,'M'},{var,383,'F'},{var,383,'_A'}]}],
         [],
         [{call,384,
           {atom,384,format},
           [{string,384,"~w:~w"},
            {cons,384,{var,384,'M'},{cons,384,{var,384,'F'},{nil,384}}}]}]}]}},
     {tuple,386,
      [{atom,386,first},
       {call,386,
        {atom,386,leaf},
        [{call,386,
          {remote,386,{atom,386,lists},{atom,386,concat}},
          [{cons,386,
            {string,386,"-"},
            {cons,386,
             {var,386,'SpecKind'},
             {cons,386,{string,386," "},{nil,386}}}}]}]},
       {tuple,387,
        [{atom,387,list},
         {cons,387,
          {tuple,387,
           [{atom,387,first},
            {call,387,{atom,387,leaf},[{var,387,'Func'}]},
            {call,387,{atom,387,spec_clauses},[{var,387,'TypeSpecs'}]}]},
          {nil,387}}]}]}]}]},
 {function,389,spec_clauses,1,
  [{clause,389,
    [{var,389,'TypeSpecs'}],
    [],
    [{tuple,390,
      [{atom,390,prefer_nl},
       {cons,390,{char,390,59},{nil,390}},
       {lc,390,
        {call,390,{atom,390,sig_type},[{var,390,'T'}]},
        [{generate,390,{var,390,'T'},{var,390,'TypeSpecs'}}]}]}]}]},
 {function,392,sig_type,1,
  [{clause,392,
    [{tuple,392,
      [{atom,392,type},
       {var,392,'_Line'},
       {atom,392,bounded_fun},
       {cons,392,{var,392,'T'},{cons,392,{var,392,'Gs'},{nil,392}}}]}],
    [],
    [{call,393,
      {atom,393,guard_type},
      [{call,393,{atom,393,fun_type},[{nil,393},{var,393,'T'}]},
       {var,393,'Gs'}]}]},
   {clause,394,
    [{var,394,'FunType'}],
    [],
    [{call,395,{atom,395,fun_type},[{nil,395},{var,395,'FunType'}]}]}]},
 {function,397,guard_type,2,
  [{clause,397,
    [{var,397,'Before'},{var,397,'Gs'}],
    [],
    [{match,398,
      {var,398,'Opts'},
      {call,398,{atom,398,options},[{atom,398,none}]}},
     {match,399,
      {var,399,'Gl'},
      {tuple,399,
       [{atom,399,list},
        {cons,399,
         {tuple,399,
          [{atom,399,step},
           {atom,399,'when'},
           {call,399,
            {atom,399,expr_list},
            [{var,399,'Gs'},
             {cons,399,{char,399,44},{nil,399}},
             {'fun',399,{function,constraint,2}},
             {var,399,'Opts'}]}]},
         {nil,399}}]}},
     {tuple,400,
      [{atom,400,list},
       {cons,400,
        {tuple,400,[{atom,400,step},{var,400,'Before'},{var,400,'Gl'}]},
        {nil,400}}]}]}]},
 {function,402,constraint,2,
  [{clause,402,
    [{tuple,402,
      [{atom,402,type},
       {var,402,'_Line'},
       {atom,402,constraint},
       {cons,402,{var,402,'Tag'},{cons,402,{var,402,'As'},{nil,402}}}]},
     {var,402,'_Opts'}],
    [],
    [{call,403,{atom,403,simple_type},[{var,403,'Tag'},{var,403,'As'}]}]}]},
 {function,405,fun_type,2,
  [{clause,405,
    [{var,405,'Before'},
     {tuple,405,
      [{atom,405,type},
       {var,405,'_'},
       {atom,405,'fun'},
       {cons,405,{var,405,'FType'},{cons,405,{var,405,'Ret'},{nil,405}}}]}],
    [],
    [{tuple,406,
      [{atom,406,first},
       {var,406,'Before'},
       {tuple,406,
        [{atom,406,step},
         {cons,406,
          {call,406,{atom,406,type_args},[{var,406,'FType'}]},
          {cons,406,{atom,406,' ->'},{nil,406}}},
         {call,406,{atom,406,ltype},[{var,406,'Ret'}]}]}]}]}]},
 {function,408,type_args,1,
  [{clause,408,
    [{tuple,408,[{atom,408,type},{var,408,'_Line'},{atom,408,any}]}],
    [],
    [{call,409,{atom,409,leaf},[{string,409,"(...)"}]}]},
   {clause,410,
    [{tuple,410,
      [{atom,410,type},{var,410,'_line'},{atom,410,product},{var,410,'Ts'}]}],
    [],
    [{call,411,{atom,411,targs},[{var,411,'Ts'}]}]}]},
 {function,413,simple_type,2,
  [{clause,413,
    [{var,413,'Tag'},{var,413,'Types'}],
    [],
    [{tuple,414,
      [{atom,414,first},
       {call,414,
        {atom,414,lexpr},
        [{var,414,'Tag'},{call,414,{atom,414,options},[{atom,414,none}]}]},
       {call,414,{atom,414,targs},[{var,414,'Types'}]}]}]}]},
 {function,416,targs,1,
  [{clause,416,
    [{var,416,'Ts'}],
    [],
    [{tuple,417,
      [{atom,417,seq},
       {char,417,40},
       {char,417,41},
       {cons,417,{char,417,44},{nil,417}},
       {call,417,{atom,417,ltypes},[{var,417,'Ts'},{integer,417,0}]}]}]}]},
 {function,419,ltypes,2,
  [{clause,419,
    [{var,419,'Ts'},{var,419,'Prec'}],
    [],
    [{call,420,
      {atom,420,ltypes},
      [{var,420,'Ts'},{'fun',420,{function,ltype,2}},{var,420,'Prec'}]}]}]},
 {function,422,ltypes,3,
  [{clause,422,
    [{var,422,'Ts'},{var,422,'F'},{var,422,'Prec'}],
    [],
    [{lc,423,
      {call,423,{var,423,'F'},[{var,423,'T'},{var,423,'Prec'}]},
      [{generate,423,{var,423,'T'},{var,423,'Ts'}}]}]}]},
 {function,425,attr,2,
  [{clause,425,
    [{var,425,'Name'},{var,425,'Args'}],
    [],
    [{call,426,
      {atom,426,call},
      [{tuple,426,
        [{atom,426,var},
         {call,426,{atom,426,a0},[]},
         {call,426,
          {atom,426,format},
          [{string,426,"-~s"},{cons,426,{var,426,'Name'},{nil,426}}]}]},
       {var,426,'Args'},
       {integer,426,0},
       {call,426,{atom,426,options},[{atom,426,none}]}]}]}]},
 {function,428,pname,1,
  [{clause,428,
    [{cons,428,{atom,428,''},{var,428,'As'}}],
    [],
    [{cons,429,{char,429,46},{call,429,{atom,429,pname},[{var,429,'As'}]}}]},
   {clause,430,
    [{cons,430,{var,430,'A'},{nil,430}}],
    [],
    [{call,431,{atom,431,write},[{var,431,'A'}]}]},
   {clause,432,
    [{cons,432,{var,432,'A'},{var,432,'As'}}],
    [],
    [{cons,433,
      {call,433,{atom,433,write},[{var,433,'A'}]},
      {cons,433,{char,433,46},{call,433,{atom,433,pname},[{var,433,'As'}]}}}]},
   {clause,434,
    [{var,434,'A'}],
    [[{call,434,{atom,434,is_atom},[{var,434,'A'}]}]],
    [{call,435,{atom,435,write},[{var,435,'A'}]}]}]},
 {function,437,falist,1,
  [{clause,437,
    [{nil,437}],
    [],
    [{tuple,438,[{atom,438,nil},{call,438,{atom,438,a0},[]}]}]},
   {clause,439,
    [{cons,439,
      {tuple,439,[{var,439,'Name'},{var,439,'Arity'}]},
      {var,439,'Falist'}}],
    [],
    [{match,440,{var,440,'A'},{call,440,{atom,440,a0},[]}},
     {tuple,441,
      [{atom,441,cons},
       {var,441,'A'},
       {tuple,441,
        [{atom,441,var},
         {var,441,'A'},
         {call,441,
          {atom,441,format},
          [{string,441,"~w/~w"},
           {cons,441,
            {var,441,'Name'},
            {cons,441,{var,441,'Arity'},{nil,441}}}]}]},
       {call,441,{atom,441,falist},[{var,441,'Falist'}]}]}]}]},
 {function,443,lfunction,2,
  [{clause,443,
    [{tuple,443,
      [{atom,443,function},
       {var,443,'_Line'},
       {var,443,'Name'},
       {var,443,'_Arity'},
       {var,443,'Cs'}]},
     {var,443,'Opts'}],
    [],
    [{match,444,
      {var,444,'Cll'},
      {call,444,
       {atom,444,nl_clauses},
       [{'fun',444,
         {clauses,
          [{clause,444,
            [{var,444,'C'},{var,444,'H'}],
            [],
            [{call,444,
              {atom,444,func_clause},
              [{var,444,'Name'},{var,444,'C'},{var,444,'H'}]}]}]}},
        {char,444,59},
        {var,444,'Opts'},
        {var,444,'Cs'}]}},
     {cons,445,
      {var,445,'Cll'},
      {cons,445,
       {call,445,{atom,445,leaf},[{string,445,".\n"}]},
       {nil,445}}}]}]},
 {function,447,func_clause,3,
  [{clause,447,
    [{var,447,'Name'},
     {tuple,447,
      [{atom,447,clause},
       {var,447,'Line'},
       {var,447,'Head'},
       {var,447,'Guard'},
       {var,447,'Body'}]},
     {var,447,'Opts'}],
    [],
    [{match,448,
      {var,448,'Hl'},
      {call,448,
       {atom,448,call},
       [{tuple,448,[{atom,448,atom},{var,448,'Line'},{var,448,'Name'}]},
        {var,448,'Head'},
        {integer,448,0},
        {var,448,'Opts'}]}},
     {match,449,
      {var,449,'Gl'},
      {call,449,
       {atom,449,guard_when},
       [{var,449,'Hl'},{var,449,'Guard'},{var,449,'Opts'}]}},
     {match,450,
      {var,450,'Bl'},
      {call,450,{atom,450,body},[{var,450,'Body'},{var,450,'Opts'}]}},
     {tuple,451,[{atom,451,step},{var,451,'Gl'},{var,451,'Bl'}]}]}]},
 {function,453,guard_when,3,
  [{clause,453,
    [{var,453,'Before'},{var,453,'Guard'},{var,453,'Opts'}],
    [],
    [{call,454,
      {atom,454,guard_when},
      [{var,454,'Before'},
       {var,454,'Guard'},
       {var,454,'Opts'},
       {atom,454,' ->'}]}]}]},
 {function,456,guard_when,4,
  [{clause,456,
    [{var,456,'Before'},{var,456,'Guard'},{var,456,'Opts'},{var,456,'After'}],
    [],
    [{match,457,
      {var,457,'Gl'},
      {call,457,{atom,457,lguard},[{var,457,'Guard'},{var,457,'Opts'}]}},
     {cons,458,
      {tuple,458,
       [{atom,458,list},
        {cons,458,
         {tuple,458,[{atom,458,step},{var,458,'Before'},{var,458,'Gl'}]},
         {nil,458}}]},
      {cons,458,{var,458,'After'},{nil,458}}}]}]},
 {function,460,lguard,2,
  [{clause,460,
    [{cons,460,{var,460,'E'},{var,460,'Es'}},{var,460,'Opts'}],
    [[{call,460,{atom,460,is_list},[{var,460,'E'}]}]],
    [{tuple,461,
      [{atom,461,list},
       {cons,461,
        {tuple,461,
         [{atom,461,step},
          {atom,461,'when'},
          {call,461,
           {atom,461,expr_list},
           [{cons,461,{var,461,'E'},{var,461,'Es'}},
            {cons,461,{char,461,59},{nil,461}},
            {'fun',461,{function,guard0,2}},
            {var,461,'Opts'}]}]},
        {nil,461}}]}]},
   {clause,462,
    [{cons,462,{var,462,'E'},{var,462,'Es'}},{var,462,'Opts'}],
    [],
    [{call,463,
      {atom,463,lguard},
      [{cons,463,{cons,463,{var,463,'E'},{var,463,'Es'}},{nil,463}},
       {var,463,'Opts'}]}]},
   {clause,464,[{nil,464},{var,464,'_'}],[],[{nil,465}]}]},
 {function,467,guard0,2,
  [{clause,467,
    [{var,467,'Es'},{var,467,'Opts'}],
    [],
    [{call,468,
      {atom,468,expr_list},
      [{var,468,'Es'},
       {cons,468,{char,468,44},{nil,468}},
       {'fun',468,{function,lexpr,2}},
       {var,468,'Opts'}]}]}]},
 {function,472,body,2,
  [{clause,472,
    [{cons,472,{var,472,'E'},{nil,472}},{var,472,'Opts'}],
    [],
    [{call,473,{atom,473,lexpr},[{var,473,'E'},{var,473,'Opts'}]}]},
   {clause,474,
    [{var,474,'Es'},{var,474,'Opts'}],
    [],
    [{tuple,475,
      [{atom,475,prefer_nl},
       {cons,475,{char,475,44},{nil,475}},
       {call,475,{atom,475,lexprs},[{var,475,'Es'},{var,475,'Opts'}]}]}]}]},
 {function,477,lexpr,2,
  [{clause,477,
    [{var,477,'E'},{var,477,'Opts'}],
    [],
    [{call,478,
      {atom,478,lexpr},
      [{var,478,'E'},{integer,478,0},{var,478,'Opts'}]}]}]},
 {function,480,lexpr,3,
  [{clause,480,
    [{tuple,480,[{atom,480,var},{var,480,'_'},{var,480,'V'}]},
     {var,480,'_'},
     {var,480,'_'}],
    [[{call,480,{atom,480,is_integer},[{var,480,'V'}]}]],
    [{call,481,
      {atom,481,leaf},
      [{call,481,
        {atom,481,format},
        [{string,481,"_~w"},{cons,481,{var,481,'V'},{nil,481}}]}]}]},
   {clause,482,
    [{tuple,482,[{atom,482,var},{var,482,'_'},{var,482,'V'}]},
     {var,482,'_'},
     {var,482,'_'}],
    [],
    [{call,482,
      {atom,482,leaf},
      [{call,482,
        {atom,482,format},
        [{string,482,"~ts"},{cons,482,{var,482,'V'},{nil,482}}]}]}]},
   {clause,483,
    [{tuple,483,[{atom,483,char},{var,483,'_'},{var,483,'C'}]},
     {var,483,'_'},
     {var,483,'_'}],
    [],
    [{tuple,483,[{atom,483,char},{var,483,'C'}]}]},
   {clause,484,
    [{tuple,484,[{atom,484,integer},{var,484,'_'},{var,484,'N'}]},
     {var,484,'_'},
     {var,484,'_'}],
    [],
    [{call,484,
      {atom,484,leaf},
      [{call,484,{atom,484,write},[{var,484,'N'}]}]}]},
   {clause,485,
    [{tuple,485,[{atom,485,float},{var,485,'_'},{var,485,'F'}]},
     {var,485,'_'},
     {var,485,'_'}],
    [],
    [{call,485,
      {atom,485,leaf},
      [{call,485,{atom,485,write},[{var,485,'F'}]}]}]},
   {clause,486,
    [{tuple,486,[{atom,486,atom},{var,486,'_'},{var,486,'A'}]},
     {var,486,'_'},
     {var,486,'_'}],
    [],
    [{call,486,
      {atom,486,leaf},
      [{call,486,{atom,486,write},[{var,486,'A'}]}]}]},
   {clause,487,
    [{tuple,487,[{atom,487,string},{var,487,'_'},{var,487,'S'}]},
     {var,487,'_'},
     {var,487,'_'}],
    [],
    [{tuple,487,[{atom,487,string},{var,487,'S'}]}]},
   {clause,488,
    [{tuple,488,[{atom,488,nil},{var,488,'_'}]},{var,488,'_'},{var,488,'_'}],
    [],
    [{atom,488,'[]'}]},
   {clause,489,
    [{tuple,489,[{atom,489,cons},{var,489,'_'},{var,489,'H'},{var,489,'T'}]},
     {var,489,'_'},
     {var,489,'Opts'}],
    [],
    [{call,490,
      {atom,490,list},
      [{var,490,'T'},{cons,490,{var,490,'H'},{nil,490}},{var,490,'Opts'}]}]},
   {clause,491,
    [{tuple,491,[{atom,491,lc},{var,491,'_'},{var,491,'E'},{var,491,'Qs'}]},
     {var,491,'_Prec'},
     {var,491,'Opts'}],
    [],
    [{match,492,
      {var,492,'Lcl'},
      {tuple,492,
       [{atom,492,list},
        {cons,492,
         {tuple,492,
          [{atom,492,step},
           {cons,492,
            {call,492,{atom,492,lexpr},[{var,492,'E'},{var,492,'Opts'}]},
            {cons,492,
             {call,492,{atom,492,leaf},[{string,492," ||"}]},
             {nil,492}}},
           {call,492,{atom,492,lc_quals},[{var,492,'Qs'},{var,492,'Opts'}]}]},
         {nil,492}}]}},
     {tuple,493,
      [{atom,493,list},
       {cons,493,
        {tuple,493,
         [{atom,493,seq},
          {char,493,91},
          {nil,493},
          {cons,493,{nil,493},{nil,493}},
          {cons,493,
           {tuple,493,
            [{atom,493,force_nl},
             {call,493,{atom,493,leaf},[{string,493," "}]},
             {cons,493,{var,493,'Lcl'},{nil,493}}]},
           {nil,493}}]},
        {cons,493,{char,493,93},{nil,493}}}]}]},
   {clause,495,
    [{tuple,495,[{atom,495,bc},{var,495,'_'},{var,495,'E'},{var,495,'Qs'}]},
     {var,495,'_Prec'},
     {var,495,'Opts'}],
    [],
    [{match,496,
      {var,496,'Lcl'},
      {tuple,496,
       [{atom,496,list},
        {cons,496,
         {tuple,496,
          [{atom,496,step},
           {cons,496,
            {call,496,{atom,496,lexpr},[{var,496,'E'},{var,496,'Opts'}]},
            {cons,496,
             {call,496,{atom,496,leaf},[{string,496," ||"}]},
             {nil,496}}},
           {call,496,{atom,496,lc_quals},[{var,496,'Qs'},{var,496,'Opts'}]}]},
         {nil,496}}]}},
     {tuple,497,
      [{atom,497,list},
       {cons,497,
        {tuple,497,
         [{atom,497,seq},
          {atom,497,'<<'},
          {nil,497},
          {cons,497,{nil,497},{nil,497}},
          {cons,497,
           {tuple,497,
            [{atom,497,force_nl},
             {call,497,{atom,497,leaf},[{string,497," "}]},
             {cons,497,{var,497,'Lcl'},{nil,497}}]},
           {nil,497}}]},
        {cons,497,{atom,497,'>>'},{nil,497}}}]}]},
   {clause,499,
    [{tuple,499,[{atom,499,tuple},{var,499,'_'},{var,499,'Elts'}]},
     {var,499,'_'},
     {var,499,'Opts'}],
    [],
    [{call,500,{atom,500,tuple},[{var,500,'Elts'},{var,500,'Opts'}]}]},
   {clause,503,
    [{tuple,503,
      [{atom,503,record_index},{var,503,'_'},{var,503,'Name'},{var,503,'F'}]},
     {var,503,'Prec'},
     {var,503,'Opts'}],
    [],
    [{match,504,
      {tuple,504,[{var,504,'P'},{var,504,'R'}]},
      {call,504,{atom,504,preop_prec},[{atom,504,'#'}]}},
     {match,505,
      {var,505,'Nl'},
      {call,505,{atom,505,record_name},[{var,505,'Name'}]}},
     {match,506,
      {var,506,'El'},
      {cons,506,
       {var,506,'Nl'},
       {cons,506,
        {char,506,46},
        {cons,506,
         {call,506,
          {atom,506,lexpr},
          [{var,506,'F'},{var,506,'R'},{var,506,'Opts'}]},
         {nil,506}}}}},
     {call,507,
      {atom,507,maybe_paren},
      [{var,507,'P'},{var,507,'Prec'},{var,507,'El'}]}]},
   {clause,508,
    [{tuple,508,
      [{atom,508,record},{var,508,'_'},{var,508,'Name'},{var,508,'Fs'}]},
     {var,508,'Prec'},
     {var,508,'Opts'}],
    [],
    [{match,509,
      {tuple,509,[{var,509,'P'},{var,509,'_R'}]},
      {call,509,{atom,509,preop_prec},[{atom,509,'#'}]}},
     {match,510,
      {var,510,'Nl'},
      {call,510,{atom,510,record_name},[{var,510,'Name'}]}},
     {match,511,
      {var,511,'El'},
      {tuple,511,
       [{atom,511,first},
        {var,511,'Nl'},
        {call,511,
         {atom,511,record_fields},
         [{var,511,'Fs'},{var,511,'Opts'}]}]}},
     {call,512,
      {atom,512,maybe_paren},
      [{var,512,'P'},{var,512,'Prec'},{var,512,'El'}]}]},
   {clause,513,
    [{tuple,513,
      [{atom,513,record_field},
       {var,513,'_'},
       {var,513,'Rec'},
       {var,513,'Name'},
       {var,513,'F'}]},
     {var,513,'Prec'},
     {var,513,'Opts'}],
    [],
    [{match,514,
      {tuple,514,[{var,514,'L'},{var,514,'P'},{var,514,'R'}]},
      {call,514,{atom,514,inop_prec},[{atom,514,'#'}]}},
     {match,515,
      {var,515,'Rl'},
      {call,515,
       {atom,515,lexpr},
       [{var,515,'Rec'},{var,515,'L'},{var,515,'Opts'}]}},
     {match,516,
      {var,516,'Nl'},
      {call,516,
       {atom,516,leaf},
       [{call,516,
         {atom,516,format},
         [{string,516,"#~w."},{cons,516,{var,516,'Name'},{nil,516}}]}]}},
     {match,517,
      {var,517,'El'},
      {cons,517,
       {var,517,'Rl'},
       {cons,517,
        {var,517,'Nl'},
        {cons,517,
         {call,517,
          {atom,517,lexpr},
          [{var,517,'F'},{var,517,'R'},{var,517,'Opts'}]},
         {nil,517}}}}},
     {call,518,
      {atom,518,maybe_paren},
      [{var,518,'P'},{var,518,'Prec'},{var,518,'El'}]}]},
   {clause,519,
    [{tuple,519,
      [{atom,519,record},
       {var,519,'_'},
       {var,519,'Rec'},
       {var,519,'Name'},
       {var,519,'Fs'}]},
     {var,519,'Prec'},
     {var,519,'Opts'}],
    [],
    [{match,520,
      {tuple,520,[{var,520,'L'},{var,520,'P'},{var,520,'_R'}]},
      {call,520,{atom,520,inop_prec},[{atom,520,'#'}]}},
     {match,521,
      {var,521,'Rl'},
      {call,521,
       {atom,521,lexpr},
       [{var,521,'Rec'},{var,521,'L'},{var,521,'Opts'}]}},
     {match,522,
      {var,522,'Nl'},
      {call,522,{atom,522,record_name},[{var,522,'Name'}]}},
     {match,523,
      {var,523,'El'},
      {tuple,523,
       [{atom,523,first},
        {cons,523,{var,523,'Rl'},{cons,523,{var,523,'Nl'},{nil,523}}},
        {call,523,
         {atom,523,record_fields},
         [{var,523,'Fs'},{var,523,'Opts'}]}]}},
     {call,524,
      {atom,524,maybe_paren},
      [{var,524,'P'},{var,524,'Prec'},{var,524,'El'}]}]},
   {clause,525,
    [{tuple,525,
      [{atom,525,record_field},
       {var,525,'_'},
       {tuple,525,[{atom,525,atom},{var,525,'_'},{atom,525,''}]},
       {var,525,'F'}]},
     {var,525,'Prec'},
     {var,525,'Opts'}],
    [],
    [{match,526,
      {tuple,526,[{var,526,'_L'},{var,526,'P'},{var,526,'R'}]},
      {call,526,{atom,526,inop_prec},[{atom,526,'.'}]}},
     {match,527,
      {var,527,'El'},
      {cons,527,
       {char,527,46},
       {cons,527,
        {call,527,
         {atom,527,lexpr},
         [{var,527,'F'},{var,527,'R'},{var,527,'Opts'}]},
        {nil,527}}}},
     {call,528,
      {atom,528,maybe_paren},
      [{var,528,'P'},{var,528,'Prec'},{var,528,'El'}]}]},
   {clause,529,
    [{tuple,529,
      [{atom,529,record_field},{var,529,'_'},{var,529,'Rec'},{var,529,'F'}]},
     {var,529,'Prec'},
     {var,529,'Opts'}],
    [],
    [{match,530,
      {tuple,530,[{var,530,'L'},{var,530,'P'},{var,530,'R'}]},
      {call,530,{atom,530,inop_prec},[{atom,530,'.'}]}},
     {match,531,
      {var,531,'El'},
      {cons,531,
       {call,531,
        {atom,531,lexpr},
        [{var,531,'Rec'},{var,531,'L'},{var,531,'Opts'}]},
       {cons,531,
        {char,531,46},
        {cons,531,
         {call,531,
          {atom,531,lexpr},
          [{var,531,'F'},{var,531,'R'},{var,531,'Opts'}]},
         {nil,531}}}}},
     {call,532,
      {atom,532,maybe_paren},
      [{var,532,'P'},{var,532,'Prec'},{var,532,'El'}]}]},
   {clause,533,
    [{tuple,533,[{atom,533,map},{var,533,'_'},{var,533,'Fs'}]},
     {var,533,'Prec'},
     {var,533,'Opts'}],
    [],
    [{match,534,
      {tuple,534,[{var,534,'P'},{var,534,'_R'}]},
      {call,534,{atom,534,preop_prec},[{atom,534,'#'}]}},
     {match,535,
      {var,535,'El'},
      {tuple,535,
       [{atom,535,first},
        {call,535,{atom,535,leaf},[{string,535,"#"}]},
        {call,535,{atom,535,map_fields},[{var,535,'Fs'},{var,535,'Opts'}]}]}},
     {call,536,
      {atom,536,maybe_paren},
      [{var,536,'P'},{var,536,'Prec'},{var,536,'El'}]}]},
   {clause,537,
    [{tuple,537,[{atom,537,map},{var,537,'_'},{var,537,'Map'},{var,537,'Fs'}]},
     {var,537,'Prec'},
     {var,537,'Opts'}],
    [],
    [{match,538,
      {tuple,538,[{var,538,'L'},{var,538,'P'},{var,538,'_R'}]},
      {call,538,{atom,538,inop_prec},[{atom,538,'#'}]}},
     {match,539,
      {var,539,'Rl'},
      {call,539,
       {atom,539,lexpr},
       [{var,539,'Map'},{var,539,'L'},{var,539,'Opts'}]}},
     {match,540,
      {var,540,'El'},
      {tuple,540,
       [{atom,540,first},
        {cons,540,
         {var,540,'Rl'},
         {cons,540,{call,540,{atom,540,leaf},[{string,540,"#"}]},{nil,540}}},
        {call,540,{atom,540,map_fields},[{var,540,'Fs'},{var,540,'Opts'}]}]}},
     {call,541,
      {atom,541,maybe_paren},
      [{var,541,'P'},{var,541,'Prec'},{var,541,'El'}]}]},
   {clause,542,
    [{tuple,542,[{atom,542,block},{var,542,'_'},{var,542,'Es'}]},
     {var,542,'_'},
     {var,542,'Opts'}],
    [],
    [{tuple,543,
      [{atom,543,list},
       {cons,543,
        {tuple,543,
         [{atom,543,step},
          {atom,543,'begin'},
          {call,543,{atom,543,body},[{var,543,'Es'},{var,543,'Opts'}]}]},
        {cons,543,{atom,543,'end'},{nil,543}}}]}]},
   {clause,544,
    [{tuple,544,[{atom,544,'if'},{var,544,'_'},{var,544,'Cs'}]},
     {var,544,'_'},
     {var,544,'Opts'}],
    [],
    [{tuple,545,
      [{atom,545,list},
       {cons,545,
        {tuple,545,
         [{atom,545,step},
          {atom,545,'if'},
          {call,545,{atom,545,if_clauses},[{var,545,'Cs'},{var,545,'Opts'}]}]},
        {cons,545,{atom,545,'end'},{nil,545}}}]}]},
   {clause,546,
    [{tuple,546,
      [{atom,546,'case'},{var,546,'_'},{var,546,'Expr'},{var,546,'Cs'}]},
     {var,546,'_'},
     {var,546,'Opts'}],
    [],
    [{tuple,547,
      [{atom,547,list},
       {cons,547,
        {tuple,547,
         [{atom,547,step},
          {tuple,547,
           [{atom,547,list},
            {cons,547,
             {tuple,547,
              [{atom,547,step},
               {atom,547,'case'},
               {call,547,
                {atom,547,lexpr},
                [{var,547,'Expr'},{var,547,'Opts'}]}]},
             {cons,547,{atom,547,'of'},{nil,547}}}]},
          {call,548,{atom,548,cr_clauses},[{var,548,'Cs'},{var,548,'Opts'}]}]},
        {cons,549,{atom,549,'end'},{nil,549}}}]}]},
   {clause,550,
    [{tuple,550,[{atom,550,'cond'},{var,550,'_'},{var,550,'Cs'}]},
     {var,550,'_'},
     {var,550,'Opts'}],
    [],
    [{tuple,551,
      [{atom,551,list},
       {cons,551,
        {tuple,551,
         [{atom,551,step},
          {call,551,{atom,551,leaf},[{string,551,"cond"}]},
          {call,551,
           {atom,551,cond_clauses},
           [{var,551,'Cs'},{var,551,'Opts'}]}]},
        {cons,551,{atom,551,'end'},{nil,551}}}]}]},
   {clause,552,
    [{tuple,552,[{atom,552,'receive'},{var,552,'_'},{var,552,'Cs'}]},
     {var,552,'_'},
     {var,552,'Opts'}],
    [],
    [{tuple,553,
      [{atom,553,list},
       {cons,553,
        {tuple,553,
         [{atom,553,step},
          {atom,553,'receive'},
          {call,553,{atom,553,cr_clauses},[{var,553,'Cs'},{var,553,'Opts'}]}]},
        {cons,553,{atom,553,'end'},{nil,553}}}]}]},
   {clause,554,
    [{tuple,554,
      [{atom,554,'receive'},
       {var,554,'_'},
       {var,554,'Cs'},
       {var,554,'To'},
       {var,554,'ToOpt'}]},
     {var,554,'_'},
     {var,554,'Opts'}],
    [],
    [{match,555,
      {var,555,'Al'},
      {tuple,555,
       [{atom,555,list},
        {cons,555,
         {tuple,555,
          [{atom,555,step},
           {cons,555,
            {call,555,{atom,555,lexpr},[{var,555,'To'},{var,555,'Opts'}]},
            {cons,555,{atom,555,' ->'},{nil,555}}},
           {call,555,{atom,555,body},[{var,555,'ToOpt'},{var,555,'Opts'}]}]},
         {nil,555}}]}},
     {tuple,556,
      [{atom,556,list},
       {cons,556,
        {tuple,556,
         [{atom,556,step},
          {atom,556,'receive'},
          {call,556,{atom,556,cr_clauses},[{var,556,'Cs'},{var,556,'Opts'}]}]},
        {cons,557,
         {tuple,557,[{atom,557,step},{atom,557,'after'},{var,557,'Al'}]},
         {cons,558,{atom,558,'end'},{nil,558}}}}]}]},
   {clause,559,
    [{tuple,559,
      [{atom,559,'fun'},
       {var,559,'_'},
       {tuple,559,[{atom,559,function},{var,559,'F'},{var,559,'A'}]}]},
     {var,559,'_Prec'},
     {var,559,'_Opts'}],
    [],
    [{call,560,
      {atom,560,leaf},
      [{call,560,
        {atom,560,format},
        [{string,560,"fun ~w/~w"},
         {cons,560,{var,560,'F'},{cons,560,{var,560,'A'},{nil,560}}}]}]}]},
   {clause,561,
    [{tuple,561,
      [{atom,561,'fun'},
       {var,561,'_'},
       {tuple,561,[{atom,561,function},{var,561,'F'},{var,561,'A'}]},
       {var,561,'Extra'}]},
     {var,561,'_Prec'},
     {var,561,'_Opts'}],
    [],
    [{tuple,562,
      [{atom,562,force_nl},
       {call,562,{atom,562,fun_info},[{var,562,'Extra'}]},
       {call,562,
        {atom,562,leaf},
        [{call,562,
          {atom,562,format},
          [{string,562,"fun ~w/~w"},
           {cons,562,{var,562,'F'},{cons,562,{var,562,'A'},{nil,562}}}]}]}]}]},
   {clause,563,
    [{tuple,563,
      [{atom,563,'fun'},
       {var,563,'_'},
       {tuple,563,
        [{atom,563,function},{var,563,'M'},{var,563,'F'},{var,563,'A'}]}]},
     {var,563,'_Prec'},
     {var,563,'_Opts'}],
    [[{call,564,{atom,564,is_atom},[{var,564,'M'}]},
      {call,564,{atom,564,is_atom},[{var,564,'F'}]},
      {call,564,{atom,564,is_integer},[{var,564,'A'}]}]],
    [{call,566,
      {atom,566,leaf},
      [{call,566,
        {atom,566,format},
        [{string,566,"fun ~w:~w/~w"},
         {cons,566,
          {var,566,'M'},
          {cons,566,{var,566,'F'},{cons,566,{var,566,'A'},{nil,566}}}}]}]}]},
   {clause,567,
    [{tuple,567,
      [{atom,567,'fun'},
       {var,567,'_'},
       {tuple,567,
        [{atom,567,function},{var,567,'M'},{var,567,'F'},{var,567,'A'}]}]},
     {var,567,'_Prec'},
     {var,567,'Opts'}],
    [],
    [{match,569,
      {var,569,'NameItem'},
      {call,569,{atom,569,lexpr},[{var,569,'M'},{var,569,'Opts'}]}},
     {match,570,
      {var,570,'CallItem'},
      {call,570,{atom,570,lexpr},[{var,570,'F'},{var,570,'Opts'}]}},
     {match,571,
      {var,571,'ArityItem'},
      {call,571,{atom,571,lexpr},[{var,571,'A'},{var,571,'Opts'}]}},
     {cons,572,
      {string,572,"fun "},
      {cons,572,
       {var,572,'NameItem'},
       {cons,572,
        {char,572,58},
        {cons,572,
         {var,572,'CallItem'},
         {cons,572,
          {char,572,47},
          {cons,572,{var,572,'ArityItem'},{nil,572}}}}}}}]},
   {clause,573,
    [{tuple,573,
      [{atom,573,'fun'},
       {var,573,'_'},
       {tuple,573,[{atom,573,clauses},{var,573,'Cs'}]}]},
     {var,573,'_Prec'},
     {var,573,'Opts'}],
    [],
    [{tuple,574,
      [{atom,574,list},
       {cons,574,
        {tuple,574,
         [{atom,574,first},
          {atom,574,'fun'},
          {call,574,
           {atom,574,fun_clauses},
           [{var,574,'Cs'},{var,574,'Opts'},{atom,574,unnamed}]}]},
        {cons,574,{atom,574,'end'},{nil,574}}}]}]},
   {clause,575,
    [{tuple,575,
      [{atom,575,named_fun},{var,575,'_'},{var,575,'Name'},{var,575,'Cs'}]},
     {var,575,'_Prec'},
     {var,575,'Opts'}],
    [],
    [{tuple,576,
      [{atom,576,list},
       {cons,576,
        {tuple,576,
         [{atom,576,first},
          {cons,576,{atom,576,'fun'},{cons,576,{string,576," "},{nil,576}}},
          {call,576,
           {atom,576,fun_clauses},
           [{var,576,'Cs'},
            {var,576,'Opts'},
            {tuple,576,[{atom,576,named},{var,576,'Name'}]}]}]},
        {cons,576,{atom,576,'end'},{nil,576}}}]}]},
   {clause,577,
    [{tuple,577,
      [{atom,577,'fun'},
       {var,577,'_'},
       {tuple,577,[{atom,577,clauses},{var,577,'Cs'}]},
       {var,577,'Extra'}]},
     {var,577,'_Prec'},
     {var,577,'Opts'}],
    [],
    [{tuple,578,
      [{atom,578,force_nl},
       {call,578,{atom,578,fun_info},[{var,578,'Extra'}]},
       {tuple,579,
        [{atom,579,list},
         {cons,579,
          {tuple,579,
           [{atom,579,first},
            {atom,579,'fun'},
            {call,579,
             {atom,579,fun_clauses},
             [{var,579,'Cs'},{var,579,'Opts'},{atom,579,unnamed}]}]},
          {cons,579,{atom,579,'end'},{nil,579}}}]}]}]},
   {clause,580,
    [{tuple,580,
      [{atom,580,named_fun},
       {var,580,'_'},
       {var,580,'Name'},
       {var,580,'Cs'},
       {var,580,'Extra'}]},
     {var,580,'_Prec'},
     {var,580,'Opts'}],
    [],
    [{tuple,581,
      [{atom,581,force_nl},
       {call,581,{atom,581,fun_info},[{var,581,'Extra'}]},
       {tuple,582,
        [{atom,582,list},
         {cons,582,
          {tuple,582,
           [{atom,582,first},
            {cons,582,{atom,582,'fun'},{cons,582,{string,582," "},{nil,582}}},
            {call,582,
             {atom,582,fun_clauses},
             [{var,582,'Cs'},
              {var,582,'Opts'},
              {tuple,582,[{atom,582,named},{var,582,'Name'}]}]}]},
          {cons,582,{atom,582,'end'},{nil,582}}}]}]}]},
   {clause,583,
    [{tuple,583,[{atom,583,query},{var,583,'_'},{var,583,'Lc'}]},
     {var,583,'_Prec'},
     {var,583,'Opts'}],
    [],
    [{tuple,584,
      [{atom,584,list},
       {cons,584,
        {tuple,584,
         [{atom,584,step},
          {call,584,{atom,584,leaf},[{string,584,"query"}]},
          {call,584,
           {atom,584,lexpr},
           [{var,584,'Lc'},{integer,584,0},{var,584,'Opts'}]}]},
        {cons,584,{atom,584,'end'},{nil,584}}}]}]},
   {clause,585,
    [{tuple,585,
      [{atom,585,call},
       {var,585,'_'},
       {match,585,
        {tuple,585,
         [{atom,585,remote},
          {var,585,'_'},
          {tuple,585,[{atom,585,atom},{var,585,'_'},{var,585,'M'}]},
          {match,585,
           {tuple,585,[{atom,585,atom},{var,585,'_'},{var,585,'F'}]},
           {var,585,'N'}}]},
        {var,585,'Name'}},
       {var,585,'Args'}]},
     {var,585,'Prec'},
     {var,585,'Opts'}],
    [],
    [{'case',586,
      {call,586,
       {remote,586,{atom,586,erl_internal},{atom,586,bif}},
       [{var,586,'M'},
        {var,586,'F'},
        {call,586,{atom,586,length},[{var,586,'Args'}]}]},
      [{clause,587,
        [{atom,587,true}],
        [],
        [{call,588,
          {atom,588,call},
          [{var,588,'N'},
           {var,588,'Args'},
           {var,588,'Prec'},
           {var,588,'Opts'}]}]},
       {clause,589,
        [{atom,589,false}],
        [],
        [{call,590,
          {atom,590,call},
          [{var,590,'Name'},
           {var,590,'Args'},
           {var,590,'Prec'},
           {var,590,'Opts'}]}]}]}]},
   {clause,592,
    [{tuple,592,
      [{atom,592,call},{var,592,'_'},{var,592,'Name'},{var,592,'Args'}]},
     {var,592,'Prec'},
     {var,592,'Opts'}],
    [],
    [{call,593,
      {atom,593,call},
      [{var,593,'Name'},{var,593,'Args'},{var,593,'Prec'},{var,593,'Opts'}]}]},
   {clause,594,
    [{tuple,594,
      [{atom,594,'try'},
       {var,594,'_'},
       {var,594,'Es'},
       {var,594,'Scs'},
       {var,594,'Ccs'},
       {var,594,'As'}]},
     {var,594,'_'},
     {var,594,'Opts'}],
    [],
    [{tuple,595,
      [{atom,595,list},
       {cons,595,
        {'if',595,
         [{clause,596,[],
           [[{op,596,'=:=',{var,596,'Scs'},{nil,596}}]],
           [{tuple,597,
             [{atom,597,step},
              {atom,597,'try'},
              {call,597,{atom,597,body},[{var,597,'Es'},{var,597,'Opts'}]}]}]},
          {clause,598,[],
           [[{atom,598,true}]],
           [{tuple,599,
             [{atom,599,step},
              {tuple,599,
               [{atom,599,list},
                {cons,599,
                 {tuple,599,
                  [{atom,599,step},
                   {atom,599,'try'},
                   {call,599,
                    {atom,599,body},
                    [{var,599,'Es'},{var,599,'Opts'}]}]},
                 {cons,599,{atom,599,'of'},{nil,599}}}]},
              {call,600,
               {atom,600,cr_clauses},
               [{var,600,'Scs'},{var,600,'Opts'}]}]}]}]},
        {cons,602,
         {'if',602,
          [{clause,603,[],
            [[{op,603,'=:=',{var,603,'Ccs'},{nil,603}}]],
            [{nil,604}]},
           {clause,605,[],
            [[{atom,605,true}]],
            [{tuple,606,
              [{atom,606,step},
               {atom,606,'catch'},
               {call,606,
                {atom,606,try_clauses},
                [{var,606,'Ccs'},{var,606,'Opts'}]}]}]}]},
         {cons,608,
          {'if',608,
           [{clause,609,[],
             [[{op,609,'=:=',{var,609,'As'},{nil,609}}]],
             [{nil,610}]},
            {clause,611,[],
             [[{atom,611,true}]],
             [{tuple,612,
               [{atom,612,step},
                {atom,612,'after'},
                {call,612,
                 {atom,612,body},
                 [{var,612,'As'},{var,612,'Opts'}]}]}]}]},
          {cons,614,{atom,614,'end'},{nil,614}}}}}]}]},
   {clause,615,
    [{tuple,615,[{atom,615,'catch'},{var,615,'_'},{var,615,'Expr'}]},
     {var,615,'Prec'},
     {var,615,'Opts'}],
    [],
    [{match,616,
      {tuple,616,[{var,616,'P'},{var,616,'R'}]},
      {call,616,{atom,616,preop_prec},[{atom,616,'catch'}]}},
     {match,617,
      {var,617,'El'},
      {tuple,617,
       [{atom,617,list},
        {cons,617,
         {tuple,617,
          [{atom,617,step},
           {atom,617,'catch'},
           {call,617,
            {atom,617,lexpr},
            [{var,617,'Expr'},{var,617,'R'},{var,617,'Opts'}]}]},
         {nil,617}}]}},
     {call,618,
      {atom,618,maybe_paren},
      [{var,618,'P'},{var,618,'Prec'},{var,618,'El'}]}]},
   {clause,619,
    [{tuple,619,
      [{atom,619,match},{var,619,'_'},{var,619,'Lhs'},{var,619,'Rhs'}]},
     {var,619,'Prec'},
     {var,619,'Opts'}],
    [],
    [{match,620,
      {tuple,620,[{var,620,'L'},{var,620,'P'},{var,620,'R'}]},
      {call,620,{atom,620,inop_prec},[{atom,620,'='}]}},
     {match,621,
      {var,621,'Pl'},
      {call,621,
       {atom,621,lexpr},
       [{var,621,'Lhs'},{var,621,'L'},{var,621,'Opts'}]}},
     {match,622,
      {var,622,'Rl'},
      {call,622,
       {atom,622,lexpr},
       [{var,622,'Rhs'},{var,622,'R'},{var,622,'Opts'}]}},
     {match,623,
      {var,623,'El'},
      {tuple,623,
       [{atom,623,list},
        {cons,623,
         {tuple,623,
          [{atom,623,cstep},
           {cons,623,{var,623,'Pl'},{cons,623,{atom,623,' ='},{nil,623}}},
           {var,623,'Rl'}]},
         {nil,623}}]}},
     {call,624,
      {atom,624,maybe_paren},
      [{var,624,'P'},{var,624,'Prec'},{var,624,'El'}]}]},
   {clause,625,
    [{tuple,625,[{atom,625,op},{var,625,'_'},{var,625,'Op'},{var,625,'Arg'}]},
     {var,625,'Prec'},
     {var,625,'Opts'}],
    [],
    [{match,626,
      {tuple,626,[{var,626,'P'},{var,626,'R'}]},
      {call,626,{atom,626,preop_prec},[{var,626,'Op'}]}},
     {match,627,
      {var,627,'Ol'},
      {call,627,
       {atom,627,leaf},
       [{call,627,
         {atom,627,format},
         [{string,627,"~s "},{cons,627,{var,627,'Op'},{nil,627}}]}]}},
     {match,628,
      {var,628,'El'},
      {cons,628,
       {var,628,'Ol'},
       {cons,628,
        {call,628,
         {atom,628,lexpr},
         [{var,628,'Arg'},{var,628,'R'},{var,628,'Opts'}]},
        {nil,628}}}},
     {call,629,
      {atom,629,maybe_paren},
      [{var,629,'P'},{var,629,'Prec'},{var,629,'El'}]}]},
   {clause,630,
    [{tuple,630,
      [{atom,630,op},
       {var,630,'_'},
       {var,630,'Op'},
       {var,630,'Larg'},
       {var,630,'Rarg'}]},
     {var,630,'Prec'},
     {var,630,'Opts'}],
    [[{op,630,'=:=',{var,630,'Op'},{atom,630,'orelse'}}],
     [{op,631,'=:=',{var,631,'Op'},{atom,631,'andalso'}}]],
    [{match,633,
      {tuple,633,[{var,633,'L'},{var,633,'P'},{var,633,'R'}]},
      {call,633,{atom,633,inop_prec},[{var,633,'Op'}]}},
     {match,634,
      {var,634,'Ll'},
      {call,634,
       {atom,634,lexpr},
       [{var,634,'Larg'},{var,634,'L'},{var,634,'Opts'}]}},
     {match,635,
      {var,635,'Ol'},
      {call,635,
       {atom,635,leaf},
       [{call,635,
         {atom,635,format},
         [{string,635,"~s"},{cons,635,{var,635,'Op'},{nil,635}}]}]}},
     {match,636,
      {var,636,'Lr'},
      {call,636,
       {atom,636,lexpr},
       [{var,636,'Rarg'},{var,636,'R'},{var,636,'Opts'}]}},
     {match,637,
      {var,637,'El'},
      {tuple,637,
       [{atom,637,prefer_nl},
        {cons,637,{nil,637},{nil,637}},
        {cons,637,
         {var,637,'Ll'},
         {cons,637,{var,637,'Ol'},{cons,637,{var,637,'Lr'},{nil,637}}}}]}},
     {call,638,
      {atom,638,maybe_paren},
      [{var,638,'P'},{var,638,'Prec'},{var,638,'El'}]}]},
   {clause,639,
    [{tuple,639,
      [{atom,639,op},
       {var,639,'_'},
       {var,639,'Op'},
       {var,639,'Larg'},
       {var,639,'Rarg'}]},
     {var,639,'Prec'},
     {var,639,'Opts'}],
    [],
    [{match,640,
      {tuple,640,[{var,640,'L'},{var,640,'P'},{var,640,'R'}]},
      {call,640,{atom,640,inop_prec},[{var,640,'Op'}]}},
     {match,641,
      {var,641,'Ll'},
      {call,641,
       {atom,641,lexpr},
       [{var,641,'Larg'},{var,641,'L'},{var,641,'Opts'}]}},
     {match,642,
      {var,642,'Ol'},
      {call,642,
       {atom,642,leaf},
       [{call,642,
         {atom,642,format},
         [{string,642,"~s"},{cons,642,{var,642,'Op'},{nil,642}}]}]}},
     {match,643,
      {var,643,'Lr'},
      {call,643,
       {atom,643,lexpr},
       [{var,643,'Rarg'},{var,643,'R'},{var,643,'Opts'}]}},
     {match,644,
      {var,644,'El'},
      {tuple,644,
       [{atom,644,list},
        {cons,644,
         {var,644,'Ll'},
         {cons,644,{var,644,'Ol'},{cons,644,{var,644,'Lr'},{nil,644}}}}]}},
     {call,645,
      {atom,645,maybe_paren},
      [{var,645,'P'},{var,645,'Prec'},{var,645,'El'}]}]},
   {clause,647,
    [{tuple,647,[{atom,647,remote},{var,647,'_'},{var,647,'M'},{var,647,'F'}]},
     {var,647,'Prec'},
     {var,647,'Opts'}],
    [],
    [{match,648,
      {tuple,648,[{var,648,'L'},{var,648,'P'},{var,648,'R'}]},
      {call,648,{atom,648,inop_prec},[{atom,648,':'}]}},
     {match,649,
      {var,649,'NameItem'},
      {call,649,
       {atom,649,lexpr},
       [{var,649,'M'},{var,649,'L'},{var,649,'Opts'}]}},
     {match,650,
      {var,650,'CallItem'},
      {call,650,
       {atom,650,lexpr},
       [{var,650,'F'},{var,650,'R'},{var,650,'Opts'}]}},
     {call,651,
      {atom,651,maybe_paren},
      [{var,651,'P'},
       {var,651,'Prec'},
       {cons,651,
        {var,651,'NameItem'},
        {cons,651,
         {char,651,58},
         {cons,651,{var,651,'CallItem'},{nil,651}}}}]}]},
   {clause,653,
    [{tuple,653,[{atom,653,bin},{var,653,'_'},{var,653,'Fs'}]},
     {var,653,'_'},
     {var,653,'Opts'}],
    [],
    [{call,654,{atom,654,bit_grp},[{var,654,'Fs'},{var,654,'Opts'}]}]},
   {clause,656,
    [{tuple,656,[{atom,656,value},{var,656,'_'},{var,656,'Val'}]},
     {var,656,'_'},
     {var,656,'_'}],
    [],
    [{call,657,
      {atom,657,leaf},
      [{call,657,{atom,657,write},[{var,657,'Val'}]}]}]},
   {clause,659,
    [{var,659,'Other'},
     {var,659,'_Precedence'},
     {tuple,659,
      [{atom,659,options},
       {atom,659,none},
       {atom,659,undefined},
       {atom,659,undefined}]}],
    [],
    [{call,660,
      {atom,660,leaf},
      [{call,660,
        {atom,660,format},
        [{string,660,"INVALID-FORM:~w:"},
         {cons,660,{var,660,'Other'},{nil,660}}]}]}]},
   {clause,661,
    [{var,661,'HookExpr'},
     {var,661,'Precedence'},
     {tuple,661,
      [{atom,661,options},
       {tuple,661,[{var,661,'Mod'},{var,661,'Func'},{var,661,'Eas'}]},
       {atom,661,undefined},
       {atom,661,undefined}]}],
    [[{op,662,'=/=',{var,662,'Mod'},{atom,662,'fun'}}]],
    [{tuple,663,
      [{atom,663,ehook},
       {var,663,'HookExpr'},
       {var,663,'Precedence'},
       {tuple,663,[{var,663,'Mod'},{var,663,'Func'},{var,663,'Eas'}]}]}]},
   {clause,664,
    [{var,664,'HookExpr'},
     {var,664,'Precedence'},
     {tuple,664,
      [{atom,664,options},
       {var,664,'Func'},
       {atom,664,undefined},
       {var,664,'Options'}]}],
    [],
    [{tuple,665,
      [{atom,665,hook},
       {var,665,'HookExpr'},
       {var,665,'Precedence'},
       {var,665,'Func'},
       {var,665,'Options'}]}]}]},
 {function,667,call,4,
  [{clause,667,
    [{var,667,'Name'},{var,667,'Args'},{var,667,'Prec'},{var,667,'Opts'}],
    [],
    [{match,668,
      {tuple,668,[{var,668,'F'},{var,668,'P'}]},
      {call,668,{atom,668,func_prec},[]}},
     {match,669,
      {var,669,'Item'},
      {tuple,669,
       [{atom,669,first},
        {call,669,
         {atom,669,lexpr},
         [{var,669,'Name'},{var,669,'F'},{var,669,'Opts'}]},
        {call,669,{atom,669,args},[{var,669,'Args'},{var,669,'Opts'}]}]}},
     {call,670,
      {atom,670,maybe_paren},
      [{var,670,'P'},{var,670,'Prec'},{var,670,'Item'}]}]}]},
 {function,672,fun_info,1,
  [{clause,672,
    [{var,672,'Extra'}],
    [],
    [{call,673,
      {atom,673,leaf},
      [{call,673,
        {atom,673,format},
        [{string,673,"% fun-info: ~w"},
         {cons,673,{var,673,'Extra'},{nil,673}}]}]}]}]},
 {function,677,bit_grp,2,
  [{clause,677,
    [{var,677,'Fs'},{var,677,'Opts'}],
    [],
    [{call,678,
      {atom,678,append},
      [{cons,678,
        {cons,678,{atom,678,'<<'},{nil,678}},
        {cons,678,
         {cons,678,
          {call,678,{atom,678,bit_elems},[{var,678,'Fs'},{var,678,'Opts'}]},
          {nil,678}},
         {cons,678,{cons,678,{atom,678,'>>'},{nil,678}},{nil,678}}}}]}]}]},
 {function,680,bit_elems,2,
  [{clause,680,
    [{var,680,'Es'},{var,680,'Opts'}],
    [],
    [{call,681,
      {atom,681,expr_list},
      [{var,681,'Es'},
       {char,681,44},
       {'fun',681,{function,bit_elem,2}},
       {var,681,'Opts'}]}]}]},
 {function,683,bit_elem,2,
  [{clause,683,
    [{tuple,683,
      [{atom,683,bin_element},
       {var,683,'_'},
       {var,683,'Expr'},
       {var,683,'Sz'},
       {var,683,'Types'}]},
     {var,683,'Opts'}],
    [],
    [{match,684,{var,684,'P'},{call,684,{atom,684,max_prec},[]}},
     {match,685,
      {var,685,'VChars'},
      {call,685,
       {atom,685,lexpr},
       [{var,685,'Expr'},{var,685,'P'},{var,685,'Opts'}]}},
     {match,686,
      {var,686,'SChars'},
      {'if',686,
       [{clause,687,[],
         [[{op,687,'=/=',{var,687,'Sz'},{atom,687,default}}]],
         [{cons,688,
           {var,688,'VChars'},
           {cons,688,
            {char,688,58},
            {cons,688,
             {call,688,
              {atom,688,lexpr},
              [{var,688,'Sz'},{var,688,'P'},{var,688,'Opts'}]},
             {nil,688}}}}]},
        {clause,689,[],[[{atom,689,true}]],[{var,690,'VChars'}]}]}},
     {'if',692,
      [{clause,693,[],
        [[{op,693,'=/=',{var,693,'Types'},{atom,693,default}}]],
        [{cons,694,
          {var,694,'SChars'},
          {cons,694,
           {char,694,47},
           {call,694,{atom,694,bit_elem_types},[{var,694,'Types'}]}}}]},
       {clause,695,[],[[{atom,695,true}]],[{var,696,'SChars'}]}]}]}]},
 {function,699,bit_elem_types,1,
  [{clause,699,
    [{cons,699,{var,699,'T'},{nil,699}}],
    [],
    [{cons,700,
      {call,700,{atom,700,bit_elem_type},[{var,700,'T'}]},
      {nil,700}}]},
   {clause,701,
    [{cons,701,{var,701,'T'},{var,701,'Rest'}}],
    [],
    [{cons,702,
      {call,702,{atom,702,bit_elem_type},[{var,702,'T'}]},
      {cons,702,
       {char,702,45},
       {call,702,{atom,702,bit_elem_types},[{var,702,'Rest'}]}}}]}]},
 {function,704,bit_elem_type,1,
  [{clause,704,
    [{tuple,704,[{var,704,'A'},{var,704,'B'}]}],
    [],
    [{cons,705,
      {call,705,
       {atom,705,lexpr},
       [{call,705,
         {remote,705,{atom,705,erl_parse},{atom,705,abstract}},
         [{var,705,'A'}]},
        {call,705,{atom,705,options},[{atom,705,none}]}]},
      {cons,706,
       {char,706,58},
       {cons,707,
        {call,707,
         {atom,707,lexpr},
         [{call,707,
           {remote,707,{atom,707,erl_parse},{atom,707,abstract}},
           [{var,707,'B'}]},
          {call,707,{atom,707,options},[{atom,707,none}]}]},
        {nil,707}}}}]},
   {clause,708,
    [{var,708,'T'}],
    [],
    [{call,709,
      {atom,709,lexpr},
      [{call,709,
        {remote,709,{atom,709,erl_parse},{atom,709,abstract}},
        [{var,709,'T'}]},
       {call,709,{atom,709,options},[{atom,709,none}]}]}]}]},
 {function,713,record_name,1,
  [{clause,713,
    [{var,713,'Name'}],
    [],
    [{call,714,
      {atom,714,leaf},
      [{call,714,
        {atom,714,format},
        [{string,714,"#~w"},{cons,714,{var,714,'Name'},{nil,714}}]}]}]}]},
 {function,716,record_fields,2,
  [{clause,716,
    [{var,716,'Fs'},{var,716,'Opts'}],
    [],
    [{call,717,
      {atom,717,tuple},
      [{var,717,'Fs'},
       {'fun',717,{function,record_field,2}},
       {var,717,'Opts'}]}]}]},
 {function,719,record_field,2,
  [{clause,719,
    [{tuple,719,
      [{atom,719,record_field},{var,719,'_'},{var,719,'F'},{var,719,'Val'}]},
     {var,719,'Opts'}],
    [],
    [{match,720,
      {tuple,720,[{var,720,'L'},{var,720,'_P'},{var,720,'R'}]},
      {call,720,{atom,720,inop_prec},[{atom,720,'='}]}},
     {match,721,
      {var,721,'Fl'},
      {call,721,
       {atom,721,lexpr},
       [{var,721,'F'},{var,721,'L'},{var,721,'Opts'}]}},
     {match,722,
      {var,722,'Vl'},
      {call,722,
       {atom,722,lexpr},
       [{var,722,'Val'},{var,722,'R'},{var,722,'Opts'}]}},
     {tuple,723,
      [{atom,723,list},
       {cons,723,
        {tuple,723,
         [{atom,723,cstep},
          {cons,723,{var,723,'Fl'},{cons,723,{atom,723,' ='},{nil,723}}},
          {var,723,'Vl'}]},
        {nil,723}}]}]},
   {clause,724,
    [{tuple,724,
      [{atom,724,typed_record_field},
       {tuple,724,
        [{atom,724,record_field},{var,724,'_'},{var,724,'F'},{var,724,'Val'}]},
       {var,724,'Type'}]},
     {var,724,'Opts'}],
    [],
    [{match,725,
      {tuple,725,[{var,725,'L'},{var,725,'_P'},{var,725,'R'}]},
      {call,725,{atom,725,inop_prec},[{atom,725,'='}]}},
     {match,726,
      {var,726,'Fl'},
      {call,726,
       {atom,726,lexpr},
       [{var,726,'F'},{var,726,'L'},{var,726,'Opts'}]}},
     {match,727,
      {var,727,'Vl'},
      {call,727,
       {atom,727,typed},
       [{call,727,
         {atom,727,lexpr},
         [{var,727,'Val'},{var,727,'R'},{var,727,'Opts'}]},
        {var,727,'Type'}]}},
     {tuple,728,
      [{atom,728,list},
       {cons,728,
        {tuple,728,
         [{atom,728,cstep},
          {cons,728,{var,728,'Fl'},{cons,728,{atom,728,' ='},{nil,728}}},
          {var,728,'Vl'}]},
        {nil,728}}]}]},
   {clause,729,
    [{tuple,729,
      [{atom,729,typed_record_field},{var,729,'Field'},{var,729,'Type'}]},
     {var,729,'Opts'}],
    [],
    [{call,730,
      {atom,730,typed},
      [{call,730,{atom,730,record_field},[{var,730,'Field'},{var,730,'Opts'}]},
       {var,730,'Type'}]}]},
   {clause,731,
    [{tuple,731,[{atom,731,record_field},{var,731,'_'},{var,731,'F'}]},
     {var,731,'Opts'}],
    [],
    [{call,732,
      {atom,732,lexpr},
      [{var,732,'F'},{integer,732,0},{var,732,'Opts'}]}]}]},
 {function,734,map_fields,2,
  [{clause,734,
    [{var,734,'Fs'},{var,734,'Opts'}],
    [],
    [{call,735,
      {atom,735,tuple},
      [{var,735,'Fs'},
       {'fun',735,{function,map_field,2}},
       {var,735,'Opts'}]}]}]},
 {function,737,map_field,2,
  [{clause,737,
    [{tuple,737,
      [{atom,737,map_field_assoc},{var,737,'_'},{var,737,'K'},{var,737,'V'}]},
     {var,737,'Opts'}],
    [],
    [{match,738,
      {var,738,'Pl'},
      {call,738,
       {atom,738,lexpr},
       [{var,738,'K'},{integer,738,0},{var,738,'Opts'}]}},
     {tuple,739,
      [{atom,739,list},
       {cons,739,
        {tuple,739,
         [{atom,739,step},
          {cons,739,
           {var,739,'Pl'},
           {cons,739,
            {call,739,{atom,739,leaf},[{string,739," =>"}]},
            {nil,739}}},
          {call,739,
           {atom,739,lexpr},
           [{var,739,'V'},{integer,739,0},{var,739,'Opts'}]}]},
        {nil,739}}]}]},
   {clause,740,
    [{tuple,740,
      [{atom,740,map_field_exact},{var,740,'_'},{var,740,'K'},{var,740,'V'}]},
     {var,740,'Opts'}],
    [],
    [{match,741,
      {var,741,'Pl'},
      {call,741,
       {atom,741,lexpr},
       [{var,741,'K'},{integer,741,0},{var,741,'Opts'}]}},
     {tuple,742,
      [{atom,742,list},
       {cons,742,
        {tuple,742,
         [{atom,742,step},
          {cons,742,
           {var,742,'Pl'},
           {cons,742,
            {call,742,{atom,742,leaf},[{string,742," :="}]},
            {nil,742}}},
          {call,742,
           {atom,742,lexpr},
           [{var,742,'V'},{integer,742,0},{var,742,'Opts'}]}]},
        {nil,742}}]}]}]},
 {function,744,list,3,
  [{clause,744,
    [{tuple,744,[{atom,744,cons},{var,744,'_'},{var,744,'H'},{var,744,'T'}]},
     {var,744,'Es'},
     {var,744,'Opts'}],
    [],
    [{call,745,
      {atom,745,list},
      [{var,745,'T'},
       {cons,745,{var,745,'H'},{var,745,'Es'}},
       {var,745,'Opts'}]}]},
   {clause,746,
    [{tuple,746,[{atom,746,nil},{var,746,'_'}]},
     {var,746,'Es'},
     {var,746,'Opts'}],
    [],
    [{call,747,
      {atom,747,proper_list},
      [{call,747,{atom,747,reverse},[{var,747,'Es'}]},{var,747,'Opts'}]}]},
   {clause,748,
    [{var,748,'Other'},{var,748,'Es'},{var,748,'Opts'}],
    [],
    [{call,749,
      {atom,749,improper_list},
      [{call,749,
        {atom,749,reverse},
        [{var,749,'Es'},{cons,749,{var,749,'Other'},{nil,749}}]},
       {var,749,'Opts'}]}]}]},
 {function,754,if_clauses,2,
  [{clause,754,
    [{var,754,'Cs'},{var,754,'Opts'}],
    [],
    [{call,755,
      {atom,755,clauses},
      [{'fun',755,{function,if_clause,2}},
       {var,755,'Opts'},
       {var,755,'Cs'}]}]}]},
 {function,757,if_clause,2,
  [{clause,757,
    [{tuple,757,
      [{atom,757,clause},{var,757,'_'},{nil,757},{var,757,'G'},{var,757,'B'}]},
     {var,757,'Opts'}],
    [],
    [{match,758,
      {var,758,'Gl'},
      {cons,758,
       {call,758,{atom,758,guard_no_when},[{var,758,'G'},{var,758,'Opts'}]},
       {cons,758,{atom,758,' ->'},{nil,758}}}},
     {tuple,759,
      [{atom,759,step},
       {var,759,'Gl'},
       {call,759,{atom,759,body},[{var,759,'B'},{var,759,'Opts'}]}]}]}]},
 {function,761,guard_no_when,2,
  [{clause,761,
    [{cons,761,{var,761,'E'},{var,761,'Es'}},{var,761,'Opts'}],
    [[{call,761,{atom,761,is_list},[{var,761,'E'}]}]],
    [{call,762,
      {atom,762,expr_list},
      [{cons,762,{var,762,'E'},{var,762,'Es'}},
       {char,762,59},
       {'fun',762,{function,guard0,2}},
       {var,762,'Opts'}]}]},
   {clause,763,
    [{cons,763,{var,763,'E'},{var,763,'Es'}},{var,763,'Opts'}],
    [],
    [{call,764,
      {atom,764,guard_no_when},
      [{cons,764,{cons,764,{var,764,'E'},{var,764,'Es'}},{nil,764}},
       {var,764,'Opts'}]}]},
   {clause,765,
    [{nil,765},{var,765,'_'}],
    [],
    [{call,766,{atom,766,leaf},[{string,766,"true"}]}]}]},
 {function,771,cr_clauses,2,
  [{clause,771,
    [{var,771,'Cs'},{var,771,'Opts'}],
    [],
    [{call,772,
      {atom,772,clauses},
      [{'fun',772,{function,cr_clause,2}},
       {var,772,'Opts'},
       {var,772,'Cs'}]}]}]},
 {function,774,cr_clause,2,
  [{clause,774,
    [{tuple,774,
      [{atom,774,clause},
       {var,774,'_'},
       {cons,774,{var,774,'T'},{nil,774}},
       {var,774,'G'},
       {var,774,'B'}]},
     {var,774,'Opts'}],
    [],
    [{match,775,
      {var,775,'El'},
      {call,775,
       {atom,775,lexpr},
       [{var,775,'T'},{integer,775,0},{var,775,'Opts'}]}},
     {match,776,
      {var,776,'Gl'},
      {call,776,
       {atom,776,guard_when},
       [{var,776,'El'},{var,776,'G'},{var,776,'Opts'}]}},
     {match,777,
      {var,777,'Bl'},
      {call,777,{atom,777,body},[{var,777,'B'},{var,777,'Opts'}]}},
     {tuple,778,[{atom,778,step},{var,778,'Gl'},{var,778,'Bl'}]}]}]},
 {function,783,try_clauses,2,
  [{clause,783,
    [{var,783,'Cs'},{var,783,'Opts'}],
    [],
    [{call,784,
      {atom,784,clauses},
      [{'fun',784,{function,try_clause,2}},
       {var,784,'Opts'},
       {var,784,'Cs'}]}]}]},
 {function,786,try_clause,2,
  [{clause,786,
    [{tuple,786,
      [{atom,786,clause},
       {var,786,'_'},
       {cons,786,
        {tuple,786,
         [{atom,786,tuple},
          {var,786,'_'},
          {cons,786,
           {tuple,786,[{atom,786,atom},{var,786,'_'},{atom,786,throw}]},
           {cons,786,{var,786,'V'},{cons,786,{var,786,'S'},{nil,786}}}}]},
        {nil,786}},
       {var,786,'G'},
       {var,786,'B'}]},
     {var,786,'Opts'}],
    [],
    [{match,787,
      {var,787,'El'},
      {call,787,
       {atom,787,lexpr},
       [{var,787,'V'},{integer,787,0},{var,787,'Opts'}]}},
     {match,788,
      {var,788,'Sl'},
      {call,788,
       {atom,788,stack_backtrace},
       [{var,788,'S'},{cons,788,{var,788,'El'},{nil,788}},{var,788,'Opts'}]}},
     {match,789,
      {var,789,'Gl'},
      {call,789,
       {atom,789,guard_when},
       [{var,789,'Sl'},{var,789,'G'},{var,789,'Opts'}]}},
     {match,790,
      {var,790,'Bl'},
      {call,790,{atom,790,body},[{var,790,'B'},{var,790,'Opts'}]}},
     {tuple,791,[{atom,791,step},{var,791,'Gl'},{var,791,'Bl'}]}]},
   {clause,792,
    [{tuple,792,
      [{atom,792,clause},
       {var,792,'_'},
       {cons,792,
        {tuple,792,
         [{atom,792,tuple},
          {var,792,'_'},
          {cons,792,
           {var,792,'C'},
           {cons,792,{var,792,'V'},{cons,792,{var,792,'S'},{nil,792}}}}]},
        {nil,792}},
       {var,792,'G'},
       {var,792,'B'}]},
     {var,792,'Opts'}],
    [],
    [{match,793,
      {var,793,'Cs'},
      {call,793,
       {atom,793,lexpr},
       [{var,793,'C'},{integer,793,0},{var,793,'Opts'}]}},
     {match,794,
      {var,794,'El'},
      {call,794,
       {atom,794,lexpr},
       [{var,794,'V'},{integer,794,0},{var,794,'Opts'}]}},
     {match,795,
      {var,795,'CsEl'},
      {cons,795,
       {var,795,'Cs'},
       {cons,795,{char,795,58},{cons,795,{var,795,'El'},{nil,795}}}}},
     {match,796,
      {var,796,'Sl'},
      {call,796,
       {atom,796,stack_backtrace},
       [{var,796,'S'},{var,796,'CsEl'},{var,796,'Opts'}]}},
     {match,797,
      {var,797,'Gl'},
      {call,797,
       {atom,797,guard_when},
       [{var,797,'Sl'},{var,797,'G'},{var,797,'Opts'}]}},
     {match,798,
      {var,798,'Bl'},
      {call,798,{atom,798,body},[{var,798,'B'},{var,798,'Opts'}]}},
     {tuple,799,[{atom,799,step},{var,799,'Gl'},{var,799,'Bl'}]}]}]},
 {function,801,stack_backtrace,3,
  [{clause,801,
    [{tuple,801,[{atom,801,var},{var,801,'_'},{atom,801,'_'}]},
     {var,801,'El'},
     {var,801,'_Opts'}],
    [],
    [{var,802,'El'}]},
   {clause,803,
    [{var,803,'S'},{var,803,'El'},{var,803,'Opts'}],
    [],
    [{op,804,'++',
      {var,804,'El'},
      {cons,804,
       {char,804,58},
       {cons,804,
        {call,804,
         {atom,804,lexpr},
         [{var,804,'S'},{integer,804,0},{var,804,'Opts'}]},
        {nil,804}}}}]}]},
 {function,809,fun_clauses,3,
  [{clause,809,
    [{var,809,'Cs'},{var,809,'Opts'},{atom,809,unnamed}],
    [],
    [{call,810,
      {atom,810,nl_clauses},
      [{'fun',810,{function,fun_clause,2}},
       {cons,810,{char,810,59},{nil,810}},
       {var,810,'Opts'},
       {var,810,'Cs'}]}]},
   {clause,811,
    [{var,811,'Cs'},
     {var,811,'Opts'},
     {tuple,811,[{atom,811,named},{var,811,'Name'}]}],
    [],
    [{call,812,
      {atom,812,nl_clauses},
      [{'fun',812,
        {clauses,
         [{clause,812,
           [{var,812,'C'},{var,812,'H'}],
           [],
           [{match,813,
             {tuple,813,[{atom,813,step},{var,813,'Gl'},{var,813,'Bl'}]},
             {call,813,{atom,813,fun_clause},[{var,813,'C'},{var,813,'H'}]}},
            {tuple,814,
             [{atom,814,step},
              {cons,814,
               {call,814,{atom,814,atom_to_list},[{var,814,'Name'}]},
               {cons,814,{var,814,'Gl'},{nil,814}}},
              {var,814,'Bl'}]}]}]}},
       {cons,815,{char,815,59},{nil,815}},
       {var,815,'Opts'},
       {var,815,'Cs'}]}]}]},
 {function,817,fun_clause,2,
  [{clause,817,
    [{tuple,817,
      [{atom,817,clause},
       {var,817,'_'},
       {var,817,'A'},
       {var,817,'G'},
       {var,817,'B'}]},
     {var,817,'Opts'}],
    [],
    [{match,818,
      {var,818,'El'},
      {call,818,{atom,818,args},[{var,818,'A'},{var,818,'Opts'}]}},
     {match,819,
      {var,819,'Gl'},
      {call,819,
       {atom,819,guard_when},
       [{var,819,'El'},{var,819,'G'},{var,819,'Opts'}]}},
     {match,820,
      {var,820,'Bl'},
      {call,820,{atom,820,body},[{var,820,'B'},{var,820,'Opts'}]}},
     {tuple,821,[{atom,821,step},{var,821,'Gl'},{var,821,'Bl'}]}]}]},
 {function,826,cond_clauses,2,
  [{clause,826,
    [{var,826,'Cs'},{var,826,'Opts'}],
    [],
    [{call,827,
      {atom,827,clauses},
      [{'fun',827,{function,cond_clause,2}},
       {var,827,'Opts'},
       {var,827,'Cs'}]}]}]},
 {function,829,cond_clause,2,
  [{clause,829,
    [{tuple,829,
      [{atom,829,clause},
       {var,829,'_'},
       {nil,829},
       {cons,829,{cons,829,{var,829,'E'},{nil,829}},{nil,829}},
       {var,829,'B'}]},
     {var,829,'Opts'}],
    [],
    [{tuple,830,
      [{atom,830,step},
       {cons,830,
        {call,830,{atom,830,lexpr},[{var,830,'E'},{var,830,'Opts'}]},
        {cons,830,{atom,830,' ->'},{nil,830}}},
       {call,830,{atom,830,body},[{var,830,'B'},{var,830,'Opts'}]}]}]}]},
 {function,835,nl_clauses,4,
  [{clause,835,
    [{var,835,'Type'},{var,835,'Sep'},{var,835,'Opts'},{var,835,'Cs'}],
    [],
    [{tuple,836,
      [{atom,836,prefer_nl},
       {var,836,'Sep'},
       {call,836,
        {atom,836,lexprs},
        [{var,836,'Cs'},{var,836,'Type'},{var,836,'Opts'}]}]}]}]},
 {function,841,clauses,3,
  [{clause,841,
    [{var,841,'Type'},{var,841,'Opts'},{var,841,'Cs'}],
    [],
    [{tuple,842,
      [{atom,842,prefer_nl},
       {cons,842,{char,842,59},{nil,842}},
       {call,842,
        {atom,842,lexprs},
        [{var,842,'Cs'},{var,842,'Type'},{var,842,'Opts'}]}]}]}]},
 {function,847,lc_quals,2,
  [{clause,847,
    [{var,847,'Qs'},{var,847,'Opts'}],
    [],
    [{tuple,848,
      [{atom,848,prefer_nl},
       {cons,848,{char,848,44},{nil,848}},
       {call,848,
        {atom,848,lexprs},
        [{var,848,'Qs'},
         {'fun',848,{function,lc_qual,2}},
         {var,848,'Opts'}]}]}]}]},
 {function,850,lc_qual,2,
  [{clause,850,
    [{tuple,850,
      [{atom,850,b_generate},{var,850,'_'},{var,850,'Pat'},{var,850,'E'}]},
     {var,850,'Opts'}],
    [],
    [{match,851,
      {var,851,'Pl'},
      {call,851,
       {atom,851,lexpr},
       [{var,851,'Pat'},{integer,851,0},{var,851,'Opts'}]}},
     {tuple,852,
      [{atom,852,list},
       {cons,852,
        {tuple,852,
         [{atom,852,step},
          {cons,852,
           {var,852,'Pl'},
           {cons,852,
            {call,852,{atom,852,leaf},[{string,852," <="}]},
            {nil,852}}},
          {call,852,
           {atom,852,lexpr},
           [{var,852,'E'},{integer,852,0},{var,852,'Opts'}]}]},
        {nil,852}}]}]},
   {clause,853,
    [{tuple,853,
      [{atom,853,generate},{var,853,'_'},{var,853,'Pat'},{var,853,'E'}]},
     {var,853,'Opts'}],
    [],
    [{match,854,
      {var,854,'Pl'},
      {call,854,
       {atom,854,lexpr},
       [{var,854,'Pat'},{integer,854,0},{var,854,'Opts'}]}},
     {tuple,855,
      [{atom,855,list},
       {cons,855,
        {tuple,855,
         [{atom,855,step},
          {cons,855,
           {var,855,'Pl'},
           {cons,855,
            {call,855,{atom,855,leaf},[{string,855," <-"}]},
            {nil,855}}},
          {call,855,
           {atom,855,lexpr},
           [{var,855,'E'},{integer,855,0},{var,855,'Opts'}]}]},
        {nil,855}}]}]},
   {clause,856,
    [{var,856,'Q'},{var,856,'Opts'}],
    [],
    [{call,857,
      {atom,857,lexpr},
      [{var,857,'Q'},{integer,857,0},{var,857,'Opts'}]}]}]},
 {function,859,proper_list,2,
  [{clause,859,
    [{var,859,'Es'},{var,859,'Opts'}],
    [],
    [{tuple,860,
      [{atom,860,seq},
       {char,860,91},
       {char,860,93},
       {char,860,44},
       {call,860,{atom,860,lexprs},[{var,860,'Es'},{var,860,'Opts'}]}]}]}]},
 {function,862,improper_list,2,
  [{clause,862,
    [{var,862,'Es'},{var,862,'Opts'}],
    [],
    [{tuple,863,
      [{atom,863,seq},
       {char,863,91},
       {char,863,93},
       {tuple,863,[{char,863,44},{char,863,124}]},
       {call,863,{atom,863,lexprs},[{var,863,'Es'},{var,863,'Opts'}]}]}]}]},
 {function,865,tuple,2,
  [{clause,865,
    [{var,865,'L'},{var,865,'Opts'}],
    [],
    [{call,866,
      {atom,866,tuple},
      [{var,866,'L'},{'fun',866,{function,lexpr,2}},{var,866,'Opts'}]}]}]},
 {function,868,tuple,3,
  [{clause,868,
    [{var,868,'Es'},{var,868,'F'},{var,868,'Opts'}],
    [],
    [{tuple,869,
      [{atom,869,seq},
       {char,869,123},
       {char,869,125},
       {char,869,44},
       {call,869,
        {atom,869,lexprs},
        [{var,869,'Es'},{var,869,'F'},{var,869,'Opts'}]}]}]}]},
 {function,871,args,2,
  [{clause,871,
    [{var,871,'As'},{var,871,'Opts'}],
    [],
    [{tuple,872,
      [{atom,872,seq},
       {char,872,40},
       {char,872,41},
       {cons,872,{char,872,44},{nil,872}},
       {call,872,{atom,872,lexprs},[{var,872,'As'},{var,872,'Opts'}]}]}]}]},
 {function,874,expr_list,4,
  [{clause,874,
    [{var,874,'Es'},{var,874,'Sep'},{var,874,'F'},{var,874,'Opts'}],
    [],
    [{tuple,875,
      [{atom,875,seq},
       {nil,875},
       {nil,875},
       {var,875,'Sep'},
       {call,875,
        {atom,875,lexprs},
        [{var,875,'Es'},{var,875,'F'},{var,875,'Opts'}]}]}]}]},
 {function,877,lexprs,2,
  [{clause,877,
    [{var,877,'Es'},{var,877,'Opts'}],
    [],
    [{call,878,
      {atom,878,lexprs},
      [{var,878,'Es'},{'fun',878,{function,lexpr,2}},{var,878,'Opts'}]}]}]},
 {function,880,lexprs,3,
  [{clause,880,
    [{var,880,'Es'},{var,880,'F'},{var,880,'Opts'}],
    [],
    [{lc,881,
      {call,881,{var,881,'F'},[{var,881,'E'},{var,881,'Opts'}]},
      [{generate,881,{var,881,'E'},{var,881,'Es'}}]}]}]},
 {function,883,maybe_paren,3,
  [{clause,883,
    [{var,883,'P'},{var,883,'Prec'},{var,883,'Expr'}],
    [[{op,883,'<',{var,883,'P'},{var,883,'Prec'}}]],
    [{cons,884,
      {char,884,40},
      {cons,884,{var,884,'Expr'},{cons,884,{char,884,41},{nil,884}}}}]},
   {clause,885,
    [{var,885,'_P'},{var,885,'_Prec'},{var,885,'Expr'}],
    [],
    [{var,886,'Expr'}]}]},
 {function,888,leaf,1,
  [{clause,888,
    [{var,888,'S'}],
    [],
    [{tuple,889,
      [{atom,889,leaf},
       {call,889,{atom,889,chars_size},[{var,889,'S'}]},
       {var,889,'S'}]}]}]},
 {function,894,frmt,2,
  [{clause,894,
    [{var,894,'Item'},{var,894,'PP'}],
    [],
    [{call,895,
      {atom,895,frmt},
      [{var,895,'Item'},{integer,895,0},{var,895,'PP'}]}]}]},
 {function,897,frmt,3,
  [{clause,897,
    [{var,897,'Item'},{var,897,'I'},{var,897,'PP'}],
    [],
    [{match,898,{var,898,'ST'},{call,898,{atom,898,spacetab},[]}},
     {match,899,{var,899,'WT'},{call,899,{atom,899,wordtable},[]}},
     {match,900,
      {tuple,900,[{var,900,'Chars'},{var,900,'_Length'}]},
      {call,900,
       {atom,900,f},
       [{var,900,'Item'},
        {var,900,'I'},
        {var,900,'ST'},
        {var,900,'WT'},
        {var,900,'PP'}]}},
     {cons,901,{var,901,'Chars'},{nil,901}}]}]},
 {function,926,f,5,
  [{clause,926,
    [{match,926,{nil,926},{var,926,'Nil'}},
     {var,926,'_I0'},
     {var,926,'_ST'},
     {var,926,'_WT'},
     {var,926,'_PP'}],
    [],
    [{tuple,927,[{var,927,'Nil'},{integer,927,0}]}]},
   {clause,928,
    [{var,928,'C'},
     {var,928,'_I0'},
     {var,928,'_ST'},
     {var,928,'_WT'},
     {var,928,'_PP'}],
    [[{call,928,{atom,928,is_integer},[{var,928,'C'}]}]],
    [{tuple,929,[{var,929,'C'},{integer,929,1}]}]},
   {clause,930,
    [{tuple,930,[{atom,930,leaf},{var,930,'Length'},{var,930,'Chars'}]},
     {var,930,'_I0'},
     {var,930,'_ST'},
     {var,930,'_WT'},
     {var,930,'_PP'}],
    [],
    [{tuple,931,[{var,931,'Chars'},{var,931,'Length'}]}]},
   {clause,932,
    [{cons,932,{var,932,'Item'},{var,932,'Items'}},
     {var,932,'I0'},
     {var,932,'ST'},
     {var,932,'WT'},
     {var,932,'PP'}],
    [],
    [{call,933,
      {atom,933,consecutive},
      [{var,933,'Items'},
       {call,933,
        {atom,933,f},
        [{var,933,'Item'},
         {var,933,'I0'},
         {var,933,'ST'},
         {var,933,'WT'},
         {var,933,'PP'}]},
       {var,933,'I0'},
       {var,933,'ST'},
       {var,933,'WT'},
       {var,933,'PP'}]}]},
   {clause,934,
    [{tuple,934,[{atom,934,list},{var,934,'Items'}]},
     {var,934,'I0'},
     {var,934,'ST'},
     {var,934,'WT'},
     {var,934,'PP'}],
    [],
    [{call,935,
      {atom,935,f},
      [{tuple,935,
        [{atom,935,seq},
         {nil,935},
         {nil,935},
         {cons,935,{nil,935},{nil,935}},
         {var,935,'Items'}]},
       {var,935,'I0'},
       {var,935,'ST'},
       {var,935,'WT'},
       {var,935,'PP'}]}]},
   {clause,936,
    [{tuple,936,[{atom,936,first},{var,936,'E'},{var,936,'Item'}]},
     {var,936,'I0'},
     {var,936,'ST'},
     {var,936,'WT'},
     {var,936,'PP'}],
    [],
    [{call,937,
      {atom,937,f},
      [{tuple,937,
        [{atom,937,seq},
         {var,937,'E'},
         {nil,937},
         {cons,937,{nil,937},{nil,937}},
         {cons,937,{var,937,'Item'},{nil,937}}]},
       {var,937,'I0'},
       {var,937,'ST'},
       {var,937,'WT'},
       {var,937,'PP'}]}]},
   {clause,938,
    [{tuple,938,
      [{atom,938,seq},
       {var,938,'Before'},
       {var,938,'After'},
       {var,938,'Sep'},
       {var,938,'LItems'}]},
     {var,938,'I0'},
     {var,938,'ST'},
     {var,938,'WT'},
     {var,938,'PP'}],
    [],
    [{match,939,
      {var,939,'BCharsSize'},
      {call,939,
       {atom,939,f},
       [{var,939,'Before'},
        {var,939,'I0'},
        {var,939,'ST'},
        {var,939,'WT'},
        {var,939,'PP'}]}},
     {match,940,
      {var,940,'I'},
      {call,940,{atom,940,indent},[{var,940,'BCharsSize'},{var,940,'I0'}]}},
     {match,941,
      {var,941,'CharsSizeL'},
      {call,941,
       {atom,941,fl},
       [{var,941,'LItems'},
        {var,941,'Sep'},
        {var,941,'I'},
        {var,941,'After'},
        {var,941,'ST'},
        {var,941,'WT'},
        {var,941,'PP'}]}},
     {match,942,
      {tuple,942,[{var,942,'CharsL'},{var,942,'SizeL'}]},
      {call,942,{atom,942,unz},[{var,942,'CharsSizeL'}]}},
     {match,943,
      {tuple,943,[{var,943,'BCharsL'},{var,943,'BSizeL'}]},
      {call,943,
       {atom,943,unz1},
       [{cons,943,{var,943,'BCharsSize'},{nil,943}}]}},
     {match,944,
      {var,944,'Sizes'},
      {op,944,'++',{var,944,'BSizeL'},{var,944,'SizeL'}}},
     {match,945,
      {var,945,'NSepChars'},
      {'if',945,
       [{clause,946,[],
         [[{call,946,{atom,946,is_list},[{var,946,'Sep'}]},
           {op,946,'=/=',{var,946,'Sep'},{nil,946}}]],
         [{call,947,
           {remote,947,{atom,947,erlang},{atom,947,max}},
           [{integer,947,0},
            {op,947,'-',
             {call,947,{atom,947,length},[{var,947,'CharsL'}]},
             {integer,947,1}}]}]},
        {clause,948,[],[[{atom,948,true}]],[{integer,949,0}]}]}},
     {'case',951,
      {call,951,
       {atom,951,same_line},
       [{var,951,'I0'},{var,951,'Sizes'},{var,951,'NSepChars'}]},
      [{clause,952,
        [{tuple,952,[{atom,952,yes},{var,952,'Size'}]}],
        [],
        [{match,953,
          {var,953,'Chars'},
          {'if',953,
           [{clause,954,[],
             [[{op,954,'>',{var,954,'NSepChars'},{integer,954,0}}]],
             [{call,954,
               {atom,954,insert_sep},
               [{var,954,'CharsL'},{char,954,32}]}]},
            {clause,955,[],[[{atom,955,true}]],[{var,955,'CharsL'}]}]}},
         {tuple,957,
          [{op,957,'++',{var,957,'BCharsL'},{var,957,'Chars'}},
           {var,957,'Size'}]}]},
       {clause,958,
        [{atom,958,no}],
        [],
        [{tuple,959,
          [{op,959,'++',
            {var,959,'BCharsL'},
            {call,959,
             {atom,959,insert_newlines},
             [{var,959,'CharsSizeL'},{var,959,'I'},{var,959,'ST'}]}},
           {call,960,
            {atom,960,nsz},
            [{call,960,
              {remote,960,{atom,960,lists},{atom,960,last}},
              [{var,960,'Sizes'}]},
             {var,960,'I0'}]}]}]}]}]},
   {clause,962,
    [{tuple,962,
      [{atom,962,force_nl},{var,962,'_ExtraInfoItem'},{var,962,'Item'}]},
     {var,962,'I'},
     {var,962,'ST'},
     {var,962,'WT'},
     {var,962,'PP'}],
    [[{op,962,'<',{var,962,'I'},{integer,962,0}}]],
    [{call,964,
      {atom,964,f},
      [{var,964,'Item'},
       {var,964,'I'},
       {var,964,'ST'},
       {var,964,'WT'},
       {var,964,'PP'}]}]},
   {clause,965,
    [{tuple,965,
      [{atom,965,force_nl},{var,965,'ExtraInfoItem'},{var,965,'Item'}]},
     {var,965,'I'},
     {var,965,'ST'},
     {var,965,'WT'},
     {var,965,'PP'}],
    [],
    [{call,966,
      {atom,966,f},
      [{tuple,966,
        [{atom,966,prefer_nl},
         {nil,966},
         {cons,966,
          {var,966,'ExtraInfoItem'},
          {cons,966,{var,966,'Item'},{nil,966}}}]},
       {var,966,'I'},
       {var,966,'ST'},
       {var,966,'WT'},
       {var,966,'PP'}]}]},
   {clause,967,
    [{tuple,967,[{atom,967,prefer_nl},{var,967,'Sep'},{var,967,'LItems'}]},
     {var,967,'I'},
     {var,967,'ST'},
     {var,967,'WT'},
     {var,967,'PP'}],
    [[{op,967,'<',{var,967,'I'},{integer,967,0}}]],
    [{call,968,
      {atom,968,f},
      [{tuple,968,
        [{atom,968,seq},
         {nil,968},
         {nil,968},
         {var,968,'Sep'},
         {var,968,'LItems'}]},
       {var,968,'I'},
       {var,968,'ST'},
       {var,968,'WT'},
       {var,968,'PP'}]}]},
   {clause,969,
    [{tuple,969,[{atom,969,prefer_nl},{var,969,'Sep'},{var,969,'LItems'}]},
     {var,969,'I0'},
     {var,969,'ST'},
     {var,969,'WT'},
     {var,969,'PP'}],
    [],
    [{match,970,
      {var,970,'CharsSize2L'},
      {call,970,
       {atom,970,fl},
       [{var,970,'LItems'},
        {var,970,'Sep'},
        {var,970,'I0'},
        {nil,970},
        {var,970,'ST'},
        {var,970,'WT'},
        {var,970,'PP'}]}},
     {match,971,
      {tuple,971,[{var,971,'_CharsL'},{var,971,'Sizes'}]},
      {call,971,{atom,971,unz},[{var,971,'CharsSize2L'}]}},
     {'if',972,
      [{clause,973,[],
        [[{op,973,'=:=',{var,973,'Sizes'},{nil,973}}]],
        [{tuple,974,[{nil,974},{integer,974,0}]}]},
       {clause,975,[],
        [[{atom,975,true}]],
        [{tuple,976,
          [{call,976,
            {atom,976,insert_newlines},
            [{var,976,'CharsSize2L'},{var,976,'I0'},{var,976,'ST'}]},
           {call,976,
            {atom,976,nsz},
            [{call,976,
              {remote,976,{atom,976,lists},{atom,976,last}},
              [{var,976,'Sizes'}]},
             {var,976,'I0'}]}]}]}]}]},
   {clause,978,
    [{tuple,978,[{atom,978,char},{var,978,'C'}]},
     {var,978,'I'},
     {var,978,'ST'},
     {var,978,'WT'},
     {var,978,'PP'}],
    [],
    [{call,979,
      {atom,979,f},
      [{call,979,{atom,979,write_a_char},[{var,979,'C'},{var,979,'PP'}]},
       {var,979,'I'},
       {var,979,'ST'},
       {var,979,'WT'},
       {var,979,'PP'}]}]},
   {clause,980,
    [{tuple,980,[{atom,980,string},{var,980,'S'}]},
     {var,980,'I'},
     {var,980,'ST'},
     {var,980,'WT'},
     {var,980,'PP'}],
    [],
    [{call,981,
      {atom,981,f},
      [{call,981,
        {atom,981,write_a_string},
        [{var,981,'S'},{var,981,'I'},{var,981,'PP'}]},
       {var,981,'I'},
       {var,981,'ST'},
       {var,981,'WT'},
       {var,981,'PP'}]}]},
   {clause,982,
    [{tuple,982,
      [{atom,982,hook},
       {var,982,'HookExpr'},
       {var,982,'Precedence'},
       {var,982,'Func'},
       {var,982,'Options'}]},
     {var,982,'I'},
     {var,982,'_ST'},
     {var,982,'_WT'},
     {var,982,'_PP'}],
    [],
    [{match,983,
      {var,983,'Chars'},
      {call,983,
       {var,983,'Func'},
       [{var,983,'HookExpr'},
        {var,983,'I'},
        {var,983,'Precedence'},
        {var,983,'Options'}]}},
     {tuple,984,
      [{var,984,'Chars'},
       {call,984,{atom,984,indentation},[{var,984,'Chars'},{var,984,'I'}]}]}]},
   {clause,985,
    [{tuple,985,
      [{atom,985,ehook},
       {var,985,'HookExpr'},
       {var,985,'Precedence'},
       {match,985,
        {tuple,985,[{var,985,'Mod'},{var,985,'Func'},{var,985,'Eas'}]},
        {var,985,'ModFuncEas'}}]},
     {var,985,'I'},
     {var,985,'_ST'},
     {var,985,'_WT'},
     {var,985,'_PP'}],
    [],
    [{match,986,
      {var,986,'Chars'},
      {call,986,
       {atom,986,apply},
       [{var,986,'Mod'},
        {var,986,'Func'},
        {cons,986,
         {var,986,'HookExpr'},
         {cons,986,
          {var,986,'I'},
          {cons,986,
           {var,986,'Precedence'},
           {cons,986,{var,986,'ModFuncEas'},{var,986,'Eas'}}}}}]}},
     {tuple,987,
      [{var,987,'Chars'},
       {call,987,{atom,987,indentation},[{var,987,'Chars'},{var,987,'I'}]}]}]},
   {clause,988,
    [{var,988,'WordName'},
     {var,988,'_I'},
     {var,988,'_ST'},
     {var,988,'WT'},
     {var,988,'_PP'}],
    [],
    [{call,989,{atom,989,word},[{var,989,'WordName'},{var,989,'WT'}]}]}]},
 {function,995,fl,7,
  [{clause,995,
    [{nil,995},
     {var,995,'_Sep'},
     {var,995,'I0'},
     {var,995,'After'},
     {var,995,'ST'},
     {var,995,'WT'},
     {var,995,'PP'}],
    [],
    [{cons,996,
      {cons,996,
       {call,996,
        {atom,996,f},
        [{var,996,'After'},
         {var,996,'I0'},
         {var,996,'ST'},
         {var,996,'WT'},
         {var,996,'PP'}]},
       {cons,996,{tuple,996,[{nil,996},{integer,996,0}]},{nil,996}}},
      {nil,996}}]},
   {clause,997,
    [{var,997,'CItems'},
     {var,997,'Sep0'},
     {var,997,'I0'},
     {var,997,'After'},
     {var,997,'ST'},
     {var,997,'WT'},
     {var,997,'PP'}],
    [],
    [{match,998,
      {var,998,'F'},
      {'fun',998,
       {clauses,
        [{clause,998,
          [{tuple,998,[{atom,998,step},{var,998,'Item1'},{var,998,'Item2'}]},
           {var,998,'S'}],
          [],
          [{cons,999,
            {call,999,
             {atom,999,f},
             [{var,999,'Item1'},
              {var,999,'I0'},
              {var,999,'ST'},
              {var,999,'WT'},
              {var,999,'PP'}]},
            {cons,1000,
             {call,1000,
              {atom,1000,f},
              [{cons,1000,
                {var,1000,'Item2'},
                {cons,1000,{var,1000,'S'},{nil,1000}}},
               {call,1000,{atom,1000,incr},[{var,1000,'I0'},{integer,991,4}]},
               {var,1000,'ST'},
               {var,1000,'WT'},
               {var,1000,'PP'}]},
             {nil,1000}}}]},
         {clause,1001,
          [{tuple,1001,
            [{atom,1001,cstep},{var,1001,'Item1'},{var,1001,'Item2'}]},
           {var,1001,'S'}],
          [],
          [{match,1002,
            {tuple,1002,[{var,1002,'_'},{var,1002,'Sz1'}]},
            {match,1002,
             {var,1002,'CharSize1'},
             {call,1002,
              {atom,1002,f},
              [{var,1002,'Item1'},
               {var,1002,'I0'},
               {var,1002,'ST'},
               {var,1002,'WT'},
               {var,1002,'PP'}]}}},
           {'if',1003,
            [{clause,1004,[],
              [[{call,1004,{atom,1004,is_integer},[{var,1004,'Sz1'}]},
                {op,1004,'<',{var,1004,'Sz1'},{integer,991,4}}]],
              [{match,1005,
                {var,1005,'Item2p'},
                {cons,1005,
                 {call,1005,{atom,1005,leaf},[{string,1005," "}]},
                 {cons,1005,
                  {var,1005,'Item2'},
                  {cons,1005,{var,1005,'S'},{nil,1005}}}}},
               {cons,1006,
                {call,1006,
                 {atom,1006,consecutive},
                 [{var,1006,'Item2p'},
                  {var,1006,'CharSize1'},
                  {var,1006,'I0'},
                  {var,1006,'ST'},
                  {var,1006,'WT'},
                  {var,1006,'PP'}]},
                {cons,1006,
                 {tuple,1006,[{nil,1006},{integer,1006,0}]},
                 {nil,1006}}}]},
             {clause,1007,[],
              [[{atom,1007,true}]],
              [{cons,1008,
                {var,1008,'CharSize1'},
                {cons,1008,
                 {call,1008,
                  {atom,1008,f},
                  [{cons,1008,
                    {var,1008,'Item2'},
                    {cons,1008,{var,1008,'S'},{nil,1008}}},
                   {call,1008,
                    {atom,1008,incr},
                    [{var,1008,'I0'},{integer,991,4}]},
                   {var,1008,'ST'},
                   {var,1008,'WT'},
                   {var,1008,'PP'}]},
                 {nil,1008}}}]}]}]},
         {clause,1010,
          [{var,1010,'Item'},{var,1010,'S'}],
          [],
          [{cons,1011,
            {call,1011,
             {atom,1011,f},
             [{cons,1011,
               {var,1011,'Item'},
               {cons,1011,{var,1011,'S'},{nil,1011}}},
              {var,1011,'I0'},
              {var,1011,'ST'},
              {var,1011,'WT'},
              {var,1011,'PP'}]},
            {cons,1011,
             {tuple,1011,[{nil,1011},{integer,1011,0}]},
             {nil,1011}}}]}]}}},
     {match,1013,
      {tuple,1013,[{var,1013,'Sep'},{var,1013,'LastSep'}]},
      {'case',1013,
       {var,1013,'Sep0'},
       [{clause,1013,
         [{tuple,1013,[{var,1013,'_'},{var,1013,'_'}]}],
         [],
         [{var,1013,'Sep0'}]},
        {clause,1013,
         [{var,1013,'_'}],
         [],
         [{tuple,1013,[{var,1013,'Sep0'},{var,1013,'Sep0'}]}]}]}},
     {call,1014,
      {atom,1014,fl1},
      [{var,1014,'CItems'},
       {var,1014,'F'},
       {var,1014,'Sep'},
       {var,1014,'LastSep'},
       {var,1014,'After'}]}]}]},
 {function,1016,fl1,5,
  [{clause,1016,
    [{cons,1016,{var,1016,'CItem'},{nil,1016}},
     {var,1016,'F'},
     {var,1016,'_Sep'},
     {var,1016,'_LastSep'},
     {var,1016,'After'}],
    [],
    [{cons,1017,
      {call,1017,{var,1017,'F'},[{var,1017,'CItem'},{var,1017,'After'}]},
      {nil,1017}}]},
   {clause,1018,
    [{cons,1018,
      {var,1018,'CItem1'},
      {cons,1018,{var,1018,'CItem2'},{nil,1018}}},
     {var,1018,'F'},
     {var,1018,'_Sep'},
     {var,1018,'LastSep'},
     {var,1018,'After'}],
    [],
    [{cons,1019,
      {call,1019,{var,1019,'F'},[{var,1019,'CItem1'},{var,1019,'LastSep'}]},
      {cons,1019,
       {call,1019,{var,1019,'F'},[{var,1019,'CItem2'},{var,1019,'After'}]},
       {nil,1019}}}]},
   {clause,1020,
    [{cons,1020,{var,1020,'CItem'},{var,1020,'CItems'}},
     {var,1020,'F'},
     {var,1020,'Sep'},
     {var,1020,'LastSep'},
     {var,1020,'After'}],
    [],
    [{cons,1021,
      {call,1021,{var,1021,'F'},[{var,1021,'CItem'},{var,1021,'Sep'}]},
      {call,1021,
       {atom,1021,fl1},
       [{var,1021,'CItems'},
        {var,1021,'F'},
        {var,1021,'Sep'},
        {var,1021,'LastSep'},
        {var,1021,'After'}]}}]}]},
 {function,1023,consecutive,6,
  [{clause,1023,
    [{var,1023,'Items'},
     {var,1023,'CharSize1'},
     {var,1023,'I0'},
     {var,1023,'ST'},
     {var,1023,'WT'},
     {var,1023,'PP'}],
    [],
    [{match,1024,
      {tuple,1024,[{var,1024,'CharsSizes'},{var,1024,'_Length'}]},
      {call,1025,
       {atom,1025,mapfoldl},
       [{'fun',1025,
         {clauses,
          [{clause,1025,
            [{var,1025,'Item'},{var,1025,'Len'}],
            [],
            [{match,1026,
              {var,1026,'CharsSize'},
              {call,1026,
               {atom,1026,f},
               [{var,1026,'Item'},
                {var,1026,'Len'},
                {var,1026,'ST'},
                {var,1026,'WT'},
                {var,1026,'PP'}]}},
             {tuple,1027,
              [{var,1027,'CharsSize'},
               {call,1027,
                {atom,1027,indent},
                [{var,1027,'CharsSize'},{var,1027,'Len'}]}]}]}]}},
        {call,1028,
         {atom,1028,indent},
         [{var,1028,'CharSize1'},{var,1028,'I0'}]},
        {var,1028,'Items'}]}},
     {match,1029,
      {tuple,1029,[{var,1029,'CharsL'},{var,1029,'SizeL'}]},
      {call,1029,
       {atom,1029,unz1},
       [{cons,1029,{var,1029,'CharSize1'},{var,1029,'CharsSizes'}}]}},
     {tuple,1030,
      [{var,1030,'CharsL'},
       {call,1030,{atom,1030,line_size},[{var,1030,'SizeL'}]}]}]}]},
 {function,1032,unz,1,
  [{clause,1032,
    [{var,1032,'CharsSizesL'}],
    [],
    [{call,1033,
      {atom,1033,unz1},
      [{call,1033,{atom,1033,append},[{var,1033,'CharsSizesL'}]}]}]}]},
 {function,1035,unz1,1,
  [{clause,1035,
    [{var,1035,'CharSizes'}],
    [],
    [{call,1036,
      {remote,1036,{atom,1036,lists},{atom,1036,unzip}},
      [{call,1036,{atom,1036,nonzero},[{var,1036,'CharSizes'}]}]}]}]},
 {function,1038,nonzero,1,
  [{clause,1038,
    [{var,1038,'CharSizes'}],
    [],
    [{call,1039,
      {remote,1039,{atom,1039,lists},{atom,1039,filter}},
      [{'fun',1039,
        {clauses,
         [{clause,1039,
           [{tuple,1039,[{var,1039,'_'},{var,1039,'Sz'}]}],
           [],
           [{op,1039,'=/=',{var,1039,'Sz'},{integer,1039,0}}]}]}},
       {var,1039,'CharSizes'}]}]}]},
 {function,1041,insert_newlines,3,
  [{clause,1041,
    [{var,1041,'CharsSizesL'},{var,1041,'I'},{var,1041,'ST'}],
    [[{op,1041,'>=',{var,1041,'I'},{integer,1041,0}}]],
    [{call,1042,
      {atom,1042,insert_nl},
      [{call,1042,
        {atom,1042,foldr},
        [{'fun',1042,
          {clauses,
           [{clause,1042,
             [{cons,1042,
               {tuple,1042,[{var,1042,'_C1'},{integer,1042,0}]},
               {cons,1042,
                {tuple,1042,[{var,1042,'_C2'},{integer,1042,0}]},
                {nil,1042}}},
              {var,1042,'A'}],
             [],
             [{var,1043,'A'}]},
            {clause,1044,
             [{cons,1044,
               {tuple,1044,[{var,1044,'C1'},{var,1044,'_Sz1'}]},
               {cons,1044,
                {tuple,1044,[{var,1044,'_C2'},{integer,1044,0}]},
                {nil,1044}}},
              {var,1044,'A'}],
             [],
             [{cons,1045,{var,1045,'C1'},{var,1045,'A'}}]},
            {clause,1046,
             [{cons,1046,
               {tuple,1046,[{var,1046,'C1'},{var,1046,'_Sz1'}]},
               {cons,1046,
                {tuple,1046,[{var,1046,'C2'},{var,1046,'Sz2'}]},
                {nil,1046}}},
              {var,1046,'A'}],
             [[{op,1046,'>',{var,1046,'Sz2'},{integer,1046,0}}]],
             [{cons,1047,
               {call,1047,
                {atom,1047,insert_nl},
                [{cons,1047,
                  {var,1047,'C1'},
                  {cons,1047,{var,1047,'C2'},{nil,1047}}},
                 {op,1047,'+',{var,1047,'I'},{integer,991,4}},
                 {var,1047,'ST'}]},
               {var,1047,'A'}}]}]}},
         {nil,1048},
         {var,1048,'CharsSizesL'}]},
       {var,1048,'I'},
       {var,1048,'ST'}]}]}]},
 {function,1051,insert_nl,3,
  [{clause,1051,
    [{var,1051,'CharsL'},{var,1051,'I'},{var,1051,'ST'}],
    [],
    [{call,1052,
      {atom,1052,insert_sep},
      [{var,1052,'CharsL'},
       {call,1052,
        {atom,1052,nl_indent},
        [{var,1052,'I'},{var,1052,'ST'}]}]}]}]},
 {function,1054,insert_sep,2,
  [{clause,1054,
    [{cons,1054,{var,1054,'Chars1'},{var,1054,'CharsL'}},{var,1054,'Sep'}],
    [],
    [{cons,1055,
      {var,1055,'Chars1'},
      {lc,1055,
       {cons,1055,{var,1055,'Sep'},{cons,1055,{var,1055,'Chars'},{nil,1055}}},
       [{generate,1055,{var,1055,'Chars'},{var,1055,'CharsL'}}]}}]}]},
 {function,1057,nl_indent,2,
  [{clause,1057,[{integer,1057,0},{var,1057,'_T'}],[],[{char,1058,10}]},
   {clause,1059,
    [{var,1059,'I'},{var,1059,'T'}],
    [[{op,1059,'>',{var,1059,'I'},{integer,1059,0}}]],
    [{cons,1060,
      {char,1060,10},
      {call,1060,{atom,1060,spaces},[{var,1060,'I'},{var,1060,'T'}]}}]}]},
 {function,1062,same_line,3,
  [{clause,1062,
    [{var,1062,'I0'},{var,1062,'SizeL'},{var,1062,'NSepChars'}],
    [],
    [{'try',1063,
      [{match,1064,
        {var,1064,'Size'},
        {op,1064,'+',
         {call,1064,
          {remote,1064,{atom,1064,lists},{atom,1064,sum}},
          [{var,1064,'SizeL'}]},
         {var,1064,'NSepChars'}}},
       {match,1065,
        {atom,1065,true},
        {op,1065,'=<',
         {call,1065,{atom,1065,incr},[{var,1065,'I0'},{var,1065,'Size'}]},
         {integer,34,72}}},
       {tuple,1066,[{atom,1066,yes},{var,1066,'Size'}]}],
      [],
      [{clause,1067,
        [{tuple,1067,[{var,1067,'_'},{var,1067,'_'},{var,1067,'_'}]}],
        [],
        [{atom,1068,no}]}],
      []}]}]},
 {function,1071,line_size,1,
  [{clause,1071,
    [{var,1071,'SizeL'}],
    [],
    [{call,1072,
      {atom,1072,line_size},
      [{var,1072,'SizeL'},{integer,1072,0},{atom,1072,false}]}]}]},
 {function,1074,line_size,3,
  [{clause,1074,
    [{nil,1074},{var,1074,'Size'},{atom,1074,false}],
    [],
    [{var,1075,'Size'}]},
   {clause,1076,
    [{nil,1076},{var,1076,'Size'},{atom,1076,true}],
    [],
    [{tuple,1077,[{atom,1077,line},{var,1077,'Size'}]}]},
   {clause,1078,
    [{cons,1078,
      {tuple,1078,[{atom,1078,line},{var,1078,'Len'}]},
      {var,1078,'SizeL'}},
     {var,1078,'_'},
     {var,1078,'_'}],
    [],
    [{call,1079,
      {atom,1079,line_size},
      [{var,1079,'SizeL'},{var,1079,'Len'},{atom,1079,true}]}]},
   {clause,1080,
    [{cons,1080,{var,1080,'Sz'},{var,1080,'SizeL'}},
     {var,1080,'SizeSoFar'},
     {var,1080,'LF'}],
    [],
    [{call,1081,
      {atom,1081,line_size},
      [{var,1081,'SizeL'},
       {op,1081,'+',{var,1081,'SizeSoFar'},{var,1081,'Sz'}},
       {var,1081,'LF'}]}]}]},
 {function,1083,nsz,2,
  [{clause,1083,
    [{match,1083,
      {tuple,1083,[{atom,1083,line},{var,1083,'_Len'}]},
      {var,1083,'Sz'}},
     {var,1083,'_I'}],
    [],
    [{var,1084,'Sz'}]},
   {clause,1085,
    [{var,1085,'Size'},{var,1085,'I'}],
    [[{op,1085,'>=',{var,1085,'I'},{integer,1085,0}}]],
    [{tuple,1086,
      [{atom,1086,line},{op,1086,'+',{var,1086,'Size'},{var,1086,'I'}}]}]}]},
 {function,1088,indent,2,
  [{clause,1088,
    [{tuple,1088,
      [{var,1088,'_Chars'},{tuple,1088,[{atom,1088,line},{var,1088,'Len'}]}]},
     {var,1088,'_I'}],
    [],
    [{var,1089,'Len'}]},
   {clause,1090,
    [{tuple,1090,[{var,1090,'_Chars'},{var,1090,'Size'}]},{var,1090,'I'}],
    [],
    [{call,1091,{atom,1091,incr},[{var,1091,'I'},{var,1091,'Size'}]}]}]},
 {function,1093,incr,2,
  [{clause,1093,
    [{var,1093,'I'},{var,1093,'_Incr'}],
    [[{op,1093,'<',{var,1093,'I'},{integer,1093,0}}]],
    [{var,1094,'I'}]},
   {clause,1095,
    [{var,1095,'I'},{var,1095,'Incr'}],
    [],
    [{op,1096,'+',{var,1096,'I'},{var,1096,'Incr'}}]}]},
 {function,1098,indentation,2,
  [{clause,1098,
    [{var,1098,'E'},{var,1098,'I'}],
    [[{op,1098,'<',{var,1098,'I'},{integer,1098,0}}]],
    [{call,1099,{atom,1099,chars_size},[{var,1099,'E'}]}]},
   {clause,1100,
    [{var,1100,'E'},{var,1100,'I0'}],
    [],
    [{match,1101,
      {var,1101,'I'},
      {call,1101,
       {remote,1101,{atom,1101,io_lib_format},{atom,1101,indentation}},
       [{var,1101,'E'},{var,1101,'I0'}]}},
     {'case',1102,
      {call,1102,{atom,1102,has_nl},[{var,1102,'E'}]},
      [{clause,1103,
        [{atom,1103,true}],
        [],
        [{tuple,1103,[{atom,1103,line},{var,1103,'I'}]}]},
       {clause,1104,[{atom,1104,false}],[],[{var,1104,'I'}]}]}]}]},
 {function,1107,has_nl,1,
  [{clause,1107,
    [{cons,1107,{char,1107,10},{var,1107,'_'}}],
    [],
    [{atom,1108,true}]},
   {clause,1109,
    [{cons,1109,{var,1109,'C'},{var,1109,'Cs'}}],
    [[{call,1109,{atom,1109,is_integer},[{var,1109,'C'}]}]],
    [{call,1110,{atom,1110,has_nl},[{var,1110,'Cs'}]}]},
   {clause,1111,
    [{cons,1111,{var,1111,'C'},{var,1111,'Cs'}}],
    [],
    [{op,1112,'orelse',
      {call,1112,{atom,1112,has_nl},[{var,1112,'C'}]},
      {call,1112,{atom,1112,has_nl},[{var,1112,'Cs'}]}}]},
   {clause,1113,[{nil,1113}],[],[{atom,1114,false}]}]},
 {function,1116,write_a_char,2,
  [{clause,1116,
    [{var,1116,'C'},{var,1116,'PP'}],
    [],
    [{call,1117,
      {atom,1117,flat_leaf},
      [{call,1117,
        {atom,1117,write_char},
        [{var,1117,'C'},{var,1117,'PP'}]}]}]}]},
 {function,1121,write_a_string,3,
  [{clause,1121,
    [{var,1121,'S'},{var,1121,'I'},{var,1121,'PP'}],
    [[{op,1121,'<',{var,1121,'I'},{integer,1121,0}}],
     [{op,1121,'=:=',{var,1121,'S'},{nil,1121}}]],
    [{call,1122,
      {atom,1122,flat_leaf},
      [{call,1122,
        {atom,1122,write_string},
        [{var,1122,'S'},{var,1122,'PP'}]}]}]},
   {clause,1123,
    [{var,1123,'S'},{var,1123,'I'},{var,1123,'PP'}],
    [],
    [{match,1124,
      {var,1124,'Len'},
      {call,1124,
       {remote,1124,{atom,1124,erlang},{atom,1124,max}},
       [{op,1124,'-',{integer,34,72},{var,1124,'I'}},{integer,1119,5}]}},
     {tuple,1125,
      [{atom,1125,list},
       {call,1125,
        {atom,1125,write_a_string},
        [{var,1125,'S'},
         {var,1125,'Len'},
         {var,1125,'Len'},
         {var,1125,'PP'}]}]}]}]},
 {function,1127,write_a_string,4,
  [{clause,1127,
    [{nil,1127},{var,1127,'_N'},{var,1127,'_Len'},{var,1127,'_PP'}],
    [],
    [{nil,1128}]},
   {clause,1129,
    [{var,1129,'S'},{var,1129,'N'},{var,1129,'Len'},{var,1129,'PP'}],
    [],
    [{match,1130,
      {var,1130,'SS'},
      {call,1130,
       {remote,1130,{atom,1130,string},{atom,1130,sub_string}},
       [{var,1130,'S'},{integer,1130,1},{var,1130,'N'}]}},
     {match,1131,
      {var,1131,'Sl'},
      {call,1131,{atom,1131,write_string},[{var,1131,'SS'},{var,1131,'PP'}]}},
     {'case',1132,
      {op,1132,'and',
       {op,1132,'>',
        {call,1132,{atom,1132,length},[{var,1132,'Sl'}]},
        {var,1132,'Len'}},
       {op,1132,'>',{var,1132,'N'},{integer,1119,5}}},
      [{clause,1133,
        [{atom,1133,true}],
        [],
        [{call,1134,
          {atom,1134,write_a_string},
          [{var,1134,'S'},
           {op,1134,'-',{var,1134,'N'},{integer,1134,1}},
           {var,1134,'Len'},
           {var,1134,'PP'}]}]},
       {clause,1135,
        [{atom,1135,false}],
        [],
        [{cons,1136,
          {call,1136,{atom,1136,flat_leaf},[{var,1136,'Sl'}]},
          {call,1137,
           {atom,1137,write_a_string},
           [{call,1137,
             {remote,1137,{atom,1137,lists},{atom,1137,nthtail}},
             [{call,1137,{atom,1137,length},[{var,1137,'SS'}]},
              {var,1137,'S'}]},
            {var,1137,'Len'},
            {var,1137,'Len'},
            {var,1137,'PP'}]}}]}]}]}]},
 {function,1140,flat_leaf,1,
  [{clause,1140,
    [{var,1140,'S'}],
    [],
    [{match,1141,
      {var,1141,'L'},
      {call,1141,
       {remote,1141,{atom,1141,lists},{atom,1141,flatten}},
       [{var,1141,'S'}]}},
     {tuple,1142,
      [{atom,1142,leaf},
       {call,1142,{atom,1142,length},[{var,1142,'L'}]},
       {var,1142,'L'}]}]}]},
 {function,1144,write_string,2,
  [{clause,1144,
    [{var,1144,'S'},{var,1144,'PP'}],
    [],
    [{call,1145,
      {remote,1145,{atom,1145,lists},{atom,1145,flatten}},
      [{call,1145,
        {call,1145,
         {remote,1145,{atom,1145,erlang},{atom,1145,element}},
         [{integer,1145,2},{var,1145,'PP'}]},
        [{var,1145,'S'}]}]}]}]},
 {function,1147,write_char,2,
  [{clause,1147,
    [{var,1147,'C'},{var,1147,'PP'}],
    [],
    [{call,1148,
      {remote,1148,{atom,1148,lists},{atom,1148,flatten}},
      [{call,1148,
        {call,1148,
         {remote,1148,{atom,1148,erlang},{atom,1148,element}},
         [{integer,1148,3},{var,1148,'PP'}]},
        [{var,1148,'C'}]}]}]}]},
 {function,1154,a0,0,
  [{clause,1154,[],[],
    [{call,1155,
      {remote,1155,{atom,1155,erl_anno},{atom,1155,new}},
      [{integer,1155,0}]}]}]},
 {function,1157,chars_size,1,
  [{clause,1157,
    [{cons,1157,{var,1157,'C'},{var,1157,'Es'}}],
    [[{call,1157,{atom,1157,is_integer},[{var,1157,'C'}]}]],
    [{op,1158,'+',
      {integer,1158,1},
      {call,1158,{atom,1158,chars_size},[{var,1158,'Es'}]}}]},
   {clause,1159,
    [{cons,1159,{var,1159,'E'},{var,1159,'Es'}}],
    [],
    [{op,1160,'+',
      {call,1160,{atom,1160,chars_size},[{var,1160,'E'}]},
      {call,1160,{atom,1160,chars_size},[{var,1160,'Es'}]}}]},
   {clause,1161,[{nil,1161}],[],[{integer,1162,0}]},
   {clause,1163,
    [{var,1163,'B'}],
    [[{call,1163,{atom,1163,is_binary},[{var,1163,'B'}]}]],
    [{call,1164,{atom,1164,byte_size},[{var,1164,'B'}]}]}]},
 {function,1168,spacetab,0,
  [{clause,1168,[],[],
    [{match,1169,
      {tuple,1169,[{cons,1169,{var,1169,'_'},{var,1169,'L'}},{var,1169,'_'}]},
      {call,1169,
       {atom,1169,mapfoldl},
       [{'fun',1169,
         {clauses,
          [{clause,1169,
            [{var,1169,'_'},{var,1169,'A'}],
            [],
            [{tuple,1169,
              [{var,1169,'A'},{cons,1169,{char,1169,32},{var,1169,'A'}}]}]}]}},
        {nil,1170},
        {call,1170,
         {remote,1170,{atom,1170,lists},{atom,1170,seq}},
         [{integer,1170,0},{integer,1166,30}]}]}},
     {call,1171,{atom,1171,list_to_tuple},[{var,1171,'L'}]}]}]},
 {function,1173,spaces,2,
  [{clause,1173,
    [{var,1173,'N'},{var,1173,'T'}],
    [[{op,1173,'=<',{var,1173,'N'},{integer,1166,30}}]],
    [{call,1174,{atom,1174,element},[{var,1174,'N'},{var,1174,'T'}]}]},
   {clause,1175,
    [{var,1175,'N'},{var,1175,'T'}],
    [],
    [{cons,1176,
      {call,1176,{atom,1176,element},[{integer,1166,30},{var,1176,'T'}]},
      {call,1176,
       {atom,1176,spaces},
       [{op,1176,'-',{var,1176,'N'},{integer,1166,30}},{var,1176,'T'}]}}]}]},
 {function,1178,wordtable,0,
  [{clause,1178,[],[],
    [{match,1179,
      {var,1179,'L'},
      {lc,1179,
       {block,1179,
        [{match,1179,
          {tuple,1179,[{atom,1179,leaf},{var,1179,'Sz'},{var,1179,'S'}]},
          {call,1179,{atom,1179,leaf},[{var,1179,'W'}]}},
         {tuple,1179,[{var,1179,'S'},{var,1179,'Sz'}]}]},
       [{generate,1180,
         {var,1180,'W'},
         {cons,1180,
          {string,1180," ->"},
          {cons,1180,
           {string,1180," ="},
           {cons,1180,
            {string,1180,"<<"},
            {cons,1180,
             {string,1180,">>"},
             {cons,1180,
              {string,1180,"[]"},
              {cons,1180,
               {string,1180,"after"},
               {cons,1180,
                {string,1180,"begin"},
                {cons,1180,
                 {string,1180,"case"},
                 {cons,1180,
                  {string,1180,"catch"},
                  {cons,1181,
                   {string,1181,"end"},
                   {cons,1181,
                    {string,1181,"fun"},
                    {cons,1181,
                     {string,1181,"if"},
                     {cons,1181,
                      {string,1181,"of"},
                      {cons,1181,
                       {string,1181,"receive"},
                       {cons,1181,
                        {string,1181,"try"},
                        {cons,1181,
                         {string,1181,"when"},
                         {cons,1181,
                          {string,1181," ::"},
                          {cons,1181,
                           {string,1181,".."},
                           {cons,1182,
                            {string,1182," |"},
                            {nil,1182}}}}}}}}}}}}}}}}}}}}}]}},
     {call,1183,{atom,1183,list_to_tuple},[{var,1183,'L'}]}]}]},
 {function,1185,word,2,
  [{clause,1185,
    [{atom,1185,' ->'},{var,1185,'WT'}],
    [],
    [{call,1185,{atom,1185,element},[{integer,1185,1},{var,1185,'WT'}]}]},
   {clause,1186,
    [{atom,1186,' ='},{var,1186,'WT'}],
    [],
    [{call,1186,{atom,1186,element},[{integer,1186,2},{var,1186,'WT'}]}]},
   {clause,1187,
    [{atom,1187,'<<'},{var,1187,'WT'}],
    [],
    [{call,1187,{atom,1187,element},[{integer,1187,3},{var,1187,'WT'}]}]},
   {clause,1188,
    [{atom,1188,'>>'},{var,1188,'WT'}],
    [],
    [{call,1188,{atom,1188,element},[{integer,1188,4},{var,1188,'WT'}]}]},
   {clause,1189,
    [{atom,1189,'[]'},{var,1189,'WT'}],
    [],
    [{call,1189,{atom,1189,element},[{integer,1189,5},{var,1189,'WT'}]}]},
   {clause,1190,
    [{atom,1190,'after'},{var,1190,'WT'}],
    [],
    [{call,1190,{atom,1190,element},[{integer,1190,6},{var,1190,'WT'}]}]},
   {clause,1191,
    [{atom,1191,'begin'},{var,1191,'WT'}],
    [],
    [{call,1191,{atom,1191,element},[{integer,1191,7},{var,1191,'WT'}]}]},
   {clause,1192,
    [{atom,1192,'case'},{var,1192,'WT'}],
    [],
    [{call,1192,{atom,1192,element},[{integer,1192,8},{var,1192,'WT'}]}]},
   {clause,1193,
    [{atom,1193,'catch'},{var,1193,'WT'}],
    [],
    [{call,1193,{atom,1193,element},[{integer,1193,9},{var,1193,'WT'}]}]},
   {clause,1194,
    [{atom,1194,'end'},{var,1194,'WT'}],
    [],
    [{call,1194,{atom,1194,element},[{integer,1194,10},{var,1194,'WT'}]}]},
   {clause,1195,
    [{atom,1195,'fun'},{var,1195,'WT'}],
    [],
    [{call,1195,{atom,1195,element},[{integer,1195,11},{var,1195,'WT'}]}]},
   {clause,1196,
    [{atom,1196,'if'},{var,1196,'WT'}],
    [],
    [{call,1196,{atom,1196,element},[{integer,1196,12},{var,1196,'WT'}]}]},
   {clause,1197,
    [{atom,1197,'of'},{var,1197,'WT'}],
    [],
    [{call,1197,{atom,1197,element},[{integer,1197,13},{var,1197,'WT'}]}]},
   {clause,1198,
    [{atom,1198,'receive'},{var,1198,'WT'}],
    [],
    [{call,1198,{atom,1198,element},[{integer,1198,14},{var,1198,'WT'}]}]},
   {clause,1199,
    [{atom,1199,'try'},{var,1199,'WT'}],
    [],
    [{call,1199,{atom,1199,element},[{integer,1199,15},{var,1199,'WT'}]}]},
   {clause,1200,
    [{atom,1200,'when'},{var,1200,'WT'}],
    [],
    [{call,1200,{atom,1200,element},[{integer,1200,16},{var,1200,'WT'}]}]},
   {clause,1201,
    [{atom,1201,' ::'},{var,1201,'WT'}],
    [],
    [{call,1201,{atom,1201,element},[{integer,1201,17},{var,1201,'WT'}]}]},
   {clause,1202,
    [{atom,1202,'..'},{var,1202,'WT'}],
    [],
    [{call,1202,{atom,1202,element},[{integer,1202,18},{var,1202,'WT'}]}]},
   {clause,1203,
    [{atom,1203,' |'},{var,1203,'WT'}],
    [],
    [{call,1203,{atom,1203,element},[{integer,1203,19},{var,1203,'WT'}]}]}]}]
