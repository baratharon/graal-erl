global
[]
[]
[{function,161,start,0,
  [{clause,161,[],[],
    [{call,162,
      {remote,162,{atom,162,gen_server},{atom,162,start}},
      [{tuple,162,[{atom,162,local},{atom,162,global_name_server}]},
       {atom,-1,global},
       {nil,162},
       {nil,162}]}]}]},
 {function,164,start_link,0,
  [{clause,164,[],[],
    [{call,165,
      {remote,165,{atom,165,gen_server},{atom,165,start_link}},
      [{tuple,165,[{atom,165,local},{atom,165,global_name_server}]},
       {atom,-1,global},
       {nil,165},
       {nil,165}]}]}]},
 {function,167,stop,0,
  [{clause,167,[],[],
    [{call,168,
      {remote,168,{atom,168,gen_server},{atom,168,call}},
      [{atom,168,global_name_server},{atom,168,stop},{atom,168,infinity}]}]}]},
 {function,171,sync,0,
  [{clause,171,[],[],
    [{'case',172,
      {call,172,{atom,172,check_sync_nodes},[]},
      [{clause,173,
        [{match,173,
          {tuple,173,[{atom,173,error},{var,173,'_'}]},
          {var,173,'Error'}}],
        [],
        [{var,174,'Error'}]},
       {clause,175,
        [{var,175,'SyncNodes'}],
        [],
        [{call,176,
          {remote,176,{atom,176,gen_server},{atom,176,call}},
          [{atom,176,global_name_server},
           {tuple,176,[{atom,176,sync},{var,176,'SyncNodes'}]},
           {atom,176,infinity}]}]}]}]}]},
 {function,180,sync,1,
  [{clause,180,
    [{var,180,'Nodes'}],
    [],
    [{'case',181,
      {call,181,{atom,181,check_sync_nodes},[{var,181,'Nodes'}]},
      [{clause,182,
        [{match,182,
          {tuple,182,[{atom,182,error},{var,182,'_'}]},
          {var,182,'Error'}}],
        [],
        [{var,183,'Error'}]},
       {clause,184,
        [{var,184,'SyncNodes'}],
        [],
        [{call,185,
          {remote,185,{atom,185,gen_server},{atom,185,call}},
          [{atom,185,global_name_server},
           {tuple,185,[{atom,185,sync},{var,185,'SyncNodes'}]},
           {atom,185,infinity}]}]}]}]}]},
 {function,192,send,2,
  [{clause,192,
    [{var,192,'Name'},{var,192,'Msg'}],
    [],
    [{'case',193,
      {call,193,{atom,193,whereis_name},[{var,193,'Name'}]},
      [{clause,194,
        [{var,194,'Pid'}],
        [[{call,194,{atom,194,is_pid},[{var,194,'Pid'}]}]],
        [{op,195,'!',{var,195,'Pid'},{var,195,'Msg'}},{var,196,'Pid'}]},
       {clause,197,
        [{atom,197,undefined}],
        [],
        [{call,198,
          {atom,198,exit},
          [{tuple,198,
            [{atom,198,badarg},
             {tuple,198,[{var,198,'Name'},{var,198,'Msg'}]}]}]}]}]}]}]},
 {function,204,whereis_name,1,
  [{clause,204,
    [{var,204,'Name'}],
    [],
    [{call,205,{atom,205,where},[{var,205,'Name'}]}]}]},
 {function,207,node_disconnected,1,
  [{clause,207,
    [{var,207,'Node'}],
    [],
    [{op,208,'!',
      {atom,208,global_name_server},
      {tuple,208,[{atom,208,nodedown},{var,208,'Node'}]}}]}]},
 {function,226,register_name,2,
  [{clause,226,
    [{var,226,'Name'},{var,226,'Pid'}],
    [[{call,226,{atom,226,is_pid},[{var,226,'Pid'}]}]],
    [{call,227,
      {atom,227,register_name},
      [{var,227,'Name'},
       {var,227,'Pid'},
       {'fun',227,{function,random_exit_name,3}}]}]}]},
 {function,236,register_name,3,
  [{clause,236,
    [{var,236,'Name'},{var,236,'Pid'},{var,236,'Method0'}],
    [[{call,236,{atom,236,is_pid},[{var,236,'Pid'}]}]],
    [{match,237,
      {var,237,'Method'},
      {call,237,{atom,237,allow_tuple_fun},[{var,237,'Method0'}]}},
     {match,238,
      {var,238,'Fun'},
      {'fun',238,
       {clauses,
        [{clause,238,
          [{var,238,'Nodes'}],
          [],
          [{'case',239,
            {op,239,'andalso',
             {op,239,'=:=',
              {call,239,{atom,239,where},[{var,239,'Name'}]},
              {atom,239,undefined}},
             {call,239,
              {atom,239,check_dupname},
              [{var,239,'Name'},{var,239,'Pid'}]}},
            [{clause,240,
              [{atom,240,true}],
              [],
              [{call,241,
                {remote,241,{atom,241,gen_server},{atom,241,multi_call}},
                [{var,241,'Nodes'},
                 {atom,242,global_name_server},
                 {tuple,243,
                  [{atom,243,register},
                   {var,243,'Name'},
                   {var,243,'Pid'},
                   {var,243,'Method'}]}]},
               {atom,244,yes}]},
             {clause,245,[{var,245,'_'}],[],[{atom,246,no}]}]}]}]}}},
     {atom,61,ok},
     {call,250,
      {remote,250,{atom,250,gen_server},{atom,250,call}},
      [{atom,250,global_name_server},
       {tuple,250,[{atom,250,registrar},{var,250,'Fun'}]},
       {atom,250,infinity}]}]}]},
 {function,252,check_dupname,2,
  [{clause,252,
    [{var,252,'Name'},{var,252,'Pid'}],
    [],
    [{'case',253,
      {call,253,
       {remote,253,{atom,253,ets},{atom,253,lookup}},
       [{atom,253,global_pid_names},{var,253,'Pid'}]},
      [{clause,254,[{nil,254}],[],[{atom,255,true}]},
       {clause,256,
        [{var,256,'PidNames'}],
        [],
        [{'case',257,
          {call,257,
           {remote,257,{atom,257,application},{atom,257,get_env}},
           [{atom,257,kernel},{atom,51,global_multi_name_action}]},
          [{clause,258,
            [{tuple,258,[{atom,258,ok},{atom,258,allow}]}],
            [],
            [{atom,259,true}]},
           {clause,260,
            [{var,260,'_'}],
            [],
            [{match,261,
              {var,261,'S'},
              {string,261,"global: ~w registered under several names: ~w\n"}},
             {match,262,
              {var,262,'Names'},
              {cons,262,
               {var,262,'Name'},
               {lc,262,
                {var,262,'Name1'},
                [{generate,262,
                  {tuple,262,[{var,262,'_Pid'},{var,262,'Name1'}]},
                  {var,262,'PidNames'}}]}}},
             {call,263,
              {remote,263,{atom,263,error_logger},{atom,263,error_msg}},
              [{var,263,'S'},
               {cons,263,
                {var,263,'Pid'},
                {cons,263,{var,263,'Names'},{nil,263}}}]},
             {atom,264,false}]}]}]}]}]}]},
 {function,270,unregister_name,1,
  [{clause,270,
    [{var,270,'Name'}],
    [],
    [{'case',271,
      {call,271,{atom,271,where},[{var,271,'Name'}]},
      [{clause,272,[{atom,272,undefined}],[],[{atom,273,ok}]},
       {clause,274,
        [{var,274,'_'}],
        [],
        [{match,275,
          {var,275,'Fun'},
          {'fun',275,
           {clauses,
            [{clause,275,
              [{var,275,'Nodes'}],
              [],
              [{call,276,
                {remote,276,{atom,276,gen_server},{atom,276,multi_call}},
                [{var,276,'Nodes'},
                 {atom,277,global_name_server},
                 {tuple,278,[{atom,278,unregister},{var,278,'Name'}]}]},
               {atom,279,ok}]}]}}},
         {atom,61,ok},
         {call,282,
          {remote,282,{atom,282,gen_server},{atom,282,call}},
          [{atom,282,global_name_server},
           {tuple,282,[{atom,282,registrar},{var,282,'Fun'}]},
           {atom,282,infinity}]}]}]}]}]},
 {function,288,re_register_name,2,
  [{clause,288,
    [{var,288,'Name'},{var,288,'Pid'}],
    [[{call,288,{atom,288,is_pid},[{var,288,'Pid'}]}]],
    [{call,289,
      {atom,289,re_register_name},
      [{var,289,'Name'},
       {var,289,'Pid'},
       {'fun',289,{function,random_exit_name,3}}]}]}]},
 {function,295,re_register_name,3,
  [{clause,295,
    [{var,295,'Name'},{var,295,'Pid'},{var,295,'Method0'}],
    [[{call,295,{atom,295,is_pid},[{var,295,'Pid'}]}]],
    [{match,296,
      {var,296,'Method'},
      {call,296,{atom,296,allow_tuple_fun},[{var,296,'Method0'}]}},
     {match,297,
      {var,297,'Fun'},
      {'fun',297,
       {clauses,
        [{clause,297,
          [{var,297,'Nodes'}],
          [],
          [{call,298,
            {remote,298,{atom,298,gen_server},{atom,298,multi_call}},
            [{var,298,'Nodes'},
             {atom,299,global_name_server},
             {tuple,300,
              [{atom,300,register},
               {var,300,'Name'},
               {var,300,'Pid'},
               {var,300,'Method'}]}]},
           {atom,301,yes}]}]}}},
     {atom,61,ok},
     {call,304,
      {remote,304,{atom,304,gen_server},{atom,304,call}},
      [{atom,304,global_name_server},
       {tuple,304,[{atom,304,registrar},{var,304,'Fun'}]},
       {atom,304,infinity}]}]}]},
 {function,308,registered_names,0,
  [{clause,308,[],[],
    [{match,309,
      {var,309,'MS'},
      {call,309,
       {remote,309,{atom,309,ets},{atom,309,fun2ms}},
       [{'fun',309,
         {clauses,
          [{clause,309,
            [{tuple,309,
              [{var,309,'Name'},
               {var,309,'_Pid'},
               {var,309,'_M'},
               {var,309,'_RP'},
               {var,309,'_R'}]}],
            [],
            [{var,309,'Name'}]}]}}]}},
     {call,310,
      {remote,310,{atom,310,ets},{atom,310,select}},
      [{atom,310,global_names},{var,310,'MS'}]}]}]},
 {function,327,register_name_external,2,
  [{clause,327,
    [{var,327,'Name'},{var,327,'Pid'}],
    [[{call,327,{atom,327,is_pid},[{var,327,'Pid'}]}]],
    [{call,328,
      {atom,328,register_name_external},
      [{var,328,'Name'},
       {var,328,'Pid'},
       {'fun',328,{function,random_exit_name,3}}]}]}]},
 {function,330,register_name_external,3,
  [{clause,330,
    [{var,330,'Name'},{var,330,'Pid'},{var,330,'Method'}],
    [[{call,330,{atom,330,is_pid},[{var,330,'Pid'}]}]],
    [{match,331,
      {var,331,'Fun'},
      {'fun',331,
       {clauses,
        [{clause,331,
          [{var,331,'Nodes'}],
          [],
          [{'case',332,
            {call,332,{atom,332,where},[{var,332,'Name'}]},
            [{clause,333,
              [{atom,333,undefined}],
              [],
              [{call,334,
                {remote,334,{atom,334,gen_server},{atom,334,multi_call}},
                [{var,334,'Nodes'},
                 {atom,335,global_name_server},
                 {tuple,336,
                  [{atom,336,register_ext},
                   {var,336,'Name'},
                   {var,336,'Pid'},
                   {var,337,'Method'},
                   {call,337,{atom,337,node},[]}]}]},
               {atom,338,yes}]},
             {clause,339,[{var,339,'_Pid'}],[],[{atom,339,no}]}]}]}]}}},
     {atom,61,ok},
     {call,343,
      {remote,343,{atom,343,gen_server},{atom,343,call}},
      [{atom,343,global_name_server},
       {tuple,343,[{atom,343,registrar},{var,343,'Fun'}]},
       {atom,343,infinity}]}]}]},
 {function,345,unregister_name_external,1,
  [{clause,345,
    [{var,345,'Name'}],
    [],
    [{call,346,{atom,346,unregister_name},[{var,346,'Name'}]}]}]},
 {function,352,set_lock,1,
  [{clause,352,
    [{var,352,'Id'}],
    [],
    [{call,353,
      {atom,353,set_lock},
      [{var,353,'Id'},
       {cons,353,{call,353,{atom,353,node},[]},{call,353,{atom,353,nodes},[]}},
       {atom,353,infinity},
       {integer,353,1}]}]}]},
 {function,360,set_lock,2,
  [{clause,360,
    [{var,360,'Id'},{var,360,'Nodes'}],
    [],
    [{call,361,
      {atom,361,set_lock},
      [{var,361,'Id'},
       {var,361,'Nodes'},
       {atom,361,infinity},
       {integer,361,1}]}]}]},
 {function,367,set_lock,3,
  [{clause,367,
    [{var,367,'Id'},{var,367,'Nodes'},{var,367,'Retries'}],
    [[{call,367,{atom,367,is_integer},[{var,367,'Retries'}]},
      {op,367,'>=',{var,367,'Retries'},{integer,367,0}}]],
    [{call,368,
      {atom,368,set_lock},
      [{var,368,'Id'},
       {var,368,'Nodes'},
       {var,368,'Retries'},
       {integer,368,1}]}]},
   {clause,369,
    [{var,369,'Id'},{var,369,'Nodes'},{atom,369,infinity}],
    [],
    [{call,370,
      {atom,370,set_lock},
      [{var,370,'Id'},
       {var,370,'Nodes'},
       {atom,370,infinity},
       {integer,370,1}]}]}]},
 {function,372,set_lock,4,
  [{clause,372,
    [{tuple,372,[{var,372,'_ResourceId'},{var,372,'_LockRequesterId'}]},
     {nil,372},
     {var,372,'_Retries'},
     {var,372,'_Times'}],
    [],
    [{atom,373,true}]},
   {clause,374,
    [{match,374,
      {tuple,374,[{var,374,'_ResourceId'},{var,374,'_LockRequesterId'}]},
      {var,374,'Id'}},
     {var,374,'Nodes'},
     {var,374,'Retries'},
     {var,374,'Times'}],
    [],
    [{atom,61,ok},
     {'case',377,
      {call,377,
       {atom,377,set_lock_on_nodes},
       [{var,377,'Id'},{var,377,'Nodes'}]},
      [{clause,378,[{atom,378,true}],[],[{atom,61,ok},{atom,380,true}]},
       {clause,381,
        [{match,381,{atom,381,false},{var,381,'Reply'}}],
        [[{op,381,'=:=',{var,381,'Retries'},{integer,381,0}}]],
        [{var,382,'Reply'}]},
       {clause,383,
        [{atom,383,false}],
        [],
        [{call,384,{atom,384,random_sleep},[{var,384,'Times'}]},
         {call,385,
          {atom,385,set_lock},
          [{var,385,'Id'},
           {var,385,'Nodes'},
           {call,385,{atom,385,dec},[{var,385,'Retries'}]},
           {op,385,'+',{var,385,'Times'},{integer,385,1}}]}]}]}]}]},
 {function,390,del_lock,1,
  [{clause,390,
    [{var,390,'Id'}],
    [],
    [{call,391,
      {atom,391,del_lock},
      [{var,391,'Id'},
       {cons,391,
        {call,391,{atom,391,node},[]},
        {call,391,{atom,391,nodes},[]}}]}]}]},
 {function,396,del_lock,2,
  [{clause,396,
    [{match,396,
      {tuple,396,[{var,396,'_ResourceId'},{var,396,'_LockRequesterId'}]},
      {var,396,'Id'}},
     {var,396,'Nodes'}],
    [],
    [{atom,61,ok},
     {call,398,
      {remote,398,{atom,398,gen_server},{atom,398,multi_call}},
      [{var,398,'Nodes'},
       {atom,398,global_name_server},
       {tuple,398,[{atom,398,del_lock},{var,398,'Id'}]}]},
     {atom,399,true}]}]},
 {function,407,trans,2,
  [{clause,407,
    [{var,407,'Id'},{var,407,'Fun'}],
    [],
    [{call,407,
      {atom,407,trans},
      [{var,407,'Id'},
       {var,407,'Fun'},
       {cons,407,{call,407,{atom,407,node},[]},{call,407,{atom,407,nodes},[]}},
       {atom,407,infinity}]}]}]},
 {function,414,trans,3,
  [{clause,414,
    [{var,414,'Id'},{var,414,'Fun'},{var,414,'Nodes'}],
    [],
    [{call,414,
      {atom,414,trans},
      [{var,414,'Id'},
       {var,414,'Fun'},
       {var,414,'Nodes'},
       {atom,414,infinity}]}]}]},
 {function,422,trans,4,
  [{clause,422,
    [{var,422,'Id'},{var,422,'Fun'},{var,422,'Nodes'},{var,422,'Retries'}],
    [],
    [{'case',423,
      {call,423,
       {atom,423,set_lock},
       [{var,423,'Id'},{var,423,'Nodes'},{var,423,'Retries'}]},
      [{clause,424,
        [{atom,424,true}],
        [],
        [{'try',425,
          [{call,426,{var,426,'Fun'},[]}],
          [],[],
          [{call,428,
            {atom,428,del_lock},
            [{var,428,'Id'},{var,428,'Nodes'}]}]}]},
       {clause,430,[{atom,430,false}],[],[{atom,431,aborted}]}]}]}]},
 {function,434,info,0,
  [{clause,434,[],[],
    [{call,435,
      {remote,435,{atom,435,gen_server},{atom,435,call}},
      [{atom,435,global_name_server},{atom,435,info},{atom,435,infinity}]}]}]},
 {function,443,init,1,
  [{clause,443,
    [{nil,443}],
    [],
    [{call,444,{atom,444,process_flag},[{atom,444,trap_exit},{atom,444,true}]},
     {match,445,
      {var,445,'_'},
      {call,445,
       {remote,445,{atom,445,ets},{atom,445,new}},
       [{atom,445,global_locks},
        {cons,445,
         {atom,445,set},
         {cons,445,
          {atom,445,named_table},
          {cons,445,{atom,445,protected},{nil,445}}}}]}},
     {match,446,
      {var,446,'_'},
      {call,446,
       {remote,446,{atom,446,ets},{atom,446,new}},
       [{atom,446,global_names},
        {cons,446,
         {atom,446,set},
         {cons,446,
          {atom,446,named_table},
          {cons,446,{atom,446,protected},{nil,446}}}}]}},
     {match,447,
      {var,447,'_'},
      {call,447,
       {remote,447,{atom,447,ets},{atom,447,new}},
       [{atom,447,global_names_ext},
        {cons,447,
         {atom,447,set},
         {cons,447,
          {atom,447,named_table},
          {cons,447,{atom,447,protected},{nil,447}}}}]}},
     {match,449,
      {var,449,'_'},
      {call,449,
       {remote,449,{atom,449,ets},{atom,449,new}},
       [{atom,449,global_pid_names},
        {cons,449,
         {atom,449,bag},
         {cons,449,
          {atom,449,named_table},
          {cons,449,{atom,449,protected},{nil,449}}}}]}},
     {match,450,
      {var,450,'_'},
      {call,450,
       {remote,450,{atom,450,ets},{atom,450,new}},
       [{atom,450,global_pid_ids},
        {cons,450,
         {atom,450,bag},
         {cons,450,
          {atom,450,named_table},
          {cons,450,{atom,450,protected},{nil,450}}}}]}},
     {match,453,
      {var,453,'DoTrace'},
      {op,453,'=:=',
       {call,453,
        {remote,453,{atom,453,os},{atom,453,getenv}},
        [{string,453,"GLOBAL_HIGH_LEVEL_TRACE"}]},
       {string,453,"TRUE"}}},
     {match,454,
      {var,454,'T0'},
      {'case',454,
       {var,454,'DoTrace'},
       [{clause,455,
         [{atom,455,true}],
         [],
         [{call,456,{atom,456,send_high_level_trace},[]},{nil,457}]},
        {clause,458,[{atom,458,false}],[],[{atom,459,no_trace}]}]}},
     {match,462,
      {var,462,'S'},
      {tuple,462,
       [{atom,462,state},
        {atom,462,undefined},
        {nil,111},
        {nil,112},
        {nil,113},
        {nil,114},
        {call,115,{atom,115,node},[]},
        {call,462,{atom,462,start_the_locker},[{var,462,'DoTrace'}]},
        {call,464,{atom,464,start_the_registrar},[]},
        {var,463,'T0'},
        {atom,117,false}]}},
     {match,465,
      {var,465,'S1'},
      {call,465,
       {atom,465,trace_message},
       [{var,465,'S'},
        {tuple,465,[{atom,465,init},{call,465,{atom,465,node},[]}]},
        {nil,465}]}},
     {'case',467,
      {call,467,
       {remote,467,{atom,467,init},{atom,467,get_argument}},
       [{atom,467,connect_all}]},
      [{clause,468,
        [{tuple,468,
          [{atom,468,ok},
           {cons,468,{cons,468,{string,468,"false"},{nil,468}},{nil,468}}]}],
        [],
        [{tuple,469,
          [{atom,469,ok},
           {call,469,
            {remote,469,{atom,469,erlang},{atom,469,setelement}},
            [{integer,469,2},{var,469,'S1'},{atom,469,false}]}]}]},
       {clause,470,
        [{var,470,'_'}],
        [],
        [{tuple,471,
          [{atom,471,ok},
           {call,471,
            {remote,471,{atom,471,erlang},{atom,471,setelement}},
            [{integer,471,2},{var,471,'S1'},{atom,471,true}]}]}]}]}]}]},
 {function,590,handle_call,3,
  [{clause,590,
    [{tuple,590,[{atom,590,registrar},{var,590,'Fun'}]},
     {var,590,'From'},
     {var,590,'S'}],
    [],
    [{op,591,'!',
      {call,591,
       {remote,591,{atom,591,erlang},{atom,591,element}},
       [{integer,591,9},{var,591,'S'}]},
      {tuple,591,
       [{atom,591,trans_all_known},{var,591,'Fun'},{var,591,'From'}]}},
     {tuple,592,[{atom,592,noreply},{var,592,'S'}]}]},
   {clause,596,
    [{tuple,596,
      [{atom,596,register},
       {var,596,'Name'},
       {var,596,'Pid'},
       {var,596,'Method'}]},
     {tuple,596,[{var,596,'FromPid'},{var,596,'_Tag'}]},
     {var,596,'S0'}],
    [],
    [{match,597,
      {var,597,'S'},
      {call,597,
       {atom,597,ins_name},
       [{var,597,'Name'},
        {var,597,'Pid'},
        {var,597,'Method'},
        {var,597,'FromPid'},
        {nil,597},
        {var,597,'S0'}]}},
     {tuple,598,[{atom,598,reply},{atom,598,yes},{var,598,'S'}]}]},
   {clause,600,
    [{tuple,600,[{atom,600,unregister},{var,600,'Name'}]},
     {var,600,'_From'},
     {var,600,'S0'}],
    [],
    [{match,601,
      {var,601,'S'},
      {call,601,
       {atom,601,delete_global_name2},
       [{var,601,'Name'},{var,601,'S0'}]}},
     {tuple,602,[{atom,602,reply},{atom,602,ok},{var,602,'S'}]}]},
   {clause,604,
    [{tuple,604,
      [{atom,604,register_ext},
       {var,604,'Name'},
       {var,604,'Pid'},
       {var,604,'Method'},
       {var,604,'RegNode'}]},
     {tuple,604,[{var,604,'FromPid'},{var,604,'_Tag'}]},
     {var,604,'S0'}],
    [],
    [{match,605,
      {var,605,'S'},
      {call,605,
       {atom,605,ins_name_ext},
       [{var,605,'Name'},
        {var,605,'Pid'},
        {var,605,'Method'},
        {var,605,'RegNode'},
        {var,605,'FromPid'},
        {nil,605},
        {var,605,'S0'}]}},
     {tuple,606,[{atom,606,reply},{atom,606,yes},{var,606,'S'}]}]},
   {clause,608,
    [{tuple,608,[{atom,608,set_lock},{var,608,'Lock'}]},
     {tuple,608,[{var,608,'Pid'},{var,608,'_Tag'}]},
     {var,608,'S0'}],
    [],
    [{match,609,
      {tuple,609,[{var,609,'Reply'},{var,609,'S'}]},
      {call,609,
       {atom,609,handle_set_lock},
       [{var,609,'Lock'},{var,609,'Pid'},{var,609,'S0'}]}},
     {tuple,610,[{atom,610,reply},{var,610,'Reply'},{var,610,'S'}]}]},
   {clause,612,
    [{tuple,612,[{atom,612,del_lock},{var,612,'Lock'}]},
     {tuple,612,[{var,612,'Pid'},{var,612,'_Tag'}]},
     {var,612,'S0'}],
    [],
    [{match,613,
      {var,613,'S'},
      {call,613,
       {atom,613,handle_del_lock},
       [{var,613,'Lock'},{var,613,'Pid'},{var,613,'S0'}]}},
     {tuple,614,[{atom,614,reply},{atom,614,true},{var,614,'S'}]}]},
   {clause,616,
    [{atom,616,get_known},{var,616,'_From'},{var,616,'S'}],
    [],
    [{tuple,617,
      [{atom,617,reply},
       {call,617,
        {remote,617,{atom,617,erlang},{atom,617,element}},
        [{integer,617,3},{var,617,'S'}]},
       {var,617,'S'}]}]},
   {clause,619,
    [{atom,619,get_synced},{var,619,'_From'},{var,619,'S'}],
    [],
    [{tuple,620,
      [{atom,620,reply},
       {call,620,
        {remote,620,{atom,620,erlang},{atom,620,element}},
        [{integer,620,4},{var,620,'S'}]},
       {var,620,'S'}]}]},
   {clause,622,
    [{tuple,622,[{atom,622,sync},{var,622,'Nodes'}]},
     {var,622,'From'},
     {var,622,'S'}],
    [],
    [{match,626,
      {var,626,'Pid'},
      {call,626,
       {atom,626,start_sync},
       [{op,626,'--',
         {call,626,
          {remote,626,{atom,626,lists},{atom,626,delete}},
          [{call,626,{atom,626,node},[]},{var,626,'Nodes'}]},
         {call,626,
          {remote,626,{atom,626,erlang},{atom,626,element}},
          [{integer,626,4},{var,626,'S'}]}},
        {var,626,'From'}]}},
     {tuple,627,
      [{atom,627,noreply},
       {call,627,
        {remote,627,{atom,627,erlang},{atom,627,setelement}},
        [{integer,627,6},
         {var,627,'S'},
         {cons,627,
          {var,627,'Pid'},
          {call,627,
           {remote,627,{atom,627,erlang},{atom,627,element}},
           [{integer,627,6},{var,627,'S'}]}}]}]}]},
   {clause,629,
    [{atom,629,get_protocol_version},{var,629,'_From'},{var,629,'S'}],
    [],
    [{tuple,630,[{atom,630,reply},{integer,83,5},{var,630,'S'}]}]},
   {clause,632,
    [{atom,632,get_names_ext},{var,632,'_From'},{var,632,'S'}],
    [],
    [{tuple,633,
      [{atom,633,reply},
       {call,633,{atom,633,get_names_ext},[]},
       {var,633,'S'}]}]},
   {clause,635,
    [{atom,635,info},{var,635,'_From'},{var,635,'S'}],
    [],
    [{tuple,636,[{atom,636,reply},{var,636,'S'},{var,636,'S'}]}]},
   {clause,639,
    [{atom,639,high_level_trace_start},{var,639,'_From'},{var,639,'S'}],
    [],
    [{op,640,'!',
      {call,640,
       {remote,640,{atom,640,erlang},{atom,640,element}},
       [{integer,640,8},{var,640,'S'}]},
      {tuple,640,[{atom,640,do_trace},{atom,640,true}]}},
     {call,641,{atom,641,send_high_level_trace},[]},
     {tuple,642,
      [{atom,642,reply},
       {atom,642,ok},
       {call,642,
        {atom,642,trace_message},
        [{call,642,
          {remote,642,{atom,642,erlang},{atom,642,setelement}},
          [{integer,642,10},{var,642,'S'},{nil,642}]},
         {tuple,642,[{atom,642,init},{call,642,{atom,642,node},[]}]},
         {nil,642}]}]}]},
   {clause,643,
    [{atom,643,high_level_trace_stop},{var,643,'_From'},{var,643,'S'}],
    [],
    [{match,644,
      {tuple,644,
       [{atom,644,state},
        {var,644,'_'},
        {var,644,'_'},
        {var,644,'_'},
        {var,644,'_'},
        {var,644,'_'},
        {var,644,'_'},
        {var,644,'TheLocker'},
        {var,644,'_'},
        {var,644,'Trace'},
        {var,644,'_'}]},
      {var,644,'S'}},
     {op,645,'!',
      {var,645,'TheLocker'},
      {tuple,645,[{atom,645,do_trace},{atom,645,false}]}},
     {call,646,{atom,646,wait_high_level_trace},[]},
     {tuple,647,
      [{atom,647,reply},
       {var,647,'Trace'},
       {call,647,
        {remote,647,{atom,647,erlang},{atom,647,setelement}},
        [{integer,647,10},{var,647,'S'},{atom,647,no_trace}]}]}]},
   {clause,648,
    [{atom,648,high_level_trace_get},
     {var,648,'_From'},
     {match,648,
      {tuple,648,
       [{atom,648,state},
        {atom,648,undefined},
        {nil,111},
        {nil,112},
        {nil,113},
        {nil,114},
        {call,115,{atom,115,node},[]},
        {atom,648,undefined},
        {atom,648,undefined},
        {var,648,'Trace'},
        {atom,117,false}]},
      {var,648,'S'}}],
    [],
    [{tuple,649,
      [{atom,649,reply},
       {var,649,'Trace'},
       {call,649,
        {remote,649,{atom,649,erlang},{atom,649,setelement}},
        [{integer,649,10},{var,649,'S'},{nil,649}]}]}]},
   {clause,651,
    [{atom,651,stop},{var,651,'_From'},{var,651,'S'}],
    [],
    [{tuple,652,
      [{atom,652,stop},{atom,652,normal},{atom,652,stopped},{var,652,'S'}]}]},
   {clause,654,
    [{var,654,'Request'},{var,654,'From'},{var,654,'S'}],
    [],
    [{call,655,
      {remote,655,{atom,655,error_logger},{atom,655,warning_msg}},
      [{string,655,
        "The global_name_server received an unexpected message:\nhandle_call(~p, ~p, _)\n"},
       {cons,658,{var,658,'Request'},{cons,658,{var,658,'From'},{nil,658}}}]},
     {tuple,659,[{atom,659,noreply},{var,659,'S'}]}]}]},
 {function,668,handle_cast,2,
  [{clause,668,
    [{tuple,668,
      [{atom,668,init_connect},
       {var,668,'Vsn'},
       {var,668,'Node'},
       {var,668,'InitMsg'}]},
     {var,668,'S'}],
    [],
    [{atom,61,ok},
     {'case',671,
      {var,671,'Vsn'},
      [{clause,674,
        [{tuple,674,[{var,674,'HisVsn'},{var,674,'HisTag'}]}],
        [[{op,674,'>',{var,674,'HisVsn'},{integer,83,5}}]],
        [{call,675,
          {atom,675,init_connect},
          [{integer,83,5},
           {var,675,'Node'},
           {var,675,'InitMsg'},
           {var,675,'HisTag'},
           {call,675,
            {remote,675,{atom,675,erlang},{atom,675,element}},
            [{integer,675,5},{var,675,'S'}]},
           {var,675,'S'}]}]},
       {clause,676,
        [{tuple,676,[{var,676,'HisVsn'},{var,676,'HisTag'}]}],
        [],
        [{call,677,
          {atom,677,init_connect},
          [{var,677,'HisVsn'},
           {var,677,'Node'},
           {var,677,'InitMsg'},
           {var,677,'HisTag'},
           {call,677,
            {remote,677,{atom,677,erlang},{atom,677,element}},
            [{integer,677,5},{var,677,'S'}]},
           {var,677,'S'}]}]},
       {clause,679,
        [{var,679,'Tuple'}],
        [[{call,679,{atom,679,is_tuple},[{var,679,'Tuple'}]}]],
        [{match,680,
          {var,680,'List'},
          {call,680,{atom,680,tuple_to_list},[{var,680,'Tuple'}]}},
         {match,681,
          {cons,681,
           {var,681,'_HisVsn'},
           {cons,681,{var,681,'HisTag'},{var,681,'_'}}},
          {var,681,'List'}},
         {call,683,
          {atom,683,init_connect},
          [{integer,83,5},
           {var,683,'Node'},
           {var,683,'InitMsg'},
           {var,683,'HisTag'},
           {call,683,
            {remote,683,{atom,683,erlang},{atom,683,element}},
            [{integer,683,5},{var,683,'S'}]},
           {var,683,'S'}]}]},
       {clause,684,
        [{var,684,'_'}],
        [],
        [{match,685,
          {var,685,'Txt'},
          {call,685,
           {remote,685,{atom,685,io_lib},{atom,685,format}},
           [{string,685,"Illegal global protocol version ~p Node: ~p\n"},
            {cons,686,
             {var,686,'Vsn'},
             {cons,686,{var,686,'Node'},{nil,686}}}]}},
         {call,687,
          {remote,687,{atom,687,error_logger},{atom,687,info_report}},
          [{call,687,
            {remote,687,{atom,687,lists},{atom,687,flatten}},
            [{var,687,'Txt'}]}]}]}]},
     {tuple,689,[{atom,689,noreply},{var,689,'S'}]}]},
   {clause,696,
    [{tuple,696,
      [{atom,696,lock_is_set},
       {var,696,'Node'},
       {var,696,'MyTag'},
       {var,696,'LockId'}]},
     {var,696,'S'}],
    [],
    [{atom,61,ok},
     {'case',699,
      {call,699,
       {atom,699,get},
       [{tuple,699,[{atom,699,sync_tag_my},{var,699,'Node'}]}]},
      [{clause,700,
        [{var,700,'MyTag'}],
        [],
        [{call,701,
          {atom,701,lock_is_set},
          [{var,701,'Node'},
           {call,701,
            {remote,701,{atom,701,erlang},{atom,701,element}},
            [{integer,701,5},{var,701,'S'}]},
           {var,701,'LockId'}]},
         {tuple,702,[{atom,702,noreply},{var,702,'S'}]}]},
       {clause,703,
        [{var,703,'_'}],
        [],
        [{match,704,
          {var,704,'NewS'},
          {call,704,
           {atom,704,cancel_locker},
           [{var,704,'Node'},{var,704,'S'},{var,704,'MyTag'}]}},
         {tuple,705,[{atom,705,noreply},{var,705,'NewS'}]}]}]}]},
   {clause,713,
    [{tuple,713,
      [{atom,713,exchange},
       {var,713,'Node'},
       {var,713,'NameList'},
       {var,713,'_NameExtList'},
       {var,713,'MyTag'}]},
     {var,713,'S'}],
    [],
    [{'case',715,
      {call,715,
       {atom,715,get},
       [{tuple,715,[{atom,715,sync_tag_my},{var,715,'Node'}]}]},
      [{clause,716,
        [{var,716,'MyTag'}],
        [],
        [{call,717,
          {atom,717,exchange},
          [{var,717,'Node'},
           {var,717,'NameList'},
           {call,717,
            {remote,717,{atom,717,erlang},{atom,717,element}},
            [{integer,717,5},{var,717,'S'}]}]},
         {tuple,718,[{atom,718,noreply},{var,718,'S'}]}]},
       {clause,719,
        [{var,719,'_'}],
        [],
        [{match,720,
          {var,720,'NewS'},
          {call,720,
           {atom,720,cancel_locker},
           [{var,720,'Node'},{var,720,'S'},{var,720,'MyTag'}]}},
         {tuple,721,[{atom,721,noreply},{var,721,'NewS'}]}]}]}]},
   {clause,730,
    [{tuple,730,
      [{atom,730,exchange_ops},
       {var,730,'Node'},
       {var,730,'MyTag'},
       {var,730,'Ops'},
       {var,730,'Resolved'}]},
     {var,730,'S0'}],
    [],
    [{atom,61,ok},
     {match,734,
      {var,734,'S'},
      {call,734,
       {atom,734,trace_message},
       [{var,734,'S0'},
        {tuple,734,[{atom,734,exit_resolver},{var,734,'Node'}]},
        {cons,734,{var,734,'MyTag'},{nil,734}}]}},
     {'case',735,
      {call,735,
       {atom,735,get},
       [{tuple,735,[{atom,735,sync_tag_my},{var,735,'Node'}]}]},
      [{clause,736,
        [{var,736,'MyTag'}],
        [],
        [{match,737,
          {var,737,'Known'},
          {call,737,
           {remote,737,{atom,737,erlang},{atom,737,element}},
           [{integer,737,3},{var,737,'S'}]}},
         {call,738,
          {remote,738,{atom,738,gen_server},{atom,738,cast}},
          [{tuple,738,[{atom,738,global_name_server},{var,738,'Node'}]},
           {tuple,739,
            [{atom,739,resolved},
             {call,739,{atom,739,node},[]},
             {var,739,'Resolved'},
             {var,739,'Known'},
             {var,740,'Known'},
             {call,740,{atom,740,get_names_ext},[]},
             {call,740,
              {atom,740,get},
              [{tuple,740,[{atom,740,sync_tag_his},{var,740,'Node'}]}]}]}]},
         {'case',741,
          {call,741,
           {atom,741,get},
           [{tuple,741,[{atom,741,save_ops},{var,741,'Node'}]}]},
          [{clause,742,
            [{tuple,742,
              [{atom,742,resolved},
               {var,742,'HisKnown'},
               {var,742,'Names_ext'},
               {var,742,'HisResolved'}]}],
            [],
            [{call,743,
              {atom,743,put},
              [{tuple,743,[{atom,743,save_ops},{var,743,'Node'}]},
               {var,743,'Ops'}]},
             {match,744,
              {var,744,'NewS'},
              {call,744,
               {atom,744,resolved},
               [{var,744,'Node'},
                {var,744,'HisResolved'},
                {var,744,'HisKnown'},
                {var,744,'Names_ext'},
                {var,744,'S'}]}},
             {tuple,745,[{atom,745,noreply},{var,745,'NewS'}]}]},
           {clause,746,
            [{atom,746,undefined}],
            [],
            [{call,747,
              {atom,747,put},
              [{tuple,747,[{atom,747,save_ops},{var,747,'Node'}]},
               {var,747,'Ops'}]},
             {tuple,748,[{atom,748,noreply},{var,748,'S'}]}]}]}]},
       {clause,750,
        [{var,750,'_'}],
        [],
        [{match,751,
          {var,751,'NewS'},
          {call,751,
           {atom,751,cancel_locker},
           [{var,751,'Node'},{var,751,'S'},{var,751,'MyTag'}]}},
         {tuple,752,[{atom,752,noreply},{var,752,'NewS'}]}]}]}]},
   {clause,760,
    [{tuple,760,
      [{atom,760,resolved},
       {var,760,'Node'},
       {var,760,'HisResolved'},
       {var,760,'HisKnown'},
       {var,760,'_HisKnown_v2'},
       {var,761,'Names_ext'},
       {var,761,'MyTag'}]},
     {var,761,'S'}],
    [],
    [{atom,61,ok},
     {'case',764,
      {call,764,
       {atom,764,get},
       [{tuple,764,[{atom,764,sync_tag_my},{var,764,'Node'}]}]},
      [{clause,765,
        [{var,765,'MyTag'}],
        [],
        [{'case',767,
          {call,767,
           {atom,767,get},
           [{tuple,767,[{atom,767,save_ops},{var,767,'Node'}]}]},
          [{clause,768,
            [{var,768,'Ops'}],
            [[{call,768,{atom,768,is_list},[{var,768,'Ops'}]}]],
            [{match,769,
              {var,769,'NewS'},
              {call,769,
               {atom,769,resolved},
               [{var,769,'Node'},
                {var,769,'HisResolved'},
                {var,769,'HisKnown'},
                {var,769,'Names_ext'},
                {var,769,'S'}]}},
             {tuple,770,[{atom,770,noreply},{var,770,'NewS'}]}]},
           {clause,771,
            [{atom,771,undefined}],
            [],
            [{match,772,
              {var,772,'Resolved'},
              {tuple,772,
               [{atom,772,resolved},
                {var,772,'HisKnown'},
                {var,772,'Names_ext'},
                {var,772,'HisResolved'}]}},
             {call,773,
              {atom,773,put},
              [{tuple,773,[{atom,773,save_ops},{var,773,'Node'}]},
               {var,773,'Resolved'}]},
             {tuple,774,[{atom,774,noreply},{var,774,'S'}]}]}]}]},
       {clause,776,
        [{var,776,'_'}],
        [],
        [{match,777,
          {var,777,'NewS'},
          {call,777,
           {atom,777,cancel_locker},
           [{var,777,'Node'},{var,777,'S'},{var,777,'MyTag'}]}},
         {tuple,778,[{atom,778,noreply},{var,778,'NewS'}]}]}]}]},
   {clause,786,
    [{tuple,786,
      [{atom,786,new_nodes},
       {var,786,'Node'},
       {var,786,'Ops'},
       {var,786,'Names_ext'},
       {var,786,'Nodes'},
       {var,786,'ExtraInfo'}]},
     {var,786,'S'}],
    [],
    [{atom,61,ok},
     {match,789,
      {var,789,'NewS'},
      {call,789,
       {atom,789,new_nodes},
       [{var,789,'Ops'},
        {var,789,'Node'},
        {var,789,'Names_ext'},
        {var,789,'Nodes'},
        {var,789,'ExtraInfo'},
        {var,789,'S'}]}},
     {tuple,790,[{atom,790,noreply},{var,790,'NewS'}]}]},
   {clause,797,
    [{tuple,797,[{atom,797,in_sync},{var,797,'Node'},{var,797,'_IsKnown'}]},
     {var,797,'S'}],
    [],
    [{atom,61,ok},
     {call,800,
      {remote,800,{atom,800,lists},{atom,800,foreach}},
      [{'fun',800,
        {clauses,
         [{clause,800,
           [{var,800,'Pid'}],
           [],
           [{op,800,'!',
             {var,800,'Pid'},
             {tuple,800,
              [{atom,800,synced},{cons,800,{var,800,'Node'},{nil,800}}]}}]}]}},
       {call,800,
        {remote,800,{atom,800,erlang},{atom,800,element}},
        [{integer,800,6},{var,800,'S'}]}]},
     {match,801,
      {var,801,'NewS'},
      {call,801,
       {atom,801,cancel_locker},
       [{var,801,'Node'},
        {var,801,'S'},
        {call,801,
         {atom,801,get},
         [{tuple,801,[{atom,801,sync_tag_my},{var,801,'Node'}]}]}]}},
     {call,802,{atom,802,reset_node_state},[{var,802,'Node'}]},
     {match,803,
      {var,803,'NSynced'},
      {'case',803,
       {call,803,
        {remote,803,{atom,803,lists},{atom,803,member}},
        [{var,803,'Node'},
         {match,803,
          {var,803,'Synced'},
          {call,803,
           {remote,803,{atom,803,erlang},{atom,803,element}},
           [{integer,803,4},{var,803,'NewS'}]}}]},
       [{clause,804,[{atom,804,true}],[],[{var,804,'Synced'}]},
        {clause,805,
         [{atom,805,false}],
         [],
         [{cons,805,{var,805,'Node'},{var,805,'Synced'}}]}]}},
     {tuple,807,
      [{atom,807,noreply},
       {call,807,
        {remote,807,{atom,807,erlang},{atom,807,setelement}},
        [{integer,807,4},{var,807,'NewS'},{var,807,'NSynced'}]}]}]},
   {clause,810,
    [{tuple,810,
      [{atom,810,async_del_name},{var,810,'_Name'},{var,810,'_Pid'}]},
     {var,810,'S'}],
    [],
    [{tuple,814,[{atom,814,noreply},{var,814,'S'}]}]},
   {clause,816,
    [{tuple,816,
      [{atom,816,async_del_lock},{var,816,'_ResourceId'},{var,816,'_Pid'}]},
     {var,816,'S'}],
    [],
    [{tuple,821,[{atom,821,noreply},{var,821,'S'}]}]},
   {clause,823,
    [{var,823,'Request'},{var,823,'S'}],
    [],
    [{call,824,
      {remote,824,{atom,824,error_logger},{atom,824,warning_msg}},
      [{string,824,
        "The global_name_server received an unexpected message:\nhandle_cast(~p, _)\n"},
       {cons,826,{var,826,'Request'},{nil,826}}]},
     {tuple,827,[{atom,827,noreply},{var,827,'S'}]}]}]},
 {function,834,handle_info,2,
  [{clause,834,
    [{match,834,
      {tuple,834,[{atom,834,'EXIT'},{var,834,'Locker'},{var,834,'_Reason'}]},
      {var,834,'Exit'}},
     {match,834,
      {tuple,834,
       [{atom,834,state},
        {var,834,'_'},
        {var,834,'_'},
        {var,834,'_'},
        {var,834,'_'},
        {var,834,'_'},
        {var,834,'_'},
        {var,834,'Locker'},
        {var,834,'_'},
        {var,834,'_'},
        {var,834,'_'}]},
      {var,834,'S'}}],
    [],
    [{tuple,835,
      [{atom,835,stop},
       {tuple,835,[{atom,835,locker_died},{var,835,'Exit'}]},
       {call,835,
        {remote,835,{atom,835,erlang},{atom,835,setelement}},
        [{integer,835,8},{var,835,'S'},{atom,835,undefined}]}]}]},
   {clause,836,
    [{match,836,
      {tuple,836,[{atom,836,'EXIT'},{var,836,'Registrar'},{var,836,'_'}]},
      {var,836,'Exit'}},
     {match,836,
      {tuple,836,
       [{atom,836,state},
        {var,836,'_'},
        {var,836,'_'},
        {var,836,'_'},
        {var,836,'_'},
        {var,836,'_'},
        {var,836,'_'},
        {var,836,'_'},
        {var,836,'Registrar'},
        {var,836,'_'},
        {var,836,'_'}]},
      {var,836,'S'}}],
    [],
    [{tuple,837,
      [{atom,837,stop},
       {tuple,837,[{atom,837,registrar_died},{var,837,'Exit'}]},
       {call,837,
        {remote,837,{atom,837,erlang},{atom,837,setelement}},
        [{integer,837,9},{var,837,'S'},{atom,837,undefined}]}]}]},
   {clause,838,
    [{tuple,838,[{atom,838,'EXIT'},{var,838,'Pid'},{var,838,'_Reason'}]},
     {var,838,'S'}],
    [[{call,838,{atom,838,is_pid},[{var,838,'Pid'}]}]],
    [{atom,61,ok},
     {match,844,
      {var,844,'Syncers'},
      {call,844,
       {remote,844,{atom,844,lists},{atom,844,delete}},
       [{var,844,'Pid'},
        {call,844,
         {remote,844,{atom,844,erlang},{atom,844,element}},
         [{integer,844,6},{var,844,'S'}]}]}},
     {tuple,845,
      [{atom,845,noreply},
       {call,845,
        {remote,845,{atom,845,erlang},{atom,845,setelement}},
        [{integer,845,6},{var,845,'S'},{var,845,'Syncers'}]}]}]},
   {clause,847,
    [{tuple,847,[{atom,847,nodedown},{var,847,'Node'}]},{var,847,'S'}],
    [[{op,847,'=:=',
       {var,847,'Node'},
       {call,847,
        {remote,847,{atom,847,erlang},{atom,847,element}},
        [{integer,847,7},{var,847,'S'}]}}]],
    [{tuple,850,
      [{atom,850,noreply},
       {call,850,
        {atom,850,change_our_node_name},
        [{call,850,{atom,850,node},[]},{var,850,'S'}]}]}]},
   {clause,852,
    [{tuple,852,[{atom,852,nodedown},{var,852,'Node'}]},{var,852,'S0'}],
    [],
    [{atom,61,ok},
     {match,854,
      {var,854,'S1'},
      {call,854,
       {atom,854,trace_message},
       [{var,854,'S0'},
        {tuple,854,[{atom,854,nodedown},{var,854,'Node'}]},
        {nil,854}]}},
     {match,855,
      {var,855,'S'},
      {call,855,{atom,855,handle_nodedown},[{var,855,'Node'},{var,855,'S1'}]}},
     {tuple,856,[{atom,856,noreply},{var,856,'S'}]}]},
   {clause,858,
    [{tuple,858,[{atom,858,extra_nodedown},{var,858,'Node'}]},{var,858,'S0'}],
    [],
    [{atom,61,ok},
     {match,860,
      {var,860,'S1'},
      {call,860,
       {atom,860,trace_message},
       [{var,860,'S0'},
        {tuple,860,[{atom,860,extra_nodedown},{var,860,'Node'}]},
        {nil,860}]}},
     {match,861,
      {var,861,'S'},
      {call,861,{atom,861,handle_nodedown},[{var,861,'Node'},{var,861,'S1'}]}},
     {tuple,862,[{atom,862,noreply},{var,862,'S'}]}]},
   {clause,864,
    [{tuple,864,[{atom,864,nodeup},{var,864,'Node'}]},{var,864,'S'}],
    [[{op,864,'=:=',{var,864,'Node'},{call,864,{atom,864,node},[]}}]],
    [{atom,61,ok},
     {tuple,868,
      [{atom,868,noreply},
       {call,868,
        {atom,868,change_our_node_name},
        [{var,868,'Node'},{var,868,'S'}]}]}]},
   {clause,870,
    [{tuple,870,[{atom,870,nodeup},{var,870,'_Node'}]},{var,870,'S'}],
    [[{op,870,'not',
       {call,870,
        {remote,870,{atom,870,erlang},{atom,870,element}},
        [{integer,870,2},{var,870,'S'}]}}]],
    [{tuple,871,[{atom,871,noreply},{var,871,'S'}]}]},
   {clause,873,
    [{tuple,873,[{atom,873,nodeup},{var,873,'Node'}]},{var,873,'S0'}],
    [[{call,873,
       {remote,873,{atom,873,erlang},{atom,873,element}},
       [{integer,873,2},{var,873,'S0'}]}]],
    [{match,874,
      {var,874,'IsKnown'},
      {op,874,'or',
       {call,874,
        {remote,874,{atom,874,lists},{atom,874,member}},
        [{var,874,'Node'},
         {call,874,
          {remote,874,{atom,874,erlang},{atom,874,element}},
          [{integer,874,3},{var,874,'S0'}]}]},
       {call,876,
        {remote,876,{atom,876,lists},{atom,876,keymember}},
        [{var,876,'Node'},
         {integer,876,1},
         {call,876,
          {remote,876,{atom,876,erlang},{atom,876,element}},
          [{integer,876,5},{var,876,'S0'}]}]}}},
     {atom,61,ok},
     {match,878,
      {var,878,'S1'},
      {call,878,
       {atom,878,trace_message},
       [{var,878,'S0'},
        {tuple,878,[{atom,878,nodeup},{var,878,'Node'}]},
        {nil,878}]}},
     {'case',879,
      {var,879,'IsKnown'},
      [{clause,880,
        [{atom,880,true}],
        [],
        [{tuple,881,[{atom,881,noreply},{var,881,'S1'}]}]},
       {clause,882,
        [{atom,882,false}],
        [],
        [{call,883,{atom,883,resend_pre_connect},[{var,883,'Node'}]},
         {match,890,
          {var,890,'MyTag'},
          {call,890,
           {remote,890,{atom,890,erlang},{atom,890,unique_integer}},
           [{cons,890,{atom,890,monotonic},{nil,890}}]}},
         {call,891,
          {atom,891,put},
          [{tuple,891,[{atom,891,sync_tag_my},{var,891,'Node'}]},
           {var,891,'MyTag'}]},
         {atom,61,ok},
         {op,893,'!',
          {call,893,
           {remote,893,{atom,893,erlang},{atom,893,element}},
           [{integer,893,8},{var,893,'S1'}]},
          {tuple,893,[{atom,893,nodeup},{var,893,'Node'},{var,893,'MyTag'}]}},
         {match,899,{var,899,'NotAPid'},{atom,899,no_longer_a_pid}},
         {match,900,
          {var,900,'Locker'},
          {tuple,900,
           [{atom,900,locker},
            {var,900,'NotAPid'},
            {call,900,
             {remote,900,{atom,900,erlang},{atom,900,element}},
             [{integer,900,3},{var,900,'S1'}]},
            {call,900,
             {remote,900,{atom,900,erlang},{atom,900,element}},
             [{integer,900,8},{var,900,'S1'}]}]}},
         {match,901,
          {var,901,'InitC'},
          {tuple,901,
           [{atom,901,init_connect},
            {tuple,901,[{integer,83,5},{var,901,'MyTag'}]},
            {call,901,{atom,901,node},[]},
            {var,901,'Locker'}]}},
         {match,902,
          {var,902,'Rs'},
          {call,902,
           {remote,902,{atom,902,erlang},{atom,902,element}},
           [{integer,902,5},{var,902,'S1'}]}},
         {atom,61,ok},
         {call,905,
          {remote,905,{atom,905,gen_server},{atom,905,cast}},
          [{tuple,905,[{atom,905,global_name_server},{var,905,'Node'}]},
           {var,905,'InitC'}]},
         {match,906,
          {var,906,'Resolver'},
          {call,906,
           {atom,906,start_resolver},
           [{var,906,'Node'},{var,906,'MyTag'}]}},
         {match,907,
          {var,907,'S'},
          {call,907,
           {atom,907,trace_message},
           [{var,907,'S1'},
            {tuple,907,[{atom,907,new_resolver},{var,907,'Node'}]},
            {cons,907,
             {var,907,'MyTag'},
             {cons,907,{var,907,'Resolver'},{nil,907}}}]}},
         {tuple,908,
          [{atom,908,noreply},
           {call,908,
            {remote,908,{atom,908,erlang},{atom,908,setelement}},
            [{integer,908,5},
             {var,908,'S'},
             {cons,908,
              {tuple,908,
               [{var,908,'Node'},{var,908,'MyTag'},{var,908,'Resolver'}]},
              {var,908,'Rs'}}]}]}]}]}]},
   {clause,911,
    [{tuple,911,[{atom,911,whereis},{var,911,'Name'},{var,911,'From'}]},
     {var,911,'S'}],
    [],
    [{call,912,{atom,912,do_whereis},[{var,912,'Name'},{var,912,'From'}]},
     {tuple,913,[{atom,913,noreply},{var,913,'S'}]}]},
   {clause,915,
    [{atom,915,known},{var,915,'S'}],
    [],
    [{call,916,
      {remote,916,{atom,916,io},{atom,916,format}},
      [{string,916,">>>> ~p\n"},
       {cons,916,
        {call,916,
         {remote,916,{atom,916,erlang},{atom,916,element}},
         [{integer,916,3},{var,916,'S'}]},
        {nil,916}}]},
     {tuple,917,[{atom,917,noreply},{var,917,'S'}]}]},
   {clause,920,
    [{atom,920,high_level_trace},{var,920,'S'}],
    [],
    [{'case',921,
      {var,921,'S'},
      [{clause,922,
        [{tuple,922,
          [{atom,922,state},
           {var,922,'_'},
           {var,922,'_'},
           {var,922,'_'},
           {var,922,'_'},
           {var,922,'_'},
           {var,922,'_'},
           {var,922,'_'},
           {var,922,'_'},
           {cons,922,
            {tuple,922,
             [{var,922,'Node'},
              {var,922,'_Time'},
              {var,922,'_M'},
              {var,922,'Nodes'},
              {var,922,'_X'}]},
            {var,922,'_'}},
           {var,922,'_'}]}],
        [],
        [{call,923,{atom,923,send_high_level_trace},[]},
         {match,924,{var,924,'CNode'},{call,924,{atom,924,node},[]}},
         {match,925,{var,925,'CNodes'},{call,925,{atom,925,nodes},[]}},
         {'case',926,
          {tuple,926,[{var,926,'CNode'},{var,926,'CNodes'}]},
          [{clause,927,
            [{tuple,927,[{var,927,'Node'},{var,927,'Nodes'}]}],
            [],
            [{tuple,928,[{atom,928,noreply},{var,928,'S'}]}]},
           {clause,929,
            [{var,929,'_'}],
            [],
            [{match,930,
              {tuple,930,[{var,930,'New'},{var,930,'_'},{var,930,'Old'}]},
              {call,931,
               {remote,931,{atom,931,sofs},{atom,931,symmetric_partition}},
               [{call,931,
                 {remote,931,{atom,931,sofs},{atom,931,set}},
                 [{cons,931,{var,931,'CNode'},{var,931,'CNodes'}}]},
                {call,932,
                 {remote,932,{atom,932,sofs},{atom,932,set}},
                 [{cons,932,{var,932,'Node'},{var,932,'Nodes'}}]}]}},
             {match,933,
              {var,933,'M'},
              {tuple,933,
               [{atom,933,nodes_changed},
                {tuple,933,
                 [{call,933,
                   {remote,933,{atom,933,sofs},{atom,933,to_external}},
                   [{var,933,'New'}]},
                  {call,934,
                   {remote,934,{atom,934,sofs},{atom,934,to_external}},
                   [{var,934,'Old'}]}]}]}},
             {tuple,935,
              [{atom,935,noreply},
               {call,935,
                {atom,935,trace_message},
                [{var,935,'S'},{var,935,'M'},{nil,935}]}]}]}]}]},
       {clause,937,
        [{var,937,'_'}],
        [],
        [{tuple,938,[{atom,938,noreply},{var,938,'S'}]}]}]}]},
   {clause,940,
    [{tuple,940,[{atom,940,trace_message},{var,940,'M'}]},{var,940,'S'}],
    [],
    [{tuple,941,
      [{atom,941,noreply},
       {call,941,
        {atom,941,trace_message},
        [{var,941,'S'},{var,941,'M'},{nil,941}]}]}]},
   {clause,942,
    [{tuple,942,[{atom,942,trace_message},{var,942,'M'},{var,942,'X'}]},
     {var,942,'S'}],
    [],
    [{tuple,943,
      [{atom,943,noreply},
       {call,943,
        {atom,943,trace_message},
        [{var,943,'S'},{var,943,'M'},{var,943,'X'}]}]}]},
   {clause,945,
    [{tuple,945,
      [{atom,945,'DOWN'},
       {var,945,'MonitorRef'},
       {atom,945,process},
       {var,945,'_Pid'},
       {var,945,'_Info'}]},
     {var,945,'S0'}],
    [],
    [{match,946,
      {var,946,'S1'},
      {call,946,
       {atom,946,delete_lock},
       [{var,946,'MonitorRef'},{var,946,'S0'}]}},
     {match,947,
      {var,947,'S'},
      {call,947,{atom,947,del_name},[{var,947,'MonitorRef'},{var,947,'S1'}]}},
     {tuple,948,[{atom,948,noreply},{var,948,'S'}]}]},
   {clause,950,
    [{var,950,'Message'},{var,950,'S'}],
    [],
    [{call,951,
      {remote,951,{atom,951,error_logger},{atom,951,warning_msg}},
      [{string,951,
        "The global_name_server received an unexpected message:\nhandle_info(~p, _)\n"},
       {cons,953,{var,953,'Message'},{nil,953}}]},
     {tuple,954,[{atom,954,noreply},{var,954,'S'}]}]}]},
 {function,965,wait_high_level_trace,0,
  [{clause,965,[],[],
    [{'receive',966,
      [{clause,967,[{atom,967,high_level_trace}],[],[{atom,968,ok}]}],
      {op,969,'+',{integer,963,500},{integer,969,1}},
      [{atom,970,ok}]}]}]},
 {function,973,send_high_level_trace,0,
  [{clause,973,[],[],
    [{call,974,
      {remote,974,{atom,974,erlang},{atom,974,send_after}},
      [{integer,963,500},
       {call,974,{atom,974,self},[]},
       {atom,974,high_level_trace}]}]}]},
 {function,981,trans_all_known,1,
  [{clause,981,
    [{var,981,'Fun'}],
    [],
    [{match,982,
      {var,982,'Id'},
      {tuple,982,[{atom,976,global},{call,982,{atom,982,self},[]}]}},
     {match,983,
      {var,983,'Nodes'},
      {call,983,{atom,983,set_lock_known},[{var,983,'Id'},{integer,983,0}]}},
     {'try',984,
      [{call,985,{var,985,'Fun'},[{var,985,'Nodes'}]}],
      [],[],
      [{call,987,
        {atom,987,delete_global_lock},
        [{var,987,'Id'},{var,987,'Nodes'}]}]}]}]},
 {function,990,set_lock_known,2,
  [{clause,990,
    [{var,990,'Id'},{var,990,'Times'}],
    [],
    [{match,991,{var,991,'Known'},{call,991,{atom,991,get_known},[]}},
     {match,992,
      {var,992,'Nodes'},
      {cons,992,{call,992,{atom,992,node},[]},{var,992,'Known'}}},
     {match,993,
      {var,993,'Boss'},
      {call,993,{atom,993,the_boss},[{var,993,'Nodes'}]}},
     {'case',995,
      {call,995,
       {atom,995,set_lock_on_nodes},
       [{var,995,'Id'},{cons,995,{var,995,'Boss'},{nil,995}}]},
      [{clause,996,
        [{atom,996,true}],
        [],
        [{'case',997,
          {call,997,
           {atom,997,lock_on_known_nodes},
           [{var,997,'Id'},{var,997,'Known'},{var,997,'Nodes'}]},
          [{clause,998,[{atom,998,true}],[],[{var,999,'Nodes'}]},
           {clause,1000,
            [{atom,1000,false}],
            [],
            [{call,1001,
              {atom,1001,del_lock},
              [{var,1001,'Id'},{cons,1001,{var,1001,'Boss'},{nil,1001}}]},
             {call,1002,{atom,1002,random_sleep},[{var,1002,'Times'}]},
             {call,1003,
              {atom,1003,set_lock_known},
              [{var,1003,'Id'},
               {op,1003,'+',{var,1003,'Times'},{integer,1003,1}}]}]}]}]},
       {clause,1005,
        [{atom,1005,false}],
        [],
        [{call,1006,{atom,1006,random_sleep},[{var,1006,'Times'}]},
         {call,1007,
          {atom,1007,set_lock_known},
          [{var,1007,'Id'},
           {op,1007,'+',{var,1007,'Times'},{integer,1007,1}}]}]}]}]}]},
 {function,1010,lock_on_known_nodes,3,
  [{clause,1010,
    [{var,1010,'Id'},{var,1010,'Known'},{var,1010,'Nodes'}],
    [],
    [{'case',1011,
      {call,1011,
       {atom,1011,set_lock_on_nodes},
       [{var,1011,'Id'},{var,1011,'Nodes'}]},
      [{clause,1012,
        [{atom,1012,true}],
        [],
        [{op,1013,'=:=',
          {op,1013,'--',
           {call,1013,{atom,1013,get_known},[]},
           {var,1013,'Known'}},
          {nil,1013}}]},
       {clause,1014,[{atom,1014,false}],[],[{atom,1015,false}]}]}]}]},
 {function,1018,set_lock_on_nodes,2,
  [{clause,1018,[{var,1018,'_Id'},{nil,1018}],[],[{atom,1019,true}]},
   {clause,1020,
    [{var,1020,'Id'},{var,1020,'Nodes'}],
    [],
    [{'case',1021,
      {call,1021,
       {atom,1021,local_lock_check},
       [{var,1021,'Id'},{var,1021,'Nodes'}]},
      [{clause,1022,
        [{atom,1022,true}],
        [],
        [{match,1023,
          {var,1023,'Msg'},
          {tuple,1023,[{atom,1023,set_lock},{var,1023,'Id'}]}},
         {match,1024,
          {tuple,1024,[{var,1024,'Replies'},{var,1024,'_'}]},
          {call,1025,
           {remote,1025,{atom,1025,gen_server},{atom,1025,multi_call}},
           [{var,1025,'Nodes'},
            {atom,1025,global_name_server},
            {var,1025,'Msg'}]}},
         {atom,61,ok},
         {call,1027,
          {atom,1027,check_replies},
          [{var,1027,'Replies'},{var,1027,'Id'},{var,1027,'Replies'}]}]},
       {clause,1028,
        [{match,1028,{atom,1028,false},{var,1028,'Reply'}}],
        [],
        [{var,1029,'Reply'}]}]}]}]},
 {function,1033,local_lock_check,2,
  [{clause,1033,
    [{var,1033,'_Id'},
     {match,1033,{cons,1033,{var,1033,'_'},{nil,1033}},{var,1033,'_Nodes'}}],
    [],
    [{atom,1034,true}]},
   {clause,1035,
    [{var,1035,'Id'},{var,1035,'Nodes'}],
    [],
    [{op,1036,'orelse',
      {op,1036,'not',
       {call,1036,
        {remote,1036,{atom,1036,lists},{atom,1036,member}},
        [{call,1036,{atom,1036,node},[]},{var,1036,'Nodes'}]}},
      {op,1036,'=/=',
       {call,1036,{atom,1036,can_set_lock},[{var,1036,'Id'}]},
       {atom,1036,false}}}]}]},
 {function,1038,check_replies,3,
  [{clause,1038,
    [{cons,1038,
      {tuple,1038,[{var,1038,'_Node'},{atom,1038,true}]},
      {var,1038,'T'}},
     {var,1038,'Id'},
     {var,1038,'Replies'}],
    [],
    [{call,1039,
      {atom,1039,check_replies},
      [{var,1039,'T'},{var,1039,'Id'},{var,1039,'Replies'}]}]},
   {clause,1040,
    [{cons,1040,
      {tuple,1040,
       [{var,1040,'_Node'},{match,1040,{atom,1040,false},{var,1040,'Reply'}}]},
      {var,1040,'_T'}},
     {var,1040,'_Id'},
     {cons,1040,{var,1040,'_'},{nil,1040}}],
    [],
    [{var,1041,'Reply'}]},
   {clause,1042,
    [{cons,1042,
      {tuple,1042,
       [{var,1042,'_Node'},{match,1042,{atom,1042,false},{var,1042,'Reply'}}]},
      {var,1042,'_T'}},
     {var,1042,'Id'},
     {var,1042,'Replies'}],
    [],
    [{match,1043,
      {var,1043,'TrueReplyNodes'},
      {lc,1043,
       {var,1043,'N'},
       [{generate,1043,
         {tuple,1043,[{var,1043,'N'},{atom,1043,true}]},
         {var,1043,'Replies'}}]}},
     {atom,61,ok},
     {call,1045,
      {remote,1045,{atom,1045,gen_server},{atom,1045,multi_call}},
      [{var,1045,'TrueReplyNodes'},
       {atom,1045,global_name_server},
       {tuple,1045,[{atom,1045,del_lock},{var,1045,'Id'}]}]},
     {var,1046,'Reply'}]},
   {clause,1047,
    [{nil,1047},{var,1047,'_Id'},{var,1047,'_Replies'}],
    [],
    [{atom,1048,true}]}]},
 {function,1054,init_connect,6,
  [{clause,1054,
    [{var,1054,'Vsn'},
     {var,1054,'Node'},
     {var,1054,'InitMsg'},
     {var,1054,'HisTag'},
     {var,1054,'Resolvers'},
     {var,1054,'S'}],
    [],
    [{call,1057,
      {atom,1057,put},
      [{tuple,1057,[{atom,1057,prot_vsn},{var,1057,'Node'}]},
       {var,1057,'Vsn'}]},
     {call,1058,
      {atom,1058,put},
      [{tuple,1058,[{atom,1058,sync_tag_his},{var,1058,'Node'}]},
       {var,1058,'HisTag'}]},
     {'case',1059,
      {call,1059,
       {remote,1059,{atom,1059,lists},{atom,1059,keyfind}},
       [{var,1059,'Node'},{integer,1059,1},{var,1059,'Resolvers'}]},
      [{clause,1060,
        [{tuple,1060,
          [{var,1060,'Node'},{var,1060,'MyTag'},{var,1060,'_Resolver'}]}],
        [],
        [{match,1061,
          {var,1061,'MyTag'},
          {call,1061,
           {atom,1061,get},
           [{tuple,1061,[{atom,1061,sync_tag_my},{var,1061,'Node'}]}]}},
         {match,1062,
          {tuple,1062,
           [{atom,1062,locker},
            {var,1062,'_NoLongerAPid'},
            {var,1062,'_HisKnown0'},
            {var,1062,'HisTheLocker'}]},
          {var,1062,'InitMsg'}},
         {atom,61,ok},
         {match,1064,{var,1064,'HisKnown'},{nil,1064}},
         {op,1065,'!',
          {call,1065,
           {remote,1065,{atom,1065,erlang},{atom,1065,element}},
           [{integer,1065,8},{var,1065,'S'}]},
          {tuple,1065,
           [{atom,1065,his_the_locker},
            {var,1065,'HisTheLocker'},
            {tuple,1066,[{var,1066,'Vsn'},{var,1066,'HisKnown'}]},
            {call,1066,
             {remote,1066,{atom,1066,erlang},{atom,1066,element}},
             [{integer,1066,3},{var,1066,'S'}]}]}}]},
       {clause,1067,
        [{atom,1067,false}],
        [],
        [{atom,61,ok},
         {call,1069,
          {atom,1069,put},
          [{tuple,1069,[{atom,1069,pre_connect},{var,1069,'Node'}]},
           {tuple,1069,
            [{var,1069,'Vsn'},
             {var,1069,'InitMsg'},
             {var,1069,'HisTag'}]}]}]}]}]}]},
 {function,1083,lock_is_set,3,
  [{clause,1083,
    [{var,1083,'Node'},{var,1083,'Resolvers'},{var,1083,'LockId'}],
    [],
    [{call,1084,
      {remote,1084,{atom,1084,gen_server},{atom,1084,cast}},
      [{tuple,1084,[{atom,1084,global_name_server},{var,1084,'Node'}]},
       {tuple,1085,
        [{atom,1085,exchange},
         {call,1085,{atom,1085,node},[]},
         {call,1085,{atom,1085,get_names},[]},
         {match,1085,{var,1085,'_ExtNames'},{nil,1085}},
         {call,1086,
          {atom,1086,get},
          [{tuple,1086,[{atom,1086,sync_tag_his},{var,1086,'Node'}]}]}]}]},
     {call,1087,
      {atom,1087,put},
      [{tuple,1087,[{atom,1087,lock_id},{var,1087,'Node'}]},
       {var,1087,'LockId'}]},
     {'case',1089,
      {call,1089,
       {atom,1089,get},
       [{tuple,1089,[{atom,1089,wait_lock},{var,1089,'Node'}]}]},
      [{clause,1090,
        [{tuple,1090,[{atom,1090,exchange},{var,1090,'NameList'}]}],
        [],
        [{call,1091,
          {atom,1091,put},
          [{tuple,1091,[{atom,1091,wait_lock},{var,1091,'Node'}]},
           {atom,1091,lock_is_set}]},
         {call,1092,
          {atom,1092,exchange},
          [{var,1092,'Node'},{var,1092,'NameList'},{var,1092,'Resolvers'}]}]},
       {clause,1093,
        [{atom,1093,undefined}],
        [],
        [{call,1094,
          {atom,1094,put},
          [{tuple,1094,[{atom,1094,wait_lock},{var,1094,'Node'}]},
           {atom,1094,lock_is_set}]}]}]}]}]},
 {function,1100,exchange,3,
  [{clause,1100,
    [{var,1100,'Node'},{var,1100,'NameList'},{var,1100,'Resolvers'}],
    [],
    [{atom,61,ok},
     {'case',1103,
      {call,1103,
       {atom,1103,erase},
       [{tuple,1103,[{atom,1103,wait_lock},{var,1103,'Node'}]}]},
      [{clause,1104,
        [{atom,1104,lock_is_set}],
        [],
        [{match,1105,
          {tuple,1105,
           [{var,1105,'Node'},{var,1105,'_Tag'},{var,1105,'Resolver'}]},
          {call,1105,
           {remote,1105,{atom,1105,lists},{atom,1105,keyfind}},
           [{var,1105,'Node'},{integer,1105,1},{var,1105,'Resolvers'}]}},
         {op,1106,'!',
          {var,1106,'Resolver'},
          {tuple,1106,
           [{atom,1106,resolve},{var,1106,'NameList'},{var,1106,'Node'}]}}]},
       {clause,1107,
        [{atom,1107,undefined}],
        [],
        [{call,1108,
          {atom,1108,put},
          [{tuple,1108,[{atom,1108,wait_lock},{var,1108,'Node'}]},
           {tuple,1108,[{atom,1108,exchange},{var,1108,'NameList'}]}]}]}]}]}]},
 {function,1111,resolved,5,
  [{clause,1111,
    [{var,1111,'Node'},
     {var,1111,'HisResolved'},
     {var,1111,'HisKnown'},
     {var,1111,'Names_ext'},
     {var,1111,'S0'}],
    [],
    [{match,1112,
      {var,1112,'Ops'},
      {op,1112,'++',
       {call,1112,
        {atom,1112,erase},
        [{tuple,1112,[{atom,1112,save_ops},{var,1112,'Node'}]}]},
       {var,1112,'HisResolved'}}},
     {match,1114,
      {var,1114,'Known'},
      {call,1114,
       {remote,1114,{atom,1114,erlang},{atom,1114,element}},
       [{integer,1114,3},{var,1114,'S0'}]}},
     {match,1115,
      {var,1115,'Synced'},
      {call,1115,
       {remote,1115,{atom,1115,erlang},{atom,1115,element}},
       [{integer,1115,4},{var,1115,'S0'}]}},
     {match,1116,
      {var,1116,'NewNodes'},
      {cons,1116,{var,1116,'Node'},{var,1116,'HisKnown'}}},
     {call,1117,{atom,1117,sync_others},[{var,1117,'HisKnown'}]},
     {match,1118,
      {var,1118,'ExtraInfo'},
      {cons,1118,
       {tuple,1118,
        [{atom,1118,vsn},
         {call,1118,
          {atom,1118,get},
          [{tuple,1118,[{atom,1118,prot_vsn},{var,1118,'Node'}]}]}]},
       {cons,1118,
        {tuple,1118,
         [{atom,1118,lock},
          {call,1118,
           {atom,1118,get},
           [{tuple,1118,[{atom,1118,lock_id},{var,1118,'Node'}]}]}]},
        {nil,1118}}}},
     {match,1119,
      {var,1119,'S'},
      {call,1119,
       {atom,1119,do_ops},
       [{var,1119,'Ops'},
        {call,1119,{atom,1119,node},[]},
        {var,1119,'Names_ext'},
        {var,1119,'ExtraInfo'},
        {var,1119,'S0'}]}},
     {call,1121,
      {remote,1121,{atom,1121,lists},{atom,1121,foreach}},
      [{'fun',1121,
        {clauses,
         [{clause,1121,
           [{var,1121,'Pid'}],
           [],
           [{op,1121,'!',
             {var,1121,'Pid'},
             {tuple,1121,
              [{atom,1121,synced},
               {cons,1121,{var,1121,'Node'},{nil,1121}}]}}]}]}},
       {call,1121,
        {remote,1121,{atom,1121,erlang},{atom,1121,element}},
        [{integer,1121,6},{var,1121,'S'}]}]},
     {match,1122,
      {var,1122,'S3'},
      {call,1122,
       {remote,1122,{atom,1122,lists},{atom,1122,foldl}},
       [{'fun',1122,
         {clauses,
          [{clause,1122,
            [{var,1122,'Node1'},{var,1122,'S1'}],
            [],
            [{match,1123,
              {var,1123,'F'},
              {'fun',1123,
               {clauses,
                [{clause,1123,
                  [{var,1123,'Tag'}],
                  [],
                  [{call,1123,
                    {atom,1123,cancel_locker},
                    [{var,1123,'Node1'},
                     {var,1123,'S1'},
                     {var,1123,'Tag'}]}]}]}}},
             {call,1124,
              {atom,1124,cancel_resolved_locker},
              [{var,1124,'Node1'},{var,1124,'F'}]}]}]}},
        {var,1125,'S'},
        {var,1125,'HisKnown'}]}},
     {match,1130,
      {var,1130,'NewNodesF'},
      {'fun',1130,
       {clauses,
        [{clause,1130,[],[],
          [{call,1131,
            {remote,1131,{atom,1131,gen_server},{atom,1131,abcast}},
            [{var,1131,'Known'},
             {atom,1131,global_name_server},
             {tuple,1132,
              [{atom,1132,new_nodes},
               {call,1132,{atom,1132,node},[]},
               {var,1132,'Ops'},
               {var,1132,'Names_ext'},
               {var,1133,'NewNodes'},
               {var,1133,'ExtraInfo'}]}]}]}]}}},
     {match,1135,
      {var,1135,'F'},
      {'fun',1135,
       {clauses,
        [{clause,1135,
          [{var,1135,'Tag'}],
          [],
          [{call,1135,
            {atom,1135,cancel_locker},
            [{var,1135,'Node'},
             {var,1135,'S3'},
             {var,1135,'Tag'},
             {var,1135,'NewNodesF'}]}]}]}}},
     {match,1136,
      {var,1136,'S4'},
      {call,1136,
       {atom,1136,cancel_resolved_locker},
       [{var,1136,'Node'},{var,1136,'F'}]}},
     {match,1138,
      {var,1138,'AddedNodes'},
      {op,1138,'--',{var,1138,'NewNodes'},{var,1138,'Known'}}},
     {match,1139,
      {var,1139,'NewKnown'},
      {op,1139,'++',{var,1139,'Known'},{var,1139,'AddedNodes'}}},
     {op,1140,'!',
      {call,1140,
       {remote,1140,{atom,1140,erlang},{atom,1140,element}},
       [{integer,1140,8},{var,1140,'S4'}]},
      {tuple,1140,[{atom,1140,add_to_known},{var,1140,'AddedNodes'}]}},
     {match,1141,
      {var,1141,'NewS'},
      {call,1141,
       {atom,1141,trace_message},
       [{var,1141,'S4'},
        {tuple,1141,[{atom,1141,added},{var,1141,'AddedNodes'}]},
        {cons,1142,
         {tuple,1142,[{atom,1142,new_nodes},{var,1142,'NewNodes'}]},
         {cons,1142,
          {tuple,1142,[{atom,1142,abcast},{var,1142,'Known'}]},
          {cons,1142,
           {tuple,1142,[{atom,1142,ops},{var,1142,'Ops'}]},
           {nil,1142}}}}]}},
     {call,1143,
      {remote,1143,{atom,1143,erlang},{atom,1143,setelement}},
      [{integer,1143,4},
       {call,1143,
        {remote,1143,{atom,1143,erlang},{atom,1143,setelement}},
        [{integer,1143,3},{var,1143,'NewS'},{var,1143,'NewKnown'}]},
       {cons,1143,{var,1143,'Node'},{var,1143,'Synced'}}]}]}]},
 {function,1145,cancel_resolved_locker,2,
  [{clause,1145,
    [{var,1145,'Node'},{var,1145,'CancelFun'}],
    [],
    [{match,1146,
      {var,1146,'Tag'},
      {call,1146,
       {atom,1146,get},
       [{tuple,1146,[{atom,1146,sync_tag_my},{var,1146,'Node'}]}]}},
     {atom,61,ok},
     {match,1148,
      {var,1148,'S'},
      {call,1148,{var,1148,'CancelFun'},[{var,1148,'Tag'}]}},
     {call,1149,{atom,1149,reset_node_state},[{var,1149,'Node'}]},
     {var,1150,'S'}]}]},
 {function,1152,new_nodes,6,
  [{clause,1152,
    [{var,1152,'Ops'},
     {var,1152,'ConnNode'},
     {var,1152,'Names_ext'},
     {var,1152,'Nodes'},
     {var,1152,'ExtraInfo'},
     {var,1152,'S0'}],
    [],
    [{match,1153,
      {var,1153,'Known'},
      {call,1153,
       {remote,1153,{atom,1153,erlang},{atom,1153,element}},
       [{integer,1153,3},{var,1153,'S0'}]}},
     {match,1159,
      {var,1159,'AddedNodes'},
      {call,1159,
       {remote,1159,{atom,1159,lists},{atom,1159,delete}},
       [{call,1159,{atom,1159,node},[]},
        {op,1159,'--',{var,1159,'Nodes'},{var,1159,'Known'}}]}},
     {call,1160,{atom,1160,sync_others},[{var,1160,'AddedNodes'}]},
     {match,1161,
      {var,1161,'S'},
      {call,1161,
       {atom,1161,do_ops},
       [{var,1161,'Ops'},
        {var,1161,'ConnNode'},
        {var,1161,'Names_ext'},
        {var,1161,'ExtraInfo'},
        {var,1161,'S0'}]}},
     {atom,61,ok},
     {op,1163,'!',
      {call,1163,
       {remote,1163,{atom,1163,erlang},{atom,1163,element}},
       [{integer,1163,8},{var,1163,'S'}]},
      {tuple,1163,[{atom,1163,add_to_known},{var,1163,'AddedNodes'}]}},
     {match,1164,
      {var,1164,'S1'},
      {call,1164,
       {atom,1164,trace_message},
       [{var,1164,'S'},
        {tuple,1164,[{atom,1164,added},{var,1164,'AddedNodes'}]},
        {cons,1164,
         {tuple,1164,[{atom,1164,ops},{var,1164,'Ops'}]},
         {nil,1164}}]}},
     {call,1165,
      {remote,1165,{atom,1165,erlang},{atom,1165,setelement}},
      [{integer,1165,3},
       {var,1165,'S1'},
       {op,1165,'++',{var,1165,'Known'},{var,1165,'AddedNodes'}}]}]}]},
 {function,1167,do_whereis,2,
  [{clause,1167,
    [{var,1167,'Name'},{var,1167,'From'}],
    [],
    [{'case',1168,
      {call,1168,{atom,1168,is_global_lock_set},[]},
      [{clause,1169,
        [{atom,1169,false}],
        [],
        [{call,1170,
          {remote,1170,{atom,1170,gen_server},{atom,1170,reply}},
          [{var,1170,'From'},
           {call,1170,{atom,1170,where},[{var,1170,'Name'}]}]}]},
       {clause,1171,
        [{atom,1171,true}],
        [],
        [{call,1172,
          {atom,1172,send_again},
          [{tuple,1172,
            [{atom,1172,whereis},
             {var,1172,'Name'},
             {var,1172,'From'}]}]}]}]}]}]},
 {function,1177,terminate,2,
  [{clause,1177,
    [{var,1177,'_Reason'},{var,1177,'_S'}],
    [],
    [{match,1178,
      {atom,1178,true},
      {call,1178,
       {remote,1178,{atom,1178,ets},{atom,1178,delete}},
       [{atom,1178,global_names}]}},
     {match,1179,
      {atom,1179,true},
      {call,1179,
       {remote,1179,{atom,1179,ets},{atom,1179,delete}},
       [{atom,1179,global_names_ext}]}},
     {match,1180,
      {atom,1180,true},
      {call,1180,
       {remote,1180,{atom,1180,ets},{atom,1180,delete}},
       [{atom,1180,global_locks}]}},
     {match,1181,
      {atom,1181,true},
      {call,1181,
       {remote,1181,{atom,1181,ets},{atom,1181,delete}},
       [{atom,1181,global_pid_names}]}},
     {match,1182,
      {atom,1182,true},
      {call,1182,
       {remote,1182,{atom,1182,ets},{atom,1182,delete}},
       [{atom,1182,global_pid_ids}]}},
     {atom,1183,ok}]}]},
 {function,1187,code_change,3,
  [{clause,1187,
    [{var,1187,'_OldVsn'},{var,1187,'S'},{var,1187,'_Extra'}],
    [],
    [{tuple,1188,[{atom,1188,ok},{var,1188,'S'}]}]}]},
 {function,1193,start_resolver,2,
  [{clause,1193,
    [{var,1193,'Node'},{var,1193,'MyTag'}],
    [],
    [{call,1194,
      {atom,1194,spawn},
      [{'fun',1194,
        {clauses,
         [{clause,1194,[],[],
           [{call,1194,
             {atom,1194,resolver},
             [{var,1194,'Node'},{var,1194,'MyTag'}]}]}]}}]}]}]},
 {function,1196,resolver,2,
  [{clause,1196,
    [{var,1196,'Node'},{var,1196,'Tag'}],
    [],
    [{'receive',1197,
      [{clause,1198,
        [{tuple,1198,
          [{atom,1198,resolve},{var,1198,'NameList'},{var,1198,'Node'}]}],
        [],
        [{atom,61,ok},
         {match,1200,
          {tuple,1200,[{var,1200,'Ops'},{var,1200,'Resolved'}]},
          {call,1200,
           {atom,1200,exchange_names},
           [{var,1200,'NameList'},{var,1200,'Node'},{nil,1200},{nil,1200}]}},
         {match,1201,
          {var,1201,'Exchange'},
          {tuple,1201,
           [{atom,1201,exchange_ops},
            {var,1201,'Node'},
            {var,1201,'Tag'},
            {var,1201,'Ops'},
            {var,1201,'Resolved'}]}},
         {call,1202,
          {remote,1202,{atom,1202,gen_server},{atom,1202,cast}},
          [{atom,1202,global_name_server},{var,1202,'Exchange'}]},
         {call,1203,{atom,1203,exit},[{atom,1203,normal}]}]},
       {clause,1204,
        [{var,1204,'_'}],
        [],
        [{call,1205,
          {atom,1205,resolver},
          [{var,1205,'Node'},{var,1205,'Tag'}]}]}]}]}]},
 {function,1208,resend_pre_connect,1,
  [{clause,1208,
    [{var,1208,'Node'}],
    [],
    [{'case',1209,
      {call,1209,
       {atom,1209,erase},
       [{tuple,1209,[{atom,1209,pre_connect},{var,1209,'Node'}]}]},
      [{clause,1210,
        [{tuple,1210,
          [{var,1210,'Vsn'},{var,1210,'InitMsg'},{var,1210,'HisTag'}]}],
        [],
        [{call,1211,
          {remote,1211,{atom,1211,gen_server},{atom,1211,cast}},
          [{call,1211,{atom,1211,self},[]},
           {tuple,1212,
            [{atom,1212,init_connect},
             {tuple,1212,[{var,1212,'Vsn'},{var,1212,'HisTag'}]},
             {var,1212,'Node'},
             {var,1212,'InitMsg'}]}]}]},
       {clause,1213,[{var,1213,'_'}],[],[{atom,1214,ok}]}]}]}]},
 {function,1217,ins_name,6,
  [{clause,1217,
    [{var,1217,'Name'},
     {var,1217,'Pid'},
     {var,1217,'Method'},
     {var,1217,'FromPidOrNode'},
     {var,1217,'ExtraInfo'},
     {var,1217,'S0'}],
    [],
    [{atom,61,ok},
     {match,1219,
      {var,1219,'S1'},
      {call,1219,
       {atom,1219,delete_global_name_keep_pid},
       [{var,1219,'Name'},{var,1219,'S0'}]}},
     {match,1220,
      {var,1220,'S'},
      {call,1220,
       {atom,1220,trace_message},
       [{var,1220,'S1'},
        {tuple,1220,
         [{atom,1220,ins_name},
          {call,1220,{atom,1220,node},[{var,1220,'Pid'}]}]},
        {cons,1220,
         {var,1220,'Name'},
         {cons,1220,{var,1220,'Pid'},{nil,1220}}}]}},
     {call,1221,
      {atom,1221,insert_global_name},
      [{var,1221,'Name'},
       {var,1221,'Pid'},
       {var,1221,'Method'},
       {var,1221,'FromPidOrNode'},
       {var,1221,'ExtraInfo'},
       {var,1221,'S'}]}]}]},
 {function,1223,ins_name_ext,7,
  [{clause,1223,
    [{var,1223,'Name'},
     {var,1223,'Pid'},
     {var,1223,'Method'},
     {var,1223,'RegNode'},
     {var,1223,'FromPidOrNode'},
     {var,1223,'ExtraInfo'},
     {var,1223,'S0'}],
    [],
    [{atom,61,ok},
     {match,1225,
      {var,1225,'S1'},
      {call,1225,
       {atom,1225,delete_global_name_keep_pid},
       [{var,1225,'Name'},{var,1225,'S0'}]}},
     {call,1226,
      {atom,1226,dolink_ext},
      [{var,1226,'Pid'},{var,1226,'RegNode'}]},
     {match,1227,
      {var,1227,'S'},
      {call,1227,
       {atom,1227,trace_message},
       [{var,1227,'S1'},
        {tuple,1227,
         [{atom,1227,ins_name_ext},
          {call,1227,{atom,1227,node},[{var,1227,'Pid'}]}]},
        {cons,1227,
         {var,1227,'Name'},
         {cons,1227,{var,1227,'Pid'},{nil,1227}}}]}},
     {match,1228,
      {atom,1228,true},
      {call,1228,
       {remote,1228,{atom,1228,ets},{atom,1228,insert}},
       [{atom,1228,global_names_ext},
        {tuple,1228,
         [{var,1228,'Name'},{var,1228,'Pid'},{var,1228,'RegNode'}]}]}},
     {call,1229,
      {atom,1229,insert_global_name},
      [{var,1229,'Name'},
       {var,1229,'Pid'},
       {var,1229,'Method'},
       {var,1229,'FromPidOrNode'},
       {var,1229,'ExtraInfo'},
       {var,1229,'S'}]}]}]},
 {function,1231,where,1,
  [{clause,1231,
    [{var,1231,'Name'}],
    [],
    [{'case',1232,
      {call,1232,
       {remote,1232,{atom,1232,ets},{atom,1232,lookup}},
       [{atom,1232,global_names},{var,1232,'Name'}]},
      [{clause,1233,
        [{cons,1233,
          {tuple,1233,
           [{var,1233,'_Name'},
            {var,1233,'Pid'},
            {var,1233,'_Method'},
            {var,1233,'_RPid'},
            {var,1233,'_Ref'}]},
          {nil,1233}}],
        [],
        [{'if',1234,
          [{clause,1234,[],
            [[{op,1234,'==',
               {call,1234,{atom,1234,node},[{var,1234,'Pid'}]},
               {call,1234,{atom,1234,node},[]}}]],
            [{'case',1235,
              {call,1235,{atom,1235,is_process_alive},[{var,1235,'Pid'}]},
              [{clause,1236,[{atom,1236,true}],[],[{var,1236,'Pid'}]},
               {clause,1237,
                [{atom,1237,false}],
                [],
                [{atom,1237,undefined}]}]}]},
           {clause,1239,[],[[{atom,1239,true}]],[{var,1240,'Pid'}]}]}]},
       {clause,1242,[{nil,1242}],[],[{atom,1242,undefined}]}]}]}]},
 {function,1245,handle_set_lock,3,
  [{clause,1245,
    [{var,1245,'Id'},{var,1245,'Pid'},{var,1245,'S'}],
    [],
    [{atom,61,ok},
     {'case',1247,
      {call,1247,{atom,1247,can_set_lock},[{var,1247,'Id'}]},
      [{clause,1248,
        [{tuple,1248,[{atom,1248,true},{var,1248,'PidRefs'}]}],
        [],
        [{'case',1249,
          {call,1249,
           {atom,1249,pid_is_locking},
           [{var,1249,'Pid'},{var,1249,'PidRefs'}]},
          [{clause,1250,
            [{atom,1250,true}],
            [],
            [{tuple,1251,[{atom,1251,true},{var,1251,'S'}]}]},
           {clause,1252,
            [{atom,1252,false}],
            [],
            [{tuple,1253,
              [{atom,1253,true},
               {call,1253,
                {atom,1253,insert_lock},
                [{var,1253,'Id'},
                 {var,1253,'Pid'},
                 {var,1253,'PidRefs'},
                 {var,1253,'S'}]}]}]}]}]},
       {clause,1255,
        [{match,1255,{atom,1255,false},{var,1255,'Reply'}}],
        [],
        [{tuple,1256,[{var,1256,'Reply'},{var,1256,'S'}]}]}]}]}]},
 {function,1259,can_set_lock,1,
  [{clause,1259,
    [{tuple,1259,[{var,1259,'ResourceId'},{var,1259,'LockRequesterId'}]}],
    [],
    [{'case',1260,
      {call,1260,
       {remote,1260,{atom,1260,ets},{atom,1260,lookup}},
       [{atom,1260,global_locks},{var,1260,'ResourceId'}]},
      [{clause,1261,
        [{cons,1261,
          {tuple,1261,
           [{var,1261,'ResourceId'},
            {var,1261,'LockRequesterId'},
            {var,1261,'PidRefs'}]},
          {nil,1261}}],
        [],
        [{tuple,1262,[{atom,1262,true},{var,1262,'PidRefs'}]}]},
       {clause,1263,
        [{cons,1263,
          {tuple,1263,
           [{var,1263,'ResourceId'},
            {var,1263,'_LockRequesterId2'},
            {var,1263,'_PidRefs'}]},
          {nil,1263}}],
        [],
        [{atom,1264,false}]},
       {clause,1265,
        [{nil,1265}],
        [],
        [{tuple,1266,[{atom,1266,true},{nil,1266}]}]}]}]}]},
 {function,1269,insert_lock,4,
  [{clause,1269,
    [{match,1269,
      {tuple,1269,[{var,1269,'ResourceId'},{var,1269,'LockRequesterId'}]},
      {var,1269,'Id'}},
     {var,1269,'Pid'},
     {var,1269,'PidRefs'},
     {var,1269,'S'}],
    [],
    [{match,1270,
      {tuple,1270,[{var,1270,'RPid'},{var,1270,'Ref'}]},
      {call,1270,{atom,1270,do_monitor},[{var,1270,'Pid'}]}},
     {match,1271,
      {atom,1271,true},
      {call,1271,
       {remote,1271,{atom,1271,ets},{atom,1271,insert}},
       [{atom,1271,global_pid_ids},
        {tuple,1271,[{var,1271,'Pid'},{var,1271,'ResourceId'}]}]}},
     {match,1272,
      {atom,1272,true},
      {call,1272,
       {remote,1272,{atom,1272,ets},{atom,1272,insert}},
       [{atom,1272,global_pid_ids},
        {tuple,1272,[{var,1272,'Ref'},{var,1272,'ResourceId'}]}]}},
     {match,1273,
      {var,1273,'Lock'},
      {tuple,1273,
       [{var,1273,'ResourceId'},
        {var,1273,'LockRequesterId'},
        {cons,1273,
         {tuple,1273,[{var,1273,'Pid'},{var,1273,'RPid'},{var,1273,'Ref'}]},
         {var,1273,'PidRefs'}}]}},
     {match,1274,
      {atom,1274,true},
      {call,1274,
       {remote,1274,{atom,1274,ets},{atom,1274,insert}},
       [{atom,1274,global_locks},{var,1274,'Lock'}]}},
     {call,1275,
      {atom,1275,trace_message},
      [{var,1275,'S'},
       {tuple,1275,
        [{atom,1275,ins_lock},
         {call,1275,{atom,1275,node},[{var,1275,'Pid'}]}]},
       {cons,1275,
        {var,1275,'Id'},
        {cons,1275,{var,1275,'Pid'},{nil,1275}}}]}]}]},
 {function,1277,is_global_lock_set,0,
  [{clause,1277,[],[],
    [{call,1278,{atom,1278,is_lock_set},[{atom,976,global}]}]}]},
 {function,1280,is_lock_set,1,
  [{clause,1280,
    [{var,1280,'ResourceId'}],
    [],
    [{call,1281,
      {remote,1281,{atom,1281,ets},{atom,1281,member}},
      [{atom,1281,global_locks},{var,1281,'ResourceId'}]}]}]},
 {function,1283,handle_del_lock,3,
  [{clause,1283,
    [{tuple,1283,[{var,1283,'ResourceId'},{var,1283,'LockReqId'}]},
     {var,1283,'Pid'},
     {var,1283,'S0'}],
    [],
    [{atom,61,ok},
     {'case',1285,
      {call,1285,
       {remote,1285,{atom,1285,ets},{atom,1285,lookup}},
       [{atom,1285,global_locks},{var,1285,'ResourceId'}]},
      [{clause,1286,
        [{cons,1286,
          {tuple,1286,
           [{var,1286,'ResourceId'},
            {var,1286,'LockReqId'},
            {var,1286,'PidRefs'}]},
          {nil,1286}}],
        [],
        [{call,1287,
          {atom,1287,remove_lock},
          [{var,1287,'ResourceId'},
           {var,1287,'LockReqId'},
           {var,1287,'Pid'},
           {var,1287,'PidRefs'},
           {atom,1287,false},
           {var,1287,'S0'}]}]},
       {clause,1288,[{var,1288,'_'}],[],[{var,1288,'S0'}]}]}]}]},
 {function,1291,remove_lock,6,
  [{clause,1291,
    [{var,1291,'ResourceId'},
     {var,1291,'LockRequesterId'},
     {var,1291,'Pid'},
     {cons,1291,
      {tuple,1291,[{var,1291,'Pid'},{var,1291,'RPid'},{var,1291,'Ref'}]},
      {nil,1291}},
     {var,1291,'Down'},
     {var,1291,'S0'}],
    [],
    [{atom,61,ok},
     {match,1293,
      {atom,1293,true},
      {call,1293,
       {remote,1293,{atom,1293,erlang},{atom,1293,demonitor}},
       [{var,1293,'Ref'},{cons,1293,{atom,1293,flush},{nil,1293}}]}},
     {call,1294,
      {atom,1294,kill_monitor_proc},
      [{var,1294,'RPid'},{var,1294,'Pid'}]},
     {match,1295,
      {atom,1295,true},
      {call,1295,
       {remote,1295,{atom,1295,ets},{atom,1295,delete}},
       [{atom,1295,global_locks},{var,1295,'ResourceId'}]}},
     {match,1296,
      {atom,1296,true},
      {call,1296,
       {remote,1296,{atom,1296,ets},{atom,1296,delete_object}},
       [{atom,1296,global_pid_ids},
        {tuple,1296,[{var,1296,'Pid'},{var,1296,'ResourceId'}]}]}},
     {match,1297,
      {atom,1297,true},
      {call,1297,
       {remote,1297,{atom,1297,ets},{atom,1297,delete_object}},
       [{atom,1297,global_pid_ids},
        {tuple,1297,[{var,1297,'Ref'},{var,1297,'ResourceId'}]}]}},
     {match,1298,
      {var,1298,'S'},
      {'case',1298,
       {var,1298,'ResourceId'},
       [{clause,976,
         [{atom,976,global}],
         [],
         [{call,1299,
           {remote,1299,{atom,1299,erlang},{atom,1299,setelement}},
           [{integer,1299,11},{var,1299,'S0'},{var,1299,'Down'}]}]},
        {clause,1300,[{var,1300,'_'}],[],[{var,1300,'S0'}]}]}},
     {call,1302,
      {atom,1302,trace_message},
      [{var,1302,'S'},
       {tuple,1302,
        [{atom,1302,rem_lock},
         {call,1302,{atom,1302,node},[{var,1302,'Pid'}]}]},
       {cons,1303,
        {tuple,1303,[{var,1303,'ResourceId'},{var,1303,'LockRequesterId'}]},
        {cons,1303,{var,1303,'Pid'},{nil,1303}}}]}]},
   {clause,1304,
    [{var,1304,'ResourceId'},
     {var,1304,'LockRequesterId'},
     {var,1304,'Pid'},
     {var,1304,'PidRefs0'},
     {var,1304,'_Down'},
     {var,1304,'S'}],
    [],
    [{atom,61,ok},
     {match,1306,
      {var,1306,'PidRefs'},
      {'case',1306,
       {call,1306,
        {remote,1306,{atom,1306,lists},{atom,1306,keyfind}},
        [{var,1306,'Pid'},{integer,1306,1},{var,1306,'PidRefs0'}]},
       [{clause,1307,
         [{tuple,1307,[{var,1307,'Pid'},{var,1307,'RPid'},{var,1307,'Ref'}]}],
         [],
         [{match,1308,
           {atom,1308,true},
           {call,1308,
            {remote,1308,{atom,1308,erlang},{atom,1308,demonitor}},
            [{var,1308,'Ref'},{cons,1308,{atom,1308,flush},{nil,1308}}]}},
          {call,1309,
           {atom,1309,kill_monitor_proc},
           [{var,1309,'RPid'},{var,1309,'Pid'}]},
          {match,1310,
           {atom,1310,true},
           {call,1310,
            {remote,1310,{atom,1310,ets},{atom,1310,delete_object}},
            [{atom,1310,global_pid_ids},
             {tuple,1311,[{var,1311,'Ref'},{var,1311,'ResourceId'}]}]}},
          {call,1312,
           {remote,1312,{atom,1312,lists},{atom,1312,keydelete}},
           [{var,1312,'Pid'},{integer,1312,1},{var,1312,'PidRefs0'}]}]},
        {clause,1313,[{atom,1313,false}],[],[{var,1314,'PidRefs0'}]}]}},
     {match,1316,
      {var,1316,'Lock'},
      {tuple,1316,
       [{var,1316,'ResourceId'},
        {var,1316,'LockRequesterId'},
        {var,1316,'PidRefs'}]}},
     {match,1317,
      {atom,1317,true},
      {call,1317,
       {remote,1317,{atom,1317,ets},{atom,1317,insert}},
       [{atom,1317,global_locks},{var,1317,'Lock'}]}},
     {match,1318,
      {atom,1318,true},
      {call,1318,
       {remote,1318,{atom,1318,ets},{atom,1318,delete_object}},
       [{atom,1318,global_pid_ids},
        {tuple,1318,[{var,1318,'Pid'},{var,1318,'ResourceId'}]}]}},
     {call,1319,
      {atom,1319,trace_message},
      [{var,1319,'S'},
       {tuple,1319,
        [{atom,1319,rem_lock},
         {call,1319,{atom,1319,node},[{var,1319,'Pid'}]}]},
       {cons,1320,
        {tuple,1320,[{var,1320,'ResourceId'},{var,1320,'LockRequesterId'}]},
        {cons,1320,{var,1320,'Pid'},{nil,1320}}}]}]}]},
 {function,1322,kill_monitor_proc,2,
  [{clause,1322,[{var,1322,'Pid'},{var,1322,'Pid'}],[],[{atom,1323,ok}]},
   {clause,1324,
    [{var,1324,'RPid'},{var,1324,'_Pid'}],
    [],
    [{call,1325,{atom,1325,exit},[{var,1325,'RPid'},{atom,1325,kill}]}]}]},
 {function,1327,do_ops,5,
  [{clause,1327,
    [{var,1327,'Ops'},
     {var,1327,'ConnNode'},
     {var,1327,'Names_ext'},
     {var,1327,'ExtraInfo'},
     {var,1327,'S0'}],
    [],
    [{atom,61,ok},
     {match,1330,
      {var,1330,'XInserts'},
      {lc,1330,
       {tuple,1330,
        [{var,1330,'Name'},
         {var,1330,'Pid'},
         {var,1330,'RegNode'},
         {var,1330,'Method'}]},
       [{generate,1331,
         {tuple,1331,
          [{var,1331,'Name2'},{var,1331,'Pid2'},{var,1331,'RegNode'}]},
         {var,1331,'Names_ext'}},
        {generate,1332,
         {tuple,1332,
          [{atom,1332,insert},
           {tuple,1332,
            [{var,1332,'Name'},{var,1332,'Pid'},{var,1332,'Method'}]}]},
         {var,1332,'Ops'}},
        {op,1333,'=:=',{var,1333,'Name'},{var,1333,'Name2'}},
        {op,1333,'=:=',{var,1333,'Pid'},{var,1333,'Pid2'}}]}},
     {match,1334,
      {var,1334,'S1'},
      {call,1334,
       {remote,1334,{atom,1334,lists},{atom,1334,foldl}},
       [{'fun',1334,
         {clauses,
          [{clause,1334,
            [{tuple,1334,
              [{var,1334,'Name'},
               {var,1334,'Pid'},
               {var,1334,'RegNode'},
               {var,1334,'Method'}]},
             {var,1334,'S1'}],
            [],
            [{call,1335,
              {atom,1335,ins_name_ext},
              [{var,1335,'Name'},
               {var,1335,'Pid'},
               {var,1335,'Method'},
               {var,1335,'RegNode'},
               {var,1336,'ConnNode'},
               {var,1336,'ExtraInfo'},
               {var,1336,'S1'}]}]}]}},
        {var,1337,'S0'},
        {var,1337,'XInserts'}]}},
     {match,1339,
      {var,1339,'XNames'},
      {lc,1339,
       {var,1339,'Name'},
       [{generate,1339,
         {tuple,1339,
          [{var,1339,'Name'},
           {var,1339,'_Pid'},
           {var,1339,'_RegNode'},
           {var,1339,'_Method'}]},
         {var,1339,'XInserts'}}]}},
     {match,1340,
      {var,1340,'Inserts'},
      {lc,1340,
       {tuple,1340,
        [{var,1340,'Name'},
         {var,1340,'Pid'},
         {call,1340,{atom,1340,node},[{var,1340,'Pid'}]},
         {var,1340,'Method'}]},
       [{generate,1341,
         {tuple,1341,
          [{atom,1341,insert},
           {tuple,1341,
            [{var,1341,'Name'},{var,1341,'Pid'},{var,1341,'Method'}]}]},
         {var,1341,'Ops'}},
        {op,1342,'not',
         {call,1342,
          {remote,1342,{atom,1342,lists},{atom,1342,member}},
          [{var,1342,'Name'},{var,1342,'XNames'}]}}]}},
     {match,1343,
      {var,1343,'S2'},
      {call,1343,
       {remote,1343,{atom,1343,lists},{atom,1343,foldl}},
       [{'fun',1343,
         {clauses,
          [{clause,1343,
            [{tuple,1343,
              [{var,1343,'Name'},
               {var,1343,'Pid'},
               {var,1343,'_RegNode'},
               {var,1343,'Method'}]},
             {var,1343,'S2'}],
            [],
            [{call,1344,
              {atom,1344,ins_name},
              [{var,1344,'Name'},
               {var,1344,'Pid'},
               {var,1344,'Method'},
               {var,1344,'ConnNode'},
               {var,1345,'ExtraInfo'},
               {var,1345,'S2'}]}]}]}},
        {var,1346,'S1'},
        {var,1346,'Inserts'}]}},
     {match,1348,
      {var,1348,'DelNames'},
      {lc,1348,
       {var,1348,'Name'},
       [{generate,1348,
         {tuple,1348,[{atom,1348,delete},{var,1348,'Name'}]},
         {var,1348,'Ops'}}]}},
     {call,1349,
      {remote,1349,{atom,1349,lists},{atom,1349,foldl}},
      [{'fun',1349,
        {clauses,
         [{clause,1349,
           [{var,1349,'Name'},{var,1349,'S'}],
           [],
           [{call,1349,
             {atom,1349,delete_global_name2},
             [{var,1349,'Name'},{var,1349,'S'}]}]}]}},
       {var,1350,'S2'},
       {var,1350,'DelNames'}]}]}]},
 {function,1365,sync_others,1,
  [{clause,1365,
    [{var,1365,'Nodes'}],
    [],
    [{match,1366,
      {var,1366,'N'},
      {'case',1366,
       {call,1366,
        {remote,1366,{atom,1366,application},{atom,1366,get_env}},
        [{atom,1366,kernel},{atom,55,global_connect_retries}]},
       [{clause,1367,
         [{tuple,1367,[{atom,1367,ok},{var,1367,'NRetries'}]}],
         [[{call,1367,{atom,1367,is_integer},[{var,1367,'NRetries'}]},
           {op,1368,'>=',{var,1368,'NRetries'},{integer,1368,0}}]],
         [{var,1368,'NRetries'}]},
        {clause,1369,[{var,1369,'_'}],[],[{integer,56,5}]}]}},
     {call,1371,
      {remote,1371,{atom,1371,lists},{atom,1371,foreach}},
      [{'fun',1371,
        {clauses,
         [{clause,1371,
           [{var,1371,'Node'}],
           [],
           [{call,1372,
             {atom,1372,spawn},
             [{'fun',1372,
               {clauses,
                [{clause,1372,[],[],
                  [{call,1372,
                    {atom,1372,sync_other},
                    [{var,1372,'Node'},{var,1372,'N'}]}]}]}}]}]}]}},
       {var,1373,'Nodes'}]}]}]},
 {function,1375,sync_other,2,
  [{clause,1375,
    [{var,1375,'Node'},{var,1375,'N'}],
    [],
    [{call,1376,
      {remote,1376,{atom,1376,erlang},{atom,1376,monitor_node}},
      [{var,1376,'Node'},
       {atom,1376,true},
       {cons,1376,{atom,1376,allow_passive_connect},{nil,1376}}]},
     {'receive',1377,
      [{clause,1378,
        [{tuple,1378,[{atom,1378,nodedown},{var,1378,'Node'}]}],
        [[{op,1378,'>',{var,1378,'N'},{integer,1378,0}}]],
        [{call,1379,
          {atom,1379,sync_other},
          [{var,1379,'Node'},{op,1379,'-',{var,1379,'N'},{integer,1379,1}}]}]},
       {clause,1380,
        [{tuple,1380,[{atom,1380,nodedown},{var,1380,'Node'}]}],
        [],
        [{atom,61,ok},
         {call,1382,
          {remote,1382,{atom,1382,error_logger},{atom,1382,warning_msg}},
          [{string,1382,"global: ~w failed to connect to ~w\n"},
           {cons,1383,
            {call,1383,{atom,1383,node},[]},
            {cons,1383,{var,1383,'Node'},{nil,1383}}}]},
         {op,1384,'!',
          {atom,1384,global_name_server},
          {tuple,1384,[{atom,1384,extra_nodedown},{var,1384,'Node'}]}}]}],
      {integer,1385,0},
      [{call,1386,
        {remote,1386,{atom,1386,gen_server},{atom,1386,cast}},
        [{tuple,1386,[{atom,1386,global_name_server},{var,1386,'Node'}]},
         {tuple,1386,
          [{atom,1386,in_sync},
           {call,1386,{atom,1386,node},[]},
           {atom,1386,true}]}]}]}]}]},
 {function,1391,insert_global_name,6,
  [{clause,1391,
    [{var,1391,'Name'},
     {var,1391,'Pid'},
     {var,1391,'Method'},
     {var,1391,'FromPidOrNode'},
     {var,1391,'ExtraInfo'},
     {var,1391,'S'}],
    [],
    [{match,1392,
      {tuple,1392,[{var,1392,'RPid'},{var,1392,'Ref'}]},
      {call,1392,{atom,1392,do_monitor},[{var,1392,'Pid'}]}},
     {match,1393,
      {atom,1393,true},
      {call,1393,
       {remote,1393,{atom,1393,ets},{atom,1393,insert}},
       [{atom,1393,global_names},
        {tuple,1393,
         [{var,1393,'Name'},
          {var,1393,'Pid'},
          {var,1393,'Method'},
          {var,1393,'RPid'},
          {var,1393,'Ref'}]}]}},
     {match,1394,
      {atom,1394,true},
      {call,1394,
       {remote,1394,{atom,1394,ets},{atom,1394,insert}},
       [{atom,1394,global_pid_names},
        {tuple,1394,[{var,1394,'Pid'},{var,1394,'Name'}]}]}},
     {match,1395,
      {atom,1395,true},
      {call,1395,
       {remote,1395,{atom,1395,ets},{atom,1395,insert}},
       [{atom,1395,global_pid_names},
        {tuple,1395,[{var,1395,'Ref'},{var,1395,'Name'}]}]}},
     {'case',1396,
      {call,1396,
       {atom,1396,lock_still_set},
       [{var,1396,'FromPidOrNode'},{var,1396,'ExtraInfo'},{var,1396,'S'}]},
      [{clause,1397,[{atom,1397,true}],[],[{var,1398,'S'}]},
       {clause,1399,
        [{atom,1399,false}],
        [],
        [{call,1408,
          {atom,1408,delete_global_name2},
          [{var,1408,'Name'},{var,1408,'S'}]}]}]}]}]},
 {function,1411,lock_still_set,3,
  [{clause,1411,
    [{var,1411,'PidOrNode'},{var,1411,'ExtraInfo'},{var,1411,'S'}],
    [],
    [{'case',1412,
      {call,1412,
       {remote,1412,{atom,1412,ets},{atom,1412,lookup}},
       [{atom,1412,global_locks},{atom,976,global}]},
      [{clause,1413,
        [{cons,1413,
          {tuple,1413,
           [{atom,976,global},{var,1413,'_LockReqId'},{var,1413,'PidRefs'}]},
          {nil,1413}}],
        [[{call,1413,{atom,1413,is_pid},[{var,1413,'PidOrNode'}]}]],
        [{call,1415,
          {remote,1415,{atom,1415,lists},{atom,1415,keymember}},
          [{var,1415,'PidOrNode'},{integer,1415,1},{var,1415,'PidRefs'}]}]},
       {clause,1416,
        [{cons,1416,
          {tuple,1416,
           [{atom,976,global},{var,1416,'LockReqId'},{var,1416,'_PidRefs'}]},
          {nil,1416}}],
        [[{call,1416,{atom,1416,is_atom},[{var,1416,'PidOrNode'}]}]],
        [{match,1417,
          {tuple,1417,[{atom,976,global},{var,1417,'LockId'}]},
          {call,1417,
           {atom,1417,extra_info},
           [{atom,1417,lock},{var,1417,'ExtraInfo'}]}},
         {op,1418,'=:=',{var,1418,'LockReqId'},{var,1418,'LockId'}}]},
       {clause,1419,
        [{nil,1419}],
        [],
        [{op,1420,'not',
          {call,1420,
           {remote,1420,{atom,1420,erlang},{atom,1420,element}},
           [{integer,1420,11},{var,1420,'S'}]}}]}]}]}]},
 {function,1423,extra_info,2,
  [{clause,1423,
    [{var,1423,'Tag'},{var,1423,'ExtraInfo'}],
    [],
    [{'case',1425,
      {'catch',1425,
       {call,1425,
        {remote,1425,{atom,1425,lists},{atom,1425,keyfind}},
        [{var,1425,'Tag'},{integer,1425,1},{var,1425,'ExtraInfo'}]}},
      [{clause,1426,
        [{tuple,1426,[{var,1426,'Tag'},{var,1426,'Info'}]}],
        [],
        [{var,1427,'Info'}]},
       {clause,1428,[{var,1428,'_'}],[],[{atom,1429,undefined}]}]}]}]},
 {function,1432,del_name,2,
  [{clause,1432,
    [{var,1432,'Ref'},{var,1432,'S'}],
    [],
    [{match,1433,
      {var,1433,'NameL'},
      {lc,1433,
       {var,1433,'Name'},
       [{generate,1434,
         {tuple,1434,[{var,1434,'_'},{var,1434,'Name'}]},
         {call,1434,
          {remote,1434,{atom,1434,ets},{atom,1434,lookup}},
          [{atom,1434,global_pid_names},{var,1434,'Ref'}]}},
        {generate,1435,
         {tuple,1435,
          [{var,1435,'_'},
           {var,1435,'_Pid'},
           {var,1435,'_Method'},
           {var,1435,'_RPid'},
           {var,1435,'Ref1'}]},
         {call,1436,
          {remote,1436,{atom,1436,ets},{atom,1436,lookup}},
          [{atom,1436,global_names},{var,1436,'Name'}]}},
        {op,1437,'=:=',{var,1437,'Ref1'},{var,1437,'Ref'}}]}},
     {'case',1438,
      {var,1438,'NameL'},
      [{clause,1439,
        [{cons,1439,{var,1439,'Name'},{nil,1439}}],
        [],
        [{call,1440,
          {atom,1440,delete_global_name2},
          [{var,1440,'Name'},{var,1440,'S'}]}]},
       {clause,1441,[{nil,1441}],[],[{var,1442,'S'}]}]}]}]},
 {function,1446,delete_global_name_keep_pid,2,
  [{clause,1446,
    [{var,1446,'Name'},{var,1446,'S'}],
    [],
    [{'case',1447,
      {call,1447,
       {remote,1447,{atom,1447,ets},{atom,1447,lookup}},
       [{atom,1447,global_names},{var,1447,'Name'}]},
      [{clause,1448,
        [{cons,1448,
          {tuple,1448,
           [{var,1448,'Name'},
            {var,1448,'Pid'},
            {var,1448,'_Method'},
            {var,1448,'RPid'},
            {var,1448,'Ref'}]},
          {nil,1448}}],
        [],
        [{call,1449,
          {atom,1449,delete_global_name2},
          [{var,1449,'Name'},
           {var,1449,'Pid'},
           {var,1449,'RPid'},
           {var,1449,'Ref'},
           {var,1449,'S'}]}]},
       {clause,1450,[{nil,1450}],[],[{var,1451,'S'}]}]}]}]},
 {function,1454,delete_global_name2,2,
  [{clause,1454,
    [{var,1454,'Name'},{var,1454,'S'}],
    [],
    [{'case',1455,
      {call,1455,
       {remote,1455,{atom,1455,ets},{atom,1455,lookup}},
       [{atom,1455,global_names},{var,1455,'Name'}]},
      [{clause,1456,
        [{cons,1456,
          {tuple,1456,
           [{var,1456,'Name'},
            {var,1456,'Pid'},
            {var,1456,'_Method'},
            {var,1456,'RPid'},
            {var,1456,'Ref'}]},
          {nil,1456}}],
        [],
        [{match,1457,
          {atom,1457,true},
          {call,1457,
           {remote,1457,{atom,1457,ets},{atom,1457,delete}},
           [{atom,1457,global_names},{var,1457,'Name'}]}},
         {call,1458,
          {atom,1458,delete_global_name2},
          [{var,1458,'Name'},
           {var,1458,'Pid'},
           {var,1458,'RPid'},
           {var,1458,'Ref'},
           {var,1458,'S'}]}]},
       {clause,1459,[{nil,1459}],[],[{var,1460,'S'}]}]}]}]},
 {function,1463,delete_global_name2,5,
  [{clause,1463,
    [{var,1463,'Name'},
     {var,1463,'Pid'},
     {var,1463,'RPid'},
     {var,1463,'Ref'},
     {var,1463,'S'}],
    [],
    [{match,1464,
      {atom,1464,true},
      {call,1464,
       {remote,1464,{atom,1464,erlang},{atom,1464,demonitor}},
       [{var,1464,'Ref'},{cons,1464,{atom,1464,flush},{nil,1464}}]}},
     {call,1465,
      {atom,1465,kill_monitor_proc},
      [{var,1465,'RPid'},{var,1465,'Pid'}]},
     {call,1466,
      {atom,1466,delete_global_name},
      [{var,1466,'Name'},{var,1466,'Pid'}]},
     {atom,61,ok},
     {match,1468,
      {atom,1468,true},
      {call,1468,
       {remote,1468,{atom,1468,ets},{atom,1468,delete_object}},
       [{atom,1468,global_pid_names},
        {tuple,1468,[{var,1468,'Pid'},{var,1468,'Name'}]}]}},
     {match,1469,
      {atom,1469,true},
      {call,1469,
       {remote,1469,{atom,1469,ets},{atom,1469,delete_object}},
       [{atom,1469,global_pid_names},
        {tuple,1469,[{var,1469,'Ref'},{var,1469,'Name'}]}]}},
     {'case',1470,
      {call,1470,
       {remote,1470,{atom,1470,ets},{atom,1470,lookup}},
       [{atom,1470,global_names_ext},{var,1470,'Name'}]},
      [{clause,1471,
        [{cons,1471,
          {tuple,1471,
           [{var,1471,'Name'},{var,1471,'Pid'},{var,1471,'RegNode'}]},
          {nil,1471}}],
        [],
        [{match,1472,
          {atom,1472,true},
          {call,1472,
           {remote,1472,{atom,1472,ets},{atom,1472,delete}},
           [{atom,1472,global_names_ext},{var,1472,'Name'}]}},
         {atom,61,ok},
         {call,1474,
          {atom,1474,dounlink_ext},
          [{var,1474,'Pid'},{var,1474,'RegNode'}]}]},
       {clause,1475,[{nil,1475}],[],[{atom,61,ok},{atom,1477,ok}]}]},
     {call,1479,
      {atom,1479,trace_message},
      [{var,1479,'S'},
       {tuple,1479,
        [{atom,1479,del_name},
         {call,1479,{atom,1479,node},[{var,1479,'Pid'}]}]},
       {cons,1479,
        {var,1479,'Name'},
        {cons,1479,{var,1479,'Pid'},{nil,1479}}}]}]}]},
 {function,1483,delete_global_name,2,
  [{clause,1483,[{var,1483,'_Name'},{var,1483,'_Pid'}],[],[{atom,1484,ok}]}]},
 {function,1517,start_the_locker,1,
  [{clause,1517,
    [{var,1517,'DoTrace'}],
    [],
    [{call,1518,
      {atom,1518,spawn_link},
      [{call,1518,
        {atom,1518,init_the_locker_fun},
        [{var,1518,'DoTrace'}]}]}]}]},
 {function,1522,init_the_locker_fun,1,
  [{clause,1522,
    [{var,1522,'DoTrace'}],
    [],
    [{'fun',1523,
      {clauses,
       [{clause,1523,[],[],
         [{call,1524,
           {atom,1524,process_flag},
           [{atom,1524,trap_exit},{atom,1524,true}]},
          {match,1525,
           {var,1525,'S0'},
           {tuple,1525,
            [{atom,1525,multi},
             {nil,1504},
             {nil,1505},
             {nil,1506},
             {atom,1525,undefined},
             {atom,1510,false},
             {var,1525,'DoTrace'}]}},
          {match,1526,
           {var,1526,'S1'},
           {call,1526,
            {atom,1526,update_locker_known},
            [{tuple,1526,
              [{atom,1526,add},{call,1526,{atom,1526,get_known},[]}]},
             {var,1526,'S0'}]}},
          {call,1527,{atom,1527,loop_the_locker},[{var,1527,'S1'}]},
          {call,1528,
           {remote,1528,{atom,1528,erlang},{atom,1528,error}},
           [{atom,1528,locker_exited}]}]}]}}]}]},
 {function,1531,loop_the_locker,1,
  [{clause,1531,
    [{var,1531,'S'}],
    [],
    [{atom,61,ok},
     {'receive',1533,
      [{clause,1534,
        [{var,1534,'Message'}],
        [[{op,1534,'=/=',
           {call,1534,
            {atom,1534,element},
            [{integer,1534,1},{var,1534,'Message'}]},
           {atom,1534,nodeup}}]],
        [{call,1535,
          {atom,1535,the_locker_message},
          [{var,1535,'Message'},{var,1535,'S'}]}]}],
      {integer,1536,0},
      [{match,1537,
        {var,1537,'Timeout'},
        {'case',1538,
         {tuple,1538,
          [{call,1538,
            {remote,1538,{atom,1538,erlang},{atom,1538,element}},
            [{integer,1538,2},{var,1538,'S'}]},
           {call,1538,
            {remote,1538,{atom,1538,erlang},{atom,1538,element}},
            [{integer,1538,3},{var,1538,'S'}]}]},
         [{clause,1539,
           [{tuple,1539,[{nil,1539},{nil,1539}]}],
           [],
           [{atom,1540,infinity}]},
          {clause,1541,
           [{var,1541,'_'}],
           [],
           [{'if',1546,
             [{clause,1547,[],
               [[{call,1547,
                  {remote,1547,{atom,1547,erlang},{atom,1547,element}},
                  [{integer,1547,6},{var,1547,'S'}]}]],
               [{integer,1548,0}]},
              {clause,1549,[],
               [[{op,1549,'=:=',
                  {call,1549,
                   {remote,1549,{atom,1549,erlang},{atom,1549,element}},
                   [{integer,1549,4},{var,1549,'S'}]},
                  {nil,1549}}]],
               [{integer,1550,200}]},
              {clause,1551,[],
               [[{atom,1551,true}]],
               [{call,1552,
                 {remote,1552,{atom,1552,erlang},{atom,1552,min}},
                 [{op,1552,'+',
                   {integer,1552,1000},
                   {op,1552,'*',
                    {integer,1552,100},
                    {call,1552,
                     {atom,1552,length},
                     [{call,1552,
                       {remote,1552,{atom,1552,erlang},{atom,1552,element}},
                       [{integer,1552,4},{var,1552,'S'}]}]}}},
                  {integer,1553,3000}]}]}]}]}]}},
       {match,1556,
        {var,1556,'S1'},
        {call,1556,
         {remote,1556,{atom,1556,erlang},{atom,1556,setelement}},
         [{integer,1556,6},{var,1556,'S'},{atom,1556,false}]}},
       {'receive',1557,
        [{clause,1558,
          [{var,1558,'Message'}],
          [[{op,1558,'=/=',
             {call,1558,
              {atom,1558,element},
              [{integer,1558,1},{var,1558,'Message'}]},
             {atom,1558,nodeup}}]],
          [{call,1559,
            {atom,1559,the_locker_message},
            [{var,1559,'Message'},{var,1559,'S1'}]}]}],
        {var,1560,'Timeout'},
        [{'case',1561,
          {call,1561,{atom,1561,is_global_lock_set},[]},
          [{clause,1562,
            [{atom,1562,true}],
            [],
            [{call,1563,{atom,1563,loop_the_locker},[{var,1563,'S1'}]}]},
           {clause,1564,
            [{atom,1564,false}],
            [],
            [{call,1565,{atom,1565,select_node},[{var,1565,'S1'}]}]}]}]}]}]}]},
 {function,1570,the_locker_message,2,
  [{clause,1570,
    [{tuple,1570,
      [{atom,1570,his_the_locker},
       {var,1570,'HisTheLocker'},
       {var,1570,'HisKnown0'},
       {var,1570,'_MyKnown'}]},
     {var,1570,'S'}],
    [],
    [{atom,61,ok},
     {match,1572,
      {tuple,1572,[{var,1572,'HisVsn'},{var,1572,'_HisKnown'}]},
      {var,1572,'HisKnown0'}},
     {match,1573,
      {atom,1573,true},
      {op,1573,'>',{var,1573,'HisVsn'},{integer,1573,4}}},
     {'receive',1574,
      [{clause,1575,
        [{tuple,1575,
          [{atom,1575,nodeup},{var,1575,'Node'},{var,1575,'MyTag'}]}],
        [[{op,1575,'=:=',
           {call,1575,{atom,1575,node},[{var,1575,'HisTheLocker'}]},
           {var,1575,'Node'}}]],
        [{atom,61,ok},
         {match,1577,
          {var,1577,'Him'},
          {tuple,1577,
           [{atom,1577,him},
            {call,1577,{atom,1577,node},[{var,1577,'HisTheLocker'}]},
            {var,1578,'HisTheLocker'},
            {var,1578,'HisVsn'},
            {var,1577,'MyTag'}]}},
         {call,1579,
          {atom,1579,loop_the_locker},
          [{call,1579,
            {atom,1579,add_node},
            [{var,1579,'Him'},{var,1579,'S'}]}]}]},
       {clause,1580,
        [{tuple,1580,
          [{atom,1580,cancel},
           {var,1580,'Node'},
           {var,1580,'_Tag'},
           {atom,1580,no_fun}]}],
        [[{op,1580,'=:=',
           {call,1580,{atom,1580,node},[{var,1580,'HisTheLocker'}]},
           {var,1580,'Node'}}]],
        [{call,1581,{atom,1581,loop_the_locker},[{var,1581,'S'}]}]}],
      {integer,1582,60000},
      [{atom,61,ok},
       {call,1584,
        {remote,1584,{atom,1584,error_logger},{atom,1584,error_msg}},
        [{string,1584,"global: nodeup never came ~w ~w\n"},
         {cons,1585,
          {call,1585,{atom,1585,node},[]},
          {cons,1585,
           {call,1585,{atom,1585,node},[{var,1585,'HisTheLocker'}]},
           {nil,1585}}}]},
       {call,1586,
        {atom,1586,loop_the_locker},
        [{call,1586,
          {remote,1586,{atom,1586,erlang},{atom,1586,setelement}},
          [{integer,1586,6},{var,1586,'S'},{atom,1586,false}]}]}]}]},
   {clause,1588,
    [{tuple,1588,
      [{atom,1588,cancel},
       {var,1588,'_Node'},
       {atom,1588,undefined},
       {atom,1588,no_fun}]},
     {var,1588,'S'}],
    [],
    [{atom,61,ok},{call,1593,{atom,1593,loop_the_locker},[{var,1593,'S'}]}]},
   {clause,1594,
    [{tuple,1594,
      [{atom,1594,cancel},
       {var,1594,'Node'},
       {var,1594,'Tag'},
       {atom,1594,no_fun}]},
     {var,1594,'S'}],
    [],
    [{atom,61,ok},
     {'receive',1596,
      [{clause,1597,
        [{tuple,1597,[{atom,1597,nodeup},{var,1597,'Node'},{var,1597,'Tag'}]}],
        [],
        [{atom,61,ok},{atom,1599,ok}]}],
      {integer,1600,0},
      [{atom,1601,ok}]},
     {call,1603,
      {atom,1603,loop_the_locker},
      [{call,1603,
        {atom,1603,remove_node},
        [{var,1603,'Node'},{var,1603,'S'}]}]}]},
   {clause,1604,
    [{tuple,1604,
      [{atom,1604,lock_set},
       {var,1604,'_Pid'},
       {atom,1604,false},
       {var,1604,'_'}]},
     {var,1604,'S'}],
    [],
    [{atom,61,ok},{call,1606,{atom,1606,loop_the_locker},[{var,1606,'S'}]}]},
   {clause,1607,
    [{tuple,1607,
      [{atom,1607,lock_set},
       {var,1607,'Pid'},
       {atom,1607,true},
       {var,1607,'_HisKnown'}]},
     {var,1607,'S'}],
    [],
    [{match,1608,
      {var,1608,'Node'},
      {call,1608,{atom,1608,node},[{var,1608,'Pid'}]}},
     {atom,61,ok},
     {'case',1610,
      {call,1610,{atom,1610,find_node_tag},[{var,1610,'Node'},{var,1610,'S'}]},
      [{clause,1611,
        [{tuple,1611,
          [{atom,1611,true},{var,1611,'MyTag'},{var,1611,'HisVsn'}]}],
        [],
        [{match,1612,
          {var,1612,'LockId'},
          {call,1612,
           {atom,1612,locker_lock_id},
           [{var,1612,'Pid'},{var,1612,'HisVsn'}]}},
         {match,1613,
          {tuple,1613,[{var,1613,'IsLockSet'},{var,1613,'S1'}]},
          {call,1613,
           {atom,1613,lock_nodes_safely},
           [{var,1613,'LockId'},{nil,1613},{var,1613,'S'}]}},
         {op,1614,'!',
          {var,1614,'Pid'},
          {tuple,1614,
           [{atom,1614,lock_set},
            {call,1614,{atom,1614,self},[]},
            {var,1614,'IsLockSet'},
            {call,1614,
             {remote,1614,{atom,1614,erlang},{atom,1614,element}},
             [{integer,1614,4},{var,1614,'S1'}]}]}},
         {match,1615,
          {var,1615,'Known2'},
          {cons,1615,
           {call,1615,{atom,1615,node},[]},
           {call,1615,
            {remote,1615,{atom,1615,erlang},{atom,1615,element}},
            [{integer,1615,4},{var,1615,'S1'}]}}},
         {atom,61,ok},
         {'case',1618,
          {var,1618,'IsLockSet'},
          [{clause,1619,
            [{atom,1619,true}],
            [],
            [{call,1620,
              {remote,1620,{atom,1620,gen_server},{atom,1620,cast}},
              [{atom,1620,global_name_server},
               {tuple,1621,
                [{atom,1621,lock_is_set},
                 {var,1621,'Node'},
                 {var,1621,'MyTag'},
                 {var,1621,'LockId'}]}]},
             {atom,61,ok},
             {'receive',1628,
              [{clause,1629,
                [{tuple,1629,
                  [{atom,1629,cancel},
                   {var,1629,'Node'},
                   {var,1629,'_Tag'},
                   {var,1629,'Fun'}]}],
                [],
                [{atom,61,ok},
                 {call,1631,{atom,1631,call_fun},[{var,1631,'Fun'}]},
                 {call,1632,
                  {atom,1632,delete_global_lock},
                  [{var,1632,'LockId'},{var,1632,'Known2'}]}]}]},
             {match,1634,
              {var,1634,'S2'},
              {call,1634,
               {remote,1634,{atom,1634,erlang},{atom,1634,setelement}},
               [{integer,1634,6},{var,1634,'S1'},{atom,1634,true}]}},
             {call,1635,
              {atom,1635,loop_the_locker},
              [{call,1635,
                {atom,1635,remove_node},
                [{var,1635,'Node'},{var,1635,'S2'}]}]}]},
           {clause,1636,
            [{atom,1636,false}],
            [],
            [{call,1637,
              {atom,1637,loop_the_locker},
              [{call,1637,
                {remote,1637,{atom,1637,erlang},{atom,1637,setelement}},
                [{integer,1637,6},{var,1637,'S1'},{atom,1637,false}]}]}]}]}]},
       {clause,1639,
        [{atom,1639,false}],
        [],
        [{atom,61,ok},
         {op,1641,'!',
          {var,1641,'Pid'},
          {tuple,1641,
           [{atom,1641,lock_set},
            {call,1641,{atom,1641,self},[]},
            {atom,1641,false},
            {call,1641,
             {remote,1641,{atom,1641,erlang},{atom,1641,element}},
             [{integer,1641,4},{var,1641,'S'}]}]}},
         {call,1642,{atom,1642,loop_the_locker},[{var,1642,'S'}]}]}]}]},
   {clause,1644,
    [{tuple,1644,[{atom,1644,add_to_known},{var,1644,'Nodes'}]},
     {var,1644,'S'}],
    [],
    [{match,1645,
      {var,1645,'S1'},
      {call,1645,
       {atom,1645,update_locker_known},
       [{tuple,1645,[{atom,1645,add},{var,1645,'Nodes'}]},{var,1645,'S'}]}},
     {call,1646,{atom,1646,loop_the_locker},[{var,1646,'S1'}]}]},
   {clause,1647,
    [{tuple,1647,[{atom,1647,remove_from_known},{var,1647,'Node'}]},
     {var,1647,'S'}],
    [],
    [{match,1648,
      {var,1648,'S1'},
      {call,1648,
       {atom,1648,update_locker_known},
       [{tuple,1648,[{atom,1648,remove},{var,1648,'Node'}]},{var,1648,'S'}]}},
     {call,1649,{atom,1649,loop_the_locker},[{var,1649,'S1'}]}]},
   {clause,1650,
    [{tuple,1650,[{atom,1650,do_trace},{var,1650,'DoTrace'}]},{var,1650,'S'}],
    [],
    [{call,1651,
      {atom,1651,loop_the_locker},
      [{call,1651,
        {remote,1651,{atom,1651,erlang},{atom,1651,setelement}},
        [{integer,1651,7},{var,1651,'S'},{var,1651,'DoTrace'}]}]}]},
   {clause,1652,
    [{var,1652,'Other'},{var,1652,'S'}],
    [],
    [{call,1653,
      {atom,1653,unexpected_message},
      [{var,1653,'Other'},{atom,1653,locker}]},
     {atom,61,ok},
     {call,1655,{atom,1655,loop_the_locker},[{var,1655,'S'}]}]}]},
 {function,1659,select_node,1,
  [{clause,1659,
    [{var,1659,'S'}],
    [],
    [{match,1660,
      {var,1660,'UseRemote'},
      {op,1660,'=:=',
       {call,1660,
        {remote,1660,{atom,1660,erlang},{atom,1660,element}},
        [{integer,1660,2},{var,1660,'S'}]},
       {nil,1660}}},
     {match,1661,
      {var,1661,'Others1'},
      {'if',1661,
       [{clause,1661,[],
         [[{var,1661,'UseRemote'}]],
         [{call,1661,
           {remote,1661,{atom,1661,erlang},{atom,1661,element}},
           [{integer,1661,3},{var,1661,'S'}]}]},
        {clause,1661,[],
         [[{atom,1661,true}]],
         [{call,1661,
           {remote,1661,{atom,1661,erlang},{atom,1661,element}},
           [{integer,1661,2},{var,1661,'S'}]}]}]}},
     {match,1662,
      {var,1662,'Others2'},
      {call,1662,
       {atom,1662,exclude_known},
       [{var,1662,'Others1'},
        {call,1662,
         {remote,1662,{atom,1662,erlang},{atom,1662,element}},
         [{integer,1662,4},{var,1662,'S'}]}]}},
     {match,1663,
      {var,1663,'S1'},
      {'if',1663,
       [{clause,1664,[],
         [[{var,1664,'UseRemote'}]],
         [{call,1664,
           {remote,1664,{atom,1664,erlang},{atom,1664,setelement}},
           [{integer,1664,3},{var,1664,'S'},{var,1664,'Others2'}]}]},
        {clause,1665,[],
         [[{atom,1665,true}]],
         [{call,1665,
           {remote,1665,{atom,1665,erlang},{atom,1665,setelement}},
           [{integer,1665,2},{var,1665,'S'},{var,1665,'Others2'}]}]}]}},
     {'if',1667,
      [{clause,1668,[],
        [[{op,1668,'=:=',{var,1668,'Others2'},{nil,1668}}]],
        [{call,1669,{atom,1669,loop_the_locker},[{var,1669,'S1'}]}]},
       {clause,1670,[],
        [[{atom,1670,true}]],
        [{match,1671,
          {var,1671,'Him'},
          {call,1671,{atom,1671,random_element},[{var,1671,'Others2'}]}},
         {match,1673,
          {tuple,1672,
           [{atom,1672,him},
            {var,1673,'Node'},
            {var,1672,'HisTheLocker'},
            {var,1672,'HisVsn'},
            {var,1673,'MyTag'}]},
          {var,1673,'Him'}},
         {match,1674,
          {var,1674,'HisNode'},
          {cons,1674,{var,1674,'Node'},{nil,1674}}},
         {match,1675,
          {var,1675,'Us'},
          {cons,1675,{call,1675,{atom,1675,node},[]},{var,1675,'HisNode'}}},
         {match,1676,
          {var,1676,'LockId'},
          {call,1676,
           {atom,1676,locker_lock_id},
           [{var,1676,'HisTheLocker'},{var,1676,'HisVsn'}]}},
         {atom,61,ok},
         {match,1679,
          {tuple,1679,[{var,1679,'IsLockSet'},{var,1679,'S2'}]},
          {call,1679,
           {atom,1679,lock_nodes_safely},
           [{var,1679,'LockId'},{var,1679,'HisNode'},{var,1679,'S1'}]}},
         {'case',1680,
          {var,1680,'IsLockSet'},
          [{clause,1681,
            [{atom,1681,true}],
            [],
            [{match,1682,
              {var,1682,'Known1'},
              {op,1682,'++',
               {var,1682,'Us'},
               {call,1682,
                {remote,1682,{atom,1682,erlang},{atom,1682,element}},
                [{integer,1682,4},{var,1682,'S2'}]}}},
             {atom,61,ok},
             {op,1684,'!',
              {var,1684,'HisTheLocker'},
              {tuple,1684,
               [{atom,1684,lock_set},
                {call,1684,{atom,1684,self},[]},
                {atom,1684,true},
                {call,1684,
                 {remote,1684,{atom,1684,erlang},{atom,1684,element}},
                 [{integer,1684,4},{var,1684,'S2'}]}]}},
             {match,1685,
              {var,1685,'S3'},
              {call,1685,
               {atom,1685,lock_is_set},
               [{var,1685,'S2'},
                {var,1685,'Him'},
                {var,1685,'MyTag'},
                {var,1685,'Known1'},
                {var,1685,'LockId'}]}},
             {call,1686,{atom,1686,loop_the_locker},[{var,1686,'S3'}]}]},
           {clause,1687,
            [{atom,1687,false}],
            [],
            [{call,1688,
              {atom,1688,loop_the_locker},
              [{var,1688,'S2'}]}]}]}]}]}]}]},
 {function,1696,locker_lock_id,2,
  [{clause,1696,
    [{var,1696,'Pid'},{var,1696,'Vsn'}],
    [[{op,1696,'>',{var,1696,'Vsn'},{integer,1696,4}}]],
    [{tuple,1697,
      [{atom,976,global},
       {call,1697,
        {remote,1697,{atom,1697,lists},{atom,1697,sort}},
        [{cons,1697,
          {call,1697,{atom,1697,self},[]},
          {cons,1697,{var,1697,'Pid'},{nil,1697}}}]}]}]}]},
 {function,1699,lock_nodes_safely,3,
  [{clause,1699,
    [{var,1699,'LockId'},{var,1699,'Extra'},{var,1699,'S0'}],
    [],
    [{match,1702,
      {var,1702,'First'},
      {call,1702,
       {atom,1702,delete_nonode},
       [{cons,1702,
         {call,1702,
          {remote,1702,{atom,1702,erlang},{atom,1702,element}},
          [{integer,1702,5},{var,1702,'S0'}]},
         {nil,1702}}]}},
     {'case',1703,
      {op,1703,'orelse',
       {op,1703,'=:=',
        {cons,1703,{call,1703,{atom,1703,node},[]},{nil,1703}},
        {var,1703,'First'}},
       {op,1703,'=/=',
        {call,1703,{atom,1703,can_set_lock},[{var,1703,'LockId'}]},
        {atom,1703,false}}},
      [{clause,1704,
        [{atom,1704,true}],
        [],
        [{'case',1706,
          {call,1706,
           {atom,1706,set_lock},
           [{var,1706,'LockId'},{var,1706,'First'},{integer,1706,0}]},
          [{clause,1707,
            [{atom,1707,true}],
            [],
            [{match,1708,
              {var,1708,'S'},
              {call,1708,{atom,1708,update_locker_known},[{var,1708,'S0'}]}},
             {match,1710,
              {var,1710,'Second'},
              {call,1710,
               {atom,1710,delete_nonode},
               [{op,1710,'--',
                 {cons,1710,
                  {call,1710,{atom,1710,node},[]},
                  {var,1710,'Extra'}},
                 {var,1710,'First'}}]}},
             {'case',1711,
              {call,1711,
               {atom,1711,set_lock},
               [{var,1711,'LockId'},{var,1711,'Second'},{integer,1711,0}]},
              [{clause,1712,
                [{atom,1712,true}],
                [],
                [{match,1713,
                  {var,1713,'Known'},
                  {call,1713,
                   {remote,1713,{atom,1713,erlang},{atom,1713,element}},
                   [{integer,1713,4},{var,1713,'S'}]}},
                 {'case',1714,
                  {call,1714,
                   {atom,1714,set_lock},
                   [{var,1714,'LockId'},
                    {op,1714,'--',{var,1714,'Known'},{var,1714,'First'}},
                    {integer,1714,0}]},
                  [{clause,1715,
                    [{atom,1715,true}],
                    [],
                    [{match,1716,
                      {var,1716,'_'},
                      {call,1716,
                       {atom,1716,locker_trace},
                       [{var,1716,'S'},
                        {atom,1716,ok},
                        {tuple,1716,
                         [{var,1716,'First'},{var,1716,'Known'}]}]}},
                     {tuple,1717,[{atom,1717,true},{var,1717,'S'}]}]},
                   {clause,1718,
                    [{atom,1718,false}],
                    [],
                    [{match,1725,
                      {var,1725,'SoFar'},
                      {op,1725,'++',{var,1725,'First'},{var,1725,'Second'}}},
                     {call,1726,
                      {atom,1726,del_lock},
                      [{var,1726,'LockId'},{var,1726,'SoFar'}]},
                     {match,1727,
                      {var,1727,'_'},
                      {call,1727,
                       {atom,1727,locker_trace},
                       [{var,1727,'S'},
                        {atom,1727,not_ok},
                        {tuple,1727,
                         [{var,1727,'Known'},{var,1727,'SoFar'}]}]}},
                     {tuple,1728,[{atom,1728,false},{var,1728,'S'}]}]}]}]},
               {clause,1730,
                [{atom,1730,false}],
                [],
                [{call,1731,
                  {atom,1731,del_lock},
                  [{var,1731,'LockId'},{var,1731,'First'}]},
                 {match,1732,
                  {var,1732,'_'},
                  {call,1732,
                   {atom,1732,locker_trace},
                   [{var,1732,'S'},
                    {atom,1732,not_ok},
                    {tuple,1732,[{var,1732,'Second'},{var,1732,'First'}]}]}},
                 {tuple,1733,[{atom,1733,false},{var,1733,'S'}]}]}]}]},
           {clause,1735,
            [{atom,1735,false}],
            [],
            [{match,1736,
              {var,1736,'_'},
              {call,1736,
               {atom,1736,locker_trace},
               [{var,1736,'S0'},
                {atom,1736,not_ok},
                {tuple,1736,[{var,1736,'First'},{nil,1736}]}]}},
             {tuple,1737,[{atom,1737,false},{var,1737,'S0'}]}]}]}]},
       {clause,1739,
        [{atom,1739,false}],
        [],
        [{tuple,1740,[{atom,1740,false},{var,1740,'S0'}]}]}]}]}]},
 {function,1743,delete_nonode,1,
  [{clause,1743,
    [{var,1743,'L'}],
    [],
    [{call,1744,
      {remote,1744,{atom,1744,lists},{atom,1744,delete}},
      [{atom,1744,nonode@nohost},{var,1744,'L'}]}]}]},
 {function,1747,locker_trace,3,
  [{clause,1747,
    [{tuple,1747,
      [{atom,1747,multi},
       {var,1747,'_'},
       {var,1747,'_'},
       {var,1747,'_'},
       {var,1747,'_'},
       {var,1747,'_'},
       {atom,1747,false}]},
     {var,1747,'_'},
     {var,1747,'_Nodes'}],
    [],
    [{atom,1748,ok}]},
   {clause,1749,
    [{tuple,1749,
      [{atom,1749,multi},
       {var,1749,'_'},
       {var,1749,'_'},
       {var,1749,'_'},
       {var,1749,'_'},
       {var,1749,'_'},
       {atom,1749,true}]},
     {atom,1749,ok},
     {var,1749,'Ns'}],
    [],
    [{op,1750,'!',
      {atom,1750,global_name_server},
      {tuple,1750,
       [{atom,1750,trace_message},
        {tuple,1750,
         [{atom,1750,locker_succeeded},{call,1750,{atom,1750,node},[]}]},
        {var,1750,'Ns'}]}}]},
   {clause,1751,
    [{tuple,1751,
      [{atom,1751,multi},
       {var,1751,'_'},
       {var,1751,'_'},
       {var,1751,'_'},
       {var,1751,'_'},
       {var,1751,'_'},
       {atom,1751,true}]},
     {atom,1751,not_ok},
     {var,1751,'Ns'}],
    [],
    [{op,1752,'!',
      {atom,1752,global_name_server},
      {tuple,1752,
       [{atom,1752,trace_message},
        {tuple,1752,
         [{atom,1752,locker_failed},{call,1752,{atom,1752,node},[]}]},
        {var,1752,'Ns'}]}}]},
   {clause,1753,
    [{tuple,1753,
      [{atom,1753,multi},
       {var,1753,'_'},
       {var,1753,'_'},
       {var,1753,'_'},
       {var,1753,'_'},
       {var,1753,'_'},
       {atom,1753,true}]},
     {atom,1753,rejected},
     {var,1753,'Ns'}],
    [],
    [{op,1754,'!',
      {atom,1754,global_name_server},
      {tuple,1754,
       [{atom,1754,trace_message},
        {tuple,1754,
         [{atom,1754,lock_rejected},{call,1754,{atom,1754,node},[]}]},
        {var,1754,'Ns'}]}}]}]},
 {function,1756,update_locker_known,1,
  [{clause,1756,
    [{var,1756,'S'}],
    [],
    [{'receive',1757,
      [{clause,1758,
        [{tuple,1758,[{atom,1758,add_to_known},{var,1758,'Nodes'}]}],
        [],
        [{match,1759,
          {var,1759,'S1'},
          {call,1759,
           {atom,1759,update_locker_known},
           [{tuple,1759,[{atom,1759,add},{var,1759,'Nodes'}]},
            {var,1759,'S'}]}},
         {call,1760,{atom,1760,update_locker_known},[{var,1760,'S1'}]}]},
       {clause,1761,
        [{tuple,1761,[{atom,1761,remove_from_known},{var,1761,'Node'}]}],
        [],
        [{match,1762,
          {var,1762,'S1'},
          {call,1762,
           {atom,1762,update_locker_known},
           [{tuple,1762,[{atom,1762,remove},{var,1762,'Node'}]},
            {var,1762,'S'}]}},
         {call,1763,{atom,1763,update_locker_known},[{var,1763,'S1'}]}]}],
      {integer,1764,0},
      [{var,1765,'S'}]}]}]},
 {function,1768,update_locker_known,2,
  [{clause,1768,
    [{var,1768,'Upd'},{var,1768,'S'}],
    [],
    [{match,1769,
      {var,1769,'Known'},
      {'case',1769,
       {var,1769,'Upd'},
       [{clause,1770,
         [{tuple,1770,[{atom,1770,add},{var,1770,'Nodes'}]}],
         [],
         [{op,1770,'++',
           {var,1770,'Nodes'},
           {call,1770,
            {remote,1770,{atom,1770,erlang},{atom,1770,element}},
            [{integer,1770,4},{var,1770,'S'}]}}]},
        {clause,1771,
         [{tuple,1771,[{atom,1771,remove},{var,1771,'Node'}]}],
         [],
         [{call,1771,
           {remote,1771,{atom,1771,lists},{atom,1771,delete}},
           [{var,1771,'Node'},
            {call,1771,
             {remote,1771,{atom,1771,erlang},{atom,1771,element}},
             [{integer,1771,4},{var,1771,'S'}]}]}]}]}},
     {match,1773,
      {var,1773,'TheBoss'},
      {call,1773,
       {atom,1773,the_boss},
       [{cons,1773,{call,1773,{atom,1773,node},[]},{var,1773,'Known'}}]}},
     {call,1774,
      {remote,1774,{atom,1774,erlang},{atom,1774,setelement}},
      [{integer,1774,5},
       {call,1774,
        {remote,1774,{atom,1774,erlang},{atom,1774,setelement}},
        [{integer,1774,4},{var,1774,'S'},{var,1774,'Known'}]},
       {var,1774,'TheBoss'}]}]}]},
 {function,1776,random_element,1,
  [{clause,1776,
    [{var,1776,'L'}],
    [],
    [{match,1777,
      {var,1777,'E'},
      {op,1778,'rem',
       {call,1777,
        {atom,1777,abs},
        [{op,1778,'bxor',
          {call,1777,
           {remote,1777,{atom,1777,erlang},{atom,1777,monotonic_time}},
           []},
          {call,1778,
           {remote,1778,{atom,1778,erlang},{atom,1778,unique_integer}},
           []}}]},
       {call,1778,{atom,1778,length},[{var,1778,'L'}]}}},
     {call,1779,
      {remote,1779,{atom,1779,lists},{atom,1779,nth}},
      [{op,1779,'+',{var,1779,'E'},{integer,1779,1}},{var,1779,'L'}]}]}]},
 {function,1781,exclude_known,2,
  [{clause,1781,
    [{var,1781,'Others'},{var,1781,'Known'}],
    [],
    [{lc,1782,
      {var,1782,'N'},
      [{generate,1782,{var,1782,'N'},{var,1782,'Others'}},
       {op,1782,'not',
        {call,1782,
         {remote,1782,{atom,1782,lists},{atom,1782,member}},
         [{call,1782,
           {remote,1782,{atom,1782,erlang},{atom,1782,element}},
           [{integer,1782,2},{var,1782,'N'}]},
          {var,1782,'Known'}]}}]}]}]},
 {function,1784,lock_is_set,5,
  [{clause,1784,
    [{var,1784,'S'},
     {var,1784,'Him'},
     {var,1784,'MyTag'},
     {var,1784,'Known1'},
     {var,1784,'LockId'}],
    [],
    [{match,1785,
      {var,1785,'Node'},
      {call,1785,
       {remote,1785,{atom,1785,erlang},{atom,1785,element}},
       [{integer,1785,2},{var,1785,'Him'}]}},
     {'receive',1786,
      [{clause,1787,
        [{tuple,1787,
          [{atom,1787,lock_set},
           {var,1787,'P'},
           {atom,1787,true},
           {var,1787,'_'}]}],
        [[{op,1787,'=:=',
           {call,1787,{atom,1787,node},[{var,1787,'P'}]},
           {var,1787,'Node'}}]],
        [{call,1788,
          {remote,1788,{atom,1788,gen_server},{atom,1788,cast}},
          [{atom,1788,global_name_server},
           {tuple,1789,
            [{atom,1789,lock_is_set},
             {var,1789,'Node'},
             {var,1789,'MyTag'},
             {var,1789,'LockId'}]}]},
         {atom,61,ok},
         {'receive',1795,
          [{clause,1796,
            [{tuple,1796,
              [{atom,1796,cancel},
               {var,1796,'Node'},
               {var,1796,'_'},
               {var,1796,'Fun'}]}],
            [],
            [{atom,61,ok},
             {call,1798,{atom,1798,call_fun},[{var,1798,'Fun'}]},
             {call,1799,
              {atom,1799,delete_global_lock},
              [{var,1799,'LockId'},{var,1799,'Known1'}]}]}]},
         {call,1801,
          {remote,1801,{atom,1801,erlang},{atom,1801,setelement}},
          [{integer,1801,3},
           {call,1801,
            {remote,1801,{atom,1801,erlang},{atom,1801,setelement}},
            [{integer,1801,2},
             {call,1801,
              {remote,1801,{atom,1801,erlang},{atom,1801,setelement}},
              [{integer,1801,6},{var,1801,'S'},{atom,1801,true}]},
             {call,1802,
              {remote,1802,{atom,1802,lists},{atom,1802,delete}},
              [{var,1802,'Him'},
               {call,1802,
                {remote,1802,{atom,1802,erlang},{atom,1802,element}},
                [{integer,1802,2},{var,1802,'S'}]}]}]},
           {call,1803,
            {remote,1803,{atom,1803,lists},{atom,1803,delete}},
            [{var,1803,'Him'},
             {call,1803,
              {remote,1803,{atom,1803,erlang},{atom,1803,element}},
              [{integer,1803,3},{var,1803,'S'}]}]}]}]},
       {clause,1804,
        [{tuple,1804,
          [{atom,1804,lock_set},
           {var,1804,'P'},
           {atom,1804,false},
           {var,1804,'_'}]}],
        [[{op,1804,'=:=',
           {call,1804,{atom,1804,node},[{var,1804,'P'}]},
           {var,1804,'Node'}}]],
        [{atom,61,ok},
         {match,1806,
          {var,1806,'_'},
          {call,1806,
           {atom,1806,locker_trace},
           [{var,1806,'S'},{atom,1806,rejected},{var,1806,'Known1'}]}},
         {call,1807,
          {atom,1807,delete_global_lock},
          [{var,1807,'LockId'},{var,1807,'Known1'}]},
         {var,1808,'S'}]},
       {clause,1809,
        [{tuple,1809,
          [{atom,1809,cancel},
           {var,1809,'Node'},
           {var,1809,'_'},
           {var,1809,'Fun'}]}],
        [],
        [{atom,61,ok},
         {call,1811,{atom,1811,call_fun},[{var,1811,'Fun'}]},
         {match,1812,
          {var,1812,'_'},
          {call,1812,
           {atom,1812,locker_trace},
           [{var,1812,'S'},{atom,1812,rejected},{var,1812,'Known1'}]}},
         {call,1813,
          {atom,1813,delete_global_lock},
          [{var,1813,'LockId'},{var,1813,'Known1'}]},
         {call,1814,
          {atom,1814,remove_node},
          [{var,1814,'Node'},{var,1814,'S'}]}]},
       {clause,1815,
        [{tuple,1815,[{atom,1815,'EXIT'},{var,1815,'_'},{var,1815,'_'}]}],
        [],
        [{atom,61,ok},
         {match,1817,
          {var,1817,'_'},
          {call,1817,
           {atom,1817,locker_trace},
           [{var,1817,'S'},{atom,1817,rejected},{var,1817,'Known1'}]}},
         {call,1818,
          {atom,1818,delete_global_lock},
          [{var,1818,'LockId'},{var,1818,'Known1'}]},
         {var,1819,'S'}]}]}]}]},
 {function,1831,call_fun,1,
  [{clause,1831,[{atom,1831,no_fun}],[],[{atom,1832,ok}]},
   {clause,1833,[{var,1833,'Fun'}],[],[{call,1834,{var,1834,'Fun'},[]}]}]},
 {function,1839,delete_global_lock,2,
  [{clause,1839,
    [{var,1839,'LockId'},{var,1839,'Nodes'}],
    [],
    [{match,1840,
      {var,1840,'TheBoss'},
      {call,1840,{atom,1840,the_boss},[{var,1840,'Nodes'}]}},
     {call,1841,
      {atom,1841,del_lock},
      [{var,1841,'LockId'},
       {call,1841,
        {remote,1841,{atom,1841,lists},{atom,1841,delete}},
        [{var,1841,'TheBoss'},{var,1841,'Nodes'}]}]},
     {call,1842,
      {atom,1842,del_lock},
      [{var,1842,'LockId'},{cons,1842,{var,1842,'TheBoss'},{nil,1842}}]}]}]},
 {function,1844,the_boss,1,
  [{clause,1844,
    [{var,1844,'Nodes'}],
    [],
    [{call,1845,
      {remote,1845,{atom,1845,lists},{atom,1845,max}},
      [{var,1845,'Nodes'}]}]}]},
 {function,1847,find_node_tag,2,
  [{clause,1847,
    [{var,1847,'Node'},{var,1847,'S'}],
    [],
    [{'case',1848,
      {call,1848,
       {atom,1848,find_node_tag2},
       [{var,1848,'Node'},
        {call,1848,
         {remote,1848,{atom,1848,erlang},{atom,1848,element}},
         [{integer,1848,2},{var,1848,'S'}]}]},
      [{clause,1849,
        [{atom,1849,false}],
        [],
        [{call,1850,
          {atom,1850,find_node_tag2},
          [{var,1850,'Node'},
           {call,1850,
            {remote,1850,{atom,1850,erlang},{atom,1850,element}},
            [{integer,1850,3},{var,1850,'S'}]}]}]},
       {clause,1851,[{var,1851,'Reply'}],[],[{var,1852,'Reply'}]}]}]}]},
 {function,1855,find_node_tag2,2,
  [{clause,1855,[{var,1855,'_Node'},{nil,1855}],[],[{atom,1856,false}]},
   {clause,1857,
    [{var,1857,'Node'},
     {cons,1857,
      {tuple,1857,
       [{atom,1857,him},
        {var,1857,'Node'},
        {var,1857,'_'},
        {var,1857,'HisVsn'},
        {var,1857,'MyTag'}]},
      {var,1857,'_'}}],
    [],
    [{tuple,1858,[{atom,1858,true},{var,1858,'MyTag'},{var,1858,'HisVsn'}]}]},
   {clause,1859,
    [{var,1859,'Node'},{cons,1859,{var,1859,'_E'},{var,1859,'Rest'}}],
    [],
    [{call,1860,
      {atom,1860,find_node_tag2},
      [{var,1860,'Node'},{var,1860,'Rest'}]}]}]},
 {function,1862,remove_node,2,
  [{clause,1862,
    [{var,1862,'Node'},{var,1862,'S'}],
    [],
    [{call,1863,
      {remote,1863,{atom,1863,erlang},{atom,1863,setelement}},
      [{integer,1863,3},
       {call,1863,
        {remote,1863,{atom,1863,erlang},{atom,1863,setelement}},
        [{integer,1863,2},
         {var,1863,'S'},
         {call,1863,
          {atom,1863,remove_node2},
          [{var,1863,'Node'},
           {call,1863,
            {remote,1863,{atom,1863,erlang},{atom,1863,element}},
            [{integer,1863,2},{var,1863,'S'}]}]}]},
       {call,1864,
        {atom,1864,remove_node2},
        [{var,1864,'Node'},
         {call,1864,
          {remote,1864,{atom,1864,erlang},{atom,1864,element}},
          [{integer,1864,3},{var,1864,'S'}]}]}]}]}]},
 {function,1866,remove_node2,2,
  [{clause,1866,[{var,1866,'_Node'},{nil,1866}],[],[{nil,1867}]},
   {clause,1868,
    [{var,1868,'Node'},
     {cons,1868,
      {tuple,1868,
       [{atom,1868,him},
        {var,1868,'Node'},
        {var,1868,'_'},
        {var,1868,'_'},
        {var,1868,'_'}]},
      {var,1868,'Rest'}}],
    [],
    [{var,1869,'Rest'}]},
   {clause,1870,
    [{var,1870,'Node'},{cons,1870,{var,1870,'E'},{var,1870,'Rest'}}],
    [],
    [{cons,1871,
      {var,1871,'E'},
      {call,1871,
       {atom,1871,remove_node2},
       [{var,1871,'Node'},{var,1871,'Rest'}]}}]}]},
 {function,1873,add_node,2,
  [{clause,1873,
    [{var,1873,'Him'},{var,1873,'S'}],
    [],
    [{'case',1874,
      {call,1874,
       {atom,1874,is_node_local},
       [{call,1874,
         {remote,1874,{atom,1874,erlang},{atom,1874,element}},
         [{integer,1874,2},{var,1874,'Him'}]}]},
      [{clause,1875,
        [{atom,1875,true}],
        [],
        [{call,1876,
          {remote,1876,{atom,1876,erlang},{atom,1876,setelement}},
          [{integer,1876,2},
           {var,1876,'S'},
           {cons,1876,
            {var,1876,'Him'},
            {call,1876,
             {remote,1876,{atom,1876,erlang},{atom,1876,element}},
             [{integer,1876,2},{var,1876,'S'}]}}]}]},
       {clause,1877,
        [{atom,1877,false}],
        [],
        [{call,1878,
          {remote,1878,{atom,1878,erlang},{atom,1878,setelement}},
          [{integer,1878,3},
           {var,1878,'S'},
           {cons,1878,
            {var,1878,'Him'},
            {call,1878,
             {remote,1878,{atom,1878,erlang},{atom,1878,element}},
             [{integer,1878,3},{var,1878,'S'}]}}]}]}]}]}]},
 {function,1881,is_node_local,1,
  [{clause,1881,
    [{var,1881,'Node'}],
    [],
    [{match,1882,
      {tuple,1882,[{atom,1882,ok},{var,1882,'Host'}]},
      {call,1882,{remote,1882,{atom,1882,inet},{atom,1882,gethostname}},[]}},
     {'case',1883,
      {'catch',1883,
       {call,1883,
        {atom,1883,split_node},
        [{call,1883,{atom,1883,atom_to_list},[{var,1883,'Node'}]},
         {char,1883,64},
         {nil,1883}]}},
      [{clause,1884,
        [{cons,1884,{var,1884,'_'},{cons,1884,{var,1884,'Host'},{nil,1884}}}],
        [],
        [{atom,1885,true}]},
       {clause,1886,[{var,1886,'_'}],[],[{atom,1887,false}]}]}]}]},
 {function,1890,split_node,3,
  [{clause,1890,
    [{cons,1890,{var,1890,'Chr'},{var,1890,'T'}},
     {var,1890,'Chr'},
     {var,1890,'Ack'}],
    [],
    [{cons,1890,
      {call,1890,
       {remote,1890,{atom,1890,lists},{atom,1890,reverse}},
       [{var,1890,'Ack'}]},
      {call,1890,
       {atom,1890,split_node},
       [{var,1890,'T'},{var,1890,'Chr'},{nil,1890}]}}]},
   {clause,1891,
    [{cons,1891,{var,1891,'H'},{var,1891,'T'}},
     {var,1891,'Chr'},
     {var,1891,'Ack'}],
    [],
    [{call,1891,
      {atom,1891,split_node},
      [{var,1891,'T'},
       {var,1891,'Chr'},
       {cons,1891,{var,1891,'H'},{var,1891,'Ack'}}]}]},
   {clause,1892,
    [{nil,1892},{var,1892,'_'},{var,1892,'Ack'}],
    [],
    [{cons,1892,
      {call,1892,
       {remote,1892,{atom,1892,lists},{atom,1892,reverse}},
       [{var,1892,'Ack'}]},
      {nil,1892}}]}]},
 {function,1894,cancel_locker,3,
  [{clause,1894,
    [{var,1894,'Node'},{var,1894,'S'},{var,1894,'Tag'}],
    [],
    [{call,1895,
      {atom,1895,cancel_locker},
      [{var,1895,'Node'},
       {var,1895,'S'},
       {var,1895,'Tag'},
       {atom,1895,no_fun}]}]}]},
 {function,1897,cancel_locker,4,
  [{clause,1897,
    [{var,1897,'Node'},
     {var,1897,'S'},
     {var,1897,'Tag'},
     {var,1897,'ToBeRunOnLockerF'}],
    [],
    [{op,1898,'!',
      {call,1898,
       {remote,1898,{atom,1898,erlang},{atom,1898,element}},
       [{integer,1898,8},{var,1898,'S'}]},
      {tuple,1898,
       [{atom,1898,cancel},
        {var,1898,'Node'},
        {var,1898,'Tag'},
        {var,1898,'ToBeRunOnLockerF'}]}},
     {match,1899,
      {var,1899,'Resolvers'},
      {call,1899,
       {remote,1899,{atom,1899,erlang},{atom,1899,element}},
       [{integer,1899,5},{var,1899,'S'}]}},
     {atom,61,ok},
     {'case',1902,
      {call,1902,
       {remote,1902,{atom,1902,lists},{atom,1902,keyfind}},
       [{var,1902,'Node'},{integer,1902,1},{var,1902,'Resolvers'}]},
      [{clause,1903,
        [{tuple,1903,[{var,1903,'_'},{var,1903,'Tag'},{var,1903,'Resolver'}]}],
        [],
        [{atom,61,ok},
         {call,1905,{atom,1905,exit},[{var,1905,'Resolver'},{atom,1905,kill}]},
         {match,1906,
          {var,1906,'S1'},
          {call,1906,
           {atom,1906,trace_message},
           [{var,1906,'S'},
            {tuple,1906,[{atom,1906,kill_resolver},{var,1906,'Node'}]},
            {cons,1906,
             {var,1906,'Tag'},
             {cons,1906,{var,1906,'Resolver'},{nil,1906}}}]}},
         {call,1907,
          {remote,1907,{atom,1907,erlang},{atom,1907,setelement}},
          [{integer,1907,5},
           {var,1907,'S1'},
           {call,1907,
            {remote,1907,{atom,1907,lists},{atom,1907,keydelete}},
            [{var,1907,'Node'},{integer,1907,1},{var,1907,'Resolvers'}]}]}]},
       {clause,1908,[{var,1908,'_'}],[],[{var,1909,'S'}]}]}]}]},
 {function,1912,reset_node_state,1,
  [{clause,1912,
    [{var,1912,'Node'}],
    [],
    [{atom,61,ok},
     {call,1914,
      {atom,1914,erase},
      [{tuple,1914,[{atom,1914,wait_lock},{var,1914,'Node'}]}]},
     {call,1915,
      {atom,1915,erase},
      [{tuple,1915,[{atom,1915,save_ops},{var,1915,'Node'}]}]},
     {call,1916,
      {atom,1916,erase},
      [{tuple,1916,[{atom,1916,pre_connect},{var,1916,'Node'}]}]},
     {call,1917,
      {atom,1917,erase},
      [{tuple,1917,[{atom,1917,prot_vsn},{var,1917,'Node'}]}]},
     {call,1918,
      {atom,1918,erase},
      [{tuple,1918,[{atom,1918,sync_tag_my},{var,1918,'Node'}]}]},
     {call,1919,
      {atom,1919,erase},
      [{tuple,1919,[{atom,1919,sync_tag_his},{var,1919,'Node'}]}]},
     {call,1920,
      {atom,1920,erase},
      [{tuple,1920,[{atom,1920,lock_id},{var,1920,'Node'}]}]}]}]},
 {function,1925,exchange_names,4,
  [{clause,1925,
    [{cons,1925,
      {tuple,1925,[{var,1925,'Name'},{var,1925,'Pid'},{var,1925,'Method'}]},
      {var,1925,'Tail'}},
     {var,1925,'Node'},
     {var,1925,'Ops'},
     {var,1925,'Res'}],
    [],
    [{'case',1926,
      {call,1926,
       {remote,1926,{atom,1926,ets},{atom,1926,lookup}},
       [{atom,1926,global_names},{var,1926,'Name'}]},
      [{clause,1927,
        [{cons,1927,
          {tuple,1927,
           [{var,1927,'Name'},
            {var,1927,'Pid'},
            {var,1927,'_Method'},
            {var,1927,'_RPid2'},
            {var,1927,'_Ref2'}]},
          {nil,1927}}],
        [],
        [{call,1928,
          {atom,1928,exchange_names},
          [{var,1928,'Tail'},
           {var,1928,'Node'},
           {var,1928,'Ops'},
           {var,1928,'Res'}]}]},
       {clause,1929,
        [{cons,1929,
          {tuple,1929,
           [{var,1929,'Name'},
            {var,1929,'Pid2'},
            {var,1929,'Method2'},
            {var,1929,'_RPid2'},
            {var,1929,'_Ref2'}]},
          {nil,1929}}],
        [[{op,1929,'<',{call,1929,{atom,1929,node},[]},{var,1929,'Node'}}]],
        [{match,1933,
          {var,1933,'Node2'},
          {call,1933,{atom,1933,node},[{var,1933,'Pid2'}]}},
         {'case',1934,
          {call,1934,
           {remote,1934,{atom,1934,rpc},{atom,1934,call}},
           [{var,1934,'Node2'},
            {atom,-1,global},
            {atom,1934,resolve_it},
            {cons,1935,
             {var,1935,'Method2'},
             {cons,1935,
              {var,1935,'Name'},
              {cons,1935,
               {var,1935,'Pid'},
               {cons,1935,{var,1935,'Pid2'},{nil,1935}}}}}]},
          [{clause,1936,
            [{var,1936,'Pid'}],
            [],
            [{match,1937,
              {var,1937,'Op'},
              {tuple,1937,
               [{atom,1937,insert},
                {tuple,1937,
                 [{var,1937,'Name'},{var,1937,'Pid'},{var,1937,'Method'}]}]}},
             {call,1938,
              {atom,1938,exchange_names},
              [{var,1938,'Tail'},
               {var,1938,'Node'},
               {cons,1938,{var,1938,'Op'},{var,1938,'Ops'}},
               {var,1938,'Res'}]}]},
           {clause,1939,
            [{var,1939,'Pid2'}],
            [],
            [{match,1940,
              {var,1940,'Op'},
              {tuple,1940,
               [{atom,1940,insert},
                {tuple,1940,
                 [{var,1940,'Name'},
                  {var,1940,'Pid2'},
                  {var,1940,'Method2'}]}]}},
             {call,1941,
              {atom,1941,exchange_names},
              [{var,1941,'Tail'},
               {var,1941,'Node'},
               {var,1941,'Ops'},
               {cons,1941,{var,1941,'Op'},{var,1941,'Res'}}]}]},
           {clause,1942,
            [{atom,1942,none}],
            [],
            [{match,1943,
              {var,1943,'Op'},
              {tuple,1943,[{atom,1943,delete},{var,1943,'Name'}]}},
             {call,1944,
              {atom,1944,exchange_names},
              [{var,1944,'Tail'},
               {var,1944,'Node'},
               {cons,1944,{var,1944,'Op'},{var,1944,'Ops'}},
               {cons,1944,{var,1944,'Op'},{var,1944,'Res'}}]}]},
           {clause,1945,
            [{tuple,1945,[{atom,1945,badrpc},{var,1945,'Badrpc'}]}],
            [],
            [{call,1946,
              {remote,1946,{atom,1946,error_logger},{atom,1946,info_msg}},
              [{string,1946,
                "global: badrpc ~w received when conflicting name ~w was found\n"},
               {cons,1948,
                {var,1948,'Badrpc'},
                {cons,1948,{var,1948,'Name'},{nil,1948}}}]},
             {match,1949,
              {var,1949,'Op'},
              {tuple,1949,
               [{atom,1949,insert},
                {tuple,1949,
                 [{var,1949,'Name'},{var,1949,'Pid'},{var,1949,'Method'}]}]}},
             {call,1950,
              {atom,1950,exchange_names},
              [{var,1950,'Tail'},
               {var,1950,'Node'},
               {cons,1950,{var,1950,'Op'},{var,1950,'Ops'}},
               {var,1950,'Res'}]}]},
           {clause,1951,
            [{var,1951,'Else'}],
            [],
            [{call,1952,
              {remote,1952,{atom,1952,error_logger},{atom,1952,info_msg}},
              [{string,1952,
                "global: Resolve method ~w for conflicting name ~w returned ~w\n"},
               {cons,1954,
                {var,1954,'Method'},
                {cons,1954,
                 {var,1954,'Name'},
                 {cons,1954,{var,1954,'Else'},{nil,1954}}}}]},
             {match,1955,
              {var,1955,'Op'},
              {tuple,1955,[{atom,1955,delete},{var,1955,'Name'}]}},
             {call,1956,
              {atom,1956,exchange_names},
              [{var,1956,'Tail'},
               {var,1956,'Node'},
               {cons,1956,{var,1956,'Op'},{var,1956,'Ops'}},
               {cons,1956,{var,1956,'Op'},{var,1956,'Res'}}]}]}]}]},
       {clause,1958,
        [{cons,1958,
          {tuple,1958,
           [{var,1958,'Name'},
            {var,1958,'_Pid2'},
            {var,1958,'_Method'},
            {var,1958,'_RPid'},
            {var,1958,'_Ref'}]},
          {nil,1958}}],
        [],
        [{call,1960,
          {atom,1960,exchange_names},
          [{var,1960,'Tail'},
           {var,1960,'Node'},
           {var,1960,'Ops'},
           {var,1960,'Res'}]}]},
       {clause,1961,
        [{var,1961,'_'}],
        [],
        [{call,1963,
          {atom,1963,exchange_names},
          [{var,1963,'Tail'},
           {var,1963,'Node'},
           {cons,1964,
            {tuple,1964,
             [{atom,1964,insert},
              {tuple,1964,
               [{var,1964,'Name'},{var,1964,'Pid'},{var,1964,'Method'}]}]},
            {var,1964,'Ops'}},
           {var,1964,'Res'}]}]}]}]},
   {clause,1966,
    [{nil,1966},{var,1966,'_'},{var,1966,'Ops'},{var,1966,'Res'}],
    [],
    [{atom,61,ok},{tuple,1968,[{var,1968,'Ops'},{var,1968,'Res'}]}]}]},
 {function,1970,resolve_it,4,
  [{clause,1970,
    [{var,1970,'Method'},
     {var,1970,'Name'},
     {var,1970,'Pid1'},
     {var,1970,'Pid2'}],
    [],
    [{'catch',1971,
      {call,1971,
       {var,1971,'Method'},
       [{var,1971,'Name'},{var,1971,'Pid1'},{var,1971,'Pid2'}]}}]}]},
 {function,1973,minmax,2,
  [{clause,1973,
    [{var,1973,'P1'},{var,1973,'P2'}],
    [],
    [{'if',1974,
      [{clause,1974,[],
        [[{op,1974,'<',
           {call,1974,{atom,1974,node},[{var,1974,'P1'}]},
           {call,1974,{atom,1974,node},[{var,1974,'P2'}]}}]],
        [{tuple,1974,[{var,1974,'P1'},{var,1974,'P2'}]}]},
       {clause,1974,[],
        [[{atom,1974,true}]],
        [{tuple,1974,[{var,1974,'P2'},{var,1974,'P1'}]}]}]}]}]},
 {function,1980,random_exit_name,3,
  [{clause,1980,
    [{var,1980,'Name'},{var,1980,'Pid'},{var,1980,'Pid2'}],
    [],
    [{match,1981,
      {tuple,1981,[{var,1981,'Min'},{var,1981,'Max'}]},
      {call,1981,{atom,1981,minmax},[{var,1981,'Pid'},{var,1981,'Pid2'}]}},
     {call,1982,
      {remote,1982,{atom,1982,error_logger},{atom,1982,info_msg}},
      [{string,1982,"global: Name conflict terminating ~w\n"},
       {cons,1983,
        {tuple,1983,[{var,1983,'Name'},{var,1983,'Max'}]},
        {nil,1983}}]},
     {call,1984,{atom,1984,exit},[{var,1984,'Max'},{atom,1984,kill}]},
     {var,1985,'Min'}]}]},
 {function,1991,random_notify_name,3,
  [{clause,1991,
    [{var,1991,'Name'},{var,1991,'Pid'},{var,1991,'Pid2'}],
    [],
    [{match,1992,
      {tuple,1992,[{var,1992,'Min'},{var,1992,'Max'}]},
      {call,1992,{atom,1992,minmax},[{var,1992,'Pid'},{var,1992,'Pid2'}]}},
     {op,1993,'!',
      {var,1993,'Max'},
      {tuple,1993,[{atom,1993,global_name_conflict},{var,1993,'Name'}]}},
     {var,1994,'Min'}]}]},
 {function,2000,notify_all_name,3,
  [{clause,2000,
    [{var,2000,'Name'},{var,2000,'Pid'},{var,2000,'Pid2'}],
    [],
    [{op,2001,'!',
      {var,2001,'Pid'},
      {tuple,2001,
       [{atom,2001,global_name_conflict},
        {var,2001,'Name'},
        {var,2001,'Pid2'}]}},
     {op,2002,'!',
      {var,2002,'Pid2'},
      {tuple,2002,
       [{atom,2002,global_name_conflict},{var,2002,'Name'},{var,2002,'Pid'}]}},
     {atom,2003,none}]}]},
 {function,2005,dolink_ext,2,
  [{clause,2005,
    [{var,2005,'Pid'},{var,2005,'RegNode'}],
    [[{op,2005,'=:=',{var,2005,'RegNode'},{call,2005,{atom,2005,node},[]}}]],
    [{call,2006,{atom,2006,link},[{var,2006,'Pid'}]}]},
   {clause,2007,[{var,2007,'_'},{var,2007,'_'}],[],[{atom,2008,ok}]}]},
 {function,2010,dounlink_ext,2,
  [{clause,2010,
    [{var,2010,'Pid'},{var,2010,'RegNode'}],
    [[{op,2010,'=:=',{var,2010,'RegNode'},{call,2010,{atom,2010,node},[]}}]],
    [{call,2011,{atom,2011,unlink_pid},[{var,2011,'Pid'}]}]},
   {clause,2012,
    [{var,2012,'_Pid'},{var,2012,'_RegNode'}],
    [],
    [{atom,2013,ok}]}]},
 {function,2015,unlink_pid,1,
  [{clause,2015,
    [{var,2015,'Pid'}],
    [],
    [{'case',2016,
      {call,2016,
       {remote,2016,{atom,2016,ets},{atom,2016,member}},
       [{atom,2016,global_pid_names},{var,2016,'Pid'}]},
      [{clause,2017,
        [{atom,2017,false}],
        [],
        [{'case',2018,
          {call,2018,
           {remote,2018,{atom,2018,ets},{atom,2018,member}},
           [{atom,2018,global_pid_ids},{var,2018,'Pid'}]},
          [{clause,2019,
            [{atom,2019,false}],
            [],
            [{call,2020,{atom,2020,unlink},[{var,2020,'Pid'}]}]},
           {clause,2021,[{atom,2021,true}],[],[{atom,2022,ok}]}]}]},
       {clause,2024,[{atom,2024,true}],[],[{atom,2025,ok}]}]}]}]},
 {function,2028,pid_is_locking,2,
  [{clause,2028,
    [{var,2028,'Pid'},{var,2028,'PidRefs'}],
    [],
    [{op,2029,'=/=',
      {call,2029,
       {remote,2029,{atom,2029,lists},{atom,2029,keyfind}},
       [{var,2029,'Pid'},{integer,2029,1},{var,2029,'PidRefs'}]},
      {atom,2029,false}}]}]},
 {function,2031,delete_lock,2,
  [{clause,2031,
    [{var,2031,'Ref'},{var,2031,'S0'}],
    [],
    [{match,2032,
      {var,2032,'Locks'},
      {call,2032,{atom,2032,pid_locks},[{var,2032,'Ref'}]}},
     {match,2033,
      {var,2033,'F'},
      {'fun',2033,
       {clauses,
        [{clause,2033,
          [{tuple,2033,
            [{var,2033,'ResourceId'},
             {var,2033,'LockRequesterId'},
             {var,2033,'PidRefs'}]},
           {var,2033,'S'}],
          [],
          [{match,2034,
            {tuple,2034,
             [{var,2034,'Pid'},{var,2034,'_RPid'},{var,2034,'Ref'}]},
            {call,2034,
             {remote,2034,{atom,2034,lists},{atom,2034,keyfind}},
             [{var,2034,'Ref'},{integer,2034,3},{var,2034,'PidRefs'}]}},
           {call,2035,
            {atom,2035,remove_lock},
            [{var,2035,'ResourceId'},
             {var,2035,'LockRequesterId'},
             {var,2035,'Pid'},
             {var,2035,'PidRefs'},
             {atom,2035,true},
             {var,2035,'S'}]}]}]}}},
     {call,2037,
      {remote,2037,{atom,2037,lists},{atom,2037,foldl}},
      [{var,2037,'F'},{var,2037,'S0'},{var,2037,'Locks'}]}]}]},
 {function,2039,pid_locks,1,
  [{clause,2039,
    [{var,2039,'Ref'}],
    [],
    [{match,2040,
      {var,2040,'L'},
      {call,2040,
       {remote,2040,{atom,2040,lists},{atom,2040,flatmap}},
       [{'fun',2040,
         {clauses,
          [{clause,2040,
            [{tuple,2040,[{var,2040,'_'},{var,2040,'ResourceId'}]}],
            [],
            [{call,2041,
              {remote,2041,{atom,2041,ets},{atom,2041,lookup}},
              [{atom,2041,global_locks},{var,2041,'ResourceId'}]}]}]}},
        {call,2042,
         {remote,2042,{atom,2042,ets},{atom,2042,lookup}},
         [{atom,2042,global_pid_ids},{var,2042,'Ref'}]}]}},
     {lc,2043,
      {var,2043,'Lock'},
      [{generate,2043,
        {match,2043,
         {var,2043,'Lock'},
         {tuple,2043,
          [{var,2043,'_Id'},{var,2043,'_Req'},{var,2043,'PidRefs'}]}},
        {var,2043,'L'}},
       {call,2044,
        {atom,2044,rpid_is_locking},
        [{var,2044,'Ref'},{var,2044,'PidRefs'}]}]}]}]},
 {function,2046,rpid_is_locking,2,
  [{clause,2046,
    [{var,2046,'Ref'},{var,2046,'PidRefs'}],
    [],
    [{op,2047,'=/=',
      {call,2047,
       {remote,2047,{atom,2047,lists},{atom,2047,keyfind}},
       [{var,2047,'Ref'},{integer,2047,3},{var,2047,'PidRefs'}]},
      {atom,2047,false}}]}]},
 {function,2049,handle_nodedown,2,
  [{clause,2049,
    [{var,2049,'Node'},{var,2049,'S'}],
    [],
    [{match,2051,
      {tuple,2051,
       [{atom,2051,state},
        {var,2051,'_'},
        {var,2051,'Known'},
        {var,2051,'Syncs'},
        {var,2051,'_'},
        {var,2051,'_'},
        {var,2051,'_'},
        {var,2051,'_'},
        {var,2051,'_'},
        {var,2051,'_'},
        {var,2051,'_'}]},
      {var,2051,'S'}},
     {match,2052,
      {var,2052,'NewS'},
      {call,2052,
       {atom,2052,cancel_locker},
       [{var,2052,'Node'},
        {var,2052,'S'},
        {call,2052,
         {atom,2052,get},
         [{tuple,2052,[{atom,2052,sync_tag_my},{var,2052,'Node'}]}]}]}},
     {op,2053,'!',
      {call,2053,
       {remote,2053,{atom,2053,erlang},{atom,2053,element}},
       [{integer,2053,8},{var,2053,'NewS'}]},
      {tuple,2053,[{atom,2053,remove_from_known},{var,2053,'Node'}]}},
     {call,2054,{atom,2054,reset_node_state},[{var,2054,'Node'}]},
     {call,2055,
      {remote,2055,{atom,2055,erlang},{atom,2055,setelement}},
      [{integer,2055,4},
       {call,2055,
        {remote,2055,{atom,2055,erlang},{atom,2055,setelement}},
        [{integer,2055,3},
         {var,2055,'NewS'},
         {call,2055,
          {remote,2055,{atom,2055,lists},{atom,2055,delete}},
          [{var,2055,'Node'},{var,2055,'Known'}]}]},
       {call,2056,
        {remote,2056,{atom,2056,lists},{atom,2056,delete}},
        [{var,2056,'Node'},{var,2056,'Syncs'}]}]}]}]},
 {function,2058,get_names,0,
  [{clause,2058,[],[],
    [{call,2059,
      {remote,2059,{atom,2059,ets},{atom,2059,select}},
      [{atom,2059,global_names},
       {call,2060,
        {remote,2060,{atom,2060,ets},{atom,2060,fun2ms}},
        [{'fun',2060,
          {clauses,
           [{clause,2060,
             [{tuple,2060,
               [{var,2060,'Name'},
                {var,2060,'Pid'},
                {var,2060,'Method'},
                {var,2060,'_RPid'},
                {var,2060,'_Ref'}]}],
             [],
             [{tuple,2061,
               [{var,2061,'Name'},
                {var,2061,'Pid'},
                {var,2061,'Method'}]}]}]}}]}]}]}]},
 {function,2064,get_names_ext,0,
  [{clause,2064,[],[],
    [{call,2065,
      {remote,2065,{atom,2065,ets},{atom,2065,tab2list}},
      [{atom,2065,global_names_ext}]}]}]},
 {function,2067,get_known,0,
  [{clause,2067,[],[],
    [{call,2068,
      {remote,2068,{atom,2068,gen_server},{atom,2068,call}},
      [{atom,2068,global_name_server},
       {atom,2068,get_known},
       {atom,2068,infinity}]}]}]},
 {function,2070,random_sleep,1,
  [{clause,2070,
    [{var,2070,'Times'}],
    [],
    [{'case',2071,
      {op,2071,'rem',{var,2071,'Times'},{integer,2071,10}},
      [{clause,2072,
        [{integer,2072,0}],
        [],
        [{call,2072,{atom,2072,erase},[{atom,2072,random_seed}]}]},
       {clause,2073,[{var,2073,'_'}],[],[{atom,2073,ok}]}]},
     {'case',2075,
      {call,2075,{atom,2075,get},[{atom,2075,random_seed}]},
      [{clause,2076,
        [{atom,2076,undefined}],
        [],
        [{match,2077,
          {var,2077,'_'},
          {call,2077,
           {remote,2077,{atom,2077,random},{atom,2077,seed}},
           [{call,2077,
             {remote,2077,{atom,2077,erlang},{atom,2077,phash2}},
             [{cons,2077,
               {call,2077,
                {remote,2077,{atom,2077,erlang},{atom,2077,node}},
                []},
               {nil,2077}}]},
            {call,2078,
             {remote,2078,{atom,2078,erlang},{atom,2078,monotonic_time}},
             []},
            {call,2079,
             {remote,2079,{atom,2079,erlang},{atom,2079,unique_integer}},
             []}]}},
         {atom,2080,ok}]},
       {clause,2081,[{var,2081,'_'}],[],[{atom,2081,ok}]}]},
     {match,2084,
      {var,2084,'Tmax'},
      {'if',2084,
       [{clause,2084,[],
         [[{op,2084,'>',{var,2084,'Times'},{integer,2084,5}}]],
         [{integer,2084,8000}]},
        {clause,2085,[],
         [[{atom,2085,true}]],
         [{op,2085,'div',
           {op,2085,'*',
            {op,2085,'bsl',{integer,2085,1},{var,2085,'Times'}},
            {integer,2085,1000}},
           {integer,2085,8}}]}]}},
     {match,2087,
      {var,2087,'T'},
      {call,2087,
       {remote,2087,{atom,2087,random},{atom,2087,uniform}},
       [{var,2087,'Tmax'}]}},
     {atom,61,ok},
     {'receive',2089,[],{var,2089,'T'},[{atom,2089,ok}]}]}]},
 {function,2091,dec,1,
  [{clause,2091,[{atom,2091,infinity}],[],[{atom,2091,infinity}]},
   {clause,2092,
    [{var,2092,'N'}],
    [],
    [{op,2092,'-',{var,2092,'N'},{integer,2092,1}}]}]},
 {function,2094,send_again,1,
  [{clause,2094,
    [{var,2094,'Msg'}],
    [],
    [{match,2095,{var,2095,'Me'},{call,2095,{atom,2095,self},[]}},
     {call,2096,
      {atom,2096,spawn},
      [{'fun',2096,
        {clauses,
         [{clause,2096,[],[],
           [{call,2096,
             {atom,2096,timer},
             [{var,2096,'Me'},{var,2096,'Msg'}]}]}]}}]}]}]},
 {function,2098,timer,2,
  [{clause,2098,
    [{var,2098,'Pid'},{var,2098,'Msg'}],
    [],
    [{call,2099,{atom,2099,random_sleep},[{integer,2099,5}]},
     {op,2100,'!',{var,2100,'Pid'},{var,2100,'Msg'}}]}]},
 {function,2102,change_our_node_name,2,
  [{clause,2102,
    [{var,2102,'NewNode'},{var,2102,'S'}],
    [],
    [{match,2103,
      {var,2103,'S1'},
      {call,2103,
       {atom,2103,trace_message},
       [{var,2103,'S'},
        {tuple,2103,[{atom,2103,new_node_name},{var,2103,'NewNode'}]},
        {nil,2103}]}},
     {call,2104,
      {remote,2104,{atom,2104,erlang},{atom,2104,setelement}},
      [{integer,2104,7},{var,2104,'S1'},{var,2104,'NewNode'}]}]}]},
 {function,2106,trace_message,3,
  [{clause,2106,
    [{match,2106,
      {tuple,2106,
       [{atom,2106,state},
        {var,2106,'_'},
        {var,2106,'_'},
        {var,2106,'_'},
        {var,2106,'_'},
        {var,2106,'_'},
        {var,2106,'_'},
        {var,2106,'_'},
        {var,2106,'_'},
        {atom,2106,no_trace},
        {var,2106,'_'}]},
      {var,2106,'S'}},
     {var,2106,'_M'},
     {var,2106,'_X'}],
    [],
    [{var,2107,'S'}]},
   {clause,2108,
    [{var,2108,'S'},{var,2108,'M'},{var,2108,'X'}],
    [],
    [{call,2109,
      {remote,2109,{atom,2109,erlang},{atom,2109,setelement}},
      [{integer,2109,10},
       {var,2109,'S'},
       {cons,2109,
        {call,2109,{atom,2109,trace_message},[{var,2109,'M'},{var,2109,'X'}]},
        {call,2109,
         {remote,2109,{atom,2109,erlang},{atom,2109,element}},
         [{integer,2109,10},{var,2109,'S'}]}}]}]}]},
 {function,2111,trace_message,2,
  [{clause,2111,
    [{var,2111,'M'},{var,2111,'X'}],
    [],
    [{tuple,2112,
      [{call,2112,{atom,2112,node},[]},
       {call,2112,{remote,2112,{atom,2112,erlang},{atom,2112,timestamp}},[]},
       {var,2112,'M'},
       {call,2112,{atom,2112,nodes},[]},
       {var,2112,'X'}]}]}]},
 {function,2121,start_sync,2,
  [{clause,2121,
    [{var,2121,'Nodes'},{var,2121,'From'}],
    [],
    [{call,2122,
      {atom,2122,spawn_link},
      [{'fun',2122,
        {clauses,
         [{clause,2122,[],[],
           [{call,2122,
             {atom,2122,sync_init},
             [{var,2122,'Nodes'},{var,2122,'From'}]}]}]}}]}]}]},
 {function,2124,sync_init,2,
  [{clause,2124,
    [{var,2124,'Nodes'},{var,2124,'From'}],
    [],
    [{call,2125,
      {remote,2125,{atom,2125,lists},{atom,2125,foreach}},
      [{'fun',2125,
        {clauses,
         [{clause,2125,
           [{var,2125,'Node'}],
           [],
           [{call,2125,
             {atom,2125,monitor_node},
             [{var,2125,'Node'},{atom,2125,true}]}]}]}},
       {var,2125,'Nodes'}]},
     {call,2126,
      {atom,2126,sync_loop},
      [{var,2126,'Nodes'},{var,2126,'From'}]}]}]},
 {function,2128,sync_loop,2,
  [{clause,2128,
    [{nil,2128},{var,2128,'From'}],
    [],
    [{call,2129,
      {remote,2129,{atom,2129,gen_server},{atom,2129,reply}},
      [{var,2129,'From'},{atom,2129,ok}]}]},
   {clause,2130,
    [{var,2130,'Nodes'},{var,2130,'From'}],
    [],
    [{'receive',2131,
      [{clause,2132,
        [{tuple,2132,[{atom,2132,nodedown},{var,2132,'Node'}]}],
        [],
        [{call,2133,
          {atom,2133,monitor_node},
          [{var,2133,'Node'},{atom,2133,false}]},
         {call,2134,
          {atom,2134,sync_loop},
          [{call,2134,
            {remote,2134,{atom,2134,lists},{atom,2134,delete}},
            [{var,2134,'Node'},{var,2134,'Nodes'}]},
           {var,2134,'From'}]}]},
       {clause,2135,
        [{tuple,2135,[{atom,2135,synced},{var,2135,'SNodes'}]}],
        [],
        [{call,2136,
          {remote,2136,{atom,2136,lists},{atom,2136,foreach}},
          [{'fun',2136,
            {clauses,
             [{clause,2136,
               [{var,2136,'N'}],
               [],
               [{call,2136,
                 {atom,2136,monitor_node},
                 [{var,2136,'N'},{atom,2136,false}]}]}]}},
           {var,2136,'SNodes'}]},
         {call,2137,
          {atom,2137,sync_loop},
          [{op,2137,'--',{var,2137,'Nodes'},{var,2137,'SNodes'}},
           {var,2137,'From'}]}]}]}]}]},
 {function,2143,check_sync_nodes,0,
  [{clause,2143,[],[],
    [{'case',2144,
      {call,2144,{atom,2144,get_own_nodes},[]},
      [{clause,2145,
        [{tuple,2145,[{atom,2145,ok},{atom,2145,all}]}],
        [],
        [{call,2146,{atom,2146,nodes},[]}]},
       {clause,2147,
        [{tuple,2147,[{atom,2147,ok},{var,2147,'NodesNG'}]}],
        [],
        [{call,2150,
          {atom,2150,intersection},
          [{call,2150,{atom,2150,nodes},[]},{var,2150,'NodesNG'}]}]},
       {clause,2151,
        [{match,2151,
          {tuple,2151,[{atom,2151,error},{var,2151,'_'}]},
          {var,2151,'Error'}}],
        [],
        [{var,2152,'Error'}]}]}]}]},
 {function,2155,check_sync_nodes,1,
  [{clause,2155,
    [{var,2155,'SyncNodes'}],
    [],
    [{'case',2156,
      {call,2156,{atom,2156,get_own_nodes},[]},
      [{clause,2157,
        [{tuple,2157,[{atom,2157,ok},{atom,2157,all}]}],
        [],
        [{var,2158,'SyncNodes'}]},
       {clause,2159,
        [{tuple,2159,[{atom,2159,ok},{var,2159,'NodesNG'}]}],
        [],
        [{match,2162,
          {var,2162,'OwnNodeGroup'},
          {call,2162,
           {atom,2162,intersection},
           [{call,2162,{atom,2162,nodes},[]},{var,2162,'NodesNG'}]}},
         {match,2163,
          {var,2163,'IllegalSyncNodes'},
          {op,2163,'--',
           {var,2163,'SyncNodes'},
           {cons,2163,
            {call,2163,{atom,2163,node},[]},
            {var,2163,'OwnNodeGroup'}}}},
         {'case',2164,
          {var,2164,'IllegalSyncNodes'},
          [{clause,2165,[{nil,2165}],[],[{var,2165,'SyncNodes'}]},
           {clause,2166,
            [{var,2166,'_'}],
            [],
            [{tuple,2166,
              [{atom,2166,error},
               {tuple,2166,
                [{string,2166,
                  "Trying to sync nodes not defined in the own global group"},
                 {var,2167,'IllegalSyncNodes'}]}]}]}]}]},
       {clause,2169,
        [{match,2169,
          {tuple,2169,[{atom,2169,error},{var,2169,'_'}]},
          {var,2169,'Error'}}],
        [],
        [{var,2170,'Error'}]}]}]}]},
 {function,2173,get_own_nodes,0,
  [{clause,2173,[],[],
    [{'case',2174,
      {call,2174,
       {remote,2174,
        {atom,2174,global_group},
        {atom,2174,get_own_nodes_with_errors}},
       []},
      [{clause,2175,
        [{tuple,2175,[{atom,2175,error},{var,2175,'Error'}]}],
        [],
        [{tuple,2176,
          [{atom,2176,error},
           {tuple,2176,
            [{string,2176,"global_groups definition error"},
             {var,2176,'Error'}]}]}]},
       {clause,2177,[{var,2177,'OkTup'}],[],[{var,2178,'OkTup'}]}]}]}]},
 {function,2186,start_the_registrar,0,
  [{clause,2186,[],[],
    [{call,2187,
      {atom,2187,spawn_link},
      [{'fun',2187,
        {clauses,
         [{clause,2187,[],[],
           [{call,2187,{atom,2187,loop_the_registrar},[]}]}]}}]}]}]},
 {function,2189,loop_the_registrar,0,
  [{clause,2189,[],[],
    [{'receive',2190,
      [{clause,2191,
        [{tuple,2191,
          [{atom,2191,trans_all_known},{var,2191,'Fun'},{var,2191,'From'}]}],
        [],
        [{atom,61,ok},
         {call,2193,
          {remote,2193,{atom,2193,gen_server},{atom,2193,reply}},
          [{var,2193,'From'},
           {call,2193,{atom,2193,trans_all_known},[{var,2193,'Fun'}]}]}]},
       {clause,2194,
        [{var,2194,'Other'}],
        [],
        [{call,2195,
          {atom,2195,unexpected_message},
          [{var,2195,'Other'},{atom,2195,register}]}]}]},
     {call,2197,{atom,2197,loop_the_registrar},[]}]}]},
 {function,2199,unexpected_message,2,
  [{clause,2199,
    [{tuple,2199,[{atom,2199,'EXIT'},{var,2199,'_Pid'},{var,2199,'_Reason'}]},
     {var,2199,'_What'}],
    [],
    [{atom,2201,ok}]},
   {clause,2202,
    [{var,2202,'Message'},{var,2202,'What'}],
    [],
    [{call,2203,
      {remote,2203,{atom,2203,error_logger},{atom,2203,warning_msg}},
      [{string,2203,
        "The global_name_server ~w process received an unexpected message:\n~p\n"},
       {cons,2205,
        {var,2205,'What'},
        {cons,2205,{var,2205,'Message'},{nil,2205}}}]}]}]},
 {function,2211,do_monitor,1,
  [{clause,2211,
    [{var,2211,'Pid'}],
    [],
    [{'case',2212,
      {op,2212,'orelse',
       {op,2212,'=:=',
        {call,2212,{atom,2212,node},[{var,2212,'Pid'}]},
        {call,2212,{atom,2212,node},[]}},
       {call,2212,
        {remote,2212,{atom,2212,lists},{atom,2212,member}},
        [{call,2212,{atom,2212,node},[{var,2212,'Pid'}]},
         {call,2212,{atom,2212,nodes},[]}]}},
      [{clause,2213,
        [{atom,2213,true}],
        [],
        [{tuple,2215,
          [{var,2215,'Pid'},
           {call,2215,
            {remote,2215,{atom,2215,erlang},{atom,2215,monitor}},
            [{atom,2215,process},{var,2215,'Pid'}]}]}]},
       {clause,2216,
        [{atom,2216,false}],
        [],
        [{match,2217,
          {var,2217,'F'},
          {'fun',2217,
           {clauses,
            [{clause,2217,[],[],
              [{match,2218,
                {var,2218,'Ref'},
                {call,2218,
                 {remote,2218,{atom,2218,erlang},{atom,2218,monitor}},
                 [{atom,2218,process},{var,2218,'Pid'}]}},
               {'receive',2219,
                [{clause,2220,
                  [{tuple,2220,
                    [{atom,2220,'DOWN'},
                     {var,2220,'Ref'},
                     {atom,2220,process},
                     {var,2220,'Pid'},
                     {var,2220,'_Info'}]}],
                  [],
                  [{call,2221,{atom,2221,exit},[{atom,2221,normal}]}]}]}]}]}}},
         {call,2224,
          {remote,2224,{atom,2224,erlang},{atom,2224,spawn_monitor}},
          [{var,2224,'F'}]}]}]}]}]},
 {function,2227,intersection,2,
  [{clause,2227,[{var,2227,'_'},{nil,2227}],[],[{nil,2228}]},
   {clause,2229,
    [{var,2229,'L1'},{var,2229,'L2'}],
    [],
    [{op,2230,'--',
      {var,2230,'L1'},
      {op,2230,'--',{var,2230,'L1'},{var,2230,'L2'}}}]}]},
 {function,2233,allow_tuple_fun,1,
  [{clause,2233,
    [{tuple,2233,[{var,2233,'M'},{var,2233,'F'}]}],
    [[{call,2233,{atom,2233,is_atom},[{var,2233,'M'}]},
      {call,2233,{atom,2233,is_atom},[{var,2233,'F'}]}]],
    [{'fun',2234,{function,{var,2234,'M'},{var,2234,'F'},{integer,2234,3}}}]},
   {clause,2235,
    [{var,2235,'Fun'}],
    [[{call,2235,
       {atom,2235,is_function},
       [{var,2235,'Fun'},{integer,2235,3}]}]],
    [{var,2236,'Fun'}]}]}]
