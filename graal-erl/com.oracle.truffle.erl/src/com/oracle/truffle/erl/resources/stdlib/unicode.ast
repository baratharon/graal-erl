unicode
[]
[]
[{function,68,bin_is_7bit,1,
  [{clause,68,
    [{var,68,'_'}],
    [],
    [{call,69,
      {remote,69,{atom,69,erlang},{atom,69,nif_error}},
      [{atom,69,undef}]}]}]},
 {function,79,characters_to_binary,2,
  [{clause,79,
    [{var,79,'_'},{var,79,'_'}],
    [],
    [{call,80,
      {remote,80,{atom,80,erlang},{atom,80,nif_error}},
      [{atom,80,undef}]}]}]},
 {function,90,characters_to_list,2,
  [{clause,90,
    [{var,90,'_'},{var,90,'_'}],
    [],
    [{call,91,
      {remote,91,{atom,91,erlang},{atom,91,nif_error}},
      [{atom,91,undef}]}]}]},
 {function,102,characters_to_list,1,
  [{clause,102,
    [{var,102,'ML'}],
    [],
    [{call,103,
      {remote,103,{atom,103,unicode},{atom,103,characters_to_list}},
      [{var,103,'ML'},{atom,103,unicode}]}]}]},
 {function,105,characters_to_list_int,2,
  [{clause,105,
    [{var,105,'ML'},{var,105,'Encoding'}],
    [],
    [{'try',106,
      [{call,107,
        {atom,107,do_characters_to_list},
        [{var,107,'ML'},{var,107,'Encoding'}]}],
      [],
      [{clause,109,
        [{tuple,109,[{atom,109,error},{var,109,'AnyError'},{var,109,'_'}]}],
        [],
        [{match,110,
          {var,110,'TheError'},
          {'case',110,
           {var,110,'AnyError'},
           [{clause,111,
             [{atom,111,system_limit}],
             [],
             [{atom,112,system_limit}]},
            {clause,113,[{var,113,'_'}],[],[{atom,114,badarg}]}]}},
         {match,116,
          {tuple,116,
           [{atom,116,'EXIT'},
            {tuple,116,
             [{atom,116,new_stacktrace},
              {cons,116,
               {tuple,116,
                [{var,116,'Mod'},{var,116,'_'},{var,116,'L'},{var,116,'_'}]},
               {var,116,'Rest'}}]}]},
          {'catch',117,
           {call,117,
            {remote,117,{atom,117,erlang},{atom,117,error}},
            [{atom,117,new_stacktrace},
             {cons,118,
              {var,118,'ML'},
              {cons,118,{var,118,'Encoding'},{nil,118}}}]}}},
         {call,119,
          {remote,119,{atom,119,erlang},{atom,119,raise}},
          [{atom,119,error},
           {var,119,'TheError'},
           {cons,119,
            {tuple,119,
             [{var,119,'Mod'},{atom,119,characters_to_list},{var,119,'L'}]},
            {var,119,'Rest'}}]}]}],
      []}]}]},
 {function,123,do_characters_to_list,2,
  [{clause,123,
    [{var,123,'ML'},{var,123,'Encoding'}],
    [],
    [{'case',124,
      {call,124,
       {remote,124,{atom,124,unicode},{atom,124,characters_to_binary}},
       [{var,124,'ML'},{var,124,'Encoding'}]},
      [{clause,125,
        [{var,125,'Bin'}],
        [[{call,125,{atom,125,is_binary},[{var,125,'Bin'}]}]],
        [{call,126,
          {remote,126,{atom,126,unicode},{atom,126,characters_to_list}},
          [{var,126,'Bin'},{atom,126,utf8}]}]},
       {clause,127,
        [{tuple,127,[{atom,127,error},{var,127,'Encoded'},{var,127,'Rest'}]}],
        [],
        [{tuple,128,
          [{atom,128,error},
           {call,128,
            {remote,128,{atom,128,unicode},{atom,128,characters_to_list}},
            [{var,128,'Encoded'},{atom,128,utf8}]},
           {var,128,'Rest'}]}]},
       {clause,129,
        [{tuple,129,
          [{atom,129,incomplete},{var,129,'Encoded2'},{var,129,'Rest2'}]}],
        [],
        [{tuple,130,
          [{atom,130,incomplete},
           {call,130,
            {remote,130,{atom,130,unicode},{atom,130,characters_to_list}},
            [{var,130,'Encoded2'},{atom,130,utf8}]},
           {var,130,'Rest2'}]}]}]}]}]},
 {function,141,characters_to_binary,1,
  [{clause,141,
    [{var,141,'ML'}],
    [],
    [{'try',142,
      [{call,143,
        {remote,143,{atom,143,unicode},{atom,143,characters_to_binary}},
        [{var,143,'ML'},{atom,143,unicode}]}],
      [],
      [{clause,145,
        [{tuple,145,[{atom,145,error},{var,145,'AnyError'},{var,145,'_'}]}],
        [],
        [{match,146,
          {var,146,'TheError'},
          {'case',146,
           {var,146,'AnyError'},
           [{clause,147,
             [{atom,147,system_limit}],
             [],
             [{atom,148,system_limit}]},
            {clause,149,[{var,149,'_'}],[],[{atom,150,badarg}]}]}},
         {match,152,
          {tuple,152,
           [{atom,152,'EXIT'},
            {tuple,152,
             [{atom,152,new_stacktrace},
              {cons,152,
               {tuple,152,
                [{var,152,'Mod'},{var,152,'_'},{var,152,'L'},{var,152,'_'}]},
               {var,152,'Rest'}}]}]},
          {'catch',153,
           {call,153,
            {remote,153,{atom,153,erlang},{atom,153,error}},
            [{atom,153,new_stacktrace},{cons,154,{var,154,'ML'},{nil,154}}]}}},
         {call,155,
          {remote,155,{atom,155,erlang},{atom,155,raise}},
          [{atom,155,error},
           {var,155,'TheError'},
           {cons,155,
            {tuple,155,
             [{var,155,'Mod'},{atom,155,characters_to_binary},{var,155,'L'}]},
            {var,155,'Rest'}}]}]}],
      []}]}]},
 {function,159,characters_to_binary_int,2,
  [{clause,159,
    [{var,159,'ML'},{var,159,'InEncoding'}],
    [],
    [{'try',160,
      [{call,161,
        {atom,161,characters_to_binary_int},
        [{var,161,'ML'},{var,161,'InEncoding'},{atom,161,unicode}]}],
      [],
      [{clause,163,
        [{tuple,163,[{atom,163,error},{var,163,'AnyError'},{var,163,'_'}]}],
        [],
        [{match,164,
          {var,164,'TheError'},
          {'case',164,
           {var,164,'AnyError'},
           [{clause,165,
             [{atom,165,system_limit}],
             [],
             [{atom,166,system_limit}]},
            {clause,167,[{var,167,'_'}],[],[{atom,168,badarg}]}]}},
         {match,170,
          {tuple,170,
           [{atom,170,'EXIT'},
            {tuple,170,
             [{atom,170,new_stacktrace},
              {cons,170,
               {tuple,170,
                [{var,170,'Mod'},{var,170,'_'},{var,170,'L'},{var,170,'_'}]},
               {var,170,'Rest'}}]}]},
          {'catch',171,
           {call,171,
            {remote,171,{atom,171,erlang},{atom,171,error}},
            [{atom,171,new_stacktrace},
             {cons,172,
              {var,172,'ML'},
              {cons,172,{var,172,'InEncoding'},{nil,172}}}]}}},
         {call,173,
          {remote,173,{atom,173,erlang},{atom,173,raise}},
          [{atom,173,error},
           {var,173,'TheError'},
           {cons,173,
            {tuple,173,
             [{var,173,'Mod'},{atom,173,characters_to_binary},{var,173,'L'}]},
            {var,173,'Rest'}}]}]}],
      []}]}]},
 {function,185,characters_to_binary,3,
  [{clause,185,
    [{var,185,'ML'},{atom,185,latin1},{atom,185,latin1}],
    [[{call,185,{atom,185,is_binary},[{var,185,'ML'}]}]],
    [{var,186,'ML'}]},
   {clause,187,
    [{var,187,'ML'},{atom,187,latin1},{var,187,'Uni'}],
    [[{op,187,'and',
       {call,187,{atom,187,is_binary},[{var,187,'ML'}]},
       {op,187,'or',
        {op,187,'=:=',{var,187,'Uni'},{atom,187,utf8}},
        {op,187,'=:=',{var,187,'Uni'},{atom,187,unicode}}}}]],
    [{'case',188,
      {call,188,
       {remote,188,{atom,188,unicode},{atom,188,bin_is_7bit}},
       [{var,188,'ML'}]},
      [{clause,189,[{atom,189,true}],[],[{var,190,'ML'}]},
       {clause,191,
        [{atom,191,false}],
        [],
        [{'try',192,
          [{call,193,
            {atom,193,characters_to_binary_int},
            [{var,193,'ML'},{atom,193,latin1},{atom,193,utf8}]}],
          [],
          [{clause,195,
            [{tuple,195,
              [{atom,195,error},{var,195,'AnyError'},{var,195,'_'}]}],
            [],
            [{match,196,
              {var,196,'TheError'},
              {'case',196,
               {var,196,'AnyError'},
               [{clause,197,
                 [{atom,197,system_limit}],
                 [],
                 [{atom,198,system_limit}]},
                {clause,199,[{var,199,'_'}],[],[{atom,200,badarg}]}]}},
             {match,202,
              {tuple,202,
               [{atom,202,'EXIT'},
                {tuple,202,
                 [{atom,202,new_stacktrace},
                  {cons,202,
                   {tuple,202,
                    [{var,202,'Mod'},
                     {var,202,'_'},
                     {var,202,'L'},
                     {var,202,'_'}]},
                   {var,202,'Rest'}}]}]},
              {'catch',203,
               {call,203,
                {remote,203,{atom,203,erlang},{atom,203,error}},
                [{atom,203,new_stacktrace},
                 {cons,204,
                  {var,204,'ML'},
                  {cons,204,
                   {atom,204,latin1},
                   {cons,204,{var,204,'Uni'},{nil,204}}}}]}}},
             {call,205,
              {remote,205,{atom,205,erlang},{atom,205,raise}},
              [{atom,205,error},
               {var,205,'TheError'},
               {cons,206,
                {tuple,206,
                 [{var,206,'Mod'},
                  {atom,206,characters_to_binary},
                  {var,206,'L'}]},
                {var,206,'Rest'}}]}]}],
          []}]}]}]},
   {clause,209,
    [{var,209,'ML'},{var,209,'Uni'},{atom,209,latin1}],
    [[{op,209,'and',
       {call,209,{atom,209,is_binary},[{var,209,'ML'}]},
       {op,209,'or',
        {op,209,'=:=',{var,209,'Uni'},{atom,209,utf8}},
        {op,209,'=:=',{var,209,'Uni'},{atom,209,unicode}}}}]],
    [{'case',210,
      {call,210,
       {remote,210,{atom,210,unicode},{atom,210,bin_is_7bit}},
       [{var,210,'ML'}]},
      [{clause,211,[{atom,211,true}],[],[{var,212,'ML'}]},
       {clause,213,
        [{atom,213,false}],
        [],
        [{'try',214,
          [{call,215,
            {atom,215,characters_to_binary_int},
            [{var,215,'ML'},{atom,215,utf8},{atom,215,latin1}]}],
          [],
          [{clause,217,
            [{tuple,217,
              [{atom,217,error},{var,217,'AnyError'},{var,217,'_'}]}],
            [],
            [{match,218,
              {var,218,'TheError'},
              {'case',218,
               {var,218,'AnyError'},
               [{clause,219,
                 [{atom,219,system_limit}],
                 [],
                 [{atom,220,system_limit}]},
                {clause,221,[{var,221,'_'}],[],[{atom,222,badarg}]}]}},
             {match,224,
              {tuple,224,
               [{atom,224,'EXIT'},
                {tuple,224,
                 [{atom,224,new_stacktrace},
                  {cons,224,
                   {tuple,224,
                    [{var,224,'Mod'},
                     {var,224,'_'},
                     {var,224,'L'},
                     {var,224,'_'}]},
                   {var,224,'Rest'}}]}]},
              {'catch',225,
               {call,225,
                {remote,225,{atom,225,erlang},{atom,225,error}},
                [{atom,225,new_stacktrace},
                 {cons,226,
                  {var,226,'ML'},
                  {cons,226,
                   {var,226,'Uni'},
                   {cons,226,{atom,226,latin1},{nil,226}}}}]}}},
             {call,227,
              {remote,227,{atom,227,erlang},{atom,227,raise}},
              [{atom,227,error},
               {var,227,'TheError'},
               {cons,228,
                {tuple,228,
                 [{var,228,'Mod'},
                  {atom,228,characters_to_binary},
                  {var,228,'L'}]},
                {var,228,'Rest'}}]}]}],
          []}]}]}]},
   {clause,232,
    [{var,232,'ML'},{var,232,'InEncoding'},{var,232,'OutEncoding'}],
    [],
    [{'try',233,
      [{call,234,
        {atom,234,characters_to_binary_int},
        [{var,234,'ML'},{var,234,'InEncoding'},{var,234,'OutEncoding'}]}],
      [],
      [{clause,236,
        [{tuple,236,[{atom,236,error},{var,236,'AnyError'},{var,236,'_'}]}],
        [],
        [{match,237,
          {var,237,'TheError'},
          {'case',237,
           {var,237,'AnyError'},
           [{clause,238,
             [{atom,238,system_limit}],
             [],
             [{atom,239,system_limit}]},
            {clause,240,[{var,240,'_'}],[],[{atom,241,badarg}]}]}},
         {match,243,
          {tuple,243,
           [{atom,243,'EXIT'},
            {tuple,243,
             [{atom,243,new_stacktrace},
              {cons,243,
               {tuple,243,
                [{var,243,'Mod'},{var,243,'_'},{var,243,'L'},{var,243,'_'}]},
               {var,243,'Rest'}}]}]},
          {'catch',244,
           {call,244,
            {remote,244,{atom,244,erlang},{atom,244,error}},
            [{atom,244,new_stacktrace},
             {cons,245,
              {var,245,'ML'},
              {cons,245,
               {var,245,'InEncoding'},
               {cons,245,{var,245,'OutEncoding'},{nil,245}}}}]}}},
         {call,246,
          {remote,246,{atom,246,erlang},{atom,246,raise}},
          [{atom,246,error},
           {var,246,'TheError'},
           {cons,246,
            {tuple,246,
             [{var,246,'Mod'},{atom,246,characters_to_binary},{var,246,'L'}]},
            {var,246,'Rest'}}]}]}],
      []}]}]},
 {function,249,characters_to_binary_int,3,
  [{clause,249,
    [{var,249,'ML'},{var,249,'InEncoding'},{var,249,'OutEncoding'}],
    [[{op,250,'=:=',{var,250,'InEncoding'},{atom,250,latin1}},
      {op,250,'=:=',{var,250,'OutEncoding'},{atom,250,unicode}}],
     [{op,251,'=:=',{var,251,'InEncoding'},{atom,251,latin1}},
      {op,251,'=:=',{var,251,'OutEncoding'},{atom,251,utf8}}],
     [{op,252,'=:=',{var,252,'InEncoding'},{atom,252,unicode}},
      {op,252,'=:=',{var,252,'OutEncoding'},{atom,252,unicode}}],
     [{op,253,'=:=',{var,253,'InEncoding'},{atom,253,unicode}},
      {op,253,'=:=',{var,253,'OutEncoding'},{atom,253,utf8}}],
     [{op,254,'=:=',{var,254,'InEncoding'},{atom,254,utf8}},
      {op,254,'=:=',{var,254,'OutEncoding'},{atom,254,unicode}}],
     [{op,255,'=:=',{var,255,'InEncoding'},{atom,255,utf8}},
      {op,255,'=:=',{var,255,'OutEncoding'},{atom,255,utf8}}]],
    [{call,256,
      {remote,256,{atom,256,unicode},{atom,256,characters_to_binary}},
      [{var,256,'ML'},{var,256,'InEncoding'}]}]},
   {clause,258,
    [{var,258,'ML'},{var,258,'InEncoding'},{var,258,'OutEncoding'}],
    [],
    [{match,259,
      {tuple,259,[{var,259,'InTrans'},{var,259,'Limit'}]},
      {'case',259,
       {var,259,'OutEncoding'},
       [{clause,260,
         [{atom,260,latin1}],
         [],
         [{tuple,260,
           [{call,260,{atom,260,i_trans_chk},[{var,260,'InEncoding'}]},
            {integer,260,255}]}]},
        {clause,261,
         [{var,261,'_'}],
         [],
         [{tuple,261,
           [{call,261,{atom,261,i_trans},[{var,261,'InEncoding'}]},
            {'case',261,
             {var,261,'InEncoding'},
             [{clause,261,[{atom,261,latin1}],[],[{integer,261,255}]},
              {clause,261,[{var,261,'_'}],[],[{integer,261,1114111}]}]}]}]}]}},
     {match,263,
      {var,263,'OutTrans'},
      {call,263,{atom,263,o_trans},[{var,263,'OutEncoding'}]}},
     {match,264,
      {var,264,'Res'},
      {call,265,
       {atom,265,ml_map},
       [{var,265,'ML'},
        {'fun',266,
         {clauses,
          [{clause,266,
            [{var,266,'Part'},{var,266,'Accum'}],
            [[{call,266,{atom,266,is_binary},[{var,266,'Part'}]}]],
            [{'case',267,
              {call,267,{var,267,'InTrans'},[{var,267,'Part'}]},
              [{clause,268,
                [{var,268,'List'}],
                [[{call,268,{atom,268,is_list},[{var,268,'List'}]}]],
                [{match,269,
                  {var,269,'Tail'},
                  {call,269,{var,269,'OutTrans'},[{var,269,'List'}]}},
                 {bin,270,
                  [{bin_element,270,{var,270,'Accum'},default,[binary]},
                   {bin_element,270,{var,270,'Tail'},default,[binary]}]}]},
               {clause,271,
                [{tuple,271,
                  [{atom,271,error},{var,271,'Translated'},{var,271,'Rest'}]}],
                [],
                [{match,272,
                  {var,272,'Tail'},
                  {call,272,{var,272,'OutTrans'},[{var,272,'Translated'}]}},
                 {tuple,273,
                  [{atom,273,error},
                   {bin,273,
                    [{bin_element,273,{var,273,'Accum'},default,[binary]},
                     {bin_element,273,{var,273,'Tail'},default,[binary]}]},
                   {var,273,'Rest'}]}]},
               {clause,274,
                [{tuple,274,
                  [{atom,274,incomplete},
                   {var,274,'Translated'},
                   {var,274,'Rest'},
                   {var,274,'Missing'}]}],
                [],
                [{match,275,
                  {var,275,'Tail'},
                  {call,275,{var,275,'OutTrans'},[{var,275,'Translated'}]}},
                 {tuple,276,
                  [{atom,276,incomplete},
                   {bin,276,
                    [{bin_element,276,{var,276,'Accum'},default,[binary]},
                     {bin_element,276,{var,276,'Tail'},default,[binary]}]},
                   {var,276,'Rest'},
                   {var,277,'Missing'}]}]}]}]},
           {clause,279,
            [{var,279,'Part'},{var,279,'Accum'}],
            [[{call,279,{atom,279,is_integer},[{var,279,'Part'}]},
              {op,279,'=<',{var,279,'Part'},{var,279,'Limit'}}]],
            [{'case',280,
              {call,280,
               {var,280,'OutTrans'},
               [{cons,280,{var,280,'Part'},{nil,280}}]},
              [{clause,281,
                [{var,281,'Binary'}],
                [[{call,281,{atom,281,is_binary},[{var,281,'Binary'}]}]],
                [{bin,282,
                  [{bin_element,282,{var,282,'Accum'},default,[binary]},
                   {bin_element,282,{var,282,'Binary'},default,[binary]}]}]},
               {clause,283,
                [{tuple,283,
                  [{atom,283,error},
                   {var,283,'_'},
                   {cons,283,{var,283,'Part'},{nil,283}}]}],
                [],
                [{tuple,284,
                  [{atom,284,error},
                   {var,284,'Accum'},
                   {cons,284,{var,284,'Part'},{nil,284}}]}]}]}]},
           {clause,286,
            [{var,286,'Part'},{var,286,'Accum'}],
            [],
            [{tuple,287,
              [{atom,287,error},
               {var,287,'Accum'},
               {cons,287,{var,287,'Part'},{nil,287}}]}]}]}},
        {bin,288,[]}]}},
     {'case',289,
      {var,289,'Res'},
      [{clause,290,
        [{tuple,290,
          [{atom,290,incomplete},{var,290,'A'},{var,290,'B'},{var,290,'_'}]}],
        [],
        [{tuple,291,[{atom,291,incomplete},{var,291,'A'},{var,291,'B'}]}]},
       {clause,292,[{var,292,'_'}],[],[{var,293,'Res'}]}]}]}]},
 {function,303,bom_to_encoding,1,
  [{clause,303,
    [{bin,303,
      [{bin_element,303,{integer,303,239},default,default},
       {bin_element,303,{integer,303,187},default,default},
       {bin_element,303,{integer,303,191},default,default},
       {bin_element,303,{var,303,'_'},default,[binary]}]}],
    [],
    [{tuple,304,[{atom,304,utf8},{integer,304,3}]}]},
   {clause,305,
    [{bin,305,
      [{bin_element,305,{integer,305,0},default,default},
       {bin_element,305,{integer,305,0},default,default},
       {bin_element,305,{integer,305,254},default,default},
       {bin_element,305,{integer,305,255},default,default},
       {bin_element,305,{var,305,'_'},default,[binary]}]}],
    [],
    [{tuple,306,
      [{tuple,306,[{atom,306,utf32},{atom,306,big}]},{integer,306,4}]}]},
   {clause,307,
    [{bin,307,
      [{bin_element,307,{integer,307,255},default,default},
       {bin_element,307,{integer,307,254},default,default},
       {bin_element,307,{integer,307,0},default,default},
       {bin_element,307,{integer,307,0},default,default},
       {bin_element,307,{var,307,'_'},default,[binary]}]}],
    [],
    [{tuple,308,
      [{tuple,308,[{atom,308,utf32},{atom,308,little}]},{integer,308,4}]}]},
   {clause,309,
    [{bin,309,
      [{bin_element,309,{integer,309,254},default,default},
       {bin_element,309,{integer,309,255},default,default},
       {bin_element,309,{var,309,'_'},default,[binary]}]}],
    [],
    [{tuple,310,
      [{tuple,310,[{atom,310,utf16},{atom,310,big}]},{integer,310,2}]}]},
   {clause,311,
    [{bin,311,
      [{bin_element,311,{integer,311,255},default,default},
       {bin_element,311,{integer,311,254},default,default},
       {bin_element,311,{var,311,'_'},default,[binary]}]}],
    [],
    [{tuple,312,
      [{tuple,312,[{atom,312,utf16},{atom,312,little}]},{integer,312,2}]}]},
   {clause,313,
    [{var,313,'Bin'}],
    [[{call,313,{atom,313,is_binary},[{var,313,'Bin'}]}]],
    [{tuple,314,[{atom,314,latin1},{integer,314,0}]}]}]},
 {function,320,encoding_to_bom,1,
  [{clause,320,
    [{atom,320,unicode}],
    [],
    [{bin,321,
      [{bin_element,321,{integer,321,239},default,default},
       {bin_element,321,{integer,321,187},default,default},
       {bin_element,321,{integer,321,191},default,default}]}]},
   {clause,322,
    [{atom,322,utf8}],
    [],
    [{bin,323,
      [{bin_element,323,{integer,323,239},default,default},
       {bin_element,323,{integer,323,187},default,default},
       {bin_element,323,{integer,323,191},default,default}]}]},
   {clause,324,
    [{atom,324,utf16}],
    [],
    [{bin,325,
      [{bin_element,325,{integer,325,254},default,default},
       {bin_element,325,{integer,325,255},default,default}]}]},
   {clause,326,
    [{tuple,326,[{atom,326,utf16},{atom,326,big}]}],
    [],
    [{bin,327,
      [{bin_element,327,{integer,327,254},default,default},
       {bin_element,327,{integer,327,255},default,default}]}]},
   {clause,328,
    [{tuple,328,[{atom,328,utf16},{atom,328,little}]}],
    [],
    [{bin,329,
      [{bin_element,329,{integer,329,255},default,default},
       {bin_element,329,{integer,329,254},default,default}]}]},
   {clause,330,
    [{atom,330,utf32}],
    [],
    [{bin,331,
      [{bin_element,331,{integer,331,0},default,default},
       {bin_element,331,{integer,331,0},default,default},
       {bin_element,331,{integer,331,254},default,default},
       {bin_element,331,{integer,331,255},default,default}]}]},
   {clause,332,
    [{tuple,332,[{atom,332,utf32},{atom,332,big}]}],
    [],
    [{bin,333,
      [{bin_element,333,{integer,333,0},default,default},
       {bin_element,333,{integer,333,0},default,default},
       {bin_element,333,{integer,333,254},default,default},
       {bin_element,333,{integer,333,255},default,default}]}]},
   {clause,334,
    [{tuple,334,[{atom,334,utf32},{atom,334,little}]}],
    [],
    [{bin,335,
      [{bin_element,335,{integer,335,255},default,default},
       {bin_element,335,{integer,335,254},default,default},
       {bin_element,335,{integer,335,0},default,default},
       {bin_element,335,{integer,335,0},default,default}]}]},
   {clause,336,[{atom,336,latin1}],[],[{bin,337,[]}]}]},
 {function,340,cbv,2,
  [{clause,340,
    [{atom,340,utf8},
     {bin,340,
      [{bin_element,340,{integer,340,1},{integer,340,1},default},
       {bin_element,340,{integer,340,1},{integer,340,1},default},
       {bin_element,340,{integer,340,0},{integer,340,1},default},
       {bin_element,340,{var,340,'_'},{integer,340,5},default}]}],
    [],
    [{integer,341,1}]},
   {clause,342,
    [{atom,342,utf8},
     {bin,342,
      [{bin_element,342,{integer,342,1},{integer,342,1},default},
       {bin_element,342,{integer,342,1},{integer,342,1},default},
       {bin_element,342,{integer,342,1},{integer,342,1},default},
       {bin_element,342,{integer,342,0},{integer,342,1},default},
       {bin_element,342,{var,342,'_'},{integer,342,4},default},
       {bin_element,342,{var,342,'R'},default,[binary]}]}],
    [],
    [{'case',343,
      {var,343,'R'},
      [{clause,344,[{bin,344,[]}],[],[{integer,345,2}]},
       {clause,346,
        [{bin,346,
          [{bin_element,346,{integer,346,1},{integer,346,1},default},
           {bin_element,346,{integer,346,0},{integer,346,1},default},
           {bin_element,346,{var,346,'_'},{integer,346,6},default}]}],
        [],
        [{integer,347,1}]},
       {clause,348,[{var,348,'_'}],[],[{atom,349,false}]}]}]},
   {clause,351,
    [{atom,351,utf8},
     {bin,351,
      [{bin_element,351,{integer,351,1},{integer,351,1},default},
       {bin_element,351,{integer,351,1},{integer,351,1},default},
       {bin_element,351,{integer,351,1},{integer,351,1},default},
       {bin_element,351,{integer,351,1},{integer,351,1},default},
       {bin_element,351,{integer,351,0},{integer,351,1},default},
       {bin_element,351,{var,351,'_'},{integer,351,3},default},
       {bin_element,351,{var,351,'R'},default,[binary]}]}],
    [],
    [{'case',352,
      {var,352,'R'},
      [{clause,353,[{bin,353,[]}],[],[{integer,354,3}]},
       {clause,355,
        [{bin,355,
          [{bin_element,355,{integer,355,1},{integer,355,1},default},
           {bin_element,355,{integer,355,0},{integer,355,1},default},
           {bin_element,355,{var,355,'_'},{integer,355,6},default}]}],
        [],
        [{integer,356,2}]},
       {clause,357,
        [{bin,357,
          [{bin_element,357,{integer,357,1},{integer,357,1},default},
           {bin_element,357,{integer,357,0},{integer,357,1},default},
           {bin_element,357,{var,357,'_'},{integer,357,6},default},
           {bin_element,357,{integer,357,1},{integer,357,1},default},
           {bin_element,357,{integer,357,0},{integer,357,1},default},
           {bin_element,357,{var,357,'_'},{integer,357,6},default}]}],
        [],
        [{integer,358,1}]},
       {clause,359,[{var,359,'_'}],[],[{atom,360,false}]}]}]},
   {clause,362,[{atom,362,utf8},{var,362,'_'}],[],[{atom,363,false}]},
   {clause,365,
    [{tuple,365,[{atom,365,utf16},{atom,365,big}]},
     {bin,365,[{bin_element,365,{var,365,'A'},{integer,365,8},default}]}],
    [[{op,365,'=<',{var,365,'A'},{integer,365,215}}],
     [{op,365,'>=',{var,365,'A'},{integer,365,224}}]],
    [{integer,366,1}]},
   {clause,367,
    [{tuple,367,[{atom,367,utf16},{atom,367,big}]},
     {bin,367,
      [{bin_element,367,{integer,367,54},{integer,367,6},default},
       {bin_element,367,{var,367,'_'},{integer,367,2},default}]}],
    [],
    [{integer,368,3}]},
   {clause,369,
    [{tuple,369,[{atom,369,utf16},{atom,369,big}]},
     {bin,369,
      [{bin_element,369,{integer,369,54},{integer,369,6},default},
       {bin_element,369,{var,369,'_'},{integer,369,10},default}]}],
    [],
    [{integer,370,2}]},
   {clause,371,
    [{tuple,371,[{atom,371,utf16},{atom,371,big}]},
     {bin,371,
      [{bin_element,371,{integer,371,54},{integer,371,6},default},
       {bin_element,371,{var,371,'_'},{integer,371,10},default},
       {bin_element,371,{integer,371,55},{integer,371,6},default},
       {bin_element,371,{var,371,'_'},{integer,371,2},default}]}],
    [],
    [{integer,372,1}]},
   {clause,373,
    [{tuple,373,[{atom,373,utf16},{atom,373,big}]},{var,373,'_'}],
    [],
    [{atom,374,false}]},
   {clause,375,
    [{tuple,375,[{atom,375,utf16},{atom,375,little}]},
     {bin,375,[{bin_element,375,{var,375,'_'},{integer,375,8},default}]}],
    [],
    [{integer,376,1}]},
   {clause,377,
    [{tuple,377,[{atom,377,utf16},{atom,377,little}]},
     {bin,377,
      [{bin_element,377,{var,377,'_'},{integer,377,8},default},
       {bin_element,377,{integer,377,54},{integer,377,6},default},
       {bin_element,377,{var,377,'_'},{integer,377,2},default}]}],
    [],
    [{integer,378,2}]},
   {clause,379,
    [{tuple,379,[{atom,379,utf16},{atom,379,little}]},
     {bin,379,
      [{bin_element,379,{var,379,'_'},{integer,379,8},default},
       {bin_element,379,{integer,379,54},{integer,379,6},default},
       {bin_element,379,{var,379,'_'},{integer,379,2},default},
       {bin_element,379,{var,379,'_'},{integer,379,8},default}]}],
    [],
    [{integer,380,1}]},
   {clause,381,
    [{tuple,381,[{atom,381,utf16},{atom,381,little}]},{var,381,'_'}],
    [],
    [{atom,382,false}]},
   {clause,385,
    [{tuple,385,[{atom,385,utf32},{atom,385,big}]},
     {bin,385,[{bin_element,385,{integer,385,0},{integer,385,8},default}]}],
    [],
    [{integer,386,3}]},
   {clause,387,
    [{tuple,387,[{atom,387,utf32},{atom,387,big}]},
     {bin,387,
      [{bin_element,387,{integer,387,0},{integer,387,8},default},
       {bin_element,387,{var,387,'X'},{integer,387,8},default}]}],
    [[{op,387,'=<',{var,387,'X'},{integer,387,16}}]],
    [{integer,388,2}]},
   {clause,389,
    [{tuple,389,[{atom,389,utf32},{atom,389,big}]},
     {bin,389,
      [{bin_element,389,{integer,389,0},{integer,389,8},default},
       {bin_element,389,{var,389,'X'},{integer,389,8},default},
       {bin_element,389,{var,389,'Y'},{integer,389,8},default}]}],
    [[{op,390,'=<',{var,390,'X'},{integer,390,16}},
      {op,390,'or',
       {op,390,'>',{var,390,'X'},{integer,390,0}},
       {op,390,'or',
        {op,390,'=<',{var,390,'Y'},{integer,390,215}},
        {op,390,'>=',{var,390,'Y'},{integer,390,224}}}}]],
    [{integer,391,1}]},
   {clause,392,
    [{tuple,392,[{atom,392,utf32},{atom,392,big}]},{var,392,'_'}],
    [],
    [{atom,393,false}]},
   {clause,394,
    [{tuple,394,[{atom,394,utf32},{atom,394,little}]},
     {bin,394,[{bin_element,394,{var,394,'_'},{integer,394,8},default}]}],
    [],
    [{integer,395,3}]},
   {clause,396,
    [{tuple,396,[{atom,396,utf32},{atom,396,little}]},
     {bin,396,
      [{bin_element,396,{var,396,'_'},{integer,396,8},default},
       {bin_element,396,{var,396,'_'},{integer,396,8},default}]}],
    [],
    [{integer,397,2}]},
   {clause,398,
    [{tuple,398,[{atom,398,utf32},{atom,398,little}]},
     {bin,398,
      [{bin_element,398,{var,398,'X'},{integer,398,8},default},
       {bin_element,398,{integer,398,255},{integer,398,8},default},
       {bin_element,398,{integer,398,0},{integer,398,8},default}]}],
    [[{op,398,'=:=',{var,398,'X'},{integer,398,254}}],
     [{op,398,'=:=',{var,398,'X'},{integer,398,255}}]],
    [{atom,399,false}]},
   {clause,400,
    [{tuple,400,[{atom,400,utf32},{atom,400,little}]},
     {bin,400,
      [{bin_element,400,{var,400,'_'},{integer,400,8},default},
       {bin_element,400,{var,400,'Y'},{integer,400,8},default},
       {bin_element,400,{var,400,'X'},{integer,400,8},default}]}],
    [[{op,401,'=<',{var,401,'X'},{integer,401,16}},
      {op,401,'or',
       {op,401,'>',{var,401,'X'},{integer,401,0}},
       {op,401,'or',
        {op,401,'=<',{var,401,'Y'},{integer,401,215}},
        {op,401,'>=',{var,401,'Y'},{integer,401,224}}}}]],
    [{integer,402,1}]},
   {clause,403,
    [{tuple,403,[{atom,403,utf32},{atom,403,little}]},{var,403,'_'}],
    [],
    [{atom,404,false}]}]},
 {function,407,ml_map,3,
  [{clause,407,
    [{nil,407},
     {var,407,'_'},
     {tuple,407,
      [{tuple,407,[{var,407,'Inc'},{var,407,'X'}]},{var,407,'Accum'}]}],
    [],
    [{tuple,408,
      [{atom,408,incomplete},
       {var,408,'Accum'},
       {var,408,'Inc'},
       {var,408,'X'}]}]},
   {clause,409,
    [{nil,409},{var,409,'_Fun'},{var,409,'Accum'}],
    [],
    [{var,410,'Accum'}]},
   {clause,411,
    [{match,411,{cons,411,{var,411,'Part'},{var,411,'_'}},{var,411,'Whole'}},
     {var,411,'_'},
     {tuple,411,
      [{tuple,411,[{var,411,'Incomplete'},{var,411,'_'}]},{var,411,'Accum'}]}],
    [[{call,411,{atom,411,is_integer},[{var,411,'Part'}]}]],
    [{tuple,412,
      [{atom,412,error},
       {var,412,'Accum'},
       {cons,412,{var,412,'Incomplete'},{var,412,'Whole'}}]}]},
   {clause,413,
    [{cons,413,{var,413,'Part'},{var,413,'T'}},
     {var,413,'Fun'},
     {var,413,'Accum'}],
    [[{call,413,{atom,413,is_integer},[{var,413,'Part'}]}]],
    [{'case',414,
      {call,414,{var,414,'Fun'},[{var,414,'Part'},{var,414,'Accum'}]},
      [{clause,415,
        [{var,415,'Bin'}],
        [[{call,415,{atom,415,is_binary},[{var,415,'Bin'}]}]],
        [{'case',416,
          {call,416,
           {atom,416,ml_map},
           [{var,416,'T'},{var,416,'Fun'},{var,416,'Bin'}]},
          [{clause,417,
            [{var,417,'Bin2'}],
            [[{call,417,{atom,417,is_binary},[{var,417,'Bin2'}]}]],
            [{var,418,'Bin2'}]},
           {clause,419,
            [{tuple,419,
              [{atom,419,error},{var,419,'Converted'},{var,419,'Rest'}]}],
            [],
            [{tuple,420,
              [{atom,420,error},{var,420,'Converted'},{var,420,'Rest'}]}]},
           {clause,421,
            [{tuple,421,
              [{atom,421,incomplete},
               {var,421,'Converted'},
               {var,421,'Rest'},
               {var,421,'X'}]}],
            [],
            [{tuple,422,
              [{atom,422,incomplete},
               {var,422,'Converted'},
               {var,422,'Rest'},
               {var,422,'X'}]}]}]}]},
       {clause,425,
        [{tuple,425,
          [{atom,425,error},{var,425,'Converted'},{var,425,'Rest'}]}],
        [],
        [{tuple,426,
          [{atom,426,error},
           {var,426,'Converted'},
           {cons,426,{var,426,'Rest'},{var,426,'T'}}]}]}]}]},
   {clause,428,
    [{cons,428,{var,428,'Part'},{var,428,'T'}},
     {var,428,'Fun'},
     {tuple,428,
      [{tuple,428,[{var,428,'Incomplete'},{var,428,'Missing'}]},
       {var,428,'Accum'}]}],
    [[{call,428,{atom,428,is_binary},[{var,428,'Part'}]}]],
    [{'case',430,
      {call,430,{atom,430,byte_size},[{var,430,'Part'}]},
      [{clause,431,
        [{var,431,'N'}],
        [[{op,431,'>=',{var,431,'N'},{var,431,'Missing'}}]],
        [{match,432,
          {bin,432,
           [{bin_element,432,{var,432,'FillIn'},{var,432,'Missing'},[binary]},
            {bin_element,432,{var,432,'Trailing'},default,[binary]}]},
          {var,432,'Part'}},
         {match,433,
          {var,433,'NewPart'},
          {bin,433,
           [{bin_element,433,{var,433,'Incomplete'},default,[binary]},
            {bin_element,433,{var,433,'FillIn'},default,[binary]}]}},
         {call,434,
          {atom,434,ml_map},
          [{cons,434,
            {var,434,'NewPart'},
            {cons,434,{var,434,'Trailing'},{var,434,'T'}}},
           {var,434,'Fun'},
           {var,434,'Accum'}]}]},
       {clause,435,
        [{var,435,'M'}],
        [],
        [{match,436,
          {var,436,'NewIncomplete'},
          {bin,436,
           [{bin_element,436,{var,436,'Incomplete'},default,[binary]},
            {bin_element,436,{var,436,'Part'},default,[binary]}]}},
         {match,437,
          {var,437,'NewMissing'},
          {op,437,'-',{var,437,'Missing'},{var,437,'M'}}},
         {call,438,
          {atom,438,ml_map},
          [{var,438,'T'},
           {var,438,'Fun'},
           {tuple,438,
            [{tuple,438,[{var,438,'NewIncomplete'},{var,438,'NewMissing'}]},
             {var,438,'Accum'}]}]}]}]}]},
   {clause,440,
    [{cons,440,{var,440,'Part'},{var,440,'T'}},
     {var,440,'Fun'},
     {var,440,'Accum'}],
    [[{call,440,{atom,440,is_binary},[{var,440,'Part'}]},
      {op,440,'>',
       {call,440,{atom,440,byte_size},[{var,440,'Part'}]},
       {integer,440,8192}}]],
    [{match,441,
      {bin,441,
       [{bin_element,441,{var,441,'Part1'},{integer,441,8192},[binary]},
        {bin_element,441,{var,441,'Part2'},default,[binary]}]},
      {var,441,'Part'}},
     {call,442,
      {atom,442,ml_map},
      [{cons,442,{var,442,'Part1'},{cons,442,{var,442,'Part2'},{var,442,'T'}}},
       {var,442,'Fun'},
       {var,442,'Accum'}]}]},
   {clause,443,
    [{cons,443,{var,443,'Part'},{var,443,'T'}},
     {var,443,'Fun'},
     {var,443,'Accum'}],
    [[{call,443,{atom,443,is_binary},[{var,443,'Part'}]}]],
    [{'case',444,
      {call,444,{var,444,'Fun'},[{var,444,'Part'},{var,444,'Accum'}]},
      [{clause,445,
        [{var,445,'Bin'}],
        [[{call,445,{atom,445,is_binary},[{var,445,'Bin'}]}]],
        [{call,446,
          {atom,446,ml_map},
          [{var,446,'T'},{var,446,'Fun'},{var,446,'Bin'}]}]},
       {clause,447,
        [{tuple,447,
          [{atom,447,incomplete},
           {var,447,'Converted'},
           {var,447,'Rest'},
           {var,447,'Missing'}]}],
        [],
        [{call,448,
          {atom,448,ml_map},
          [{var,448,'T'},
           {var,448,'Fun'},
           {tuple,448,
            [{tuple,448,[{var,448,'Rest'},{var,448,'Missing'}]},
             {var,448,'Converted'}]}]}]},
       {clause,449,
        [{tuple,449,
          [{atom,449,error},{var,449,'Converted'},{var,449,'Rest'}]}],
        [],
        [{tuple,450,
          [{atom,450,error},
           {var,450,'Converted'},
           {cons,450,{var,450,'Rest'},{var,450,'T'}}]}]}]}]},
   {clause,452,
    [{cons,452,{var,452,'List'},{var,452,'T'}},
     {var,452,'Fun'},
     {var,452,'Accum'}],
    [[{call,452,{atom,452,is_list},[{var,452,'List'}]}]],
    [{'case',453,
      {call,453,
       {atom,453,ml_map},
       [{var,453,'List'},{var,453,'Fun'},{var,453,'Accum'}]},
      [{clause,454,
        [{var,454,'Bin'}],
        [[{call,454,{atom,454,is_binary},[{var,454,'Bin'}]}]],
        [{call,455,
          {atom,455,ml_map},
          [{var,455,'T'},{var,455,'Fun'},{var,455,'Bin'}]}]},
       {clause,456,
        [{tuple,456,
          [{atom,456,error},{var,456,'Converted'},{var,456,'Rest'}]}],
        [],
        [{tuple,457,
          [{atom,457,error},
           {var,457,'Converted'},
           {cons,457,{var,457,'Rest'},{var,457,'T'}}]}]},
       {clause,458,
        [{tuple,458,
          [{atom,458,incomplete},
           {var,458,'Converted'},
           {var,458,'Rest'},
           {var,458,'N'}]}],
        [],
        [{call,459,
          {atom,459,ml_map},
          [{var,459,'T'},
           {var,459,'Fun'},
           {tuple,459,
            [{tuple,459,[{var,459,'Rest'},{var,459,'N'}]},
             {var,459,'Converted'}]}]}]}]}]},
   {clause,461,
    [{var,461,'Bin'},
     {var,461,'Fun'},
     {tuple,461,
      [{tuple,461,[{var,461,'Incomplete'},{var,461,'Missing'}]},
       {var,461,'Accum'}]}],
    [[{call,461,{atom,461,is_binary},[{var,461,'Bin'}]}]],
    [{'case',462,
      {call,462,{atom,462,byte_size},[{var,462,'Bin'}]},
      [{clause,463,
        [{var,463,'N'}],
        [[{op,463,'>=',{var,463,'N'},{var,463,'Missing'}}]],
        [{call,464,
          {atom,464,ml_map},
          [{cons,464,
            {var,464,'Incomplete'},
            {cons,464,{var,464,'Bin'},{nil,464}}},
           {var,464,'Fun'},
           {var,464,'Accum'}]}]},
       {clause,465,
        [{var,465,'M'}],
        [],
        [{tuple,466,
          [{atom,466,incomplete},
           {var,466,'Accum'},
           {bin,466,
            [{bin_element,466,{var,466,'Incomplete'},default,[binary]},
             {bin_element,466,{var,466,'Bin'},default,[binary]}]},
           {op,466,'-',{var,466,'Missing'},{var,466,'M'}}]}]}]}]},
   {clause,468,
    [{var,468,'Part'},{var,468,'Fun'},{var,468,'Accum'}],
    [[{call,468,{atom,468,is_binary},[{var,468,'Part'}]},
      {op,468,'>',
       {call,468,{atom,468,byte_size},[{var,468,'Part'}]},
       {integer,468,8192}}]],
    [{match,469,
      {bin,469,
       [{bin_element,469,{var,469,'Part1'},{integer,469,8192},[binary]},
        {bin_element,469,{var,469,'Part2'},default,[binary]}]},
      {var,469,'Part'}},
     {call,470,
      {atom,470,ml_map},
      [{cons,470,{var,470,'Part1'},{cons,470,{var,470,'Part2'},{nil,470}}},
       {var,470,'Fun'},
       {var,470,'Accum'}]}]},
   {clause,471,
    [{var,471,'Bin'},{var,471,'Fun'},{var,471,'Accum'}],
    [[{call,471,{atom,471,is_binary},[{var,471,'Bin'}]}]],
    [{call,472,{var,472,'Fun'},[{var,472,'Bin'},{var,472,'Accum'}]}]}]},
 {function,478,i_trans,1,
  [{clause,478,
    [{atom,478,latin1}],
    [],
    [{'fun',479,
      {clauses,
       [{clause,479,
         [{var,479,'Bin'}],
         [],
         [{call,479,{atom,479,binary_to_list},[{var,479,'Bin'}]}]}]}}]},
   {clause,480,
    [{atom,480,unicode}],
    [],
    [{call,481,{atom,481,i_trans},[{atom,481,utf8}]}]},
   {clause,482,[{atom,482,utf8}],[],[{'fun',483,{function,do_i_utf8,1}}]},
   {clause,484,
    [{atom,484,utf16}],
    [],
    [{'fun',485,{function,do_i_utf16_big,1}}]},
   {clause,486,
    [{tuple,486,[{atom,486,utf16},{atom,486,big}]}],
    [],
    [{'fun',487,{function,do_i_utf16_big,1}}]},
   {clause,488,
    [{tuple,488,[{atom,488,utf16},{atom,488,little}]}],
    [],
    [{'fun',489,{function,do_i_utf16_little,1}}]},
   {clause,490,
    [{atom,490,utf32}],
    [],
    [{'fun',491,{function,do_i_utf32_big,1}}]},
   {clause,492,
    [{tuple,492,[{atom,492,utf32},{atom,492,big}]}],
    [],
    [{'fun',493,{function,do_i_utf32_big,1}}]},
   {clause,494,
    [{tuple,494,[{atom,494,utf32},{atom,494,little}]}],
    [],
    [{'fun',495,{function,do_i_utf32_little,1}}]}]},
 {function,497,i_trans_chk,1,
  [{clause,497,
    [{atom,497,latin1}],
    [],
    [{'fun',498,
      {clauses,
       [{clause,498,
         [{var,498,'Bin'}],
         [],
         [{call,498,{atom,498,binary_to_list},[{var,498,'Bin'}]}]}]}}]},
   {clause,499,
    [{atom,499,unicode}],
    [],
    [{call,500,{atom,500,i_trans_chk},[{atom,500,utf8}]}]},
   {clause,501,[{atom,501,utf8}],[],[{'fun',502,{function,do_i_utf8_chk,1}}]},
   {clause,503,
    [{atom,503,utf16}],
    [],
    [{'fun',504,{function,do_i_utf16_big_chk,1}}]},
   {clause,505,
    [{tuple,505,[{atom,505,utf16},{atom,505,big}]}],
    [],
    [{'fun',506,{function,do_i_utf16_big_chk,1}}]},
   {clause,507,
    [{tuple,507,[{atom,507,utf16},{atom,507,little}]}],
    [],
    [{'fun',508,{function,do_i_utf16_little_chk,1}}]},
   {clause,509,
    [{atom,509,utf32}],
    [],
    [{'fun',510,{function,do_i_utf32_big_chk,1}}]},
   {clause,511,
    [{tuple,511,[{atom,511,utf32},{atom,511,big}]}],
    [],
    [{'fun',512,{function,do_i_utf32_big_chk,1}}]},
   {clause,513,
    [{tuple,513,[{atom,513,utf32},{atom,513,little}]}],
    [],
    [{'fun',514,{function,do_i_utf32_little_chk,1}}]}]},
 {function,516,o_trans,1,
  [{clause,516,
    [{atom,516,latin1}],
    [],
    [{'fun',517,
      {clauses,
       [{clause,517,
         [{var,517,'L'}],
         [],
         [{call,517,{atom,517,list_to_binary},[{var,517,'L'}]}]}]}}]},
   {clause,518,
    [{atom,518,unicode}],
    [],
    [{call,519,{atom,519,o_trans},[{atom,519,utf8}]}]},
   {clause,520,
    [{atom,520,utf8}],
    [],
    [{'fun',521,
      {clauses,
       [{clause,521,
         [{var,521,'L'}],
         [],
         [{call,522,
           {atom,522,do_o_binary},
           [{'fun',522,
             {clauses,
              [{clause,522,
                [{var,522,'One'}],
                [],
                [{bin,523,
                  [{bin_element,523,{var,523,'One'},default,[utf8]}]}]}]}},
            {var,524,'L'}]}]}]}}]},
   {clause,527,
    [{atom,527,utf16}],
    [],
    [{'fun',528,
      {clauses,
       [{clause,528,
         [{var,528,'L'}],
         [],
         [{call,529,
           {atom,529,do_o_binary},
           [{'fun',529,
             {clauses,
              [{clause,529,
                [{var,529,'One'}],
                [],
                [{bin,530,
                  [{bin_element,530,{var,530,'One'},default,[utf16]}]}]}]}},
            {var,531,'L'}]}]}]}}]},
   {clause,533,
    [{tuple,533,[{atom,533,utf16},{atom,533,big}]}],
    [],
    [{call,534,{atom,534,o_trans},[{atom,534,utf16}]}]},
   {clause,535,
    [{tuple,535,[{atom,535,utf16},{atom,535,little}]}],
    [],
    [{'fun',536,
      {clauses,
       [{clause,536,
         [{var,536,'L'}],
         [],
         [{call,537,
           {atom,537,do_o_binary},
           [{'fun',537,
             {clauses,
              [{clause,537,
                [{var,537,'One'}],
                [],
                [{bin,538,
                  [{bin_element,538,
                    {var,538,'One'},
                    default,
                    [utf16,little]}]}]}]}},
            {var,539,'L'}]}]}]}}]},
   {clause,541,
    [{atom,541,utf32}],
    [],
    [{'fun',542,
      {clauses,
       [{clause,542,
         [{var,542,'L'}],
         [],
         [{call,543,
           {atom,543,do_o_binary},
           [{'fun',543,
             {clauses,
              [{clause,543,
                [{var,543,'One'}],
                [],
                [{bin,544,
                  [{bin_element,544,{var,544,'One'},default,[utf32]}]}]}]}},
            {var,545,'L'}]}]}]}}]},
   {clause,547,
    [{tuple,547,[{atom,547,utf32},{atom,547,big}]}],
    [],
    [{call,548,{atom,548,o_trans},[{atom,548,utf32}]}]},
   {clause,549,
    [{tuple,549,[{atom,549,utf32},{atom,549,little}]}],
    [],
    [{'fun',550,
      {clauses,
       [{clause,550,
         [{var,550,'L'}],
         [],
         [{call,551,
           {atom,551,do_o_binary},
           [{'fun',551,
             {clauses,
              [{clause,551,
                [{var,551,'One'}],
                [],
                [{bin,552,
                  [{bin_element,552,
                    {var,552,'One'},
                    default,
                    [utf32,little]}]}]}]}},
            {var,553,'L'}]}]}]}}]}]},
 {function,556,do_o_binary,2,
  [{clause,556,
    [{var,556,'F'},{var,556,'L'}],
    [],
    [{'case',557,
      {call,557,{atom,557,do_o_binary2},[{var,557,'F'},{var,557,'L'}]},
      [{clause,558,
        [{tuple,558,[{var,558,'Tag'},{var,558,'List'},{var,558,'R'}]}],
        [],
        [{tuple,559,
          [{var,559,'Tag'},
           {call,559,
            {remote,559,{atom,559,erlang},{atom,559,iolist_to_binary}},
            [{var,559,'List'}]},
           {var,559,'R'}]}]},
       {clause,560,
        [{var,560,'List'}],
        [],
        [{call,561,
          {remote,561,{atom,561,erlang},{atom,561,iolist_to_binary}},
          [{var,561,'List'}]}]}]}]}]},
 {function,564,do_o_binary2,2,
  [{clause,564,[{var,564,'_F'},{nil,564}],[],[{bin,565,[]}]},
   {clause,566,
    [{var,566,'F'},{cons,566,{var,566,'H'},{var,566,'T'}}],
    [],
    [{'case',567,
      {'catch',567,{call,567,{var,567,'F'},[{var,567,'H'}]}},
      [{clause,568,
        [{tuple,568,[{atom,568,'EXIT'},{var,568,'_'}]}],
        [],
        [{tuple,569,
          [{atom,569,error},
           {bin,569,[]},
           {cons,569,{var,569,'H'},{var,569,'T'}}]}]},
       {clause,570,
        [{var,570,'Bin'}],
        [[{call,570,{atom,570,is_binary},[{var,570,'Bin'}]}]],
        [{'case',571,
          {call,571,{atom,571,do_o_binary2},[{var,571,'F'},{var,571,'T'}]},
          [{clause,572,
            [{tuple,572,[{atom,572,error},{var,572,'Bin2'},{var,572,'Rest'}]}],
            [],
            [{tuple,573,
              [{atom,573,error},
               {cons,573,{var,573,'Bin'},{var,573,'Bin2'}},
               {var,573,'Rest'}]}]},
           {clause,574,
            [{var,574,'Bin3'}],
            [],
            [{cons,575,{var,575,'Bin'},{var,575,'Bin3'}}]}]}]}]}]}]},
 {function,581,do_i_utf8_chk,1,
  [{clause,581,[{bin,581,[]}],[],[{nil,582}]},
   {clause,583,
    [{bin,583,
      [{bin_element,583,{var,583,'U'},default,[utf8]},
       {bin_element,583,{var,583,'R'},default,[binary]}]}],
    [[{op,583,'=<',{var,583,'U'},{integer,583,255}}]],
    [{'case',584,
      {call,584,{atom,584,do_i_utf8_chk},[{var,584,'R'}]},
      [{clause,585,
        [{tuple,585,[{atom,585,error},{var,585,'Trans'},{var,585,'Rest'}]}],
        [],
        [{tuple,586,
          [{atom,586,error},
           {cons,586,{var,586,'U'},{var,586,'Trans'}},
           {var,586,'Rest'}]}]},
       {clause,587,
        [{tuple,587,
          [{atom,587,incomplete},
           {var,587,'Trans'},
           {var,587,'Rest'},
           {var,587,'N'}]}],
        [],
        [{tuple,588,
          [{atom,588,incomplete},
           {cons,588,{var,588,'U'},{var,588,'Trans'}},
           {var,588,'Rest'},
           {var,588,'N'}]}]},
       {clause,589,
        [{var,589,'L'}],
        [[{call,589,{atom,589,is_list},[{var,589,'L'}]}]],
        [{cons,590,{var,590,'U'},{var,590,'L'}}]}]}]},
   {clause,592,
    [{match,592,
      {bin,592,
       [{bin_element,592,{var,592,'_'},default,[utf8]},
        {bin_element,592,{var,592,'_'},default,[binary]}]},
      {var,592,'Bin'}}],
    [],
    [{tuple,593,[{atom,593,error},{nil,593},{var,593,'Bin'}]}]},
   {clause,594,
    [{var,594,'Bin'}],
    [[{call,594,{atom,594,is_binary},[{var,594,'Bin'}]}]],
    [{'case',595,
      {call,595,{atom,595,cbv},[{atom,595,utf8},{var,595,'Bin'}]},
      [{clause,596,
        [{var,596,'N'}],
        [[{call,596,{atom,596,is_integer},[{var,596,'N'}]}]],
        [{tuple,597,
          [{atom,597,incomplete},{nil,597},{var,597,'Bin'},{var,597,'N'}]}]},
       {clause,598,
        [{atom,598,false}],
        [],
        [{tuple,599,[{atom,599,error},{nil,599},{var,599,'Bin'}]}]}]}]}]},
 {function,601,do_i_utf16_big_chk,1,
  [{clause,601,[{bin,601,[]}],[],[{nil,602}]},
   {clause,603,
    [{bin,603,
      [{bin_element,603,{var,603,'U'},default,[utf16]},
       {bin_element,603,{var,603,'R'},default,[binary]}]}],
    [[{op,603,'=<',{var,603,'U'},{integer,603,255}}]],
    [{'case',604,
      {call,604,{atom,604,do_i_utf16_big_chk},[{var,604,'R'}]},
      [{clause,605,
        [{tuple,605,[{atom,605,error},{var,605,'Trans'},{var,605,'Rest'}]}],
        [],
        [{tuple,606,
          [{atom,606,error},
           {cons,606,{var,606,'U'},{var,606,'Trans'}},
           {var,606,'Rest'}]}]},
       {clause,607,
        [{tuple,607,
          [{atom,607,incomplete},
           {var,607,'Trans'},
           {var,607,'Rest'},
           {var,607,'N'}]}],
        [],
        [{tuple,608,
          [{atom,608,incomplete},
           {cons,608,{var,608,'U'},{var,608,'Trans'}},
           {var,608,'Rest'},
           {var,608,'N'}]}]},
       {clause,609,
        [{var,609,'L'}],
        [[{call,609,{atom,609,is_list},[{var,609,'L'}]}]],
        [{cons,610,{var,610,'U'},{var,610,'L'}}]}]}]},
   {clause,612,
    [{match,612,
      {bin,612,
       [{bin_element,612,{var,612,'_'},default,[utf16]},
        {bin_element,612,{var,612,'_'},default,[binary]}]},
      {var,612,'Bin'}}],
    [],
    [{tuple,613,[{atom,613,error},{nil,613},{var,613,'Bin'}]}]},
   {clause,614,
    [{var,614,'Bin'}],
    [[{call,614,{atom,614,is_binary},[{var,614,'Bin'}]}]],
    [{'case',615,
      {call,615,
       {atom,615,cbv},
       [{tuple,615,[{atom,615,utf16},{atom,615,big}]},{var,615,'Bin'}]},
      [{clause,616,
        [{var,616,'N'}],
        [[{call,616,{atom,616,is_integer},[{var,616,'N'}]}]],
        [{tuple,617,
          [{atom,617,incomplete},{nil,617},{var,617,'Bin'},{var,617,'N'}]}]},
       {clause,618,
        [{atom,618,false}],
        [],
        [{tuple,619,[{atom,619,error},{nil,619},{var,619,'Bin'}]}]}]}]}]},
 {function,621,do_i_utf16_little_chk,1,
  [{clause,621,[{bin,621,[]}],[],[{nil,622}]},
   {clause,623,
    [{bin,623,
      [{bin_element,623,{var,623,'U'},default,[utf16,little]},
       {bin_element,623,{var,623,'R'},default,[binary]}]}],
    [[{op,623,'=<',{var,623,'U'},{integer,623,255}}]],
    [{'case',624,
      {call,624,{atom,624,do_i_utf16_little_chk},[{var,624,'R'}]},
      [{clause,625,
        [{tuple,625,[{atom,625,error},{var,625,'Trans'},{var,625,'Rest'}]}],
        [],
        [{tuple,626,
          [{atom,626,error},
           {cons,626,{var,626,'U'},{var,626,'Trans'}},
           {var,626,'Rest'}]}]},
       {clause,627,
        [{tuple,627,
          [{atom,627,incomplete},
           {var,627,'Trans'},
           {var,627,'Rest'},
           {var,627,'N'}]}],
        [],
        [{tuple,628,
          [{atom,628,incomplete},
           {cons,628,{var,628,'U'},{var,628,'Trans'}},
           {var,628,'Rest'},
           {var,628,'N'}]}]},
       {clause,629,
        [{var,629,'L'}],
        [[{call,629,{atom,629,is_list},[{var,629,'L'}]}]],
        [{cons,630,{var,630,'U'},{var,630,'L'}}]}]}]},
   {clause,632,
    [{match,632,
      {bin,632,
       [{bin_element,632,{var,632,'_'},default,[utf16,little]},
        {bin_element,632,{var,632,'_'},default,[binary]}]},
      {var,632,'Bin'}}],
    [],
    [{tuple,633,[{atom,633,error},{nil,633},{var,633,'Bin'}]}]},
   {clause,634,
    [{var,634,'Bin'}],
    [[{call,634,{atom,634,is_binary},[{var,634,'Bin'}]}]],
    [{'case',635,
      {call,635,
       {atom,635,cbv},
       [{tuple,635,[{atom,635,utf16},{atom,635,little}]},{var,635,'Bin'}]},
      [{clause,636,
        [{var,636,'N'}],
        [[{call,636,{atom,636,is_integer},[{var,636,'N'}]}]],
        [{tuple,637,
          [{atom,637,incomplete},{nil,637},{var,637,'Bin'},{var,637,'N'}]}]},
       {clause,638,
        [{atom,638,false}],
        [],
        [{tuple,639,[{atom,639,error},{nil,639},{var,639,'Bin'}]}]}]}]}]},
 {function,643,do_i_utf32_big_chk,1,
  [{clause,643,[{bin,643,[]}],[],[{nil,644}]},
   {clause,645,
    [{bin,645,
      [{bin_element,645,{var,645,'U'},default,[utf32]},
       {bin_element,645,{var,645,'R'},default,[binary]}]}],
    [[{op,645,'=<',{var,645,'U'},{integer,645,255}}]],
    [{'case',646,
      {call,646,{atom,646,do_i_utf32_big_chk},[{var,646,'R'}]},
      [{clause,647,
        [{tuple,647,[{atom,647,error},{var,647,'Trans'},{var,647,'Rest'}]}],
        [],
        [{tuple,648,
          [{atom,648,error},
           {cons,648,{var,648,'U'},{var,648,'Trans'}},
           {var,648,'Rest'}]}]},
       {clause,649,
        [{var,649,'L'}],
        [[{call,649,{atom,649,is_list},[{var,649,'L'}]}]],
        [{cons,650,{var,650,'U'},{var,650,'L'}}]}]}]},
   {clause,652,
    [{match,652,
      {bin,652,
       [{bin_element,652,{var,652,'_'},default,[utf32]},
        {bin_element,652,{var,652,'_'},default,[binary]}]},
      {var,652,'Bin'}}],
    [],
    [{tuple,653,[{atom,653,error},{nil,653},{var,653,'Bin'}]}]},
   {clause,654,
    [{var,654,'Bin'}],
    [[{call,654,{atom,654,is_binary},[{var,654,'Bin'}]}]],
    [{'case',655,
      {call,655,
       {atom,655,cbv},
       [{tuple,655,[{atom,655,utf32},{atom,655,big}]},{var,655,'Bin'}]},
      [{clause,656,
        [{var,656,'N'}],
        [[{call,656,{atom,656,is_integer},[{var,656,'N'}]}]],
        [{tuple,657,
          [{atom,657,incomplete},{nil,657},{var,657,'Bin'},{var,657,'N'}]}]},
       {clause,658,
        [{atom,658,false}],
        [],
        [{tuple,659,[{atom,659,error},{nil,659},{var,659,'Bin'}]}]}]}]}]},
 {function,661,do_i_utf32_little_chk,1,
  [{clause,661,[{bin,661,[]}],[],[{nil,662}]},
   {clause,663,
    [{bin,663,
      [{bin_element,663,{var,663,'U'},default,[utf32,little]},
       {bin_element,663,{var,663,'R'},default,[binary]}]}],
    [[{op,663,'=<',{var,663,'U'},{integer,663,255}}]],
    [{'case',664,
      {call,664,{atom,664,do_i_utf32_little_chk},[{var,664,'R'}]},
      [{clause,665,
        [{tuple,665,[{atom,665,error},{var,665,'Trans'},{var,665,'Rest'}]}],
        [],
        [{tuple,666,
          [{atom,666,error},
           {cons,666,{var,666,'U'},{var,666,'Trans'}},
           {var,666,'Rest'}]}]},
       {clause,667,
        [{var,667,'L'}],
        [[{call,667,{atom,667,is_list},[{var,667,'L'}]}]],
        [{cons,668,{var,668,'U'},{var,668,'L'}}]}]}]},
   {clause,670,
    [{match,670,
      {bin,670,
       [{bin_element,670,{var,670,'_'},default,[utf32,little]},
        {bin_element,670,{var,670,'_'},default,[binary]}]},
      {var,670,'Bin'}}],
    [],
    [{tuple,671,[{atom,671,error},{nil,671},{var,671,'Bin'}]}]},
   {clause,672,
    [{var,672,'Bin'}],
    [[{call,672,{atom,672,is_binary},[{var,672,'Bin'}]}]],
    [{'case',673,
      {call,673,
       {atom,673,cbv},
       [{tuple,673,[{atom,673,utf32},{atom,673,little}]},{var,673,'Bin'}]},
      [{clause,674,
        [{var,674,'N'}],
        [[{call,674,{atom,674,is_integer},[{var,674,'N'}]}]],
        [{tuple,675,
          [{atom,675,incomplete},{nil,675},{var,675,'Bin'},{var,675,'N'}]}]},
       {clause,676,
        [{atom,676,false}],
        [],
        [{tuple,677,[{atom,677,error},{nil,677},{var,677,'Bin'}]}]}]}]}]},
 {function,683,do_i_utf8,1,
  [{clause,683,[{bin,683,[]}],[],[{nil,684}]},
   {clause,685,
    [{bin,685,
      [{bin_element,685,{var,685,'U'},default,[utf8]},
       {bin_element,685,{var,685,'R'},default,[binary]}]}],
    [],
    [{'case',686,
      {call,686,{atom,686,do_i_utf8},[{var,686,'R'}]},
      [{clause,687,
        [{tuple,687,[{atom,687,error},{var,687,'Trans'},{var,687,'Rest'}]}],
        [],
        [{tuple,688,
          [{atom,688,error},
           {cons,688,{var,688,'U'},{var,688,'Trans'}},
           {var,688,'Rest'}]}]},
       {clause,689,
        [{tuple,689,
          [{atom,689,incomplete},
           {var,689,'Trans'},
           {var,689,'Rest'},
           {var,689,'N'}]}],
        [],
        [{tuple,690,
          [{atom,690,incomplete},
           {cons,690,{var,690,'U'},{var,690,'Trans'}},
           {var,690,'Rest'},
           {var,690,'N'}]}]},
       {clause,691,
        [{var,691,'L'}],
        [[{call,691,{atom,691,is_list},[{var,691,'L'}]}]],
        [{cons,692,{var,692,'U'},{var,692,'L'}}]}]}]},
   {clause,694,
    [{var,694,'Bin'}],
    [[{call,694,{atom,694,is_binary},[{var,694,'Bin'}]}]],
    [{'case',695,
      {call,695,{atom,695,cbv},[{atom,695,utf8},{var,695,'Bin'}]},
      [{clause,696,
        [{var,696,'N'}],
        [[{call,696,{atom,696,is_integer},[{var,696,'N'}]}]],
        [{tuple,697,
          [{atom,697,incomplete},{nil,697},{var,697,'Bin'},{var,697,'N'}]}]},
       {clause,698,
        [{atom,698,false}],
        [],
        [{tuple,699,[{atom,699,error},{nil,699},{var,699,'Bin'}]}]}]}]}]},
 {function,702,do_i_utf16_big,1,
  [{clause,702,[{bin,702,[]}],[],[{nil,703}]},
   {clause,704,
    [{bin,704,
      [{bin_element,704,{var,704,'U'},default,[utf16]},
       {bin_element,704,{var,704,'R'},default,[binary]}]}],
    [],
    [{'case',705,
      {call,705,{atom,705,do_i_utf16_big},[{var,705,'R'}]},
      [{clause,706,
        [{tuple,706,[{atom,706,error},{var,706,'Trans'},{var,706,'Rest'}]}],
        [],
        [{tuple,707,
          [{atom,707,error},
           {cons,707,{var,707,'U'},{var,707,'Trans'}},
           {var,707,'Rest'}]}]},
       {clause,708,
        [{tuple,708,
          [{atom,708,incomplete},
           {var,708,'Trans'},
           {var,708,'Rest'},
           {var,708,'N'}]}],
        [],
        [{tuple,709,
          [{atom,709,incomplete},
           {cons,709,{var,709,'U'},{var,709,'Trans'}},
           {var,709,'Rest'},
           {var,709,'N'}]}]},
       {clause,710,
        [{var,710,'L'}],
        [[{call,710,{atom,710,is_list},[{var,710,'L'}]}]],
        [{cons,711,{var,711,'U'},{var,711,'L'}}]}]}]},
   {clause,713,
    [{var,713,'Bin'}],
    [[{call,713,{atom,713,is_binary},[{var,713,'Bin'}]}]],
    [{'case',714,
      {call,714,
       {atom,714,cbv},
       [{tuple,714,[{atom,714,utf16},{atom,714,big}]},{var,714,'Bin'}]},
      [{clause,715,
        [{var,715,'N'}],
        [[{call,715,{atom,715,is_integer},[{var,715,'N'}]}]],
        [{tuple,716,
          [{atom,716,incomplete},{nil,716},{var,716,'Bin'},{var,716,'N'}]}]},
       {clause,717,
        [{atom,717,false}],
        [],
        [{tuple,718,[{atom,718,error},{nil,718},{var,718,'Bin'}]}]}]}]}]},
 {function,720,do_i_utf16_little,1,
  [{clause,720,[{bin,720,[]}],[],[{nil,721}]},
   {clause,722,
    [{bin,722,
      [{bin_element,722,{var,722,'U'},default,[utf16,little]},
       {bin_element,722,{var,722,'R'},default,[binary]}]}],
    [],
    [{'case',723,
      {call,723,{atom,723,do_i_utf16_little},[{var,723,'R'}]},
      [{clause,724,
        [{tuple,724,[{atom,724,error},{var,724,'Trans'},{var,724,'Rest'}]}],
        [],
        [{tuple,725,
          [{atom,725,error},
           {cons,725,{var,725,'U'},{var,725,'Trans'}},
           {var,725,'Rest'}]}]},
       {clause,726,
        [{tuple,726,
          [{atom,726,incomplete},
           {var,726,'Trans'},
           {var,726,'Rest'},
           {var,726,'N'}]}],
        [],
        [{tuple,727,
          [{atom,727,incomplete},
           {cons,727,{var,727,'U'},{var,727,'Trans'}},
           {var,727,'Rest'},
           {var,727,'N'}]}]},
       {clause,728,
        [{var,728,'L'}],
        [[{call,728,{atom,728,is_list},[{var,728,'L'}]}]],
        [{cons,729,{var,729,'U'},{var,729,'L'}}]}]}]},
   {clause,731,
    [{var,731,'Bin'}],
    [[{call,731,{atom,731,is_binary},[{var,731,'Bin'}]}]],
    [{'case',732,
      {call,732,
       {atom,732,cbv},
       [{tuple,732,[{atom,732,utf16},{atom,732,little}]},{var,732,'Bin'}]},
      [{clause,733,
        [{var,733,'N'}],
        [[{call,733,{atom,733,is_integer},[{var,733,'N'}]}]],
        [{tuple,734,
          [{atom,734,incomplete},{nil,734},{var,734,'Bin'},{var,734,'N'}]}]},
       {clause,735,
        [{atom,735,false}],
        [],
        [{tuple,736,[{atom,736,error},{nil,736},{var,736,'Bin'}]}]}]}]}]},
 {function,740,do_i_utf32_big,1,
  [{clause,740,[{bin,740,[]}],[],[{nil,741}]},
   {clause,742,
    [{bin,742,
      [{bin_element,742,{var,742,'U'},default,[utf32]},
       {bin_element,742,{var,742,'R'},default,[binary]}]}],
    [],
    [{'case',743,
      {call,743,{atom,743,do_i_utf32_big},[{var,743,'R'}]},
      [{clause,744,
        [{tuple,744,[{atom,744,error},{var,744,'Trans'},{var,744,'Rest'}]}],
        [],
        [{tuple,745,
          [{atom,745,error},
           {cons,745,{var,745,'U'},{var,745,'Trans'}},
           {var,745,'Rest'}]}]},
       {clause,746,
        [{tuple,746,
          [{atom,746,incomplete},
           {var,746,'Trans'},
           {var,746,'Rest'},
           {var,746,'N'}]}],
        [],
        [{tuple,747,
          [{atom,747,incomplete},
           {cons,747,{var,747,'U'},{var,747,'Trans'}},
           {var,747,'Rest'},
           {var,747,'N'}]}]},
       {clause,748,
        [{var,748,'L'}],
        [[{call,748,{atom,748,is_list},[{var,748,'L'}]}]],
        [{cons,749,{var,749,'U'},{var,749,'L'}}]}]}]},
   {clause,751,
    [{var,751,'Bin'}],
    [[{call,751,{atom,751,is_binary},[{var,751,'Bin'}]}]],
    [{'case',752,
      {call,752,
       {atom,752,cbv},
       [{tuple,752,[{atom,752,utf32},{atom,752,big}]},{var,752,'Bin'}]},
      [{clause,753,
        [{var,753,'N'}],
        [[{call,753,{atom,753,is_integer},[{var,753,'N'}]}]],
        [{tuple,754,
          [{atom,754,incomplete},{nil,754},{var,754,'Bin'},{var,754,'N'}]}]},
       {clause,755,
        [{atom,755,false}],
        [],
        [{tuple,756,[{atom,756,error},{nil,756},{var,756,'Bin'}]}]}]}]}]},
 {function,758,do_i_utf32_little,1,
  [{clause,758,[{bin,758,[]}],[],[{nil,759}]},
   {clause,760,
    [{bin,760,
      [{bin_element,760,{var,760,'U'},default,[utf32,little]},
       {bin_element,760,{var,760,'R'},default,[binary]}]}],
    [],
    [{'case',761,
      {call,761,{atom,761,do_i_utf32_little},[{var,761,'R'}]},
      [{clause,762,
        [{tuple,762,[{atom,762,error},{var,762,'Trans'},{var,762,'Rest'}]}],
        [],
        [{tuple,763,
          [{atom,763,error},
           {cons,763,{var,763,'U'},{var,763,'Trans'}},
           {var,763,'Rest'}]}]},
       {clause,764,
        [{tuple,764,
          [{atom,764,incomplete},
           {var,764,'Trans'},
           {var,764,'Rest'},
           {var,764,'N'}]}],
        [],
        [{tuple,765,
          [{atom,765,incomplete},
           {cons,765,{var,765,'U'},{var,765,'Trans'}},
           {var,765,'Rest'},
           {var,765,'N'}]}]},
       {clause,766,
        [{var,766,'L'}],
        [[{call,766,{atom,766,is_list},[{var,766,'L'}]}]],
        [{cons,767,{var,767,'U'},{var,767,'L'}}]}]}]},
   {clause,769,
    [{var,769,'Bin'}],
    [[{call,769,{atom,769,is_binary},[{var,769,'Bin'}]}]],
    [{'case',770,
      {call,770,
       {atom,770,cbv},
       [{tuple,770,[{atom,770,utf32},{atom,770,little}]},{var,770,'Bin'}]},
      [{clause,771,
        [{var,771,'N'}],
        [[{call,771,{atom,771,is_integer},[{var,771,'N'}]}]],
        [{tuple,772,
          [{atom,772,incomplete},{nil,772},{var,772,'Bin'},{var,772,'N'}]}]},
       {clause,773,
        [{atom,773,false}],
        [],
        [{tuple,774,[{atom,774,error},{nil,774},{var,774,'Bin'}]}]}]}]}]}]
