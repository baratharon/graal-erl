erl_distribution
[]
[]
[{function,28,start_link,0,
     [{clause,28,[],[],
          [{'case',29,
               {'catch',29,{call,29,{atom,29,start_p},[]}},
               [{clause,30,
                    [{tuple,30,[{atom,30,ok},{var,30,'Args'}]}],
                    [],
                    [{call,31,{atom,31,start_link},[{var,31,'Args'}]}]},
                {clause,32,[{var,32,'_'}],[],[{atom,33,ignore}]}]}]}]},
 {function,36,start_link,1,
     [{clause,36,
          [{var,36,'Args'}],
          [],
          [{call,37,
               {remote,37,{atom,37,supervisor},{atom,37,start_link}},
               [{tuple,37,[{atom,37,local},{atom,37,net_sup}]},
                {atom,37,erl_distribution},
                {var,37,'Args'}]}]}]},
 {function,39,init,1,
     [{clause,39,
          [{var,39,'NetArgs'}],
          [],
          [{match,40,
               {var,40,'Epmd'},
               {'case',41,
                   {call,41,
                       {remote,41,{atom,41,init},{atom,41,get_argument}},
                       [{atom,41,no_epmd}]},
                   [{clause,42,
                        [{tuple,42,
                             [{atom,42,ok},{cons,42,{nil,42},{nil,42}}]}],
                        [],
                        [{nil,43}]},
                    {clause,44,
                        [{var,44,'_'}],
                        [],
                        [{match,45,
                             {var,45,'EpmdMod'},
                             {call,45,
                                 {remote,45,
                                     {atom,45,net_kernel},
                                     {atom,45,epmd_module}},
                                 []}},
                         {cons,46,
                             {tuple,46,
                                 [{var,46,'EpmdMod'},
                                  {tuple,46,
                                      [{var,46,'EpmdMod'},
                                       {atom,46,start_link},
                                       {nil,46}]},
                                  {atom,47,permanent},
                                  {integer,47,2000},
                                  {atom,47,worker},
                                  {cons,47,{var,47,'EpmdMod'},{nil,47}}]},
                             {nil,47}}]}]}},
           {match,49,
               {var,49,'Auth'},
               {tuple,49,
                   [{atom,49,auth},
                    {tuple,49,[{atom,49,auth},{atom,49,start_link},{nil,49}]},
                    {atom,49,permanent},
                    {integer,49,2000},
                    {atom,49,worker},
                    {cons,49,{atom,49,auth},{nil,49}}]}},
           {match,50,
               {var,50,'Kernel'},
               {tuple,50,
                   [{atom,50,net_kernel},
                    {tuple,50,
                        [{atom,50,net_kernel},
                         {atom,50,start_link},
                         {cons,50,{var,50,'NetArgs'},{nil,50}}]},
                    {atom,51,permanent},
                    {integer,51,2000},
                    {atom,51,worker},
                    {cons,51,{atom,51,net_kernel},{nil,51}}]}},
           {match,52,
               {var,52,'EarlySpecs'},
               {call,52,
                   {remote,52,
                       {atom,52,net_kernel},
                       {atom,52,protocol_childspecs}},
                   []}},
           {tuple,53,
               [{atom,53,ok},
                {tuple,53,
                    [{tuple,53,
                         [{atom,53,one_for_all},
                          {integer,53,0},
                          {integer,53,1}]},
                     {op,53,'++',
                         {var,53,'EarlySpecs'},
                         {op,53,'++',
                             {var,53,'Epmd'},
                             {cons,53,
                                 {var,53,'Auth'},
                                 {cons,53,
                                     {var,53,'Kernel'},
                                     {nil,53}}}}}]}]}]}]},
 {function,55,start_p,0,
     [{clause,55,[],[],
          [{call,56,{atom,56,sname},[]},
           {call,57,{atom,57,lname},[]},
           {atom,58,false}]}]},
 {function,60,sname,0,
     [{clause,60,[],[],
          [{'case',61,
               {call,61,
                   {remote,61,{atom,61,init},{atom,61,get_argument}},
                   [{atom,61,sname}]},
               [{clause,62,
                    [{tuple,62,
                         [{atom,62,ok},
                          {cons,62,
                              {cons,62,{var,62,'Name'},{nil,62}},
                              {nil,62}}]}],
                    [],
                    [{call,63,
                         {atom,63,throw},
                         [{tuple,63,
                              [{atom,63,ok},
                               {cons,63,
                                   {call,63,
                                       {atom,63,list_to_atom},
                                       [{var,63,'Name'}]},
                                   {cons,63,
                                       {atom,63,shortnames},
                                       {call,63,{atom,63,ticktime},[]}}}]}]}]},
                {clause,64,[{var,64,'_'}],[],[{atom,65,false}]}]}]}]},
 {function,68,lname,0,
     [{clause,68,[],[],
          [{'case',69,
               {call,69,
                   {remote,69,{atom,69,init},{atom,69,get_argument}},
                   [{atom,69,name}]},
               [{clause,70,
                    [{tuple,70,
                         [{atom,70,ok},
                          {cons,70,
                              {cons,70,{var,70,'Name'},{nil,70}},
                              {nil,70}}]}],
                    [],
                    [{call,71,
                         {atom,71,throw},
                         [{tuple,71,
                              [{atom,71,ok},
                               {cons,71,
                                   {call,71,
                                       {atom,71,list_to_atom},
                                       [{var,71,'Name'}]},
                                   {cons,71,
                                       {atom,71,longnames},
                                       {call,71,{atom,71,ticktime},[]}}}]}]}]},
                {clause,72,[{var,72,'_'}],[],[{atom,73,false}]}]}]}]},
 {function,76,ticktime,0,
     [{clause,76,[],[],
          [{'case',81,
               {'catch',81,
                   {call,81,
                       {remote,81,{atom,81,application},{atom,81,get_env}},
                       [{atom,81,net_ticktime}]}},
               [{clause,82,
                    [{tuple,82,[{atom,82,ok},{var,82,'Value'}]}],
                    [[{call,82,{atom,82,is_integer},[{var,82,'Value'}]},
                      {op,82,'>',{var,82,'Value'},{integer,82,0}}]],
                    [{cons,83,
                         {op,83,'*',{var,83,'Value'},{integer,83,250}},
                         {nil,83}}]},
                {clause,84,[{var,84,'_'}],[],[{nil,85}]}]}]}]},
 {function,88,start,1,
     [{clause,88,
          [{var,88,'Args'}],
          [],
          [{match,89,
               {var,89,'C'},
               {tuple,89,
                   [{atom,89,net_sup_dynamic},
                    {tuple,89,
                        [{atom,89,erl_distribution},
                         {atom,89,start_link},
                         {cons,89,{var,89,'Args'},{nil,89}}]},
                    {atom,89,permanent},
                    {integer,90,1000},
                    {atom,90,supervisor},
                    {cons,90,{atom,90,erl_distribution},{nil,90}}]}},
           {call,91,
               {remote,91,{atom,91,supervisor},{atom,91,start_child}},
               [{atom,91,kernel_sup},{var,91,'C'}]}]}]},
 {function,93,stop,0,
     [{clause,93,[],[],
          [{'case',94,
               {call,94,
                   {remote,94,{atom,94,supervisor},{atom,94,terminate_child}},
                   [{atom,94,kernel_sup},{atom,94,net_sup_dynamic}]},
               [{clause,95,
                    [{atom,95,ok}],
                    [],
                    [{call,96,
                         {remote,96,
                             {atom,96,supervisor},
                             {atom,96,delete_child}},
                         [{atom,96,kernel_sup},{atom,96,net_sup_dynamic}]}]},
                {clause,97,
                    [{var,97,'Error'}],
                    [],
                    [{'case',98,
                         {call,98,{atom,98,whereis},[{atom,98,net_sup}]},
                         [{clause,99,
                              [{var,99,'Pid'}],
                              [[{call,99,{atom,99,is_pid},[{var,99,'Pid'}]}]],
                              [{tuple,101,
                                   [{atom,101,error},
                                    {atom,101,not_allowed}]}]},
                          {clause,102,
                              [{var,102,'_'}],
                              [],
                              [{var,103,'Error'}]}]}]}]}]}]}]
