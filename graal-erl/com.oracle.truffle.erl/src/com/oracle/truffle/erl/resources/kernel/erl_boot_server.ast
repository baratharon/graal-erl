erl_boot_server
[]
[]
[{function,69,start,1,
  [{clause,69,
    [{var,69,'Slaves'}],
    [],
    [{'case',70,
      {call,70,{atom,70,check_arg},[{var,70,'Slaves'}]},
      [{clause,71,
        [{tuple,71,[{atom,71,ok},{var,71,'AL'}]}],
        [],
        [{call,72,
          {remote,72,{atom,72,gen_server},{atom,72,start}},
          [{tuple,72,[{atom,72,local},{atom,72,boot_server}]},
           {atom,72,erl_boot_server},
           {var,72,'AL'},
           {nil,72}]}]},
       {clause,73,
        [{var,73,'_'}],
        [],
        [{tuple,74,
          [{atom,74,error},
           {tuple,74,[{atom,74,badarg},{var,74,'Slaves'}]}]}]}]}]}]},
 {function,83,start_link,1,
  [{clause,83,
    [{var,83,'Slaves'}],
    [],
    [{'case',84,
      {call,84,{atom,84,check_arg},[{var,84,'Slaves'}]},
      [{clause,85,
        [{tuple,85,[{atom,85,ok},{var,85,'AL'}]}],
        [],
        [{call,86,
          {remote,86,{atom,86,gen_server},{atom,86,start_link}},
          [{tuple,86,[{atom,86,local},{atom,86,boot_server}]},
           {atom,87,erl_boot_server},
           {var,87,'AL'},
           {nil,87}]}]},
       {clause,88,
        [{var,88,'_'}],
        [],
        [{tuple,89,
          [{atom,89,error},
           {tuple,89,[{atom,89,badarg},{var,89,'Slaves'}]}]}]}]}]}]},
 {function,92,check_arg,1,
  [{clause,92,
    [{var,92,'Slaves'}],
    [],
    [{call,93,{atom,93,check_arg},[{var,93,'Slaves'},{nil,93}]}]}]},
 {function,95,check_arg,2,
  [{clause,95,
    [{cons,95,{var,95,'Slave'},{var,95,'Rest'}},{var,95,'Result'}],
    [],
    [{'case',96,
      {call,96,
       {remote,96,{atom,96,inet},{atom,96,getaddr}},
       [{var,96,'Slave'},{atom,96,inet}]},
      [{clause,97,
        [{tuple,97,[{atom,97,ok},{var,97,'IP'}]}],
        [],
        [{call,98,
          {atom,98,check_arg},
          [{var,98,'Rest'},
           {cons,98,
            {tuple,98,
             [{tuple,59,
               [{integer,59,255},
                {integer,59,255},
                {integer,59,255},
                {integer,59,255}]},
              {var,98,'IP'}]},
            {var,98,'Result'}}]}]},
       {clause,99,[{var,99,'_'}],[],[{atom,100,error}]}]}]},
   {clause,102,
    [{nil,102},{var,102,'Result'}],
    [],
    [{tuple,103,[{atom,103,ok},{var,103,'Result'}]}]},
   {clause,104,[{var,104,'_'},{var,104,'_Result'}],[],[{atom,105,error}]}]},
 {function,112,add_slave,1,
  [{clause,112,
    [{var,112,'Slave'}],
    [],
    [{'case',113,
      {call,113,
       {remote,113,{atom,113,inet},{atom,113,getaddr}},
       [{var,113,'Slave'},{atom,113,inet}]},
      [{clause,114,
        [{tuple,114,[{atom,114,ok},{var,114,'IP'}]}],
        [],
        [{call,115,
          {remote,115,{atom,115,gen_server},{atom,115,call}},
          [{atom,115,boot_server},
           {tuple,115,
            [{atom,115,add},
             {tuple,115,
              [{tuple,59,
                [{integer,59,255},
                 {integer,59,255},
                 {integer,59,255},
                 {integer,59,255}]},
               {var,115,'IP'}]}]}]}]},
       {clause,116,
        [{var,116,'_'}],
        [],
        [{tuple,117,
          [{atom,117,error},
           {tuple,117,[{atom,117,badarg},{var,117,'Slave'}]}]}]}]}]}]},
 {function,125,delete_slave,1,
  [{clause,125,
    [{var,125,'Slave'}],
    [],
    [{'case',126,
      {call,126,
       {remote,126,{atom,126,inet},{atom,126,getaddr}},
       [{var,126,'Slave'},{atom,126,inet}]},
      [{clause,127,
        [{tuple,127,[{atom,127,ok},{var,127,'IP'}]}],
        [],
        [{call,128,
          {remote,128,{atom,128,gen_server},{atom,128,call}},
          [{atom,128,boot_server},
           {tuple,128,
            [{atom,128,delete},
             {tuple,128,
              [{tuple,59,
                [{integer,59,255},
                 {integer,59,255},
                 {integer,59,255},
                 {integer,59,255}]},
               {var,128,'IP'}]}]}]}]},
       {clause,129,
        [{var,129,'_'}],
        [],
        [{tuple,130,
          [{atom,130,error},
           {tuple,130,[{atom,130,badarg},{var,130,'Slave'}]}]}]}]}]}]},
 {function,136,add_subnet,2,
  [{clause,136,
    [{var,136,'Mask'},{var,136,'Addr'}],
    [[{call,136,{atom,136,is_tuple},[{var,136,'Mask'}]},
      {call,136,{atom,136,is_tuple},[{var,136,'Addr'}]}]],
    [{'case',137,
      {call,137,
       {atom,137,member_address},
       [{var,137,'Addr'},
        {cons,137,{tuple,137,[{var,137,'Mask'},{var,137,'Addr'}]},{nil,137}}]},
      [{clause,138,
        [{atom,138,true}],
        [],
        [{call,139,
          {remote,139,{atom,139,gen_server},{atom,139,call}},
          [{atom,139,boot_server},
           {tuple,139,
            [{atom,139,add},
             {tuple,139,[{var,139,'Mask'},{var,139,'Addr'}]}]}]}]},
       {clause,140,
        [{atom,140,false}],
        [],
        [{tuple,141,[{atom,141,error},{atom,141,empty_subnet}]}]}]}]}]},
 {function,146,delete_subnet,2,
  [{clause,146,
    [{var,146,'Mask'},{var,146,'Addr'}],
    [[{call,146,{atom,146,is_tuple},[{var,146,'Mask'}]},
      {call,146,{atom,146,is_tuple},[{var,146,'Addr'}]}]],
    [{call,147,
      {remote,147,{atom,147,gen_server},{atom,147,call}},
      [{atom,147,boot_server},
       {tuple,147,
        [{atom,147,delete},
         {tuple,147,[{var,147,'Mask'},{var,147,'Addr'}]}]}]}]}]},
 {function,153,which_slaves,0,
  [{clause,153,[],[],
    [{call,154,
      {remote,154,{atom,154,gen_server},{atom,154,call}},
      [{atom,154,boot_server},{atom,154,which}]}]}]},
 {function,160,would_be_booted,1,
  [{clause,160,
    [{var,160,'Addr'}],
    [],
    [{match,161,
      {tuple,161,[{atom,161,ok},{var,161,'IP'}]},
      {call,161,
       {remote,161,{atom,161,inet},{atom,161,getaddr}},
       [{var,161,'Addr'},{atom,161,inet}]}},
     {call,162,
      {atom,162,member_address},
      [{var,162,'IP'},{call,162,{atom,162,which_slaves},[]}]}]}]},
 {function,164,int16,1,
  [{clause,164,
    [{var,164,'X'}],
    [[{call,164,{atom,164,is_integer},[{var,164,'X'}]}]],
    [{cons,165,
      {op,165,'band',
       {op,165,'bsr',{var,165,'X'},{integer,165,8}},
       {integer,165,255}},
      {cons,165,
       {op,165,'band',{var,165,'X'},{integer,165,255}},
       {nil,165}}}]}]},
 {function,169,member_address,2,
  [{clause,169,
    [{var,169,'IP'},
     {cons,169,
      {tuple,169,
       [{tuple,169,
         [{var,169,'MA'},{var,169,'MB'},{var,169,'MC'},{var,169,'MD'}]},
        {tuple,169,
         [{var,169,'EA'},{var,169,'EB'},{var,169,'EC'},{var,169,'ED'}]}]},
      {var,169,'Rest'}}],
    [],
    [{match,170,
      {tuple,170,[{var,170,'A'},{var,170,'B'},{var,170,'C'},{var,170,'D'}]},
      {var,170,'IP'}},
     {'if',171,
      [{clause,171,[],
        [[{op,171,'=:=',
           {op,171,'band',{var,171,'A'},{var,171,'MA'}},
           {var,171,'EA'}},
          {op,172,'=:=',
           {op,172,'band',{var,172,'B'},{var,172,'MB'}},
           {var,172,'EB'}},
          {op,173,'=:=',
           {op,173,'band',{var,173,'C'},{var,173,'MC'}},
           {var,173,'EC'}},
          {op,174,'=:=',
           {op,174,'band',{var,174,'D'},{var,174,'MD'}},
           {var,174,'ED'}}]],
        [{atom,175,true}]},
       {clause,176,[],
        [[{atom,176,true}]],
        [{call,177,
          {atom,177,member_address},
          [{var,177,'IP'},{var,177,'Rest'}]}]}]}]},
   {clause,179,[{var,179,'_'},{nil,179}],[],[{atom,180,false}]}]},
 {function,188,init,1,
  [{clause,188,
    [{var,188,'Slaves'}],
    [],
    [{match,189,
      {tuple,189,[{atom,189,ok},{var,189,'U'}]},
      {call,189,
       {remote,189,{atom,189,gen_udp},{atom,189,open}},
       [{integer,24,4368},{nil,189}]}},
     {match,190,
      {tuple,190,[{atom,190,ok},{var,190,'L'}]},
      {call,190,
       {remote,190,{atom,190,gen_tcp},{atom,190,listen}},
       [{integer,190,0},
        {cons,190,
         {atom,190,binary},
         {cons,190,
          {tuple,190,[{atom,190,packet},{integer,190,4}]},
          {nil,190}}}]}},
     {match,191,
      {tuple,191,[{atom,191,ok},{var,191,'Port'}]},
      {call,191,{remote,191,{atom,191,inet},{atom,191,port}},[{var,191,'L'}]}},
     {match,192,
      {tuple,192,[{atom,192,ok},{var,192,'UPort'}]},
      {call,192,{remote,192,{atom,192,inet},{atom,192,port}},[{var,192,'U'}]}},
     {match,193,{var,193,'Ref'},{call,193,{atom,193,make_ref},[]}},
     {match,194,
      {var,194,'Pid'},
      {call,194,
       {remote,194,{atom,194,proc_lib},{atom,194,spawn_link}},
       [{atom,-1,erl_boot_server},
        {atom,194,boot_init},
        {cons,194,{var,194,'Ref'},{nil,194}}]}},
     {match,195,
      {atom,195,ok},
      {call,195,
       {remote,195,{atom,195,gen_tcp},{atom,195,controlling_process}},
       [{var,195,'L'},{var,195,'Pid'}]}},
     {op,196,'!',{var,196,'Pid'},{tuple,196,[{var,196,'Ref'},{var,196,'L'}]}},
     {call,198,{atom,198,process_flag},[{atom,198,trap_exit},{atom,198,true}]},
     {tuple,199,
      [{atom,199,ok},
       {tuple,199,
        [{atom,199,state},
         {integer,199,0},
         {call,200,
          {remote,200,{atom,200,erlang},{atom,200,system_info}},
          [{atom,200,version}]},
         {var,201,'U'},
         {var,202,'UPort'},
         {var,203,'L'},
         {var,204,'Port'},
         {call,205,
          {remote,205,{atom,205,ordsets},{atom,205,from_list}},
          [{var,205,'Slaves'}]},
         {var,206,'Pid'},
         {atom,199,undefined}]}]}]}]},
 {function,212,handle_call,3,
  [{clause,212,
    [{tuple,212,[{atom,212,add},{var,212,'Address'}]},
     {var,212,'_'},
     {var,212,'S0'}],
    [],
    [{match,213,
      {var,213,'Slaves'},
      {call,213,
       {remote,213,{atom,213,ordsets},{atom,213,add_element}},
       [{var,213,'Address'},
        {call,213,
         {remote,213,{atom,213,erlang},{atom,213,element}},
         [{integer,213,8},{var,213,'S0'}]}]}},
     {op,214,'!',
      {call,214,
       {remote,214,{atom,214,erlang},{atom,214,element}},
       [{integer,214,9},{var,214,'S0'}]},
      {tuple,214,[{atom,214,slaves},{var,214,'Slaves'}]}},
     {tuple,215,
      [{atom,215,reply},
       {atom,215,ok},
       {call,215,
        {remote,215,{atom,215,erlang},{atom,215,setelement}},
        [{integer,215,8},{var,215,'S0'},{var,215,'Slaves'}]}]}]},
   {clause,216,
    [{tuple,216,[{atom,216,delete},{var,216,'Address'}]},
     {var,216,'_'},
     {var,216,'S0'}],
    [],
    [{match,217,
      {var,217,'Slaves'},
      {call,217,
       {remote,217,{atom,217,ordsets},{atom,217,del_element}},
       [{var,217,'Address'},
        {call,217,
         {remote,217,{atom,217,erlang},{atom,217,element}},
         [{integer,217,8},{var,217,'S0'}]}]}},
     {op,218,'!',
      {call,218,
       {remote,218,{atom,218,erlang},{atom,218,element}},
       [{integer,218,9},{var,218,'S0'}]},
      {tuple,218,[{atom,218,slaves},{var,218,'Slaves'}]}},
     {tuple,219,
      [{atom,219,reply},
       {atom,219,ok},
       {call,219,
        {remote,219,{atom,219,erlang},{atom,219,setelement}},
        [{integer,219,8},{var,219,'S0'},{var,219,'Slaves'}]}]}]},
   {clause,220,
    [{atom,220,which},{var,220,'_'},{var,220,'S0'}],
    [],
    [{tuple,221,
      [{atom,221,reply},
       {call,221,
        {remote,221,{atom,221,ordsets},{atom,221,to_list}},
        [{call,221,
          {remote,221,{atom,221,erlang},{atom,221,element}},
          [{integer,221,8},{var,221,'S0'}]}]},
       {var,221,'S0'}]}]}]},
 {function,225,handle_cast,2,
  [{clause,225,
    [{var,225,'_'},{var,225,'Slaves'}],
    [],
    [{tuple,226,[{atom,226,noreply},{var,226,'Slaves'}]}]}]},
 {function,230,handle_info,2,
  [{clause,230,
    [{tuple,230,
      [{atom,230,udp},
       {var,230,'U'},
       {var,230,'IP'},
       {var,230,'Port'},
       {var,230,'Data'}]},
     {var,230,'S0'}],
    [],
    [{match,231,
      {var,231,'Token'},
      {op,231,'++',
       {string,26,"EBOOTQ"},
       {call,231,
        {remote,231,{atom,231,erlang},{atom,231,element}},
        [{integer,231,3},{var,231,'S0'}]}}},
     {match,232,
      {var,232,'Valid'},
      {call,232,
       {atom,232,member_address},
       [{var,232,'IP'},
        {call,232,
         {remote,232,{atom,232,ordsets},{atom,232,to_list}},
         [{call,232,
           {remote,232,{atom,232,erlang},{atom,232,element}},
           [{integer,232,8},{var,232,'S0'}]}]}]}},
     {'case',235,
      {tuple,235,[{var,235,'Valid'},{var,235,'Data'},{var,235,'Token'}]},
      [{clause,236,
        [{tuple,236,[{atom,236,true},{var,236,'Token'},{var,236,'Token'}]}],
        [],
        [{'case',237,
          {call,237,
           {remote,237,{atom,237,gen_udp},{atom,237,send}},
           [{var,237,'U'},
            {var,237,'IP'},
            {var,237,'Port'},
            {cons,237,
             {string,27,"EBOOTR"},
             {cons,237,
              {call,237,
               {remote,237,{atom,237,erlang},{atom,237,element}},
               [{integer,237,2},{var,237,'S0'}]},
              {cons,238,
               {call,238,
                {atom,238,int16},
                [{call,238,
                  {remote,238,{atom,238,erlang},{atom,238,element}},
                  [{integer,238,7},{var,238,'S0'}]}]},
               {cons,239,
                {call,239,
                 {remote,239,{atom,239,erlang},{atom,239,element}},
                 [{integer,239,3},{var,239,'S0'}]},
                {nil,239}}}}}]},
          [{clause,241,[{atom,241,ok}],[],[{atom,241,ok}]},
           {clause,242,
            [{tuple,242,[{atom,242,error},{atom,242,not_owner}]}],
            [],
            [{call,243,
              {remote,243,{atom,243,error_logger},{atom,243,error_msg}},
              [{string,243,
                "** Illegal boot server connection attempt: not owner of ~w ** ~n"},
               {cons,244,{var,244,'U'},{nil,244}}]}]},
           {clause,245,
            [{tuple,245,[{atom,245,error},{var,245,'Reason'}]}],
            [],
            [{match,246,
              {var,246,'Err'},
              {call,246,
               {remote,246,{atom,246,file},{atom,246,format_error}},
               [{var,246,'Reason'}]}},
             {call,247,
              {remote,247,{atom,247,error_logger},{atom,247,error_msg}},
              [{string,247,
                "** Illegal boot server connection attempt: ~w POSIX error ** ~n"},
               {cons,248,
                {var,248,'U'},
                {cons,248,{var,248,'Err'},{nil,248}}}]}]}]},
         {tuple,250,[{atom,250,noreply},{var,250,'S0'}]}]},
       {clause,251,
        [{tuple,251,[{atom,251,false},{var,251,'_'},{var,251,'_'}]}],
        [],
        [{call,252,
          {remote,252,{atom,252,error_logger},{atom,252,error_msg}},
          [{string,252,
            "** Illegal boot server connection attempt: ~w is not a valid address ** ~n"},
           {cons,253,{var,253,'IP'},{nil,253}}]},
         {tuple,254,[{atom,254,noreply},{var,254,'S0'}]}]},
       {clause,255,
        [{tuple,255,[{atom,255,true},{var,255,'_'},{var,255,'_'}]}],
        [],
        [{'case',256,
          {'catch',256,
           {call,256,
            {remote,256,{atom,256,string},{atom,256,substr}},
            [{var,256,'Data'},
             {integer,256,1},
             {call,256,{atom,256,length},[{string,26,"EBOOTQ"}]}]}},
          [{clause,26,
            [{string,26,"EBOOTQ"}],
            [],
            [{match,258,
              {var,258,'Vsn'},
              {call,258,
               {remote,258,{atom,258,string},{atom,258,substr}},
               [{var,258,'Data'},
                {op,258,'+',
                 {call,258,{atom,258,length},[{string,26,"EBOOTQ"}]},
                 {integer,258,1}},
                {call,258,{atom,258,length},[{var,258,'Data'}]}]}},
             {call,259,
              {remote,259,{atom,259,error_logger},{atom,259,error_msg}},
              [{string,259,
                "** Illegal boot server connection attempt: client version is ~s ** ~n"},
               {cons,260,{var,260,'Vsn'},{nil,260}}]}]},
           {clause,261,
            [{var,261,'_'}],
            [],
            [{call,262,
              {remote,262,{atom,262,error_logger},{atom,262,error_msg}},
              [{string,262,
                "** Illegal boot server connection attempt: unrecognizable request ** ~n"},
               {nil,263}]}]}]},
         {tuple,265,[{atom,265,noreply},{var,265,'S0'}]}]}]}]},
   {clause,267,
    [{var,267,'_Info'},{var,267,'S0'}],
    [],
    [{tuple,268,[{atom,268,noreply},{var,268,'S0'}]}]}]},
 {function,272,terminate,2,
  [{clause,272,[{var,272,'_Reason'},{var,272,'_S0'}],[],[{atom,273,ok}]}]},
 {function,277,code_change,3,
  [{clause,277,
    [{var,277,'_Vsn'},{var,277,'State'},{var,277,'_Extra'}],
    [],
    [{tuple,278,[{atom,278,ok},{var,278,'State'}]}]}]},
 {function,288,boot_init,1,
  [{clause,288,
    [{var,288,'Tag'}],
    [],
    [{'receive',289,
      [{clause,290,
        [{tuple,290,[{var,290,'Tag'},{var,290,'Listen'}]}],
        [],
        [{call,291,
          {atom,291,process_flag},
          [{atom,291,trap_exit},{atom,291,true}]},
         {call,292,{atom,292,boot_main},[{var,292,'Listen'}]}]}]}]}]},
 {function,295,boot_main,1,
  [{clause,295,
    [{var,295,'Listen'}],
    [],
    [{match,296,{var,296,'Tag'},{call,296,{atom,296,make_ref},[]}},
     {match,297,
      {var,297,'Pid'},
      {call,297,
       {remote,297,{atom,297,proc_lib},{atom,297,spawn_link}},
       [{atom,-1,erl_boot_server},
        {atom,297,boot_accept},
        {cons,297,
         {call,297,{atom,297,self},[]},
         {cons,297,
          {var,297,'Listen'},
          {cons,297,{var,297,'Tag'},{nil,297}}}}]}},
     {call,298,
      {atom,298,boot_main},
      [{var,298,'Listen'},{var,298,'Tag'},{var,298,'Pid'}]}]}]},
 {function,300,boot_main,3,
  [{clause,300,
    [{var,300,'Listen'},{var,300,'Tag'},{var,300,'Pid'}],
    [],
    [{'receive',301,
      [{clause,302,
        [{tuple,302,[{var,302,'Tag'},{var,302,'_'}]}],
        [],
        [{call,303,{atom,303,boot_main},[{var,303,'Listen'}]}]},
       {clause,304,
        [{tuple,304,[{atom,304,'EXIT'},{var,304,'Pid'},{var,304,'_'}]}],
        [],
        [{call,305,{atom,305,boot_main},[{var,305,'Listen'}]}]},
       {clause,306,
        [{tuple,306,[{atom,306,'EXIT'},{var,306,'_'},{var,306,'Reason'}]}],
        [],
        [{call,307,{atom,307,exit},[{var,307,'Pid'},{atom,307,kill}]},
         {call,308,{atom,308,exit},[{var,308,'Reason'}]}]},
       {clause,309,
        [{tuple,309,[{atom,309,tcp_closed},{var,309,'Listen'}]}],
        [],
        [{call,310,{atom,310,exit},[{atom,310,closed}]}]}]}]}]},
 {function,313,boot_accept,3,
  [{clause,313,
    [{var,313,'Server'},{var,313,'Listen'},{var,313,'Tag'}],
    [],
    [{match,314,
      {var,314,'Reply'},
      {call,314,
       {remote,314,{atom,314,gen_tcp},{atom,314,accept}},
       [{var,314,'Listen'}]}},
     {call,315,{atom,315,unlink},[{var,315,'Server'}]},
     {op,316,'!',
      {var,316,'Server'},
      {tuple,316,[{var,316,'Tag'},{atom,316,continue}]}},
     {'case',317,
      {var,317,'Reply'},
      [{clause,318,
        [{tuple,318,[{atom,318,ok},{var,318,'Socket'}]}],
        [],
        [{match,319,
          {tuple,319,
           [{atom,319,ok},{tuple,319,[{var,319,'IP'},{var,319,'_Port'}]}]},
          {call,319,
           {remote,319,{atom,319,inet},{atom,319,peername}},
           [{var,319,'Socket'}]}},
         {match,320,
          {atom,320,true},
          {call,320,
           {atom,320,member_address},
           [{var,320,'IP'},{call,320,{atom,320,which_slaves},[]}]}},
         {match,321,
          {var,321,'PS'},
          {call,321,
           {remote,321,{atom,321,erl_prim_loader},{atom,321,prim_init}},
           []}},
         {call,322,
          {atom,322,boot_loop},
          [{var,322,'Socket'},{var,322,'PS'}]}]}]}]}]},
 {function,325,boot_loop,2,
  [{clause,325,
    [{var,325,'Socket'},{var,325,'PS'}],
    [],
    [{'receive',326,
      [{clause,327,
        [{tuple,327,[{atom,327,tcp},{var,327,'Socket'},{var,327,'Data'}]}],
        [],
        [{match,328,
          {var,328,'PS2'},
          {call,328,
           {atom,328,handle_command},
           [{var,328,'Socket'},{var,328,'PS'},{var,328,'Data'}]}},
         {call,329,
          {atom,329,boot_loop},
          [{var,329,'Socket'},{var,329,'PS2'}]}]},
       {clause,330,
        [{tuple,330,[{atom,330,tcp_closed},{var,330,'Socket'}]}],
        [],
        [{atom,331,true}]}]}]}]},
 {function,334,handle_command,3,
  [{clause,334,
    [{var,334,'S'},{var,334,'PS'},{var,334,'Msg'}],
    [],
    [{'case',335,
      {'catch',335,{call,335,{atom,335,binary_to_term},[{var,335,'Msg'}]}},
      [{clause,336,
        [{tuple,336,[{atom,336,get},{var,336,'File'}]}],
        [],
        [{match,337,
          {tuple,337,[{var,337,'Res'},{var,337,'PS2'}]},
          {call,337,
           {remote,337,{atom,337,erl_prim_loader},{atom,337,prim_get_file}},
           [{var,337,'PS'},{var,337,'File'}]}},
         {call,338,
          {atom,338,send_file_result},
          [{var,338,'S'},{atom,338,get},{var,338,'Res'}]},
         {var,339,'PS2'}]},
       {clause,340,
        [{tuple,340,[{atom,340,list_dir},{var,340,'Dir'}]}],
        [],
        [{match,341,
          {tuple,341,[{var,341,'Res'},{var,341,'PS2'}]},
          {call,341,
           {remote,341,{atom,341,erl_prim_loader},{atom,341,prim_list_dir}},
           [{var,341,'PS'},{var,341,'Dir'}]}},
         {call,342,
          {atom,342,send_file_result},
          [{var,342,'S'},{atom,342,list_dir},{var,342,'Res'}]},
         {var,343,'PS2'}]},
       {clause,344,
        [{tuple,344,[{atom,344,read_file_info},{var,344,'File'}]}],
        [],
        [{match,345,
          {tuple,345,[{var,345,'Res'},{var,345,'PS2'}]},
          {call,345,
           {remote,345,
            {atom,345,erl_prim_loader},
            {atom,345,prim_read_file_info}},
           [{var,345,'PS'},{var,345,'File'},{atom,345,true}]}},
         {call,346,
          {atom,346,send_file_result},
          [{var,346,'S'},{atom,346,read_file_info},{var,346,'Res'}]},
         {var,347,'PS2'}]},
       {clause,348,
        [{tuple,348,[{atom,348,read_link_info},{var,348,'File'}]}],
        [],
        [{match,349,
          {tuple,349,[{var,349,'Res'},{var,349,'PS2'}]},
          {call,349,
           {remote,349,
            {atom,349,erl_prim_loader},
            {atom,349,prim_read_file_info}},
           [{var,349,'PS'},{var,349,'File'},{atom,349,false}]}},
         {call,350,
          {atom,350,send_file_result},
          [{var,350,'S'},{atom,350,read_link_info},{var,350,'Res'}]},
         {var,351,'PS2'}]},
       {clause,352,
        [{atom,352,get_cwd}],
        [],
        [{match,353,
          {tuple,353,[{var,353,'Res'},{var,353,'PS2'}]},
          {call,353,
           {remote,353,{atom,353,erl_prim_loader},{atom,353,prim_get_cwd}},
           [{var,353,'PS'},{nil,353}]}},
         {call,354,
          {atom,354,send_file_result},
          [{var,354,'S'},{atom,354,get_cwd},{var,354,'Res'}]},
         {var,355,'PS2'}]},
       {clause,356,
        [{tuple,356,[{atom,356,get_cwd},{var,356,'Drive'}]}],
        [],
        [{match,357,
          {tuple,357,[{var,357,'Res'},{var,357,'PS2'}]},
          {call,357,
           {remote,357,{atom,357,erl_prim_loader},{atom,357,prim_get_cwd}},
           [{var,357,'PS'},{cons,357,{var,357,'Drive'},{nil,357}}]}},
         {call,358,
          {atom,358,send_file_result},
          [{var,358,'S'},{atom,358,get_cwd},{var,358,'Res'}]},
         {var,359,'PS2'}]},
       {clause,360,
        [{tuple,360,[{atom,360,'EXIT'},{var,360,'Reason'}]}],
        [],
        [{call,361,
          {atom,361,send_result},
          [{var,361,'S'},{tuple,361,[{atom,361,error},{var,361,'Reason'}]}]},
         {var,362,'PS'}]},
       {clause,363,
        [{var,363,'_Other'}],
        [],
        [{call,364,
          {atom,364,send_result},
          [{var,364,'S'},
           {tuple,364,[{atom,364,error},{atom,364,unknown_command}]}]},
         {var,365,'PS'}]}]}]}]},
 {function,368,send_file_result,3,
  [{clause,368,
    [{var,368,'S'},{var,368,'Cmd'},{var,368,'Result'}],
    [],
    [{call,369,
      {atom,369,send_result},
      [{var,369,'S'},{tuple,369,[{var,369,'Cmd'},{var,369,'Result'}]}]}]}]},
 {function,371,send_result,2,
  [{clause,371,
    [{var,371,'S'},{var,371,'Term'}],
    [],
    [{'case',372,
      {call,372,
       {remote,372,{atom,372,gen_tcp},{atom,372,send}},
       [{var,372,'S'},
        {call,372,{atom,372,term_to_binary},[{var,372,'Term'}]}]},
      [{clause,373,[{atom,373,ok}],[],[{atom,374,ok}]},
       {clause,375,
        [{var,375,'Error'}],
        [],
        [{call,376,
          {remote,376,{atom,376,error_logger},{atom,376,error_msg}},
          [{string,376,
            "** Boot server could not send result to socket: ~w** ~n"},
           {cons,377,{var,377,'Error'},{nil,377}}]},
         {atom,378,ok}]}]}]}]}]
