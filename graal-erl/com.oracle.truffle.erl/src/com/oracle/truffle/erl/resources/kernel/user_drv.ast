user_drv
[]
[]
[{function,49,start,0,
  [{clause,49,[],[],
    [{call,50,
      {atom,50,spawn},
      [{atom,50,user_drv},
       {atom,50,server},
       {cons,50,
        {atom,50,'tty_sl -c -e'},
        {cons,50,
         {tuple,50,
          [{atom,50,shell},{atom,50,start},{cons,50,{atom,50,init},{nil,50}}]},
         {nil,50}}}]}]}]},
 {function,52,start,1,
  [{clause,52,
    [{cons,52,{var,52,'Pname'},{nil,52}}],
    [],
    [{call,53,
      {atom,53,spawn},
      [{atom,53,user_drv},
       {atom,53,server},
       {cons,53,
        {var,53,'Pname'},
        {cons,53,
         {tuple,53,
          [{atom,53,shell},{atom,53,start},{cons,53,{atom,53,init},{nil,53}}]},
         {nil,53}}}]}]},
   {clause,54,
    [{cons,54,{var,54,'Pname'},{var,54,'Args'}}],
    [],
    [{call,55,
      {atom,55,spawn},
      [{atom,55,user_drv},
       {atom,55,server},
       {cons,55,{var,55,'Pname'},{var,55,'Args'}}]}]},
   {clause,56,
    [{var,56,'Pname'}],
    [],
    [{call,57,
      {atom,57,spawn},
      [{atom,57,user_drv},
       {atom,57,server},
       {cons,57,
        {var,57,'Pname'},
        {cons,57,
         {tuple,57,
          [{atom,57,shell},{atom,57,start},{cons,57,{atom,57,init},{nil,57}}]},
         {nil,57}}}]}]}]},
 {function,59,start,2,
  [{clause,59,
    [{var,59,'Pname'},{var,59,'Shell'}],
    [],
    [{call,60,
      {atom,60,spawn},
      [{atom,60,user_drv},
       {atom,60,server},
       {cons,60,{var,60,'Pname'},{cons,60,{var,60,'Shell'},{nil,60}}}]}]}]},
 {function,62,start,3,
  [{clause,62,
    [{var,62,'Iname'},{var,62,'Oname'},{var,62,'Shell'}],
    [],
    [{call,63,
      {atom,63,spawn},
      [{atom,63,user_drv},
       {atom,63,server},
       {cons,63,
        {var,63,'Iname'},
        {cons,63,{var,63,'Oname'},{cons,63,{var,63,'Shell'},{nil,63}}}}]}]}]},
 {function,72,interfaces,1,
  [{clause,72,
    [{var,72,'UserDrv'}],
    [],
    [{'case',73,
      {call,73,
       {atom,73,process_info},
       [{var,73,'UserDrv'},{atom,73,dictionary}]},
      [{clause,74,
        [{tuple,74,[{atom,74,dictionary},{var,74,'Dict'}]}],
        [],
        [{'case',75,
          {call,75,
           {remote,75,{atom,75,lists},{atom,75,keysearch}},
           [{atom,75,current_group},{integer,75,1},{var,75,'Dict'}]},
          [{clause,76,
            [{tuple,76,
              [{atom,76,value},
               {match,76,
                {var,76,'Gr'},
                {tuple,76,[{var,76,'_'},{var,76,'Group'}]}}]}],
            [[{call,76,{atom,76,is_pid},[{var,76,'Group'}]}]],
            [{cons,77,{var,77,'Gr'},{nil,77}}]},
           {clause,78,[{var,78,'_'}],[],[{nil,79}]}]}]},
       {clause,81,[{var,81,'_'}],[],[{nil,82}]}]}]}]},
 {function,91,server,2,
  [{clause,91,
    [{var,91,'Pid'},{var,91,'Shell'}],
    [[{call,91,{atom,91,is_pid},[{var,91,'Pid'}]}]],
    [{call,92,
      {atom,92,server1},
      [{var,92,'Pid'},{var,92,'Pid'},{var,92,'Shell'}]}]},
   {clause,93,
    [{var,93,'Pname'},{var,93,'Shell'}],
    [],
    [{call,94,{atom,94,process_flag},[{atom,94,trap_exit},{atom,94,true}]},
     {'case',95,
      {'catch',95,
       {call,95,
        {atom,95,open_port},
        [{tuple,95,[{atom,95,spawn},{var,95,'Pname'}]},
         {cons,95,{atom,95,eof},{nil,95}}]}},
      [{clause,96,
        [{tuple,96,[{atom,96,'EXIT'},{var,96,'_'}]}],
        [],
        [{call,98,{remote,98,{atom,98,user},{atom,98,start}},[]}]},
       {clause,99,
        [{var,99,'Port'}],
        [],
        [{call,100,
          {atom,100,server1},
          [{var,100,'Port'},{var,100,'Port'},{var,100,'Shell'}]}]}]}]}]},
 {function,103,server,3,
  [{clause,103,
    [{var,103,'Iname'},{var,103,'Oname'},{var,103,'Shell'}],
    [],
    [{call,104,{atom,104,process_flag},[{atom,104,trap_exit},{atom,104,true}]},
     {'case',105,
      {'catch',105,
       {call,105,
        {atom,105,open_port},
        [{tuple,105,[{atom,105,spawn},{var,105,'Iname'}]},
         {cons,105,{atom,105,eof},{nil,105}}]}},
      [{clause,106,
        [{tuple,106,[{atom,106,'EXIT'},{var,106,'_'}]}],
        [],
        [{call,107,{remote,107,{atom,107,user},{atom,107,start}},[]}]},
       {clause,108,
        [{var,108,'Iport'}],
        [],
        [{match,109,
          {var,109,'Oport'},
          {call,109,
           {atom,109,open_port},
           [{tuple,109,[{atom,109,spawn},{var,109,'Oname'}]},
            {cons,109,{atom,109,eof},{nil,109}}]}},
         {call,110,
          {atom,110,server1},
          [{var,110,'Iport'},{var,110,'Oport'},{var,110,'Shell'}]}]}]}]}]},
 {function,113,server1,3,
  [{clause,113,
    [{var,113,'Iport'},{var,113,'Oport'},{var,113,'Shell'}],
    [],
    [{call,114,{atom,114,put},[{atom,114,eof},{atom,114,false}]},
     {match,116,{var,116,'User'},{call,116,{atom,116,start_user},[]}},
     {match,117,
      {var,117,'Gr1'},
      {call,117,
       {atom,117,gr_add_cur},
       [{call,117,{atom,117,gr_new},[]},{var,117,'User'},{tuple,117,[]}]}},
     {match,119,
      {tuple,119,[{var,119,'Curr'},{var,119,'Shell1'}]},
      {'case',120,
       {call,120,
        {remote,120,{atom,120,init},{atom,120,get_argument}},
        [{atom,120,remsh}]},
       [{clause,121,
         [{tuple,121,
           [{atom,121,ok},
            {cons,121,{cons,121,{var,121,'Node'},{nil,121}},{nil,121}}]}],
         [],
         [{match,122,
           {var,122,'ANode'},
           {call,122,{atom,122,list_to_atom},[{var,122,'Node'}]}},
          {match,123,
           {var,123,'RShell'},
           {tuple,123,
            [{var,123,'ANode'},{atom,123,shell},{atom,123,start},{nil,123}]}},
          {match,124,
           {var,124,'RGr'},
           {call,124,
            {remote,124,{atom,124,group},{atom,124,start}},
            [{call,124,{atom,124,self},[]},
             {var,124,'RShell'},
             {call,124,{atom,124,rem_sh_opts},[{var,124,'ANode'}]}]}},
          {tuple,125,[{var,125,'RGr'},{var,125,'RShell'}]}]},
        {clause,126,
         [{var,126,'E'}],
         [[{op,126,'=:=',{var,126,'E'},{atom,126,error}}],
          [{op,126,'=:=',
            {var,126,'E'},
            {tuple,126,[{atom,126,ok},{cons,126,{nil,126},{nil,126}}]}}]],
         [{tuple,127,
           [{call,127,
             {remote,127,{atom,127,group},{atom,127,start}},
             [{call,127,{atom,127,self},[]},{var,127,'Shell'}]},
            {var,127,'Shell'}]}]}]}},
     {call,130,{atom,130,put},[{atom,130,current_group},{var,130,'Curr'}]},
     {match,131,
      {var,131,'Gr'},
      {call,131,
       {atom,131,gr_add_cur},
       [{var,131,'Gr1'},{var,131,'Curr'},{var,131,'Shell1'}]}},
     {call,133,
      {atom,133,io_request},
      [{tuple,133,
        [{atom,133,put_chars},
         {atom,133,unicode},
         {call,134,
          {atom,134,flatten},
          [{call,134,
            {remote,134,{atom,134,io_lib},{atom,134,format}},
            [{string,134,"~ts\n"},
             {cons,135,
              {call,135,
               {remote,135,{atom,135,erlang},{atom,135,system_info}},
               [{atom,135,system_version}]},
              {nil,135}}]}]}]},
       {var,136,'Iport'},
       {var,136,'Oport'}]},
     {call,139,
      {atom,139,server_loop},
      [{var,139,'Iport'},
       {var,139,'Oport'},
       {var,139,'Curr'},
       {var,139,'User'},
       {var,139,'Gr'},
       {tuple,139,
        [{atom,139,false},
         {call,139,{remote,139,{atom,139,queue},{atom,139,new}},[]}]}]}]}]},
 {function,141,rem_sh_opts,1,
  [{clause,141,
    [{var,141,'Node'}],
    [],
    [{cons,142,
      {tuple,142,
       [{atom,142,expand_fun},
        {'fun',142,
         {clauses,
          [{clause,142,
            [{var,142,'B'}],
            [],
            [{call,142,
              {remote,142,{atom,142,rpc},{atom,142,call}},
              [{var,142,'Node'},
               {atom,142,edlin_expand},
               {atom,142,expand},
               {cons,142,{var,142,'B'},{nil,142}}]}]}]}}]},
      {nil,142}}]}]},
 {function,148,start_user,0,
  [{clause,148,[],[],
    [{'case',149,
      {call,149,{atom,149,whereis},[{atom,149,user_drv}]},
      [{clause,150,
        [{atom,150,undefined}],
        [],
        [{call,151,
          {atom,151,register},
          [{atom,151,user_drv},{call,151,{atom,151,self},[]}]}]},
       {clause,152,[{var,152,'_'}],[],[{atom,153,ok}]}]},
     {'case',155,
      {call,155,{atom,155,whereis},[{atom,155,user}]},
      [{clause,156,
        [{atom,156,undefined}],
        [],
        [{match,157,
          {var,157,'User'},
          {call,157,
           {remote,157,{atom,157,group},{atom,157,start}},
           [{call,157,{atom,157,self},[]},{tuple,157,[]}]}},
         {call,158,{atom,158,register},[{atom,158,user},{var,158,'User'}]},
         {var,159,'User'}]},
       {clause,160,[{var,160,'User'}],[],[{var,161,'User'}]}]}]}]},
 {function,164,server_loop,5,
  [{clause,164,
    [{var,164,'Iport'},
     {var,164,'Oport'},
     {var,164,'User'},
     {var,164,'Gr'},
     {var,164,'IOQueue'}],
    [],
    [{match,165,
      {var,165,'Curr'},
      {call,165,{atom,165,gr_cur_pid},[{var,165,'Gr'}]}},
     {call,166,{atom,166,put},[{atom,166,current_group},{var,166,'Curr'}]},
     {call,167,
      {atom,167,server_loop},
      [{var,167,'Iport'},
       {var,167,'Oport'},
       {var,167,'Curr'},
       {var,167,'User'},
       {var,167,'Gr'},
       {var,167,'IOQueue'}]}]}]},
 {function,169,server_loop,6,
  [{clause,169,
    [{var,169,'Iport'},
     {var,169,'Oport'},
     {var,169,'Curr'},
     {var,169,'User'},
     {var,169,'Gr'},
     {match,169,
      {tuple,169,[{var,169,'Resp'},{var,169,'IOQ'}]},
      {var,169,'IOQueue'}}],
    [],
    [{'receive',170,
      [{clause,171,
        [{tuple,171,
          [{var,171,'Iport'},{tuple,171,[{atom,171,data},{var,171,'Bs'}]}]}],
        [],
        [{match,172,
          {var,172,'BsBin'},
          {call,172,{atom,172,list_to_binary},[{var,172,'Bs'}]}},
         {match,173,
          {var,173,'Unicode'},
          {call,173,
           {remote,173,{atom,173,unicode},{atom,173,characters_to_list}},
           [{var,173,'BsBin'},{atom,173,utf8}]}},
         {call,174,
          {atom,174,port_bytes},
          [{var,174,'Unicode'},
           {var,174,'Iport'},
           {var,174,'Oport'},
           {var,174,'Curr'},
           {var,174,'User'},
           {var,174,'Gr'},
           {var,174,'IOQueue'}]}]},
       {clause,175,
        [{tuple,175,[{var,175,'Iport'},{atom,175,eof}]}],
        [],
        [{op,176,'!',
          {var,176,'Curr'},
          {tuple,176,[{call,176,{atom,176,self},[]},{atom,176,eof}]}},
         {call,177,
          {atom,177,server_loop},
          [{var,177,'Iport'},
           {var,177,'Oport'},
           {var,177,'Curr'},
           {var,177,'User'},
           {var,177,'Gr'},
           {var,177,'IOQueue'}]}]},
       {clause,178,
        [{var,178,'Req'}],
        [[{op,178,'orelse',
           {op,178,'=:=',
            {call,178,{atom,178,element},[{integer,178,1},{var,178,'Req'}]},
            {var,178,'User'}},
           {op,178,'=:=',
            {call,178,{atom,178,element},[{integer,178,1},{var,178,'Req'}]},
            {var,178,'Curr'}}},
          {op,179,'orelse',
           {op,179,'=:=',
            {call,179,{atom,179,tuple_size},[{var,179,'Req'}]},
            {integer,179,2}},
           {op,179,'=:=',
            {call,179,{atom,179,tuple_size},[{var,179,'Req'}]},
            {integer,179,3}}}]],
        [{match,181,
          {var,181,'NewQ'},
          {call,181,
           {atom,181,handle_req},
           [{var,181,'Req'},
            {var,181,'Iport'},
            {var,181,'Oport'},
            {var,181,'IOQueue'}]}},
         {call,182,
          {atom,182,server_loop},
          [{var,182,'Iport'},
           {var,182,'Oport'},
           {var,182,'Curr'},
           {var,182,'User'},
           {var,182,'Gr'},
           {var,182,'NewQ'}]}]},
       {clause,183,
        [{tuple,183,[{var,183,'Oport'},{atom,183,ok}]}],
        [],
        [{match,186,
          {tuple,186,[{var,186,'Origin'},{var,186,'Reply'}]},
          {var,186,'Resp'}},
         {op,187,'!',
          {var,187,'Origin'},
          {tuple,187,[{atom,187,reply},{var,187,'Reply'}]}},
         {match,188,
          {var,188,'NewQ'},
          {call,188,
           {atom,188,handle_req},
           [{atom,188,next},
            {var,188,'Iport'},
            {var,188,'Oport'},
            {tuple,188,[{atom,188,false},{var,188,'IOQ'}]}]}},
         {call,189,
          {atom,189,server_loop},
          [{var,189,'Iport'},
           {var,189,'Oport'},
           {var,189,'Curr'},
           {var,189,'User'},
           {var,189,'Gr'},
           {var,189,'NewQ'}]}]},
       {clause,190,
        [{tuple,190,[{atom,190,'EXIT'},{var,190,'Iport'},{var,190,'_R'}]}],
        [],
        [{call,191,
          {atom,191,server_loop},
          [{var,191,'Iport'},
           {var,191,'Oport'},
           {var,191,'Curr'},
           {var,191,'User'},
           {var,191,'Gr'},
           {var,191,'IOQueue'}]}]},
       {clause,192,
        [{tuple,192,[{atom,192,'EXIT'},{var,192,'Oport'},{var,192,'_R'}]}],
        [],
        [{call,193,
          {atom,193,server_loop},
          [{var,193,'Iport'},
           {var,193,'Oport'},
           {var,193,'Curr'},
           {var,193,'User'},
           {var,193,'Gr'},
           {var,193,'IOQueue'}]}]},
       {clause,194,
        [{tuple,194,[{atom,194,'EXIT'},{var,194,'User'},{atom,194,shutdown}]}],
        [],
        [{call,195,
          {atom,195,server_loop},
          [{var,195,'Iport'},
           {var,195,'Oport'},
           {var,195,'Curr'},
           {var,195,'User'},
           {var,195,'Gr'},
           {var,195,'IOQueue'}]}]},
       {clause,196,
        [{tuple,196,[{atom,196,'EXIT'},{var,196,'User'},{var,196,'_R'}]}],
        [],
        [{match,197,{var,197,'NewU'},{call,197,{atom,197,start_user},[]}},
         {call,198,
          {atom,198,server_loop},
          [{var,198,'Iport'},
           {var,198,'Oport'},
           {var,198,'Curr'},
           {var,198,'NewU'},
           {call,198,
            {atom,198,gr_set_num},
            [{var,198,'Gr'},{integer,198,1},{var,198,'NewU'},{tuple,198,[]}]},
           {var,198,'IOQueue'}]}]},
       {clause,199,
        [{tuple,199,[{atom,199,'EXIT'},{var,199,'Pid'},{var,199,'R'}]}],
        [],
        [{'case',200,
          {call,200,{atom,200,gr_cur_pid},[{var,200,'Gr'}]},
          [{clause,201,
            [{var,201,'Pid'}],
            [[{op,201,'=/=',{var,201,'R'},{atom,201,die}},
              {op,202,'=/=',{var,202,'R'},{atom,202,terminated}}]],
            [{'if',203,
              [{clause,203,[],
                [[{op,203,'=/=',{var,203,'R'},{atom,203,normal}}]],
                [{call,204,
                  {atom,204,io_requests},
                  [{cons,204,
                    {tuple,204,
                     [{atom,204,put_chars},
                      {atom,204,unicode},
                      {string,204,"*** ERROR: "}]},
                    {nil,204}},
                   {var,204,'Iport'},
                   {var,204,'Oport'}]}]},
               {clause,205,[],
                [[{atom,205,true}]],
                [{call,206,
                  {atom,206,io_requests},
                  [{cons,206,
                    {tuple,206,
                     [{atom,206,put_chars},
                      {atom,206,unicode},
                      {string,206,"*** "}]},
                    {nil,206}},
                   {var,206,'Iport'},
                   {var,206,'Oport'}]}]}]},
             {call,208,
              {atom,208,io_requests},
              [{cons,208,
                {tuple,208,
                 [{atom,208,put_chars},
                  {atom,208,unicode},
                  {string,208,"Shell process terminated! "}]},
                {nil,208}},
               {var,208,'Iport'},
               {var,208,'Oport'}]},
             {match,209,
              {var,209,'Gr1'},
              {call,209,
               {atom,209,gr_del_pid},
               [{var,209,'Gr'},{var,209,'Pid'}]}},
             {'case',210,
              {call,210,
               {atom,210,gr_get_info},
               [{var,210,'Gr'},{var,210,'Pid'}]},
              [{clause,211,
                [{tuple,211,
                  [{var,211,'Ix'},
                   {tuple,211,
                    [{atom,211,shell},{atom,211,start},{var,211,'Params'}]}]}],
                [],
                [{call,212,
                  {atom,212,io_requests},
                  [{cons,212,
                    {tuple,212,
                     [{atom,212,put_chars},
                      {atom,212,unicode},
                      {string,212,"***\n"}]},
                    {nil,212}},
                   {var,212,'Iport'},
                   {var,212,'Oport'}]},
                 {match,214,
                  {var,214,'Pid1'},
                  {call,214,
                   {remote,214,{atom,214,group},{atom,214,start}},
                   [{call,214,{atom,214,self},[]},
                    {tuple,214,
                     [{atom,214,shell},
                      {atom,214,start},
                      {var,214,'Params'}]}]}},
                 {match,215,
                  {tuple,215,[{atom,215,ok},{var,215,'Gr2'}]},
                  {call,215,
                   {atom,215,gr_set_cur},
                   [{call,215,
                     {atom,215,gr_set_num},
                     [{var,215,'Gr1'},
                      {var,215,'Ix'},
                      {var,215,'Pid1'},
                      {tuple,216,
                       [{atom,216,shell},
                        {atom,216,start},
                        {var,216,'Params'}]}]},
                    {var,216,'Ix'}]}},
                 {call,217,
                  {atom,217,put},
                  [{atom,217,current_group},{var,217,'Pid1'}]},
                 {call,218,
                  {atom,218,server_loop},
                  [{var,218,'Iport'},
                   {var,218,'Oport'},
                   {var,218,'Pid1'},
                   {var,218,'User'},
                   {var,218,'Gr2'},
                   {var,218,'IOQueue'}]}]},
               {clause,219,
                [{var,219,'_'}],
                [],
                [{call,220,
                  {atom,220,io_requests},
                  [{cons,220,
                    {tuple,220,
                     [{atom,220,put_chars},
                      {atom,220,unicode},
                      {string,220,"(^G to start new job) ***\n"}]},
                    {nil,220}},
                   {var,221,'Iport'},
                   {var,221,'Oport'}]},
                 {call,222,
                  {atom,222,server_loop},
                  [{var,222,'Iport'},
                   {var,222,'Oport'},
                   {var,222,'Curr'},
                   {var,222,'User'},
                   {var,222,'Gr1'},
                   {var,222,'IOQueue'}]}]}]}]},
           {clause,224,
            [{var,224,'_'}],
            [],
            [{call,225,
              {atom,225,server_loop},
              [{var,225,'Iport'},
               {var,225,'Oport'},
               {var,225,'Curr'},
               {var,225,'User'},
               {call,225,
                {atom,225,gr_del_pid},
                [{var,225,'Gr'},{var,225,'Pid'}]},
               {var,225,'IOQueue'}]}]}]}]},
       {clause,227,
        [{var,227,'_X'}],
        [],
        [{call,229,
          {atom,229,server_loop},
          [{var,229,'Iport'},
           {var,229,'Oport'},
           {var,229,'Curr'},
           {var,229,'User'},
           {var,229,'Gr'},
           {var,229,'IOQueue'}]}]}]}]}]},
 {function,233,handle_req,4,
  [{clause,233,
    [{tuple,233,[{var,233,'Curr'},{atom,233,tty_geometry}]},
     {var,233,'Iport'},
     {var,233,'_Oport'},
     {var,233,'IOQueue'}],
    [],
    [{op,234,'!',
      {var,234,'Curr'},
      {tuple,234,
       [{call,234,{atom,234,self},[]},
        {atom,234,tty_geometry},
        {call,234,{atom,234,get_tty_geometry},[{var,234,'Iport'}]}]}},
     {var,235,'IOQueue'}]},
   {clause,236,
    [{tuple,236,[{var,236,'Curr'},{atom,236,get_unicode_state}]},
     {var,236,'Iport'},
     {var,236,'_Oport'},
     {var,236,'IOQueue'}],
    [],
    [{op,237,'!',
      {var,237,'Curr'},
      {tuple,237,
       [{call,237,{atom,237,self},[]},
        {atom,237,get_unicode_state},
        {call,237,{atom,237,get_unicode_state},[{var,237,'Iport'}]}]}},
     {var,238,'IOQueue'}]},
   {clause,239,
    [{tuple,239,
      [{var,239,'Curr'},{atom,239,set_unicode_state},{var,239,'Bool'}]},
     {var,239,'Iport'},
     {var,239,'_Oport'},
     {var,239,'IOQueue'}],
    [],
    [{op,240,'!',
      {var,240,'Curr'},
      {tuple,240,
       [{call,240,{atom,240,self},[]},
        {atom,240,set_unicode_state},
        {call,240,
         {atom,240,set_unicode_state},
         [{var,240,'Iport'},{var,240,'Bool'}]}]}},
     {var,241,'IOQueue'}]},
   {clause,242,
    [{atom,242,next},
     {var,242,'Iport'},
     {var,242,'Oport'},
     {match,242,
      {tuple,242,[{atom,242,false},{var,242,'IOQ'}]},
      {var,242,'IOQueue'}}],
    [],
    [{'case',243,
      {call,243,
       {remote,243,{atom,243,queue},{atom,243,out}},
       [{var,243,'IOQ'}]},
      [{clause,244,
        [{tuple,244,[{atom,244,empty},{var,244,'_'}]}],
        [],
        [{var,245,'IOQueue'}]},
       {clause,246,
        [{tuple,246,
          [{tuple,246,
            [{atom,246,value},
             {tuple,246,[{var,246,'Origin'},{var,246,'Req'}]}]},
           {var,246,'ExecQ'}]}],
        [],
        [{'case',247,
          {call,247,
           {atom,247,io_request},
           [{var,247,'Req'},{var,247,'Iport'},{var,247,'Oport'}]},
          [{clause,248,
            [{atom,248,ok}],
            [],
            [{call,249,
              {atom,249,handle_req},
              [{atom,249,next},
               {var,249,'Iport'},
               {var,249,'Oport'},
               {tuple,249,[{atom,249,false},{var,249,'ExecQ'}]}]}]},
           {clause,250,
            [{var,250,'Reply'}],
            [],
            [{tuple,251,
              [{tuple,251,[{var,251,'Origin'},{var,251,'Reply'}]},
               {var,251,'ExecQ'}]}]}]}]}]}]},
   {clause,254,
    [{var,254,'Msg'},
     {var,254,'Iport'},
     {var,254,'Oport'},
     {match,254,
      {tuple,254,[{atom,254,false},{var,254,'IOQ'}]},
      {var,254,'IOQueue'}}],
    [],
    [{match,255,
      {atom,255,empty},
      {call,255,
       {remote,255,{atom,255,queue},{atom,255,peek}},
       [{var,255,'IOQ'}]}},
     {match,256,
      {tuple,256,[{var,256,'Origin'},{var,256,'Req'}]},
      {var,256,'Msg'}},
     {'case',257,
      {call,257,
       {atom,257,io_request},
       [{var,257,'Req'},{var,257,'Iport'},{var,257,'Oport'}]},
      [{clause,258,[{atom,258,ok}],[],[{var,259,'IOQueue'}]},
       {clause,260,
        [{var,260,'Reply'}],
        [],
        [{tuple,261,
          [{tuple,261,[{var,261,'Origin'},{var,261,'Reply'}]},
           {var,261,'IOQ'}]}]}]}]},
   {clause,263,
    [{var,263,'Msg'},
     {var,263,'_Iport'},
     {var,263,'_Oport'},
     {tuple,263,[{var,263,'Resp'},{var,263,'IOQ'}]}],
    [],
    [{tuple,265,
      [{var,265,'Resp'},
       {call,265,
        {remote,265,{atom,265,queue},{atom,265,in}},
        [{var,265,'Msg'},{var,265,'IOQ'}]}]}]}]},
 {function,272,port_bytes,7,
  [{clause,272,
    [{cons,272,{char,272,7},{var,272,'_Bs'}},
     {var,272,'Iport'},
     {var,272,'Oport'},
     {var,272,'_Curr'},
     {var,272,'User'},
     {var,272,'Gr'},
     {var,272,'IOQueue'}],
    [],
    [{call,273,
      {atom,273,handle_escape},
      [{var,273,'Iport'},
       {var,273,'Oport'},
       {var,273,'User'},
       {var,273,'Gr'},
       {var,273,'IOQueue'}]}]},
   {clause,275,
    [{cons,275,{char,275,3},{var,275,'_Bs'}},
     {var,275,'Iport'},
     {var,275,'Oport'},
     {var,275,'Curr'},
     {var,275,'User'},
     {var,275,'Gr'},
     {var,275,'IOQueue'}],
    [],
    [{call,276,
      {atom,276,interrupt_shell},
      [{var,276,'Iport'},
       {var,276,'Oport'},
       {var,276,'Curr'},
       {var,276,'User'},
       {var,276,'Gr'},
       {var,276,'IOQueue'}]}]},
   {clause,278,
    [{cons,278,{var,278,'B'},{nil,278}},
     {var,278,'Iport'},
     {var,278,'Oport'},
     {var,278,'Curr'},
     {var,278,'User'},
     {var,278,'Gr'},
     {var,278,'IOQueue'}],
    [],
    [{op,279,'!',
      {var,279,'Curr'},
      {tuple,279,
       [{call,279,{atom,279,self},[]},
        {tuple,279,[{atom,279,data},{cons,279,{var,279,'B'},{nil,279}}]}]}},
     {call,280,
      {atom,280,server_loop},
      [{var,280,'Iport'},
       {var,280,'Oport'},
       {var,280,'Curr'},
       {var,280,'User'},
       {var,280,'Gr'},
       {var,280,'IOQueue'}]}]},
   {clause,281,
    [{var,281,'Bs'},
     {var,281,'Iport'},
     {var,281,'Oport'},
     {var,281,'Curr'},
     {var,281,'User'},
     {var,281,'Gr'},
     {var,281,'IOQueue'}],
    [],
    [{'case',282,
      {call,282,{atom,282,member},[{char,282,7},{var,282,'Bs'}]},
      [{clause,283,
        [{atom,283,true}],
        [],
        [{call,284,
          {atom,284,handle_escape},
          [{var,284,'Iport'},
           {var,284,'Oport'},
           {var,284,'User'},
           {var,284,'Gr'},
           {var,284,'IOQueue'}]}]},
       {clause,285,
        [{atom,285,false}],
        [],
        [{op,286,'!',
          {var,286,'Curr'},
          {tuple,286,
           [{call,286,{atom,286,self},[]},
            {tuple,286,[{atom,286,data},{var,286,'Bs'}]}]}},
         {call,287,
          {atom,287,server_loop},
          [{var,287,'Iport'},
           {var,287,'Oport'},
           {var,287,'Curr'},
           {var,287,'User'},
           {var,287,'Gr'},
           {var,287,'IOQueue'}]}]}]}]}]},
 {function,290,interrupt_shell,6,
  [{clause,290,
    [{var,290,'Iport'},
     {var,290,'Oport'},
     {var,290,'Curr'},
     {var,290,'User'},
     {var,290,'Gr'},
     {var,290,'IOQueue'}],
    [],
    [{'case',291,
      {call,291,{atom,291,gr_get_info},[{var,291,'Gr'},{var,291,'Curr'}]},
      [{clause,292,[{atom,292,undefined}],[],[{atom,293,ok}]},
       {clause,294,
        [{var,294,'_'}],
        [],
        [{call,295,
          {atom,295,exit},
          [{var,295,'Curr'},{atom,295,interrupt}]}]}]},
     {call,297,
      {atom,297,server_loop},
      [{var,297,'Iport'},
       {var,297,'Oport'},
       {var,297,'Curr'},
       {var,297,'User'},
       {var,297,'Gr'},
       {var,297,'IOQueue'}]}]}]},
 {function,299,handle_escape,5,
  [{clause,299,
    [{var,299,'Iport'},
     {var,299,'Oport'},
     {var,299,'User'},
     {var,299,'Gr'},
     {var,299,'IOQueue'}],
    [],
    [{'case',300,
      {call,300,
       {remote,300,{atom,300,application},{atom,300,get_env}},
       [{atom,300,stdlib},{atom,300,shell_esc}]},
      [{clause,301,
        [{tuple,301,[{atom,301,ok},{atom,301,abort}]}],
        [],
        [{match,302,
          {var,302,'Pid'},
          {call,302,{atom,302,gr_cur_pid},[{var,302,'Gr'}]}},
         {call,303,{atom,303,exit},[{var,303,'Pid'},{atom,303,die}]},
         {match,304,
          {var,304,'Gr1'},
          {'case',305,
           {call,305,{atom,305,gr_get_info},[{var,305,'Gr'},{var,305,'Pid'}]},
           [{clause,306,
             [{tuple,306,[{var,306,'_Ix'},{tuple,306,[]}]}],
             [],
             [{var,307,'Gr'}]},
            {clause,308,
             [{var,308,'_'}],
             [],
             [{'receive',309,
               [{clause,309,
                 [{tuple,309,
                   [{atom,309,'EXIT'},{var,309,'Pid'},{var,309,'_'}]}],
                 [],
                 [{call,310,
                   {atom,310,gr_del_pid},
                   [{var,310,'Gr'},{var,310,'Pid'}]}]}],
               {integer,311,1000},
               [{var,312,'Gr'}]}]}]}},
         {match,315,
          {var,315,'Pid1'},
          {call,315,
           {remote,315,{atom,315,group},{atom,315,start}},
           [{call,315,{atom,315,self},[]},
            {tuple,315,[{atom,315,shell},{atom,315,start},{nil,315}]}]}},
         {call,316,
          {atom,316,io_request},
          [{tuple,316,
            [{atom,316,put_chars},{atom,316,unicode},{string,316,"\n"}]},
           {var,316,'Iport'},
           {var,316,'Oport'}]},
         {call,317,
          {atom,317,server_loop},
          [{var,317,'Iport'},
           {var,317,'Oport'},
           {var,317,'User'},
           {call,318,
            {atom,318,gr_add_cur},
            [{var,318,'Gr1'},
             {var,318,'Pid1'},
             {tuple,318,[{atom,318,shell},{atom,318,start},{nil,318}]}]},
           {var,318,'IOQueue'}]}]},
       {clause,320,
        [{var,320,'_'}],
        [],
        [{call,321,
          {atom,321,io_request},
          [{tuple,321,
            [{atom,321,put_chars},
             {atom,321,unicode},
             {string,321,"\nUser switch command\n"}]},
           {var,321,'Iport'},
           {var,321,'Oport'}]},
         {call,324,
          {remote,324,{atom,324,edlin},{atom,324,init}},
          [{call,324,{atom,324,gr_cur_pid},[{var,324,'Gr'}]}]},
         {call,325,
          {atom,325,server_loop},
          [{var,325,'Iport'},
           {var,325,'Oport'},
           {var,325,'User'},
           {call,325,
            {atom,325,switch_loop},
            [{var,325,'Iport'},{var,325,'Oport'},{var,325,'Gr'}]},
           {var,325,'IOQueue'}]}]}]}]}]},
 {function,328,switch_loop,3,
  [{clause,328,
    [{var,328,'Iport'},{var,328,'Oport'},{var,328,'Gr'}],
    [],
    [{match,329,
      {var,329,'Line'},
      {call,329,
       {atom,329,get_line},
       [{call,329,
         {remote,329,{atom,329,edlin},{atom,329,start}},
         [{string,329," --> "}]},
        {var,329,'Iport'},
        {var,329,'Oport'}]}},
     {call,330,
      {atom,330,switch_cmd},
      [{call,330,
        {remote,330,{atom,330,erl_scan},{atom,330,string}},
        [{var,330,'Line'}]},
       {var,330,'Iport'},
       {var,330,'Oport'},
       {var,330,'Gr'}]}]}]},
 {function,332,switch_cmd,4,
  [{clause,332,
    [{tuple,332,
      [{atom,332,ok},
       {cons,332,
        {tuple,332,[{atom,332,atom},{var,332,'_'},{atom,332,c}]},
        {cons,332,
         {tuple,332,[{atom,332,integer},{var,332,'_'},{var,332,'I'}]},
         {nil,332}}},
       {var,332,'_'}]},
     {var,332,'Iport'},
     {var,332,'Oport'},
     {var,332,'Gr0'}],
    [],
    [{'case',333,
      {call,333,{atom,333,gr_set_cur},[{var,333,'Gr0'},{var,333,'I'}]},
      [{clause,334,
        [{tuple,334,[{atom,334,ok},{var,334,'Gr'}]}],
        [],
        [{var,334,'Gr'}]},
       {clause,335,
        [{atom,335,undefined}],
        [],
        [{call,335,
          {atom,335,unknown_group},
          [{var,335,'Iport'},{var,335,'Oport'},{var,335,'Gr0'}]}]}]}]},
   {clause,337,
    [{tuple,337,
      [{atom,337,ok},
       {cons,337,
        {tuple,337,[{atom,337,atom},{var,337,'_'},{atom,337,c}]},
        {nil,337}},
       {var,337,'_'}]},
     {var,337,'Iport'},
     {var,337,'Oport'},
     {var,337,'Gr'}],
    [],
    [{'case',338,
      {call,338,
       {atom,338,gr_get_info},
       [{var,338,'Gr'},{call,338,{atom,338,gr_cur_pid},[{var,338,'Gr'}]}]},
      [{clause,339,
        [{atom,339,undefined}],
        [],
        [{call,340,
          {atom,340,unknown_group},
          [{var,340,'Iport'},{var,340,'Oport'},{var,340,'Gr'}]}]},
       {clause,341,[{var,341,'_'}],[],[{var,342,'Gr'}]}]}]},
   {clause,344,
    [{tuple,344,
      [{atom,344,ok},
       {cons,344,
        {tuple,344,[{atom,344,atom},{var,344,'_'},{atom,344,i}]},
        {cons,344,
         {tuple,344,[{atom,344,integer},{var,344,'_'},{var,344,'I'}]},
         {nil,344}}},
       {var,344,'_'}]},
     {var,344,'Iport'},
     {var,344,'Oport'},
     {var,344,'Gr'}],
    [],
    [{'case',345,
      {call,345,{atom,345,gr_get_num},[{var,345,'Gr'},{var,345,'I'}]},
      [{clause,346,
        [{tuple,346,[{atom,346,pid},{var,346,'Pid'}]}],
        [],
        [{call,347,{atom,347,exit},[{var,347,'Pid'},{atom,347,interrupt}]},
         {call,348,
          {atom,348,switch_loop},
          [{var,348,'Iport'},{var,348,'Oport'},{var,348,'Gr'}]}]},
       {clause,349,
        [{atom,349,undefined}],
        [],
        [{call,350,
          {atom,350,unknown_group},
          [{var,350,'Iport'},{var,350,'Oport'},{var,350,'Gr'}]}]}]}]},
   {clause,352,
    [{tuple,352,
      [{atom,352,ok},
       {cons,352,
        {tuple,352,[{atom,352,atom},{var,352,'_'},{atom,352,i}]},
        {nil,352}},
       {var,352,'_'}]},
     {var,352,'Iport'},
     {var,352,'Oport'},
     {var,352,'Gr'}],
    [],
    [{match,353,
      {var,353,'Pid'},
      {call,353,{atom,353,gr_cur_pid},[{var,353,'Gr'}]}},
     {'case',354,
      {call,354,{atom,354,gr_get_info},[{var,354,'Gr'},{var,354,'Pid'}]},
      [{clause,355,
        [{atom,355,undefined}],
        [],
        [{call,356,
          {atom,356,unknown_group},
          [{var,356,'Iport'},{var,356,'Oport'},{var,356,'Gr'}]}]},
       {clause,357,
        [{var,357,'_'}],
        [],
        [{call,358,{atom,358,exit},[{var,358,'Pid'},{atom,358,interrupt}]},
         {call,359,
          {atom,359,switch_loop},
          [{var,359,'Iport'},{var,359,'Oport'},{var,359,'Gr'}]}]}]}]},
   {clause,361,
    [{tuple,361,
      [{atom,361,ok},
       {cons,361,
        {tuple,361,[{atom,361,atom},{var,361,'_'},{atom,361,k}]},
        {cons,361,
         {tuple,361,[{atom,361,integer},{var,361,'_'},{var,361,'I'}]},
         {nil,361}}},
       {var,361,'_'}]},
     {var,361,'Iport'},
     {var,361,'Oport'},
     {var,361,'Gr'}],
    [],
    [{'case',362,
      {call,362,{atom,362,gr_get_num},[{var,362,'Gr'},{var,362,'I'}]},
      [{clause,363,
        [{tuple,363,[{atom,363,pid},{var,363,'Pid'}]}],
        [],
        [{call,364,{atom,364,exit},[{var,364,'Pid'},{atom,364,die}]},
         {'case',365,
          {call,365,{atom,365,gr_get_info},[{var,365,'Gr'},{var,365,'Pid'}]},
          [{clause,366,
            [{tuple,366,[{var,366,'_Ix'},{tuple,366,[]}]}],
            [],
            [{call,367,
              {atom,367,switch_loop},
              [{var,367,'Iport'},{var,367,'Oport'},{var,367,'Gr'}]}]},
           {clause,368,
            [{var,368,'_'}],
            [],
            [{match,369,
              {var,369,'Gr1'},
              {'receive',370,
               [{clause,370,
                 [{tuple,370,
                   [{atom,370,'EXIT'},{var,370,'Pid'},{var,370,'_'}]}],
                 [],
                 [{call,371,
                   {atom,371,gr_del_pid},
                   [{var,371,'Gr'},{var,371,'Pid'}]}]}],
               {integer,372,1000},
               [{var,373,'Gr'}]}},
             {call,375,
              {atom,375,switch_loop},
              [{var,375,'Iport'},{var,375,'Oport'},{var,375,'Gr1'}]}]}]}]},
       {clause,377,
        [{atom,377,undefined}],
        [],
        [{call,378,
          {atom,378,unknown_group},
          [{var,378,'Iport'},{var,378,'Oport'},{var,378,'Gr'}]}]}]}]},
   {clause,380,
    [{tuple,380,
      [{atom,380,ok},
       {cons,380,
        {tuple,380,[{atom,380,atom},{var,380,'_'},{atom,380,k}]},
        {nil,380}},
       {var,380,'_'}]},
     {var,380,'Iport'},
     {var,380,'Oport'},
     {var,380,'Gr'}],
    [],
    [{match,381,
      {var,381,'Pid'},
      {call,381,{atom,381,gr_cur_pid},[{var,381,'Gr'}]}},
     {match,382,
      {var,382,'Info'},
      {call,382,{atom,382,gr_get_info},[{var,382,'Gr'},{var,382,'Pid'}]}},
     {'case',383,
      {var,383,'Info'},
      [{clause,384,
        [{atom,384,undefined}],
        [],
        [{call,385,
          {atom,385,unknown_group},
          [{var,385,'Iport'},{var,385,'Oport'},{var,385,'Gr'}]}]},
       {clause,386,
        [{tuple,386,[{var,386,'_Ix'},{tuple,386,[]}]}],
        [],
        [{call,387,
          {atom,387,switch_loop},
          [{var,387,'Iport'},{var,387,'Oport'},{var,387,'Gr'}]}]},
       {clause,388,
        [{var,388,'_'}],
        [],
        [{call,389,{atom,389,exit},[{var,389,'Pid'},{atom,389,die}]},
         {match,390,
          {var,390,'Gr1'},
          {'receive',391,
           [{clause,391,
             [{tuple,391,[{atom,391,'EXIT'},{var,391,'Pid'},{var,391,'_'}]}],
             [],
             [{call,392,
               {atom,392,gr_del_pid},
               [{var,392,'Gr'},{var,392,'Pid'}]}]}],
           {integer,393,1000},
           [{var,394,'Gr'}]}},
         {call,396,
          {atom,396,switch_loop},
          [{var,396,'Iport'},{var,396,'Oport'},{var,396,'Gr1'}]}]}]}]},
   {clause,398,
    [{tuple,398,
      [{atom,398,ok},
       {cons,398,
        {tuple,398,[{atom,398,atom},{var,398,'_'},{atom,398,j}]},
        {nil,398}},
       {var,398,'_'}]},
     {var,398,'Iport'},
     {var,398,'Oport'},
     {var,398,'Gr'}],
    [],
    [{call,399,
      {atom,399,io_requests},
      [{call,399,{atom,399,gr_list},[{var,399,'Gr'}]},
       {var,399,'Iport'},
       {var,399,'Oport'}]},
     {call,400,
      {atom,400,switch_loop},
      [{var,400,'Iport'},{var,400,'Oport'},{var,400,'Gr'}]}]},
   {clause,401,
    [{tuple,401,
      [{atom,401,ok},
       {cons,401,
        {tuple,401,[{atom,401,atom},{var,401,'_'},{atom,401,s}]},
        {cons,401,
         {tuple,401,[{atom,401,atom},{var,401,'_'},{var,401,'Shell'}]},
         {nil,401}}},
       {var,401,'_'}]},
     {var,401,'Iport'},
     {var,401,'Oport'},
     {var,401,'Gr0'}],
    [],
    [{match,402,
      {var,402,'Pid'},
      {call,402,
       {remote,402,{atom,402,group},{atom,402,start}},
       [{call,402,{atom,402,self},[]},
        {tuple,402,[{var,402,'Shell'},{atom,402,start},{nil,402}]}]}},
     {match,403,
      {var,403,'Gr'},
      {call,403,
       {atom,403,gr_add_cur},
       [{var,403,'Gr0'},
        {var,403,'Pid'},
        {tuple,403,[{var,403,'Shell'},{atom,403,start},{nil,403}]}]}},
     {call,404,
      {atom,404,switch_loop},
      [{var,404,'Iport'},{var,404,'Oport'},{var,404,'Gr'}]}]},
   {clause,405,
    [{tuple,405,
      [{atom,405,ok},
       {cons,405,
        {tuple,405,[{atom,405,atom},{var,405,'_'},{atom,405,s}]},
        {nil,405}},
       {var,405,'_'}]},
     {var,405,'Iport'},
     {var,405,'Oport'},
     {var,405,'Gr0'}],
    [],
    [{match,406,
      {var,406,'Pid'},
      {call,406,
       {remote,406,{atom,406,group},{atom,406,start}},
       [{call,406,{atom,406,self},[]},
        {tuple,406,[{atom,406,shell},{atom,406,start},{nil,406}]}]}},
     {match,407,
      {var,407,'Gr'},
      {call,407,
       {atom,407,gr_add_cur},
       [{var,407,'Gr0'},
        {var,407,'Pid'},
        {tuple,407,[{atom,407,shell},{atom,407,start},{nil,407}]}]}},
     {call,408,
      {atom,408,switch_loop},
      [{var,408,'Iport'},{var,408,'Oport'},{var,408,'Gr'}]}]},
   {clause,409,
    [{tuple,409,
      [{atom,409,ok},
       {cons,409,
        {tuple,409,[{atom,409,atom},{var,409,'_'},{atom,409,r}]},
        {nil,409}},
       {var,409,'_'}]},
     {var,409,'Iport'},
     {var,409,'Oport'},
     {var,409,'Gr0'}],
    [],
    [{'case',410,
      {call,410,{atom,410,is_alive},[]},
      [{clause,411,
        [{atom,411,true}],
        [],
        [{match,412,
          {var,412,'Node'},
          {call,412,{remote,412,{atom,412,pool},{atom,412,get_node}},[]}},
         {match,413,
          {var,413,'Pid'},
          {call,413,
           {remote,413,{atom,413,group},{atom,413,start}},
           [{call,413,{atom,413,self},[]},
            {tuple,413,
             [{var,413,'Node'},
              {atom,413,shell},
              {atom,413,start},
              {nil,413}]}]}},
         {match,414,
          {var,414,'Gr'},
          {call,414,
           {atom,414,gr_add_cur},
           [{var,414,'Gr0'},
            {var,414,'Pid'},
            {tuple,414,
             [{var,414,'Node'},
              {atom,414,shell},
              {atom,414,start},
              {nil,414}]}]}},
         {call,415,
          {atom,415,switch_loop},
          [{var,415,'Iport'},{var,415,'Oport'},{var,415,'Gr'}]}]},
       {clause,416,
        [{atom,416,false}],
        [],
        [{call,417,
          {atom,417,io_request},
          [{tuple,417,
            [{atom,417,put_chars},
             {atom,417,unicode},
             {string,417,"Not alive\n"}]},
           {var,417,'Iport'},
           {var,417,'Oport'}]},
         {call,418,
          {atom,418,switch_loop},
          [{var,418,'Iport'},{var,418,'Oport'},{var,418,'Gr0'}]}]}]}]},
   {clause,420,
    [{tuple,420,
      [{atom,420,ok},
       {cons,420,
        {tuple,420,[{atom,420,atom},{var,420,'_'},{atom,420,r}]},
        {cons,420,
         {tuple,420,[{atom,420,atom},{var,420,'_'},{var,420,'Node'}]},
         {nil,420}}},
       {var,420,'_'}]},
     {var,420,'Iport'},
     {var,420,'Oport'},
     {var,420,'Gr0'}],
    [],
    [{match,421,
      {var,421,'Pid'},
      {call,421,
       {remote,421,{atom,421,group},{atom,421,start}},
       [{call,421,{atom,421,self},[]},
        {tuple,421,
         [{var,421,'Node'},{atom,421,shell},{atom,421,start},{nil,421}]}]}},
     {match,422,
      {var,422,'Gr'},
      {call,422,
       {atom,422,gr_add_cur},
       [{var,422,'Gr0'},
        {var,422,'Pid'},
        {tuple,422,
         [{var,422,'Node'},{atom,422,shell},{atom,422,start},{nil,422}]}]}},
     {call,423,
      {atom,423,switch_loop},
      [{var,423,'Iport'},{var,423,'Oport'},{var,423,'Gr'}]}]},
   {clause,424,
    [{tuple,424,
      [{atom,424,ok},
       {cons,424,
        {tuple,424,[{atom,424,atom},{var,424,'_'},{atom,424,r}]},
        {cons,424,
         {tuple,424,[{atom,424,atom},{var,424,'_'},{var,424,'Node'}]},
         {cons,424,
          {tuple,424,[{atom,424,atom},{var,424,'_'},{var,424,'Shell'}]},
          {nil,424}}}},
       {var,424,'_'}]},
     {var,425,'Iport'},
     {var,425,'Oport'},
     {var,425,'Gr0'}],
    [],
    [{match,426,
      {var,426,'Pid'},
      {call,426,
       {remote,426,{atom,426,group},{atom,426,start}},
       [{call,426,{atom,426,self},[]},
        {tuple,426,
         [{var,426,'Node'},{var,426,'Shell'},{atom,426,start},{nil,426}]}]}},
     {match,427,
      {var,427,'Gr'},
      {call,427,
       {atom,427,gr_add_cur},
       [{var,427,'Gr0'},
        {var,427,'Pid'},
        {tuple,427,
         [{var,427,'Node'},{var,427,'Shell'},{atom,427,start},{nil,427}]}]}},
     {call,428,
      {atom,428,switch_loop},
      [{var,428,'Iport'},{var,428,'Oport'},{var,428,'Gr'}]}]},
   {clause,429,
    [{tuple,429,
      [{atom,429,ok},
       {cons,429,
        {tuple,429,[{atom,429,atom},{var,429,'_'},{atom,429,q}]},
        {nil,429}},
       {var,429,'_'}]},
     {var,429,'Iport'},
     {var,429,'Oport'},
     {var,429,'Gr'}],
    [],
    [{'case',430,
      {call,430,
       {remote,430,{atom,430,erlang},{atom,430,system_info}},
       [{atom,430,break_ignored}]},
      [{clause,431,
        [{atom,431,true}],
        [],
        [{call,432,
          {atom,432,io_request},
          [{tuple,432,
            [{atom,432,put_chars},
             {atom,432,unicode},
             {string,432,"Unknown command\n"}]},
           {var,432,'Iport'},
           {var,432,'Oport'}]},
         {call,433,
          {atom,433,switch_loop},
          [{var,433,'Iport'},{var,433,'Oport'},{var,433,'Gr'}]}]},
       {clause,434,[{atom,434,false}],[],[{call,435,{atom,435,halt},[]}]}]}]},
   {clause,437,
    [{tuple,437,
      [{atom,437,ok},
       {cons,437,
        {tuple,437,[{atom,437,atom},{var,437,'_'},{atom,437,h}]},
        {nil,437}},
       {var,437,'_'}]},
     {var,437,'Iport'},
     {var,437,'Oport'},
     {var,437,'Gr'}],
    [],
    [{call,438,{atom,438,list_commands},[{var,438,'Iport'},{var,438,'Oport'}]},
     {call,439,
      {atom,439,switch_loop},
      [{var,439,'Iport'},{var,439,'Oport'},{var,439,'Gr'}]}]},
   {clause,440,
    [{tuple,440,
      [{atom,440,ok},
       {cons,440,{tuple,440,[{atom,440,'?'},{var,440,'_'}]},{nil,440}},
       {var,440,'_'}]},
     {var,440,'Iport'},
     {var,440,'Oport'},
     {var,440,'Gr'}],
    [],
    [{call,441,{atom,441,list_commands},[{var,441,'Iport'},{var,441,'Oport'}]},
     {call,442,
      {atom,442,switch_loop},
      [{var,442,'Iport'},{var,442,'Oport'},{var,442,'Gr'}]}]},
   {clause,443,
    [{tuple,443,[{atom,443,ok},{nil,443},{var,443,'_'}]},
     {var,443,'Iport'},
     {var,443,'Oport'},
     {var,443,'Gr'}],
    [],
    [{call,444,
      {atom,444,switch_loop},
      [{var,444,'Iport'},{var,444,'Oport'},{var,444,'Gr'}]}]},
   {clause,445,
    [{tuple,445,[{atom,445,ok},{var,445,'_Ts'},{var,445,'_'}]},
     {var,445,'Iport'},
     {var,445,'Oport'},
     {var,445,'Gr'}],
    [],
    [{call,446,
      {atom,446,io_request},
      [{tuple,446,
        [{atom,446,put_chars},
         {atom,446,unicode},
         {string,446,"Unknown command\n"}]},
       {var,446,'Iport'},
       {var,446,'Oport'}]},
     {call,447,
      {atom,447,switch_loop},
      [{var,447,'Iport'},{var,447,'Oport'},{var,447,'Gr'}]}]},
   {clause,448,
    [{var,448,'_Ts'},{var,448,'Iport'},{var,448,'Oport'},{var,448,'Gr'}],
    [],
    [{call,449,
      {atom,449,io_request},
      [{tuple,449,
        [{atom,449,put_chars},
         {atom,449,unicode},
         {string,449,"Illegal input\n"}]},
       {var,449,'Iport'},
       {var,449,'Oport'}]},
     {call,450,
      {atom,450,switch_loop},
      [{var,450,'Iport'},{var,450,'Oport'},{var,450,'Gr'}]}]}]},
 {function,452,unknown_group,3,
  [{clause,452,
    [{var,452,'Iport'},{var,452,'Oport'},{var,452,'Gr'}],
    [],
    [{call,453,
      {atom,453,io_request},
      [{tuple,453,
        [{atom,453,put_chars},
         {atom,453,unicode},
         {string,453,"Unknown job\n"}]},
       {var,453,'Iport'},
       {var,453,'Oport'}]},
     {call,454,
      {atom,454,switch_loop},
      [{var,454,'Iport'},{var,454,'Oport'},{var,454,'Gr'}]}]}]},
 {function,456,list_commands,2,
  [{clause,456,
    [{var,456,'Iport'},{var,456,'Oport'}],
    [],
    [{match,457,
      {var,457,'QuitReq'},
      {'case',457,
       {call,457,
        {remote,457,{atom,457,erlang},{atom,457,system_info}},
        [{atom,457,break_ignored}]},
       [{clause,458,[{atom,458,true}],[],[{nil,459}]},
        {clause,460,
         [{atom,460,false}],
         [],
         [{cons,461,
           {tuple,461,
            [{atom,461,put_chars},
             {atom,461,unicode},
             {string,461,"  q                 - quit erlang\n"}]},
           {nil,461}}]}]}},
     {call,463,
      {atom,463,io_requests},
      [{op,468,'++',
        {cons,463,
         {tuple,463,
          [{atom,463,put_chars},
           {atom,463,unicode},
           {string,463,"  c [nn]            - connect to job\n"}]},
         {cons,464,
          {tuple,464,
           [{atom,464,put_chars},
            {atom,464,unicode},
            {string,464,"  i [nn]            - interrupt job\n"}]},
          {cons,465,
           {tuple,465,
            [{atom,465,put_chars},
             {atom,465,unicode},
             {string,465,"  k [nn]            - kill job\n"}]},
           {cons,466,
            {tuple,466,
             [{atom,466,put_chars},
              {atom,466,unicode},
              {string,466,"  j                 - list all jobs\n"}]},
            {cons,467,
             {tuple,467,
              [{atom,467,put_chars},
               {atom,467,unicode},
               {string,467,"  s [shell]         - start local shell\n"}]},
             {cons,468,
              {tuple,468,
               [{atom,468,put_chars},
                {atom,468,unicode},
                {string,468,"  r [node [shell]]  - start remote shell\n"}]},
              {nil,468}}}}}}},
        {op,469,'++',
         {var,469,'QuitReq'},
         {cons,470,
          {tuple,470,
           [{atom,470,put_chars},
            {atom,470,unicode},
            {string,470,"  ? | h             - this message\n"}]},
          {nil,470}}}},
       {var,471,'Iport'},
       {var,471,'Oport'}]}]}]},
 {function,473,get_line,3,
  [{clause,473,
    [{tuple,473,
      [{atom,473,done},{var,473,'Line'},{var,473,'_Rest'},{var,473,'Rs'}]},
     {var,473,'Iport'},
     {var,473,'Oport'}],
    [],
    [{call,474,
      {atom,474,io_requests},
      [{var,474,'Rs'},{var,474,'Iport'},{var,474,'Oport'}]},
     {var,475,'Line'}]},
   {clause,476,
    [{tuple,476,
      [{atom,476,undefined},
       {var,476,'_Char'},
       {var,476,'Cs'},
       {var,476,'Cont'},
       {var,476,'Rs'}]},
     {var,476,'Iport'},
     {var,476,'Oport'}],
    [],
    [{call,477,
      {atom,477,io_requests},
      [{var,477,'Rs'},{var,477,'Iport'},{var,477,'Oport'}]},
     {call,478,
      {atom,478,io_request},
      [{atom,478,beep},{var,478,'Iport'},{var,478,'Oport'}]},
     {call,479,
      {atom,479,get_line},
      [{call,479,
        {remote,479,{atom,479,edlin},{atom,479,edit_line}},
        [{var,479,'Cs'},{var,479,'Cont'}]},
       {var,479,'Iport'},
       {var,479,'Oport'}]}]},
   {clause,480,
    [{tuple,480,[{var,480,'What'},{var,480,'Cont0'},{var,480,'Rs'}]},
     {var,480,'Iport'},
     {var,480,'Oport'}],
    [],
    [{call,481,
      {atom,481,io_requests},
      [{var,481,'Rs'},{var,481,'Iport'},{var,481,'Oport'}]},
     {'receive',482,
      [{clause,483,
        [{tuple,483,
          [{var,483,'Iport'},{tuple,483,[{atom,483,data},{var,483,'Cs'}]}]}],
        [],
        [{call,484,
          {atom,484,get_line},
          [{call,484,
            {remote,484,{atom,484,edlin},{atom,484,edit_line}},
            [{var,484,'Cs'},{var,484,'Cont0'}]},
           {var,484,'Iport'},
           {var,484,'Oport'}]}]},
       {clause,485,
        [{tuple,485,[{var,485,'Iport'},{atom,485,eof}]}],
        [],
        [{call,486,
          {atom,486,get_line},
          [{call,486,
            {remote,486,{atom,486,edlin},{atom,486,edit_line}},
            [{atom,486,eof},{var,486,'Cont0'}]},
           {var,486,'Iport'},
           {var,486,'Oport'}]}]}],
      {call,488,{atom,488,get_line_timeout},[{var,488,'What'}]},
      [{call,489,
        {atom,489,get_line},
        [{call,489,
          {remote,489,{atom,489,edlin},{atom,489,edit_line}},
          [{nil,489},{var,489,'Cont0'}]},
         {var,489,'Iport'},
         {var,489,'Oport'}]}]}]}]},
 {function,492,get_line_timeout,1,
  [{clause,492,[{atom,492,blink}],[],[{integer,492,1000}]},
   {clause,493,[{atom,493,more_chars}],[],[{atom,493,infinity}]}]},
 {function,497,get_tty_geometry,1,
  [{clause,497,
    [{var,497,'Iport'}],
    [],
    [{'case',498,
      {'catch',498,
       {call,498,
        {atom,498,port_control},
        [{var,498,'Iport'},{integer,35,100},{nil,498}]}},
      [{clause,499,
        [{var,499,'List'}],
        [[{op,499,'=:=',
           {call,499,{atom,499,length},[{var,499,'List'}]},
           {integer,499,8}}]],
        [{match,500,
          {bin,500,
           [{bin_element,500,{var,500,'W'},{integer,500,32},[native]},
            {bin_element,500,{var,500,'H'},{integer,500,32},[native]}]},
          {call,500,{atom,500,list_to_binary},[{var,500,'List'}]}},
         {tuple,501,[{var,501,'W'},{var,501,'H'}]}]},
       {clause,502,[{var,502,'_'}],[],[{atom,503,error}]}]}]}]},
 {function,505,get_unicode_state,1,
  [{clause,505,
    [{var,505,'Iport'}],
    [],
    [{'case',506,
      {'catch',506,
       {call,506,
        {atom,506,port_control},
        [{var,506,'Iport'},{integer,36,101},{nil,506}]}},
      [{clause,507,
        [{cons,507,{var,507,'Int'},{nil,507}}],
        [[{op,507,'>',{var,507,'Int'},{integer,507,0}}]],
        [{atom,508,true}]},
       {clause,509,
        [{cons,509,{var,509,'Int'},{nil,509}}],
        [[{op,509,'=:=',{var,509,'Int'},{integer,509,0}}]],
        [{atom,510,false}]},
       {clause,511,[{var,511,'_'}],[],[{atom,512,error}]}]}]}]},
 {function,515,set_unicode_state,2,
  [{clause,515,
    [{var,515,'Iport'},{var,515,'Bool'}],
    [],
    [{match,516,
      {var,516,'Data'},
      {'case',516,
       {var,516,'Bool'},
       [{clause,517,
         [{atom,517,true}],
         [],
         [{cons,517,{integer,517,1},{nil,517}}]},
        {clause,518,
         [{atom,518,false}],
         [],
         [{cons,518,{integer,518,0},{nil,518}}]}]}},
     {'case',520,
      {'catch',520,
       {call,520,
        {atom,520,port_control},
        [{var,520,'Iport'},{integer,37,102},{var,520,'Data'}]}},
      [{clause,521,
        [{cons,521,{var,521,'Int'},{nil,521}}],
        [[{op,521,'>',{var,521,'Int'},{integer,521,0}}]],
        [{tuple,522,[{atom,522,unicode},{atom,522,utf8}]}]},
       {clause,523,
        [{cons,523,{var,523,'Int'},{nil,523}}],
        [[{op,523,'=:=',{var,523,'Int'},{integer,523,0}}]],
        [{tuple,524,[{atom,524,unicode},{atom,524,false}]}]},
       {clause,525,[{var,525,'_'}],[],[{atom,526,error}]}]}]}]},
 {function,533,io_request,3,
  [{clause,533,
    [{var,533,'Request'},{var,533,'Iport'},{var,533,'Oport'}],
    [],
    [{'try',534,
      [{call,534,{atom,534,io_command},[{var,534,'Request'}]}],
      [{clause,535,
        [{match,535,
          {tuple,535,[{atom,535,command},{var,535,'_'}]},
          {var,535,'Command'}}],
        [],
        [{op,536,'!',
          {var,536,'Oport'},
          {tuple,536,[{call,536,{atom,536,self},[]},{var,536,'Command'}]}},
         {atom,537,ok}]},
       {clause,538,
        [{tuple,538,[{var,538,'Command'},{var,538,'Reply'}]}],
        [],
        [{op,539,'!',
          {var,539,'Oport'},
          {tuple,539,[{call,539,{atom,539,self},[]},{var,539,'Command'}]}},
         {var,540,'Reply'}]}],
      [{clause,542,
        [{tuple,542,
          [{atom,542,throw},
           {tuple,542,[{atom,542,requests},{var,542,'Rs'}]},
           {var,542,'_'}]}],
        [],
        [{call,543,
          {atom,543,io_requests},
          [{var,543,'Rs'},{var,543,'Iport'},{var,543,'Oport'}]}]},
       {clause,544,
        [{tuple,544,[{atom,544,throw},{var,544,'_'},{var,544,'_'}]}],
        [],
        [{atom,545,ok}]}],
      []}]}]},
 {function,548,io_requests,3,
  [{clause,548,
    [{cons,548,{var,548,'R'},{var,548,'Rs'}},
     {var,548,'Iport'},
     {var,548,'Oport'}],
    [],
    [{call,549,
      {atom,549,io_request},
      [{var,549,'R'},{var,549,'Iport'},{var,549,'Oport'}]},
     {call,550,
      {atom,550,io_requests},
      [{var,550,'Rs'},{var,550,'Iport'},{var,550,'Oport'}]}]},
   {clause,551,
    [{nil,551},{var,551,'_Iport'},{var,551,'_Oport'}],
    [],
    [{atom,552,ok}]}]},
 {function,554,put_int16,2,
  [{clause,554,
    [{var,554,'N'},{var,554,'Tail'}],
    [],
    [{cons,555,
      {op,555,'band',
       {op,555,'bsr',{var,555,'N'},{integer,555,8}},
       {integer,555,255}},
      {cons,555,
       {op,555,'band',{var,555,'N'},{integer,555,255}},
       {var,555,'Tail'}}}]}]},
 {function,562,io_command,1,
  [{clause,562,
    [{tuple,562,
      [{atom,562,put_chars_sync},
       {atom,562,unicode},
       {var,562,'Cs'},
       {var,562,'Reply'}]}],
    [],
    [{tuple,563,
      [{tuple,563,
        [{atom,563,command},
         {cons,563,
          {integer,33,5},
          {call,563,
           {remote,563,{atom,563,unicode},{atom,563,characters_to_binary}},
           [{var,563,'Cs'},{atom,563,utf8}]}}]},
       {var,563,'Reply'}]}]},
   {clause,564,
    [{tuple,564,[{atom,564,put_chars},{atom,564,unicode},{var,564,'Cs'}]}],
    [],
    [{tuple,565,
      [{atom,565,command},
       {cons,565,
        {integer,28,0},
        {call,565,
         {remote,565,{atom,565,unicode},{atom,565,characters_to_binary}},
         [{var,565,'Cs'},{atom,565,utf8}]}}]}]},
   {clause,566,
    [{tuple,566,[{atom,566,move_rel},{var,566,'N'}]}],
    [],
    [{tuple,567,
      [{atom,567,command},
       {cons,567,
        {integer,29,1},
        {call,567,{atom,567,put_int16},[{var,567,'N'},{nil,567}]}}]}]},
   {clause,568,
    [{tuple,568,[{atom,568,insert_chars},{atom,568,unicode},{var,568,'Cs'}]}],
    [],
    [{tuple,569,
      [{atom,569,command},
       {cons,569,
        {integer,30,2},
        {call,569,
         {remote,569,{atom,569,unicode},{atom,569,characters_to_binary}},
         [{var,569,'Cs'},{atom,569,utf8}]}}]}]},
   {clause,570,
    [{tuple,570,[{atom,570,delete_chars},{var,570,'N'}]}],
    [],
    [{tuple,571,
      [{atom,571,command},
       {cons,571,
        {integer,31,3},
        {call,571,{atom,571,put_int16},[{var,571,'N'},{nil,571}]}}]}]},
   {clause,572,
    [{atom,572,beep}],
    [],
    [{tuple,573,[{atom,573,command},{cons,573,{integer,32,4},{nil,573}}]}]},
   {clause,574,
    [{var,574,'Else'}],
    [],
    [{call,575,{atom,575,throw},[{var,575,'Else'}]}]}]},
 {function,590,gr_new,0,
  [{clause,590,[],[],
    [{tuple,591,
      [{integer,591,0},{integer,591,0},{atom,591,none},{nil,591}]}]}]},
 {function,593,gr_get_num,2,
  [{clause,593,
    [{tuple,593,
      [{var,593,'_Next'},{var,593,'_CurI'},{var,593,'_CurP'},{var,593,'Gs'}]},
     {var,593,'I'}],
    [],
    [{call,594,{atom,594,gr_get_num1},[{var,594,'Gs'},{var,594,'I'}]}]}]},
 {function,596,gr_get_num1,2,
  [{clause,596,
    [{cons,596,
      {tuple,596,[{var,596,'I'},{var,596,'_Pid'},{tuple,596,[]}]},
      {var,596,'_Gs'}},
     {var,596,'I'}],
    [],
    [{atom,597,undefined}]},
   {clause,598,
    [{cons,598,
      {tuple,598,[{var,598,'I'},{var,598,'Pid'},{var,598,'_S'}]},
      {var,598,'_Gs'}},
     {var,598,'I'}],
    [],
    [{tuple,599,[{atom,599,pid},{var,599,'Pid'}]}]},
   {clause,600,
    [{cons,600,{var,600,'_G'},{var,600,'Gs'}},{var,600,'I'}],
    [],
    [{call,601,{atom,601,gr_get_num1},[{var,601,'Gs'},{var,601,'I'}]}]},
   {clause,602,[{nil,602},{var,602,'_I'}],[],[{atom,603,undefined}]}]},
 {function,605,gr_get_info,2,
  [{clause,605,
    [{tuple,605,
      [{var,605,'_Next'},{var,605,'_CurI'},{var,605,'_CurP'},{var,605,'Gs'}]},
     {var,605,'Pid'}],
    [],
    [{call,606,{atom,606,gr_get_info1},[{var,606,'Gs'},{var,606,'Pid'}]}]}]},
 {function,608,gr_get_info1,2,
  [{clause,608,
    [{cons,608,
      {tuple,608,[{var,608,'I'},{var,608,'Pid'},{var,608,'S'}]},
      {var,608,'_Gs'}},
     {var,608,'Pid'}],
    [],
    [{tuple,609,[{var,609,'I'},{var,609,'S'}]}]},
   {clause,610,
    [{cons,610,{var,610,'_G'},{var,610,'Gs'}},{var,610,'I'}],
    [],
    [{call,611,{atom,611,gr_get_info1},[{var,611,'Gs'},{var,611,'I'}]}]},
   {clause,612,[{nil,612},{var,612,'_I'}],[],[{atom,613,undefined}]}]},
 {function,615,gr_add_cur,3,
  [{clause,615,
    [{tuple,615,
      [{var,615,'Next'},{var,615,'_CurI'},{var,615,'_CurP'},{var,615,'Gs'}]},
     {var,615,'Pid'},
     {var,615,'Shell'}],
    [],
    [{tuple,616,
      [{op,616,'+',{var,616,'Next'},{integer,616,1}},
       {var,616,'Next'},
       {var,616,'Pid'},
       {call,616,
        {atom,616,append},
        [{var,616,'Gs'},
         {cons,616,
          {tuple,616,[{var,616,'Next'},{var,616,'Pid'},{var,616,'Shell'}]},
          {nil,616}}]}]}]}]},
 {function,618,gr_set_cur,2,
  [{clause,618,
    [{tuple,618,
      [{var,618,'Next'},{var,618,'_CurI'},{var,618,'_CurP'},{var,618,'Gs'}]},
     {var,618,'I'}],
    [],
    [{'case',619,
      {call,619,{atom,619,gr_get_num1},[{var,619,'Gs'},{var,619,'I'}]},
      [{clause,620,
        [{tuple,620,[{atom,620,pid},{var,620,'Pid'}]}],
        [],
        [{tuple,620,
          [{atom,620,ok},
           {tuple,620,
            [{var,620,'Next'},
             {var,620,'I'},
             {var,620,'Pid'},
             {var,620,'Gs'}]}]}]},
       {clause,621,[{atom,621,undefined}],[],[{atom,621,undefined}]}]}]}]},
 {function,624,gr_set_num,4,
  [{clause,624,
    [{tuple,624,
      [{var,624,'Next'},{var,624,'CurI'},{var,624,'CurP'},{var,624,'Gs'}]},
     {var,624,'I'},
     {var,624,'Pid'},
     {var,624,'Shell'}],
    [],
    [{tuple,625,
      [{var,625,'Next'},
       {var,625,'CurI'},
       {var,625,'CurP'},
       {call,625,
        {atom,625,gr_set_num1},
        [{var,625,'Gs'},
         {var,625,'I'},
         {var,625,'Pid'},
         {var,625,'Shell'}]}]}]}]},
 {function,627,gr_set_num1,4,
  [{clause,627,
    [{cons,627,
      {tuple,627,[{var,627,'I'},{var,627,'_Pid'},{var,627,'_Shell'}]},
      {var,627,'Gs'}},
     {var,627,'I'},
     {var,627,'NewPid'},
     {var,627,'NewShell'}],
    [],
    [{cons,628,
      {tuple,628,[{var,628,'I'},{var,628,'NewPid'},{var,628,'NewShell'}]},
      {var,628,'Gs'}}]},
   {clause,629,
    [{cons,629,
      {tuple,629,[{var,629,'I'},{var,629,'Pid'},{var,629,'Shell'}]},
      {var,629,'Gs'}},
     {var,629,'NewI'},
     {var,629,'NewPid'},
     {var,629,'NewShell'}],
    [[{op,629,'>',{var,629,'NewI'},{var,629,'I'}}]],
    [{cons,630,
      {tuple,630,[{var,630,'I'},{var,630,'Pid'},{var,630,'Shell'}]},
      {call,630,
       {atom,630,gr_set_num1},
       [{var,630,'Gs'},
        {var,630,'NewI'},
        {var,630,'NewPid'},
        {var,630,'NewShell'}]}}]},
   {clause,631,
    [{var,631,'Gs'},{var,631,'NewI'},{var,631,'NewPid'},{var,631,'NewShell'}],
    [],
    [{cons,632,
      {tuple,632,[{var,632,'NewI'},{var,632,'NewPid'},{var,632,'NewShell'}]},
      {var,632,'Gs'}}]}]},
 {function,634,gr_del_pid,2,
  [{clause,634,
    [{tuple,634,
      [{var,634,'Next'},{var,634,'CurI'},{var,634,'CurP'},{var,634,'Gs'}]},
     {var,634,'Pid'}],
    [],
    [{tuple,635,
      [{var,635,'Next'},
       {var,635,'CurI'},
       {var,635,'CurP'},
       {call,635,
        {atom,635,gr_del_pid1},
        [{var,635,'Gs'},{var,635,'Pid'}]}]}]}]},
 {function,637,gr_del_pid1,2,
  [{clause,637,
    [{cons,637,
      {tuple,637,[{var,637,'_I'},{var,637,'Pid'},{var,637,'_S'}]},
      {var,637,'Gs'}},
     {var,637,'Pid'}],
    [],
    [{var,638,'Gs'}]},
   {clause,639,
    [{cons,639,{var,639,'G'},{var,639,'Gs'}},{var,639,'Pid'}],
    [],
    [{cons,640,
      {var,640,'G'},
      {call,640,{atom,640,gr_del_pid1},[{var,640,'Gs'},{var,640,'Pid'}]}}]},
   {clause,641,[{nil,641},{var,641,'_Pid'}],[],[{nil,642}]}]},
 {function,644,gr_cur_pid,1,
  [{clause,644,
    [{tuple,644,
      [{var,644,'_Next'},{var,644,'_CurI'},{var,644,'CurP'},{var,644,'_Gs'}]}],
    [],
    [{var,645,'CurP'}]}]},
 {function,647,gr_list,1,
  [{clause,647,
    [{tuple,647,
      [{var,647,'_Next'},{var,647,'CurI'},{var,647,'_CurP'},{var,647,'Gs'}]}],
    [],
    [{call,648,
      {atom,648,gr_list},
      [{var,648,'Gs'},{var,648,'CurI'},{nil,648}]}]}]},
 {function,650,gr_list,3,
  [{clause,650,
    [{cons,650,
      {tuple,650,[{var,650,'_I'},{var,650,'_Pid'},{tuple,650,[]}]},
      {var,650,'Gs'}},
     {var,650,'Cur'},
     {var,650,'Jobs'}],
    [],
    [{call,651,
      {atom,651,gr_list},
      [{var,651,'Gs'},{var,651,'Cur'},{var,651,'Jobs'}]}]},
   {clause,652,
    [{cons,652,
      {tuple,652,[{var,652,'Cur'},{var,652,'_Pid'},{var,652,'Shell'}]},
      {var,652,'Gs'}},
     {var,652,'Cur'},
     {var,652,'Jobs'}],
    [],
    [{call,653,
      {atom,653,gr_list},
      [{var,653,'Gs'},
       {var,653,'Cur'},
       {cons,653,
        {tuple,653,
         [{atom,653,put_chars},
          {atom,653,unicode},
          {call,653,
           {atom,653,flatten},
           [{call,653,
             {remote,653,{atom,653,io_lib},{atom,653,format}},
             [{string,653,"~4w* ~w\n"},
              {cons,653,
               {var,653,'Cur'},
               {cons,653,{var,653,'Shell'},{nil,653}}}]}]}]},
        {var,653,'Jobs'}}]}]},
   {clause,654,
    [{cons,654,
      {tuple,654,[{var,654,'I'},{var,654,'_Pid'},{var,654,'Shell'}]},
      {var,654,'Gs'}},
     {var,654,'Cur'},
     {var,654,'Jobs'}],
    [],
    [{call,655,
      {atom,655,gr_list},
      [{var,655,'Gs'},
       {var,655,'Cur'},
       {cons,655,
        {tuple,655,
         [{atom,655,put_chars},
          {atom,655,unicode},
          {call,655,
           {atom,655,flatten},
           [{call,655,
             {remote,655,{atom,655,io_lib},{atom,655,format}},
             [{string,655,"~4w  ~w\n"},
              {cons,655,
               {var,655,'I'},
               {cons,655,{var,655,'Shell'},{nil,655}}}]}]}]},
        {var,655,'Jobs'}}]}]},
   {clause,656,
    [{nil,656},{var,656,'_Cur'},{var,656,'Jobs'}],
    [],
    [{call,657,
      {remote,657,{atom,657,lists},{atom,657,reverse}},
      [{var,657,'Jobs'}]}]}]},
 {function,659,append,2,
  [{clause,659,
    [{cons,659,{var,659,'H'},{var,659,'T'}},{var,659,'X'}],
    [],
    [{cons,660,
      {var,660,'H'},
      {call,660,{atom,660,append},[{var,660,'T'},{var,660,'X'}]}}]},
   {clause,661,[{nil,661},{var,661,'X'}],[],[{var,662,'X'}]}]},
 {function,664,member,2,
  [{clause,664,
    [{var,664,'X'},{cons,664,{var,664,'X'},{var,664,'_Rest'}}],
    [],
    [{atom,664,true}]},
   {clause,665,
    [{var,665,'X'},{cons,665,{var,665,'_H'},{var,665,'Rest'}}],
    [],
    [{call,666,{atom,666,member},[{var,666,'X'},{var,666,'Rest'}]}]},
   {clause,667,[{var,667,'_X'},{nil,667}],[],[{atom,667,false}]}]},
 {function,669,flatten,1,
  [{clause,669,
    [{var,669,'List'}],
    [],
    [{call,670,{atom,670,flatten},[{var,670,'List'},{nil,670},{nil,670}]}]}]},
 {function,672,flatten,3,
  [{clause,672,
    [{cons,672,{var,672,'H'},{var,672,'T'}},{var,672,'Cont'},{var,672,'Tail'}],
    [[{call,672,{atom,672,is_list},[{var,672,'H'}]}]],
    [{call,673,
      {atom,673,flatten},
      [{var,673,'H'},
       {cons,673,{var,673,'T'},{var,673,'Cont'}},
       {var,673,'Tail'}]}]},
   {clause,674,
    [{cons,674,{var,674,'H'},{var,674,'T'}},{var,674,'Cont'},{var,674,'Tail'}],
    [],
    [{cons,675,
      {var,675,'H'},
      {call,675,
       {atom,675,flatten},
       [{var,675,'T'},{var,675,'Cont'},{var,675,'Tail'}]}}]},
   {clause,676,
    [{nil,676},{cons,676,{var,676,'H'},{var,676,'Cont'}},{var,676,'Tail'}],
    [],
    [{call,677,
      {atom,677,flatten},
      [{var,677,'H'},{var,677,'Cont'},{var,677,'Tail'}]}]},
   {clause,678,
    [{nil,678},{nil,678},{var,678,'Tail'}],
    [],
    [{var,679,'Tail'}]}]}]
