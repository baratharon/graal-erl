proplists
[]
[]
[{function,71,property,1,
  [{clause,71,
    [{tuple,71,[{var,71,'Key'},{atom,71,true}]}],
    [[{call,71,{atom,71,is_atom},[{var,71,'Key'}]}]],
    [{var,72,'Key'}]},
   {clause,73,[{var,73,'Property'}],[],[{var,74,'Property'}]}]},
 {function,89,property,2,
  [{clause,89,
    [{var,89,'Key'},{atom,89,true}],
    [[{call,89,{atom,89,is_atom},[{var,89,'Key'}]}]],
    [{var,90,'Key'}]},
   {clause,91,
    [{var,91,'Key'},{var,91,'Value'}],
    [],
    [{tuple,92,[{var,92,'Key'},{var,92,'Value'}]}]}]},
 {function,106,unfold,1,
  [{clause,106,
    [{cons,106,{var,106,'P'},{var,106,'Ps'}}],
    [],
    [{'if',107,
      [{clause,107,[],
        [[{call,107,{atom,107,is_atom},[{var,107,'P'}]}]],
        [{cons,108,
          {tuple,108,[{var,108,'P'},{atom,108,true}]},
          {call,108,{atom,108,unfold},[{var,108,'Ps'}]}}]},
       {clause,109,[],
        [[{atom,109,true}]],
        [{cons,110,
          {var,110,'P'},
          {call,110,{atom,110,unfold},[{var,110,'Ps'}]}}]}]}]},
   {clause,112,[{nil,112}],[],[{nil,113}]}]},
 {function,125,compact,1,
  [{clause,125,
    [{var,125,'ListIn'}],
    [],
    [{lc,126,
      {call,126,{atom,126,property},[{var,126,'P'}]},
      [{generate,126,{var,126,'P'},{var,126,'ListIn'}}]}]}]},
 {function,144,lookup,2,
  [{clause,144,
    [{var,144,'Key'},{cons,144,{var,144,'P'},{var,144,'Ps'}}],
    [],
    [{'if',145,
      [{clause,145,[],
        [[{call,145,{atom,145,is_atom},[{var,145,'P'}]},
          {op,145,'=:=',{var,145,'P'},{var,145,'Key'}}]],
        [{tuple,146,[{var,146,'Key'},{atom,146,true}]}]},
       {clause,147,[],
        [[{op,147,'>=',
           {call,147,{atom,147,tuple_size},[{var,147,'P'}]},
           {integer,147,1}},
          {op,147,'=:=',
           {call,147,{atom,147,element},[{integer,147,1},{var,147,'P'}]},
           {var,147,'Key'}}]],
        [{var,149,'P'}]},
       {clause,150,[],
        [[{atom,150,true}]],
        [{call,151,{atom,151,lookup},[{var,151,'Key'},{var,151,'Ps'}]}]}]}]},
   {clause,153,[{var,153,'_Key'},{nil,153}],[],[{atom,154,none}]}]},
 {function,166,lookup_all,2,
  [{clause,166,
    [{var,166,'Key'},{cons,166,{var,166,'P'},{var,166,'Ps'}}],
    [],
    [{'if',167,
      [{clause,167,[],
        [[{call,167,{atom,167,is_atom},[{var,167,'P'}]},
          {op,167,'=:=',{var,167,'P'},{var,167,'Key'}}]],
        [{cons,168,
          {tuple,168,[{var,168,'Key'},{atom,168,true}]},
          {call,168,{atom,168,lookup_all},[{var,168,'Key'},{var,168,'Ps'}]}}]},
       {clause,169,[],
        [[{op,169,'>=',
           {call,169,{atom,169,tuple_size},[{var,169,'P'}]},
           {integer,169,1}},
          {op,169,'=:=',
           {call,169,{atom,169,element},[{integer,169,1},{var,169,'P'}]},
           {var,169,'Key'}}]],
        [{cons,170,
          {var,170,'P'},
          {call,170,{atom,170,lookup_all},[{var,170,'Key'},{var,170,'Ps'}]}}]},
       {clause,171,[],
        [[{atom,171,true}]],
        [{call,172,
          {atom,172,lookup_all},
          [{var,172,'Key'},{var,172,'Ps'}]}]}]}]},
   {clause,174,[{var,174,'_Key'},{nil,174}],[],[{nil,175}]}]},
 {function,188,is_defined,2,
  [{clause,188,
    [{var,188,'Key'},{cons,188,{var,188,'P'},{var,188,'Ps'}}],
    [],
    [{'if',189,
      [{clause,189,[],
        [[{call,189,{atom,189,is_atom},[{var,189,'P'}]},
          {op,189,'=:=',{var,189,'P'},{var,189,'Key'}}]],
        [{atom,190,true}]},
       {clause,191,[],
        [[{op,191,'>=',
           {call,191,{atom,191,tuple_size},[{var,191,'P'}]},
           {integer,191,1}},
          {op,191,'=:=',
           {call,191,{atom,191,element},[{integer,191,1},{var,191,'P'}]},
           {var,191,'Key'}}]],
        [{atom,192,true}]},
       {clause,193,[],
        [[{atom,193,true}]],
        [{call,194,
          {atom,194,is_defined},
          [{var,194,'Key'},{var,194,'Ps'}]}]}]}]},
   {clause,196,[{var,196,'_Key'},{nil,196}],[],[{atom,197,false}]}]},
 {function,208,get_value,2,
  [{clause,208,
    [{var,208,'Key'},{var,208,'List'}],
    [],
    [{call,209,
      {atom,209,get_value},
      [{var,209,'Key'},{var,209,'List'},{atom,209,undefined}]}]}]},
 {function,226,get_value,3,
  [{clause,226,
    [{var,226,'Key'},
     {cons,226,{var,226,'P'},{var,226,'Ps'}},
     {var,226,'Default'}],
    [],
    [{'if',227,
      [{clause,227,[],
        [[{call,227,{atom,227,is_atom},[{var,227,'P'}]},
          {op,227,'=:=',{var,227,'P'},{var,227,'Key'}}]],
        [{atom,228,true}]},
       {clause,229,[],
        [[{op,229,'>=',
           {call,229,{atom,229,tuple_size},[{var,229,'P'}]},
           {integer,229,1}},
          {op,229,'=:=',
           {call,229,{atom,229,element},[{integer,229,1},{var,229,'P'}]},
           {var,229,'Key'}}]],
        [{'case',230,
          {var,230,'P'},
          [{clause,231,
            [{tuple,231,[{var,231,'_'},{var,231,'Value'}]}],
            [],
            [{var,232,'Value'}]},
           {clause,233,[{var,233,'_'}],[],[{var,235,'Default'}]}]}]},
       {clause,237,[],
        [[{atom,237,true}]],
        [{call,238,
          {atom,238,get_value},
          [{var,238,'Key'},{var,238,'Ps'},{var,238,'Default'}]}]}]}]},
   {clause,240,
    [{var,240,'_Key'},{nil,240},{var,240,'Default'}],
    [],
    [{var,241,'Default'}]}]},
 {function,254,get_all_values,2,
  [{clause,254,
    [{var,254,'Key'},{cons,254,{var,254,'P'},{var,254,'Ps'}}],
    [],
    [{'if',255,
      [{clause,255,[],
        [[{call,255,{atom,255,is_atom},[{var,255,'P'}]},
          {op,255,'=:=',{var,255,'P'},{var,255,'Key'}}]],
        [{cons,256,
          {atom,256,true},
          {call,256,
           {atom,256,get_all_values},
           [{var,256,'Key'},{var,256,'Ps'}]}}]},
       {clause,257,[],
        [[{op,257,'>=',
           {call,257,{atom,257,tuple_size},[{var,257,'P'}]},
           {integer,257,1}},
          {op,257,'=:=',
           {call,257,{atom,257,element},[{integer,257,1},{var,257,'P'}]},
           {var,257,'Key'}}]],
        [{'case',258,
          {var,258,'P'},
          [{clause,259,
            [{tuple,259,[{var,259,'_'},{var,259,'Value'}]}],
            [],
            [{cons,260,
              {var,260,'Value'},
              {call,260,
               {atom,260,get_all_values},
               [{var,260,'Key'},{var,260,'Ps'}]}}]},
           {clause,261,
            [{var,261,'_'}],
            [],
            [{call,262,
              {atom,262,get_all_values},
              [{var,262,'Key'},{var,262,'Ps'}]}]}]}]},
       {clause,264,[],
        [[{atom,264,true}]],
        [{call,265,
          {atom,265,get_all_values},
          [{var,265,'Key'},{var,265,'Ps'}]}]}]}]},
   {clause,267,[{var,267,'_Key'},{nil,267}],[],[{nil,268}]}]},
 {function,284,append_values,2,
  [{clause,284,
    [{var,284,'Key'},{cons,284,{var,284,'P'},{var,284,'Ps'}}],
    [],
    [{'if',285,
      [{clause,285,[],
        [[{call,285,{atom,285,is_atom},[{var,285,'P'}]},
          {op,285,'=:=',{var,285,'P'},{var,285,'Key'}}]],
        [{cons,286,
          {atom,286,true},
          {call,286,
           {atom,286,append_values},
           [{var,286,'Key'},{var,286,'Ps'}]}}]},
       {clause,287,[],
        [[{op,287,'>=',
           {call,287,{atom,287,tuple_size},[{var,287,'P'}]},
           {integer,287,1}},
          {op,287,'=:=',
           {call,287,{atom,287,element},[{integer,287,1},{var,287,'P'}]},
           {var,287,'Key'}}]],
        [{'case',288,
          {var,288,'P'},
          [{clause,289,
            [{tuple,289,[{var,289,'_'},{var,289,'Value'}]}],
            [[{call,289,{atom,289,is_list},[{var,289,'Value'}]}]],
            [{op,290,'++',
              {var,290,'Value'},
              {call,290,
               {atom,290,append_values},
               [{var,290,'Key'},{var,290,'Ps'}]}}]},
           {clause,291,
            [{tuple,291,[{var,291,'_'},{var,291,'Value'}]}],
            [],
            [{cons,292,
              {var,292,'Value'},
              {call,292,
               {atom,292,append_values},
               [{var,292,'Key'},{var,292,'Ps'}]}}]},
           {clause,293,
            [{var,293,'_'}],
            [],
            [{call,294,
              {atom,294,append_values},
              [{var,294,'Key'},{var,294,'Ps'}]}]}]}]},
       {clause,296,[],
        [[{atom,296,true}]],
        [{call,297,
          {atom,297,append_values},
          [{var,297,'Key'},{var,297,'Ps'}]}]}]}]},
   {clause,299,[{var,299,'_Key'},{nil,299}],[],[{nil,300}]}]},
 {function,317,get_bool,2,
  [{clause,317,
    [{var,317,'Key'},{cons,317,{var,317,'P'},{var,317,'Ps'}}],
    [],
    [{'if',318,
      [{clause,318,[],
        [[{call,318,{atom,318,is_atom},[{var,318,'P'}]},
          {op,318,'=:=',{var,318,'P'},{var,318,'Key'}}]],
        [{atom,319,true}]},
       {clause,320,[],
        [[{op,320,'>=',
           {call,320,{atom,320,tuple_size},[{var,320,'P'}]},
           {integer,320,1}},
          {op,320,'=:=',
           {call,320,{atom,320,element},[{integer,320,1},{var,320,'P'}]},
           {var,320,'Key'}}]],
        [{'case',321,
          {var,321,'P'},
          [{clause,322,
            [{tuple,322,[{var,322,'_'},{atom,322,true}]}],
            [],
            [{atom,323,true}]},
           {clause,324,[{var,324,'_'}],[],[{atom,326,false}]}]}]},
       {clause,328,[],
        [[{atom,328,true}]],
        [{call,329,{atom,329,get_bool},[{var,329,'Key'},{var,329,'Ps'}]}]}]}]},
   {clause,331,[{var,331,'_Key'},{nil,331}],[],[{atom,332,false}]}]},
 {function,343,get_keys,1,
  [{clause,343,
    [{var,343,'Ps'}],
    [],
    [{call,344,
      {remote,344,{atom,344,sets},{atom,344,to_list}},
      [{call,344,
        {atom,344,get_keys},
        [{var,344,'Ps'},
         {call,344,{remote,344,{atom,344,sets},{atom,344,new}},[]}]}]}]}]},
 {function,346,get_keys,2,
  [{clause,346,
    [{cons,346,{var,346,'P'},{var,346,'Ps'}},{var,346,'Keys'}],
    [],
    [{'if',347,
      [{clause,347,[],
        [[{call,347,{atom,347,is_atom},[{var,347,'P'}]}]],
        [{call,348,
          {atom,348,get_keys},
          [{var,348,'Ps'},
           {call,348,
            {remote,348,{atom,348,sets},{atom,348,add_element}},
            [{var,348,'P'},{var,348,'Keys'}]}]}]},
       {clause,349,[],
        [[{op,349,'>=',
           {call,349,{atom,349,tuple_size},[{var,349,'P'}]},
           {integer,349,1}}]],
        [{call,350,
          {atom,350,get_keys},
          [{var,350,'Ps'},
           {call,350,
            {remote,350,{atom,350,sets},{atom,350,add_element}},
            [{call,350,{atom,350,element},[{integer,350,1},{var,350,'P'}]},
             {var,350,'Keys'}]}]}]},
       {clause,351,[],
        [[{atom,351,true}]],
        [{call,352,
          {atom,352,get_keys},
          [{var,352,'Ps'},{var,352,'Keys'}]}]}]}]},
   {clause,354,[{nil,354},{var,354,'Keys'}],[],[{var,355,'Keys'}]}]},
 {function,367,delete,2,
  [{clause,367,
    [{var,367,'Key'},{cons,367,{var,367,'P'},{var,367,'Ps'}}],
    [],
    [{'if',368,
      [{clause,368,[],
        [[{call,368,{atom,368,is_atom},[{var,368,'P'}]},
          {op,368,'=:=',{var,368,'P'},{var,368,'Key'}}]],
        [{call,369,{atom,369,delete},[{var,369,'Key'},{var,369,'Ps'}]}]},
       {clause,370,[],
        [[{op,370,'>=',
           {call,370,{atom,370,tuple_size},[{var,370,'P'}]},
           {integer,370,1}},
          {op,370,'=:=',
           {call,370,{atom,370,element},[{integer,370,1},{var,370,'P'}]},
           {var,370,'Key'}}]],
        [{call,371,{atom,371,delete},[{var,371,'Key'},{var,371,'Ps'}]}]},
       {clause,372,[],
        [[{atom,372,true}]],
        [{cons,373,
          {var,373,'P'},
          {call,373,{atom,373,delete},[{var,373,'Key'},{var,373,'Ps'}]}}]}]}]},
   {clause,375,[{var,375,'_'},{nil,375}],[],[{nil,376}]}]},
 {function,402,substitute_aliases,2,
  [{clause,402,
    [{var,402,'As'},{var,402,'Props'}],
    [],
    [{lc,403,
      {call,403,
       {atom,403,substitute_aliases_1},
       [{var,403,'As'},{var,403,'P'}]},
      [{generate,403,{var,403,'P'},{var,403,'Props'}}]}]}]},
 {function,405,substitute_aliases_1,2,
  [{clause,405,
    [{cons,405,{tuple,405,[{var,405,'Key'},{var,405,'Key1'}]},{var,405,'As'}},
     {var,405,'P'}],
    [],
    [{'if',406,
      [{clause,406,[],
        [[{call,406,{atom,406,is_atom},[{var,406,'P'}]},
          {op,406,'=:=',{var,406,'P'},{var,406,'Key'}}]],
        [{call,407,{atom,407,property},[{var,407,'Key1'},{atom,407,true}]}]},
       {clause,408,[],
        [[{op,408,'>=',
           {call,408,{atom,408,tuple_size},[{var,408,'P'}]},
           {integer,408,1}},
          {op,408,'=:=',
           {call,408,{atom,408,element},[{integer,408,1},{var,408,'P'}]},
           {var,408,'Key'}}]],
        [{call,409,
          {atom,409,property},
          [{call,409,
            {atom,409,setelement},
            [{integer,409,1},{var,409,'P'},{var,409,'Key1'}]}]}]},
       {clause,410,[],
        [[{atom,410,true}]],
        [{call,411,
          {atom,411,substitute_aliases_1},
          [{var,411,'As'},{var,411,'P'}]}]}]}]},
   {clause,413,[{nil,413},{var,413,'P'}],[],[{var,414,'P'}]}]},
 {function,446,substitute_negations,2,
  [{clause,446,
    [{var,446,'As'},{var,446,'Props'}],
    [],
    [{lc,447,
      {call,447,
       {atom,447,substitute_negations_1},
       [{var,447,'As'},{var,447,'P'}]},
      [{generate,447,{var,447,'P'},{var,447,'Props'}}]}]}]},
 {function,449,substitute_negations_1,2,
  [{clause,449,
    [{cons,449,{tuple,449,[{var,449,'Key'},{var,449,'Key1'}]},{var,449,'As'}},
     {var,449,'P'}],
    [],
    [{'if',450,
      [{clause,450,[],
        [[{call,450,{atom,450,is_atom},[{var,450,'P'}]},
          {op,450,'=:=',{var,450,'P'},{var,450,'Key'}}]],
        [{call,451,{atom,451,property},[{var,451,'Key1'},{atom,451,false}]}]},
       {clause,452,[],
        [[{op,452,'>=',
           {call,452,{atom,452,tuple_size},[{var,452,'P'}]},
           {integer,452,1}},
          {op,452,'=:=',
           {call,452,{atom,452,element},[{integer,452,1},{var,452,'P'}]},
           {var,452,'Key'}}]],
        [{'case',453,
          {var,453,'P'},
          [{clause,454,
            [{tuple,454,[{var,454,'_'},{atom,454,true}]}],
            [],
            [{call,455,
              {atom,455,property},
              [{var,455,'Key1'},{atom,455,false}]}]},
           {clause,456,
            [{tuple,456,[{var,456,'_'},{atom,456,false}]}],
            [],
            [{call,457,
              {atom,457,property},
              [{var,457,'Key1'},{atom,457,true}]}]},
           {clause,458,
            [{var,458,'_'}],
            [],
            [{call,462,
              {atom,462,property},
              [{var,462,'Key1'},{atom,462,true}]}]}]}]},
       {clause,464,[],
        [[{atom,464,true}]],
        [{call,465,
          {atom,465,substitute_negations_1},
          [{var,465,'As'},{var,465,'P'}]}]}]}]},
   {clause,467,[{nil,467},{var,467,'P'}],[],[{var,468,'P'}]}]},
 {function,512,expand,2,
  [{clause,512,
    [{var,512,'Es'},{var,512,'Ps'}],
    [[{call,512,{atom,512,is_list},[{var,512,'Ps'}]}]],
    [{match,513,
      {var,513,'Es1'},
      {lc,513,
       {tuple,513,
        [{call,513,{atom,513,property},[{var,513,'P'}]},{var,513,'V'}]},
       [{generate,513,
         {tuple,513,[{var,513,'P'},{var,513,'V'}]},
         {var,513,'Es'}}]}},
     {call,514,
      {atom,514,flatten},
      [{call,514,
        {atom,514,expand_0},
        [{call,514,{atom,514,key_uniq},[{var,514,'Es1'}]},
         {var,514,'Ps'}]}]}]}]},
 {function,521,expand_0,2,
  [{clause,521,
    [{cons,521,{tuple,521,[{var,521,'P'},{var,521,'L'}]},{var,521,'Es'}},
     {var,521,'Ps'}],
    [],
    [{call,522,
      {atom,522,expand_0},
      [{var,522,'Es'},
       {call,522,
        {atom,522,expand_1},
        [{var,522,'P'},{var,522,'L'},{var,522,'Ps'}]}]}]},
   {clause,523,[{nil,523},{var,523,'Ps'}],[],[{var,524,'Ps'}]}]},
 {function,526,expand_1,3,
  [{clause,526,
    [{var,526,'P'},{var,526,'L'},{var,526,'Ps'}],
    [],
    [{'if',529,
      [{clause,529,[],
        [[{call,529,{atom,529,is_atom},[{var,529,'P'}]}]],
        [{call,530,
          {atom,530,expand_2},
          [{var,530,'P'},{var,530,'P'},{var,530,'L'},{var,530,'Ps'}]}]},
       {clause,531,[],
        [[{op,531,'>=',
           {call,531,{atom,531,tuple_size},[{var,531,'P'}]},
           {integer,531,1}}]],
        [{call,532,
          {atom,532,expand_2},
          [{call,532,{atom,532,element},[{integer,532,1},{var,532,'P'}]},
           {var,532,'P'},
           {var,532,'L'},
           {var,532,'Ps'}]}]},
       {clause,533,[],[[{atom,533,true}]],[{var,534,'Ps'}]}]}]}]},
 {function,537,expand_2,4,
  [{clause,537,
    [{var,537,'Key'},
     {var,537,'P1'},
     {var,537,'L'},
     {cons,537,{var,537,'P'},{var,537,'Ps'}}],
    [],
    [{'if',538,
      [{clause,538,[],
        [[{call,538,{atom,538,is_atom},[{var,538,'P'}]},
          {op,538,'=:=',{var,538,'P'},{var,538,'Key'}}]],
        [{call,539,
          {atom,539,expand_3},
          [{var,539,'Key'},
           {var,539,'P1'},
           {var,539,'P'},
           {var,539,'L'},
           {var,539,'Ps'}]}]},
       {clause,540,[],
        [[{op,540,'>=',
           {call,540,{atom,540,tuple_size},[{var,540,'P'}]},
           {integer,540,1}},
          {op,540,'=:=',
           {call,540,{atom,540,element},[{integer,540,1},{var,540,'P'}]},
           {var,540,'Key'}}]],
        [{call,541,
          {atom,541,expand_3},
          [{var,541,'Key'},
           {var,541,'P1'},
           {call,541,{atom,541,property},[{var,541,'P'}]},
           {var,541,'L'},
           {var,541,'Ps'}]}]},
       {clause,542,[],
        [[{atom,542,true}]],
        [{cons,546,
          {var,546,'P'},
          {call,546,
           {atom,546,expand_2},
           [{var,546,'Key'},
            {var,546,'P1'},
            {var,546,'L'},
            {var,546,'Ps'}]}}]}]}]},
   {clause,548,
    [{var,548,'_'},{var,548,'_'},{var,548,'_'},{nil,548}],
    [],
    [{nil,549}]}]},
 {function,551,expand_3,5,
  [{clause,551,
    [{var,551,'Key'},
     {var,551,'P1'},
     {var,551,'P'},
     {var,551,'L'},
     {var,551,'Ps'}],
    [],
    [{'if',556,
      [{clause,556,[],
        [[{op,556,'=:=',{var,556,'P1'},{var,556,'P'}}]],
        [{cons,557,
          {var,557,'L'},
          {call,557,{atom,557,delete},[{var,557,'Key'},{var,557,'Ps'}]}}]},
       {clause,558,[],
        [[{atom,558,true}]],
        [{cons,560,{var,560,'P'},{var,560,'Ps'}}]}]}]}]},
 {function,563,key_uniq,1,
  [{clause,563,
    [{cons,563,{tuple,563,[{var,563,'K'},{var,563,'V'}]},{var,563,'Ps'}}],
    [],
    [{cons,564,
      {tuple,564,[{var,564,'K'},{var,564,'V'}]},
      {call,564,{atom,564,key_uniq_1},[{var,564,'K'},{var,564,'Ps'}]}}]},
   {clause,565,[{nil,565}],[],[{nil,566}]}]},
 {function,568,key_uniq_1,2,
  [{clause,568,
    [{var,568,'K'},
     {cons,568,{tuple,568,[{var,568,'K1'},{var,568,'V'}]},{var,568,'Ps'}}],
    [],
    [{'if',569,
      [{clause,569,[],
        [[{op,569,'=:=',{var,569,'K'},{var,569,'K1'}}]],
        [{call,570,{atom,570,key_uniq_1},[{var,570,'K'},{var,570,'Ps'}]}]},
       {clause,571,[],
        [[{atom,571,true}]],
        [{cons,572,
          {tuple,572,[{var,572,'K1'},{var,572,'V'}]},
          {call,572,
           {atom,572,key_uniq_1},
           [{var,572,'K1'},{var,572,'Ps'}]}}]}]}]},
   {clause,574,[{var,574,'_'},{nil,574}],[],[{nil,575}]}]},
 {function,579,flatten,1,
  [{clause,579,
    [{cons,579,{var,579,'E'},{var,579,'Es'}}],
    [[{call,579,{atom,579,is_list},[{var,579,'E'}]}]],
    [{op,580,'++',
      {var,580,'E'},
      {call,580,{atom,580,flatten},[{var,580,'Es'}]}}]},
   {clause,581,
    [{cons,581,{var,581,'E'},{var,581,'Es'}}],
    [],
    [{cons,582,{var,582,'E'},{call,582,{atom,582,flatten},[{var,582,'Es'}]}}]},
   {clause,583,[{nil,583}],[],[{nil,584}]}]},
 {function,621,normalize,2,
  [{clause,621,
    [{var,621,'L'},
     {cons,621,
      {tuple,621,[{atom,621,aliases},{var,621,'As'}]},
      {var,621,'Xs'}}],
    [],
    [{call,622,
      {atom,622,normalize},
      [{call,622,{atom,622,substitute_aliases},[{var,622,'As'},{var,622,'L'}]},
       {var,622,'Xs'}]}]},
   {clause,623,
    [{var,623,'L'},
     {cons,623,{tuple,623,[{atom,623,expand},{var,623,'Es'}]},{var,623,'Xs'}}],
    [],
    [{call,624,
      {atom,624,normalize},
      [{call,624,{atom,624,expand},[{var,624,'Es'},{var,624,'L'}]},
       {var,624,'Xs'}]}]},
   {clause,625,
    [{var,625,'L'},
     {cons,625,
      {tuple,625,[{atom,625,negations},{var,625,'Ns'}]},
      {var,625,'Xs'}}],
    [],
    [{call,626,
      {atom,626,normalize},
      [{call,626,
        {atom,626,substitute_negations},
        [{var,626,'Ns'},{var,626,'L'}]},
       {var,626,'Xs'}]}]},
   {clause,627,
    [{var,627,'L'},{nil,627}],
    [],
    [{call,628,{atom,628,compact},[{var,628,'L'}]}]}]},
 {function,652,split,2,
  [{clause,652,
    [{var,652,'List'},{var,652,'Keys'}],
    [],
    [{match,653,
      {tuple,653,[{var,653,'Store'},{var,653,'Rest'}]},
      {call,653,
       {atom,653,split},
       [{var,653,'List'},
        {call,653,
         {remote,653,{atom,653,dict},{atom,653,from_list}},
         [{lc,653,
           {tuple,653,[{var,653,'K'},{nil,653}]},
           [{generate,653,{var,653,'K'},{var,653,'Keys'}}]}]},
        {nil,653}]}},
     {tuple,654,
      [{lc,654,
        {call,654,
         {remote,654,{atom,654,lists},{atom,654,reverse}},
         [{call,654,
           {remote,654,{atom,654,dict},{atom,654,fetch}},
           [{var,654,'K'},{var,654,'Store'}]}]},
        [{generate,654,{var,654,'K'},{var,654,'Keys'}}]},
       {call,655,
        {remote,655,{atom,655,lists},{atom,655,reverse}},
        [{var,655,'Rest'}]}]}]}]},
 {function,657,split,3,
  [{clause,657,
    [{cons,657,{var,657,'P'},{var,657,'Ps'}},
     {var,657,'Store'},
     {var,657,'Rest'}],
    [],
    [{'if',658,
      [{clause,658,[],
        [[{call,658,{atom,658,is_atom},[{var,658,'P'}]}]],
        [{'case',659,
          {call,659,
           {remote,659,{atom,659,dict},{atom,659,is_key}},
           [{var,659,'P'},{var,659,'Store'}]},
          [{clause,660,
            [{atom,660,true}],
            [],
            [{call,661,
              {atom,661,split},
              [{var,661,'Ps'},
               {call,661,
                {atom,661,dict_prepend},
                [{var,661,'P'},{var,661,'P'},{var,661,'Store'}]},
               {var,661,'Rest'}]}]},
           {clause,662,
            [{atom,662,false}],
            [],
            [{call,663,
              {atom,663,split},
              [{var,663,'Ps'},
               {var,663,'Store'},
               {cons,663,{var,663,'P'},{var,663,'Rest'}}]}]}]}]},
       {clause,665,[],
        [[{op,665,'>=',
           {call,665,{atom,665,tuple_size},[{var,665,'P'}]},
           {integer,665,1}}]],
        [{match,667,
          {var,667,'Key'},
          {call,667,{atom,667,element},[{integer,667,1},{var,667,'P'}]}},
         {'case',668,
          {call,668,
           {remote,668,{atom,668,dict},{atom,668,is_key}},
           [{var,668,'Key'},{var,668,'Store'}]},
          [{clause,669,
            [{atom,669,true}],
            [],
            [{call,670,
              {atom,670,split},
              [{var,670,'Ps'},
               {call,670,
                {atom,670,dict_prepend},
                [{var,670,'Key'},{var,670,'P'},{var,670,'Store'}]},
               {var,670,'Rest'}]}]},
           {clause,671,
            [{atom,671,false}],
            [],
            [{call,672,
              {atom,672,split},
              [{var,672,'Ps'},
               {var,672,'Store'},
               {cons,672,{var,672,'P'},{var,672,'Rest'}}]}]}]}]},
       {clause,674,[],
        [[{atom,674,true}]],
        [{call,675,
          {atom,675,split},
          [{var,675,'Ps'},
           {var,675,'Store'},
           {cons,675,{var,675,'P'},{var,675,'Rest'}}]}]}]}]},
   {clause,677,
    [{nil,677},{var,677,'Store'},{var,677,'Rest'}],
    [],
    [{tuple,678,[{var,678,'Store'},{var,678,'Rest'}]}]}]},
 {function,680,dict_prepend,3,
  [{clause,680,
    [{var,680,'Key'},{var,680,'Val'},{var,680,'Dict'}],
    [],
    [{call,681,
      {remote,681,{atom,681,dict},{atom,681,store}},
      [{var,681,'Key'},
       {cons,681,
        {var,681,'Val'},
        {call,681,
         {remote,681,{atom,681,dict},{atom,681,fetch}},
         [{var,681,'Key'},{var,681,'Dict'}]}},
       {var,681,'Dict'}]}]}]}]
