dist_util
[{error_logger,error_msg,2}]
[]
[{function,77,remove_flag,2,
  [{clause,77,
    [{var,77,'Flag'},{var,77,'Flags'}],
    [],
    [{'case',78,
      {op,78,'band',{var,78,'Flags'},{var,78,'Flag'}},
      [{clause,79,[{integer,79,0}],[],[{var,80,'Flags'}]},
       {clause,81,
        [{var,81,'_'}],
        [],
        [{op,82,'-',{var,82,'Flags'},{var,82,'Flag'}}]}]}]}]},
 {function,85,adjust_flags,2,
  [{clause,85,
    [{var,85,'ThisFlags'},{var,85,'OtherFlags'}],
    [],
    [{'case',86,
      {op,86,'band',
       {op,86,'band',{integer,25,1},{var,86,'ThisFlags'}},
       {var,86,'OtherFlags'}},
      [{clause,87,
        [{integer,87,0}],
        [],
        [{tuple,88,
          [{call,88,
            {atom,88,remove_flag},
            [{integer,25,1},{var,88,'ThisFlags'}]},
           {call,89,
            {atom,89,remove_flag},
            [{integer,25,1},{var,89,'OtherFlags'}]}]}]},
       {clause,90,
        [{var,90,'_'}],
        [],
        [{tuple,91,[{var,91,'ThisFlags'},{var,91,'OtherFlags'}]}]}]}]}]},
 {function,94,publish_flag,2,
  [{clause,94,[{atom,94,hidden},{var,94,'_'}],[],[{integer,95,0}]},
   {clause,96,
    [{var,96,'_'},{var,96,'OtherNode'}],
    [],
    [{'case',97,
      {call,97,
       {remote,97,{atom,97,net_kernel},{atom,97,publish_on_node}},
       [{var,97,'OtherNode'}]},
      [{clause,98,[{atom,98,true}],[],[{integer,25,1}]},
       {clause,100,[{var,100,'_'}],[],[{integer,101,0}]}]}]}]},
 {function,104,make_this_flags,2,
  [{clause,104,
    [{var,104,'RequestType'},{var,104,'OtherNode'}],
    [],
    [{op,105,'bor',
      {call,105,
       {atom,105,publish_flag},
       [{var,105,'RequestType'},{var,105,'OtherNode'}]},
      {op,120,'bor',
       {op,119,'bor',
        {op,118,'bor',
         {op,117,'bor',
          {op,116,'bor',
           {op,115,'bor',
            {op,114,'bor',
             {op,113,'bor',
              {op,112,'bor',
               {op,111,'bor',
                {op,110,'bor',
                 {op,109,'bor',
                  {op,108,'bor',
                   {op,107,'bor',{integer,34,512},{integer,33,256}},
                   {integer,27,4}},
                  {integer,28,8}},
                 {integer,29,16}},
                {integer,30,32}},
               {integer,31,64}},
              {integer,32,128}},
             {integer,35,1024}},
            {integer,36,2048}},
           {integer,37,4096}},
          {integer,38,8192}},
         {integer,39,16384}},
        {integer,40,65536}},
       {integer,41,131072}}}]}]},
 {function,123,handshake_other_started,1,
  [{clause,123,
    [{match,123,
      {tuple,123,
       [{atom,123,hs_data},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'_'},
        {var,123,'ReqType'}]},
      {var,123,'HSData0'}}],
    [],
    [{match,124,
      {tuple,124,
       [{var,124,'PreOtherFlags'},{var,124,'Node'},{var,124,'Version'}]},
      {call,124,{atom,124,recv_name},[{var,124,'HSData0'}]}},
     {match,125,
      {var,125,'PreThisFlags'},
      {call,125,
       {atom,125,make_this_flags},
       [{var,125,'ReqType'},{var,125,'Node'}]}},
     {match,126,
      {tuple,126,[{var,126,'ThisFlags'},{var,126,'OtherFlags'}]},
      {call,126,
       {atom,126,adjust_flags},
       [{var,126,'PreThisFlags'},{var,127,'PreOtherFlags'}]}},
     {match,128,
      {var,128,'HSData'},
      {call,128,
       {remote,128,{atom,128,erlang},{atom,128,setelement}},
       [{integer,128,11},
        {call,128,
         {remote,128,{atom,128,erlang},{atom,128,setelement}},
         [{integer,128,3},
          {call,128,
           {remote,128,{atom,128,erlang},{atom,128,setelement}},
           [{integer,128,9},
            {call,128,
             {remote,128,{atom,128,erlang},{atom,128,setelement}},
             [{integer,128,10},
              {call,128,
               {remote,128,{atom,128,erlang},{atom,128,setelement}},
               [{integer,128,7},{var,128,'HSData0'},{var,128,'ThisFlags'}]},
              {var,129,'OtherFlags'}]},
            {var,130,'Version'}]},
          {var,131,'Node'}]},
        {atom,132,true}]}},
     {call,133,{atom,133,check_dflag_xnc},[{var,133,'HSData'}]},
     {call,134,{atom,134,is_allowed},[{var,134,'HSData'}]},
     {atom,28,ok},
     {call,137,{atom,137,mark_pending},[{var,137,'HSData'}]},
     {match,138,
      {tuple,138,[{var,138,'MyCookie'},{var,138,'HisCookie'}]},
      {call,138,{atom,138,get_cookies},[{var,138,'Node'}]}},
     {match,139,{var,139,'ChallengeA'},{call,139,{atom,139,gen_challenge},[]}},
     {call,140,
      {atom,140,send_challenge},
      [{var,140,'HSData'},{var,140,'ChallengeA'}]},
     {call,141,
      {atom,141,reset_timer},
      [{call,141,
        {remote,141,{atom,141,erlang},{atom,141,element}},
        [{integer,141,6},{var,141,'HSData'}]}]},
     {match,142,
      {var,142,'ChallengeB'},
      {call,142,
       {atom,142,recv_challenge_reply},
       [{var,142,'HSData'},{var,142,'ChallengeA'},{var,142,'MyCookie'}]}},
     {call,143,
      {atom,143,send_challenge_ack},
      [{var,143,'HSData'},
       {call,143,
        {atom,143,gen_digest},
        [{var,143,'ChallengeB'},{var,143,'HisCookie'}]}]},
     {atom,28,ok},
     {call,145,{atom,145,connection},[{var,145,'HSData'}]}]}]},
 {function,151,is_allowed,1,
  [{clause,151,
    [{match,152,
      {tuple,151,
       [{atom,151,hs_data},
        {var,151,'_'},
        {var,151,'Node'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'},
        {var,152,'Allowed'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'},
        {var,151,'_'}]},
      {var,152,'HSData'}}],
    [],
    [{'case',153,
      {call,153,
       {remote,153,{atom,153,lists},{atom,153,member}},
       [{var,153,'Node'},{var,153,'Allowed'}]},
      [{clause,154,
        [{atom,154,false}],
        [[{op,154,'=/=',{var,154,'Allowed'},{nil,154}}]],
        [{call,155,
          {atom,155,send_status},
          [{var,155,'HSData'},{atom,155,not_allowed}]},
         {call,156,
          {atom,156,error_msg},
          [{string,156,"** Connection attempt from disallowed node ~w ** ~n"},
           {cons,157,{var,157,'Node'},{nil,157}}]},
         {call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{var,158,'Node'}]}]},
       {clause,159,[{var,159,'_'}],[],[{atom,159,true}]}]}]}]},
 {function,166,check_dflag_xnc,1,
  [{clause,166,
    [{match,168,
      {tuple,166,
       [{atom,166,hs_data},
        {var,166,'_'},
        {var,166,'Node'},
        {var,166,'_'},
        {var,166,'_'},
        {var,166,'_'},
        {var,166,'_'},
        {var,166,'_'},
        {var,166,'_'},
        {var,167,'OtherFlags'},
        {var,168,'OtherStarted'},
        {var,166,'_'},
        {var,166,'_'},
        {var,166,'_'},
        {var,166,'_'},
        {var,166,'_'},
        {var,166,'_'},
        {var,166,'_'},
        {var,166,'_'},
        {var,166,'_'}]},
      {var,168,'HSData'}}],
    [],
    [{match,169,{var,169,'XRFlg'},{integer,27,4}},
     {match,170,
      {var,170,'XPPFlg'},
      {'case',170,
       {call,170,
        {remote,170,{atom,170,erlang},{atom,170,system_info}},
        [{atom,170,compat_rel}]},
       [{clause,171,
         [{var,171,'R'}],
         [[{op,171,'>=',{var,171,'R'},{integer,171,10}}]],
         [{integer,33,256}]},
        {clause,173,[{var,173,'_'}],[],[{integer,174,0}]}]}},
     {match,176,
      {var,176,'ReqXncFlags'},
      {op,176,'bor',{var,176,'XRFlg'},{var,176,'XPPFlg'}}},
     {'case',177,
      {op,177,'=:=',
       {op,177,'band',{var,177,'OtherFlags'},{var,177,'ReqXncFlags'}},
       {var,177,'ReqXncFlags'}},
      [{clause,178,[{atom,178,true}],[],[{atom,179,ok}]},
       {clause,180,
        [{atom,180,false}],
        [],
        [{match,181,
          {var,181,'What'},
          {'case',181,
           {tuple,181,
            [{op,181,'=:=',
              {op,181,'band',{var,181,'OtherFlags'},{var,181,'XRFlg'}},
              {var,181,'XRFlg'}},
             {op,182,'=:=',
              {op,182,'band',{var,182,'OtherFlags'},{var,182,'XPPFlg'}},
              {var,182,'XPPFlg'}}]},
           [{clause,183,
             [{tuple,183,[{atom,183,false},{atom,183,false}]}],
             [],
             [{string,183,"references, pids and ports"}]},
            {clause,184,
             [{tuple,184,[{atom,184,true},{atom,184,false}]}],
             [],
             [{string,184,"pids and ports"}]},
            {clause,185,
             [{tuple,185,[{atom,185,false},{atom,185,true}]}],
             [],
             [{string,185,"references"}]}]}},
         {'case',187,
          {var,187,'OtherStarted'},
          [{clause,188,
            [{atom,188,true}],
            [],
            [{call,189,
              {atom,189,send_status},
              [{var,189,'HSData'},{atom,189,not_allowed}]},
             {match,190,{var,190,'Dir'},{string,190,"from"}},
             {match,191,{var,191,'How'},{string,191,"rejected"}}]},
           {clause,192,
            [{var,192,'_'}],
            [],
            [{match,193,{var,193,'Dir'},{string,193,"to"}},
             {match,194,{var,194,'How'},{string,194,"aborted"}}]}]},
         {call,196,
          {atom,196,error_msg},
          [{string,196,
            "** ~w: Connection attempt ~s node ~w ~s since it cannot handle extended ~s. **~n"},
           {cons,198,
            {call,198,{atom,198,node},[]},
            {cons,198,
             {var,198,'Dir'},
             {cons,198,
              {var,198,'Node'},
              {cons,198,
               {var,198,'How'},
               {cons,198,{var,198,'What'},{nil,198}}}}}}]},
         {call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{var,199,'Node'}]}]}]}]}]},
 {function,206,mark_pending,1,
  [{clause,206,
    [{match,208,
      {tuple,206,
       [{atom,206,hs_data},
        {var,206,'Kernel'},
        {var,207,'Node'},
        {var,208,'MyNode'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'},
        {var,206,'_'}]},
      {var,208,'HSData'}}],
    [],
    [{'case',209,
      {call,209,
       {atom,209,do_mark_pending},
       [{var,209,'Kernel'},
        {var,209,'MyNode'},
        {var,209,'Node'},
        {call,210,
         {call,210,
          {remote,210,{atom,210,erlang},{atom,210,element}},
          [{integer,210,17},{var,210,'HSData'}]},
         [{call,210,
           {remote,210,{atom,210,erlang},{atom,210,element}},
           [{integer,210,5},{var,210,'HSData'}]},
          {var,211,'Node'}]},
        {call,212,
         {remote,212,{atom,212,erlang},{atom,212,element}},
         [{integer,212,10},{var,212,'HSData'}]}]},
      [{clause,213,
        [{atom,213,ok}],
        [],
        [{call,214,{atom,214,send_status},[{var,214,'HSData'},{atom,214,ok}]},
         {call,215,
          {atom,215,reset_timer},
          [{call,215,
            {remote,215,{atom,215,erlang},{atom,215,element}},
            [{integer,215,6},{var,215,'HSData'}]}]}]},
       {clause,217,
        [{atom,217,ok_pending}],
        [],
        [{call,218,
          {atom,218,send_status},
          [{var,218,'HSData'},{atom,218,ok_simultaneous}]},
         {call,219,
          {atom,219,reset_timer},
          [{call,219,
            {remote,219,{atom,219,erlang},{atom,219,element}},
            [{integer,219,6},{var,219,'HSData'}]}]}]},
       {clause,221,
        [{atom,221,nok_pending}],
        [],
        [{call,222,{atom,222,send_status},[{var,222,'HSData'},{atom,222,nok}]},
         {call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{var,223,'Node'}]}]},
       {clause,225,
        [{atom,225,up_pending}],
        [],
        [{call,229,{atom,229,do_alive},[{var,229,'HSData'}]},
         {call,234,{atom,234,wait_pending},[{var,234,'Kernel'}]},
         {call,235,
          {atom,235,reset_timer},
          [{call,235,
            {remote,235,{atom,235,erlang},{atom,235,element}},
            [{integer,235,6},{var,235,'HSData'}]}]}]},
       {clause,237,
        [{atom,237,already_pending}],
        [],
        [{atom,28,ok},
         {call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{var,240,'Node'}]}]}]}]}]},
 {function,249,wait_pending,1,
  [{clause,249,
    [{var,249,'Kernel'}],
    [],
    [{'receive',250,
      [{clause,251,
        [{tuple,251,[{var,251,'Kernel'},{atom,251,pending}]}],
        [],
        [{atom,37,ok},{atom,254,ok}]}]}]}]},
 {function,257,do_alive,1,
  [{clause,257,
    [{match,257,
      {tuple,257,
       [{atom,257,hs_data},
        {var,257,'_'},
        {var,257,'Node'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'}]},
      {var,257,'HSData'}}],
    [],
    [{call,258,{atom,258,send_status},[{var,258,'HSData'},{atom,258,alive}]},
     {'case',259,
      {call,259,{atom,259,recv_status},[{var,259,'HSData'}]},
      [{clause,260,[{atom,260,true}],[],[{atom,260,true}]},
       {clause,261,
        [{atom,261,false}],
        [],
        [{call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{var,261,'Node'}]}]}]}]}]},
 {function,264,do_mark_pending,5,
  [{clause,264,
    [{var,264,'Kernel'},
     {var,264,'MyNode'},
     {var,264,'Node'},
     {var,264,'Address'},
     {var,264,'Flags'}],
    [],
    [{op,265,'!',
      {var,265,'Kernel'},
      {tuple,265,
       [{call,265,{atom,265,self},[]},
        {tuple,265,
         [{atom,265,accept_pending},
          {var,265,'MyNode'},
          {var,265,'Node'},
          {var,265,'Address'},
          {call,266,{atom,266,publish_type},[{var,266,'Flags'}]}]}]}},
     {'receive',267,
      [{clause,268,
        [{tuple,268,
          [{var,268,'Kernel'},
           {tuple,268,[{atom,268,accept_pending},{var,268,'Ret'}]}]}],
        [],
        [{atom,37,ok},{var,271,'Ret'}]}]}]}]},
 {function,274,is_pending,2,
  [{clause,274,
    [{var,274,'Kernel'},{var,274,'Node'}],
    [],
    [{op,275,'!',
      {var,275,'Kernel'},
      {tuple,275,
       [{call,275,{atom,275,self},[]},
        {tuple,275,[{atom,275,is_pending},{var,275,'Node'}]}]}},
     {'receive',276,
      [{clause,277,
        [{tuple,277,
          [{var,277,'Kernel'},
           {tuple,277,[{atom,277,is_pending},{var,277,'Reply'}]}]}],
        [],
        [{var,277,'Reply'}]}]}]}]},
 {function,289,shutdown,3,
  [{clause,289,
    [{var,289,'Module'},{var,289,'Line'},{var,289,'Data'}],
    [],
    [{call,290,
      {atom,290,shutdown},
      [{var,290,'Module'},
       {var,290,'Line'},
       {var,290,'Data'},
       {atom,290,shutdown}]}]}]},
 {function,294,shutdown,4,
  [{clause,294,
    [{var,294,'_Module'},
     {var,294,'_Line'},
     {var,294,'_Data'},
     {var,294,'Reason'}],
    [],
    [{atom,42,noop},
     {call,298,{atom,298,flush_down},[]},
     {call,299,{atom,299,exit},[{var,299,'Reason'}]}]}]},
 {function,305,flush_down,0,
  [{clause,305,[],[],
    [{'receive',306,
      [{clause,307,
        [{tuple,307,[{var,307,'From'},{atom,307,get_status}]}],
        [],
        [{op,308,'!',
          {var,308,'From'},
          {tuple,308,
           [{call,308,{atom,308,self},[]},
            {atom,308,get_status},
            {atom,308,error}]}},
         {call,309,{atom,309,flush_down},[]}]}],
      {integer,310,0},
      [{atom,311,ok}]}]}]},
 {function,314,handshake_we_started,1,
  [{clause,314,
    [{match,315,
      {tuple,314,
       [{atom,314,hs_data},
        {var,314,'_'},
        {var,315,'Node'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'_'},
        {var,314,'ReqType'}]},
      {var,315,'PreHSData'}}],
    [],
    [{match,316,
      {var,316,'PreThisFlags'},
      {call,316,
       {atom,316,make_this_flags},
       [{var,316,'ReqType'},{var,316,'Node'}]}},
     {match,317,
      {var,317,'HSData'},
      {call,317,
       {remote,317,{atom,317,erlang},{atom,317,setelement}},
       [{integer,317,7},{var,317,'PreHSData'},{var,317,'PreThisFlags'}]}},
     {call,318,{atom,318,send_name},[{var,318,'HSData'}]},
     {call,319,{atom,319,recv_status},[{var,319,'HSData'}]},
     {match,320,
      {tuple,320,[{var,320,'PreOtherFlags'},{var,320,'ChallengeA'}]},
      {call,320,{atom,320,recv_challenge},[{var,320,'HSData'}]}},
     {match,321,
      {tuple,321,[{var,321,'ThisFlags'},{var,321,'OtherFlags'}]},
      {call,321,
       {atom,321,adjust_flags},
       [{var,321,'PreThisFlags'},{var,321,'PreOtherFlags'}]}},
     {match,322,
      {var,322,'NewHSData'},
      {call,322,
       {remote,322,{atom,322,erlang},{atom,322,setelement}},
       [{integer,322,11},
        {call,322,
         {remote,322,{atom,322,erlang},{atom,322,setelement}},
         [{integer,322,10},
          {call,322,
           {remote,322,{atom,322,erlang},{atom,322,setelement}},
           [{integer,322,7},{var,322,'HSData'},{var,322,'ThisFlags'}]},
          {var,323,'OtherFlags'}]},
        {atom,324,false}]}},
     {call,325,{atom,325,check_dflag_xnc},[{var,325,'NewHSData'}]},
     {match,326,
      {var,326,'MyChallenge'},
      {call,326,{atom,326,gen_challenge},[]}},
     {match,327,
      {tuple,327,[{var,327,'MyCookie'},{var,327,'HisCookie'}]},
      {call,327,{atom,327,get_cookies},[{var,327,'Node'}]}},
     {call,328,
      {atom,328,send_challenge_reply},
      [{var,328,'NewHSData'},
       {var,328,'MyChallenge'},
       {call,329,
        {atom,329,gen_digest},
        [{var,329,'ChallengeA'},{var,329,'HisCookie'}]}]},
     {call,330,
      {atom,330,reset_timer},
      [{call,330,
        {remote,330,{atom,330,erlang},{atom,330,element}},
        [{integer,330,6},{var,330,'NewHSData'}]}]},
     {call,331,
      {atom,331,recv_challenge_ack},
      [{var,331,'NewHSData'},{var,331,'MyChallenge'},{var,331,'MyCookie'}]},
     {call,332,{atom,332,connection},[{var,332,'NewHSData'}]}]}]},
 {function,338,connection,1,
  [{clause,338,
    [{match,342,
      {tuple,338,
       [{atom,338,hs_data},
        {var,338,'_'},
        {var,338,'Node'},
        {var,338,'_'},
        {var,339,'Socket'},
        {var,338,'_'},
        {var,338,'_'},
        {var,338,'_'},
        {var,338,'_'},
        {var,338,'_'},
        {var,338,'_'},
        {var,338,'_'},
        {var,338,'_'},
        {var,341,'FPreNodeup'},
        {var,342,'FPostNodeup'},
        {var,338,'_'},
        {var,340,'FAddress'},
        {var,338,'_'},
        {var,338,'_'},
        {var,338,'_'}]},
      {var,342,'HSData'}}],
    [],
    [{call,343,
      {atom,343,cancel_timer},
      [{call,343,
        {remote,343,{atom,343,erlang},{atom,343,element}},
        [{integer,343,6},{var,343,'HSData'}]}]},
     {match,344,
      {var,344,'PType'},
      {call,344,
       {atom,344,publish_type},
       [{call,344,
         {remote,344,{atom,344,erlang},{atom,344,element}},
         [{integer,344,10},{var,344,'HSData'}]}]}},
     {'case',345,
      {call,345,{var,345,'FPreNodeup'},[{var,345,'Socket'}]},
      [{clause,346,
        [{atom,346,ok}],
        [],
        [{call,347,{atom,347,do_setnode},[{var,347,'HSData'}]},
         {match,348,
          {var,348,'Address'},
          {call,348,
           {var,348,'FAddress'},
           [{var,348,'Socket'},{var,348,'Node'}]}},
         {call,349,
          {atom,349,mark_nodeup},
          [{var,349,'HSData'},{var,349,'Address'}]},
         {'case',350,
          {call,350,{var,350,'FPostNodeup'},[{var,350,'Socket'}]},
          [{clause,351,
            [{atom,351,ok}],
            [],
            [{call,352,
              {atom,352,con_loop},
              [{call,352,
                {remote,352,{atom,352,erlang},{atom,352,element}},
                [{integer,352,2},{var,352,'HSData'}]},
               {var,353,'Node'},
               {var,354,'Socket'},
               {var,355,'Address'},
               {call,356,
                {remote,356,{atom,356,erlang},{atom,356,element}},
                [{integer,356,4},{var,356,'HSData'}]},
               {var,357,'PType'},
               {tuple,358,
                [{atom,358,tick},
                 {integer,71,0},
                 {integer,72,0},
                 {integer,73,0},
                 {integer,74,0}]},
               {call,359,
                {remote,359,{atom,359,erlang},{atom,359,element}},
                [{integer,359,18},{var,359,'HSData'}]},
               {call,360,
                {remote,360,{atom,360,erlang},{atom,360,element}},
                [{integer,360,19},{var,360,'HSData'}]}]}]},
           {clause,361,
            [{var,361,'_'}],
            [],
            [{call,42,
              {remote,42,{atom,42,dist_util},{atom,42,shutdown}},
              [{atom,-1,dist_util},
               {integer,42,42},
               {var,362,'Node'},
               {atom,362,connection_setup_failed}]}]}]}]},
       {clause,364,
        [{var,364,'_'}],
        [],
        [{call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{var,365,'Node'}]}]}]}]}]},
 {function,369,gen_digest,2,
  [{clause,369,
    [{var,369,'Challenge'},{var,369,'Cookie'}],
    [[{call,369,{atom,369,is_integer},[{var,369,'Challenge'}]},
      {call,369,{atom,369,is_atom},[{var,369,'Cookie'}]}]],
    [{call,370,
      {remote,370,{atom,370,erlang},{atom,370,md5}},
      [{cons,370,
        {call,370,{atom,370,atom_to_list},[{var,370,'Cookie'}]},
        {call,370,{atom,370,integer_to_list},[{var,370,'Challenge'}]}}]}]}]},
 {function,376,gen_challenge,0,
  [{clause,376,[],[],
    [{match,377,
      {var,377,'A'},
      {call,377,
       {remote,377,{atom,377,erlang},{atom,377,phash2}},
       [{cons,377,
         {call,377,{remote,377,{atom,377,erlang},{atom,377,node}},[]},
         {nil,377}}]}},
     {match,378,
      {var,378,'B'},
      {call,378,{remote,378,{atom,378,erlang},{atom,378,monotonic_time}},[]}},
     {match,379,
      {var,379,'C'},
      {call,379,{remote,379,{atom,379,erlang},{atom,379,unique_integer}},[]}},
     {match,380,
      {tuple,380,[{var,380,'D'},{var,380,'_'}]},
      {call,380,
       {remote,380,{atom,380,erlang},{atom,380,statistics}},
       [{atom,380,reductions}]}},
     {match,381,
      {tuple,381,[{var,381,'E'},{var,381,'_'}]},
      {call,381,
       {remote,381,{atom,381,erlang},{atom,381,statistics}},
       [{atom,381,runtime}]}},
     {match,382,
      {tuple,382,[{var,382,'F'},{var,382,'_'}]},
      {call,382,
       {remote,382,{atom,382,erlang},{atom,382,statistics}},
       [{atom,382,wall_clock}]}},
     {match,383,
      {tuple,383,[{var,383,'G'},{var,383,'H'},{var,383,'_'}]},
      {call,383,
       {remote,383,{atom,383,erlang},{atom,383,statistics}},
       [{atom,383,garbage_collection}]}},
     {op,388,'band',
      {op,387,'bxor',
       {op,386,'bxor',
        {op,386,'+',
         {op,386,'+',
          {op,386,'+',
           {op,386,'bsl',{var,386,'A'},{integer,386,24}},
           {op,386,'bsl',{var,386,'E'},{integer,386,16}}},
          {op,386,'bsl',{var,386,'G'},{integer,386,8}}},
         {var,386,'F'}},
        {op,387,'+',
         {var,387,'B'},
         {op,387,'bsl',{var,387,'C'},{integer,387,16}}}},
       {op,388,'+',
        {var,388,'D'},
        {op,388,'bsl',{var,388,'H'},{integer,388,16}}}},
      {integer,388,4294967295}}]}]},
 {function,393,get_cookies,1,
  [{clause,393,
    [{var,393,'Node'}],
    [],
    [{'case',394,
      {call,394,
       {remote,394,{atom,394,auth},{atom,394,get_cookie}},
       [{var,394,'Node'}]},
      [{clause,395,
        [{var,395,'X'}],
        [[{call,395,{atom,395,is_atom},[{var,395,'X'}]}]],
        [{tuple,396,[{var,396,'X'},{var,396,'X'}]}]}]}]}]},
 {function,404,do_setnode,1,
  [{clause,404,
    [{tuple,404,
      [{atom,404,hs_data},
       {var,404,'_'},
       {var,404,'Node'},
       {var,404,'_'},
       {var,404,'Socket'},
       {var,404,'_'},
       {var,404,'_'},
       {var,404,'_'},
       {var,405,'Version'},
       {var,405,'Flags'},
       {var,404,'_'},
       {var,404,'_'},
       {var,404,'_'},
       {var,404,'_'},
       {var,404,'_'},
       {var,406,'GetLL'},
       {var,404,'_'},
       {var,404,'_'},
       {var,404,'_'},
       {var,404,'_'}]}],
    [],
    [{'case',407,
      {call,407,{var,407,'GetLL'},[{var,407,'Socket'}]},
      [{clause,408,
        [{tuple,408,[{atom,408,ok},{var,408,'Port'}]}],
        [],
        [{atom,37,ok},
         {'case',413,
          {'catch',413,
           {call,414,
            {remote,414,{atom,414,erlang},{atom,414,setnode}},
            [{var,414,'Node'},
             {var,414,'Port'},
             {tuple,415,
              [{var,415,'Flags'},
               {var,415,'Version'},
               {atom,415,''},
               {atom,415,''}]}]}},
          [{clause,416,
            [{tuple,416,
              [{atom,416,'EXIT'},
               {tuple,416,[{atom,416,system_limit},{var,416,'_'}]}]}],
            [],
            [{call,417,
              {atom,417,error_msg},
              [{string,417,
                "** Distribution system limit reached, no table space left for node ~w ** ~n"},
               {cons,419,{var,419,'Node'},{nil,419}}]},
             {call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,dist_util},{integer,41,41},{var,420,'Node'}]}]},
           {clause,421,
            [{tuple,421,[{atom,421,'EXIT'},{var,421,'Other'}]}],
            [],
            [{call,422,{atom,422,exit},[{var,422,'Other'}]}]},
           {clause,423,[{var,423,'_Else'}],[],[{atom,424,ok}]}]}]},
       {clause,426,
        [{var,426,'_'}],
        [],
        [{call,427,
          {atom,427,error_msg},
          [{string,427,
            "** Distribution connection error, could not get low level port for node ~w ** ~n"},
           {cons,429,{var,429,'Node'},{nil,429}}]},
         {call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{var,430,'Node'}]}]}]}]}]},
 {function,433,mark_nodeup,2,
  [{clause,433,
    [{tuple,433,
      [{atom,433,hs_data},
       {var,433,'Kernel'},
       {var,434,'Node'},
       {var,433,'_'},
       {var,433,'_'},
       {var,433,'_'},
       {var,433,'_'},
       {var,433,'_'},
       {var,433,'_'},
       {var,435,'Flags'},
       {var,436,'OtherStarted'},
       {var,433,'_'},
       {var,433,'_'},
       {var,433,'_'},
       {var,433,'_'},
       {var,433,'_'},
       {var,433,'_'},
       {var,433,'_'},
       {var,433,'_'},
       {var,433,'_'}]},
     {var,437,'Address'}],
    [],
    [{op,438,'!',
      {var,438,'Kernel'},
      {tuple,438,
       [{call,438,{atom,438,self},[]},
        {tuple,438,
         [{atom,438,nodeup},
          {var,438,'Node'},
          {var,438,'Address'},
          {call,438,{atom,438,publish_type},[{var,438,'Flags'}]},
          {atom,439,true}]}]}},
     {'receive',440,
      [{clause,441,
        [{tuple,441,[{var,441,'Kernel'},{atom,441,inserted}]}],
        [],
        [{atom,442,ok}]},
       {clause,443,
        [{tuple,443,[{var,443,'Kernel'},{atom,443,bad_request}]}],
        [],
        [{match,444,
          {var,444,'TypeT'},
          {'case',444,
           {var,444,'OtherStarted'},
           [{clause,445,
             [{atom,445,true}],
             [],
             [{string,446,"accepting connection"}]},
            {clause,447,
             [{var,447,'_'}],
             [],
             [{string,448,"initiating connection"}]}]}},
         {call,450,
          {atom,450,error_msg},
          [{string,450,
            "Fatal: ~p was not allowed to send {nodeup, ~p} to kernel when ~s~n"},
           {cons,452,
            {call,452,{atom,452,self},[]},
            {cons,452,
             {var,452,'Node'},
             {cons,452,{var,452,'TypeT'},{nil,452}}}}]},
         {call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{var,453,'Node'}]}]}]}]}]},
 {function,456,con_loop,9,
  [{clause,456,
    [{var,456,'Kernel'},
     {var,456,'Node'},
     {var,456,'Socket'},
     {var,456,'TcpAddress'},
     {var,457,'MyNode'},
     {var,457,'Type'},
     {var,457,'Tick'},
     {var,457,'MFTick'},
     {var,457,'MFGetstat'}],
    [],
    [{'receive',458,
      [{clause,459,
        [{tuple,459,[{atom,459,tcp_closed},{var,459,'Socket'}]}],
        [],
        [{call,42,
          {remote,42,{atom,42,dist_util},{atom,42,shutdown}},
          [{atom,-1,dist_util},
           {integer,42,42},
           {var,460,'Node'},
           {atom,460,connection_closed}]}]},
       {clause,461,
        [{tuple,461,[{var,461,'Kernel'},{atom,461,disconnect}]}],
        [],
        [{call,42,
          {remote,42,{atom,42,dist_util},{atom,42,shutdown}},
          [{atom,-1,dist_util},
           {integer,42,42},
           {var,462,'Node'},
           {atom,462,disconnected}]}]},
       {clause,463,
        [{tuple,463,[{var,463,'Kernel'},{atom,463,aux_tick}]}],
        [],
        [{'case',464,
          {call,464,{var,464,'MFGetstat'},[{var,464,'Socket'}]},
          [{clause,465,
            [{tuple,465,
              [{atom,465,ok},
               {var,465,'_'},
               {var,465,'_'},
               {var,465,'PendWrite'}]}],
            [],
            [{call,466,
              {atom,466,send_tick},
              [{var,466,'Socket'},{var,466,'PendWrite'},{var,466,'MFTick'}]}]},
           {clause,467,[{var,467,'_'}],[],[{atom,468,ignore_it}]}]},
         {call,470,
          {atom,470,con_loop},
          [{var,470,'Kernel'},
           {var,470,'Node'},
           {var,470,'Socket'},
           {var,470,'TcpAddress'},
           {var,470,'MyNode'},
           {var,470,'Type'},
           {var,471,'Tick'},
           {var,471,'MFTick'},
           {var,471,'MFGetstat'}]}]},
       {clause,472,
        [{tuple,472,[{var,472,'Kernel'},{atom,472,tick}]}],
        [],
        [{'case',473,
          {call,473,
           {atom,473,send_tick},
           [{var,473,'Socket'},
            {var,473,'Tick'},
            {var,473,'Type'},
            {var,474,'MFTick'},
            {var,474,'MFGetstat'}]},
          [{clause,475,
            [{tuple,475,[{atom,475,ok},{var,475,'NewTick'}]}],
            [],
            [{call,476,
              {atom,476,con_loop},
              [{var,476,'Kernel'},
               {var,476,'Node'},
               {var,476,'Socket'},
               {var,476,'TcpAddress'},
               {var,477,'MyNode'},
               {var,477,'Type'},
               {var,477,'NewTick'},
               {var,477,'MFTick'},
               {var,478,'MFGetstat'}]}]},
           {clause,479,
            [{tuple,479,[{atom,479,error},{atom,479,not_responding}]}],
            [],
            [{call,480,
              {atom,480,error_msg},
              [{string,480,
                "** Node ~p not responding **~n** Removing (timedout) connection **~n"},
               {cons,482,{var,482,'Node'},{nil,482}}]},
             {call,42,
              {remote,42,{atom,42,dist_util},{atom,42,shutdown}},
              [{atom,-1,dist_util},
               {integer,42,42},
               {var,483,'Node'},
               {atom,483,net_tick_timeout}]}]},
           {clause,484,
            [{var,484,'_Other'}],
            [],
            [{call,42,
              {remote,42,{atom,42,dist_util},{atom,42,shutdown}},
              [{atom,-1,dist_util},
               {integer,42,42},
               {var,485,'Node'},
               {atom,485,send_net_tick_failed}]}]}]}]},
       {clause,487,
        [{tuple,487,[{var,487,'From'},{atom,487,get_status}]}],
        [],
        [{'case',488,
          {call,488,{var,488,'MFGetstat'},[{var,488,'Socket'}]},
          [{clause,489,
            [{tuple,489,
              [{atom,489,ok},
               {var,489,'Read'},
               {var,489,'Write'},
               {var,489,'_'}]}],
            [],
            [{op,490,'!',
              {var,490,'From'},
              {tuple,490,
               [{call,490,{atom,490,self},[]},
                {atom,490,get_status},
                {tuple,490,
                 [{atom,490,ok},{var,490,'Read'},{var,490,'Write'}]}]}},
             {call,491,
              {atom,491,con_loop},
              [{var,491,'Kernel'},
               {var,491,'Node'},
               {var,491,'Socket'},
               {var,491,'TcpAddress'},
               {var,492,'MyNode'},
               {var,493,'Type'},
               {var,493,'Tick'},
               {var,494,'MFTick'},
               {var,494,'MFGetstat'}]}]},
           {clause,495,
            [{var,495,'_'}],
            [],
            [{call,42,
              {remote,42,{atom,42,dist_util},{atom,42,shutdown}},
              [{atom,-1,dist_util},
               {integer,42,42},
               {var,496,'Node'},
               {atom,496,get_status_failed}]}]}]}]}]}]}]},
 {function,505,send_name,1,
  [{clause,505,
    [{tuple,505,
      [{atom,505,hs_data},
       {var,505,'_'},
       {var,505,'_'},
       {var,505,'Node'},
       {var,505,'Socket'},
       {var,505,'_'},
       {var,507,'Flags'},
       {var,505,'_'},
       {var,508,'Version'},
       {var,505,'_'},
       {var,505,'_'},
       {var,506,'FSend'},
       {var,505,'_'},
       {var,505,'_'},
       {var,505,'_'},
       {var,505,'_'},
       {var,505,'_'},
       {var,505,'_'},
       {var,505,'_'},
       {var,505,'_'}]}],
    [],
    [{atom,37,ok},
     {'case',46,
      {call,511,
       {var,511,'FSend'},
       [{var,511,'Socket'},
        {cons,512,
         {char,512,110},
         {cons,55,
          {cons,55,
           {op,55,'band',
            {op,55,'bsr',{var,512,'Version'},{integer,55,8}},
            {integer,55,255}},
           {cons,55,
            {op,55,'band',{var,512,'Version'},{integer,55,255}},
            {nil,55}}},
          {cons,58,
           {cons,58,
            {op,58,'band',
             {op,58,'bsr',{var,512,'Flags'},{integer,58,24}},
             {integer,58,255}},
            {cons,58,
             {op,58,'band',
              {op,58,'bsr',{var,512,'Flags'},{integer,58,16}},
              {integer,58,255}},
             {cons,59,
              {op,59,'band',
               {op,59,'bsr',{var,512,'Flags'},{integer,59,8}},
               {integer,59,255}},
              {cons,59,
               {op,59,'band',{var,512,'Flags'},{integer,59,255}},
               {nil,59}}}}},
           {cons,512,
            {call,512,{atom,512,atom_to_list},[{var,512,'Node'}]},
            {nil,512}}}}}]},
      [{clause,47,
        [{tuple,47,[{atom,47,error},{atom,47,closed}]}],
        [],
        [{op,48,'!',
          {call,48,{atom,48,self},[]},
          {tuple,48,[{atom,48,tcp_closed},{var,511,'Socket'}]}},
         {tuple,49,[{atom,49,error},{atom,49,closed}]}]},
       {clause,50,[{var,50,'R'}],[],[{var,51,'R'}]}]}]}]},
 {function,514,send_challenge,2,
  [{clause,514,
    [{tuple,514,
      [{atom,514,hs_data},
       {var,514,'_'},
       {var,514,'_'},
       {var,514,'Node'},
       {var,514,'Socket'},
       {var,514,'_'},
       {var,516,'Flags'},
       {var,514,'_'},
       {var,515,'Version'},
       {var,514,'_'},
       {var,514,'_'},
       {var,517,'FSend'},
       {var,514,'_'},
       {var,514,'_'},
       {var,514,'_'},
       {var,514,'_'},
       {var,514,'_'},
       {var,514,'_'},
       {var,514,'_'},
       {var,514,'_'}]},
     {var,518,'Challenge'}],
    [],
    [{atom,37,ok},
     {'case',46,
      {call,521,
       {var,521,'FSend'},
       [{var,521,'Socket'},
        {cons,521,
         {char,521,110},
         {cons,55,
          {cons,55,
           {op,55,'band',
            {op,55,'bsr',{var,521,'Version'},{integer,55,8}},
            {integer,55,255}},
           {cons,55,
            {op,55,'band',{var,521,'Version'},{integer,55,255}},
            {nil,55}}},
          {cons,58,
           {cons,58,
            {op,58,'band',
             {op,58,'bsr',{var,521,'Flags'},{integer,58,24}},
             {integer,58,255}},
            {cons,58,
             {op,58,'band',
              {op,58,'bsr',{var,521,'Flags'},{integer,58,16}},
              {integer,58,255}},
             {cons,59,
              {op,59,'band',
               {op,59,'bsr',{var,521,'Flags'},{integer,59,8}},
               {integer,59,255}},
              {cons,59,
               {op,59,'band',{var,521,'Flags'},{integer,59,255}},
               {nil,59}}}}},
           {cons,58,
            {cons,58,
             {op,58,'band',
              {op,58,'bsr',{var,522,'Challenge'},{integer,58,24}},
              {integer,58,255}},
             {cons,58,
              {op,58,'band',
               {op,58,'bsr',{var,522,'Challenge'},{integer,58,16}},
               {integer,58,255}},
              {cons,59,
               {op,59,'band',
                {op,59,'bsr',{var,522,'Challenge'},{integer,59,8}},
                {integer,59,255}},
               {cons,59,
                {op,59,'band',{var,522,'Challenge'},{integer,59,255}},
                {nil,59}}}}},
            {cons,523,
             {call,523,{atom,523,atom_to_list},[{var,523,'Node'}]},
             {nil,523}}}}}}]},
      [{clause,47,
        [{tuple,47,[{atom,47,error},{atom,47,closed}]}],
        [],
        [{op,48,'!',
          {call,48,{atom,48,self},[]},
          {tuple,48,[{atom,48,tcp_closed},{var,521,'Socket'}]}},
         {tuple,49,[{atom,49,error},{atom,49,closed}]}]},
       {clause,50,[{var,50,'R'}],[],[{var,51,'R'}]}]}]}]},
 {function,525,send_challenge_reply,3,
  [{clause,525,
    [{tuple,525,
      [{atom,525,hs_data},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'Socket'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'FSend'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'_'},
       {var,525,'_'}]},
     {var,526,'Challenge'},
     {var,526,'Digest'}],
    [],
    [{atom,37,ok},
     {'case',46,
      {call,529,
       {var,529,'FSend'},
       [{var,529,'Socket'},
        {cons,529,
         {char,529,114},
         {cons,58,
          {cons,58,
           {op,58,'band',
            {op,58,'bsr',{var,529,'Challenge'},{integer,58,24}},
            {integer,58,255}},
           {cons,58,
            {op,58,'band',
             {op,58,'bsr',{var,529,'Challenge'},{integer,58,16}},
             {integer,58,255}},
            {cons,59,
             {op,59,'band',
              {op,59,'bsr',{var,529,'Challenge'},{integer,59,8}},
              {integer,59,255}},
             {cons,59,
              {op,59,'band',{var,529,'Challenge'},{integer,59,255}},
              {nil,59}}}}},
          {cons,529,{var,529,'Digest'},{nil,529}}}}]},
      [{clause,47,
        [{tuple,47,[{atom,47,error},{atom,47,closed}]}],
        [],
        [{op,48,'!',
          {call,48,{atom,48,self},[]},
          {tuple,48,[{atom,48,tcp_closed},{var,529,'Socket'}]}},
         {tuple,49,[{atom,49,error},{atom,49,closed}]}]},
       {clause,50,[{var,50,'R'}],[],[{var,51,'R'}]}]}]}]},
 {function,531,send_challenge_ack,2,
  [{clause,531,
    [{tuple,531,
      [{atom,531,hs_data},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'Socket'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'FSend'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'_'},
       {var,531,'_'}]},
     {var,532,'Digest'}],
    [],
    [{atom,37,ok},
     {'case',46,
      {call,534,
       {var,534,'FSend'},
       [{var,534,'Socket'},
        {cons,534,{char,534,97},{cons,534,{var,534,'Digest'},{nil,534}}}]},
      [{clause,47,
        [{tuple,47,[{atom,47,error},{atom,47,closed}]}],
        [],
        [{op,48,'!',
          {call,48,{atom,48,self},[]},
          {tuple,48,[{atom,48,tcp_closed},{var,534,'Socket'}]}},
         {tuple,49,[{atom,49,error},{atom,49,closed}]}]},
       {clause,50,[{var,50,'R'}],[],[{var,51,'R'}]}]}]}]},
 {function,544,recv_name,1,
  [{clause,544,
    [{tuple,544,
      [{atom,544,hs_data},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'Socket'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'Recv'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'_'},
       {var,544,'_'}]}],
    [],
    [{'case',545,
      {call,545,
       {var,545,'Recv'},
       [{var,545,'Socket'},{integer,545,0},{atom,545,infinity}]},
      [{clause,546,
        [{tuple,546,[{atom,546,ok},{var,546,'Data'}]}],
        [],
        [{call,547,{atom,547,get_name},[{var,547,'Data'}]}]},
       {clause,548,
        [{var,548,'_'}],
        [],
        [{call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{atom,549,no_node}]}]}]}]}]},
 {function,552,get_name,1,
  [{clause,552,
    [{cons,552,
      {char,552,110},
      {cons,552,
       {var,552,'VersionA'},
       {cons,552,
        {var,552,'VersionB'},
        {cons,552,
         {var,552,'Flag1'},
         {cons,552,
          {var,552,'Flag2'},
          {cons,552,
           {var,552,'Flag3'},
           {cons,552,{var,552,'Flag4'},{var,552,'OtherNode'}}}}}}}}],
    [],
    [{tuple,553,
      [{op,69,'bor',
        {op,69,'bor',
         {op,69,'bor',
          {op,69,'bsl',{var,553,'Flag1'},{integer,69,24}},
          {op,69,'bsl',{var,553,'Flag2'},{integer,69,16}}},
         {op,69,'bsl',{var,553,'Flag3'},{integer,69,8}}},
        {var,553,'Flag4'}},
       {call,553,{atom,553,list_to_atom},[{var,553,'OtherNode'}]},
       {op,66,'bor',
        {op,66,'bsl',{var,554,'VersionA'},{integer,66,8}},
        {var,554,'VersionB'}}]}]},
   {clause,555,
    [{var,555,'Data'}],
    [],
    [{call,41,
      {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
      [{atom,-1,dist_util},{integer,41,41},{var,556,'Data'}]}]}]},
 {function,558,publish_type,1,
  [{clause,558,
    [{var,558,'Flags'}],
    [],
    [{'case',559,
      {op,559,'band',{var,559,'Flags'},{integer,25,1}},
      [{clause,560,[{integer,560,0}],[],[{atom,561,hidden}]},
       {clause,562,[{var,562,'_'}],[],[{atom,563,normal}]}]}]}]},
 {function,567,recv_challenge,1,
  [{clause,567,
    [{tuple,567,
      [{atom,567,hs_data},
       {var,567,'_'},
       {var,567,'Node'},
       {var,567,'_'},
       {var,567,'Socket'},
       {var,567,'_'},
       {var,567,'_'},
       {var,567,'_'},
       {var,568,'Version'},
       {var,567,'_'},
       {var,567,'_'},
       {var,567,'_'},
       {var,568,'Recv'},
       {var,567,'_'},
       {var,567,'_'},
       {var,567,'_'},
       {var,567,'_'},
       {var,567,'_'},
       {var,567,'_'},
       {var,567,'_'}]}],
    [],
    [{'case',569,
      {call,569,
       {var,569,'Recv'},
       [{var,569,'Socket'},{integer,569,0},{atom,569,infinity}]},
      [{clause,570,
        [{tuple,570,
          [{atom,570,ok},
           {cons,570,
            {char,570,110},
            {cons,570,
             {var,570,'V1'},
             {cons,570,
              {var,570,'V0'},
              {cons,570,
               {var,570,'Fl1'},
               {cons,570,
                {var,570,'Fl2'},
                {cons,570,
                 {var,570,'Fl3'},
                 {cons,570,
                  {var,570,'Fl4'},
                  {cons,570,
                   {var,570,'CA3'},
                   {cons,570,
                    {var,570,'CA2'},
                    {cons,570,
                     {var,570,'CA1'},
                     {cons,570,{var,570,'CA0'},{var,570,'Ns'}}}}}}}}}}}}]}],
        [],
        [{match,571,
          {var,571,'Flags'},
          {op,69,'bor',
           {op,69,'bor',
            {op,69,'bor',
             {op,69,'bsl',{var,571,'Fl1'},{integer,69,24}},
             {op,69,'bsl',{var,571,'Fl2'},{integer,69,16}}},
            {op,69,'bsl',{var,571,'Fl3'},{integer,69,8}}},
           {var,571,'Fl4'}}},
         {'try',572,
          [{tuple,572,
            [{call,572,{atom,572,list_to_existing_atom},[{var,572,'Ns'}]},
             {op,66,'bor',
              {op,66,'bsl',{var,572,'V1'},{integer,66,8}},
              {var,572,'V0'}}]}],
          [{clause,573,
            [{tuple,573,[{var,573,'Node'},{var,573,'Version'}]}],
            [],
            [{match,574,
              {var,574,'Challenge'},
              {op,69,'bor',
               {op,69,'bor',
                {op,69,'bor',
                 {op,69,'bsl',{var,574,'CA3'},{integer,69,24}},
                 {op,69,'bsl',{var,574,'CA2'},{integer,69,16}}},
                {op,69,'bsl',{var,574,'CA1'},{integer,69,8}}},
               {var,574,'CA0'}}},
             {atom,37,ok},
             {tuple,577,[{var,577,'Flags'},{var,577,'Challenge'}]}]},
           {clause,578,
            [{var,578,'_'}],
            [],
            [{call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,dist_util},{integer,41,41},{atom,579,no_node}]}]}],
          [{clause,581,
            [{tuple,581,[{atom,581,error},{atom,581,badarg},{var,581,'_'}]}],
            [],
            [{call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,dist_util},{integer,41,41},{atom,582,no_node}]}]}],
          []}]},
       {clause,584,
        [{var,584,'_'}],
        [],
        [{call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{atom,585,no_node}]}]}]}]}]},
 {function,592,recv_challenge_reply,3,
  [{clause,592,
    [{tuple,592,
      [{atom,592,hs_data},
       {var,592,'_'},
       {var,593,'NodeB'},
       {var,592,'_'},
       {var,592,'Socket'},
       {var,592,'_'},
       {var,592,'_'},
       {var,592,'_'},
       {var,592,'_'},
       {var,592,'_'},
       {var,592,'_'},
       {var,592,'_'},
       {var,594,'FRecv'},
       {var,592,'_'},
       {var,592,'_'},
       {var,592,'_'},
       {var,592,'_'},
       {var,592,'_'},
       {var,592,'_'},
       {var,592,'_'}]},
     {var,595,'ChallengeA'},
     {var,595,'Cookie'}],
    [],
    [{'case',596,
      {call,596,
       {var,596,'FRecv'},
       [{var,596,'Socket'},{integer,596,0},{atom,596,infinity}]},
      [{clause,597,
        [{tuple,597,
          [{atom,597,ok},
           {cons,597,
            {char,597,114},
            {cons,597,
             {var,597,'CB3'},
             {cons,597,
              {var,597,'CB2'},
              {cons,597,
               {var,597,'CB1'},
               {cons,597,{var,597,'CB0'},{var,597,'SumB'}}}}}}]}],
        [[{op,597,'=:=',
           {call,597,{atom,597,length},[{var,597,'SumB'}]},
           {integer,597,16}}]],
        [{match,598,
          {var,598,'SumA'},
          {call,598,
           {atom,598,gen_digest},
           [{var,598,'ChallengeA'},{var,598,'Cookie'}]}},
         {match,599,
          {var,599,'ChallengeB'},
          {op,69,'bor',
           {op,69,'bor',
            {op,69,'bor',
             {op,69,'bsl',{var,599,'CB3'},{integer,69,24}},
             {op,69,'bsl',{var,599,'CB2'},{integer,69,16}}},
            {op,69,'bsl',{var,599,'CB1'},{integer,69,8}}},
           {var,599,'CB0'}}},
         {atom,37,ok},
         {atom,37,ok},
         {'case',603,
          {call,603,{atom,603,list_to_binary},[{var,603,'SumB'}]},
          [{clause,604,[{var,604,'SumA'}],[],[{var,605,'ChallengeB'}]},
           {clause,606,
            [{var,606,'_'}],
            [],
            [{call,607,
              {atom,607,error_msg},
              [{string,607,
                "** Connection attempt from disallowed node ~w ** ~n"},
               {cons,608,{var,608,'NodeB'},{nil,608}}]},
             {call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,dist_util},{integer,41,41},{var,609,'NodeB'}]}]}]}]},
       {clause,611,
        [{var,611,'_'}],
        [],
        [{call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{atom,612,no_node}]}]}]}]}]},
 {function,615,recv_challenge_ack,3,
  [{clause,615,
    [{tuple,615,
      [{atom,615,hs_data},
       {var,615,'_'},
       {var,616,'NodeB'},
       {var,615,'_'},
       {var,615,'Socket'},
       {var,615,'_'},
       {var,615,'_'},
       {var,615,'_'},
       {var,615,'_'},
       {var,615,'_'},
       {var,615,'_'},
       {var,615,'_'},
       {var,615,'FRecv'},
       {var,615,'_'},
       {var,615,'_'},
       {var,615,'_'},
       {var,615,'_'},
       {var,615,'_'},
       {var,615,'_'},
       {var,615,'_'}]},
     {var,617,'ChallengeB'},
     {var,617,'CookieA'}],
    [],
    [{'case',618,
      {call,618,
       {var,618,'FRecv'},
       [{var,618,'Socket'},{integer,618,0},{atom,618,infinity}]},
      [{clause,619,
        [{tuple,619,
          [{atom,619,ok},{cons,619,{char,619,97},{var,619,'SumB'}}]}],
        [[{op,619,'=:=',
           {call,619,{atom,619,length},[{var,619,'SumB'}]},
           {integer,619,16}}]],
        [{match,620,
          {var,620,'SumA'},
          {call,620,
           {atom,620,gen_digest},
           [{var,620,'ChallengeB'},{var,620,'CookieA'}]}},
         {atom,37,ok},
         {atom,37,ok},
         {'case',623,
          {call,623,{atom,623,list_to_binary},[{var,623,'SumB'}]},
          [{clause,624,[{var,624,'SumA'}],[],[{atom,625,ok}]},
           {clause,626,
            [{var,626,'_'}],
            [],
            [{call,627,
              {atom,627,error_msg},
              [{string,627,
                "** Connection attempt to disallowed node ~w ** ~n"},
               {cons,628,{var,628,'NodeB'},{nil,628}}]},
             {call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,dist_util},{integer,41,41},{var,629,'NodeB'}]}]}]}]},
       {clause,631,
        [{var,631,'_'}],
        [],
        [{call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{var,632,'NodeB'}]}]}]}]}]},
 {function,635,recv_status,1,
  [{clause,635,
    [{match,636,
      {tuple,635,
       [{atom,635,hs_data},
        {var,635,'Kernel'},
        {var,636,'Node'},
        {var,635,'_'},
        {var,635,'Socket'},
        {var,635,'_'},
        {var,635,'_'},
        {var,635,'_'},
        {var,635,'_'},
        {var,635,'_'},
        {var,635,'_'},
        {var,635,'_'},
        {var,636,'Recv'},
        {var,635,'_'},
        {var,635,'_'},
        {var,635,'_'},
        {var,635,'_'},
        {var,635,'_'},
        {var,635,'_'},
        {var,635,'_'}]},
      {var,636,'HSData'}}],
    [],
    [{'case',637,
      {call,637,
       {var,637,'Recv'},
       [{var,637,'Socket'},{integer,637,0},{atom,637,infinity}]},
      [{clause,638,
        [{tuple,638,
          [{atom,638,ok},{cons,638,{char,638,115},{var,638,'StrStat'}}]}],
        [],
        [{match,639,
          {var,639,'Stat'},
          {call,639,{atom,639,list_to_atom},[{var,639,'StrStat'}]}},
         {atom,28,ok},
         {'case',641,
          {var,641,'Stat'},
          [{clause,642,
            [{atom,642,not_allowed}],
            [],
            [{call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,dist_util},{integer,41,41},{var,642,'Node'}]}]},
           {clause,643,
            [{atom,643,nok}],
            [],
            [{'receive',645,[],{atom,646,infinity},[{atom,646,ok}]}]},
           {clause,648,
            [{atom,648,alive}],
            [],
            [{match,649,
              {var,649,'Reply'},
              {call,649,
               {atom,649,is_pending},
               [{var,649,'Kernel'},{var,649,'Node'}]}},
             {atom,28,ok},
             {call,651,
              {atom,651,send_status},
              [{var,651,'HSData'},{var,651,'Reply'}]},
             {'if',652,
              [{clause,652,[],
                [[{op,652,'not',{var,652,'Reply'}}]],
                [{call,41,
                  {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
                  [{atom,-1,dist_util},{integer,41,41},{var,653,'Node'}]}]},
               {clause,654,[],[[{var,654,'Reply'}]],[{var,655,'Stat'}]}]}]},
           {clause,657,[{var,657,'_'}],[],[{var,657,'Stat'}]}]}]},
       {clause,659,
        [{var,659,'_Error'}],
        [],
        [{atom,28,ok},
         {call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{var,662,'Node'}]}]}]}]}]},
 {function,666,send_status,2,
  [{clause,666,
    [{tuple,666,
      [{atom,666,hs_data},
       {var,666,'_'},
       {var,666,'Node'},
       {var,666,'_'},
       {var,666,'Socket'},
       {var,666,'_'},
       {var,666,'_'},
       {var,666,'_'},
       {var,666,'_'},
       {var,666,'_'},
       {var,666,'_'},
       {var,667,'FSend'},
       {var,666,'_'},
       {var,666,'_'},
       {var,666,'_'},
       {var,666,'_'},
       {var,666,'_'},
       {var,666,'_'},
       {var,666,'_'},
       {var,666,'_'}]},
     {var,667,'Stat'}],
    [],
    [{atom,28,ok},
     {'case',669,
      {call,669,
       {var,669,'FSend'},
       [{var,669,'Socket'},
        {cons,669,
         {char,669,115},
         {call,669,{atom,669,atom_to_list},[{var,669,'Stat'}]}}]},
      [{clause,670,
        [{tuple,670,[{atom,670,error},{var,670,'_'}]}],
        [],
        [{call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,dist_util},{integer,41,41},{var,671,'Node'}]}]},
       {clause,672,[{var,672,'_'}],[],[{atom,673,true}]}]}]}]},
 {function,702,send_tick,5,
  [{clause,702,
    [{var,702,'Socket'},
     {var,702,'Tick'},
     {var,702,'Type'},
     {var,702,'MFTick'},
     {var,702,'MFGetstat'}],
    [],
    [{match,706,
      {tuple,703,
       [{atom,703,tick},
        {var,704,'Read'},
        {var,705,'Write'},
        {var,703,'T0'},
        {var,706,'Ticked'}]},
      {var,706,'Tick'}},
     {match,707,{var,707,'T'},{op,707,'+',{var,707,'T0'},{integer,707,1}}},
     {match,708,{var,708,'T1'},{op,708,'rem',{var,708,'T'},{integer,708,4}}},
     {'case',709,
      {call,709,{var,709,'MFGetstat'},[{var,709,'Socket'}]},
      [{clause,710,
        [{tuple,710,
          [{atom,710,ok},{var,710,'Read'},{var,710,'_'},{var,710,'_'}]}],
        [[{op,710,'=:=',{var,710,'Ticked'},{var,710,'T'}}]],
        [{tuple,711,[{atom,711,error},{atom,711,not_responding}]}]},
       {clause,712,
        [{tuple,712,
          [{atom,712,ok},{var,712,'Read'},{var,712,'W'},{var,712,'Pend'}]}],
        [[{op,712,'=:=',{var,712,'Type'},{atom,712,hidden}}]],
        [{call,713,
          {atom,713,send_tick},
          [{var,713,'Socket'},{var,713,'Pend'},{var,713,'MFTick'}]},
         {tuple,714,
          [{atom,714,ok},
           {call,714,
            {remote,714,{atom,714,erlang},{atom,714,setelement}},
            [{integer,714,4},
             {call,714,
              {remote,714,{atom,714,erlang},{atom,714,setelement}},
              [{integer,714,3},
               {var,714,'Tick'},
               {op,714,'+',{var,714,'W'},{integer,714,1}}]},
             {var,715,'T1'}]}]}]},
       {clause,716,
        [{tuple,716,
          [{atom,716,ok},
           {var,716,'Read'},
           {var,716,'Write'},
           {var,716,'Pend'}]}],
        [],
        [{call,717,
          {atom,717,send_tick},
          [{var,717,'Socket'},{var,717,'Pend'},{var,717,'MFTick'}]},
         {tuple,718,
          [{atom,718,ok},
           {call,718,
            {remote,718,{atom,718,erlang},{atom,718,setelement}},
            [{integer,718,4},
             {call,718,
              {remote,718,{atom,718,erlang},{atom,718,setelement}},
              [{integer,718,3},
               {var,718,'Tick'},
               {op,718,'+',{var,718,'Write'},{integer,718,1}}]},
             {var,719,'T1'}]}]}]},
       {clause,720,
        [{tuple,720,
          [{atom,720,ok},{var,720,'R'},{var,720,'Write'},{var,720,'Pend'}]}],
        [],
        [{call,721,
          {atom,721,send_tick},
          [{var,721,'Socket'},{var,721,'Pend'},{var,721,'MFTick'}]},
         {tuple,722,
          [{atom,722,ok},
           {call,722,
            {remote,722,{atom,722,erlang},{atom,722,setelement}},
            [{integer,722,5},
             {call,722,
              {remote,722,{atom,722,erlang},{atom,722,setelement}},
              [{integer,722,4},
               {call,722,
                {remote,722,{atom,722,erlang},{atom,722,setelement}},
                [{integer,722,2},
                 {call,722,
                  {remote,722,{atom,722,erlang},{atom,722,setelement}},
                  [{integer,722,3},
                   {var,722,'Tick'},
                   {op,722,'+',{var,722,'Write'},{integer,722,1}}]},
                 {var,723,'R'}]},
               {var,724,'T1'}]},
             {var,725,'T'}]}]}]},
       {clause,726,
        [{tuple,726,
          [{atom,726,ok},{var,726,'Read'},{var,726,'W'},{var,726,'_'}]}],
        [],
        [{tuple,727,
          [{atom,727,ok},
           {call,727,
            {remote,727,{atom,727,erlang},{atom,727,setelement}},
            [{integer,727,4},
             {call,727,
              {remote,727,{atom,727,erlang},{atom,727,setelement}},
              [{integer,727,3},{var,727,'Tick'},{var,727,'W'}]},
             {var,728,'T1'}]}]}]},
       {clause,729,
        [{tuple,729,
          [{atom,729,ok},{var,729,'R'},{var,729,'W'},{var,729,'_'}]}],
        [],
        [{tuple,730,
          [{atom,730,ok},
           {call,730,
            {remote,730,{atom,730,erlang},{atom,730,setelement}},
            [{integer,730,5},
             {call,730,
              {remote,730,{atom,730,erlang},{atom,730,setelement}},
              [{integer,730,4},
               {call,730,
                {remote,730,{atom,730,erlang},{atom,730,setelement}},
                [{integer,730,2},
                 {call,730,
                  {remote,730,{atom,730,erlang},{atom,730,setelement}},
                  [{integer,730,3},{var,730,'Tick'},{var,730,'W'}]},
                 {var,731,'R'}]},
               {var,732,'T1'}]},
             {var,733,'T'}]}]}]},
       {clause,734,[{var,734,'Error'}],[],[{var,735,'Error'}]}]}]}]},
 {function,738,send_tick,3,
  [{clause,738,
    [{var,738,'Socket'},{integer,738,0},{var,738,'MFTick'}],
    [],
    [{call,739,{var,739,'MFTick'},[{var,739,'Socket'}]}]},
   {clause,740,
    [{var,740,'_'},{var,740,'_Pend'},{var,740,'_'}],
    [],
    [{atom,742,ok}]}]},
 {function,752,start_timer,1,
  [{clause,752,
    [{var,752,'Timeout'}],
    [],
    [{call,753,
      {atom,753,spawn_link},
      [{atom,-1,dist_util},
       {atom,753,setup_timer},
       {cons,753,
        {call,753,{atom,753,self},[]},
        {cons,753,
         {op,753,'*',{var,753,'Timeout'},{integer,38,1}},
         {nil,753}}}]}]}]},
 {function,755,setup_timer,2,
  [{clause,755,
    [{var,755,'Pid'},{var,755,'Timeout'}],
    [],
    [{'receive',756,
      [{clause,757,
        [{tuple,757,[{var,757,'Pid'},{atom,757,reset}]}],
        [],
        [{call,758,
          {atom,758,setup_timer},
          [{var,758,'Pid'},{var,758,'Timeout'}]}]}],
      {var,759,'Timeout'},
      [{atom,37,ok},
       {call,41,
        {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
        [{atom,-1,dist_util},{integer,41,41},{atom,761,timer}]}]}]}]},
 {function,764,reset_timer,1,
  [{clause,764,
    [{var,764,'Timer'}],
    [],
    [{op,765,'!',
      {var,765,'Timer'},
      {tuple,765,[{call,765,{atom,765,self},[]},{atom,765,reset}]}},
     {atom,766,ok}]}]},
 {function,768,cancel_timer,1,
  [{clause,768,
    [{var,768,'Timer'}],
    [],
    [{call,769,{atom,769,unlink},[{var,769,'Timer'}]},
     {call,770,{atom,770,exit},[{var,770,'Timer'},{atom,770,shutdown}]}]}]}]
