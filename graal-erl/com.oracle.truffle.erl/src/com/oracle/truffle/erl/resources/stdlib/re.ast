re
[]
[]
[{function,43,compile,1,
  [{clause,43,
    [{var,43,'_'}],
    [],
    [{call,44,
      {remote,44,{atom,44,erlang},{atom,44,nif_error}},
      [{atom,44,undef}]}]}]},
 {function,53,compile,2,
  [{clause,53,
    [{var,53,'_'},{var,53,'_'}],
    [],
    [{call,54,
      {remote,54,{atom,54,erlang},{atom,54,nif_error}},
      [{atom,54,undef}]}]}]},
 {function,62,run,2,
  [{clause,62,
    [{var,62,'_'},{var,62,'_'}],
    [],
    [{call,63,
      {remote,63,{atom,63,erlang},{atom,63,nif_error}},
      [{atom,63,undef}]}]}]},
 {function,95,run,3,
  [{clause,95,
    [{var,95,'_'},{var,95,'_'},{var,95,'_'}],
    [],
    [{call,96,
      {remote,96,{atom,96,erlang},{atom,96,nif_error}},
      [{atom,96,undef}]}]}]},
 {function,102,inspect,2,
  [{clause,102,
    [{var,102,'_'},{var,102,'_'}],
    [],
    [{call,103,
      {remote,103,{atom,103,erlang},{atom,103,nif_error}},
      [{atom,103,undef}]}]}]},
 {function,113,split,2,
  [{clause,113,
    [{var,113,'Subject'},{var,113,'RE'}],
    [],
    [{call,114,
      {atom,114,split},
      [{var,114,'Subject'},{var,114,'RE'},{nil,114}]}]}]},
 {function,133,split,3,
  [{clause,133,
    [{var,133,'Subject'},{var,133,'RE'},{var,133,'Options'}],
    [],
    [{'try',134,
      [{match,135,
        {tuple,135,
         [{var,135,'NewOpt'},
          {var,135,'Convert'},
          {var,135,'Limit'},
          {var,135,'Strip'},
          {var,135,'Group'}]},
        {call,136,
         {atom,136,process_split_params},
         [{var,136,'Options'},
          {atom,136,iodata},
          {op,136,'-',{integer,136,1}},
          {atom,136,false},
          {atom,136,false}]}},
       {match,137,
        {var,137,'Unicode'},
        {call,137,
         {atom,137,check_for_unicode},
         [{var,137,'RE'},{var,137,'Options'}]}},
       {match,138,
        {var,138,'FlatSubject'},
        {call,138,
         {atom,138,to_binary},
         [{var,138,'Subject'},{var,138,'Unicode'}]}},
       {'case',139,
        {call,139,
         {atom,139,compile_split},
         [{var,139,'RE'},{var,139,'NewOpt'}]},
        [{clause,140,
          [{tuple,140,[{atom,140,error},{var,140,'_Err'}]}],
          [],
          [{call,141,{atom,141,throw},[{atom,141,badre}]}]},
         {clause,142,
          [{tuple,142,
            [{var,142,'PreCompiled'},{var,142,'NumSub'},{var,142,'RunOpt'}]}],
          [],
          [{'case',144,
            {call,144,
             {remote,144,{atom,144,re},{atom,144,run}},
             [{var,144,'FlatSubject'},
              {var,144,'PreCompiled'},
              {op,144,'++',
               {var,144,'RunOpt'},
               {cons,144,{atom,144,global},{nil,144}}}]},
            [{clause,145,
              [{atom,145,nomatch}],
              [],
              [{'case',146,
                {var,146,'Group'},
                [{clause,147,
                  [{atom,147,true}],
                  [],
                  [{call,148,
                    {atom,148,convert_any_split_result},
                    [{cons,148,
                      {cons,148,{var,148,'FlatSubject'},{nil,148}},
                      {nil,148}},
                     {var,149,'Convert'},
                     {var,149,'Unicode'},
                     {atom,149,true}]}]},
                 {clause,150,
                  [{atom,150,false}],
                  [],
                  [{call,151,
                    {atom,151,convert_any_split_result},
                    [{cons,151,{var,151,'FlatSubject'},{nil,151}},
                     {var,152,'Convert'},
                     {var,152,'Unicode'},
                     {atom,152,false}]}]}]}]},
             {clause,154,
              [{tuple,154,[{atom,154,match},{var,154,'Matches'}]}],
              [],
              [{match,155,
                {var,155,'Res'},
                {call,155,
                 {atom,155,do_split},
                 [{var,155,'FlatSubject'},
                  {integer,155,0},
                  {var,155,'Matches'},
                  {var,155,'NumSub'},
                  {var,156,'Limit'},
                  {var,156,'Group'}]}},
               {match,157,
                {var,157,'Stripped'},
                {'case',157,
                 {var,157,'Strip'},
                 [{clause,158,
                   [{atom,158,true}],
                   [],
                   [{call,159,
                     {atom,159,backstrip_empty},
                     [{var,159,'Res'},{var,159,'Group'}]}]},
                  {clause,160,[{atom,160,false}],[],[{var,161,'Res'}]}]}},
               {call,163,
                {atom,163,convert_any_split_result},
                [{var,163,'Stripped'},
                 {var,163,'Convert'},
                 {var,163,'Unicode'},
                 {var,163,'Group'}]}]}]}]}]}],
      [],
      [{clause,167,
        [{tuple,167,[{atom,167,throw},{atom,167,badopt},{var,167,'_'}]}],
        [],
        [{call,168,
          {remote,168,{atom,168,erlang},{atom,168,error}},
          [{atom,168,badarg},
           {cons,168,
            {var,168,'Subject'},
            {cons,168,
             {var,168,'RE'},
             {cons,168,{var,168,'Options'},{nil,168}}}}]}]},
       {clause,169,
        [{tuple,169,[{atom,169,throw},{atom,169,badre},{var,169,'_'}]}],
        [],
        [{call,170,
          {remote,170,{atom,170,erlang},{atom,170,error}},
          [{atom,170,badarg},
           {cons,170,
            {var,170,'Subject'},
            {cons,170,
             {var,170,'RE'},
             {cons,170,{var,170,'Options'},{nil,170}}}}]}]},
       {clause,171,
        [{tuple,171,[{atom,171,error},{atom,171,badarg},{var,171,'_'}]}],
        [],
        [{call,172,
          {remote,172,{atom,172,erlang},{atom,172,error}},
          [{atom,172,badarg},
           {cons,172,
            {var,172,'Subject'},
            {cons,172,
             {var,172,'RE'},
             {cons,172,{var,172,'Options'},{nil,172}}}}]}]}],
      []}]}]},
 {function,175,backstrip_empty,2,
  [{clause,175,
    [{var,175,'List'},{atom,175,false}],
    [],
    [{call,176,{atom,176,do_backstrip_empty},[{var,176,'List'}]}]},
   {clause,177,
    [{var,177,'List'},{atom,177,true}],
    [],
    [{call,178,{atom,178,do_backstrip_empty_g},[{var,178,'List'}]}]}]},
 {function,180,do_backstrip_empty_g,1,
  [{clause,180,[{nil,180}],[],[{nil,181}]},
   {clause,182,
    [{cons,182,{var,182,'H'},{nil,182}}],
    [],
    [{'case',183,
      {call,183,{atom,183,do_backstrip_empty},[{var,183,'H'}]},
      [{clause,184,[{nil,184}],[],[{nil,185}]},
       {clause,186,
        [{var,186,'_'}],
        [],
        [{cons,187,{var,187,'H'},{nil,187}}]}]}]},
   {clause,189,
    [{cons,189,{var,189,'H'},{var,189,'T'}}],
    [],
    [{'case',190,
      {call,190,{atom,190,do_backstrip_empty_g},[{var,190,'T'}]},
      [{clause,191,
        [{nil,191}],
        [],
        [{'case',192,
          {call,192,{atom,192,do_backstrip_empty},[{var,192,'H'}]},
          [{clause,193,[{nil,193}],[],[{nil,194}]},
           {clause,195,
            [{var,195,'_'}],
            [],
            [{cons,196,{var,196,'H'},{nil,196}}]}]}]},
       {clause,198,
        [{var,198,'Other'}],
        [],
        [{cons,199,{var,199,'H'},{var,199,'Other'}}]}]}]}]},
 {function,202,do_backstrip_empty,1,
  [{clause,202,[{nil,202}],[],[{nil,203}]},
   {clause,204,[{cons,204,{bin,204,[]},{nil,204}}],[],[{nil,205}]},
   {clause,206,
    [{cons,206,{bin,206,[]},{var,206,'T'}}],
    [],
    [{'case',207,
      {call,207,{atom,207,do_backstrip_empty},[{var,207,'T'}]},
      [{clause,208,[{nil,208}],[],[{nil,209}]},
       {clause,210,
        [{var,210,'Other'}],
        [],
        [{cons,211,{bin,211,[]},{var,211,'Other'}}]}]}]},
   {clause,213,
    [{cons,213,{var,213,'H'},{var,213,'T'}}],
    [],
    [{cons,214,
      {var,214,'H'},
      {call,214,{atom,214,do_backstrip_empty},[{var,214,'T'}]}}]}]},
 {function,216,convert_any_split_result,4,
  [{clause,216,
    [{var,216,'List'},{var,216,'Type'},{var,216,'Uni'},{atom,216,true}],
    [],
    [{lc,217,
      {call,217,
       {atom,217,convert_split_result},
       [{var,217,'Part'},{var,217,'Type'},{var,217,'Uni'}]},
      [{generate,217,{var,217,'Part'},{var,217,'List'}}]}]},
   {clause,218,
    [{var,218,'List'},{var,218,'Type'},{var,218,'Uni'},{atom,218,false}],
    [],
    [{call,219,
      {atom,219,convert_split_result},
      [{var,219,'List'},{var,219,'Type'},{var,219,'Uni'}]}]}]},
 {function,221,convert_split_result,3,
  [{clause,221,
    [{var,221,'List'},{atom,221,iodata},{var,221,'_Unicode'}],
    [],
    [{var,222,'List'}]},
   {clause,223,
    [{var,223,'List'},{atom,223,binary},{var,223,'_Unicode'}],
    [],
    [{var,225,'List'}]},
   {clause,226,
    [{var,226,'List'},{atom,226,list},{atom,226,true}],
    [],
    [{lc,227,
      {call,227,
       {remote,227,{atom,227,unicode},{atom,227,characters_to_list}},
       [{var,227,'Element'},{atom,227,unicode}]},
      [{generate,227,{var,227,'Element'},{var,227,'List'}}]}]},
   {clause,228,
    [{var,228,'List'},{atom,228,list},{atom,228,false}],
    [],
    [{lc,229,
      {call,229,{atom,229,binary_to_list},[{var,229,'Element'}]},
      [{generate,229,{var,229,'Element'},{var,229,'List'}}]}]}]},
 {function,231,do_split,6,
  [{clause,231,
    [{var,231,'Subj'},
     {var,231,'Off'},
     {var,231,'_'},
     {var,231,'_'},
     {integer,231,0},
     {atom,231,false}],
    [],
    [{match,232,
      {bin,232,
       [{bin_element,232,{var,232,'_'},{var,232,'Off'},[binary]},
        {bin_element,232,{var,232,'Rest'},default,[binary]}]},
      {var,232,'Subj'}},
     {cons,233,{var,233,'Rest'},{nil,233}}]},
   {clause,234,
    [{var,234,'Subj'},
     {var,234,'Off'},
     {nil,234},
     {var,234,'_'},
     {var,234,'_'},
     {atom,234,false}],
    [],
    [{match,235,
      {bin,235,
       [{bin_element,235,{var,235,'_'},{var,235,'Off'},[binary]},
        {bin_element,235,{var,235,'Rest'},default,[binary]}]},
      {var,235,'Subj'}},
     {cons,236,{var,236,'Rest'},{nil,236}}]},
   {clause,237,
    [{var,237,'Subj'},
     {var,237,'Off'},
     {var,237,'_'},
     {var,237,'_'},
     {var,237,'_'},
     {atom,237,false}],
    [[{op,237,'=<',
       {call,237,{atom,237,byte_size},[{var,237,'Subj'}]},
       {var,237,'Off'}}]],
    [{cons,238,{bin,238,[]},{nil,238}}]},
   {clause,239,
    [{var,239,'Subj'},
     {var,239,'Off'},
     {var,239,'_'},
     {var,239,'_'},
     {integer,239,0},
     {atom,239,true}],
    [],
    [{match,240,
      {bin,240,
       [{bin_element,240,{var,240,'_'},{var,240,'Off'},[binary]},
        {bin_element,240,{var,240,'Rest'},default,[binary]}]},
      {var,240,'Subj'}},
     {cons,241,{cons,241,{var,241,'Rest'},{nil,241}},{nil,241}}]},
   {clause,242,
    [{var,242,'Subj'},
     {var,242,'Off'},
     {nil,242},
     {var,242,'_'},
     {var,242,'_'},
     {atom,242,true}],
    [],
    [{match,243,
      {bin,243,
       [{bin_element,243,{var,243,'_'},{var,243,'Off'},[binary]},
        {bin_element,243,{var,243,'Rest'},default,[binary]}]},
      {var,243,'Subj'}},
     {cons,244,{cons,244,{var,244,'Rest'},{nil,244}},{nil,244}}]},
   {clause,245,
    [{var,245,'Subj'},
     {var,245,'Off'},
     {var,245,'_'},
     {var,245,'_'},
     {var,245,'_'},
     {atom,245,true}],
    [[{op,245,'=<',
       {call,245,{atom,245,byte_size},[{var,245,'Subj'}]},
       {var,245,'Off'}}]],
    [{cons,246,{cons,246,{bin,246,[]},{nil,246}},{nil,246}}]},
   {clause,247,
    [{var,247,'Subj'},
     {var,247,'Offset'},
     {cons,247,
      {cons,247,
       {tuple,247,[{var,247,'MainI'},{var,247,'MainL'}]},
       {var,247,'Sub'}},
      {var,247,'T'}},
     {var,247,'NumSub'},
     {var,247,'Limit'},
     {var,247,'Group'}],
    [],
    [{match,248,
      {var,248,'NewOffset'},
      {op,248,'+',{var,248,'MainI'},{var,248,'MainL'}}},
     {match,249,
      {var,249,'KeptLen'},
      {op,249,'-',{var,249,'MainI'},{var,249,'Offset'}}},
     {'case',250,
      {tuple,250,
       [{var,250,'KeptLen'},
        {call,250,{atom,250,empty_sub},[{var,250,'Sub'}]},
        {var,250,'MainL'}]},
      [{clause,251,
        [{tuple,251,[{integer,251,0},{atom,251,true},{integer,251,0}]}],
        [],
        [{call,252,
          {atom,252,do_split},
          [{var,252,'Subj'},
           {var,252,'NewOffset'},
           {var,252,'T'},
           {var,252,'NumSub'},
           {var,252,'Limit'},
           {var,252,'Group'}]}]},
       {clause,253,
        [{var,253,'_'}],
        [],
        [{match,254,
          {bin,254,
           [{bin_element,254,{var,254,'_'},{var,254,'Offset'},[binary]},
            {bin_element,254,{var,254,'Keep'},{var,254,'KeptLen'},[binary]},
            {bin_element,254,{var,254,'_'},default,[binary]}]},
          {var,254,'Subj'}},
         {match,255,
          {var,255,'ESub'},
          {call,255,
           {atom,255,extend_subpatterns},
           [{var,255,'Sub'},{var,255,'NumSub'}]}},
         {match,256,
          {var,256,'Tail'},
          {call,256,
           {atom,256,do_split},
           [{var,256,'Subj'},
            {var,256,'NewOffset'},
            {var,256,'T'},
            {var,256,'NumSub'},
            {op,256,'-',{var,256,'Limit'},{integer,256,1}},
            {var,256,'Group'}]}},
         {'case',257,
          {var,257,'Group'},
          [{clause,258,
            [{atom,258,false}],
            [],
            [{cons,259,
              {var,259,'Keep'},
              {call,259,
               {atom,259,dig_subpatterns},
               [{var,259,'Subj'},
                {call,259,
                 {remote,259,{atom,259,lists},{atom,259,reverse}},
                 [{var,259,'ESub'}]},
                {var,259,'Tail'}]}}]},
           {clause,260,
            [{atom,260,true}],
            [],
            [{cons,261,
              {cons,261,
               {var,261,'Keep'},
               {call,261,
                {atom,261,dig_subpatterns},
                [{var,261,'Subj'},
                 {call,261,
                  {remote,261,{atom,261,lists},{atom,261,reverse}},
                  [{var,261,'ESub'}]},
                 {nil,261}]}},
              {var,262,'Tail'}}]}]}]}]}]}]},
 {function,265,empty_sub,1,
  [{clause,265,[{nil,265}],[],[{atom,266,true}]},
   {clause,267,
    [{cons,267,{tuple,267,[{var,267,'_'},{integer,267,0}]},{var,267,'T'}}],
    [],
    [{call,268,{atom,268,empty_sub},[{var,268,'T'}]}]},
   {clause,269,[{var,269,'_'}],[],[{atom,270,false}]}]},
 {function,272,dig_subpatterns,3,
  [{clause,272,[{var,272,'_'},{nil,272},{var,272,'Acc'}],[],[{var,273,'Acc'}]},
   {clause,274,
    [{var,274,'Subj'},
     {cons,274,
      {tuple,274,[{op,274,'-',{integer,274,1}},{integer,274,0}]},
      {var,274,'T'}},
     {var,274,'Acc'}],
    [],
    [{call,275,
      {atom,275,dig_subpatterns},
      [{var,275,'Subj'},
       {var,275,'T'},
       {cons,275,{bin,275,[]},{var,275,'Acc'}}]}]},
   {clause,276,
    [{var,276,'Subj'},
     {cons,276,{tuple,276,[{var,276,'I'},{var,276,'L'}]},{var,276,'T'}},
     {var,276,'Acc'}],
    [],
    [{match,277,
      {bin,277,
       [{bin_element,277,{var,277,'_'},{var,277,'I'},[binary]},
        {bin_element,277,{var,277,'Part'},{var,277,'L'},[binary]},
        {bin_element,277,{var,277,'_'},default,[binary]}]},
      {var,277,'Subj'}},
     {call,278,
      {atom,278,dig_subpatterns},
      [{var,278,'Subj'},
       {var,278,'T'},
       {cons,278,{var,278,'Part'},{var,278,'Acc'}}]}]}]},
 {function,280,extend_subpatterns,2,
  [{clause,280,[{var,280,'_'},{integer,280,0}],[],[{nil,281}]},
   {clause,282,
    [{nil,282},{var,282,'N'}],
    [],
    [{cons,283,
      {tuple,283,[{integer,283,0},{integer,283,0}]},
      {call,283,
       {atom,283,extend_subpatterns},
       [{nil,283},{op,283,'-',{var,283,'N'},{integer,283,1}}]}}]},
   {clause,284,
    [{cons,284,{var,284,'H'},{var,284,'T'}},{var,284,'N'}],
    [],
    [{cons,285,
      {var,285,'H'},
      {call,285,
       {atom,285,extend_subpatterns},
       [{var,285,'T'},{op,285,'-',{var,285,'N'},{integer,285,1}}]}}]}]},
 {function,287,compile_split,2,
  [{clause,287,
    [{match,287,
      {tuple,287,
       [{atom,287,re_pattern},
        {var,287,'N'},
        {var,287,'_'},
        {var,287,'_'},
        {var,287,'_'}]},
      {var,287,'Comp'}},
     {var,287,'Options'}],
    [],
    [{tuple,288,[{var,288,'Comp'},{var,288,'N'},{var,288,'Options'}]}]},
   {clause,289,
    [{var,289,'Pat'},{var,289,'Options0'}],
    [[{op,289,'not',{call,289,{atom,289,is_tuple},[{var,289,'Pat'}]}}]],
    [{match,290,
      {var,290,'Options'},
      {call,290,
       {remote,290,{atom,290,lists},{atom,290,filter}},
       [{'fun',290,
         {clauses,
          [{clause,290,
            [{var,290,'O'}],
            [],
            [{op,291,'not',{call,291,{atom,291,runopt},[{var,291,'O'}]}}]}]}},
        {var,292,'Options0'}]}},
     {'case',293,
      {call,293,
       {remote,293,{atom,293,re},{atom,293,compile}},
       [{var,293,'Pat'},{var,293,'Options'}]},
      [{clause,294,
        [{tuple,294,[{atom,294,error},{var,294,'Err'}]}],
        [],
        [{tuple,295,[{atom,295,error},{var,295,'Err'}]}]},
       {clause,296,
        [{tuple,296,
          [{atom,296,ok},
           {match,296,
            {tuple,296,
             [{atom,296,re_pattern},
              {var,296,'N'},
              {var,296,'_'},
              {var,296,'_'},
              {var,296,'_'}]},
            {var,296,'Comp'}}]}],
        [],
        [{match,297,
          {var,297,'NewOpt'},
          {call,297,
           {remote,297,{atom,297,lists},{atom,297,filter}},
           [{'fun',297,
             {clauses,
              [{clause,297,
                [{var,297,'OO'}],
                [],
                [{op,297,'not',
                  {call,297,{atom,297,copt},[{var,297,'OO'}]}}]}]}},
            {var,297,'Options0'}]}},
         {tuple,298,[{var,298,'Comp'},{var,298,'N'},{var,298,'NewOpt'}]}]}]}]},
   {clause,300,
    [{var,300,'_'},{var,300,'_'}],
    [],
    [{call,301,{atom,301,throw},[{atom,301,badre}]}]}]},
 {function,308,replace,3,
  [{clause,308,
    [{var,308,'Subject'},{var,308,'RE'},{var,308,'Replacement'}],
    [],
    [{call,309,
      {atom,309,replace},
      [{var,309,'Subject'},
       {var,309,'RE'},
       {var,309,'Replacement'},
       {nil,309}]}]}]},
 {function,326,replace,4,
  [{clause,326,
    [{var,326,'Subject'},
     {var,326,'RE'},
     {var,326,'Replacement'},
     {var,326,'Options'}],
    [],
    [{'try',327,
      [{match,328,
        {tuple,328,[{var,328,'NewOpt'},{var,328,'Convert'}]},
        {call,328,
         {atom,328,process_repl_params},
         [{var,328,'Options'},{atom,328,iodata}]}},
       {match,329,
        {var,329,'Unicode'},
        {call,329,
         {atom,329,check_for_unicode},
         [{var,329,'RE'},{var,329,'Options'}]}},
       {match,330,
        {var,330,'FlatSubject'},
        {call,330,
         {atom,330,to_binary},
         [{var,330,'Subject'},{var,330,'Unicode'}]}},
       {match,331,
        {var,331,'FlatReplacement'},
        {call,331,
         {atom,331,to_binary},
         [{var,331,'Replacement'},{var,331,'Unicode'}]}},
       {match,332,
        {var,332,'IoList'},
        {call,332,
         {atom,332,do_replace},
         [{var,332,'FlatSubject'},
          {var,332,'Subject'},
          {var,332,'RE'},
          {var,332,'FlatReplacement'},
          {var,332,'NewOpt'}]}},
       {'case',333,
        {var,333,'Convert'},
        [{clause,334,[{atom,334,iodata}],[],[{var,335,'IoList'}]},
         {clause,336,
          [{atom,336,binary}],
          [],
          [{'case',337,
            {var,337,'Unicode'},
            [{clause,338,
              [{atom,338,false}],
              [],
              [{call,339,{atom,339,iolist_to_binary},[{var,339,'IoList'}]}]},
             {clause,340,
              [{atom,340,true}],
              [],
              [{call,341,
                {remote,341,
                 {atom,341,unicode},
                 {atom,341,characters_to_binary}},
                [{var,341,'IoList'},{atom,341,unicode}]}]}]}]},
         {clause,343,
          [{atom,343,list}],
          [],
          [{'case',344,
            {var,344,'Unicode'},
            [{clause,345,
              [{atom,345,false}],
              [],
              [{call,346,
                {atom,346,binary_to_list},
                [{call,346,
                  {atom,346,iolist_to_binary},
                  [{var,346,'IoList'}]}]}]},
             {clause,347,
              [{atom,347,true}],
              [],
              [{call,348,
                {remote,348,{atom,348,unicode},{atom,348,characters_to_list}},
                [{var,348,'IoList'},{atom,348,unicode}]}]}]}]}]}],
      [],
      [{clause,352,
        [{tuple,352,[{atom,352,throw},{atom,352,badopt},{var,352,'_'}]}],
        [],
        [{call,353,
          {remote,353,{atom,353,erlang},{atom,353,error}},
          [{atom,353,badarg},
           {cons,353,
            {var,353,'Subject'},
            {cons,353,
             {var,353,'RE'},
             {cons,353,
              {var,353,'Replacement'},
              {cons,353,{var,353,'Options'},{nil,353}}}}}]}]},
       {clause,354,
        [{tuple,354,[{atom,354,throw},{atom,354,badre},{var,354,'_'}]}],
        [],
        [{call,355,
          {remote,355,{atom,355,erlang},{atom,355,error}},
          [{atom,355,badarg},
           {cons,355,
            {var,355,'Subject'},
            {cons,355,
             {var,355,'RE'},
             {cons,355,
              {var,355,'Replacement'},
              {cons,355,{var,355,'Options'},{nil,355}}}}}]}]},
       {clause,356,
        [{tuple,356,[{atom,356,error},{atom,356,badarg},{var,356,'_'}]}],
        [],
        [{call,357,
          {remote,357,{atom,357,erlang},{atom,357,error}},
          [{atom,357,badarg},
           {cons,357,
            {var,357,'Subject'},
            {cons,357,
             {var,357,'RE'},
             {cons,357,
              {var,357,'Replacement'},
              {cons,357,{var,357,'Options'},{nil,357}}}}}]}]}],
      []}]}]},
 {function,361,do_replace,5,
  [{clause,361,
    [{var,361,'FlatSubject'},
     {var,361,'Subject'},
     {var,361,'RE'},
     {var,361,'Replacement'},
     {var,361,'Options'}],
    [],
    [{'case',362,
      {call,362,
       {remote,362,{atom,362,re},{atom,362,run}},
       [{var,362,'FlatSubject'},{var,362,'RE'},{var,362,'Options'}]},
      [{clause,363,[{atom,363,nomatch}],[],[{var,364,'Subject'}]},
       {clause,365,
        [{tuple,365,
          [{atom,365,match},{cons,365,{var,365,'Mlist'},{var,365,'T'}}]}],
        [[{call,365,{atom,365,is_list},[{var,365,'Mlist'}]}]],
        [{call,366,
          {atom,366,apply_mlist},
          [{var,366,'FlatSubject'},
           {var,366,'Replacement'},
           {cons,366,{var,366,'Mlist'},{var,366,'T'}}]}]},
       {clause,367,
        [{tuple,367,[{atom,367,match},{var,367,'Slist'}]}],
        [],
        [{call,368,
          {atom,368,apply_mlist},
          [{var,368,'FlatSubject'},
           {var,368,'Replacement'},
           {cons,368,{var,368,'Slist'},{nil,368}}]}]}]}]}]},
 {function,371,process_repl_params,2,
  [{clause,371,
    [{nil,371},{var,371,'Convert'}],
    [],
    [{tuple,372,[{nil,372},{var,372,'Convert'}]}]},
   {clause,373,
    [{cons,373,{atom,373,report_errors},{var,373,'_'}},{var,373,'_'}],
    [],
    [{call,374,{atom,374,throw},[{atom,374,badopt}]}]},
   {clause,375,
    [{cons,375,
      {tuple,375,[{atom,375,capture},{var,375,'_'},{var,375,'_'}]},
      {var,375,'_'}},
     {var,375,'_'}],
    [],
    [{call,376,{atom,376,throw},[{atom,376,badopt}]}]},
   {clause,377,
    [{cons,377,{tuple,377,[{atom,377,capture},{var,377,'_'}]},{var,377,'_'}},
     {var,377,'_'}],
    [],
    [{call,378,{atom,378,throw},[{atom,378,badopt}]}]},
   {clause,379,
    [{cons,379,
      {tuple,379,[{atom,379,return},{atom,379,iodata}]},
      {var,379,'T'}},
     {var,379,'_C'}],
    [],
    [{call,380,
      {atom,380,process_repl_params},
      [{var,380,'T'},{atom,380,iodata}]}]},
   {clause,381,
    [{cons,381,{tuple,381,[{atom,381,return},{atom,381,list}]},{var,381,'T'}},
     {var,381,'_C'}],
    [],
    [{call,382,
      {atom,382,process_repl_params},
      [{var,382,'T'},{atom,382,list}]}]},
   {clause,383,
    [{cons,383,
      {tuple,383,[{atom,383,return},{atom,383,binary}]},
      {var,383,'T'}},
     {var,383,'_C'}],
    [],
    [{call,384,
      {atom,384,process_repl_params},
      [{var,384,'T'},{atom,384,binary}]}]},
   {clause,385,
    [{cons,385,{tuple,385,[{atom,385,return},{var,385,'_'}]},{var,385,'_'}},
     {var,385,'_'}],
    [],
    [{call,386,{atom,386,throw},[{atom,386,badopt}]}]},
   {clause,387,
    [{cons,387,{var,387,'H'},{var,387,'T'}},{var,387,'C'}],
    [],
    [{match,388,
      {tuple,388,[{var,388,'NT'},{var,388,'NC'}]},
      {call,388,{atom,388,process_repl_params},[{var,388,'T'},{var,388,'C'}]}},
     {tuple,389,[{cons,389,{var,389,'H'},{var,389,'NT'}},{var,389,'NC'}]}]}]},
 {function,391,process_split_params,5,
  [{clause,391,
    [{nil,391},
     {var,391,'Convert'},
     {var,391,'Limit'},
     {var,391,'Strip'},
     {var,391,'Group'}],
    [],
    [{tuple,392,
      [{nil,392},
       {var,392,'Convert'},
       {var,392,'Limit'},
       {var,392,'Strip'},
       {var,392,'Group'}]}]},
   {clause,393,
    [{cons,393,{atom,393,trim},{var,393,'T'}},
     {var,393,'C'},
     {var,393,'_L'},
     {var,393,'_S'},
     {var,393,'G'}],
    [],
    [{call,394,
      {atom,394,process_split_params},
      [{var,394,'T'},
       {var,394,'C'},
       {op,394,'-',{integer,394,1}},
       {atom,394,true},
       {var,394,'G'}]}]},
   {clause,395,
    [{cons,395,{tuple,395,[{atom,395,parts},{integer,395,0}]},{var,395,'T'}},
     {var,395,'C'},
     {var,395,'_L'},
     {var,395,'_S'},
     {var,395,'G'}],
    [],
    [{call,396,
      {atom,396,process_split_params},
      [{var,396,'T'},
       {var,396,'C'},
       {op,396,'-',{integer,396,1}},
       {atom,396,true},
       {var,396,'G'}]}]},
   {clause,397,
    [{cons,397,{tuple,397,[{atom,397,parts},{var,397,'N'}]},{var,397,'T'}},
     {var,397,'C'},
     {var,397,'_L'},
     {var,397,'_S'},
     {var,397,'G'}],
    [[{call,397,{atom,397,is_integer},[{var,397,'N'}]},
      {op,397,'>=',{var,397,'N'},{integer,397,1}}]],
    [{call,398,
      {atom,398,process_split_params},
      [{var,398,'T'},
       {var,398,'C'},
       {op,398,'-',{var,398,'N'},{integer,398,1}},
       {atom,398,false},
       {var,398,'G'}]}]},
   {clause,399,
    [{cons,399,
      {tuple,399,[{atom,399,parts},{atom,399,infinity}]},
      {var,399,'T'}},
     {var,399,'C'},
     {var,399,'_L'},
     {var,399,'_S'},
     {var,399,'G'}],
    [],
    [{call,400,
      {atom,400,process_split_params},
      [{var,400,'T'},
       {var,400,'C'},
       {op,400,'-',{integer,400,1}},
       {atom,400,false},
       {var,400,'G'}]}]},
   {clause,401,
    [{cons,401,{tuple,401,[{atom,401,parts},{var,401,'_'}]},{var,401,'_'}},
     {var,401,'_'},
     {var,401,'_'},
     {var,401,'_'},
     {var,401,'_'}],
    [],
    [{call,402,{atom,402,throw},[{atom,402,badopt}]}]},
   {clause,403,
    [{cons,403,{atom,403,group},{var,403,'T'}},
     {var,403,'C'},
     {var,403,'L'},
     {var,403,'S'},
     {var,403,'_G'}],
    [],
    [{call,404,
      {atom,404,process_split_params},
      [{var,404,'T'},
       {var,404,'C'},
       {var,404,'L'},
       {var,404,'S'},
       {atom,404,true}]}]},
   {clause,405,
    [{cons,405,{atom,405,global},{var,405,'_'}},
     {var,405,'_'},
     {var,405,'_'},
     {var,405,'_'},
     {var,405,'_'}],
    [],
    [{call,406,{atom,406,throw},[{atom,406,badopt}]}]},
   {clause,407,
    [{cons,407,{atom,407,report_errors},{var,407,'_'}},
     {var,407,'_'},
     {var,407,'_'},
     {var,407,'_'},
     {var,407,'_'}],
    [],
    [{call,408,{atom,408,throw},[{atom,408,badopt}]}]},
   {clause,409,
    [{cons,409,
      {tuple,409,[{atom,409,capture},{var,409,'_'},{var,409,'_'}]},
      {var,409,'_'}},
     {var,409,'_'},
     {var,409,'_'},
     {var,409,'_'},
     {var,409,'_'}],
    [],
    [{call,410,{atom,410,throw},[{atom,410,badopt}]}]},
   {clause,411,
    [{cons,411,{tuple,411,[{atom,411,capture},{var,411,'_'}]},{var,411,'_'}},
     {var,411,'_'},
     {var,411,'_'},
     {var,411,'_'},
     {var,411,'_'}],
    [],
    [{call,412,{atom,412,throw},[{atom,412,badopt}]}]},
   {clause,413,
    [{cons,413,
      {tuple,413,[{atom,413,return},{atom,413,iodata}]},
      {var,413,'T'}},
     {var,413,'_C'},
     {var,413,'L'},
     {var,413,'S'},
     {var,413,'G'}],
    [],
    [{call,414,
      {atom,414,process_split_params},
      [{var,414,'T'},
       {atom,414,iodata},
       {var,414,'L'},
       {var,414,'S'},
       {var,414,'G'}]}]},
   {clause,415,
    [{cons,415,{tuple,415,[{atom,415,return},{atom,415,list}]},{var,415,'T'}},
     {var,415,'_C'},
     {var,415,'L'},
     {var,415,'S'},
     {var,415,'G'}],
    [],
    [{call,416,
      {atom,416,process_split_params},
      [{var,416,'T'},
       {atom,416,list},
       {var,416,'L'},
       {var,416,'S'},
       {var,416,'G'}]}]},
   {clause,417,
    [{cons,417,
      {tuple,417,[{atom,417,return},{atom,417,binary}]},
      {var,417,'T'}},
     {var,417,'_C'},
     {var,417,'L'},
     {var,417,'S'},
     {var,417,'G'}],
    [],
    [{call,418,
      {atom,418,process_split_params},
      [{var,418,'T'},
       {atom,418,binary},
       {var,418,'L'},
       {var,418,'S'},
       {var,418,'G'}]}]},
   {clause,419,
    [{cons,419,{tuple,419,[{atom,419,return},{var,419,'_'}]},{var,419,'_'}},
     {var,419,'_'},
     {var,419,'_'},
     {var,419,'_'},
     {var,419,'_'}],
    [],
    [{call,420,{atom,420,throw},[{atom,420,badopt}]}]},
   {clause,421,
    [{cons,421,{var,421,'H'},{var,421,'T'}},
     {var,421,'C'},
     {var,421,'L'},
     {var,421,'S'},
     {var,421,'G'}],
    [],
    [{match,422,
      {tuple,422,
       [{var,422,'NT'},
        {var,422,'NC'},
        {var,422,'NL'},
        {var,422,'NS'},
        {var,422,'NG'}]},
      {call,422,
       {atom,422,process_split_params},
       [{var,422,'T'},
        {var,422,'C'},
        {var,422,'L'},
        {var,422,'S'},
        {var,422,'G'}]}},
     {tuple,423,
      [{cons,423,{var,423,'H'},{var,423,'NT'}},
       {var,423,'NC'},
       {var,423,'NL'},
       {var,423,'NS'},
       {var,423,'NG'}]}]}]},
 {function,425,apply_mlist,3,
  [{clause,425,
    [{var,425,'Subject'},{var,425,'Replacement'},{var,425,'Mlist'}],
    [],
    [{call,426,
      {atom,426,do_mlist},
      [{var,426,'Subject'},
       {var,426,'Subject'},
       {integer,426,0},
       {call,426,{atom,426,precomp_repl},[{var,426,'Replacement'}]},
       {var,426,'Mlist'}]}]}]},
 {function,429,precomp_repl,1,
  [{clause,429,[{bin,429,[]}],[],[{nil,430}]},
   {clause,431,
    [{bin,431,
      [{bin_element,431,{char,431,92},default,default},
       {bin_element,431,{char,431,103},default,default},
       {bin_element,431,{char,431,123},default,default},
       {bin_element,431,{var,431,'Rest'},default,[binary]}]}],
    [[{op,431,'>',
       {call,431,{atom,431,byte_size},[{var,431,'Rest'}]},
       {integer,431,0}}]],
    [{match,432,
      {tuple,432,
       [{var,432,'NS'},
        {bin,432,
         [{bin_element,432,{char,432,125},default,default},
          {bin_element,432,{var,432,'NRest'},default,[binary]}]}]},
      {call,432,{atom,432,pick_int},[{var,432,'Rest'}]}},
     {cons,433,
      {call,433,{atom,433,list_to_integer},[{var,433,'NS'}]},
      {call,433,{atom,433,precomp_repl},[{var,433,'NRest'}]}}]},
   {clause,434,
    [{bin,434,
      [{bin_element,434,{char,434,92},default,default},
       {bin_element,434,{char,434,103},default,default},
       {bin_element,434,{var,434,'Rest'},default,[binary]}]}],
    [[{op,434,'>',
       {call,434,{atom,434,byte_size},[{var,434,'Rest'}]},
       {integer,434,0}}]],
    [{match,435,
      {tuple,435,[{var,435,'NS'},{var,435,'NRest'}]},
      {call,435,{atom,435,pick_int},[{var,435,'Rest'}]}},
     {cons,436,
      {call,436,{atom,436,list_to_integer},[{var,436,'NS'}]},
      {call,436,{atom,436,precomp_repl},[{var,436,'NRest'}]}}]},
   {clause,437,
    [{bin,437,
      [{bin_element,437,{char,437,92},default,default},
       {bin_element,437,{var,437,'X'},default,default},
       {bin_element,437,{var,437,'Rest'},default,[binary]}]}],
    [[{op,437,'<',{var,437,'X'},{char,437,49}}],
     [{op,437,'>',{var,437,'X'},{char,437,57}}]],
    [{'case',439,
      {call,439,{atom,439,precomp_repl},[{var,439,'Rest'}]},
      [{clause,440,
        [{cons,440,{var,440,'BHead'},{var,440,'T0'}}],
        [[{call,440,{atom,440,is_binary},[{var,440,'BHead'}]}]],
        [{cons,441,
          {bin,441,
           [{bin_element,441,{var,441,'X'},default,default},
            {bin_element,441,{var,441,'BHead'},default,[binary]}]},
          {var,441,'T0'}}]},
       {clause,442,
        [{var,442,'Other'}],
        [],
        [{cons,443,
          {bin,443,[{bin_element,443,{var,443,'X'},default,default}]},
          {var,443,'Other'}}]}]}]},
   {clause,445,
    [{bin,445,
      [{bin_element,445,{char,445,92},default,default},
       {bin_element,445,{var,445,'Rest'},default,[binary]}]}],
    [[{op,445,'>',
       {call,445,{atom,445,byte_size},[{var,445,'Rest'}]},
       {integer,445,0}}]],
    [{match,446,
      {tuple,446,[{var,446,'NS'},{var,446,'NRest'}]},
      {call,446,{atom,446,pick_int},[{var,446,'Rest'}]}},
     {cons,447,
      {call,447,{atom,447,list_to_integer},[{var,447,'NS'}]},
      {call,447,{atom,447,precomp_repl},[{var,447,'NRest'}]}}]},
   {clause,448,
    [{bin,448,
      [{bin_element,448,{char,448,38},default,default},
       {bin_element,448,{var,448,'Rest'},default,[binary]}]}],
    [],
    [{cons,449,
      {integer,449,0},
      {call,449,{atom,449,precomp_repl},[{var,449,'Rest'}]}}]},
   {clause,450,
    [{bin,450,
      [{bin_element,450,{var,450,'X'},default,default},
       {bin_element,450,{var,450,'Rest'},default,[binary]}]}],
    [],
    [{'case',451,
      {call,451,{atom,451,precomp_repl},[{var,451,'Rest'}]},
      [{clause,452,
        [{cons,452,{var,452,'BHead'},{var,452,'T0'}}],
        [[{call,452,{atom,452,is_binary},[{var,452,'BHead'}]}]],
        [{cons,453,
          {bin,453,
           [{bin_element,453,{var,453,'X'},default,default},
            {bin_element,453,{var,453,'BHead'},default,[binary]}]},
          {var,453,'T0'}}]},
       {clause,454,
        [{var,454,'Other'}],
        [],
        [{cons,455,
          {bin,455,[{bin_element,455,{var,455,'X'},default,default}]},
          {var,455,'Other'}}]}]}]}]},
 {function,460,pick_int,1,
  [{clause,460,
    [{bin,460,
      [{bin_element,460,{var,460,'X'},default,default},
       {bin_element,460,{var,460,'R'},default,[binary]}]}],
    [[{op,460,'>=',{var,460,'X'},{char,460,48}},
      {op,460,'=<',{var,460,'X'},{char,460,57}}]],
    [{match,461,
      {tuple,461,[{var,461,'Found'},{var,461,'Rest'}]},
      {call,461,{atom,461,pick_int},[{var,461,'R'}]}},
     {tuple,462,
      [{cons,462,{var,462,'X'},{var,462,'Found'}},{var,462,'Rest'}]}]},
   {clause,463,
    [{var,463,'Bin'}],
    [],
    [{tuple,464,[{nil,464},{var,464,'Bin'}]}]}]},
 {function,466,do_mlist,5,
  [{clause,466,
    [{var,466,'_'},{bin,466,[]},{var,466,'_'},{var,466,'_'},{nil,466}],
    [],
    [{nil,467}]},
   {clause,468,
    [{var,468,'_'},{var,468,'Subject'},{var,468,'_'},{var,468,'_'},{nil,468}],
    [],
    [{var,469,'Subject'}]},
   {clause,470,
    [{var,470,'Whole'},
     {var,470,'Subject'},
     {var,470,'Pos'},
     {var,470,'Repl'},
     {cons,470,
      {cons,470,
       {tuple,470,[{var,470,'MPos'},{var,470,'Count'}]},
       {var,470,'Sub'}},
      {var,470,'Tail'}}],
    [[{op,471,'>',{var,471,'MPos'},{var,471,'Pos'}}]],
    [{match,472,
      {var,472,'EatLength'},
      {op,472,'-',{var,472,'MPos'},{var,472,'Pos'}}},
     {match,473,
      {bin,473,
       [{bin_element,473,{var,473,'Untouched'},{var,473,'EatLength'},[binary]},
        {bin_element,473,{var,473,'Rest'},default,[binary]}]},
      {var,473,'Subject'}},
     {cons,474,
      {var,474,'Untouched'},
      {call,474,
       {atom,474,do_mlist},
       [{var,474,'Whole'},
        {var,474,'Rest'},
        {var,474,'MPos'},
        {var,474,'Repl'},
        {cons,475,
         {cons,475,
          {tuple,475,[{var,475,'MPos'},{var,475,'Count'}]},
          {var,475,'Sub'}},
         {var,475,'Tail'}}]}}]},
   {clause,476,
    [{var,476,'Whole'},
     {var,476,'Subject'},
     {var,476,'Pos'},
     {var,476,'Repl'},
     {cons,476,
      {cons,476,
       {tuple,476,[{var,476,'MPos'},{var,476,'Count'}]},
       {var,476,'Sub'}},
      {var,476,'Tail'}}],
    [[{op,477,'=:=',{var,477,'MPos'},{var,477,'Pos'}}]],
    [{match,478,{var,478,'EatLength'},{var,478,'Count'}},
     {match,479,
      {bin,479,
       [{bin_element,479,{var,479,'_'},{var,479,'EatLength'},[binary]},
        {bin_element,479,{var,479,'Rest'},default,[binary]}]},
      {var,479,'Subject'}},
     {match,480,
      {var,480,'NewData'},
      {call,480,
       {atom,480,do_replace},
       [{var,480,'Whole'},
        {var,480,'Repl'},
        {cons,480,
         {tuple,480,[{var,480,'MPos'},{var,480,'Count'}]},
         {var,480,'Sub'}}]}},
     {cons,481,
      {var,481,'NewData'},
      {call,481,
       {atom,481,do_mlist},
       [{var,481,'Whole'},
        {var,481,'Rest'},
        {op,481,'+',{var,481,'Pos'},{var,481,'EatLength'}},
        {var,481,'Repl'},
        {var,481,'Tail'}]}}]}]},
 {function,484,do_replace,3,
  [{clause,484,
    [{var,484,'_'},{cons,484,{var,484,'Bin'},{nil,484}},{var,484,'_'}],
    [[{call,484,{atom,484,is_binary},[{var,484,'Bin'}]}]],
    [{var,485,'Bin'}]},
   {clause,486,
    [{var,486,'Subject'},{var,486,'Repl'},{var,486,'SubExprs0'}],
    [],
    [{match,487,
      {var,487,'SubExprs'},
      {call,487,{atom,487,list_to_tuple},[{var,487,'SubExprs0'}]}},
     {lc,488,
      {'case',488,
       {var,488,'Part'},
       [{clause,489,
         [{var,489,'N'}],
         [[{call,489,{atom,489,is_integer},[{var,489,'N'}]}]],
         [{'if',490,
           [{clause,491,[],
             [[{op,491,'=<',
                {call,491,{atom,491,tuple_size},[{var,491,'SubExprs'}]},
                {var,491,'N'}}]],
             [{bin,492,[]}]},
            {clause,493,[],
             [[{atom,493,true}]],
             [{match,494,
               {tuple,494,[{var,494,'SPos'},{var,494,'SLen'}]},
               {call,494,
                {atom,494,element},
                [{op,494,'+',{var,494,'N'},{integer,494,1}},
                 {var,494,'SubExprs'}]}},
              {'if',495,
               [{clause,496,[],
                 [[{op,496,'<',{var,496,'SPos'},{integer,496,0}}]],
                 [{bin,497,[]}]},
                {clause,498,[],
                 [[{atom,498,true}]],
                 [{match,499,
                   {bin,499,
                    [{bin_element,499,{var,499,'_'},{var,499,'SPos'},[binary]},
                     {bin_element,499,
                      {var,499,'Res'},
                      {var,499,'SLen'},
                      [binary]},
                     {bin_element,499,{var,499,'_'},default,[binary]}]},
                   {var,500,'Subject'}},
                  {var,501,'Res'}]}]}]}]}]},
        {clause,504,[{var,504,'Other'}],[],[{var,505,'Other'}]}]},
      [{generate,506,{var,506,'Part'},{var,506,'Repl'}}]}]}]},
 {function,509,check_for_unicode,2,
  [{clause,509,
    [{tuple,509,
      [{atom,509,re_pattern},
       {var,509,'_'},
       {integer,509,1},
       {var,509,'_'},
       {var,509,'_'}]},
     {var,509,'_'}],
    [],
    [{atom,510,true}]},
   {clause,511,
    [{tuple,511,
      [{atom,511,re_pattern},
       {var,511,'_'},
       {integer,511,0},
       {var,511,'_'},
       {var,511,'_'}]},
     {var,511,'_'}],
    [],
    [{atom,512,false}]},
   {clause,513,
    [{var,513,'_'},{var,513,'L'}],
    [],
    [{call,514,
      {remote,514,{atom,514,lists},{atom,514,member}},
      [{atom,514,unicode},{var,514,'L'}]}]}]},
 {function,516,check_for_crlf,2,
  [{clause,516,
    [{tuple,516,
      [{atom,516,re_pattern},
       {var,516,'_'},
       {var,516,'_'},
       {integer,516,1},
       {var,516,'_'}]},
     {var,516,'_'}],
    [],
    [{atom,517,true}]},
   {clause,518,
    [{tuple,518,
      [{atom,518,re_pattern},
       {var,518,'_'},
       {var,518,'_'},
       {integer,518,0},
       {var,518,'_'}]},
     {var,518,'_'}],
    [],
    [{atom,519,false}]},
   {clause,520,
    [{var,520,'_'},{var,520,'L'}],
    [],
    [{'case',521,
      {call,521,
       {remote,521,{atom,521,lists},{atom,521,keysearch}},
       [{atom,521,newline},{integer,521,1},{var,521,'L'}]},
      [{clause,522,
        [{tuple,522,
          [{atom,522,value},{tuple,522,[{atom,522,newline},{atom,522,any}]}]}],
        [],
        [{atom,522,true}]},
       {clause,523,
        [{tuple,523,
          [{atom,523,value},
           {tuple,523,[{atom,523,newline},{atom,523,crlf}]}]}],
        [],
        [{atom,523,true}]},
       {clause,524,
        [{tuple,524,
          [{atom,524,value},
           {tuple,524,[{atom,524,newline},{atom,524,anycrlf}]}]}],
        [],
        [{atom,524,true}]},
       {clause,525,[{var,525,'_'}],[],[{atom,525,false}]}]}]}]},
 {function,542,process_parameters,6,
  [{clause,542,
    [{nil,542},
     {var,542,'InitialOffset'},
     {var,542,'SelectReturn'},
     {var,542,'ConvertReturn'},
     {var,542,'_'},
     {var,542,'_'}],
    [],
    [{tuple,543,
      [{nil,543},
       {var,543,'InitialOffset'},
       {var,543,'SelectReturn'},
       {var,543,'ConvertReturn'}]}]},
   {clause,544,
    [{cons,544,{tuple,544,[{atom,544,offset},{var,544,'N'}]},{var,544,'T'}},
     {var,544,'_Init0'},
     {var,544,'Select0'},
     {var,544,'Return0'},
     {var,544,'CC'},
     {var,544,'RE'}],
    [],
    [{call,545,
      {atom,545,process_parameters},
      [{var,545,'T'},
       {var,545,'N'},
       {var,545,'Select0'},
       {var,545,'Return0'},
       {var,545,'CC'},
       {var,545,'RE'}]}]},
   {clause,546,
    [{cons,546,{atom,546,global},{var,546,'T'}},
     {var,546,'Init0'},
     {var,546,'Select0'},
     {var,546,'Return0'},
     {var,546,'CC'},
     {var,546,'RE'}],
    [],
    [{call,547,
      {atom,547,process_parameters},
      [{var,547,'T'},
       {var,547,'Init0'},
       {var,547,'Select0'},
       {var,547,'Return0'},
       {var,547,'CC'},
       {var,547,'RE'}]}]},
   {clause,548,
    [{cons,548,
      {tuple,548,[{atom,548,capture},{var,548,'Values'},{var,548,'Type'}]},
      {var,548,'T'}},
     {var,548,'Init0'},
     {var,548,'Select0'},
     {var,548,'_Return0'},
     {var,548,'CC'},
     {var,548,'RE'}],
    [],
    [{call,549,
      {atom,549,process_parameters},
      [{cons,549,
        {tuple,549,[{atom,549,capture},{var,549,'Values'}]},
        {var,549,'T'}},
       {var,549,'Init0'},
       {var,549,'Select0'},
       {var,549,'Type'},
       {var,549,'CC'},
       {var,549,'RE'}]}]},
   {clause,550,
    [{cons,550,
      {tuple,550,[{atom,550,capture},{var,550,'Values'}]},
      {var,550,'T'}},
     {var,550,'Init0'},
     {var,550,'Select0'},
     {var,550,'Return0'},
     {var,550,'CC'},
     {var,550,'RE'}],
    [],
    [{match,552,
      {tuple,552,
       [{var,552,'NewTail'},
        {var,552,'Init1'},
        {var,552,'Select1'},
        {var,552,'Return1'}]},
      {call,553,
       {atom,553,process_parameters},
       [{var,553,'T'},
        {var,553,'Init0'},
        {var,553,'Select0'},
        {var,553,'Return0'},
        {var,553,'CC'},
        {var,553,'RE'}]}},
     {'case',554,
      {var,554,'Select1'},
      [{clause,555,
        [{atom,555,false}],
        [],
        [{'case',556,
          {var,556,'Values'},
          [{clause,557,
            [{atom,557,all}],
            [],
            [{tuple,558,
              [{cons,558,
                {tuple,558,[{atom,558,capture},{atom,558,all}]},
                {var,558,'NewTail'}},
               {var,558,'Init1'},
               {atom,558,all},
               {var,558,'Return0'}]}]},
           {clause,559,
            [{atom,559,all_names}],
            [],
            [{'case',560,
              {call,560,
               {remote,560,{atom,560,re},{atom,560,inspect}},
               [{var,560,'RE'},{atom,560,namelist}]},
              [{clause,561,
                [{tuple,561,[{atom,561,namelist},{nil,561}]}],
                [],
                [{tuple,562,
                  [{cons,562,
                    {tuple,562,[{atom,562,capture},{atom,562,first}]},
                    {var,562,'NewTail'}},
                   {var,562,'Init1'},
                   {atom,562,none},
                   {var,562,'Return0'}]}]},
               {clause,563,
                [{tuple,563,[{atom,563,namelist},{var,563,'List'}]}],
                [],
                [{tuple,564,
                  [{cons,564,
                    {tuple,564,
                     [{atom,564,capture},
                      {cons,564,{integer,564,0},{var,564,'List'}}]},
                    {var,564,'NewTail'}},
                   {var,564,'Init1'},
                   {atom,564,stripfirst},
                   {var,564,'Return0'}]}]}]}]},
           {clause,566,
            [{atom,566,first}],
            [],
            [{tuple,567,
              [{cons,567,
                {tuple,567,[{atom,567,capture},{atom,567,first}]},
                {var,567,'NewTail'}},
               {var,567,'Init1'},
               {atom,567,all},
               {var,567,'Return0'}]}]},
           {clause,568,
            [{atom,568,all_but_first}],
            [],
            [{tuple,569,
              [{cons,569,
                {tuple,569,[{atom,569,capture},{atom,569,all}]},
                {var,569,'NewTail'}},
               {var,569,'Init1'},
               {atom,569,stripfirst},
               {var,569,'Return0'}]}]},
           {clause,570,
            [{atom,570,none}],
            [],
            [{tuple,571,
              [{cons,571,
                {tuple,571,[{atom,571,capture},{atom,571,first}]},
                {var,571,'NewTail'}},
               {var,571,'Init1'},
               {atom,571,none},
               {var,571,'Return0'}]}]},
           {clause,572,
            [{nil,572}],
            [],
            [{tuple,573,
              [{cons,573,
                {tuple,573,[{atom,573,capture},{atom,573,first}]},
                {var,573,'NewTail'}},
               {var,573,'Init1'},
               {atom,573,none},
               {var,573,'Return0'}]}]},
           {clause,574,
            [{var,574,'List'}],
            [[{call,574,{atom,574,is_list},[{var,574,'List'}]}]],
            [{tuple,575,
              [{cons,575,
                {tuple,575,
                 [{atom,575,capture},
                  {cons,575,{integer,575,0},{var,575,'List'}}]},
                {var,575,'NewTail'}},
               {var,576,'Init1'},
               {atom,576,stripfirst},
               {var,576,'Return0'}]}]},
           {clause,577,
            [{var,577,'_'}],
            [],
            [{call,578,{atom,578,throw},[{atom,578,badlist}]}]}]}]},
       {clause,580,
        [{var,580,'_'}],
        [],
        [{tuple,582,
          [{var,582,'NewTail'},
           {var,582,'Init1'},
           {var,582,'Select1'},
           {var,582,'Return1'}]}]}]}]},
   {clause,584,
    [{cons,584,{var,584,'H'},{var,584,'T'}},
     {var,584,'Init0'},
     {var,584,'Select0'},
     {var,584,'Return0'},
     {atom,584,true},
     {var,584,'RE'}],
    [],
    [{'case',585,
      {call,585,{atom,585,copt},[{var,585,'H'}]},
      [{clause,586,
        [{atom,586,true}],
        [],
        [{call,587,
          {atom,587,process_parameters},
          [{var,587,'T'},
           {var,587,'Init0'},
           {var,587,'Select0'},
           {var,587,'Return0'},
           {atom,587,true},
           {var,587,'RE'}]}]},
       {clause,588,
        [{atom,588,false}],
        [],
        [{match,589,
          {tuple,589,
           [{var,589,'NewT'},
            {var,589,'Init'},
            {var,589,'Select'},
            {var,589,'Return'}]},
          {call,590,
           {atom,590,process_parameters},
           [{var,590,'T'},
            {var,590,'Init0'},
            {var,590,'Select0'},
            {var,590,'Return0'},
            {atom,590,true},
            {var,590,'RE'}]}},
         {tuple,591,
          [{cons,591,{var,591,'H'},{var,591,'NewT'}},
           {var,591,'Init'},
           {var,591,'Select'},
           {var,591,'Return'}]}]}]}]},
   {clause,593,
    [{cons,593,{var,593,'H'},{var,593,'T'}},
     {var,593,'Init0'},
     {var,593,'Select0'},
     {var,593,'Return0'},
     {atom,593,false},
     {var,593,'RE'}],
    [],
    [{match,594,
      {tuple,594,
       [{var,594,'NewT'},
        {var,594,'Init'},
        {var,594,'Select'},
        {var,594,'Return'}]},
      {call,595,
       {atom,595,process_parameters},
       [{var,595,'T'},
        {var,595,'Init0'},
        {var,595,'Select0'},
        {var,595,'Return0'},
        {atom,595,false},
        {var,595,'RE'}]}},
     {tuple,596,
      [{cons,596,{var,596,'H'},{var,596,'NewT'}},
       {var,596,'Init'},
       {var,596,'Select'},
       {var,596,'Return'}]}]},
   {clause,597,
    [{var,597,'_'},
     {var,597,'_'},
     {var,597,'_'},
     {var,597,'_'},
     {var,597,'_'},
     {var,597,'_'}],
    [],
    [{call,598,{atom,598,throw},[{atom,598,badlist}]}]}]},
 {function,600,postprocess,5,
  [{clause,600,
    [{tuple,600,[{atom,600,match},{nil,600}]},
     {var,600,'_'},
     {var,600,'_'},
     {var,600,'_'},
     {var,600,'_'}],
    [],
    [{atom,601,nomatch}]},
   {clause,602,
    [{tuple,602,[{atom,602,match},{var,602,'_'}]},
     {atom,602,none},
     {var,602,'_'},
     {var,602,'_'},
     {var,602,'_'}],
    [],
    [{atom,603,match}]},
   {clause,604,
    [{tuple,604,[{atom,604,match},{var,604,'M'}]},
     {var,604,'Any'},
     {atom,604,binary},
     {var,604,'Flat'},
     {var,604,'Uni'}],
    [],
    [{call,605,
      {atom,605,binarify},
      [{call,605,
        {atom,605,postprocess},
        [{tuple,605,[{atom,605,match},{var,605,'M'}]},
         {var,605,'Any'},
         {atom,605,index},
         {var,605,'Flat'},
         {var,605,'Uni'}]},
       {var,605,'Flat'}]}]},
   {clause,606,
    [{tuple,606,[{atom,606,match},{var,606,'M'}]},
     {var,606,'Any'},
     {atom,606,list},
     {var,606,'Flat'},
     {var,606,'Uni'}],
    [],
    [{call,607,
      {atom,607,listify},
      [{call,607,
        {atom,607,postprocess},
        [{tuple,607,[{atom,607,match},{var,607,'M'}]},
         {var,607,'Any'},
         {atom,607,index},
         {var,607,'Flat'},
         {var,607,'Uni'}]},
       {var,607,'Flat'},
       {var,607,'Uni'}]}]},
   {clause,608,
    [{tuple,608,[{atom,608,match},{var,608,'M'}]},
     {atom,608,all},
     {atom,608,index},
     {var,608,'_'},
     {var,608,'_'}],
    [],
    [{tuple,609,[{atom,609,match},{var,609,'M'}]}]},
   {clause,610,
    [{tuple,610,[{atom,610,match},{var,610,'M'}]},
     {atom,610,false},
     {atom,610,index},
     {var,610,'_'},
     {var,610,'_'}],
    [],
    [{tuple,611,[{atom,611,match},{var,611,'M'}]}]},
   {clause,612,
    [{tuple,612,[{atom,612,match},{var,612,'M'}]},
     {atom,612,stripfirst},
     {atom,612,index},
     {var,612,'_'},
     {var,612,'_'}],
    [],
    [{tuple,613,
      [{atom,613,match},
       {lc,613,
        {var,613,'T'},
        [{generate,613,
          {cons,613,{var,613,'_'},{var,613,'T'}},
          {var,613,'M'}}]}]}]}]},
 {function,615,binarify,2,
  [{clause,615,
    [{tuple,615,[{atom,615,match},{var,615,'M'}]},{var,615,'Flat'}],
    [],
    [{tuple,616,
      [{atom,616,match},
       {lc,616,
        {lc,616,
         {'case',616,
          {tuple,616,[{var,616,'I'},{var,616,'L'}]},
          [{clause,617,
            [{tuple,617,[{op,617,'-',{integer,617,1}},{integer,617,0}]}],
            [],
            [{bin,618,[]}]},
           {clause,619,
            [{tuple,619,[{var,619,'SPos'},{var,619,'SLen'}]}],
            [],
            [{match,620,
              {bin,620,
               [{bin_element,620,{var,620,'_'},{var,620,'SPos'},[binary]},
                {bin_element,620,{var,620,'Res'},{var,620,'SLen'},[binary]},
                {bin_element,620,{var,620,'_'},default,[binary]}]},
              {var,620,'Flat'}},
             {var,621,'Res'}]}]},
         [{generate,622,
           {tuple,622,[{var,622,'I'},{var,622,'L'}]},
           {var,622,'One'}}]},
        [{generate,622,{var,622,'One'},{var,622,'M'}}]}]}]}]},
 {function,623,listify,3,
  [{clause,623,
    [{tuple,623,[{atom,623,match},{var,623,'M'}]},
     {var,623,'Flat'},
     {var,623,'Uni'}],
    [],
    [{tuple,624,
      [{atom,624,match},
       {lc,624,
        {lc,624,
         {'case',624,
          {tuple,624,[{var,624,'I'},{var,624,'L'}]},
          [{clause,625,
            [{tuple,625,[{var,625,'_'},{integer,625,0}]}],
            [],
            [{nil,626}]},
           {clause,627,
            [{tuple,627,[{var,627,'SPos'},{var,627,'SLen'}]}],
            [],
            [{'case',628,
              {var,628,'Uni'},
              [{clause,629,
                [{atom,629,true}],
                [],
                [{match,630,
                  {bin,630,
                   [{bin_element,630,{var,630,'_'},{var,630,'SPos'},[binary]},
                    {bin_element,630,
                     {var,630,'Res'},
                     {var,630,'SLen'},
                     [binary]},
                    {bin_element,630,{var,630,'_'},default,[binary]}]},
                  {var,630,'Flat'}},
                 {call,631,
                  {remote,631,
                   {atom,631,unicode},
                   {atom,631,characters_to_list}},
                  [{var,631,'Res'},{atom,631,unicode}]}]},
               {clause,632,
                [{atom,632,false}],
                [],
                [{match,633,
                  {var,633,'Start'},
                  {op,633,'+',{var,633,'SPos'},{integer,633,1}}},
                 {match,634,
                  {var,634,'End'},
                  {op,634,'+',{var,634,'SPos'},{var,634,'SLen'}}},
                 {call,635,
                  {atom,635,binary_to_list},
                  [{var,635,'Flat'},
                   {var,635,'Start'},
                   {var,635,'End'}]}]}]}]}]},
         [{generate,637,
           {tuple,637,[{var,637,'I'},{var,637,'L'}]},
           {var,637,'One'}}]},
        [{generate,637,{var,637,'One'},{var,637,'M'}}]}]}]}]},
 {function,639,ubinarify,2,
  [{clause,639,
    [{tuple,639,[{atom,639,match},{var,639,'M'}]},{var,639,'Flat'}],
    [],
    [{tuple,640,
      [{atom,640,match},
       {lc,640,
        {'case',640,
         {tuple,640,[{var,640,'I'},{var,640,'L'}]},
         [{clause,641,
           [{tuple,641,[{op,641,'-',{integer,641,1}},{integer,641,0}]}],
           [],
           [{bin,642,[]}]},
          {clause,643,
           [{tuple,643,[{var,643,'SPos'},{var,643,'SLen'}]}],
           [],
           [{match,644,
             {bin,644,
              [{bin_element,644,{var,644,'_'},{var,644,'SPos'},[binary]},
               {bin_element,644,{var,644,'Res'},{var,644,'SLen'},[binary]},
               {bin_element,644,{var,644,'_'},default,[binary]}]},
             {var,644,'Flat'}},
            {var,645,'Res'}]}]},
        [{generate,646,
          {tuple,646,[{var,646,'I'},{var,646,'L'}]},
          {var,646,'M'}}]}]}]},
   {clause,647,[{var,647,'Else'},{var,647,'_'}],[],[{var,648,'Else'}]}]},
 {function,649,ulistify,2,
  [{clause,649,
    [{tuple,649,[{atom,649,match},{var,649,'M'}]},{var,649,'Flat'}],
    [],
    [{tuple,650,
      [{atom,650,match},
       {lc,650,
        {'case',650,
         {tuple,650,[{var,650,'I'},{var,650,'L'}]},
         [{clause,651,
           [{tuple,651,[{var,651,'_'},{integer,651,0}]}],
           [],
           [{nil,652}]},
          {clause,653,
           [{tuple,653,[{var,653,'SPos'},{var,653,'SLen'}]}],
           [],
           [{match,654,
             {bin,654,
              [{bin_element,654,{var,654,'_'},{var,654,'SPos'},[binary]},
               {bin_element,654,{var,654,'Res'},{var,654,'SLen'},[binary]},
               {bin_element,654,{var,654,'_'},default,[binary]}]},
             {var,654,'Flat'}},
            {call,655,
             {remote,655,{atom,655,unicode},{atom,655,characters_to_list}},
             [{var,655,'Res'},{atom,655,unicode}]}]}]},
        [{generate,656,
          {tuple,656,[{var,656,'I'},{var,656,'L'}]},
          {var,656,'M'}}]}]}]},
   {clause,657,[{var,657,'Else'},{var,657,'_'}],[],[{var,658,'Else'}]}]},
 {function,660,process_uparams,2,
  [{clause,660,
    [{cons,660,{atom,660,global},{var,660,'_T'}},{var,660,'_RetType'}],
    [],
    [{call,661,{atom,661,throw},[{atom,661,false}]}]},
   {clause,662,
    [{cons,662,
      {tuple,662,[{atom,662,capture},{var,662,'Values'},{var,662,'Type'}]},
      {var,662,'T'}},
     {var,662,'_OldType'}],
    [],
    [{call,663,
      {atom,663,process_uparams},
      [{cons,663,
        {tuple,663,[{atom,663,capture},{var,663,'Values'}]},
        {var,663,'T'}},
       {var,663,'Type'}]}]},
   {clause,664,
    [{cons,664,{var,664,'H'},{var,664,'T'}},{var,664,'Type'}],
    [],
    [{match,665,
      {tuple,665,[{var,665,'NL'},{var,665,'NType'}]},
      {call,665,{atom,665,process_uparams},[{var,665,'T'},{var,665,'Type'}]}},
     {tuple,666,[{cons,666,{var,666,'H'},{var,666,'NL'}},{var,666,'NType'}]}]},
   {clause,667,
    [{nil,667},{var,667,'Type'}],
    [],
    [{tuple,668,[{nil,668},{var,668,'Type'}]}]}]},
 {function,671,ucompile,2,
  [{clause,671,
    [{var,671,'RE'},{var,671,'Options'}],
    [],
    [{'try',672,
      [{call,673,
        {remote,673,{atom,673,re},{atom,673,compile}},
        [{call,673,
          {remote,673,{atom,673,unicode},{atom,673,characters_to_binary}},
          [{var,673,'RE'},{atom,673,unicode}]},
         {var,673,'Options'}]}],
      [],
      [{clause,675,
        [{tuple,675,[{atom,675,error},{var,675,'AnyError'},{var,675,'_'}]}],
        [],
        [{match,676,
          {tuple,676,
           [{atom,676,'EXIT'},
            {tuple,676,
             [{atom,676,new_stacktrace},
              {cons,676,
               {tuple,676,
                [{var,676,'Mod'},{var,676,'_'},{var,676,'L'},{var,676,'Loc'}]},
               {var,676,'Rest'}}]}]},
          {'catch',677,
           {call,677,
            {remote,677,{atom,677,erlang},{atom,677,error}},
            [{atom,677,new_stacktrace},
             {cons,678,
              {var,678,'RE'},
              {cons,678,{var,678,'Options'},{nil,678}}}]}}},
         {call,679,
          {remote,679,{atom,679,erlang},{atom,679,raise}},
          [{atom,679,error},
           {var,679,'AnyError'},
           {cons,679,
            {tuple,679,
             [{var,679,'Mod'},
              {atom,679,compile},
              {var,679,'L'},
              {var,679,'Loc'}]},
            {var,679,'Rest'}}]}]}],
      []}]}]},
 {function,683,urun,3,
  [{clause,683,
    [{var,683,'Subject'},{var,683,'RE'},{var,683,'Options'}],
    [],
    [{'try',684,
      [{call,685,
        {atom,685,urun2},
        [{var,685,'Subject'},{var,685,'RE'},{var,685,'Options'}]}],
      [],
      [{clause,687,
        [{tuple,687,[{atom,687,error},{var,687,'AnyError'},{var,687,'_'}]}],
        [],
        [{match,688,
          {tuple,688,
           [{atom,688,'EXIT'},
            {tuple,688,
             [{atom,688,new_stacktrace},
              {cons,688,
               {tuple,688,
                [{var,688,'Mod'},{var,688,'_'},{var,688,'L'},{var,688,'Loc'}]},
               {var,688,'Rest'}}]}]},
          {'catch',689,
           {call,689,
            {remote,689,{atom,689,erlang},{atom,689,error}},
            [{atom,689,new_stacktrace},
             {cons,690,
              {var,690,'Subject'},
              {cons,690,
               {var,690,'RE'},
               {cons,690,{var,690,'Options'},{nil,690}}}}]}}},
         {call,691,
          {remote,691,{atom,691,erlang},{atom,691,raise}},
          [{atom,691,error},
           {var,691,'AnyError'},
           {cons,691,
            {tuple,691,
             [{var,691,'Mod'},{atom,691,run},{var,691,'L'},{var,691,'Loc'}]},
            {var,691,'Rest'}}]}]}],
      []}]}]},
 {function,694,urun2,3,
  [{clause,694,
    [{var,694,'Subject0'},{var,694,'RE0'},{var,694,'Options0'}],
    [],
    [{match,695,
      {tuple,695,[{var,695,'Options'},{var,695,'RetType'}]},
      {'case',695,
       {'catch',695,
        {call,695,
         {atom,695,process_uparams},
         [{var,695,'Options0'},{atom,695,index}]}},
       [{clause,696,
         [{tuple,696,[{var,696,'A'},{var,696,'B'}]}],
         [],
         [{tuple,697,[{var,697,'A'},{var,697,'B'}]}]},
        {clause,698,
         [{var,698,'_'}],
         [],
         [{tuple,699,[{var,699,'Options0'},{atom,699,false}]}]}]}},
     {match,701,
      {var,701,'Subject'},
      {call,701,
       {remote,701,{atom,701,unicode},{atom,701,characters_to_binary}},
       [{var,701,'Subject0'},{atom,701,unicode}]}},
     {match,702,
      {var,702,'RE'},
      {'case',702,
       {var,702,'RE0'},
       [{clause,703,
         [{var,703,'BinRE'}],
         [[{call,703,{atom,703,is_binary},[{var,703,'BinRE'}]}]],
         [{var,704,'BinRE'}]},
        {clause,705,
         [{match,705,
           {tuple,705,
            [{atom,705,re_pattern},
             {var,705,'_'},
             {var,705,'_'},
             {var,705,'_'},
             {var,705,'_'}]},
           {var,705,'ReCompiled'}}],
         [],
         [{var,706,'ReCompiled'}]},
        {clause,707,
         [{var,707,'ListRE'}],
         [],
         [{call,708,
           {remote,708,{atom,708,unicode},{atom,708,characters_to_binary}},
           [{var,708,'ListRE'},{atom,708,unicode}]}]}]}},
     {match,710,
      {var,710,'Ret'},
      {call,710,
       {remote,710,{atom,710,re},{atom,710,run}},
       [{var,710,'Subject'},{var,710,'RE'},{var,710,'Options'}]}},
     {'case',711,
      {var,711,'RetType'},
      [{clause,712,
        [{atom,712,binary}],
        [],
        [{call,713,
          {atom,713,ubinarify},
          [{var,713,'Ret'},{var,713,'Subject'}]}]},
       {clause,714,
        [{atom,714,list}],
        [],
        [{call,715,
          {atom,715,ulistify},
          [{var,715,'Ret'},{var,715,'Subject'}]}]},
       {clause,716,[{var,716,'_'}],[],[{var,717,'Ret'}]}]}]}]},
 {function,723,grun,3,
  [{clause,723,
    [{var,723,'Subject'},
     {var,723,'RE'},
     {tuple,723,[{var,723,'Options'},{var,723,'NeedClean'}]}],
    [],
    [{'try',724,
      [{call,725,
        {atom,725,grun2},
        [{var,725,'Subject'},
         {var,725,'RE'},
         {tuple,725,[{var,725,'Options'},{var,725,'NeedClean'}]}]}],
      [],
      [{clause,727,
        [{tuple,727,[{atom,727,error},{var,727,'AnyError'},{var,727,'_'}]}],
        [],
        [{match,728,
          {tuple,728,
           [{atom,728,'EXIT'},
            {tuple,728,
             [{atom,728,new_stacktrace},
              {cons,728,
               {tuple,728,
                [{var,728,'Mod'},{var,728,'_'},{var,728,'L'},{var,728,'Loc'}]},
               {var,728,'Rest'}}]}]},
          {'catch',729,
           {call,729,
            {remote,729,{atom,729,erlang},{atom,729,error}},
            [{atom,729,new_stacktrace},
             {cons,730,
              {var,730,'Subject'},
              {cons,730,
               {var,730,'RE'},
               {cons,730,{var,730,'Options'},{nil,730}}}}]}}},
         {call,731,
          {remote,731,{atom,731,erlang},{atom,731,raise}},
          [{atom,731,error},
           {var,731,'AnyError'},
           {cons,731,
            {tuple,731,
             [{var,731,'Mod'},{atom,731,run},{var,731,'L'},{var,731,'Loc'}]},
            {var,731,'Rest'}}]}]}],
      []}]},
   {clause,733,
    [{var,733,'Subject'},
     {var,733,'RE'},
     {tuple,733,
      [{var,733,'Options'},{var,733,'NeedClean'},{var,733,'OrigRE'}]}],
    [],
    [{'try',734,
      [{call,735,
        {atom,735,grun2},
        [{var,735,'Subject'},
         {var,735,'RE'},
         {tuple,735,[{var,735,'Options'},{var,735,'NeedClean'}]}]}],
      [],
      [{clause,737,
        [{tuple,737,[{atom,737,error},{var,737,'AnyError'},{var,737,'_'}]}],
        [],
        [{match,738,
          {tuple,738,
           [{atom,738,'EXIT'},
            {tuple,738,
             [{atom,738,new_stacktrace},
              {cons,738,
               {tuple,738,
                [{var,738,'Mod'},{var,738,'_'},{var,738,'L'},{var,738,'Loc'}]},
               {var,738,'Rest'}}]}]},
          {'catch',739,
           {call,739,
            {remote,739,{atom,739,erlang},{atom,739,error}},
            [{atom,739,new_stacktrace},
             {cons,740,
              {var,740,'Subject'},
              {cons,740,
               {var,740,'OrigRE'},
               {cons,740,{var,740,'Options'},{nil,740}}}}]}}},
         {call,741,
          {remote,741,{atom,741,erlang},{atom,741,raise}},
          [{atom,741,error},
           {var,741,'AnyError'},
           {cons,741,
            {tuple,741,
             [{var,741,'Mod'},{atom,741,run},{var,741,'L'},{var,741,'Loc'}]},
            {var,741,'Rest'}}]}]}],
      []}]}]},
 {function,744,grun2,3,
  [{clause,744,
    [{var,744,'Subject'},
     {var,744,'RE'},
     {tuple,744,[{var,744,'Options'},{var,744,'NeedClean'}]}],
    [],
    [{match,745,
      {var,745,'Unicode'},
      {call,745,
       {atom,745,check_for_unicode},
       [{var,745,'RE'},{var,745,'Options'}]}},
     {match,746,
      {var,746,'CRLF'},
      {call,746,
       {atom,746,check_for_crlf},
       [{var,746,'RE'},{var,746,'Options'}]}},
     {match,747,
      {var,747,'FlatSubject'},
      {call,747,
       {atom,747,to_binary},
       [{var,747,'Subject'},{var,747,'Unicode'}]}},
     {call,748,
      {atom,748,do_grun},
      [{var,748,'FlatSubject'},
       {var,748,'Subject'},
       {var,748,'Unicode'},
       {var,748,'CRLF'},
       {var,748,'RE'},
       {tuple,748,[{var,748,'Options'},{var,748,'NeedClean'}]}]}]}]},
 {function,750,do_grun,6,
  [{clause,750,
    [{var,750,'FlatSubject'},
     {var,750,'Subject'},
     {var,750,'Unicode'},
     {var,750,'CRLF'},
     {var,750,'RE'},
     {tuple,750,[{var,750,'Options0'},{var,750,'NeedClean'}]}],
    [],
    [{match,752,
      {tuple,751,
       [{var,751,'StrippedOptions'},
        {var,751,'InitialOffset'},
        {var,752,'SelectReturn'},
        {var,752,'ConvertReturn'}]},
      {'case',753,
       {'catch',753,
        {call,754,
         {atom,754,process_parameters},
         [{var,754,'Options0'},
          {integer,754,0},
          {atom,754,false},
          {atom,754,index},
          {var,754,'NeedClean'},
          {var,754,'RE'}]}},
       [{clause,755,
         [{atom,755,badlist}],
         [],
         [{call,756,
           {remote,756,{atom,756,erlang},{atom,756,error}},
           [{atom,756,badarg},
            {cons,756,
             {var,756,'Subject'},
             {cons,756,
              {var,756,'RE'},
              {cons,756,{var,756,'Options0'},{nil,756}}}}]}]},
        {clause,757,
         [{var,757,'CorrectReturn'}],
         [],
         [{var,758,'CorrectReturn'}]}]}},
     {'try',760,
      [{call,761,
        {atom,761,postprocess},
        [{call,761,
          {atom,761,loopexec},
          [{var,761,'FlatSubject'},
           {var,761,'RE'},
           {var,761,'InitialOffset'},
           {call,762,{atom,762,byte_size},[{var,762,'FlatSubject'}]},
           {var,763,'Unicode'},
           {var,763,'CRLF'},
           {var,763,'StrippedOptions'}]},
         {var,764,'SelectReturn'},
         {var,764,'ConvertReturn'},
         {var,764,'FlatSubject'},
         {var,764,'Unicode'}]}],
      [],
      [{clause,766,
        [{tuple,766,[{atom,766,throw},{var,766,'ErrTuple'},{var,766,'_'}]}],
        [],
        [{var,767,'ErrTuple'}]}],
      []}]}]},
 {function,770,loopexec,7,
  [{clause,770,
    [{var,770,'_'},
     {var,770,'_'},
     {var,770,'X'},
     {var,770,'Y'},
     {var,770,'_'},
     {var,770,'_'},
     {var,770,'_'}],
    [[{op,770,'>',{var,770,'X'},{var,770,'Y'}}]],
    [{tuple,771,[{atom,771,match},{nil,771}]}]},
   {clause,772,
    [{var,772,'Subject'},
     {var,772,'RE'},
     {var,772,'X'},
     {var,772,'Y'},
     {var,772,'Unicode'},
     {var,772,'CRLF'},
     {var,772,'Options'}],
    [],
    [{'case',773,
      {call,773,
       {remote,773,{atom,773,re},{atom,773,run}},
       [{var,773,'Subject'},
        {var,773,'RE'},
        {op,773,'++',
         {cons,773,{tuple,773,[{atom,773,offset},{var,773,'X'}]},{nil,773}},
         {var,773,'Options'}}]},
      [{clause,774,
        [{tuple,774,[{atom,774,error},{var,774,'Err'}]}],
        [],
        [{call,775,
          {atom,775,throw},
          [{tuple,775,[{atom,775,error},{var,775,'Err'}]}]}]},
       {clause,776,
        [{atom,776,nomatch}],
        [],
        [{tuple,777,[{atom,777,match},{nil,777}]}]},
       {clause,778,
        [{tuple,778,
          [{atom,778,match},
           {cons,778,
            {tuple,778,[{var,778,'A'},{var,778,'B'}]},
            {var,778,'More'}}]}],
        [],
        [{match,779,
          {tuple,779,[{atom,779,match},{var,779,'Rest'}]},
          {'case',780,
           {op,780,'>',{var,780,'B'},{integer,780,0}},
           [{clause,781,
             [{atom,781,true}],
             [],
             [{call,782,
               {atom,782,loopexec},
               [{var,782,'Subject'},
                {var,782,'RE'},
                {op,782,'+',{var,782,'A'},{var,782,'B'}},
                {var,782,'Y'},
                {var,782,'Unicode'},
                {var,782,'CRLF'},
                {var,782,'Options'}]}]},
            {clause,783,
             [{atom,783,false}],
             [],
             [{match,784,
               {tuple,784,[{atom,784,match},{var,784,'M'}]},
               {'case',785,
                {call,785,
                 {remote,785,{atom,785,re},{atom,785,run}},
                 [{var,785,'Subject'},
                  {var,785,'RE'},
                  {op,786,'++',
                   {cons,785,
                    {tuple,785,[{atom,785,offset},{var,785,'X'}]},
                    {cons,785,
                     {atom,785,notempty_atstart},
                     {cons,786,{atom,786,anchored},{nil,786}}}},
                   {var,786,'Options'}}]},
                [{clause,787,
                  [{atom,787,nomatch}],
                  [],
                  [{tuple,788,[{atom,788,match},{nil,788}]}]},
                 {clause,789,
                  [{tuple,789,[{atom,789,match},{var,789,'Other'}]}],
                  [],
                  [{tuple,790,[{atom,790,match},{var,790,'Other'}]}]}]}},
              {match,792,
               {var,792,'NewA'},
               {'case',792,
                {var,792,'M'},
                [{clause,793,
                  [{cons,793,
                    {tuple,793,[{var,793,'_'},{var,793,'NStep'}]},
                    {var,793,'_'}}],
                  [[{op,793,'>',{var,793,'NStep'},{integer,793,0}}]],
                  [{op,794,'+',{var,794,'A'},{var,794,'NStep'}}]},
                 {clause,795,
                  [{var,795,'_'}],
                  [],
                  [{call,796,
                    {atom,796,forward},
                    [{var,796,'Subject'},
                     {var,796,'A'},
                     {integer,796,1},
                     {var,796,'Unicode'},
                     {var,796,'CRLF'}]}]}]}},
              {match,798,
               {tuple,798,[{atom,798,match},{var,798,'MM'}]},
               {call,798,
                {atom,798,loopexec},
                [{var,798,'Subject'},
                 {var,798,'RE'},
                 {var,798,'NewA'},
                 {var,798,'Y'},
                 {var,799,'Unicode'},
                 {var,799,'CRLF'},
                 {var,799,'Options'}]}},
              {'case',800,
               {var,800,'M'},
               [{clause,801,
                 [{nil,801}],
                 [],
                 [{tuple,802,[{atom,802,match},{var,802,'MM'}]}]},
                {clause,803,
                 [{var,803,'_'}],
                 [],
                 [{tuple,804,
                   [{atom,804,match},
                    {cons,804,{var,804,'M'},{var,804,'MM'}}]}]}]}]}]}},
         {tuple,807,
          [{atom,807,match},
           {cons,807,
            {cons,807,
             {tuple,807,[{var,807,'A'},{var,807,'B'}]},
             {var,807,'More'}},
            {var,807,'Rest'}}]}]}]}]}]},
 {function,810,forward,5,
  [{clause,810,
    [{var,810,'_Chal'},
     {var,810,'A'},
     {integer,810,0},
     {var,810,'_'},
     {var,810,'_'}],
    [],
    [{var,811,'A'}]},
   {clause,812,
    [{var,812,'Chal'},
     {var,812,'A'},
     {var,812,'N'},
     {var,812,'U'},
     {atom,812,true}],
    [],
    [{match,813,
      {bin,813,
       [{bin_element,813,{var,813,'_'},{var,813,'A'},[binary]},
        {bin_element,813,{var,813,'Tl'},default,[binary]}]},
      {var,813,'Chal'}},
     {'case',814,
      {var,814,'Tl'},
      [{clause,815,
        [{bin,815,
          [{bin_element,815,{char,815,13},default,default},
           {bin_element,815,{char,815,10},default,default},
           {bin_element,815,{var,815,'_'},default,[binary]}]}],
        [],
        [{call,816,
          {atom,816,forward},
          [{var,816,'Chal'},
           {op,816,'+',{var,816,'A'},{integer,816,2}},
           {op,816,'-',{var,816,'N'},{integer,816,1}},
           {var,816,'U'},
           {atom,816,true}]}]},
       {clause,817,
        [{var,817,'_'}],
        [],
        [{call,818,
          {atom,818,forward2},
          [{var,818,'Chal'},
           {var,818,'A'},
           {var,818,'N'},
           {var,818,'U'},
           {atom,818,true}]}]}]}]},
   {clause,820,
    [{var,820,'Chal'},
     {var,820,'A'},
     {var,820,'N'},
     {var,820,'U'},
     {atom,820,false}],
    [],
    [{call,821,
      {atom,821,forward2},
      [{var,821,'Chal'},
       {var,821,'A'},
       {var,821,'N'},
       {var,821,'U'},
       {atom,821,false}]}]}]},
 {function,823,forward2,5,
  [{clause,823,
    [{var,823,'Chal'},
     {var,823,'A'},
     {var,823,'N'},
     {atom,823,false},
     {var,823,'CRLF'}],
    [],
    [{call,824,
      {atom,824,forward},
      [{var,824,'Chal'},
       {op,824,'+',{var,824,'A'},{integer,824,1}},
       {op,824,'-',{var,824,'N'},{integer,824,1}},
       {atom,824,false},
       {var,824,'CRLF'}]}]},
   {clause,825,
    [{var,825,'Chal'},
     {var,825,'A'},
     {var,825,'N'},
     {atom,825,true},
     {var,825,'CRLF'}],
    [],
    [{match,826,
      {bin,826,
       [{bin_element,826,{var,826,'_'},{var,826,'A'},[binary]},
        {bin_element,826,{var,826,'Tl'},default,[binary]}]},
      {var,826,'Chal'}},
     {match,827,
      {var,827,'Forw'},
      {'case',827,
       {var,827,'Tl'},
       [{clause,828,
         [{bin,828,
           [{bin_element,828,{integer,828,1},{integer,828,1},default},
            {bin_element,828,{integer,828,1},{integer,828,1},default},
            {bin_element,828,{integer,828,0},{integer,828,1},default},
            {bin_element,828,{var,828,'_'},{integer,828,5},default},
            {bin_element,828,{var,828,'_'},default,[binary]}]}],
         [],
         [{integer,829,2}]},
        {clause,830,
         [{bin,830,
           [{bin_element,830,{integer,830,1},{integer,830,1},default},
            {bin_element,830,{integer,830,1},{integer,830,1},default},
            {bin_element,830,{integer,830,1},{integer,830,1},default},
            {bin_element,830,{integer,830,0},{integer,830,1},default},
            {bin_element,830,{var,830,'_'},{integer,830,4},default},
            {bin_element,830,{var,830,'_'},default,[binary]}]}],
         [],
         [{integer,831,3}]},
        {clause,832,
         [{bin,832,
           [{bin_element,832,{integer,832,1},{integer,832,1},default},
            {bin_element,832,{integer,832,1},{integer,832,1},default},
            {bin_element,832,{integer,832,1},{integer,832,1},default},
            {bin_element,832,{integer,832,1},{integer,832,1},default},
            {bin_element,832,{integer,832,0},{integer,832,1},default},
            {bin_element,832,{var,832,'_'},{integer,832,3},default},
            {bin_element,832,{var,832,'_'},default,[binary]}]}],
         [],
         [{integer,833,4}]},
        {clause,834,[{var,834,'_'}],[],[{integer,835,1}]}]}},
     {call,837,
      {atom,837,forward},
      [{var,837,'Chal'},
       {op,837,'+',{var,837,'A'},{var,837,'Forw'}},
       {op,837,'-',{var,837,'N'},{integer,837,1}},
       {atom,837,true},
       {var,837,'CRLF'}]}]}]},
 {function,839,copt,1,
  [{clause,839,[{atom,839,caseless}],[],[{atom,840,true}]},
   {clause,841,[{atom,841,no_start_optimize}],[],[{atom,842,true}]},
   {clause,843,[{atom,843,never_utf}],[],[{atom,844,true}]},
   {clause,845,[{atom,845,ucp}],[],[{atom,846,true}]},
   {clause,847,[{atom,847,dollar_endonly}],[],[{atom,848,true}]},
   {clause,849,[{atom,849,dotall}],[],[{atom,850,true}]},
   {clause,851,[{atom,851,extended}],[],[{atom,852,true}]},
   {clause,853,[{atom,853,firstline}],[],[{atom,854,true}]},
   {clause,855,[{atom,855,multiline}],[],[{atom,856,true}]},
   {clause,857,[{atom,857,no_auto_capture}],[],[{atom,858,true}]},
   {clause,859,[{atom,859,dupnames}],[],[{atom,860,true}]},
   {clause,861,[{atom,861,ungreedy}],[],[{atom,862,true}]},
   {clause,863,[{atom,863,unicode}],[],[{atom,864,true}]},
   {clause,865,[{var,865,'_'}],[],[{atom,866,false}]}]},
 {function,875,runopt,1,
  [{clause,875,[{atom,875,notempty}],[],[{atom,876,true}]},
   {clause,877,[{atom,877,notempty_atstart}],[],[{atom,878,true}]},
   {clause,879,[{atom,879,notbol}],[],[{atom,880,true}]},
   {clause,881,[{atom,881,noteol}],[],[{atom,882,true}]},
   {clause,883,
    [{tuple,883,[{atom,883,offset},{var,883,'_'}]}],
    [],
    [{atom,884,true}]},
   {clause,885,
    [{tuple,885,[{atom,885,capture},{var,885,'_'},{var,885,'_'}]}],
    [],
    [{atom,886,true}]},
   {clause,887,
    [{tuple,887,[{atom,887,capture},{var,887,'_'}]}],
    [],
    [{atom,888,true}]},
   {clause,889,[{atom,889,global}],[],[{atom,890,true}]},
   {clause,891,
    [{tuple,891,[{atom,891,match_limit},{var,891,'_'}]}],
    [],
    [{atom,892,true}]},
   {clause,893,
    [{tuple,893,[{atom,893,match_limit_recursion},{var,893,'_'}]}],
    [],
    [{atom,894,true}]},
   {clause,895,[{var,895,'_'}],[],[{atom,896,false}]}]},
 {function,898,to_binary,2,
  [{clause,898,
    [{var,898,'Bin'},{var,898,'_IsUnicode'}],
    [[{call,898,{atom,898,is_binary},[{var,898,'Bin'}]}]],
    [{var,899,'Bin'}]},
   {clause,900,
    [{var,900,'Data'},{atom,900,true}],
    [],
    [{call,901,
      {remote,901,{atom,901,unicode},{atom,901,characters_to_binary}},
      [{var,901,'Data'},{atom,901,unicode}]}]},
   {clause,902,
    [{var,902,'Data'},{atom,902,false}],
    [],
    [{call,903,{atom,903,iolist_to_binary},[{var,903,'Data'}]}]}]}]
