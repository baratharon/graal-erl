kernel_config
[]
[]
[{function,39,start_link,0,
  [{clause,39,[],[],
    [{call,39,
      {remote,39,{atom,39,gen_server},{atom,39,start_link}},
      [{atom,39,kernel_config},{nil,39},{nil,39}]}]}]},
 {function,47,init,1,
  [{clause,47,
    [{nil,47}],
    [],
    [{call,48,{atom,48,process_flag},[{atom,48,trap_exit},{atom,48,true}]},
     {'case',49,
      {call,49,{atom,49,sync_nodes},[]},
      [{clause,50,
        [{atom,50,ok}],
        [],
        [{'case',51,
          {call,51,{atom,51,whereis},[{atom,51,dist_ac}]},
          [{clause,52,
            [{var,52,'DAC'}],
            [[{call,52,{atom,52,is_pid},[{var,52,'DAC'}]}]],
            [{op,53,'!',
              {var,53,'DAC'},
              {tuple,53,[{atom,53,go},{call,53,{atom,53,self},[]}]}},
             {'receive',54,
              [{clause,55,
                [{atom,55,dist_ac_took_control}],
                [],
                [{atom,56,ok}]}]}]},
           {clause,58,[{var,58,'_'}],[],[{atom,59,ok}]}]},
         {tuple,61,[{atom,61,ok},{nil,61}]}]},
       {clause,62,
        [{tuple,62,[{atom,62,error},{var,62,'Error'}]}],
        [],
        [{tuple,63,[{atom,63,stop},{var,63,'Error'}]}]}]}]}]},
 {function,68,handle_info,2,
  [{clause,68,
    [{var,68,'_'},{var,68,'State'}],
    [],
    [{tuple,69,[{atom,69,noreply},{var,69,'State'}]}]}]},
 {function,73,terminate,2,
  [{clause,73,[{var,73,'_Reason'},{var,73,'_State'}],[],[{atom,74,ok}]}]},
 {function,78,handle_call,3,
  [{clause,78,
    [{atom,78,'__not_used'},{var,78,'_From'},{var,78,'State'}],
    [],
    [{tuple,79,[{atom,79,reply},{atom,79,ok},{var,79,'State'}]}]}]},
 {function,83,handle_cast,2,
  [{clause,83,
    [{atom,83,'__not_used'},{var,83,'State'}],
    [],
    [{tuple,84,[{atom,84,noreply},{var,84,'State'}]}]}]},
 {function,88,code_change,3,
  [{clause,88,
    [{var,88,'_OldVsn'},{var,88,'State'},{var,88,'_Extra'}],
    [],
    [{tuple,89,[{atom,89,ok},{var,89,'State'}]}]}]},
 {function,94,sync_nodes,0,
  [{clause,94,[],[],
    [{'case',95,
      {'catch',95,{call,95,{atom,95,get_sync_data},[]}},
      [{clause,96,
        [{match,96,
          {tuple,96,[{atom,96,error},{var,96,'Reason'}]},
          {var,96,'Error'}}],
        [],
        [{call,97,
          {remote,97,{atom,97,error_logger},{atom,97,format}},
          [{string,97,"~tp"},{cons,97,{var,97,'Reason'},{nil,97}}]},
         {var,98,'Error'}]},
       {clause,99,
        [{tuple,99,
          [{atom,99,infinity},
           {var,99,'MandatoryNodes'},
           {var,99,'OptionalNodes'}]}],
        [],
        [{'case',100,
          {call,100,
           {atom,100,wait_nodes},
           [{var,100,'MandatoryNodes'},{var,100,'OptionalNodes'}]},
          [{clause,101,[{atom,101,ok}],[],[{atom,103,ok}]},
           {clause,104,[{var,104,'Error'}],[],[{var,105,'Error'}]}]}]},
       {clause,107,
        [{tuple,107,
          [{var,107,'Timeout'},
           {var,107,'MandatoryNodes'},
           {var,107,'OptionalNodes'}]}],
        [],
        [{call,108,
          {atom,108,spawn_link},
          [{atom,108,kernel_config},
           {atom,108,send_timeout},
           {cons,108,
            {var,108,'Timeout'},
            {cons,108,{call,108,{atom,108,self},[]},{nil,108}}}]},
         {'case',109,
          {call,109,
           {atom,109,wait_nodes},
           [{var,109,'MandatoryNodes'},{var,109,'OptionalNodes'}]},
          [{clause,110,[{atom,110,ok}],[],[{atom,112,ok}]},
           {clause,113,[{var,113,'Error'}],[],[{var,114,'Error'}]}]}]},
       {clause,116,[{atom,116,undefined}],[],[{atom,116,ok}]}]}]}]},
 {function,119,send_timeout,2,
  [{clause,119,
    [{var,119,'Timeout'},{var,119,'Pid'}],
    [],
    [{'receive',120,[],
      {var,121,'Timeout'},
      [{op,121,'!',{var,121,'Pid'},{atom,121,timeout}}]}]}]},
 {function,124,wait_nodes,2,
  [{clause,124,
    [{var,124,'Mandatory'},{var,124,'Optional'}],
    [],
    [{match,125,
      {atom,125,ok},
      {call,125,
       {remote,125,{atom,125,net_kernel},{atom,125,monitor_nodes}},
       [{atom,125,true}]}},
     {call,126,
      {remote,126,{atom,126,lists},{atom,126,foreach}},
      [{'fun',126,
        {clauses,
         [{clause,126,
           [{var,126,'Node'}],
           [],
           [{'case',127,
             {call,127,
              {remote,127,{atom,127,net_adm},{atom,127,ping}},
              [{var,127,'Node'}]},
             [{clause,128,
               [{atom,128,pong}],
               [],
               [{op,128,'!',
                 {call,128,{atom,128,self},[]},
                 {tuple,128,[{atom,128,nodeup},{var,128,'Node'}]}}]},
              {clause,129,[{var,129,'_'}],[],[{atom,129,ok}]}]}]}]}},
       {op,132,'++',{var,132,'Mandatory'},{var,132,'Optional'}}]},
     {match,133,
      {var,133,'R'},
      {call,133,
       {atom,133,rec_nodes},
       [{var,133,'Mandatory'},{var,133,'Optional'}]}},
     {match,134,
      {atom,134,ok},
      {call,134,
       {remote,134,{atom,134,net_kernel},{atom,134,monitor_nodes}},
       [{atom,134,false}]}},
     {var,135,'R'}]}]},
 {function,137,rec_nodes,2,
  [{clause,137,[{nil,137},{nil,137}],[],[{atom,137,ok}]},
   {clause,138,
    [{var,138,'Mandatory'},{var,138,'Optional'}],
    [],
    [{'receive',139,
      [{clause,140,
        [{tuple,140,[{atom,140,nodeup},{var,140,'Node'}]}],
        [],
        [{call,140,
          {atom,140,check_up},
          [{var,140,'Node'},{var,140,'Mandatory'},{var,140,'Optional'}]}]},
       {clause,141,
        [{atom,141,timeout}],
        [[{op,141,'=:=',{var,141,'Mandatory'},{nil,141}}]],
        [{atom,141,ok}]},
       {clause,142,
        [{atom,142,timeout}],
        [],
        [{tuple,142,
          [{atom,142,error},
           {tuple,142,
            [{atom,142,mandatory_nodes_down},{var,142,'Mandatory'}]}]}]}]}]}]},
 {function,145,check_up,3,
  [{clause,145,
    [{var,145,'Node'},{var,145,'Mandatory'},{var,145,'Optional'}],
    [],
    [{'case',146,
      {call,146,
       {remote,146,{atom,146,lists},{atom,146,member}},
       [{var,146,'Node'},{var,146,'Mandatory'}]},
      [{clause,147,
        [{atom,147,true}],
        [],
        [{call,148,
          {atom,148,rec_nodes},
          [{call,148,
            {remote,148,{atom,148,lists},{atom,148,delete}},
            [{var,148,'Node'},{var,148,'Mandatory'}]},
           {var,148,'Optional'}]}]},
       {clause,149,
        [{atom,149,false}],
        [],
        [{'case',150,
          {call,150,
           {remote,150,{atom,150,lists},{atom,150,member}},
           [{var,150,'Node'},{var,150,'Optional'}]},
          [{clause,151,
            [{atom,151,true}],
            [],
            [{call,152,
              {atom,152,rec_nodes},
              [{var,152,'Mandatory'},
               {call,152,
                {remote,152,{atom,152,lists},{atom,152,delete}},
                [{var,152,'Node'},{var,152,'Optional'}]}]}]},
           {clause,153,
            [{atom,153,false}],
            [],
            [{call,154,
              {atom,154,rec_nodes},
              [{var,154,'Mandatory'},{var,154,'Optional'}]}]}]}]}]}]}]},
 {function,162,get_sync_data,0,
  [{clause,162,[],[],
    [{match,163,{var,163,'Timeout'},{call,163,{atom,163,get_sync_timeout},[]}},
     {match,164,
      {var,164,'MandatoryNodes'},
      {call,164,{atom,164,get_sync_mandatory_nodes},[]}},
     {match,165,
      {var,165,'OptionalNodes'},
      {call,165,{atom,165,get_sync_optional_nodes},[]}},
     {tuple,166,
      [{var,166,'Timeout'},
       {var,166,'MandatoryNodes'},
       {var,166,'OptionalNodes'}]}]}]},
 {function,168,get_sync_timeout,0,
  [{clause,168,[],[],
    [{'case',169,
      {call,169,
       {remote,169,{atom,169,application},{atom,169,get_env}},
       [{atom,169,sync_nodes_timeout}]},
      [{clause,170,
        [{tuple,170,[{atom,170,ok},{var,170,'Timeout'}]}],
        [[{call,170,{atom,170,is_integer},[{var,170,'Timeout'}]},
          {op,170,'>',{var,170,'Timeout'},{integer,170,0}}]],
        [{var,170,'Timeout'}]},
       {clause,171,
        [{tuple,171,[{atom,171,ok},{atom,171,infinity}]}],
        [],
        [{atom,171,infinity}]},
       {clause,172,
        [{atom,172,undefined}],
        [],
        [{call,172,{atom,172,throw},[{atom,172,undefined}]}]},
       {clause,173,
        [{tuple,173,[{atom,173,ok},{var,173,'Else'}]}],
        [],
        [{call,173,
          {atom,173,throw},
          [{tuple,173,
            [{atom,173,error},
             {tuple,173,
              [{atom,173,badopt},
               {tuple,173,
                [{atom,173,sync_nodes_timeout},
                 {var,173,'Else'}]}]}]}]}]}]}]}]},
 {function,176,get_sync_mandatory_nodes,0,
  [{clause,176,[],[],
    [{'case',177,
      {call,177,
       {remote,177,{atom,177,application},{atom,177,get_env}},
       [{atom,177,sync_nodes_mandatory}]},
      [{clause,178,
        [{tuple,178,[{atom,178,ok},{var,178,'Nodes'}]}],
        [[{call,178,{atom,178,is_list},[{var,178,'Nodes'}]}]],
        [{var,178,'Nodes'}]},
       {clause,179,[{atom,179,undefined}],[],[{nil,179}]},
       {clause,180,
        [{tuple,180,[{atom,180,ok},{var,180,'Else'}]}],
        [],
        [{call,180,
          {atom,180,throw},
          [{tuple,180,
            [{atom,180,error},
             {tuple,180,
              [{atom,180,badopt},
               {tuple,180,
                [{atom,180,sync_nodes_mandatory},
                 {var,180,'Else'}]}]}]}]}]}]}]}]},
 {function,183,get_sync_optional_nodes,0,
  [{clause,183,[],[],
    [{'case',184,
      {call,184,
       {remote,184,{atom,184,application},{atom,184,get_env}},
       [{atom,184,sync_nodes_optional}]},
      [{clause,185,
        [{tuple,185,[{atom,185,ok},{var,185,'Nodes'}]}],
        [[{call,185,{atom,185,is_list},[{var,185,'Nodes'}]}]],
        [{var,185,'Nodes'}]},
       {clause,186,[{atom,186,undefined}],[],[{nil,186}]},
       {clause,187,
        [{tuple,187,[{atom,187,ok},{var,187,'Else'}]}],
        [],
        [{call,187,
          {atom,187,throw},
          [{tuple,187,
            [{atom,187,error},
             {tuple,187,
              [{atom,187,badopt},
               {tuple,187,
                [{atom,187,sync_nodes_optional},
                 {var,187,'Else'}]}]}]}]}]}]}]}]}]
