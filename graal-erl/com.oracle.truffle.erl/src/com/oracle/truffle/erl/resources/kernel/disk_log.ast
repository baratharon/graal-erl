disk_log
[]
[]
[{function,118,open,1,
  [{clause,118,
    [{var,118,'A'}],
    [],
    [{call,119,
      {remote,119,{atom,119,disk_log_server},{atom,119,open}},
      [{call,119,
        {atom,119,check_arg},
        [{var,119,'A'},
         {tuple,119,
          [{atom,119,arg},
           {integer,93,0},
           {atom,94,undefined},
           {atom,95,none},
           {atom,96,true},
           {atom,97,infinity},
           {atom,98,halt},
           {atom,99,false},
           {atom,100,internal},
           {call,101,{atom,101,self},[]},
           {atom,102,none},
           {atom,103,read_write},
           {atom,104,false},
           {var,119,'A'}]}]}]}]}]},
 {function,129,log,2,
  [{clause,129,
    [{var,129,'Log'},{var,129,'Term'}],
    [],
    [{call,130,
      {atom,130,req},
      [{var,130,'Log'},
       {tuple,130,
        [{atom,130,log},
         {call,130,{atom,130,term_to_binary},[{var,130,'Term'}]}]}]}]}]},
 {function,135,blog,2,
  [{clause,135,
    [{var,135,'Log'},{var,135,'Bytes'}],
    [],
    [{call,136,
      {atom,136,req},
      [{var,136,'Log'},
       {tuple,136,
        [{atom,136,blog},
         {call,136,{atom,136,check_bytes},[{var,136,'Bytes'}]}]}]}]}]},
 {function,141,log_terms,2,
  [{clause,141,
    [{var,141,'Log'},{var,141,'Terms'}],
    [],
    [{match,142,
      {var,142,'Bs'},
      {call,142,{atom,142,terms2bins},[{var,142,'Terms'}]}},
     {call,143,
      {atom,143,req},
      [{var,143,'Log'},{tuple,143,[{atom,143,log},{var,143,'Bs'}]}]}]}]},
 {function,149,blog_terms,2,
  [{clause,149,
    [{var,149,'Log'},{var,149,'Bytess'}],
    [],
    [{match,150,
      {var,150,'Bs'},
      {call,150,
       {atom,150,check_bytes_list},
       [{var,150,'Bytess'},{var,150,'Bytess'}]}},
     {call,151,
      {atom,151,req},
      [{var,151,'Log'},{tuple,151,[{atom,151,blog},{var,151,'Bs'}]}]}]}]},
 {function,158,alog,2,
  [{clause,158,
    [{var,158,'Log'},{var,158,'Term'}],
    [],
    [{call,159,
      {atom,159,notify},
      [{var,159,'Log'},
       {tuple,159,
        [{atom,159,alog},
         {call,159,{atom,159,term_to_binary},[{var,159,'Term'}]}]}]}]}]},
 {function,164,alog_terms,2,
  [{clause,164,
    [{var,164,'Log'},{var,164,'Terms'}],
    [],
    [{match,165,
      {var,165,'Bs'},
      {call,165,{atom,165,terms2bins},[{var,165,'Terms'}]}},
     {call,166,
      {atom,166,notify},
      [{var,166,'Log'},{tuple,166,[{atom,166,alog},{var,166,'Bs'}]}]}]}]},
 {function,171,balog,2,
  [{clause,171,
    [{var,171,'Log'},{var,171,'Bytes'}],
    [],
    [{call,172,
      {atom,172,notify},
      [{var,172,'Log'},
       {tuple,172,
        [{atom,172,balog},
         {call,172,{atom,172,check_bytes},[{var,172,'Bytes'}]}]}]}]}]},
 {function,177,balog_terms,2,
  [{clause,177,
    [{var,177,'Log'},{var,177,'Bytess'}],
    [],
    [{match,178,
      {var,178,'Bs'},
      {call,178,
       {atom,178,check_bytes_list},
       [{var,178,'Bytess'},{var,178,'Bytess'}]}},
     {call,179,
      {atom,179,notify},
      [{var,179,'Log'},{tuple,179,[{atom,179,balog},{var,179,'Bs'}]}]}]}]},
 {function,186,close,1,
  [{clause,186,
    [{var,186,'Log'}],
    [],
    [{call,187,{atom,187,req},[{var,187,'Log'},{atom,187,close}]}]}]},
 {function,194,lclose,1,
  [{clause,194,
    [{var,194,'Log'}],
    [],
    [{call,195,
      {atom,195,lclose},
      [{var,195,'Log'},{call,195,{atom,195,node},[]}]}]}]},
 {function,200,lclose,2,
  [{clause,200,
    [{var,200,'Log'},{var,200,'Node'}],
    [],
    [{call,201,
      {atom,201,lreq},
      [{var,201,'Log'},{atom,201,close},{var,201,'Node'}]}]}]},
 {function,211,truncate,1,
  [{clause,211,
    [{var,211,'Log'}],
    [],
    [{call,212,
      {atom,212,req},
      [{var,212,'Log'},
       {tuple,212,
        [{atom,212,truncate},
         {atom,212,none},
         {atom,212,truncate},
         {integer,212,1}]}]}]}]},
 {function,217,truncate,2,
  [{clause,217,
    [{var,217,'Log'},{var,217,'Head'}],
    [],
    [{call,218,
      {atom,218,req},
      [{var,218,'Log'},
       {tuple,218,
        [{atom,218,truncate},
         {tuple,218,
          [{atom,218,ok},
           {call,218,{atom,218,term_to_binary},[{var,218,'Head'}]}]},
         {atom,218,truncate},
         {integer,218,2}]}]}]}]},
 {function,223,btruncate,2,
  [{clause,223,
    [{var,223,'Log'},{var,223,'Head'}],
    [],
    [{call,224,
      {atom,224,req},
      [{var,224,'Log'},
       {tuple,224,
        [{atom,224,truncate},
         {tuple,224,
          [{atom,224,ok},
           {call,224,{atom,224,check_bytes},[{var,224,'Head'}]}]},
         {atom,224,btruncate},
         {integer,224,2}]}]}]}]},
 {function,238,reopen,2,
  [{clause,238,
    [{var,238,'Log'},{var,238,'NewFile'}],
    [],
    [{call,239,
      {atom,239,req},
      [{var,239,'Log'},
       {tuple,239,
        [{atom,239,reopen},
         {var,239,'NewFile'},
         {atom,239,none},
         {atom,239,reopen},
         {integer,239,2}]}]}]}]},
 {function,245,reopen,3,
  [{clause,245,
    [{var,245,'Log'},{var,245,'NewFile'},{var,245,'NewHead'}],
    [],
    [{call,246,
      {atom,246,req},
      [{var,246,'Log'},
       {tuple,246,
        [{atom,246,reopen},
         {var,246,'NewFile'},
         {tuple,246,
          [{atom,246,ok},
           {call,246,{atom,246,term_to_binary},[{var,246,'NewHead'}]}]},
         {atom,246,reopen},
         {integer,246,3}]}]}]}]},
 {function,252,breopen,3,
  [{clause,252,
    [{var,252,'Log'},{var,252,'NewFile'},{var,252,'NewHead'}],
    [],
    [{call,253,
      {atom,253,req},
      [{var,253,'Log'},
       {tuple,253,
        [{atom,253,reopen},
         {var,253,'NewFile'},
         {tuple,253,
          [{atom,253,ok},
           {call,253,{atom,253,check_bytes},[{var,253,'NewHead'}]}]},
         {atom,253,breopen},
         {integer,253,3}]}]}]}]},
 {function,263,inc_wrap_file,1,
  [{clause,263,
    [{var,263,'Log'}],
    [],
    [{call,264,{atom,264,req},[{var,264,'Log'},{atom,264,inc_wrap_file}]}]}]},
 {function,274,change_size,2,
  [{clause,274,
    [{var,274,'Log'},{var,274,'NewSize'}],
    [],
    [{call,275,
      {atom,275,req},
      [{var,275,'Log'},
       {tuple,275,[{atom,275,change_size},{var,275,'NewSize'}]}]}]}]},
 {function,283,change_notify,3,
  [{clause,283,
    [{var,283,'Log'},{var,283,'Pid'},{var,283,'NewNotify'}],
    [],
    [{call,284,
      {atom,284,req},
      [{var,284,'Log'},
       {tuple,284,
        [{atom,284,change_notify},
         {var,284,'Pid'},
         {var,284,'NewNotify'}]}]}]}]},
 {function,292,change_header,2,
  [{clause,292,
    [{var,292,'Log'},{var,292,'NewHead'}],
    [],
    [{call,293,
      {atom,293,req},
      [{var,293,'Log'},
       {tuple,293,[{atom,293,change_header},{var,293,'NewHead'}]}]}]}]},
 {function,301,sync,1,
  [{clause,301,
    [{var,301,'Log'}],
    [],
    [{call,302,{atom,302,req},[{var,302,'Log'},{atom,302,sync}]}]}]},
 {function,308,block,1,
  [{clause,308,
    [{var,308,'Log'}],
    [],
    [{call,309,{atom,309,block},[{var,309,'Log'},{atom,309,true}]}]}]},
 {function,314,block,2,
  [{clause,314,
    [{var,314,'Log'},{var,314,'QueueLogRecords'}],
    [],
    [{call,315,
      {atom,315,req},
      [{var,315,'Log'},
       {tuple,315,[{atom,315,block},{var,315,'QueueLogRecords'}]}]}]}]},
 {function,323,unblock,1,
  [{clause,323,
    [{var,323,'Log'}],
    [],
    [{call,324,{atom,324,req},[{var,324,'Log'},{atom,324,unblock}]}]}]},
 {function,328,format_error,1,
  [{clause,328,
    [{var,328,'Error'}],
    [],
    [{call,329,{atom,329,do_format_error},[{var,329,'Error'}]}]}]},
 {function,357,info,1,
  [{clause,357,
    [{var,357,'Log'}],
    [],
    [{call,358,{atom,358,sreq},[{var,358,'Log'},{atom,358,info}]}]}]},
 {function,363,pid2name,1,
  [{clause,363,
    [{var,363,'Pid'}],
    [],
    [{call,364,{remote,364,{atom,364,disk_log_server},{atom,364,start}},[]},
     {'case',365,
      {call,365,
       {remote,365,{atom,365,ets},{atom,365,lookup}},
       [{atom,22,disk_log_pids},{var,365,'Pid'}]},
      [{clause,366,[{nil,366}],[],[{atom,366,undefined}]},
       {clause,367,
        [{cons,367,{tuple,367,[{var,367,'_Pid'},{var,367,'Log'}]},{nil,367}}],
        [],
        [{tuple,367,[{atom,367,ok},{var,367,'Log'}]}]}]}]}]},
 {function,392,chunk,2,
  [{clause,392,
    [{var,392,'Log'},{var,392,'Cont'}],
    [],
    [{call,393,
      {atom,393,chunk},
      [{var,393,'Log'},{var,393,'Cont'},{atom,393,infinity}]}]}]},
 {function,399,chunk,3,
  [{clause,399,
    [{var,399,'Log'},{var,399,'Cont'},{atom,399,infinity}],
    [],
    [{call,401,
      {atom,401,ichunk},
      [{var,401,'Log'},{var,401,'Cont'},{integer,41,65536}]}]},
   {clause,402,
    [{var,402,'Log'},{var,402,'Cont'},{var,402,'N'}],
    [[{call,402,{atom,402,is_integer},[{var,402,'N'}]},
      {op,402,'>',{var,402,'N'},{integer,402,0}}]],
    [{call,403,
      {atom,403,ichunk},
      [{var,403,'Log'},{var,403,'Cont'},{var,403,'N'}]}]}]},
 {function,405,ichunk,3,
  [{clause,405,
    [{var,405,'Log'},{atom,405,start},{var,405,'N'}],
    [],
    [{match,406,
      {var,406,'R'},
      {call,406,
       {atom,406,sreq},
       [{var,406,'Log'},
        {tuple,406,
         [{atom,406,chunk},{integer,406,0},{nil,406},{var,406,'N'}]}]}},
     {call,407,{atom,407,ichunk_end},[{var,407,'R'},{var,407,'Log'}]}]},
   {clause,408,
    [{var,408,'Log'},{var,408,'More'},{var,408,'N'}],
    [[{call,408,
       {atom,408,is_record},
       [{var,408,'More'},{atom,408,continuation}]}]],
    [{match,409,
      {var,409,'R'},
      {call,409,
       {atom,409,req2},
       [{call,409,
         {remote,409,{atom,409,erlang},{atom,409,element}},
         [{integer,409,2},{var,409,'More'}]},
        {tuple,410,
         [{atom,410,chunk},
          {call,410,
           {remote,410,{atom,410,erlang},{atom,410,element}},
           [{integer,410,3},{var,410,'More'}]},
          {call,410,
           {remote,410,{atom,410,erlang},{atom,410,element}},
           [{integer,410,4},{var,410,'More'}]},
          {var,410,'N'}]}]}},
     {call,411,{atom,411,ichunk_end},[{var,411,'R'},{var,411,'Log'}]}]},
   {clause,412,
    [{var,412,'_Log'},{var,412,'_'},{var,412,'_'}],
    [],
    [{tuple,413,
      [{atom,413,error},
       {tuple,413,[{atom,413,badarg},{atom,413,continuation}]}]}]}]},
 {function,415,ichunk_end,2,
  [{clause,415,
    [{tuple,415,[{var,415,'C'},{var,415,'R'}]},{var,415,'Log'}],
    [[{call,415,
       {atom,415,is_record},
       [{var,415,'C'},{atom,415,continuation}]}]],
    [{call,416,
      {atom,416,ichunk_end},
      [{var,416,'R'},
       {atom,416,read_write},
       {var,416,'Log'},
       {var,416,'C'},
       {integer,416,0}]}]},
   {clause,417,
    [{tuple,417,[{var,417,'C'},{var,417,'R'},{var,417,'Bad'}]},
     {var,417,'Log'}],
    [[{call,417,
       {atom,417,is_record},
       [{var,417,'C'},{atom,417,continuation}]}]],
    [{call,418,
      {atom,418,ichunk_end},
      [{var,418,'R'},
       {atom,418,read_only},
       {var,418,'Log'},
       {var,418,'C'},
       {var,418,'Bad'}]}]},
   {clause,419,[{var,419,'R'},{var,419,'_Log'}],[],[{var,420,'R'}]}]},
 {function,424,ichunk_end,5,
  [{clause,424,
    [{var,424,'R'},
     {var,424,'Mode'},
     {var,424,'Log'},
     {var,424,'C'},
     {var,424,'Bad'}],
    [],
    [{'case',425,
      {'catch',425,{call,425,{atom,425,bins2terms},[{var,425,'R'},{nil,425}]}},
      [{clause,426,
        [{tuple,426,[{atom,426,'EXIT'},{var,426,'_'}]}],
        [],
        [{match,427,
          {var,427,'RR'},
          {call,427,
           {remote,427,{atom,427,lists},{atom,427,reverse}},
           [{var,427,'R'}]}},
         {call,428,
          {atom,428,ichunk_bad_end},
          [{var,428,'RR'},
           {var,428,'Mode'},
           {var,428,'Log'},
           {var,428,'C'},
           {var,428,'Bad'},
           {nil,428}]}]},
       {clause,429,
        [{var,429,'Ts'}],
        [[{op,429,'>',{var,429,'Bad'},{integer,429,0}}]],
        [{tuple,430,[{var,430,'C'},{var,430,'Ts'},{var,430,'Bad'}]}]},
       {clause,431,
        [{var,431,'Ts'}],
        [[{op,431,'=:=',{var,431,'Bad'},{integer,431,0}}]],
        [{tuple,432,[{var,432,'C'},{var,432,'Ts'}]}]}]}]}]},
 {function,435,bins2terms,2,
  [{clause,435,[{nil,435},{var,435,'L'}],[],[{var,436,'L'}]},
   {clause,437,
    [{cons,437,{var,437,'B'},{var,437,'Bs'}},{var,437,'L'}],
    [],
    [{call,438,
      {atom,438,bins2terms},
      [{var,438,'Bs'},
       {cons,438,
        {call,438,{atom,438,binary_to_term},[{var,438,'B'}]},
        {var,438,'L'}}]}]}]},
 {function,440,ichunk_bad_end,6,
  [{clause,440,
    [{cons,440,{var,440,'B'},{var,440,'Bs'}},
     {var,440,'Mode'},
     {var,440,'Log'},
     {var,440,'C'},
     {var,440,'Bad'},
     {var,440,'A'}],
    [],
    [{'case',441,
      {'catch',441,{call,441,{atom,441,binary_to_term},[{var,441,'B'}]}},
      [{clause,442,
        [{tuple,442,[{atom,442,'EXIT'},{var,442,'_'}]}],
        [[{op,442,'=:=',{atom,442,read_write},{var,442,'Mode'}}]],
        [{match,443,
          {var,443,'InfoList'},
          {call,443,{atom,443,info},[{var,443,'Log'}]}},
         {match,444,
          {tuple,444,
           [{atom,444,value},
            {tuple,444,[{atom,444,file},{var,444,'FileName'}]}]},
          {call,444,
           {remote,444,{atom,444,lists},{atom,444,keysearch}},
           [{atom,444,file},{integer,444,1},{var,444,'InfoList'}]}},
         {match,445,
          {var,445,'File'},
          {'case',445,
           {call,445,
            {remote,445,{atom,445,erlang},{atom,445,element}},
            [{integer,445,3},{var,445,'C'}]},
           [{clause,446,
             [{var,446,'Pos'}],
             [[{call,446,{atom,446,is_integer},[{var,446,'Pos'}]}]],
             [{var,446,'FileName'}]},
            {clause,447,
             [{tuple,447,[{var,447,'FileNo'},{var,447,'_'}]}],
             [],
             [{call,447,
               {atom,447,add_ext},
               [{var,447,'FileName'},{var,447,'FileNo'}]}]}]}},
         {tuple,449,
          [{atom,449,error},
           {tuple,449,[{atom,449,corrupt_log_file},{var,449,'File'}]}]}]},
       {clause,450,
        [{tuple,450,[{atom,450,'EXIT'},{var,450,'_'}]}],
        [[{op,450,'=:=',{atom,450,read_only},{var,450,'Mode'}}]],
        [{match,451,
          {var,451,'Reread'},
          {call,451,
           {remote,451,{atom,451,lists},{atom,451,foldl}},
           [{'fun',451,
             {clauses,
              [{clause,451,
                [{var,451,'Bin'},{var,451,'Sz'}],
                [],
                [{op,452,'+',
                  {op,452,'+',
                   {var,452,'Sz'},
                   {call,452,{atom,452,byte_size},[{var,452,'Bin'}]}},
                  {integer,32,8}}]}]}},
            {integer,453,0},
            {var,453,'Bs'}]}},
         {match,454,
          {var,454,'NewPos'},
          {'case',454,
           {call,454,
            {remote,454,{atom,454,erlang},{atom,454,element}},
            [{integer,454,3},{var,454,'C'}]},
           [{clause,455,
             [{var,455,'Pos'}],
             [[{call,455,{atom,455,is_integer},[{var,455,'Pos'}]}]],
             [{op,455,'-',{var,455,'Pos'},{var,455,'Reread'}}]},
            {clause,456,
             [{tuple,456,[{var,456,'FileNo'},{var,456,'Pos'}]}],
             [],
             [{tuple,456,
               [{var,456,'FileNo'},
                {op,456,'-',{var,456,'Pos'},{var,456,'Reread'}}]}]}]}},
         {match,458,
          {var,458,'NewBad'},
          {op,458,'+',
           {var,458,'Bad'},
           {call,458,{atom,458,byte_size},[{var,458,'B'}]}}},
         {tuple,459,
          [{call,459,
            {remote,459,{atom,459,erlang},{atom,459,setelement}},
            [{integer,459,4},
             {call,459,
              {remote,459,{atom,459,erlang},{atom,459,setelement}},
              [{integer,459,3},{var,459,'C'},{var,459,'NewPos'}]},
             {nil,459}]},
           {call,459,
            {remote,459,{atom,459,lists},{atom,459,reverse}},
            [{var,459,'A'}]},
           {var,459,'NewBad'}]}]},
       {clause,460,
        [{var,460,'T'}],
        [],
        [{call,461,
          {atom,461,ichunk_bad_end},
          [{var,461,'Bs'},
           {var,461,'Mode'},
           {var,461,'Log'},
           {var,461,'C'},
           {var,461,'Bad'},
           {cons,461,{var,461,'T'},{var,461,'A'}}]}]}]}]}]},
 {function,475,bchunk,2,
  [{clause,475,
    [{var,475,'Log'},{var,475,'Cont'}],
    [],
    [{call,476,
      {atom,476,bchunk},
      [{var,476,'Log'},{var,476,'Cont'},{atom,476,infinity}]}]}]},
 {function,482,bchunk,3,
  [{clause,482,
    [{var,482,'Log'},{var,482,'Cont'},{atom,482,infinity}],
    [],
    [{call,484,
      {atom,484,bichunk},
      [{var,484,'Log'},{var,484,'Cont'},{integer,41,65536}]}]},
   {clause,485,
    [{var,485,'Log'},{var,485,'Cont'},{var,485,'N'}],
    [[{call,485,{atom,485,is_integer},[{var,485,'N'}]},
      {op,485,'>',{var,485,'N'},{integer,485,0}}]],
    [{call,486,
      {atom,486,bichunk},
      [{var,486,'Log'},{var,486,'Cont'},{var,486,'N'}]}]}]},
 {function,488,bichunk,3,
  [{clause,488,
    [{var,488,'Log'},{atom,488,start},{var,488,'N'}],
    [],
    [{match,489,
      {var,489,'R'},
      {call,489,
       {atom,489,sreq},
       [{var,489,'Log'},
        {tuple,489,
         [{atom,489,chunk},{integer,489,0},{nil,489},{var,489,'N'}]}]}},
     {call,490,{atom,490,bichunk_end},[{var,490,'R'}]}]},
   {clause,491,
    [{var,491,'_Log'},
     {tuple,491,
      [{atom,491,continuation},{var,491,'Pid'},{var,491,'Pos'},{var,491,'B'}]},
     {var,491,'N'}],
    [],
    [{match,492,
      {var,492,'R'},
      {call,492,
       {atom,492,req2},
       [{var,492,'Pid'},
        {tuple,492,
         [{atom,492,chunk},{var,492,'Pos'},{var,492,'B'},{var,492,'N'}]}]}},
     {call,493,{atom,493,bichunk_end},[{var,493,'R'}]}]},
   {clause,494,
    [{var,494,'_Log'},{var,494,'_'},{var,494,'_'}],
    [],
    [{tuple,495,
      [{atom,495,error},
       {tuple,495,[{atom,495,badarg},{atom,495,continuation}]}]}]}]},
 {function,497,bichunk_end,1,
  [{clause,497,
    [{tuple,497,
      [{match,497,
        {var,497,'C'},
        {tuple,497,
         [{atom,497,continuation},{var,497,'_'},{var,497,'_'},{var,497,'_'}]}},
       {var,497,'R'}]}],
    [],
    [{tuple,498,
      [{var,498,'C'},
       {call,498,
        {remote,498,{atom,498,lists},{atom,498,reverse}},
        [{var,498,'R'}]}]}]},
   {clause,499,
    [{tuple,499,
      [{match,499,
        {var,499,'C'},
        {tuple,499,
         [{atom,499,continuation},{var,499,'_'},{var,499,'_'},{var,499,'_'}]}},
       {var,499,'R'},
       {var,499,'Bad'}]}],
    [],
    [{tuple,500,
      [{var,500,'C'},
       {call,500,
        {remote,500,{atom,500,lists},{atom,500,reverse}},
        [{var,500,'R'}]},
       {var,500,'Bad'}]}]},
   {clause,501,[{var,501,'R'}],[],[{var,502,'R'}]}]},
 {function,512,chunk_step,3,
  [{clause,512,
    [{var,512,'Log'},{var,512,'Cont'},{var,512,'N'}],
    [[{call,512,{atom,512,is_integer},[{var,512,'N'}]}]],
    [{call,513,
      {atom,513,ichunk_step},
      [{var,513,'Log'},{var,513,'Cont'},{var,513,'N'}]}]}]},
 {function,515,ichunk_step,3,
  [{clause,515,
    [{var,515,'Log'},{atom,515,start},{var,515,'N'}],
    [],
    [{call,516,
      {atom,516,sreq},
      [{var,516,'Log'},
       {tuple,516,[{atom,516,chunk_step},{integer,516,0},{var,516,'N'}]}]}]},
   {clause,517,
    [{var,517,'_Log'},{var,517,'More'},{var,517,'N'}],
    [[{call,517,
       {atom,517,is_record},
       [{var,517,'More'},{atom,517,continuation}]}]],
    [{call,518,
      {atom,518,req2},
      [{call,518,
        {remote,518,{atom,518,erlang},{atom,518,element}},
        [{integer,518,2},{var,518,'More'}]},
       {tuple,518,
        [{atom,518,chunk_step},
         {call,518,
          {remote,518,{atom,518,erlang},{atom,518,element}},
          [{integer,518,3},{var,518,'More'}]},
         {var,518,'N'}]}]}]},
   {clause,519,
    [{var,519,'_Log'},{var,519,'_'},{var,519,'_'}],
    [],
    [{tuple,520,
      [{atom,520,error},
       {tuple,520,[{atom,520,badarg},{atom,520,continuation}]}]}]}]},
 {function,526,chunk_info,1,
  [{clause,526,
    [{match,526,
      {var,526,'More'},
      {tuple,526,
       [{atom,526,continuation},{var,526,'_'},{var,526,'_'},{var,526,'_'}]}}],
    [],
    [{cons,527,
      {tuple,527,
       [{atom,527,node},
        {call,527,
         {atom,527,node},
         [{call,527,
           {remote,527,{atom,527,erlang},{atom,527,element}},
           [{integer,527,2},{var,527,'More'}]}]}]},
      {nil,527}}]},
   {clause,528,
    [{var,528,'BadCont'}],
    [],
    [{tuple,529,
      [{atom,529,error},
       {tuple,529,[{atom,529,no_continuation},{var,529,'BadCont'}]}]}]}]},
 {function,534,accessible_logs,0,
  [{clause,534,[],[],
    [{call,535,
      {remote,535,{atom,535,disk_log_server},{atom,535,accessible_logs}},
      []}]}]},
 {function,537,istart_link,1,
  [{clause,537,
    [{var,537,'Server'}],
    [],
    [{tuple,538,
      [{atom,538,ok},
       {call,538,
        {remote,538,{atom,538,proc_lib},{atom,538,spawn_link}},
        [{atom,538,disk_log},
         {atom,538,init},
         {cons,538,
          {call,538,{atom,538,self},[]},
          {cons,538,{var,538,'Server'},{nil,538}}}]}]}]}]},
 {function,542,start,0,
  [{clause,542,[],[],
    [{call,543,
      {remote,543,{atom,543,disk_log_server},{atom,543,start}},
      []}]}]},
 {function,545,internal_open,2,
  [{clause,545,
    [{var,545,'Pid'},{var,545,'A'}],
    [],
    [{call,546,
      {atom,546,req2},
      [{var,546,'Pid'},
       {tuple,546,[{atom,546,internal_open},{var,546,'A'}]}]}]}]},
 {function,552,ll_open,1,
  [{clause,552,
    [{var,552,'A'}],
    [],
    [{'case',553,
      {call,553,
       {atom,553,check_arg},
       [{var,553,'A'},
        {tuple,553,
         [{atom,553,arg},
          {integer,93,0},
          {atom,94,undefined},
          {atom,95,none},
          {atom,96,true},
          {atom,97,infinity},
          {atom,98,halt},
          {atom,99,false},
          {atom,100,internal},
          {call,101,{atom,101,self},[]},
          {atom,102,none},
          {atom,103,read_write},
          {atom,104,false},
          {var,553,'A'}]}]},
      [{clause,554,
        [{tuple,554,[{atom,554,ok},{var,554,'L'}]}],
        [],
        [{call,554,{atom,554,do_open},[{var,554,'L'}]}]},
       {clause,555,[{var,555,'Error'}],[],[{var,555,'Error'}]}]}]}]},
 {function,559,ll_close,1,
  [{clause,559,
    [{var,559,'Log'}],
    [],
    [{call,560,{atom,560,close_disk_log2},[{var,560,'Log'}]}]}]},
 {function,562,check_arg,2,
  [{clause,562,
    [{nil,562},{var,562,'Res'}],
    [],
    [{match,563,
      {var,563,'Ret'},
      {'case',563,
       {call,563,
        {remote,563,{atom,563,erlang},{atom,563,element}},
        [{integer,563,11},{var,563,'Res'}]},
       [{clause,564,
         [{atom,564,none}],
         [],
         [{tuple,565,[{atom,565,ok},{var,565,'Res'}]}]},
        {clause,566,
         [{var,566,'_'}],
         [],
         [{'case',567,
           {call,567,
            {atom,567,check_head},
            [{call,567,
              {remote,567,{atom,567,erlang},{atom,567,element}},
              [{integer,567,11},{var,567,'Res'}]},
             {call,567,
              {remote,567,{atom,567,erlang},{atom,567,element}},
              [{integer,567,9},{var,567,'Res'}]}]},
           [{clause,568,
             [{tuple,568,[{atom,568,ok},{var,568,'Head'}]}],
             [],
             [{tuple,569,
               [{atom,569,ok},
                {call,569,
                 {remote,569,{atom,569,erlang},{atom,569,setelement}},
                 [{integer,569,11},{var,569,'Res'},{var,569,'Head'}]}]}]},
            {clause,570,[{var,570,'Error'}],[],[{var,571,'Error'}]}]}]}]}},
     {'if',575,
      [{clause,576,[],
        [[{op,576,'=:=',
           {call,576,
            {remote,576,{atom,576,erlang},{atom,576,element}},
            [{integer,576,2},{var,576,'Res'}]},
           {integer,576,0}}]],
        [{tuple,577,
          [{atom,577,error},
           {tuple,577,[{atom,577,badarg},{atom,577,name}]}]}]},
       {clause,578,[],
        [[{op,578,'=:=',
           {call,578,
            {remote,578,{atom,578,erlang},{atom,578,element}},
            [{integer,578,4},{var,578,'Res'}]},
           {atom,578,none}}]],
        [{'case',579,
          {'catch',579,
           {call,579,
            {remote,579,{atom,579,lists},{atom,579,concat}},
            [{cons,579,
              {call,579,
               {remote,579,{atom,579,erlang},{atom,579,element}},
               [{integer,579,2},{var,579,'Res'}]},
              {cons,579,{string,579,".LOG"},{nil,579}}}]}},
          [{clause,580,
            [{tuple,580,[{atom,580,'EXIT'},{var,580,'_'}]}],
            [],
            [{tuple,580,
              [{atom,580,error},
               {tuple,580,[{atom,580,badarg},{atom,580,file}]}]}]},
           {clause,581,
            [{var,581,'FName'}],
            [],
            [{call,581,
              {atom,581,check_arg},
              [{nil,581},
               {call,581,
                {remote,581,{atom,581,erlang},{atom,581,setelement}},
                [{integer,581,4},{var,581,'Res'},{var,581,'FName'}]}]}]}]}]},
       {clause,583,[],
        [[{op,583,'=:=',
           {call,583,
            {remote,583,{atom,583,erlang},{atom,583,element}},
            [{integer,583,5},{var,583,'Res'}]},
           {atom,583,truncate}},
          {op,583,'=:=',
           {call,583,
            {remote,583,{atom,583,erlang},{atom,583,element}},
            [{integer,583,12},{var,583,'Res'}]},
           {atom,583,read_only}}]],
        [{tuple,584,
          [{atom,584,error},
           {tuple,584,[{atom,584,badarg},{atom,584,repair_read_only}]}]}]},
       {clause,585,[],
        [[{op,585,'=:=',
           {call,585,
            {remote,585,{atom,585,erlang},{atom,585,element}},
            [{integer,585,7},{var,585,'Res'}]},
           {atom,585,halt}},
          {call,585,
           {atom,585,is_tuple},
           [{call,585,
             {remote,585,{atom,585,erlang},{atom,585,element}},
             [{integer,585,6},{var,585,'Res'}]}]}]],
        [{tuple,586,
          [{atom,586,error},
           {tuple,586,[{atom,586,badarg},{atom,586,size}]}]}]},
       {clause,587,[],
        [[{op,587,'=:=',
           {call,587,
            {remote,587,{atom,587,erlang},{atom,587,element}},
            [{integer,587,7},{var,587,'Res'}]},
           {atom,587,wrap}}]],
        [{match,588,
          {tuple,588,[{var,588,'OldSize'},{var,588,'Version'}]},
          {call,589,
           {remote,589,
            {atom,589,disk_log_1},
            {atom,589,read_size_file_version}},
           [{call,589,
             {remote,589,{atom,589,erlang},{atom,589,element}},
             [{integer,589,4},{var,589,'Res'}]}]}},
         {call,590,
          {atom,590,check_wrap_arg},
          [{var,590,'Ret'},{var,590,'OldSize'},{var,590,'Version'}]}]},
       {clause,591,[],[[{atom,591,true}]],[{var,592,'Ret'}]}]}]},
   {clause,594,
    [{cons,594,{tuple,594,[{atom,594,file},{var,594,'F'}]},{var,594,'Tail'}},
     {var,594,'Res'}],
    [[{call,594,{atom,594,is_list},[{var,594,'F'}]}]],
    [{call,595,
      {atom,595,check_arg},
      [{var,595,'Tail'},
       {call,595,
        {remote,595,{atom,595,erlang},{atom,595,setelement}},
        [{integer,595,4},{var,595,'Res'},{var,595,'F'}]}]}]},
   {clause,596,
    [{cons,596,{tuple,596,[{atom,596,file},{var,596,'F'}]},{var,596,'Tail'}},
     {var,596,'Res'}],
    [[{call,596,{atom,596,is_atom},[{var,596,'F'}]}]],
    [{call,597,
      {atom,597,check_arg},
      [{var,597,'Tail'},
       {call,597,
        {remote,597,{atom,597,erlang},{atom,597,setelement}},
        [{integer,597,4},{var,597,'Res'},{var,597,'F'}]}]}]},
   {clause,598,
    [{cons,598,
      {tuple,598,[{atom,598,linkto},{var,598,'Pid'}]},
      {var,598,'Tail'}},
     {var,598,'Res'}],
    [[{call,598,{atom,598,is_pid},[{var,598,'Pid'}]}]],
    [{call,599,
      {atom,599,check_arg},
      [{var,599,'Tail'},
       {call,599,
        {remote,599,{atom,599,erlang},{atom,599,setelement}},
        [{integer,599,10},{var,599,'Res'},{var,599,'Pid'}]}]}]},
   {clause,600,
    [{cons,600,
      {tuple,600,[{atom,600,linkto},{atom,600,none}]},
      {var,600,'Tail'}},
     {var,600,'Res'}],
    [],
    [{call,601,
      {atom,601,check_arg},
      [{var,601,'Tail'},
       {call,601,
        {remote,601,{atom,601,erlang},{atom,601,setelement}},
        [{integer,601,10},{var,601,'Res'},{atom,601,none}]}]}]},
   {clause,602,
    [{cons,602,
      {tuple,602,[{atom,602,name},{var,602,'Name'}]},
      {var,602,'Tail'}},
     {var,602,'Res'}],
    [],
    [{call,603,
      {atom,603,check_arg},
      [{var,603,'Tail'},
       {call,603,
        {remote,603,{atom,603,erlang},{atom,603,setelement}},
        [{integer,603,2},{var,603,'Res'},{var,603,'Name'}]}]}]},
   {clause,604,
    [{cons,604,
      {tuple,604,[{atom,604,repair},{atom,604,true}]},
      {var,604,'Tail'}},
     {var,604,'Res'}],
    [],
    [{call,605,
      {atom,605,check_arg},
      [{var,605,'Tail'},
       {call,605,
        {remote,605,{atom,605,erlang},{atom,605,setelement}},
        [{integer,605,5},{var,605,'Res'},{atom,605,true}]}]}]},
   {clause,606,
    [{cons,606,
      {tuple,606,[{atom,606,repair},{atom,606,false}]},
      {var,606,'Tail'}},
     {var,606,'Res'}],
    [],
    [{call,607,
      {atom,607,check_arg},
      [{var,607,'Tail'},
       {call,607,
        {remote,607,{atom,607,erlang},{atom,607,setelement}},
        [{integer,607,5},{var,607,'Res'},{atom,607,false}]}]}]},
   {clause,608,
    [{cons,608,
      {tuple,608,[{atom,608,repair},{atom,608,truncate}]},
      {var,608,'Tail'}},
     {var,608,'Res'}],
    [],
    [{call,609,
      {atom,609,check_arg},
      [{var,609,'Tail'},
       {call,609,
        {remote,609,{atom,609,erlang},{atom,609,setelement}},
        [{integer,609,5},{var,609,'Res'},{atom,609,truncate}]}]}]},
   {clause,610,
    [{cons,610,{tuple,610,[{atom,610,size},{var,610,'Int'}]},{var,610,'Tail'}},
     {var,610,'Res'}],
    [[{call,610,{atom,610,is_integer},[{var,610,'Int'}]},
      {op,610,'>',{var,610,'Int'},{integer,610,0}}]],
    [{call,611,
      {atom,611,check_arg},
      [{var,611,'Tail'},
       {call,611,
        {remote,611,{atom,611,erlang},{atom,611,setelement}},
        [{integer,611,6},{var,611,'Res'},{var,611,'Int'}]}]}]},
   {clause,612,
    [{cons,612,
      {tuple,612,[{atom,612,size},{atom,612,infinity}]},
      {var,612,'Tail'}},
     {var,612,'Res'}],
    [],
    [{call,613,
      {atom,613,check_arg},
      [{var,613,'Tail'},
       {call,613,
        {remote,613,{atom,613,erlang},{atom,613,setelement}},
        [{integer,613,6},{var,613,'Res'},{atom,613,infinity}]}]}]},
   {clause,614,
    [{cons,614,
      {tuple,614,
       [{atom,614,size},{tuple,614,[{var,614,'MaxB'},{var,614,'MaxF'}]}]},
      {var,614,'Tail'}},
     {var,614,'Res'}],
    [[{call,614,{atom,614,is_integer},[{var,614,'MaxB'}]},
      {call,615,{atom,615,is_integer},[{var,615,'MaxF'}]},
      {op,616,'>',{var,616,'MaxB'},{integer,616,0}},
      {op,616,'=<',
       {var,616,'MaxB'},
       {op,40,'-',
        {op,40,'bsl',{integer,40,1},{integer,40,64}},
        {integer,40,1}}},
      {op,617,'>',{var,617,'MaxF'},{integer,617,0}},
      {op,617,'<',{var,617,'MaxF'},{integer,39,65000}}]],
    [{call,618,
      {atom,618,check_arg},
      [{var,618,'Tail'},
       {call,618,
        {remote,618,{atom,618,erlang},{atom,618,setelement}},
        [{integer,618,6},
         {var,618,'Res'},
         {tuple,618,[{var,618,'MaxB'},{var,618,'MaxF'}]}]}]}]},
   {clause,619,
    [{cons,619,{tuple,619,[{atom,619,type},{atom,619,wrap}]},{var,619,'Tail'}},
     {var,619,'Res'}],
    [],
    [{call,620,
      {atom,620,check_arg},
      [{var,620,'Tail'},
       {call,620,
        {remote,620,{atom,620,erlang},{atom,620,setelement}},
        [{integer,620,7},{var,620,'Res'},{atom,620,wrap}]}]}]},
   {clause,621,
    [{cons,621,{tuple,621,[{atom,621,type},{atom,621,halt}]},{var,621,'Tail'}},
     {var,621,'Res'}],
    [],
    [{call,622,
      {atom,622,check_arg},
      [{var,622,'Tail'},
       {call,622,
        {remote,622,{atom,622,erlang},{atom,622,setelement}},
        [{integer,622,7},{var,622,'Res'},{atom,622,halt}]}]}]},
   {clause,623,
    [{cons,623,
      {tuple,623,[{atom,623,format},{atom,623,internal}]},
      {var,623,'Tail'}},
     {var,623,'Res'}],
    [],
    [{call,624,
      {atom,624,check_arg},
      [{var,624,'Tail'},
       {call,624,
        {remote,624,{atom,624,erlang},{atom,624,setelement}},
        [{integer,624,9},{var,624,'Res'},{atom,624,internal}]}]}]},
   {clause,625,
    [{cons,625,
      {tuple,625,[{atom,625,format},{atom,625,external}]},
      {var,625,'Tail'}},
     {var,625,'Res'}],
    [],
    [{call,626,
      {atom,626,check_arg},
      [{var,626,'Tail'},
       {call,626,
        {remote,626,{atom,626,erlang},{atom,626,setelement}},
        [{integer,626,9},{var,626,'Res'},{atom,626,external}]}]}]},
   {clause,627,
    [{cons,627,
      {tuple,627,[{atom,627,distributed},{nil,627}]},
      {var,627,'Tail'}},
     {var,627,'Res'}],
    [],
    [{call,628,
      {atom,628,check_arg},
      [{var,628,'Tail'},
       {call,628,
        {remote,628,{atom,628,erlang},{atom,628,setelement}},
        [{integer,628,8},{var,628,'Res'},{atom,628,false}]}]}]},
   {clause,629,
    [{cons,629,
      {tuple,629,[{atom,629,distributed},{var,629,'Nodes'}]},
      {var,629,'Tail'}},
     {var,629,'Res'}],
    [[{call,629,{atom,629,is_list},[{var,629,'Nodes'}]}]],
    [{call,630,
      {atom,630,check_arg},
      [{var,630,'Tail'},
       {call,630,
        {remote,630,{atom,630,erlang},{atom,630,setelement}},
        [{integer,630,8},
         {var,630,'Res'},
         {tuple,630,[{atom,630,true},{var,630,'Nodes'}]}]}]}]},
   {clause,631,
    [{cons,631,
      {tuple,631,[{atom,631,notify},{atom,631,true}]},
      {var,631,'Tail'}},
     {var,631,'Res'}],
    [],
    [{call,632,
      {atom,632,check_arg},
      [{var,632,'Tail'},
       {call,632,
        {remote,632,{atom,632,erlang},{atom,632,setelement}},
        [{integer,632,13},{var,632,'Res'},{atom,632,true}]}]}]},
   {clause,633,
    [{cons,633,
      {tuple,633,[{atom,633,notify},{atom,633,false}]},
      {var,633,'Tail'}},
     {var,633,'Res'}],
    [],
    [{call,634,
      {atom,634,check_arg},
      [{var,634,'Tail'},
       {call,634,
        {remote,634,{atom,634,erlang},{atom,634,setelement}},
        [{integer,634,13},{var,634,'Res'},{atom,634,false}]}]}]},
   {clause,635,
    [{cons,635,
      {tuple,635,[{atom,635,head_func},{var,635,'HeadFunc'}]},
      {var,635,'Tail'}},
     {var,635,'Res'}],
    [],
    [{call,636,
      {atom,636,check_arg},
      [{var,636,'Tail'},
       {call,636,
        {remote,636,{atom,636,erlang},{atom,636,setelement}},
        [{integer,636,11},
         {var,636,'Res'},
         {tuple,636,[{atom,636,head_func},{var,636,'HeadFunc'}]}]}]}]},
   {clause,637,
    [{cons,637,
      {tuple,637,[{atom,637,head},{var,637,'Term'}]},
      {var,637,'Tail'}},
     {var,637,'Res'}],
    [],
    [{call,638,
      {atom,638,check_arg},
      [{var,638,'Tail'},
       {call,638,
        {remote,638,{atom,638,erlang},{atom,638,setelement}},
        [{integer,638,11},
         {var,638,'Res'},
         {tuple,638,[{atom,638,head},{var,638,'Term'}]}]}]}]},
   {clause,639,
    [{cons,639,
      {tuple,639,[{atom,639,mode},{atom,639,read_only}]},
      {var,639,'Tail'}},
     {var,639,'Res'}],
    [],
    [{call,640,
      {atom,640,check_arg},
      [{var,640,'Tail'},
       {call,640,
        {remote,640,{atom,640,erlang},{atom,640,setelement}},
        [{integer,640,12},{var,640,'Res'},{atom,640,read_only}]}]}]},
   {clause,641,
    [{cons,641,
      {tuple,641,[{atom,641,mode},{atom,641,read_write}]},
      {var,641,'Tail'}},
     {var,641,'Res'}],
    [],
    [{call,642,
      {atom,642,check_arg},
      [{var,642,'Tail'},
       {call,642,
        {remote,642,{atom,642,erlang},{atom,642,setelement}},
        [{integer,642,12},{var,642,'Res'},{atom,642,read_write}]}]}]},
   {clause,643,
    [{var,643,'Arg'},{var,643,'_'}],
    [],
    [{tuple,644,
      [{atom,644,error},{tuple,644,[{atom,644,badarg},{var,644,'Arg'}]}]}]}]},
 {function,646,check_wrap_arg,3,
  [{clause,646,
    [{tuple,646,[{atom,646,ok},{var,646,'Res'}]},
     {tuple,646,[{integer,646,0},{integer,646,0}]},
     {var,646,'_Version'}],
    [[{op,646,'=:=',
       {call,646,
        {remote,646,{atom,646,erlang},{atom,646,element}},
        [{integer,646,6},{var,646,'Res'}]},
       {atom,646,infinity}}]],
    [{tuple,647,
      [{atom,647,error},{tuple,647,[{atom,647,badarg},{atom,647,size}]}]}]},
   {clause,648,
    [{tuple,648,[{atom,648,ok},{var,648,'Res'}]},
     {var,648,'OldSize'},
     {var,648,'Version'}],
    [[{op,648,'=:=',
       {call,648,
        {remote,648,{atom,648,erlang},{atom,648,element}},
        [{integer,648,6},{var,648,'Res'}]},
       {atom,648,infinity}}]],
    [{match,649,
      {var,649,'NewRes'},
      {call,649,
       {remote,649,{atom,649,erlang},{atom,649,setelement}},
       [{integer,649,6},{var,649,'Res'},{var,649,'OldSize'}]}},
     {call,650,
      {atom,650,check_wrap_arg},
      [{tuple,650,[{atom,650,ok},{var,650,'NewRes'}]},
       {var,650,'OldSize'},
       {var,650,'Version'}]}]},
   {clause,651,
    [{tuple,651,[{atom,651,ok},{var,651,'Res'}]},
     {tuple,651,[{integer,651,0},{integer,651,0}]},
     {var,651,'Version'}],
    [],
    [{tuple,652,
      [{atom,652,ok},
       {call,652,
        {remote,652,{atom,652,erlang},{atom,652,setelement}},
        [{integer,652,3},{var,652,'Res'},{var,652,'Version'}]}]}]},
   {clause,653,
    [{tuple,653,[{atom,653,ok},{var,653,'Res'}]},
     {var,653,'OldSize'},
     {var,653,'Version'}],
    [[{op,653,'=:=',
       {var,653,'OldSize'},
       {call,653,
        {remote,653,{atom,653,erlang},{atom,653,element}},
        [{integer,653,6},{var,653,'Res'}]}}]],
    [{tuple,654,
      [{atom,654,ok},
       {call,654,
        {remote,654,{atom,654,erlang},{atom,654,setelement}},
        [{integer,654,3},{var,654,'Res'},{var,654,'Version'}]}]}]},
   {clause,655,
    [{tuple,655,[{atom,655,ok},{var,655,'Res'}]},
     {var,655,'_OldSize'},
     {var,655,'Version'}],
    [[{op,655,'=:=',
       {call,655,
        {remote,655,{atom,655,erlang},{atom,655,element}},
        [{integer,655,5},{var,655,'Res'}]},
       {atom,655,truncate}},
      {call,656,
       {atom,656,is_tuple},
       [{call,656,
         {remote,656,{atom,656,erlang},{atom,656,element}},
         [{integer,656,6},{var,656,'Res'}]}]}]],
    [{tuple,657,
      [{atom,657,ok},
       {call,657,
        {remote,657,{atom,657,erlang},{atom,657,setelement}},
        [{integer,657,3},{var,657,'Res'},{var,657,'Version'}]}]}]},
   {clause,658,
    [{tuple,658,[{atom,658,ok},{var,658,'Res'}]},
     {var,658,'OldSize'},
     {var,658,'_Version'}],
    [[{call,658,
       {atom,658,is_tuple},
       [{call,658,
         {remote,658,{atom,658,erlang},{atom,658,element}},
         [{integer,658,6},{var,658,'Res'}]}]}]],
    [{tuple,659,
      [{atom,659,error},
       {tuple,659,
        [{atom,659,size_mismatch},
         {var,659,'OldSize'},
         {call,659,
          {remote,659,{atom,659,erlang},{atom,659,element}},
          [{integer,659,6},{var,659,'Res'}]}]}]}]},
   {clause,660,
    [{tuple,660,[{atom,660,ok},{var,660,'_Res'}]},
     {var,660,'_OldSize'},
     {var,660,'_Version'}],
    [],
    [{tuple,661,
      [{atom,661,error},{tuple,661,[{atom,661,badarg},{atom,661,size}]}]}]},
   {clause,662,
    [{var,662,'Ret'},{var,662,'_OldSize'},{var,662,'_Version'}],
    [],
    [{var,663,'Ret'}]}]},
 {function,668,init,2,
  [{clause,668,
    [{var,668,'Parent'},{var,668,'Server'}],
    [],
    [{atom,68,void},
     {call,670,{atom,670,process_flag},[{atom,670,trap_exit},{atom,670,true}]},
     {call,671,
      {atom,671,loop},
      [{tuple,671,
        [{atom,671,state},
         {nil,52},
         {nil,53},
         {var,671,'Parent'},
         {var,671,'Server'},
         {integer,56,0},
         {atom,671,undefined},
         {atom,58,ok},
         {atom,59,ok}]}]}]}]},
 {function,673,loop,1,
  [{clause,673,
    [{var,673,'State'}],
    [[{op,673,'=:=',
       {call,673,
        {remote,673,{atom,673,erlang},{atom,673,element}},
        [{integer,673,3},{var,673,'State'}]},
       {nil,673}}]],
    [{'receive',674,
      [{clause,675,
        [{var,675,'Message'}],
        [],
        [{call,676,
          {atom,676,handle},
          [{var,676,'Message'},{var,676,'State'}]}]}]}]},
   {clause,678,
    [{var,678,'State'}],
    [],
    [{match,679,
      {cons,679,{var,679,'M'},{var,679,'Ms'}},
      {call,679,
       {remote,679,{atom,679,erlang},{atom,679,element}},
       [{integer,679,3},{var,679,'State'}]}},
     {call,680,
      {atom,680,handle},
      [{var,680,'M'},
       {call,680,
        {remote,680,{atom,680,erlang},{atom,680,setelement}},
        [{integer,680,3},{var,680,'State'},{var,680,'Ms'}]}]}]}]},
 {function,682,handle,2,
  [{clause,682,
    [{tuple,682,[{var,682,'From'},{atom,682,write_cache}]},{var,682,'S'}],
    [[{op,682,'=:=',{var,682,'From'},{call,682,{atom,682,self},[]}}]],
    [{'case',683,
      {'catch',683,
       {call,683,
        {atom,683,do_write_cache},
        [{call,683,{atom,683,get},[{atom,683,log}]}]}},
      [{clause,684,
        [{atom,684,ok}],
        [],
        [{call,685,{atom,685,loop},[{var,685,'S'}]}]},
       {clause,686,
        [{var,686,'Error'}],
        [],
        [{call,687,
          {atom,687,loop},
          [{call,687,
            {remote,687,{atom,687,erlang},{atom,687,setelement}},
            [{integer,687,9},{var,687,'S'},{var,687,'Error'}]}]}]}]}]},
   {clause,689,
    [{tuple,689,[{var,689,'From'},{tuple,689,[{atom,689,log},{var,689,'B'}]}]},
     {var,689,'S'}],
    [],
    [{'case',690,
      {call,690,{atom,690,get},[{atom,690,log}]},
      [{clause,691,
        [{var,691,'L'}],
        [[{op,691,'=:=',
           {call,691,
            {remote,691,{atom,691,erlang},{atom,691,element}},
            [{integer,691,12},{var,691,'L'}]},
           {atom,691,read_only}}]],
        [{call,692,
          {atom,692,reply},
          [{var,692,'From'},
           {tuple,692,
            [{atom,692,error},
             {tuple,692,
              [{atom,692,read_only_mode},
               {call,692,
                {remote,692,{atom,692,erlang},{atom,692,element}},
                [{integer,692,3},{var,692,'L'}]}]}]},
           {var,692,'S'}]}]},
       {clause,693,
        [{var,693,'L'}],
        [[{op,693,'=:=',
           {call,693,
            {remote,693,{atom,693,erlang},{atom,693,element}},
            [{integer,693,2},{var,693,'L'}]},
           {atom,693,ok}},
          {op,693,'=:=',
           {call,693,
            {remote,693,{atom,693,erlang},{atom,693,element}},
            [{integer,693,9},{var,693,'L'}]},
           {atom,693,internal}}]],
        [{call,694,
          {atom,694,log_loop},
          [{var,694,'S'},
           {var,694,'From'},
           {cons,694,{var,694,'B'},{nil,694}},
           {nil,694},
           {call,694,{atom,694,iolist_size},[{var,694,'B'}]}]}]},
       {clause,695,
        [{var,695,'L'}],
        [[{op,695,'=:=',
           {call,695,
            {remote,695,{atom,695,erlang},{atom,695,element}},
            [{integer,695,2},{var,695,'L'}]},
           {atom,695,ok}},
          {op,695,'=:=',
           {call,695,
            {remote,695,{atom,695,erlang},{atom,695,element}},
            [{integer,695,9},{var,695,'L'}]},
           {atom,695,external}}]],
        [{call,696,
          {atom,696,reply},
          [{var,696,'From'},
           {tuple,696,
            [{atom,696,error},
             {tuple,696,
              [{atom,696,format_external},
               {call,696,
                {remote,696,{atom,696,erlang},{atom,696,element}},
                [{integer,696,3},{var,696,'L'}]}]}]},
           {var,696,'S'}]}]},
       {clause,697,
        [{var,697,'L'}],
        [[{op,697,'=:=',
           {call,697,
            {remote,697,{atom,697,erlang},{atom,697,element}},
            [{integer,697,2},{var,697,'L'}]},
           {tuple,697,[{atom,697,blocked},{atom,697,false}]}}]],
        [{call,698,
          {atom,698,reply},
          [{var,698,'From'},
           {tuple,698,
            [{atom,698,error},
             {tuple,698,
              [{atom,698,blocked_log},
               {call,698,
                {remote,698,{atom,698,erlang},{atom,698,element}},
                [{integer,698,3},{var,698,'L'}]}]}]},
           {var,698,'S'}]}]},
       {clause,699,
        [{var,699,'L'}],
        [[{op,699,'=:=',
           {call,699,
            {remote,699,{atom,699,erlang},{atom,699,element}},
            [{integer,699,4},{var,699,'L'}]},
           {var,699,'From'}}]],
        [{call,700,
          {atom,700,reply},
          [{var,700,'From'},
           {tuple,700,
            [{atom,700,error},
             {tuple,700,
              [{atom,700,blocked_log},
               {call,700,
                {remote,700,{atom,700,erlang},{atom,700,element}},
                [{integer,700,3},{var,700,'L'}]}]}]},
           {var,700,'S'}]}]},
       {clause,701,
        [{var,701,'_'}],
        [],
        [{call,702,
          {atom,702,loop},
          [{call,702,
            {remote,702,{atom,702,erlang},{atom,702,setelement}},
            [{integer,702,2},
             {var,702,'S'},
             {cons,702,
              {tuple,702,
               [{var,702,'From'},{tuple,702,[{atom,702,log},{var,702,'B'}]}]},
              {call,702,
               {remote,702,{atom,702,erlang},{atom,702,element}},
               [{integer,702,2},{var,702,'S'}]}}]}]}]}]}]},
   {clause,704,
    [{tuple,704,
      [{var,704,'From'},{tuple,704,[{atom,704,blog},{var,704,'B'}]}]},
     {var,704,'S'}],
    [],
    [{'case',705,
      {call,705,{atom,705,get},[{atom,705,log}]},
      [{clause,706,
        [{var,706,'L'}],
        [[{op,706,'=:=',
           {call,706,
            {remote,706,{atom,706,erlang},{atom,706,element}},
            [{integer,706,12},{var,706,'L'}]},
           {atom,706,read_only}}]],
        [{call,707,
          {atom,707,reply},
          [{var,707,'From'},
           {tuple,707,
            [{atom,707,error},
             {tuple,707,
              [{atom,707,read_only_mode},
               {call,707,
                {remote,707,{atom,707,erlang},{atom,707,element}},
                [{integer,707,3},{var,707,'L'}]}]}]},
           {var,707,'S'}]}]},
       {clause,708,
        [{var,708,'L'}],
        [[{op,708,'=:=',
           {call,708,
            {remote,708,{atom,708,erlang},{atom,708,element}},
            [{integer,708,2},{var,708,'L'}]},
           {atom,708,ok}}]],
        [{call,709,
          {atom,709,log_loop},
          [{var,709,'S'},
           {var,709,'From'},
           {cons,709,{var,709,'B'},{nil,709}},
           {nil,709},
           {call,709,{atom,709,iolist_size},[{var,709,'B'}]}]}]},
       {clause,710,
        [{var,710,'L'}],
        [[{op,710,'=:=',
           {call,710,
            {remote,710,{atom,710,erlang},{atom,710,element}},
            [{integer,710,2},{var,710,'L'}]},
           {tuple,710,[{atom,710,blocked},{atom,710,false}]}}]],
        [{call,711,
          {atom,711,reply},
          [{var,711,'From'},
           {tuple,711,
            [{atom,711,error},
             {tuple,711,
              [{atom,711,blocked_log},
               {call,711,
                {remote,711,{atom,711,erlang},{atom,711,element}},
                [{integer,711,3},{var,711,'L'}]}]}]},
           {var,711,'S'}]}]},
       {clause,712,
        [{var,712,'L'}],
        [[{op,712,'=:=',
           {call,712,
            {remote,712,{atom,712,erlang},{atom,712,element}},
            [{integer,712,4},{var,712,'L'}]},
           {var,712,'From'}}]],
        [{call,713,
          {atom,713,reply},
          [{var,713,'From'},
           {tuple,713,
            [{atom,713,error},
             {tuple,713,
              [{atom,713,blocked_log},
               {call,713,
                {remote,713,{atom,713,erlang},{atom,713,element}},
                [{integer,713,3},{var,713,'L'}]}]}]},
           {var,713,'S'}]}]},
       {clause,714,
        [{var,714,'_'}],
        [],
        [{call,715,
          {atom,715,loop},
          [{call,715,
            {remote,715,{atom,715,erlang},{atom,715,setelement}},
            [{integer,715,2},
             {var,715,'S'},
             {cons,715,
              {tuple,715,
               [{var,715,'From'},{tuple,715,[{atom,715,blog},{var,715,'B'}]}]},
              {call,715,
               {remote,715,{atom,715,erlang},{atom,715,element}},
               [{integer,715,2},{var,715,'S'}]}}]}]}]}]}]},
   {clause,717,
    [{tuple,717,[{atom,717,alog},{var,717,'B'}]},{var,717,'S'}],
    [],
    [{'case',718,
      {call,718,{atom,718,get},[{atom,718,log}]},
      [{clause,719,
        [{var,719,'L'}],
        [[{op,719,'=:=',
           {call,719,
            {remote,719,{atom,719,erlang},{atom,719,element}},
            [{integer,719,12},{var,719,'L'}]},
           {atom,719,read_only}}]],
        [{call,720,
          {atom,720,notify_owners},
          [{tuple,720,[{atom,720,read_only},{var,720,'B'}]}]},
         {call,721,{atom,721,loop},[{var,721,'S'}]}]},
       {clause,722,
        [{var,722,'L'}],
        [[{op,722,'=:=',
           {call,722,
            {remote,722,{atom,722,erlang},{atom,722,element}},
            [{integer,722,2},{var,722,'L'}]},
           {atom,722,ok}},
          {op,722,'=:=',
           {call,722,
            {remote,722,{atom,722,erlang},{atom,722,element}},
            [{integer,722,9},{var,722,'L'}]},
           {atom,722,internal}}]],
        [{call,723,
          {atom,723,log_loop},
          [{var,723,'S'},
           {nil,723},
           {cons,723,{var,723,'B'},{nil,723}},
           {nil,723},
           {call,723,{atom,723,iolist_size},[{var,723,'B'}]}]}]},
       {clause,724,
        [{var,724,'L'}],
        [[{op,724,'=:=',
           {call,724,
            {remote,724,{atom,724,erlang},{atom,724,element}},
            [{integer,724,2},{var,724,'L'}]},
           {atom,724,ok}}]],
        [{call,725,
          {atom,725,notify_owners},
          [{tuple,725,[{atom,725,format_external},{var,725,'B'}]}]},
         {call,726,{atom,726,loop},[{var,726,'S'}]}]},
       {clause,727,
        [{var,727,'L'}],
        [[{op,727,'=:=',
           {call,727,
            {remote,727,{atom,727,erlang},{atom,727,element}},
            [{integer,727,2},{var,727,'L'}]},
           {tuple,727,[{atom,727,blocked},{atom,727,false}]}}]],
        [{call,728,
          {atom,728,notify_owners},
          [{tuple,728,[{atom,728,blocked_log},{var,728,'B'}]}]},
         {call,729,{atom,729,loop},[{var,729,'S'}]}]},
       {clause,730,
        [{var,730,'_'}],
        [],
        [{call,731,
          {atom,731,loop},
          [{call,731,
            {remote,731,{atom,731,erlang},{atom,731,setelement}},
            [{integer,731,2},
             {var,731,'S'},
             {cons,731,
              {tuple,731,[{atom,731,alog},{var,731,'B'}]},
              {call,731,
               {remote,731,{atom,731,erlang},{atom,731,element}},
               [{integer,731,2},{var,731,'S'}]}}]}]}]}]}]},
   {clause,733,
    [{tuple,733,[{atom,733,balog},{var,733,'B'}]},{var,733,'S'}],
    [],
    [{'case',734,
      {call,734,{atom,734,get},[{atom,734,log}]},
      [{clause,735,
        [{var,735,'L'}],
        [[{op,735,'=:=',
           {call,735,
            {remote,735,{atom,735,erlang},{atom,735,element}},
            [{integer,735,12},{var,735,'L'}]},
           {atom,735,read_only}}]],
        [{call,736,
          {atom,736,notify_owners},
          [{tuple,736,[{atom,736,read_only},{var,736,'B'}]}]},
         {call,737,{atom,737,loop},[{var,737,'S'}]}]},
       {clause,738,
        [{var,738,'L'}],
        [[{op,738,'=:=',
           {call,738,
            {remote,738,{atom,738,erlang},{atom,738,element}},
            [{integer,738,2},{var,738,'L'}]},
           {atom,738,ok}}]],
        [{call,739,
          {atom,739,log_loop},
          [{var,739,'S'},
           {nil,739},
           {cons,739,{var,739,'B'},{nil,739}},
           {nil,739},
           {call,739,{atom,739,iolist_size},[{var,739,'B'}]}]}]},
       {clause,740,
        [{var,740,'L'}],
        [[{op,740,'=:=',
           {call,740,
            {remote,740,{atom,740,erlang},{atom,740,element}},
            [{integer,740,2},{var,740,'L'}]},
           {tuple,740,[{atom,740,blocked},{atom,740,false}]}}]],
        [{call,741,
          {atom,741,notify_owners},
          [{tuple,741,[{atom,741,blocked_log},{var,741,'B'}]}]},
         {call,742,{atom,742,loop},[{var,742,'S'}]}]},
       {clause,743,
        [{var,743,'_'}],
        [],
        [{call,744,
          {atom,744,loop},
          [{call,744,
            {remote,744,{atom,744,erlang},{atom,744,setelement}},
            [{integer,744,2},
             {var,744,'S'},
             {cons,744,
              {tuple,744,[{atom,744,balog},{var,744,'B'}]},
              {call,744,
               {remote,744,{atom,744,erlang},{atom,744,element}},
               [{integer,744,2},{var,744,'S'}]}}]}]}]}]}]},
   {clause,746,
    [{tuple,746,
      [{var,746,'From'},
       {tuple,746,[{atom,746,block},{var,746,'QueueLogRecs'}]}]},
     {var,746,'S'}],
    [],
    [{'case',747,
      {call,747,{atom,747,get},[{atom,747,log}]},
      [{clause,748,
        [{var,748,'L'}],
        [[{op,748,'=:=',
           {call,748,
            {remote,748,{atom,748,erlang},{atom,748,element}},
            [{integer,748,2},{var,748,'L'}]},
           {atom,748,ok}}]],
        [{call,749,
          {atom,749,do_block},
          [{var,749,'From'},{var,749,'QueueLogRecs'},{var,749,'L'}]},
         {call,750,
          {atom,750,reply},
          [{var,750,'From'},{atom,750,ok},{var,750,'S'}]}]},
       {clause,751,
        [{var,751,'L'}],
        [[{op,751,'=:=',
           {call,751,
            {remote,751,{atom,751,erlang},{atom,751,element}},
            [{integer,751,2},{var,751,'L'}]},
           {tuple,751,[{atom,751,blocked},{atom,751,false}]}}]],
        [{call,752,
          {atom,752,reply},
          [{var,752,'From'},
           {tuple,752,
            [{atom,752,error},
             {tuple,752,
              [{atom,752,blocked_log},
               {call,752,
                {remote,752,{atom,752,erlang},{atom,752,element}},
                [{integer,752,3},{var,752,'L'}]}]}]},
           {var,752,'S'}]}]},
       {clause,753,
        [{var,753,'L'}],
        [[{op,753,'=:=',
           {call,753,
            {remote,753,{atom,753,erlang},{atom,753,element}},
            [{integer,753,4},{var,753,'L'}]},
           {var,753,'From'}}]],
        [{call,754,
          {atom,754,reply},
          [{var,754,'From'},
           {tuple,754,
            [{atom,754,error},
             {tuple,754,
              [{atom,754,blocked_log},
               {call,754,
                {remote,754,{atom,754,erlang},{atom,754,element}},
                [{integer,754,3},{var,754,'L'}]}]}]},
           {var,754,'S'}]}]},
       {clause,755,
        [{var,755,'_'}],
        [],
        [{call,756,
          {atom,756,loop},
          [{call,756,
            {remote,756,{atom,756,erlang},{atom,756,setelement}},
            [{integer,756,2},
             {var,756,'S'},
             {cons,756,
              {tuple,756,
               [{var,756,'From'},
                {tuple,756,[{atom,756,block},{var,756,'QueueLogRecs'}]}]},
              {call,757,
               {remote,757,{atom,757,erlang},{atom,757,element}},
               [{integer,757,2},{var,757,'S'}]}}]}]}]}]}]},
   {clause,759,
    [{tuple,759,[{var,759,'From'},{atom,759,unblock}]},{var,759,'S'}],
    [],
    [{'case',760,
      {call,760,{atom,760,get},[{atom,760,log}]},
      [{clause,761,
        [{var,761,'L'}],
        [[{op,761,'=:=',
           {call,761,
            {remote,761,{atom,761,erlang},{atom,761,element}},
            [{integer,761,2},{var,761,'L'}]},
           {atom,761,ok}}]],
        [{call,762,
          {atom,762,reply},
          [{var,762,'From'},
           {tuple,762,
            [{atom,762,error},
             {tuple,762,
              [{atom,762,not_blocked},
               {call,762,
                {remote,762,{atom,762,erlang},{atom,762,element}},
                [{integer,762,3},{var,762,'L'}]}]}]},
           {var,762,'S'}]}]},
       {clause,763,
        [{var,763,'L'}],
        [[{op,763,'=:=',
           {call,763,
            {remote,763,{atom,763,erlang},{atom,763,element}},
            [{integer,763,4},{var,763,'L'}]},
           {var,763,'From'}}]],
        [{match,764,
          {var,764,'S2'},
          {call,764,{atom,764,do_unblock},[{var,764,'L'},{var,764,'S'}]}},
         {call,765,
          {atom,765,reply},
          [{var,765,'From'},{atom,765,ok},{var,765,'S2'}]}]},
       {clause,766,
        [{var,766,'L'}],
        [],
        [{call,767,
          {atom,767,reply},
          [{var,767,'From'},
           {tuple,767,
            [{atom,767,error},
             {tuple,767,
              [{atom,767,not_blocked_by_pid},
               {call,767,
                {remote,767,{atom,767,erlang},{atom,767,element}},
                [{integer,767,3},{var,767,'L'}]}]}]},
           {var,767,'S'}]}]}]}]},
   {clause,769,
    [{tuple,769,[{var,769,'From'},{atom,769,sync}]},{var,769,'S'}],
    [],
    [{'case',770,
      {call,770,{atom,770,get},[{atom,770,log}]},
      [{clause,771,
        [{var,771,'L'}],
        [[{op,771,'=:=',
           {call,771,
            {remote,771,{atom,771,erlang},{atom,771,element}},
            [{integer,771,12},{var,771,'L'}]},
           {atom,771,read_only}}]],
        [{call,772,
          {atom,772,reply},
          [{var,772,'From'},
           {tuple,772,
            [{atom,772,error},
             {tuple,772,
              [{atom,772,read_only_mode},
               {call,772,
                {remote,772,{atom,772,erlang},{atom,772,element}},
                [{integer,772,3},{var,772,'L'}]}]}]},
           {var,772,'S'}]}]},
       {clause,773,
        [{var,773,'L'}],
        [[{op,773,'=:=',
           {call,773,
            {remote,773,{atom,773,erlang},{atom,773,element}},
            [{integer,773,2},{var,773,'L'}]},
           {atom,773,ok}}]],
        [{call,774,
          {atom,774,sync_loop},
          [{cons,774,{var,774,'From'},{nil,774}},{var,774,'S'}]}]},
       {clause,775,
        [{var,775,'L'}],
        [[{op,775,'=:=',
           {call,775,
            {remote,775,{atom,775,erlang},{atom,775,element}},
            [{integer,775,2},{var,775,'L'}]},
           {tuple,775,[{atom,775,blocked},{atom,775,false}]}}]],
        [{call,776,
          {atom,776,reply},
          [{var,776,'From'},
           {tuple,776,
            [{atom,776,error},
             {tuple,776,
              [{atom,776,blocked_log},
               {call,776,
                {remote,776,{atom,776,erlang},{atom,776,element}},
                [{integer,776,3},{var,776,'L'}]}]}]},
           {var,776,'S'}]}]},
       {clause,777,
        [{var,777,'L'}],
        [[{op,777,'=:=',
           {call,777,
            {remote,777,{atom,777,erlang},{atom,777,element}},
            [{integer,777,4},{var,777,'L'}]},
           {var,777,'From'}}]],
        [{call,778,
          {atom,778,reply},
          [{var,778,'From'},
           {tuple,778,
            [{atom,778,error},
             {tuple,778,
              [{atom,778,blocked_log},
               {call,778,
                {remote,778,{atom,778,erlang},{atom,778,element}},
                [{integer,778,3},{var,778,'L'}]}]}]},
           {var,778,'S'}]}]},
       {clause,779,
        [{var,779,'_'}],
        [],
        [{call,780,
          {atom,780,loop},
          [{call,780,
            {remote,780,{atom,780,erlang},{atom,780,setelement}},
            [{integer,780,2},
             {var,780,'S'},
             {cons,780,
              {tuple,780,[{var,780,'From'},{atom,780,sync}]},
              {call,780,
               {remote,780,{atom,780,erlang},{atom,780,element}},
               [{integer,780,2},{var,780,'S'}]}}]}]}]}]}]},
   {clause,782,
    [{tuple,782,
      [{var,782,'From'},
       {tuple,782,
        [{atom,782,truncate},{var,782,'Head'},{var,782,'F'},{var,782,'A'}]}]},
     {var,782,'S'}],
    [],
    [{'case',783,
      {call,783,{atom,783,get},[{atom,783,log}]},
      [{clause,784,
        [{var,784,'L'}],
        [[{op,784,'=:=',
           {call,784,
            {remote,784,{atom,784,erlang},{atom,784,element}},
            [{integer,784,12},{var,784,'L'}]},
           {atom,784,read_only}}]],
        [{call,785,
          {atom,785,reply},
          [{var,785,'From'},
           {tuple,785,
            [{atom,785,error},
             {tuple,785,
              [{atom,785,read_only_mode},
               {call,785,
                {remote,785,{atom,785,erlang},{atom,785,element}},
                [{integer,785,3},{var,785,'L'}]}]}]},
           {var,785,'S'}]}]},
       {clause,786,
        [{var,786,'L'}],
        [[{op,786,'=:=',
           {call,786,
            {remote,786,{atom,786,erlang},{atom,786,element}},
            [{integer,786,2},{var,786,'L'}]},
           {atom,786,ok}},
          {op,786,'=/=',
           {call,786,
            {remote,786,{atom,786,erlang},{atom,786,element}},
            [{integer,786,9},{var,786,'S'}]},
           {atom,786,ok}}]],
        [{call,787,
          {atom,787,loop},
          [{call,787,
            {atom,787,cache_error},
            [{var,787,'S'},{cons,787,{var,787,'From'},{nil,787}}]}]}]},
       {clause,788,
        [{var,788,'L'}],
        [[{op,788,'=:=',
           {call,788,
            {remote,788,{atom,788,erlang},{atom,788,element}},
            [{integer,788,2},{var,788,'L'}]},
           {atom,788,ok}}]],
        [{match,789,
          {var,789,'H'},
          {call,789,
           {atom,789,merge_head},
           [{var,789,'Head'},
            {call,789,
             {remote,789,{atom,789,erlang},{atom,789,element}},
             [{integer,789,11},{var,789,'L'}]}]}},
         {'case',790,
          {'catch',790,
           {call,790,{atom,790,do_trunc},[{var,790,'L'},{var,790,'H'}]}},
          [{clause,791,
            [{atom,791,ok}],
            [],
            [{call,792,{atom,792,erase},[{atom,792,is_full}]},
             {call,793,
              {atom,793,notify_owners},
              [{tuple,793,
                [{atom,793,truncated},
                 {call,793,
                  {remote,793,{atom,793,erlang},{atom,793,element}},
                  [{integer,793,6},{var,793,'S'}]}]}]},
             {match,794,
              {var,794,'N'},
              {'if',794,
               [{clause,794,[],
                 [[{op,794,'=:=',{var,794,'Head'},{atom,794,none}}]],
                 [{integer,794,0}]},
                {clause,794,[],[[{atom,794,true}]],[{integer,794,1}]}]}},
             {call,795,
              {atom,795,reply},
              [{var,795,'From'},
               {atom,795,ok},
               {call,795,
                {remote,795,{atom,795,erlang},{atom,795,setelement}},
                [{integer,795,6},
                 {call,795,{atom,795,state_ok},[{var,795,'S'}]},
                 {var,795,'N'}]}]}]},
           {clause,796,
            [{var,796,'Error'}],
            [],
            [{call,797,
              {atom,797,do_exit},
              [{var,797,'S'},
               {var,797,'From'},
               {var,797,'Error'},
               {tuple,65,
                [{tuple,65,[{atom,65,failed},{var,797,'Error'}]},
                 {cons,65,
                  {tuple,65,[{atom,-1,disk_log},{var,797,'F'},{var,797,'A'}]},
                  {nil,65}}]}]}]}]}]},
       {clause,799,
        [{var,799,'L'}],
        [[{op,799,'=:=',
           {call,799,
            {remote,799,{atom,799,erlang},{atom,799,element}},
            [{integer,799,2},{var,799,'L'}]},
           {tuple,799,[{atom,799,blocked},{atom,799,false}]}}]],
        [{call,800,
          {atom,800,reply},
          [{var,800,'From'},
           {tuple,800,
            [{atom,800,error},
             {tuple,800,
              [{atom,800,blocked_log},
               {call,800,
                {remote,800,{atom,800,erlang},{atom,800,element}},
                [{integer,800,3},{var,800,'L'}]}]}]},
           {var,800,'S'}]}]},
       {clause,801,
        [{var,801,'L'}],
        [[{op,801,'=:=',
           {call,801,
            {remote,801,{atom,801,erlang},{atom,801,element}},
            [{integer,801,4},{var,801,'L'}]},
           {var,801,'From'}}]],
        [{call,802,
          {atom,802,reply},
          [{var,802,'From'},
           {tuple,802,
            [{atom,802,error},
             {tuple,802,
              [{atom,802,blocked_log},
               {call,802,
                {remote,802,{atom,802,erlang},{atom,802,element}},
                [{integer,802,3},{var,802,'L'}]}]}]},
           {var,802,'S'}]}]},
       {clause,803,
        [{var,803,'_'}],
        [],
        [{call,804,
          {atom,804,loop},
          [{call,804,
            {remote,804,{atom,804,erlang},{atom,804,setelement}},
            [{integer,804,2},
             {var,804,'S'},
             {cons,804,
              {tuple,804,
               [{var,804,'From'},
                {tuple,804,
                 [{atom,804,truncate},
                  {var,804,'Head'},
                  {var,804,'F'},
                  {var,804,'A'}]}]},
              {call,805,
               {remote,805,{atom,805,erlang},{atom,805,element}},
               [{integer,805,2},{var,805,'S'}]}}]}]}]}]}]},
   {clause,807,
    [{tuple,807,
      [{var,807,'From'},
       {tuple,807,
        [{atom,807,chunk},{var,807,'Pos'},{var,807,'B'},{var,807,'N'}]}]},
     {var,807,'S'}],
    [],
    [{'case',808,
      {call,808,{atom,808,get},[{atom,808,log}]},
      [{clause,809,
        [{var,809,'L'}],
        [[{op,809,'=:=',
           {call,809,
            {remote,809,{atom,809,erlang},{atom,809,element}},
            [{integer,809,2},{var,809,'L'}]},
           {atom,809,ok}},
          {op,809,'=/=',
           {call,809,
            {remote,809,{atom,809,erlang},{atom,809,element}},
            [{integer,809,9},{var,809,'S'}]},
           {atom,809,ok}}]],
        [{call,810,
          {atom,810,loop},
          [{call,810,
            {atom,810,cache_error},
            [{var,810,'S'},{cons,810,{var,810,'From'},{nil,810}}]}]}]},
       {clause,811,
        [{var,811,'L'}],
        [[{op,811,'=:=',
           {call,811,
            {remote,811,{atom,811,erlang},{atom,811,element}},
            [{integer,811,2},{var,811,'L'}]},
           {atom,811,ok}}]],
        [{match,812,
          {var,812,'R'},
          {call,812,
           {atom,812,do_chunk},
           [{var,812,'L'},{var,812,'Pos'},{var,812,'B'},{var,812,'N'}]}},
         {call,813,
          {atom,813,reply},
          [{var,813,'From'},{var,813,'R'},{var,813,'S'}]}]},
       {clause,814,
        [{var,814,'L'}],
        [[{op,814,'=:=',
           {call,814,
            {remote,814,{atom,814,erlang},{atom,814,element}},
            [{integer,814,4},{var,814,'L'}]},
           {var,814,'From'}}]],
        [{match,815,
          {var,815,'R'},
          {call,815,
           {atom,815,do_chunk},
           [{var,815,'L'},{var,815,'Pos'},{var,815,'B'},{var,815,'N'}]}},
         {call,816,
          {atom,816,reply},
          [{var,816,'From'},{var,816,'R'},{var,816,'S'}]}]},
       {clause,817,
        [{var,817,'L'}],
        [[{op,817,'=:=',
           {call,817,
            {remote,817,{atom,817,erlang},{atom,817,element}},
            [{integer,817,2},{var,817,'L'}]},
           {tuple,817,[{atom,817,blocked},{atom,817,false}]}}]],
        [{call,818,
          {atom,818,reply},
          [{var,818,'From'},
           {tuple,818,
            [{atom,818,error},
             {tuple,818,
              [{atom,818,blocked_log},
               {call,818,
                {remote,818,{atom,818,erlang},{atom,818,element}},
                [{integer,818,3},{var,818,'L'}]}]}]},
           {var,818,'S'}]}]},
       {clause,819,
        [{var,819,'_L'}],
        [],
        [{call,820,
          {atom,820,loop},
          [{call,820,
            {remote,820,{atom,820,erlang},{atom,820,setelement}},
            [{integer,820,2},
             {var,820,'S'},
             {cons,820,
              {tuple,820,
               [{var,820,'From'},
                {tuple,820,
                 [{atom,820,chunk},
                  {var,820,'Pos'},
                  {var,820,'B'},
                  {var,820,'N'}]}]},
              {call,820,
               {remote,820,{atom,820,erlang},{atom,820,element}},
               [{integer,820,2},{var,820,'S'}]}}]}]}]}]}]},
   {clause,822,
    [{tuple,822,
      [{var,822,'From'},
       {tuple,822,[{atom,822,chunk_step},{var,822,'Pos'},{var,822,'N'}]}]},
     {var,822,'S'}],
    [],
    [{'case',823,
      {call,823,{atom,823,get},[{atom,823,log}]},
      [{clause,824,
        [{var,824,'L'}],
        [[{op,824,'=:=',
           {call,824,
            {remote,824,{atom,824,erlang},{atom,824,element}},
            [{integer,824,2},{var,824,'L'}]},
           {atom,824,ok}},
          {op,824,'=/=',
           {call,824,
            {remote,824,{atom,824,erlang},{atom,824,element}},
            [{integer,824,9},{var,824,'S'}]},
           {atom,824,ok}}]],
        [{call,825,
          {atom,825,loop},
          [{call,825,
            {atom,825,cache_error},
            [{var,825,'S'},{cons,825,{var,825,'From'},{nil,825}}]}]}]},
       {clause,826,
        [{var,826,'L'}],
        [[{op,826,'=:=',
           {call,826,
            {remote,826,{atom,826,erlang},{atom,826,element}},
            [{integer,826,2},{var,826,'L'}]},
           {atom,826,ok}}]],
        [{match,827,
          {var,827,'R'},
          {call,827,
           {atom,827,do_chunk_step},
           [{var,827,'L'},{var,827,'Pos'},{var,827,'N'}]}},
         {call,828,
          {atom,828,reply},
          [{var,828,'From'},{var,828,'R'},{var,828,'S'}]}]},
       {clause,829,
        [{var,829,'L'}],
        [[{op,829,'=:=',
           {call,829,
            {remote,829,{atom,829,erlang},{atom,829,element}},
            [{integer,829,4},{var,829,'L'}]},
           {var,829,'From'}}]],
        [{match,830,
          {var,830,'R'},
          {call,830,
           {atom,830,do_chunk_step},
           [{var,830,'L'},{var,830,'Pos'},{var,830,'N'}]}},
         {call,831,
          {atom,831,reply},
          [{var,831,'From'},{var,831,'R'},{var,831,'S'}]}]},
       {clause,832,
        [{var,832,'L'}],
        [[{op,832,'=:=',
           {call,832,
            {remote,832,{atom,832,erlang},{atom,832,element}},
            [{integer,832,2},{var,832,'L'}]},
           {tuple,832,[{atom,832,blocked},{atom,832,false}]}}]],
        [{call,833,
          {atom,833,reply},
          [{var,833,'From'},
           {tuple,833,
            [{atom,833,error},
             {tuple,833,
              [{atom,833,blocked_log},
               {call,833,
                {remote,833,{atom,833,erlang},{atom,833,element}},
                [{integer,833,3},{var,833,'L'}]}]}]},
           {var,833,'S'}]}]},
       {clause,834,
        [{var,834,'_'}],
        [],
        [{call,835,
          {atom,835,loop},
          [{call,835,
            {remote,835,{atom,835,erlang},{atom,835,setelement}},
            [{integer,835,2},
             {var,835,'S'},
             {cons,835,
              {tuple,835,
               [{var,835,'From'},
                {tuple,835,
                 [{atom,835,chunk_step},{var,835,'Pos'},{var,835,'N'}]}]},
              {call,836,
               {remote,836,{atom,836,erlang},{atom,836,element}},
               [{integer,836,2},{var,836,'S'}]}}]}]}]}]}]},
   {clause,838,
    [{tuple,838,
      [{var,838,'From'},
       {tuple,838,
        [{atom,838,change_notify},{var,838,'Pid'},{var,838,'NewNotify'}]}]},
     {var,838,'S'}],
    [],
    [{'case',839,
      {call,839,{atom,839,get},[{atom,839,log}]},
      [{clause,840,
        [{var,840,'L'}],
        [[{op,840,'=:=',
           {call,840,
            {remote,840,{atom,840,erlang},{atom,840,element}},
            [{integer,840,2},{var,840,'L'}]},
           {atom,840,ok}}]],
        [{'case',841,
          {call,841,
           {atom,841,do_change_notify},
           [{var,841,'L'},{var,841,'Pid'},{var,841,'NewNotify'}]},
          [{clause,842,
            [{tuple,842,[{atom,842,ok},{var,842,'L1'}]}],
            [],
            [{call,843,{atom,843,put},[{atom,843,log},{var,843,'L1'}]},
             {call,844,
              {atom,844,reply},
              [{var,844,'From'},{atom,844,ok},{var,844,'S'}]}]},
           {clause,845,
            [{var,845,'Error'}],
            [],
            [{call,846,
              {atom,846,reply},
              [{var,846,'From'},{var,846,'Error'},{var,846,'S'}]}]}]}]},
       {clause,848,
        [{var,848,'L'}],
        [[{op,848,'=:=',
           {call,848,
            {remote,848,{atom,848,erlang},{atom,848,element}},
            [{integer,848,2},{var,848,'L'}]},
           {tuple,848,[{atom,848,blocked},{atom,848,false}]}}]],
        [{call,849,
          {atom,849,reply},
          [{var,849,'From'},
           {tuple,849,
            [{atom,849,error},
             {tuple,849,
              [{atom,849,blocked_log},
               {call,849,
                {remote,849,{atom,849,erlang},{atom,849,element}},
                [{integer,849,3},{var,849,'L'}]}]}]},
           {var,849,'S'}]}]},
       {clause,850,
        [{var,850,'L'}],
        [[{op,850,'=:=',
           {call,850,
            {remote,850,{atom,850,erlang},{atom,850,element}},
            [{integer,850,4},{var,850,'L'}]},
           {var,850,'From'}}]],
        [{call,851,
          {atom,851,reply},
          [{var,851,'From'},
           {tuple,851,
            [{atom,851,error},
             {tuple,851,
              [{atom,851,blocked_log},
               {call,851,
                {remote,851,{atom,851,erlang},{atom,851,element}},
                [{integer,851,3},{var,851,'L'}]}]}]},
           {var,851,'S'}]}]},
       {clause,852,
        [{var,852,'_'}],
        [],
        [{call,853,
          {atom,853,loop},
          [{call,853,
            {remote,853,{atom,853,erlang},{atom,853,setelement}},
            [{integer,853,2},
             {var,853,'S'},
             {cons,853,
              {tuple,853,
               [{var,853,'From'},
                {tuple,853,
                 [{atom,853,change_notify},
                  {var,853,'Pid'},
                  {var,853,'NewNotify'}]}]},
              {call,854,
               {remote,854,{atom,854,erlang},{atom,854,element}},
               [{integer,854,2},{var,854,'S'}]}}]}]}]}]}]},
   {clause,856,
    [{tuple,856,
      [{var,856,'From'},
       {tuple,856,[{atom,856,change_header},{var,856,'NewHead'}]}]},
     {var,856,'S'}],
    [],
    [{'case',857,
      {call,857,{atom,857,get},[{atom,857,log}]},
      [{clause,858,
        [{var,858,'L'}],
        [[{op,858,'=:=',
           {call,858,
            {remote,858,{atom,858,erlang},{atom,858,element}},
            [{integer,858,12},{var,858,'L'}]},
           {atom,858,read_only}}]],
        [{call,859,
          {atom,859,reply},
          [{var,859,'From'},
           {tuple,859,
            [{atom,859,error},
             {tuple,859,
              [{atom,859,read_only_mode},
               {call,859,
                {remote,859,{atom,859,erlang},{atom,859,element}},
                [{integer,859,3},{var,859,'L'}]}]}]},
           {var,859,'S'}]}]},
       {clause,860,
        [{var,860,'L'}],
        [[{op,860,'=:=',
           {call,860,
            {remote,860,{atom,860,erlang},{atom,860,element}},
            [{integer,860,2},{var,860,'L'}]},
           {atom,860,ok}}]],
        [{'case',861,
          {call,861,
           {atom,861,check_head},
           [{var,861,'NewHead'},
            {call,861,
             {remote,861,{atom,861,erlang},{atom,861,element}},
             [{integer,861,9},{var,861,'L'}]}]},
          [{clause,862,
            [{tuple,862,[{atom,862,ok},{var,862,'Head'}]}],
            [],
            [{call,863,
              {atom,863,put},
              [{atom,863,log},
               {call,863,
                {remote,863,{atom,863,erlang},{atom,863,setelement}},
                [{integer,863,11},
                 {var,863,'L'},
                 {call,863,
                  {atom,863,mk_head},
                  [{var,863,'Head'},
                   {call,863,
                    {remote,863,{atom,863,erlang},{atom,863,element}},
                    [{integer,863,9},{var,863,'L'}]}]}]}]},
             {call,864,
              {atom,864,reply},
              [{var,864,'From'},{atom,864,ok},{var,864,'S'}]}]},
           {clause,865,
            [{var,865,'Error'}],
            [],
            [{call,866,
              {atom,866,reply},
              [{var,866,'From'},{var,866,'Error'},{var,866,'S'}]}]}]}]},
       {clause,868,
        [{var,868,'L'}],
        [[{op,868,'=:=',
           {call,868,
            {remote,868,{atom,868,erlang},{atom,868,element}},
            [{integer,868,2},{var,868,'L'}]},
           {tuple,868,[{atom,868,blocked},{atom,868,false}]}}]],
        [{call,869,
          {atom,869,reply},
          [{var,869,'From'},
           {tuple,869,
            [{atom,869,error},
             {tuple,869,
              [{atom,869,blocked_log},
               {call,869,
                {remote,869,{atom,869,erlang},{atom,869,element}},
                [{integer,869,3},{var,869,'L'}]}]}]},
           {var,869,'S'}]}]},
       {clause,870,
        [{var,870,'L'}],
        [[{op,870,'=:=',
           {call,870,
            {remote,870,{atom,870,erlang},{atom,870,element}},
            [{integer,870,4},{var,870,'L'}]},
           {var,870,'From'}}]],
        [{call,871,
          {atom,871,reply},
          [{var,871,'From'},
           {tuple,871,
            [{atom,871,error},
             {tuple,871,
              [{atom,871,blocked_log},
               {call,871,
                {remote,871,{atom,871,erlang},{atom,871,element}},
                [{integer,871,3},{var,871,'L'}]}]}]},
           {var,871,'S'}]}]},
       {clause,872,
        [{var,872,'_'}],
        [],
        [{call,873,
          {atom,873,loop},
          [{call,873,
            {remote,873,{atom,873,erlang},{atom,873,setelement}},
            [{integer,873,2},
             {var,873,'S'},
             {cons,873,
              {tuple,873,
               [{var,873,'From'},
                {tuple,873,[{atom,873,change_header},{var,873,'NewHead'}]}]},
              {call,874,
               {remote,874,{atom,874,erlang},{atom,874,element}},
               [{integer,874,2},{var,874,'S'}]}}]}]}]}]}]},
   {clause,876,
    [{tuple,876,
      [{var,876,'From'},
       {tuple,876,[{atom,876,change_size},{var,876,'NewSize'}]}]},
     {var,876,'S'}],
    [],
    [{'case',877,
      {call,877,{atom,877,get},[{atom,877,log}]},
      [{clause,878,
        [{var,878,'L'}],
        [[{op,878,'=:=',
           {call,878,
            {remote,878,{atom,878,erlang},{atom,878,element}},
            [{integer,878,12},{var,878,'L'}]},
           {atom,878,read_only}}]],
        [{call,879,
          {atom,879,reply},
          [{var,879,'From'},
           {tuple,879,
            [{atom,879,error},
             {tuple,879,
              [{atom,879,read_only_mode},
               {call,879,
                {remote,879,{atom,879,erlang},{atom,879,element}},
                [{integer,879,3},{var,879,'L'}]}]}]},
           {var,879,'S'}]}]},
       {clause,880,
        [{var,880,'L'}],
        [[{op,880,'=:=',
           {call,880,
            {remote,880,{atom,880,erlang},{atom,880,element}},
            [{integer,880,2},{var,880,'L'}]},
           {atom,880,ok}}]],
        [{'case',881,
          {call,881,
           {atom,881,check_size},
           [{call,881,
             {remote,881,{atom,881,erlang},{atom,881,element}},
             [{integer,881,8},{var,881,'L'}]},
            {var,881,'NewSize'}]},
          [{clause,882,
            [{atom,882,ok}],
            [],
            [{'case',883,
              {'catch',883,
               {call,883,
                {atom,883,do_change_size},
                [{var,883,'L'},{var,883,'NewSize'}]}},
              [{clause,884,
                [{atom,884,ok}],
                [],
                [{call,885,
                  {atom,885,reply},
                  [{var,885,'From'},{atom,885,ok},{var,885,'S'}]}]},
               {clause,886,
                [{tuple,886,[{atom,886,big},{var,886,'CurSize'}]}],
                [],
                [{call,887,
                  {atom,887,reply},
                  [{var,887,'From'},
                   {tuple,888,
                    [{atom,888,error},
                     {tuple,889,
                      [{atom,889,new_size_too_small},
                       {call,889,
                        {remote,889,{atom,889,erlang},{atom,889,element}},
                        [{integer,889,3},{var,889,'L'}]},
                       {var,889,'CurSize'}]}]},
                   {var,890,'S'}]}]},
               {clause,891,
                [{var,891,'Else'}],
                [],
                [{call,892,
                  {atom,892,reply},
                  [{var,892,'From'},
                   {var,892,'Else'},
                   {call,892,
                    {atom,892,state_err},
                    [{var,892,'S'},{var,892,'Else'}]}]}]}]}]},
           {clause,894,
            [{atom,894,not_ok}],
            [],
            [{call,895,
              {atom,895,reply},
              [{var,895,'From'},
               {tuple,895,
                [{atom,895,error},
                 {tuple,895,[{atom,895,badarg},{atom,895,size}]}]},
               {var,895,'S'}]}]}]}]},
       {clause,897,
        [{var,897,'L'}],
        [[{op,897,'=:=',
           {call,897,
            {remote,897,{atom,897,erlang},{atom,897,element}},
            [{integer,897,2},{var,897,'L'}]},
           {tuple,897,[{atom,897,blocked},{atom,897,false}]}}]],
        [{call,898,
          {atom,898,reply},
          [{var,898,'From'},
           {tuple,898,
            [{atom,898,error},
             {tuple,898,
              [{atom,898,blocked_log},
               {call,898,
                {remote,898,{atom,898,erlang},{atom,898,element}},
                [{integer,898,3},{var,898,'L'}]}]}]},
           {var,898,'S'}]}]},
       {clause,899,
        [{var,899,'L'}],
        [[{op,899,'=:=',
           {call,899,
            {remote,899,{atom,899,erlang},{atom,899,element}},
            [{integer,899,4},{var,899,'L'}]},
           {var,899,'From'}}]],
        [{call,900,
          {atom,900,reply},
          [{var,900,'From'},
           {tuple,900,
            [{atom,900,error},
             {tuple,900,
              [{atom,900,blocked_log},
               {call,900,
                {remote,900,{atom,900,erlang},{atom,900,element}},
                [{integer,900,3},{var,900,'L'}]}]}]},
           {var,900,'S'}]}]},
       {clause,901,
        [{var,901,'_'}],
        [],
        [{call,902,
          {atom,902,loop},
          [{call,902,
            {remote,902,{atom,902,erlang},{atom,902,setelement}},
            [{integer,902,2},
             {var,902,'S'},
             {cons,902,
              {tuple,902,
               [{var,902,'From'},
                {tuple,902,[{atom,902,change_size},{var,902,'NewSize'}]}]},
              {call,903,
               {remote,903,{atom,903,erlang},{atom,903,element}},
               [{integer,903,2},{var,903,'S'}]}}]}]}]}]}]},
   {clause,905,
    [{tuple,905,[{var,905,'From'},{atom,905,inc_wrap_file}]},{var,905,'S'}],
    [],
    [{'case',906,
      {call,906,{atom,906,get},[{atom,906,log}]},
      [{clause,907,
        [{var,907,'L'}],
        [[{op,907,'=:=',
           {call,907,
            {remote,907,{atom,907,erlang},{atom,907,element}},
            [{integer,907,12},{var,907,'L'}]},
           {atom,907,read_only}}]],
        [{call,908,
          {atom,908,reply},
          [{var,908,'From'},
           {tuple,908,
            [{atom,908,error},
             {tuple,908,
              [{atom,908,read_only_mode},
               {call,908,
                {remote,908,{atom,908,erlang},{atom,908,element}},
                [{integer,908,3},{var,908,'L'}]}]}]},
           {var,908,'S'}]}]},
       {clause,909,
        [{var,909,'L'}],
        [[{op,909,'=:=',
           {call,909,
            {remote,909,{atom,909,erlang},{atom,909,element}},
            [{integer,909,8},{var,909,'L'}]},
           {atom,909,halt}}]],
        [{call,910,
          {atom,910,reply},
          [{var,910,'From'},
           {tuple,910,
            [{atom,910,error},
             {tuple,910,
              [{atom,910,halt_log},
               {call,910,
                {remote,910,{atom,910,erlang},{atom,910,element}},
                [{integer,910,3},{var,910,'L'}]}]}]},
           {var,910,'S'}]}]},
       {clause,911,
        [{var,911,'L'}],
        [[{op,911,'=:=',
           {call,911,
            {remote,911,{atom,911,erlang},{atom,911,element}},
            [{integer,911,2},{var,911,'L'}]},
           {atom,911,ok}},
          {op,911,'=/=',
           {call,911,
            {remote,911,{atom,911,erlang},{atom,911,element}},
            [{integer,911,9},{var,911,'S'}]},
           {atom,911,ok}}]],
        [{call,912,
          {atom,912,loop},
          [{call,912,
            {atom,912,cache_error},
            [{var,912,'S'},{cons,912,{var,912,'From'},{nil,912}}]}]}]},
       {clause,913,
        [{var,913,'L'}],
        [[{op,913,'=:=',
           {call,913,
            {remote,913,{atom,913,erlang},{atom,913,element}},
            [{integer,913,2},{var,913,'L'}]},
           {atom,913,ok}}]],
        [{'case',914,
          {'catch',914,{call,914,{atom,914,do_inc_wrap_file},[{var,914,'L'}]}},
          [{clause,915,
            [{tuple,915,[{atom,915,ok},{var,915,'L2'},{var,915,'Lost'}]}],
            [],
            [{call,916,{atom,916,put},[{atom,916,log},{var,916,'L2'}]},
             {call,917,
              {atom,917,notify_owners},
              [{tuple,917,[{atom,917,wrap},{var,917,'Lost'}]}]},
             {call,918,
              {atom,918,reply},
              [{var,918,'From'},
               {atom,918,ok},
               {call,918,
                {remote,918,{atom,918,erlang},{atom,918,setelement}},
                [{integer,918,6},
                 {var,918,'S'},
                 {op,918,'-',
                  {call,918,
                   {remote,918,{atom,918,erlang},{atom,918,element}},
                   [{integer,918,6},{var,918,'S'}]},
                  {var,918,'Lost'}}]}]}]},
           {clause,919,
            [{tuple,919,[{atom,919,error},{var,919,'Error'},{var,919,'L2'}]}],
            [],
            [{call,920,{atom,920,put},[{atom,920,log},{var,920,'L2'}]},
             {call,921,
              {atom,921,reply},
              [{var,921,'From'},
               {var,921,'Error'},
               {call,921,
                {atom,921,state_err},
                [{var,921,'S'},{var,921,'Error'}]}]}]}]}]},
       {clause,923,
        [{var,923,'L'}],
        [[{op,923,'=:=',
           {call,923,
            {remote,923,{atom,923,erlang},{atom,923,element}},
            [{integer,923,2},{var,923,'L'}]},
           {tuple,923,[{atom,923,blocked},{atom,923,false}]}}]],
        [{call,924,
          {atom,924,reply},
          [{var,924,'From'},
           {tuple,924,
            [{atom,924,error},
             {tuple,924,
              [{atom,924,blocked_log},
               {call,924,
                {remote,924,{atom,924,erlang},{atom,924,element}},
                [{integer,924,3},{var,924,'L'}]}]}]},
           {var,924,'S'}]}]},
       {clause,925,
        [{var,925,'L'}],
        [[{op,925,'=:=',
           {call,925,
            {remote,925,{atom,925,erlang},{atom,925,element}},
            [{integer,925,4},{var,925,'L'}]},
           {var,925,'From'}}]],
        [{call,926,
          {atom,926,reply},
          [{var,926,'From'},
           {tuple,926,
            [{atom,926,error},
             {tuple,926,
              [{atom,926,blocked_log},
               {call,926,
                {remote,926,{atom,926,erlang},{atom,926,element}},
                [{integer,926,3},{var,926,'L'}]}]}]},
           {var,926,'S'}]}]},
       {clause,927,
        [{var,927,'_'}],
        [],
        [{call,928,
          {atom,928,loop},
          [{call,928,
            {remote,928,{atom,928,erlang},{atom,928,setelement}},
            [{integer,928,2},
             {var,928,'S'},
             {cons,928,
              {tuple,928,[{var,928,'From'},{atom,928,inc_wrap_file}]},
              {call,928,
               {remote,928,{atom,928,erlang},{atom,928,element}},
               [{integer,928,2},{var,928,'S'}]}}]}]}]}]}]},
   {clause,930,
    [{tuple,930,
      [{var,930,'From'},
       {tuple,930,
        [{atom,930,reopen},
         {var,930,'NewFile'},
         {var,930,'Head'},
         {var,930,'F'},
         {var,930,'A'}]}]},
     {var,930,'S'}],
    [],
    [{'case',931,
      {call,931,{atom,931,get},[{atom,931,log}]},
      [{clause,932,
        [{var,932,'L'}],
        [[{op,932,'=:=',
           {call,932,
            {remote,932,{atom,932,erlang},{atom,932,element}},
            [{integer,932,12},{var,932,'L'}]},
           {atom,932,read_only}}]],
        [{call,933,
          {atom,933,reply},
          [{var,933,'From'},
           {tuple,933,
            [{atom,933,error},
             {tuple,933,
              [{atom,933,read_only_mode},
               {call,933,
                {remote,933,{atom,933,erlang},{atom,933,element}},
                [{integer,933,3},{var,933,'L'}]}]}]},
           {var,933,'S'}]}]},
       {clause,934,
        [{var,934,'L'}],
        [[{op,934,'=:=',
           {call,934,
            {remote,934,{atom,934,erlang},{atom,934,element}},
            [{integer,934,2},{var,934,'L'}]},
           {atom,934,ok}},
          {op,934,'=/=',
           {call,934,
            {remote,934,{atom,934,erlang},{atom,934,element}},
            [{integer,934,9},{var,934,'S'}]},
           {atom,934,ok}}]],
        [{call,935,
          {atom,935,loop},
          [{call,935,
            {atom,935,cache_error},
            [{var,935,'S'},{cons,935,{var,935,'From'},{nil,935}}]}]}]},
       {clause,936,
        [{var,936,'L'}],
        [[{op,936,'=:=',
           {call,936,
            {remote,936,{atom,936,erlang},{atom,936,element}},
            [{integer,936,2},{var,936,'L'}]},
           {atom,936,ok}},
          {op,936,'=/=',
           {call,936,
            {remote,936,{atom,936,erlang},{atom,936,element}},
            [{integer,936,6},{var,936,'L'}]},
           {var,936,'NewFile'}}]],
        [{'case',937,
          {'catch',937,{call,937,{atom,937,close_disk_log2},[{var,937,'L'}]}},
          [{clause,938,
            [{atom,938,closed}],
            [],
            [{match,939,
              {var,939,'File'},
              {call,939,
               {remote,939,{atom,939,erlang},{atom,939,element}},
               [{integer,939,6},{var,939,'L'}]}},
             {'case',940,
              {'catch',940,
               {call,940,
                {atom,940,rename_file},
                [{var,940,'File'},
                 {var,940,'NewFile'},
                 {call,940,
                  {remote,940,{atom,940,erlang},{atom,940,element}},
                  [{integer,940,8},{var,940,'L'}]}]}},
              [{clause,941,
                [{atom,941,ok}],
                [],
                [{match,942,
                  {var,942,'H'},
                  {call,942,
                   {atom,942,merge_head},
                   [{var,942,'Head'},
                    {call,942,
                     {remote,942,{atom,942,erlang},{atom,942,element}},
                     [{integer,942,11},{var,942,'L'}]}]}},
                 {'case',943,
                  {call,943,
                   {atom,943,do_open},
                   [{call,943,
                     {remote,943,{atom,943,erlang},{atom,943,setelement}},
                     [{integer,943,4},
                      {call,943,
                       {remote,943,{atom,943,erlang},{atom,943,setelement}},
                       [{integer,943,11},
                        {call,943,
                         {remote,943,{atom,943,erlang},{atom,943,setelement}},
                         [{integer,943,5},
                          {call,943,
                           {remote,943,
                            {atom,943,erlang},
                            {atom,943,setelement}},
                           [{integer,943,2},
                            {call,943,
                             {remote,943,{atom,943,erlang},{atom,943,element}},
                             [{integer,943,7},{var,943,'S'}]},
                            {call,943,
                             {remote,943,{atom,943,erlang},{atom,943,element}},
                             [{integer,943,3},{var,943,'L'}]}]},
                          {atom,944,truncate}]},
                        {var,945,'H'}]},
                      {var,946,'File'}]}]},
                  [{clause,947,
                    [{tuple,947,
                      [{atom,947,ok},
                       {var,947,'Res'},
                       {var,947,'L2'},
                       {var,947,'Cnt'}]}],
                    [],
                    [{call,948,
                      {atom,948,put},
                      [{atom,948,log},
                       {call,948,
                        {remote,948,{atom,948,erlang},{atom,948,setelement}},
                        [{integer,948,5},
                         {call,948,
                          {remote,948,{atom,948,erlang},{atom,948,setelement}},
                          [{integer,948,11},
                           {call,948,
                            {remote,948,
                             {atom,948,erlang},
                             {atom,948,setelement}},
                            [{integer,948,7},
                             {var,948,'L2'},
                             {call,948,
                              {remote,948,
                               {atom,948,erlang},
                               {atom,948,element}},
                              [{integer,948,7},{var,948,'L'}]}]},
                           {call,949,
                            {remote,949,{atom,949,erlang},{atom,949,element}},
                            [{integer,949,11},{var,949,'L'}]}]},
                         {call,950,
                          {remote,950,{atom,950,erlang},{atom,950,element}},
                          [{integer,950,5},{var,950,'L'}]}]}]},
                     {call,951,
                      {atom,951,notify_owners},
                      [{tuple,951,
                        [{atom,951,truncated},
                         {call,951,
                          {remote,951,{atom,951,erlang},{atom,951,element}},
                          [{integer,951,6},{var,951,'S'}]}]}]},
                     {call,952,{atom,952,erase},[{atom,952,is_full}]},
                     {'case',953,
                      {var,953,'Res'},
                      [{clause,954,
                        [{tuple,954,[{atom,954,error},{var,954,'_'}]}],
                        [],
                        [{call,955,
                          {atom,955,do_exit},
                          [{var,955,'S'},
                           {var,955,'From'},
                           {var,955,'Res'},
                           {tuple,65,
                            [{tuple,65,[{atom,65,failed},{var,956,'Res'}]},
                             {cons,65,
                              {tuple,65,
                               [{atom,-1,disk_log},
                                {var,956,'F'},
                                {var,956,'A'}]},
                              {nil,65}}]}]}]},
                       {clause,957,
                        [{var,957,'_'}],
                        [],
                        [{call,958,
                          {atom,958,reply},
                          [{var,958,'From'},
                           {atom,958,ok},
                           {call,958,
                            {remote,958,
                             {atom,958,erlang},
                             {atom,958,setelement}},
                            [{integer,958,6},
                             {var,958,'S'},
                             {var,958,'Cnt'}]}]}]}]}]},
                   {clause,960,
                    [{var,960,'Res'}],
                    [],
                    [{call,961,
                      {atom,961,do_exit},
                      [{var,961,'S'},
                       {var,961,'From'},
                       {var,961,'Res'},
                       {tuple,65,
                        [{tuple,65,[{atom,65,failed},{var,961,'Res'}]},
                         {cons,65,
                          {tuple,65,
                           [{atom,-1,disk_log},{var,961,'F'},{var,961,'A'}]},
                          {nil,65}}]}]}]}]}]},
               {clause,963,
                [{var,963,'Error'}],
                [],
                [{call,964,
                  {atom,964,do_exit},
                  [{var,964,'S'},
                   {var,964,'From'},
                   {var,964,'Error'},
                   {tuple,65,
                    [{tuple,65,[{atom,65,failed},{var,964,'Error'}]},
                     {cons,65,
                      {tuple,65,
                       [{atom,-1,disk_log},{atom,964,reopen},{integer,964,2}]},
                      {nil,65}}]}]}]}]}]},
           {clause,966,
            [{var,966,'Error'}],
            [],
            [{call,967,
              {atom,967,do_exit},
              [{var,967,'S'},
               {var,967,'From'},
               {var,967,'Error'},
               {tuple,65,
                [{tuple,65,[{atom,65,failed},{var,967,'Error'}]},
                 {cons,65,
                  {tuple,65,[{atom,-1,disk_log},{var,967,'F'},{var,967,'A'}]},
                  {nil,65}}]}]}]}]}]},
       {clause,969,
        [{var,969,'L'}],
        [[{op,969,'=:=',
           {call,969,
            {remote,969,{atom,969,erlang},{atom,969,element}},
            [{integer,969,2},{var,969,'L'}]},
           {atom,969,ok}}]],
        [{call,970,
          {atom,970,reply},
          [{var,970,'From'},
           {tuple,970,
            [{atom,970,error},
             {tuple,970,
              [{atom,970,same_file_name},
               {call,970,
                {remote,970,{atom,970,erlang},{atom,970,element}},
                [{integer,970,3},{var,970,'L'}]}]}]},
           {var,970,'S'}]}]},
       {clause,971,
        [{var,971,'L'}],
        [],
        [{call,972,
          {atom,972,reply},
          [{var,972,'From'},
           {tuple,972,
            [{atom,972,error},
             {tuple,972,
              [{atom,972,blocked_log},
               {call,972,
                {remote,972,{atom,972,erlang},{atom,972,element}},
                [{integer,972,3},{var,972,'L'}]}]}]},
           {var,972,'S'}]}]}]}]},
   {clause,974,
    [{tuple,974,
      [{var,974,'Server'},
       {tuple,974,[{atom,974,internal_open},{var,974,'A'}]}]},
     {var,974,'S'}],
    [],
    [{'case',975,
      {call,975,{atom,975,get},[{atom,975,log}]},
      [{clause,976,
        [{atom,976,undefined}],
        [],
        [{'case',977,
          {call,977,{atom,977,do_open},[{var,977,'A'}]},
          [{clause,978,
            [{tuple,978,
              [{atom,978,ok},{var,978,'Res'},{var,978,'L'},{var,978,'Cnt'}]}],
            [],
            [{call,979,
              {atom,979,put},
              [{atom,979,log},
               {call,979,
                {atom,979,opening_pid},
                [{call,979,
                  {remote,979,{atom,979,erlang},{atom,979,element}},
                  [{integer,979,10},{var,979,'A'}]},
                 {call,979,
                  {remote,979,{atom,979,erlang},{atom,979,element}},
                  [{integer,979,13},{var,979,'A'}]},
                 {var,979,'L'}]}]},
             {call,980,
              {atom,980,reply},
              [{var,980,'Server'},
               {var,980,'Res'},
               {call,980,
                {remote,980,{atom,980,erlang},{atom,980,setelement}},
                [{integer,980,6},
                 {call,980,
                  {remote,980,{atom,980,erlang},{atom,980,setelement}},
                  [{integer,980,7},{var,980,'S'},{var,980,'A'}]},
                 {var,980,'Cnt'}]}]}]},
           {clause,981,
            [{var,981,'Res'}],
            [],
            [{call,982,
              {atom,982,do_fast_exit},
              [{var,982,'S'},{var,982,'Server'},{var,982,'Res'}]}]}]}]},
       {clause,984,
        [{var,984,'L'}],
        [],
        [{match,985,
          {var,985,'TestH'},
          {call,985,
           {atom,985,mk_head},
           [{call,985,
             {remote,985,{atom,985,erlang},{atom,985,element}},
             [{integer,985,11},{var,985,'A'}]},
            {call,985,
             {remote,985,{atom,985,erlang},{atom,985,element}},
             [{integer,985,9},{var,985,'A'}]}]}},
         {'case',986,
          {call,986,
           {atom,986,compare_arg},
           [{call,986,
             {remote,986,{atom,986,erlang},{atom,986,element}},
             [{integer,986,14},{var,986,'A'}]},
            {call,986,
             {remote,986,{atom,986,erlang},{atom,986,element}},
             [{integer,986,7},{var,986,'S'}]},
            {var,986,'TestH'},
            {call,986,
             {remote,986,{atom,986,erlang},{atom,986,element}},
             [{integer,986,11},{var,986,'L'}]}]},
          [{clause,987,
            [{atom,987,ok}],
            [],
            [{'case',988,
              {call,988,
               {atom,988,add_pid},
               [{call,988,
                 {remote,988,{atom,988,erlang},{atom,988,element}},
                 [{integer,988,10},{var,988,'A'}]},
                {call,988,
                 {remote,988,{atom,988,erlang},{atom,988,element}},
                 [{integer,988,13},{var,988,'A'}]},
                {var,988,'L'}]},
              [{clause,989,
                [{tuple,989,[{atom,989,ok},{var,989,'L1'}]}],
                [],
                [{call,990,{atom,990,put},[{atom,990,log},{var,990,'L1'}]},
                 {call,991,
                  {atom,991,reply},
                  [{var,991,'Server'},
                   {tuple,991,
                    [{atom,991,ok},
                     {call,991,
                      {remote,991,{atom,991,erlang},{atom,991,element}},
                      [{integer,991,3},{var,991,'L'}]}]},
                   {var,991,'S'}]}]},
               {clause,992,
                [{var,992,'Error'}],
                [],
                [{call,993,
                  {atom,993,reply},
                  [{var,993,'Server'},{var,993,'Error'},{var,993,'S'}]}]}]}]},
           {clause,995,
            [{var,995,'Error'}],
            [],
            [{call,996,
              {atom,996,reply},
              [{var,996,'Server'},{var,996,'Error'},{var,996,'S'}]}]}]}]}]}]},
   {clause,999,
    [{tuple,999,[{var,999,'From'},{atom,999,close}]},{var,999,'S'}],
    [],
    [{'case',1000,
      {call,1000,{atom,1000,do_close},[{var,1000,'From'},{var,1000,'S'}]},
      [{clause,1001,
        [{tuple,1001,[{atom,1001,stop},{var,1001,'S1'}]}],
        [],
        [{call,1002,
          {atom,1002,do_exit},
          [{var,1002,'S1'},
           {var,1002,'From'},
           {atom,1002,ok},
           {atom,1002,normal}]}]},
       {clause,1003,
        [{tuple,1003,[{atom,1003,continue},{var,1003,'S1'}]}],
        [],
        [{call,1004,
          {atom,1004,reply},
          [{var,1004,'From'},{atom,1004,ok},{var,1004,'S1'}]}]}]}]},
   {clause,1006,
    [{tuple,1006,[{var,1006,'From'},{atom,1006,info}]},{var,1006,'S'}],
    [],
    [{call,1007,
      {atom,1007,reply},
      [{var,1007,'From'},
       {call,1007,
        {atom,1007,do_info},
        [{call,1007,{atom,1007,get},[{atom,1007,log}]},
         {call,1007,
          {remote,1007,{atom,1007,erlang},{atom,1007,element}},
          [{integer,1007,6},{var,1007,'S'}]}]},
       {var,1007,'S'}]}]},
   {clause,1008,
    [{tuple,1008,[{atom,1008,'EXIT'},{var,1008,'From'},{var,1008,'Reason'}]},
     {var,1008,'S'}],
    [[{op,1008,'=:=',
       {var,1008,'From'},
       {call,1008,
        {remote,1008,{atom,1008,erlang},{atom,1008,element}},
        [{integer,1008,4},{var,1008,'S'}]}}]],
    [{match,1010,
      {var,1010,'_'},
      {call,1010,{atom,1010,do_stop},[{var,1010,'S'}]}},
     {call,1011,{atom,1011,exit},[{var,1011,'Reason'}]}]},
   {clause,1012,
    [{tuple,1012,[{atom,1012,'EXIT'},{var,1012,'From'},{var,1012,'Reason'}]},
     {var,1012,'S'}],
    [[{op,1012,'=:=',
       {var,1012,'From'},
       {call,1012,
        {remote,1012,{atom,1012,erlang},{atom,1012,element}},
        [{integer,1012,5},{var,1012,'S'}]}}]],
    [{match,1014,
      {var,1014,'_'},
      {call,1014,{atom,1014,do_stop},[{var,1014,'S'}]}},
     {call,1015,{atom,1015,exit},[{var,1015,'Reason'}]}]},
   {clause,1016,
    [{tuple,1016,[{atom,1016,'EXIT'},{var,1016,'From'},{var,1016,'_Reason'}]},
     {var,1016,'S'}],
    [],
    [{match,1017,{var,1017,'L'},{call,1017,{atom,1017,get},[{atom,1017,log}]}},
     {'case',1018,
      {call,1018,{atom,1018,is_owner},[{var,1018,'From'},{var,1018,'L'}]},
      [{clause,1019,
        [{tuple,1019,[{atom,1019,true},{var,1019,'_Notify'}]}],
        [],
        [{'case',1020,
          {call,1020,
           {atom,1020,close_owner},
           [{var,1020,'From'},{var,1020,'L'},{var,1020,'S'}]},
          [{clause,1021,
            [{tuple,1021,[{atom,1021,stop},{var,1021,'S1'}]}],
            [],
            [{match,1022,
              {var,1022,'_'},
              {call,1022,{atom,1022,do_stop},[{var,1022,'S1'}]}},
             {call,1023,{atom,1023,exit},[{atom,1023,normal}]}]},
           {clause,1024,
            [{tuple,1024,[{atom,1024,continue},{var,1024,'S1'}]}],
            [],
            [{call,1025,{atom,1025,loop},[{var,1025,'S1'}]}]}]}]},
       {clause,1027,
        [{atom,1027,false}],
        [],
        [{match,1029,
          {var,1029,'S1'},
          {call,1029,
           {atom,1029,do_unblock},
           [{var,1029,'From'},
            {call,1029,{atom,1029,get},[{atom,1029,log}]},
            {var,1029,'S'}]}},
         {call,1030,{atom,1030,loop},[{var,1030,'S1'}]}]}]}]},
   {clause,1032,
    [{tuple,1032,[{atom,1032,system},{var,1032,'From'},{var,1032,'Req'}]},
     {var,1032,'S'}],
    [],
    [{call,1033,
      {remote,1033,{atom,1033,sys},{atom,1033,handle_system_msg}},
      [{var,1033,'Req'},
       {var,1033,'From'},
       {call,1033,
        {remote,1033,{atom,1033,erlang},{atom,1033,element}},
        [{integer,1033,4},{var,1033,'S'}]},
       {atom,-1,disk_log},
       {nil,1033},
       {var,1033,'S'}]}]},
   {clause,1034,
    [{var,1034,'_'},{var,1034,'S'}],
    [],
    [{call,1035,{atom,1035,loop},[{var,1035,'S'}]}]}]},
 {function,1037,sync_loop,2,
  [{clause,1037,
    [{var,1037,'From'},{var,1037,'S'}],
    [],
    [{call,1038,
      {atom,1038,log_loop},
      [{var,1038,'S'},
       {nil,1038},
       {nil,1038},
       {var,1038,'From'},
       {integer,1038,0}]}]}]},
 {function,1043,log_loop,5,
  [{clause,1043,
    [{match,1043,
      {tuple,1043,
       [{atom,1043,state},
        {var,1043,'_'},
        {var,1043,'_'},
        {var,1043,'_'},
        {var,1043,'_'},
        {var,1043,'_'},
        {var,1043,'_'},
        {var,1043,'_'},
        {var,1043,'CE'}]},
      {var,1043,'S'}},
     {var,1043,'Pids'},
     {var,1043,'_Bins'},
     {var,1043,'_Sync'},
     {var,1043,'_Sz'}],
    [[{op,1043,'=/=',{var,1043,'CE'},{atom,1043,ok}}]],
    [{call,1044,
      {atom,1044,loop},
      [{call,1044,
        {atom,1044,cache_error},
        [{var,1044,'S'},{var,1044,'Pids'}]}]}]},
   {clause,1045,
    [{match,1045,
      {tuple,1045,
       [{atom,1045,state},
        {var,1045,'_'},
        {var,1045,'_'},
        {var,1045,'_'},
        {var,1045,'_'},
        {var,1045,'_'},
        {var,1045,'_'},
        {var,1045,'_'},
        {var,1045,'_'}]},
      {var,1045,'S'}},
     {var,1045,'Pids'},
     {var,1045,'Bins'},
     {var,1045,'Sync'},
     {var,1045,'Sz'}],
    [[{op,1045,'>',
       {var,1045,'Sz'},
       {op,1040,'*',{integer,1040,64},{integer,1040,1024}}}]],
    [{call,1046,
      {atom,1046,loop},
      [{call,1046,
        {atom,1046,log_end},
        [{var,1046,'S'},
         {var,1046,'Pids'},
         {var,1046,'Bins'},
         {var,1046,'Sync'}]}]}]},
   {clause,1047,
    [{match,1047,
      {tuple,1047,
       [{atom,1047,state},
        {nil,52},
        {nil,1047},
        {atom,1047,undefined},
        {atom,1047,undefined},
        {integer,56,0},
        {atom,1047,undefined},
        {atom,58,ok},
        {atom,59,ok}]},
      {var,1047,'S'}},
     {var,1047,'Pids'},
     {var,1047,'Bins'},
     {var,1047,'Sync'},
     {var,1047,'Sz'}],
    [],
    [{'receive',1048,
      [{clause,1049,
        [{var,1049,'Message'}],
        [],
        [{call,1050,
          {atom,1050,log_loop},
          [{var,1050,'Message'},
           {var,1050,'Pids'},
           {var,1050,'Bins'},
           {var,1050,'Sync'},
           {var,1050,'Sz'},
           {var,1050,'S'},
           {call,1050,{atom,1050,get},[{atom,1050,log}]}]}]}],
      {integer,1051,0},
      [{call,1052,
        {atom,1052,loop},
        [{call,1052,
          {atom,1052,log_end},
          [{var,1052,'S'},
           {var,1052,'Pids'},
           {var,1052,'Bins'},
           {var,1052,'Sync'}]}]}]}]},
   {clause,1054,
    [{match,1054,
      {tuple,1054,
       [{atom,1054,state},
        {nil,52},
        {cons,1054,{var,1054,'M'},{var,1054,'Ms'}},
        {atom,1054,undefined},
        {atom,1054,undefined},
        {integer,56,0},
        {atom,1054,undefined},
        {atom,58,ok},
        {atom,59,ok}]},
      {var,1054,'S'}},
     {var,1054,'Pids'},
     {var,1054,'Bins'},
     {var,1054,'Sync'},
     {var,1054,'Sz'}],
    [],
    [{match,1055,
      {var,1055,'S1'},
      {call,1055,
       {remote,1055,{atom,1055,erlang},{atom,1055,setelement}},
       [{integer,1055,3},{var,1055,'S'},{var,1055,'Ms'}]}},
     {call,1056,
      {atom,1056,log_loop},
      [{var,1056,'M'},
       {var,1056,'Pids'},
       {var,1056,'Bins'},
       {var,1056,'Sync'},
       {var,1056,'Sz'},
       {var,1056,'S1'},
       {call,1056,{atom,1056,get},[{atom,1056,log}]}]}]}]},
 {function,1059,log_loop,7,
  [{clause,1059,
    [{tuple,1059,[{atom,1059,alog},{var,1059,'B'}]},
     {var,1059,'Pids'},
     {var,1059,'Bins'},
     {var,1059,'Sync'},
     {var,1059,'Sz'},
     {var,1059,'S'},
     {tuple,1059,
      [{atom,1059,log},
       {var,1059,'_'},
       {var,1059,'_'},
       {var,1059,'_'},
       {var,1059,'_'},
       {var,1059,'_'},
       {var,1059,'_'},
       {var,1059,'_'},
       {atom,1059,internal},
       {var,1059,'_'},
       {var,1059,'_'},
       {var,1059,'_'},
       {var,1059,'_'},
       {var,1059,'_'},
       {var,1059,'_'}]}],
    [],
    [{call,1061,
      {atom,1061,log_loop},
      [{var,1061,'S'},
       {var,1061,'Pids'},
       {cons,1061,{var,1061,'B'},{var,1061,'Bins'}},
       {var,1061,'Sync'},
       {op,1061,'+',
        {var,1061,'Sz'},
        {call,1061,{atom,1061,iolist_size},[{var,1061,'B'}]}}]}]},
   {clause,1062,
    [{tuple,1062,[{atom,1062,balog},{var,1062,'B'}]},
     {var,1062,'Pids'},
     {var,1062,'Bins'},
     {var,1062,'Sync'},
     {var,1062,'Sz'},
     {var,1062,'S'},
     {var,1062,'_L'}],
    [],
    [{call,1063,
      {atom,1063,log_loop},
      [{var,1063,'S'},
       {var,1063,'Pids'},
       {cons,1063,{var,1063,'B'},{var,1063,'Bins'}},
       {var,1063,'Sync'},
       {op,1063,'+',
        {var,1063,'Sz'},
        {call,1063,{atom,1063,iolist_size},[{var,1063,'B'}]}}]}]},
   {clause,1064,
    [{tuple,1064,
      [{var,1064,'From'},{tuple,1064,[{atom,1064,log},{var,1064,'B'}]}]},
     {var,1064,'Pids'},
     {var,1064,'Bins'},
     {var,1064,'Sync'},
     {var,1064,'Sz'},
     {var,1064,'S'},
     {tuple,1064,
      [{atom,1064,log},
       {var,1064,'_'},
       {var,1064,'_'},
       {var,1064,'_'},
       {var,1064,'_'},
       {var,1064,'_'},
       {var,1064,'_'},
       {var,1064,'_'},
       {atom,1064,internal},
       {var,1064,'_'},
       {var,1064,'_'},
       {var,1064,'_'},
       {var,1064,'_'},
       {var,1064,'_'},
       {var,1064,'_'}]}],
    [],
    [{call,1066,
      {atom,1066,log_loop},
      [{var,1066,'S'},
       {cons,1066,{var,1066,'From'},{var,1066,'Pids'}},
       {cons,1066,{var,1066,'B'},{var,1066,'Bins'}},
       {var,1066,'Sync'},
       {op,1066,'+',
        {var,1066,'Sz'},
        {call,1066,{atom,1066,iolist_size},[{var,1066,'B'}]}}]}]},
   {clause,1067,
    [{tuple,1067,
      [{var,1067,'From'},{tuple,1067,[{atom,1067,blog},{var,1067,'B'}]}]},
     {var,1067,'Pids'},
     {var,1067,'Bins'},
     {var,1067,'Sync'},
     {var,1067,'Sz'},
     {var,1067,'S'},
     {var,1067,'_L'}],
    [],
    [{call,1068,
      {atom,1068,log_loop},
      [{var,1068,'S'},
       {cons,1068,{var,1068,'From'},{var,1068,'Pids'}},
       {cons,1068,{var,1068,'B'},{var,1068,'Bins'}},
       {var,1068,'Sync'},
       {op,1068,'+',
        {var,1068,'Sz'},
        {call,1068,{atom,1068,iolist_size},[{var,1068,'B'}]}}]}]},
   {clause,1069,
    [{tuple,1069,[{var,1069,'From'},{atom,1069,sync}]},
     {var,1069,'Pids'},
     {var,1069,'Bins'},
     {var,1069,'Sync'},
     {var,1069,'Sz'},
     {var,1069,'S'},
     {var,1069,'_L'}],
    [],
    [{call,1070,
      {atom,1070,log_loop},
      [{var,1070,'S'},
       {var,1070,'Pids'},
       {var,1070,'Bins'},
       {cons,1070,{var,1070,'From'},{var,1070,'Sync'}},
       {var,1070,'Sz'}]}]},
   {clause,1071,
    [{var,1071,'Message'},
     {var,1071,'Pids'},
     {var,1071,'Bins'},
     {var,1071,'Sync'},
     {var,1071,'_Sz'},
     {var,1071,'S'},
     {var,1071,'_L'}],
    [],
    [{match,1072,
      {var,1072,'NS'},
      {call,1072,
       {atom,1072,log_end},
       [{var,1072,'S'},
        {var,1072,'Pids'},
        {var,1072,'Bins'},
        {var,1072,'Sync'}]}},
     {call,1073,{atom,1073,handle},[{var,1073,'Message'},{var,1073,'NS'}]}]}]},
 {function,1075,log_end,4,
  [{clause,1075,
    [{var,1075,'S'},{nil,1075},{nil,1075},{var,1075,'Sync'}],
    [],
    [{call,1076,{atom,1076,log_end_sync},[{var,1076,'S'},{var,1076,'Sync'}]}]},
   {clause,1077,
    [{var,1077,'S'},{var,1077,'Pids'},{var,1077,'Bins'},{var,1077,'Sync'}],
    [],
    [{'case',1078,
      {call,1078,
       {atom,1078,do_log},
       [{call,1078,{atom,1078,get},[{atom,1078,log}]},
        {call,1078,{atom,1078,rflat},[{var,1078,'Bins'}]}]},
      [{clause,1079,
        [{var,1079,'N'}],
        [[{call,1079,{atom,1079,is_integer},[{var,1079,'N'}]}]],
        [{match,1080,
          {atom,1080,ok},
          {call,1080,{atom,1080,replies},[{var,1080,'Pids'},{atom,1080,ok}]}},
         {match,1081,
          {var,1081,'S1'},
          {call,1081,
           {remote,1081,{atom,1081,erlang},{atom,1081,setelement}},
           [{integer,1081,6},
            {call,1081,{atom,1081,state_ok},[{var,1081,'S'}]},
            {op,1081,'+',
             {call,1081,
              {remote,1081,{atom,1081,erlang},{atom,1081,element}},
              [{integer,1081,6},{var,1081,'S'}]},
             {var,1081,'N'}}]}},
         {call,1082,
          {atom,1082,log_end_sync},
          [{var,1082,'S1'},{var,1082,'Sync'}]}]},
       {clause,1083,
        [{tuple,1083,
          [{atom,1083,error},
           {tuple,1083,
            [{atom,1083,error},
             {tuple,1083,[{atom,1083,full},{var,1083,'_Name'}]}]},
           {var,1083,'N'}]}],
        [[{op,1083,'=:=',{var,1083,'Pids'},{nil,1083}}]],
        [{call,1084,
          {atom,1084,log_end_sync},
          [{call,1084,
            {atom,1084,state_ok},
            [{call,1084,
              {remote,1084,{atom,1084,erlang},{atom,1084,setelement}},
              [{integer,1084,6},
               {var,1084,'S'},
               {op,1084,'+',
                {call,1084,
                 {remote,1084,{atom,1084,erlang},{atom,1084,element}},
                 [{integer,1084,6},{var,1084,'S'}]},
                {var,1084,'N'}}]}]},
           {var,1084,'Sync'}]}]},
       {clause,1085,
        [{tuple,1085,[{atom,1085,error},{var,1085,'Error'},{var,1085,'N'}]}],
        [],
        [{match,1086,
          {atom,1086,ok},
          {call,1086,
           {atom,1086,replies},
           [{var,1086,'Pids'},{var,1086,'Error'}]}},
         {call,1087,
          {atom,1087,state_err},
          [{call,1087,
            {remote,1087,{atom,1087,erlang},{atom,1087,setelement}},
            [{integer,1087,6},
             {var,1087,'S'},
             {op,1087,'+',
              {call,1087,
               {remote,1087,{atom,1087,erlang},{atom,1087,element}},
               [{integer,1087,6},{var,1087,'S'}]},
              {var,1087,'N'}}]},
           {var,1087,'Error'}]}]}]}]}]},
 {function,1091,log_end_sync,2,
  [{clause,1091,[{var,1091,'S'},{nil,1091}],[],[{var,1092,'S'}]},
   {clause,1093,
    [{var,1093,'S'},{var,1093,'Sync'}],
    [],
    [{match,1094,
      {var,1094,'Res'},
      {call,1094,
       {atom,1094,do_sync},
       [{call,1094,{atom,1094,get},[{atom,1094,log}]}]}},
     {match,1095,
      {atom,1095,ok},
      {call,1095,{atom,1095,replies},[{var,1095,'Sync'},{var,1095,'Res'}]}},
     {call,1096,{atom,1096,state_err},[{var,1096,'S'},{var,1096,'Res'}]}]}]},
 {function,1099,rflat,1,
  [{clause,1099,
    [{match,1099,{cons,1099,{var,1099,'B'},{nil,1099}},{var,1099,'L'}}],
    [[{call,1099,{atom,1099,is_binary},[{var,1099,'B'}]}]],
    [{var,1099,'L'}]},
   {clause,1100,[{cons,1100,{var,1100,'B'},{nil,1100}}],[],[{var,1100,'B'}]},
   {clause,1101,
    [{var,1101,'B'}],
    [],
    [{call,1101,{atom,1101,rflat},[{var,1101,'B'},{nil,1101}]}]}]},
 {function,1103,rflat,2,
  [{clause,1103,
    [{cons,1103,{var,1103,'B'},{var,1103,'Bs'}},{var,1103,'L'}],
    [[{call,1103,{atom,1103,is_binary},[{var,1103,'B'}]}]],
    [{call,1104,
      {atom,1104,rflat},
      [{var,1104,'Bs'},{cons,1104,{var,1104,'B'},{var,1104,'L'}}]}]},
   {clause,1105,
    [{cons,1105,{var,1105,'B'},{var,1105,'Bs'}},{var,1105,'L'}],
    [],
    [{call,1106,
      {atom,1106,rflat},
      [{var,1106,'Bs'},{op,1106,'++',{var,1106,'B'},{var,1106,'L'}}]}]},
   {clause,1107,[{nil,1107},{var,1107,'L'}],[],[{var,1107,'L'}]}]},
 {function,1110,do_change_notify,3,
  [{clause,1110,
    [{var,1110,'L'},{var,1110,'Pid'},{var,1110,'Notify'}],
    [],
    [{'case',1111,
      {call,1111,{atom,1111,is_owner},[{var,1111,'Pid'},{var,1111,'L'}]},
      [{clause,1112,
        [{tuple,1112,[{atom,1112,true},{var,1112,'Notify'}]}],
        [],
        [{tuple,1113,[{atom,1113,ok},{var,1113,'L'}]}]},
       {clause,1114,
        [{tuple,1114,[{atom,1114,true},{var,1114,'_OldNotify'}]}],
        [[{op,1114,'=/=',{var,1114,'Notify'},{atom,1114,true}},
          {op,1114,'=/=',{var,1114,'Notify'},{atom,1114,false}}]],
        [{tuple,1115,
          [{atom,1115,error},
           {tuple,1115,[{atom,1115,badarg},{atom,1115,notify}]}]}]},
       {clause,1116,
        [{tuple,1116,[{atom,1116,true},{var,1116,'_OldNotify'}]}],
        [],
        [{match,1117,
          {var,1117,'Owners'},
          {call,1117,
           {remote,1117,{atom,1117,lists},{atom,1117,keydelete}},
           [{var,1117,'Pid'},
            {integer,1117,1},
            {call,1117,
             {remote,1117,{atom,1117,erlang},{atom,1117,element}},
             [{integer,1117,7},{var,1117,'L'}]}]}},
         {match,1118,
          {var,1118,'L1'},
          {call,1118,
           {remote,1118,{atom,1118,erlang},{atom,1118,setelement}},
           [{integer,1118,7},
            {var,1118,'L'},
            {cons,1118,
             {tuple,1118,[{var,1118,'Pid'},{var,1118,'Notify'}]},
             {var,1118,'Owners'}}]}},
         {tuple,1119,[{atom,1119,ok},{var,1119,'L1'}]}]},
       {clause,1120,
        [{atom,1120,false}],
        [],
        [{tuple,1121,
          [{atom,1121,error},
           {tuple,1121,[{atom,1121,not_owner},{var,1121,'Pid'}]}]}]}]}]}]},
 {function,1125,do_close,2,
  [{clause,1125,
    [{var,1125,'Pid'},{var,1125,'S'}],
    [],
    [{match,1126,{var,1126,'L'},{call,1126,{atom,1126,get},[{atom,1126,log}]}},
     {'case',1127,
      {call,1127,{atom,1127,is_owner},[{var,1127,'Pid'},{var,1127,'L'}]},
      [{clause,1128,
        [{tuple,1128,[{atom,1128,true},{var,1128,'_Notify'}]}],
        [],
        [{call,1129,
          {atom,1129,close_owner},
          [{var,1129,'Pid'},{var,1129,'L'},{var,1129,'S'}]}]},
       {clause,1130,
        [{atom,1130,false}],
        [],
        [{call,1131,
          {atom,1131,close_user},
          [{var,1131,'Pid'},{var,1131,'L'},{var,1131,'S'}]}]}]}]}]},
 {function,1135,close_owner,3,
  [{clause,1135,
    [{var,1135,'Pid'},{var,1135,'L'},{var,1135,'S'}],
    [],
    [{match,1136,
      {var,1136,'L1'},
      {call,1136,
       {remote,1136,{atom,1136,erlang},{atom,1136,setelement}},
       [{integer,1136,7},
        {var,1136,'L'},
        {call,1136,
         {remote,1136,{atom,1136,lists},{atom,1136,keydelete}},
         [{var,1136,'Pid'},
          {integer,1136,1},
          {call,1136,
           {remote,1136,{atom,1136,erlang},{atom,1136,element}},
           [{integer,1136,7},{var,1136,'L'}]}]}]}},
     {call,1137,{atom,1137,put},[{atom,1137,log},{var,1137,'L1'}]},
     {match,1138,
      {var,1138,'S2'},
      {call,1138,
       {atom,1138,do_unblock},
       [{var,1138,'Pid'},
        {call,1138,{atom,1138,get},[{atom,1138,log}]},
        {var,1138,'S'}]}},
     {call,1139,{atom,1139,unlink},[{var,1139,'Pid'}]},
     {call,1140,{atom,1140,do_close2},[{var,1140,'L1'},{var,1140,'S2'}]}]}]},
 {function,1143,close_user,3,
  [{clause,1143,
    [{var,1143,'Pid'},{var,1143,'L'},{var,1143,'S'}],
    [[{op,1143,'>',
       {call,1143,
        {remote,1143,{atom,1143,erlang},{atom,1143,element}},
        [{integer,1143,5},{var,1143,'L'}]},
       {integer,1143,0}}]],
    [{match,1144,
      {var,1144,'L1'},
      {call,1144,
       {remote,1144,{atom,1144,erlang},{atom,1144,setelement}},
       [{integer,1144,5},
        {var,1144,'L'},
        {op,1144,'-',
         {call,1144,
          {remote,1144,{atom,1144,erlang},{atom,1144,element}},
          [{integer,1144,5},{var,1144,'L'}]},
         {integer,1144,1}}]}},
     {call,1145,{atom,1145,put},[{atom,1145,log},{var,1145,'L1'}]},
     {match,1146,
      {var,1146,'S2'},
      {call,1146,
       {atom,1146,do_unblock},
       [{var,1146,'Pid'},
        {call,1146,{atom,1146,get},[{atom,1146,log}]},
        {var,1146,'S'}]}},
     {call,1147,{atom,1147,do_close2},[{var,1147,'L1'},{var,1147,'S2'}]}]},
   {clause,1148,
    [{var,1148,'_Pid'},{var,1148,'_L'},{var,1148,'S'}],
    [],
    [{tuple,1149,[{atom,1149,continue},{var,1149,'S'}]}]}]},
 {function,1151,do_close2,2,
  [{clause,1151,
    [{var,1151,'L'},{var,1151,'S'}],
    [[{op,1151,'=:=',
       {call,1151,
        {remote,1151,{atom,1151,erlang},{atom,1151,element}},
        [{integer,1151,5},{var,1151,'L'}]},
       {integer,1151,0}},
      {op,1151,'=:=',
       {call,1151,
        {remote,1151,{atom,1151,erlang},{atom,1151,element}},
        [{integer,1151,7},{var,1151,'L'}]},
       {nil,1151}}]],
    [{tuple,1152,[{atom,1152,stop},{var,1152,'S'}]}]},
   {clause,1153,
    [{var,1153,'_L'},{var,1153,'S'}],
    [],
    [{tuple,1154,[{atom,1154,continue},{var,1154,'S'}]}]}]},
 {function,1159,system_continue,3,
  [{clause,1159,
    [{var,1159,'_Parent'},{var,1159,'_'},{var,1159,'State'}],
    [],
    [{call,1160,{atom,1160,loop},[{var,1160,'State'}]}]}]},
 {function,1163,system_terminate,4,
  [{clause,1163,
    [{var,1163,'Reason'},
     {var,1163,'_Parent'},
     {var,1163,'_'},
     {var,1163,'State'}],
    [],
    [{match,1164,
      {var,1164,'_'},
      {call,1164,{atom,1164,do_stop},[{var,1164,'State'}]}},
     {call,1165,{atom,1165,exit},[{var,1165,'Reason'}]}]}]},
 {function,1170,system_code_change,4,
  [{clause,1170,
    [{var,1170,'State'},
     {var,1170,'_Module'},
     {var,1170,'_OldVsn'},
     {var,1170,'_Extra'}],
    [],
    [{tuple,1171,[{atom,1171,ok},{var,1171,'State'}]}]}]},
 {function,1178,do_exit,4,
  [{clause,1178,
    [{var,1178,'S'},
     {var,1178,'From'},
     {var,1178,'Message0'},
     {var,1178,'Reason'}],
    [],
    [{match,1179,
      {var,1179,'R'},
      {call,1179,{atom,1179,do_stop},[{var,1179,'S'}]}},
     {match,1180,
      {var,1180,'Message'},
      {'case',1180,
       {call,1180,
        {remote,1180,{atom,1180,erlang},{atom,1180,element}},
        [{integer,1180,9},{var,1180,'S'}]},
       [{clause,1181,
         [{var,1181,'Err'}],
         [[{op,1181,'=/=',{var,1181,'Err'},{atom,1181,ok}}]],
         [{var,1181,'Err'}]},
        {clause,1182,
         [{var,1182,'_'}],
         [[{op,1182,'=:=',{var,1182,'R'},{atom,1182,closed}}]],
         [{var,1182,'Message0'}]},
        {clause,1183,
         [{var,1183,'_'}],
         [[{op,1183,'=:=',{var,1183,'Message0'},{atom,1183,ok}}]],
         [{var,1183,'R'}]},
        {clause,1184,[{var,1184,'_'}],[],[{var,1184,'Message0'}]}]}},
     {match,1186,
      {var,1186,'_'},
      {call,1186,
       {remote,1186,{atom,1186,disk_log_server},{atom,1186,close}},
       [{call,1186,{atom,1186,self},[]}]}},
     {match,1187,
      {atom,1187,ok},
      {call,1187,
       {atom,1187,replies},
       [{var,1187,'From'},{var,1187,'Message'}]}},
     {atom,68,void},
     {call,1189,{atom,1189,exit},[{var,1189,'Reason'}]}]}]},
 {function,1192,do_fast_exit,3,
  [{clause,1192,
    [{var,1192,'S'},{var,1192,'Server'},{var,1192,'Message'}],
    [],
    [{match,1193,
      {var,1193,'_'},
      {call,1193,{atom,1193,do_stop},[{var,1193,'S'}]}},
     {op,1194,'!',
      {var,1194,'Server'},
      {tuple,1194,
       [{atom,1194,disk_log},
        {call,1194,{atom,1194,self},[]},
        {var,1194,'Message'}]}},
     {call,1195,{atom,1195,exit},[{atom,1195,normal}]}]}]},
 {function,1198,do_stop,1,
  [{clause,1198,
    [{var,1198,'S'}],
    [],
    [{call,1199,
      {atom,1199,proc_q},
      [{op,1199,'++',
        {call,1199,
         {remote,1199,{atom,1199,erlang},{atom,1199,element}},
         [{integer,1199,2},{var,1199,'S'}]},
        {call,1199,
         {remote,1199,{atom,1199,erlang},{atom,1199,element}},
         [{integer,1199,3},{var,1199,'S'}]}}]},
     {call,1200,
      {atom,1200,close_disk_log},
      [{call,1200,{atom,1200,get},[{atom,1200,log}]}]}]}]},
 {function,1202,proc_q,1,
  [{clause,1202,
    [{cons,1202,
      {tuple,1202,[{var,1202,'From'},{var,1202,'_R'}]},
      {var,1202,'Tail'}}],
    [[{call,1202,{atom,1202,is_pid},[{var,1202,'From'}]}]],
    [{op,1203,'!',
      {var,1203,'From'},
      {tuple,1203,
       [{atom,1203,disk_log},
        {call,1203,{atom,1203,self},[]},
        {tuple,1203,[{atom,1203,error},{atom,1203,disk_log_stopped}]}]}},
     {call,1204,{atom,1204,proc_q},[{var,1204,'Tail'}]}]},
   {clause,1205,
    [{cons,1205,{var,1205,'_'},{var,1205,'T'}}],
    [],
    [{call,1206,{atom,1206,proc_q},[{var,1206,'T'}]}]},
   {clause,1207,[{nil,1207}],[],[{atom,1208,ok}]}]},
 {function,1211,opening_pid,3,
  [{clause,1211,
    [{var,1211,'Pid'},{var,1211,'Notify'},{var,1211,'L'}],
    [],
    [{match,1212,
      {tuple,1212,[{atom,1212,ok},{var,1212,'L1'}]},
      {call,1212,
       {atom,1212,add_pid},
       [{var,1212,'Pid'},{var,1212,'Notify'},{var,1212,'L'}]}},
     {var,1213,'L1'}]}]},
 {function,1216,add_pid,3,
  [{clause,1216,
    [{var,1216,'Pid'},{var,1216,'Notify'},{var,1216,'L'}],
    [[{call,1216,{atom,1216,is_pid},[{var,1216,'Pid'}]}]],
    [{'case',1217,
      {call,1217,{atom,1217,is_owner},[{var,1217,'Pid'},{var,1217,'L'}]},
      [{clause,1218,
        [{atom,1218,false}],
        [],
        [{call,1219,{atom,1219,link},[{var,1219,'Pid'}]},
         {tuple,1220,
          [{atom,1220,ok},
           {call,1220,
            {remote,1220,{atom,1220,erlang},{atom,1220,setelement}},
            [{integer,1220,7},
             {var,1220,'L'},
             {cons,1220,
              {tuple,1220,[{var,1220,'Pid'},{var,1220,'Notify'}]},
              {call,1220,
               {remote,1220,{atom,1220,erlang},{atom,1220,element}},
               [{integer,1220,7},{var,1220,'L'}]}}]}]}]},
       {clause,1221,
        [{tuple,1221,[{atom,1221,true},{var,1221,'Notify'}]}],
        [],
        [{tuple,1223,[{atom,1223,ok},{var,1223,'L'}]}]},
       {clause,1224,
        [{tuple,1224,[{atom,1224,true},{var,1224,'CurNotify'}]}],
        [[{op,1224,'=/=',{var,1224,'Notify'},{var,1224,'CurNotify'}}]],
        [{tuple,1225,
          [{atom,1225,error},
           {tuple,1225,
            [{atom,1225,arg_mismatch},
             {atom,1225,notify},
             {var,1225,'CurNotify'},
             {var,1225,'Notify'}]}]}]}]}]},
   {clause,1227,
    [{var,1227,'_NotAPid'},{var,1227,'_Notify'},{var,1227,'L'}],
    [],
    [{tuple,1228,
      [{atom,1228,ok},
       {call,1228,
        {remote,1228,{atom,1228,erlang},{atom,1228,setelement}},
        [{integer,1228,5},
         {var,1228,'L'},
         {op,1228,'+',
          {call,1228,
           {remote,1228,{atom,1228,erlang},{atom,1228,element}},
           [{integer,1228,5},{var,1228,'L'}]},
          {integer,1228,1}}]}]}]}]},
 {function,1230,unblock_pid,1,
  [{clause,1230,
    [{var,1230,'L'}],
    [[{op,1230,'=:=',
       {call,1230,
        {remote,1230,{atom,1230,erlang},{atom,1230,element}},
        [{integer,1230,4},{var,1230,'L'}]},
       {atom,1230,none}}]],
    [{atom,1231,ok}]},
   {clause,1232,
    [{var,1232,'L'}],
    [],
    [{'case',1233,
      {call,1233,
       {atom,1233,is_owner},
       [{call,1233,
         {remote,1233,{atom,1233,erlang},{atom,1233,element}},
         [{integer,1233,4},{var,1233,'L'}]},
        {var,1233,'L'}]},
      [{clause,1234,
        [{tuple,1234,[{atom,1234,true},{var,1234,'_Notify'}]}],
        [],
        [{atom,1235,ok}]},
       {clause,1236,
        [{atom,1236,false}],
        [],
        [{call,1237,
          {atom,1237,unlink},
          [{call,1237,
            {remote,1237,{atom,1237,erlang},{atom,1237,element}},
            [{integer,1237,4},{var,1237,'L'}]}]}]}]}]}]},
 {function,1241,is_owner,2,
  [{clause,1241,
    [{var,1241,'Pid'},{var,1241,'L'}],
    [],
    [{'case',1242,
      {call,1242,
       {remote,1242,{atom,1242,lists},{atom,1242,keysearch}},
       [{var,1242,'Pid'},
        {integer,1242,1},
        {call,1242,
         {remote,1242,{atom,1242,erlang},{atom,1242,element}},
         [{integer,1242,7},{var,1242,'L'}]}]},
      [{clause,1243,
        [{tuple,1243,
          [{atom,1243,value},
           {tuple,1243,[{var,1243,'_Pid'},{var,1243,'Notify'}]}]}],
        [],
        [{tuple,1244,[{atom,1244,true},{var,1244,'Notify'}]}]},
       {clause,1245,[{atom,1245,false}],[],[{atom,1246,false}]}]}]}]},
 {function,1250,rename_file,3,
  [{clause,1250,
    [{var,1250,'File'},{var,1250,'NewFile'},{atom,1250,halt}],
    [],
    [{'case',1251,
      {call,1251,
       {remote,1251,{atom,1251,file},{atom,1251,rename}},
       [{var,1251,'File'},{var,1251,'NewFile'}]},
      [{clause,1252,[{atom,1252,ok}],[],[{atom,1253,ok}]},
       {clause,1254,
        [{var,1254,'Else'}],
        [],
        [{call,1255,
          {atom,1255,file_error},
          [{var,1255,'NewFile'},{var,1255,'Else'}]}]}]}]},
   {clause,1257,
    [{var,1257,'File'},{var,1257,'NewFile'},{atom,1257,wrap}],
    [],
    [{call,1258,
      {atom,1258,rename_file},
      [{call,1258,{atom,1258,wrap_file_extensions},[{var,1258,'File'}]},
       {var,1258,'File'},
       {var,1258,'NewFile'},
       {atom,1258,ok}]}]}]},
 {function,1260,rename_file,4,
  [{clause,1260,
    [{cons,1260,{var,1260,'Ext'},{var,1260,'Exts'}},
     {var,1260,'File'},
     {var,1260,'NewFile0'},
     {var,1260,'Res'}],
    [],
    [{match,1261,
      {var,1261,'NewFile'},
      {call,1261,
       {atom,1261,add_ext},
       [{var,1261,'NewFile0'},{var,1261,'Ext'}]}},
     {match,1262,
      {var,1262,'NRes'},
      {'case',1262,
       {call,1262,
        {remote,1262,{atom,1262,file},{atom,1262,rename}},
        [{call,1262,{atom,1262,add_ext},[{var,1262,'File'},{var,1262,'Ext'}]},
         {var,1262,'NewFile'}]},
       [{clause,1263,[{atom,1263,ok}],[],[{var,1264,'Res'}]},
        {clause,1265,
         [{var,1265,'Else'}],
         [],
         [{call,1266,
           {atom,1266,file_error},
           [{var,1266,'NewFile'},{var,1266,'Else'}]}]}]}},
     {call,1268,
      {atom,1268,rename_file},
      [{var,1268,'Exts'},
       {var,1268,'File'},
       {var,1268,'NewFile0'},
       {var,1268,'NRes'}]}]},
   {clause,1269,
    [{nil,1269},{var,1269,'_File'},{var,1269,'_NewFiles'},{var,1269,'Res'}],
    [],
    [{var,1269,'Res'}]}]},
 {function,1271,file_error,2,
  [{clause,1271,
    [{var,1271,'FileName'},
     {tuple,1271,[{atom,1271,error},{var,1271,'Error'}]}],
    [],
    [{tuple,1272,
      [{atom,1272,error},
       {tuple,1272,
        [{atom,1272,file_error},
         {var,1272,'FileName'},
         {var,1272,'Error'}]}]}]}]},
 {function,1276,compare_arg,4,
  [{clause,1276,
    [{nil,1276},{var,1276,'_A'},{atom,1276,none},{var,1276,'_OrigHead'}],
    [],
    [{atom,1278,ok}]},
   {clause,1279,
    [{nil,1279},{var,1279,'_A'},{var,1279,'Head'},{var,1279,'OrigHead'}],
    [[{op,1279,'=/=',{var,1279,'Head'},{var,1279,'OrigHead'}}]],
    [{tuple,1280,
      [{atom,1280,error},
       {tuple,1280,
        [{atom,1280,arg_mismatch},
         {atom,1280,head},
         {var,1280,'OrigHead'},
         {var,1280,'Head'}]}]}]},
   {clause,1281,
    [{nil,1281},{var,1281,'_A'},{var,1281,'_Head'},{var,1281,'_OrigHead'}],
    [],
    [{atom,1282,ok}]},
   {clause,1283,
    [{cons,1283,
      {tuple,1283,[{var,1283,'Attr'},{var,1283,'Val'}]},
      {var,1283,'Tail'}},
     {var,1283,'A'},
     {var,1283,'Head'},
     {var,1283,'OrigHead'}],
    [],
    [{'case',1284,
      {call,1284,
       {atom,1284,compare_arg},
       [{var,1284,'Attr'},{var,1284,'Val'},{var,1284,'A'}]},
      [{clause,1285,
        [{tuple,1285,[{atom,1285,not_ok},{var,1285,'OrigVal'}]}],
        [],
        [{tuple,1286,
          [{atom,1286,error},
           {tuple,1286,
            [{atom,1286,arg_mismatch},
             {var,1286,'Attr'},
             {var,1286,'OrigVal'},
             {var,1286,'Val'}]}]}]},
       {clause,1287,
        [{atom,1287,ok}],
        [],
        [{call,1288,
          {atom,1288,compare_arg},
          [{var,1288,'Tail'},
           {var,1288,'A'},
           {var,1288,'Head'},
           {var,1288,'OrigHead'}]}]},
       {clause,1289,[{var,1289,'Error'}],[],[{var,1290,'Error'}]}]}]}]},
 {function,1295,compare_arg,3,
  [{clause,1295,
    [{atom,1295,file},{var,1295,'F'},{var,1295,'A'}],
    [[{op,1295,'=/=',
       {var,1295,'F'},
       {call,1295,
        {remote,1295,{atom,1295,erlang},{atom,1295,element}},
        [{integer,1295,4},{var,1295,'A'}]}}]],
    [{tuple,1296,
      [{atom,1296,error},
       {tuple,1296,
        [{atom,1296,name_already_open},
         {call,1296,
          {remote,1296,{atom,1296,erlang},{atom,1296,element}},
          [{integer,1296,2},{var,1296,'A'}]}]}]}]},
   {clause,1297,
    [{atom,1297,mode},{atom,1297,read_only},{var,1297,'A'}],
    [[{op,1297,'=:=',
       {call,1297,
        {remote,1297,{atom,1297,erlang},{atom,1297,element}},
        [{integer,1297,12},{var,1297,'A'}]},
       {atom,1297,read_write}}]],
    [{tuple,1298,
      [{atom,1298,error},
       {tuple,1298,
        [{atom,1298,open_read_write},
         {call,1298,
          {remote,1298,{atom,1298,erlang},{atom,1298,element}},
          [{integer,1298,2},{var,1298,'A'}]}]}]}]},
   {clause,1299,
    [{atom,1299,mode},{atom,1299,read_write},{var,1299,'A'}],
    [[{op,1299,'=:=',
       {call,1299,
        {remote,1299,{atom,1299,erlang},{atom,1299,element}},
        [{integer,1299,12},{var,1299,'A'}]},
       {atom,1299,read_only}}]],
    [{tuple,1300,
      [{atom,1300,error},
       {tuple,1300,
        [{atom,1300,open_read_only},
         {call,1300,
          {remote,1300,{atom,1300,erlang},{atom,1300,element}},
          [{integer,1300,2},{var,1300,'A'}]}]}]}]},
   {clause,1301,
    [{atom,1301,type},{var,1301,'T'},{var,1301,'A'}],
    [[{op,1301,'=/=',
       {var,1301,'T'},
       {call,1301,
        {remote,1301,{atom,1301,erlang},{atom,1301,element}},
        [{integer,1301,7},{var,1301,'A'}]}}]],
    [{tuple,1302,
      [{atom,1302,not_ok},
       {call,1302,
        {remote,1302,{atom,1302,erlang},{atom,1302,element}},
        [{integer,1302,7},{var,1302,'A'}]}]}]},
   {clause,1303,
    [{atom,1303,format},{var,1303,'F'},{var,1303,'A'}],
    [[{op,1303,'=/=',
       {var,1303,'F'},
       {call,1303,
        {remote,1303,{atom,1303,erlang},{atom,1303,element}},
        [{integer,1303,9},{var,1303,'A'}]}}]],
    [{tuple,1304,
      [{atom,1304,not_ok},
       {call,1304,
        {remote,1304,{atom,1304,erlang},{atom,1304,element}},
        [{integer,1304,9},{var,1304,'A'}]}]}]},
   {clause,1305,
    [{atom,1305,repair},{var,1305,'R'},{var,1305,'A'}],
    [[{op,1305,'=/=',
       {var,1305,'R'},
       {call,1305,
        {remote,1305,{atom,1305,erlang},{atom,1305,element}},
        [{integer,1305,5},{var,1305,'A'}]}}]],
    [{tuple,1307,
      [{atom,1307,not_ok},
       {call,1307,
        {remote,1307,{atom,1307,erlang},{atom,1307,element}},
        [{integer,1307,5},{var,1307,'A'}]}]}]},
   {clause,1308,
    [{var,1308,'_Attr'},{var,1308,'_Val'},{var,1308,'_A'}],
    [],
    [{atom,1309,ok}]}]},
 {function,1312,do_open,1,
  [{clause,1312,
    [{var,1312,'A'}],
    [],
    [{match,1313,
      {var,1313,'L'},
      {tuple,1313,
       [{atom,1313,log},
        {atom,149,ok},
        {call,1313,
         {remote,1313,{atom,1313,erlang},{atom,1313,element}},
         [{integer,1313,2},{var,1313,'A'}]},
        {atom,151,none},
        {integer,152,0},
        {call,1314,
         {remote,1314,{atom,1314,erlang},{atom,1314,element}},
         [{integer,1314,4},{var,1314,'A'}]},
        {nil,154},
        {atom,155,halt},
        {atom,156,internal},
        {atom,1313,undefined},
        {call,1316,
         {atom,1316,mk_head},
         [{call,1316,
           {remote,1316,{atom,1316,erlang},{atom,1316,element}},
           [{integer,1316,11},{var,1316,'A'}]},
          {call,1316,
           {remote,1316,{atom,1316,erlang},{atom,1316,element}},
           [{integer,1316,9},{var,1316,'A'}]}]},
        {call,1317,
         {remote,1317,{atom,1317,erlang},{atom,1317,element}},
         [{integer,1317,12},{var,1317,'A'}]},
        {call,1315,
         {remote,1315,{atom,1315,erlang},{atom,1315,element}},
         [{integer,1315,6},{var,1315,'A'}]},
        {atom,1313,undefined},
        {call,1318,
         {remote,1318,{atom,1318,erlang},{atom,1318,element}},
         [{integer,1318,3},{var,1318,'A'}]}]}},
     {call,1319,{atom,1319,do_open2},[{var,1319,'L'},{var,1319,'A'}]}]}]},
 {function,1321,mk_head,2,
  [{clause,1321,
    [{tuple,1321,[{atom,1321,head},{var,1321,'Term'}]},{atom,1321,internal}],
    [],
    [{tuple,1321,
      [{atom,1321,ok},
       {call,1321,{atom,1321,term_to_binary},[{var,1321,'Term'}]}]}]},
   {clause,1322,
    [{tuple,1322,[{atom,1322,head},{var,1322,'Bytes'}]},{atom,1322,external}],
    [],
    [{tuple,1322,
      [{atom,1322,ok},
       {call,1322,{atom,1322,check_bytes},[{var,1322,'Bytes'}]}]}]},
   {clause,1323,[{var,1323,'H'},{var,1323,'_'}],[],[{var,1323,'H'}]}]},
 {function,1325,terms2bins,1,
  [{clause,1325,
    [{cons,1325,{var,1325,'T'},{var,1325,'Ts'}}],
    [],
    [{cons,1326,
      {call,1326,{atom,1326,term_to_binary},[{var,1326,'T'}]},
      {call,1326,{atom,1326,terms2bins},[{var,1326,'Ts'}]}}]},
   {clause,1327,[{nil,1327}],[],[{nil,1328}]}]},
 {function,1330,check_bytes_list,2,
  [{clause,1330,
    [{cons,1330,{var,1330,'B'},{var,1330,'Bs'}},{var,1330,'Bs0'}],
    [[{call,1330,{atom,1330,is_binary},[{var,1330,'B'}]}]],
    [{call,1331,
      {atom,1331,check_bytes_list},
      [{var,1331,'Bs'},{var,1331,'Bs0'}]}]},
   {clause,1332,[{nil,1332},{var,1332,'Bs0'}],[],[{var,1333,'Bs0'}]},
   {clause,1334,
    [{var,1334,'_'},{var,1334,'Bs0'}],
    [],
    [{call,1335,{atom,1335,check_bytes_list},[{var,1335,'Bs0'}]}]}]},
 {function,1337,check_bytes_list,1,
  [{clause,1337,
    [{cons,1337,{var,1337,'B'},{var,1337,'Bs'}}],
    [[{call,1337,{atom,1337,is_binary},[{var,1337,'B'}]}]],
    [{cons,1338,
      {var,1338,'B'},
      {call,1338,{atom,1338,check_bytes_list},[{var,1338,'Bs'}]}}]},
   {clause,1339,
    [{cons,1339,{var,1339,'B'},{var,1339,'Bs'}}],
    [],
    [{cons,1340,
      {call,1340,{atom,1340,list_to_binary},[{var,1340,'B'}]},
      {call,1340,{atom,1340,check_bytes_list},[{var,1340,'Bs'}]}}]},
   {clause,1341,[{nil,1341}],[],[{nil,1342}]}]},
 {function,1344,check_bytes,1,
  [{clause,1344,
    [{var,1344,'Binary'}],
    [[{call,1344,{atom,1344,is_binary},[{var,1344,'Binary'}]}]],
    [{var,1345,'Binary'}]},
   {clause,1346,
    [{var,1346,'Bytes'}],
    [],
    [{call,1347,{atom,1347,list_to_binary},[{var,1347,'Bytes'}]}]}]},
 {function,1353,do_change_size,2,
  [{clause,1353,
    [{var,1353,'L'},{var,1353,'NewSize'}],
    [[{op,1353,'=:=',
       {call,1353,
        {remote,1353,{atom,1353,erlang},{atom,1353,element}},
        [{integer,1353,8},{var,1353,'L'}]},
       {atom,1353,halt}}]],
    [{match,1354,
      {var,1354,'Halt'},
      {call,1354,
       {remote,1354,{atom,1354,erlang},{atom,1354,element}},
       [{integer,1354,14},{var,1354,'L'}]}},
     {match,1355,
      {var,1355,'CurB'},
      {call,1355,
       {remote,1355,{atom,1355,erlang},{atom,1355,element}},
       [{integer,1355,3},{var,1355,'Halt'}]}},
     {match,1356,
      {var,1356,'NewLog'},
      {call,1356,
       {remote,1356,{atom,1356,erlang},{atom,1356,setelement}},
       [{integer,1356,14},
        {var,1356,'L'},
        {call,1356,
         {remote,1356,{atom,1356,erlang},{atom,1356,setelement}},
         [{integer,1356,4},{var,1356,'Halt'},{var,1356,'NewSize'}]}]}},
     {'if',1357,
      [{clause,1358,[],
        [[{op,1358,'=:=',{var,1358,'NewSize'},{atom,1358,infinity}}]],
        [{call,1359,{atom,1359,erase},[{atom,1359,is_full}]},
         {call,1360,{atom,1360,put},[{atom,1360,log},{var,1360,'NewLog'}]},
         {atom,1361,ok}]},
       {clause,1362,[],
        [[{op,1362,'=<',{var,1362,'CurB'},{var,1362,'NewSize'}}]],
        [{call,1363,{atom,1363,erase},[{atom,1363,is_full}]},
         {call,1364,{atom,1364,put},[{atom,1364,log},{var,1364,'NewLog'}]},
         {atom,1365,ok}]},
       {clause,1366,[],
        [[{atom,1366,true}]],
        [{tuple,1367,[{atom,1367,big},{var,1367,'CurB'}]}]}]}]},
   {clause,1369,
    [{var,1369,'L'},{var,1369,'NewSize'}],
    [[{op,1369,'=:=',
       {call,1369,
        {remote,1369,{atom,1369,erlang},{atom,1369,element}},
        [{integer,1369,8},{var,1369,'L'}]},
       {atom,1369,wrap}}]],
    [{match,1370,
      {tuple,1370,
       [{atom,1370,log},
        {var,1370,'_'},
        {var,1370,'_'},
        {var,1370,'_'},
        {var,1370,'_'},
        {var,1370,'_'},
        {var,1370,'_'},
        {var,1370,'_'},
        {var,1370,'_'},
        {var,1370,'_'},
        {var,1370,'_'},
        {var,1370,'_'},
        {var,1370,'_'},
        {var,1370,'Extra'},
        {var,1370,'Version'}]},
      {var,1370,'L'}},
     {match,1371,
      {tuple,1371,[{atom,1371,ok},{var,1371,'Handle'}]},
      {call,1371,
       {remote,1371,{atom,1371,disk_log_1},{atom,1371,change_size_wrap}},
       [{var,1371,'Extra'},{var,1371,'NewSize'},{var,1371,'Version'}]}},
     {call,1372,{atom,1372,erase},[{atom,1372,is_full}]},
     {call,1373,
      {atom,1373,put},
      [{atom,1373,log},
       {call,1373,
        {remote,1373,{atom,1373,erlang},{atom,1373,setelement}},
        [{integer,1373,14},{var,1373,'L'},{var,1373,'Handle'}]}]},
     {atom,1374,ok}]}]},
 {function,1377,check_head,2,
  [{clause,1377,
    [{tuple,1377,[{atom,1377,head},{atom,1377,none}]},{var,1377,'_Format'}],
    [],
    [{tuple,1378,[{atom,1378,ok},{atom,1378,none}]}]},
   {clause,1379,
    [{tuple,1379,
      [{atom,1379,head_func},
       {tuple,1379,[{var,1379,'M'},{var,1379,'F'},{var,1379,'A'}]}]},
     {var,1379,'_Format'}],
    [[{call,1379,{atom,1379,is_atom},[{var,1379,'M'}]},
      {call,1380,{atom,1380,is_atom},[{var,1380,'F'}]},
      {call,1381,{atom,1381,is_list},[{var,1381,'A'}]}]],
    [{tuple,1382,
      [{atom,1382,ok},
       {tuple,1382,[{var,1382,'M'},{var,1382,'F'},{var,1382,'A'}]}]}]},
   {clause,1383,
    [{tuple,1383,[{atom,1383,head},{var,1383,'Head'}]},{atom,1383,external}],
    [],
    [{'case',1384,
      {'catch',1384,{call,1384,{atom,1384,check_bytes},[{var,1384,'Head'}]}},
      [{clause,1385,
        [{tuple,1385,[{atom,1385,'EXIT'},{var,1385,'_'}]}],
        [],
        [{tuple,1386,
          [{atom,1386,error},
           {tuple,1386,[{atom,1386,badarg},{atom,1386,head}]}]}]},
       {clause,1387,
        [{var,1387,'_'}],
        [],
        [{tuple,1388,
          [{atom,1388,ok},
           {tuple,1388,[{atom,1388,head},{var,1388,'Head'}]}]}]}]}]},
   {clause,1390,
    [{tuple,1390,[{atom,1390,head},{var,1390,'Term'}]},{atom,1390,internal}],
    [],
    [{tuple,1391,
      [{atom,1391,ok},{tuple,1391,[{atom,1391,head},{var,1391,'Term'}]}]}]},
   {clause,1392,
    [{var,1392,'_Head'},{var,1392,'_Format'}],
    [],
    [{tuple,1393,
      [{atom,1393,error},
       {tuple,1393,[{atom,1393,badarg},{atom,1393,head}]}]}]}]},
 {function,1395,check_size,2,
  [{clause,1395,
    [{atom,1395,wrap},
     {tuple,1395,[{var,1395,'NewMaxB'},{var,1395,'NewMaxF'}]}],
    [[{call,1396,{atom,1396,is_integer},[{var,1396,'NewMaxB'}]},
      {call,1396,{atom,1396,is_integer},[{var,1396,'NewMaxF'}]},
      {op,1397,'>',{var,1397,'NewMaxB'},{integer,1397,0}},
      {op,1397,'=<',
       {var,1397,'NewMaxB'},
       {op,40,'-',
        {op,40,'bsl',{integer,40,1},{integer,40,64}},
        {integer,40,1}}},
      {op,1397,'>',{var,1397,'NewMaxF'},{integer,1397,0}},
      {op,1397,'<',{var,1397,'NewMaxF'},{integer,39,65000}}]],
    [{atom,1398,ok}]},
   {clause,1399,
    [{atom,1399,halt},{var,1399,'NewSize'}],
    [[{call,1399,{atom,1399,is_integer},[{var,1399,'NewSize'}]},
      {op,1399,'>',{var,1399,'NewSize'},{integer,1399,0}}]],
    [{atom,1400,ok}]},
   {clause,1401,[{atom,1401,halt},{atom,1401,infinity}],[],[{atom,1402,ok}]},
   {clause,1403,[{var,1403,'_'},{var,1403,'_'}],[],[{atom,1404,not_ok}]}]},
 {function,1410,do_inc_wrap_file,1,
  [{clause,1410,
    [{var,1410,'L'}],
    [],
    [{match,1411,
      {tuple,1411,
       [{atom,1411,log},
        {var,1411,'_'},
        {var,1411,'_'},
        {var,1411,'_'},
        {var,1411,'_'},
        {var,1411,'_'},
        {var,1411,'_'},
        {var,1411,'_'},
        {var,1411,'Format'},
        {var,1411,'_'},
        {var,1411,'_'},
        {var,1411,'_'},
        {var,1411,'_'},
        {var,1411,'Handle'},
        {var,1411,'_'}]},
      {var,1411,'L'}},
     {'case',1412,
      {var,1412,'Format'},
      [{clause,1413,
        [{atom,1413,internal}],
        [],
        [{'case',1414,
          {call,1414,
           {remote,1414,{atom,1414,disk_log_1},{atom,1414,mf_int_inc}},
           [{var,1414,'Handle'},
            {call,1414,
             {remote,1414,{atom,1414,erlang},{atom,1414,element}},
             [{integer,1414,11},{var,1414,'L'}]}]},
          [{clause,1415,
            [{tuple,1415,
              [{atom,1415,ok},{var,1415,'Handle2'},{var,1415,'Lost'}]}],
            [],
            [{tuple,1416,
              [{atom,1416,ok},
               {call,1416,
                {remote,1416,{atom,1416,erlang},{atom,1416,setelement}},
                [{integer,1416,14},{var,1416,'L'},{var,1416,'Handle2'}]},
               {var,1416,'Lost'}]}]},
           {clause,1417,
            [{tuple,1417,
              [{atom,1417,error},{var,1417,'Error'},{var,1417,'Handle2'}]}],
            [],
            [{tuple,1418,
              [{atom,1418,error},
               {var,1418,'Error'},
               {call,1418,
                {remote,1418,{atom,1418,erlang},{atom,1418,setelement}},
                [{integer,1418,14},
                 {var,1418,'L'},
                 {var,1418,'Handle2'}]}]}]}]}]},
       {clause,1420,
        [{atom,1420,external}],
        [],
        [{'case',1421,
          {call,1421,
           {remote,1421,{atom,1421,disk_log_1},{atom,1421,mf_ext_inc}},
           [{var,1421,'Handle'},
            {call,1421,
             {remote,1421,{atom,1421,erlang},{atom,1421,element}},
             [{integer,1421,11},{var,1421,'L'}]}]},
          [{clause,1422,
            [{tuple,1422,
              [{atom,1422,ok},{var,1422,'Handle2'},{var,1422,'Lost'}]}],
            [],
            [{tuple,1423,
              [{atom,1423,ok},
               {call,1423,
                {remote,1423,{atom,1423,erlang},{atom,1423,setelement}},
                [{integer,1423,14},{var,1423,'L'},{var,1423,'Handle2'}]},
               {var,1423,'Lost'}]}]},
           {clause,1424,
            [{tuple,1424,
              [{atom,1424,error},{var,1424,'Error'},{var,1424,'Handle2'}]}],
            [],
            [{tuple,1425,
              [{atom,1425,error},
               {var,1425,'Error'},
               {call,1425,
                {remote,1425,{atom,1425,erlang},{atom,1425,setelement}},
                [{integer,1425,14},
                 {var,1425,'L'},
                 {var,1425,'Handle2'}]}]}]}]}]}]}]}]},
 {function,1435,do_open2,2,
  [{clause,1435,
    [{var,1435,'L'},
     {tuple,1435,
      [{atom,1435,arg},
       {var,1435,'Name'},
       {var,1435,'_'},
       {var,1436,'FName'},
       {var,1436,'Repair'},
       {var,1436,'Size'},
       {atom,1435,halt},
       {var,1435,'_'},
       {atom,1435,internal},
       {var,1435,'_'},
       {var,1435,'_'},
       {var,1436,'Mode'},
       {var,1435,'_'},
       {var,1435,'_'}]}],
    [],
    [{'case',1437,
      {'catch',1437,
       {call,1437,
        {remote,1437,{atom,1437,disk_log_1},{atom,1437,int_open}},
        [{var,1437,'FName'},
         {var,1437,'Repair'},
         {var,1437,'Mode'},
         {call,1437,
          {remote,1437,{atom,1437,erlang},{atom,1437,element}},
          [{integer,1437,11},{var,1437,'L'}]}]}},
      [{clause,1438,
        [{tuple,1438,
          [{atom,1438,ok},
           {tuple,1438,
            [{var,1438,'_Alloc'},
             {var,1438,'FdC'},
             {tuple,1438,[{var,1438,'NoItems'},{var,1438,'_NoBytes'}]},
             {var,1438,'FileSize'}]}]}],
        [],
        [{match,1439,
          {var,1439,'Halt'},
          {tuple,1439,
           [{atom,1439,halt},
            {var,1439,'FdC'},
            {var,1439,'FileSize'},
            {var,1439,'Size'}]}},
         {tuple,1440,
          [{atom,1440,ok},
           {tuple,1440,[{atom,1440,ok},{var,1440,'Name'}]},
           {call,1440,
            {remote,1440,{atom,1440,erlang},{atom,1440,setelement}},
            [{integer,1440,14},
             {call,1440,
              {remote,1440,{atom,1440,erlang},{atom,1440,setelement}},
              [{integer,1440,10},{var,1440,'L'},{atom,1440,halt_int}]},
             {var,1440,'Halt'}]},
           {var,1441,'NoItems'}]}]},
       {clause,1442,
        [{tuple,1442,
          [{atom,1442,repaired},
           {var,1442,'FdC'},
           {var,1442,'Rec'},
           {var,1442,'Bad'},
           {var,1442,'FileSize'}]}],
        [],
        [{match,1443,
          {var,1443,'Halt'},
          {tuple,1443,
           [{atom,1443,halt},
            {var,1443,'FdC'},
            {var,1443,'FileSize'},
            {var,1443,'Size'}]}},
         {tuple,1444,
          [{atom,1444,ok},
           {tuple,1444,
            [{atom,1444,repaired},
             {var,1444,'Name'},
             {tuple,1444,[{atom,1444,recovered},{var,1444,'Rec'}]},
             {tuple,1444,[{atom,1444,badbytes},{var,1444,'Bad'}]}]},
           {call,1445,
            {remote,1445,{atom,1445,erlang},{atom,1445,setelement}},
            [{integer,1445,14},
             {call,1445,
              {remote,1445,{atom,1445,erlang},{atom,1445,setelement}},
              [{integer,1445,10},{var,1445,'L'},{atom,1445,halt_int}]},
             {var,1445,'Halt'}]},
           {var,1446,'Rec'}]}]},
       {clause,1447,[{var,1447,'Error'}],[],[{var,1448,'Error'}]}]}]},
   {clause,1450,
    [{var,1450,'L'},
     {tuple,1450,
      [{atom,1450,arg},
       {var,1451,'Name'},
       {var,1452,'V'},
       {var,1451,'FName'},
       {var,1451,'Repair'},
       {tuple,1450,[{var,1450,'MaxB'},{var,1450,'MaxF'}]},
       {atom,1450,wrap},
       {var,1450,'_'},
       {atom,1450,internal},
       {var,1450,'_'},
       {var,1450,'_'},
       {var,1451,'Mode'},
       {var,1450,'_'},
       {var,1450,'_'}]}],
    [],
    [{'case',1453,
      {'catch',1453,
       {call,1454,
        {remote,1454,{atom,1454,disk_log_1},{atom,1454,mf_int_open}},
        [{var,1454,'FName'},
         {var,1454,'MaxB'},
         {var,1454,'MaxF'},
         {var,1454,'Repair'},
         {var,1454,'Mode'},
         {call,1454,
          {remote,1454,{atom,1454,erlang},{atom,1454,element}},
          [{integer,1454,11},{var,1454,'L'}]},
         {var,1454,'V'}]}},
      [{clause,1455,
        [{tuple,1455,[{atom,1455,ok},{var,1455,'Handle'},{var,1455,'Cnt'}]}],
        [],
        [{tuple,1456,
          [{atom,1456,ok},
           {tuple,1456,[{atom,1456,ok},{var,1456,'Name'}]},
           {call,1456,
            {remote,1456,{atom,1456,erlang},{atom,1456,setelement}},
            [{integer,1456,14},
             {call,1456,
              {remote,1456,{atom,1456,erlang},{atom,1456,setelement}},
              [{integer,1456,10},
               {call,1456,
                {remote,1456,{atom,1456,erlang},{atom,1456,setelement}},
                [{integer,1456,8},{var,1456,'L'},{atom,1456,wrap}]},
               {atom,1457,wrap_int}]},
             {var,1458,'Handle'}]},
           {var,1458,'Cnt'}]}]},
       {clause,1459,
        [{tuple,1459,
          [{atom,1459,repaired},
           {var,1459,'Handle'},
           {var,1459,'Rec'},
           {var,1459,'Bad'},
           {var,1459,'Cnt'}]}],
        [],
        [{tuple,1460,
          [{atom,1460,ok},
           {tuple,1460,
            [{atom,1460,repaired},
             {var,1460,'Name'},
             {tuple,1460,[{atom,1460,recovered},{var,1460,'Rec'}]},
             {tuple,1460,[{atom,1460,badbytes},{var,1460,'Bad'}]}]},
           {call,1461,
            {remote,1461,{atom,1461,erlang},{atom,1461,setelement}},
            [{integer,1461,14},
             {call,1461,
              {remote,1461,{atom,1461,erlang},{atom,1461,setelement}},
              [{integer,1461,10},
               {call,1461,
                {remote,1461,{atom,1461,erlang},{atom,1461,setelement}},
                [{integer,1461,8},{var,1461,'L'},{atom,1461,wrap}]},
               {atom,1461,wrap_int}]},
             {var,1461,'Handle'}]},
           {var,1461,'Cnt'}]}]},
       {clause,1462,[{var,1462,'Error'}],[],[{var,1463,'Error'}]}]}]},
   {clause,1465,
    [{var,1465,'L'},
     {tuple,1465,
      [{atom,1465,arg},
       {var,1465,'Name'},
       {var,1465,'_'},
       {var,1465,'FName'},
       {var,1466,'Repair'},
       {var,1466,'Size'},
       {atom,1465,halt},
       {var,1465,'_'},
       {atom,1465,external},
       {var,1465,'_'},
       {var,1465,'_'},
       {var,1466,'Mode'},
       {var,1465,'_'},
       {var,1465,'_'}]}],
    [],
    [{'case',1467,
      {'catch',1467,
       {call,1467,
        {remote,1467,{atom,1467,disk_log_1},{atom,1467,ext_open}},
        [{var,1467,'FName'},
         {var,1467,'Repair'},
         {var,1467,'Mode'},
         {call,1467,
          {remote,1467,{atom,1467,erlang},{atom,1467,element}},
          [{integer,1467,11},{var,1467,'L'}]}]}},
      [{clause,1468,
        [{tuple,1468,
          [{atom,1468,ok},
           {tuple,1468,
            [{var,1468,'_Alloc'},
             {var,1468,'FdC'},
             {tuple,1468,[{var,1468,'NoItems'},{var,1468,'_NoBytes'}]},
             {var,1468,'FileSize'}]}]}],
        [],
        [{match,1469,
          {var,1469,'Halt'},
          {tuple,1469,
           [{atom,1469,halt},
            {var,1469,'FdC'},
            {var,1469,'FileSize'},
            {var,1469,'Size'}]}},
         {tuple,1470,
          [{atom,1470,ok},
           {tuple,1470,[{atom,1470,ok},{var,1470,'Name'}]},
           {call,1471,
            {remote,1471,{atom,1471,erlang},{atom,1471,setelement}},
            [{integer,1471,14},
             {call,1471,
              {remote,1471,{atom,1471,erlang},{atom,1471,setelement}},
              [{integer,1471,9},
               {call,1471,
                {remote,1471,{atom,1471,erlang},{atom,1471,setelement}},
                [{integer,1471,10},{var,1471,'L'},{atom,1471,halt_ext}]},
               {atom,1471,external}]},
             {var,1471,'Halt'}]},
           {var,1472,'NoItems'}]}]},
       {clause,1473,[{var,1473,'Error'}],[],[{var,1474,'Error'}]}]}]},
   {clause,1476,
    [{var,1476,'L'},
     {tuple,1476,
      [{atom,1476,arg},
       {var,1477,'Name'},
       {var,1478,'V'},
       {var,1477,'FName'},
       {var,1477,'Repair'},
       {tuple,1476,[{var,1476,'MaxB'},{var,1476,'MaxF'}]},
       {atom,1476,wrap},
       {var,1476,'_'},
       {atom,1476,external},
       {var,1476,'_'},
       {var,1476,'_'},
       {var,1477,'Mode'},
       {var,1476,'_'},
       {var,1476,'_'}]}],
    [],
    [{'case',1479,
      {'catch',1479,
       {call,1480,
        {remote,1480,{atom,1480,disk_log_1},{atom,1480,mf_ext_open}},
        [{var,1480,'FName'},
         {var,1480,'MaxB'},
         {var,1480,'MaxF'},
         {var,1480,'Repair'},
         {var,1480,'Mode'},
         {call,1480,
          {remote,1480,{atom,1480,erlang},{atom,1480,element}},
          [{integer,1480,11},{var,1480,'L'}]},
         {var,1480,'V'}]}},
      [{clause,1481,
        [{tuple,1481,[{atom,1481,ok},{var,1481,'Handle'},{var,1481,'Cnt'}]}],
        [],
        [{tuple,1482,
          [{atom,1482,ok},
           {tuple,1482,[{atom,1482,ok},{var,1482,'Name'}]},
           {call,1482,
            {remote,1482,{atom,1482,erlang},{atom,1482,setelement}},
            [{integer,1482,9},
             {call,1482,
              {remote,1482,{atom,1482,erlang},{atom,1482,setelement}},
              [{integer,1482,14},
               {call,1482,
                {remote,1482,{atom,1482,erlang},{atom,1482,setelement}},
                [{integer,1482,10},
                 {call,1482,
                  {remote,1482,{atom,1482,erlang},{atom,1482,setelement}},
                  [{integer,1482,8},{var,1482,'L'},{atom,1482,wrap}]},
                 {atom,1483,wrap_ext}]},
               {var,1484,'Handle'}]},
             {atom,1485,external}]},
           {var,1485,'Cnt'}]}]},
       {clause,1486,[{var,1486,'Error'}],[],[{var,1487,'Error'}]}]}]}]},
 {function,1491,close_disk_log,1,
  [{clause,1491,[{atom,1491,undefined}],[],[{atom,1492,closed}]},
   {clause,1493,
    [{var,1493,'L'}],
    [],
    [{call,1494,{atom,1494,unblock_pid},[{var,1494,'L'}]},
     {match,1495,
      {var,1495,'F'},
      {'fun',1495,
       {clauses,
        [{clause,1495,
          [{tuple,1495,[{var,1495,'Pid'},{var,1495,'_'}]}],
          [],
          [{call,1496,{atom,1496,unlink},[{var,1496,'Pid'}]}]}]}}},
     {call,1498,
      {remote,1498,{atom,1498,lists},{atom,1498,foreach}},
      [{var,1498,'F'},
       {call,1498,
        {remote,1498,{atom,1498,erlang},{atom,1498,element}},
        [{integer,1498,7},{var,1498,'L'}]}]},
     {match,1499,
      {var,1499,'R'},
      {'catch',1499,{call,1499,{atom,1499,close_disk_log2},[{var,1499,'L'}]}}},
     {call,1500,{atom,1500,erase},[{atom,1500,log}]},
     {var,1501,'R'}]}]},
 {function,1505,close_disk_log2,1,
  [{clause,1505,
    [{var,1505,'L'}],
    [],
    [{'case',1506,
      {var,1506,'L'},
      [{clause,1507,
        [{tuple,1507,
          [{atom,1507,log},
           {var,1507,'_'},
           {var,1507,'_'},
           {var,1507,'_'},
           {var,1507,'_'},
           {var,1507,'_'},
           {var,1507,'_'},
           {var,1507,'_'},
           {var,1507,'_'},
           {atom,1507,halt_int},
           {var,1507,'_'},
           {var,1507,'Mode'},
           {var,1507,'_'},
           {var,1507,'Halt'},
           {var,1507,'_'}]}],
        [],
        [{call,1508,
          {remote,1508,{atom,1508,disk_log_1},{atom,1508,close}},
          [{call,1508,
            {remote,1508,{atom,1508,erlang},{atom,1508,element}},
            [{integer,1508,2},{var,1508,'Halt'}]},
           {call,1508,
            {remote,1508,{atom,1508,erlang},{atom,1508,element}},
            [{integer,1508,6},{var,1508,'L'}]},
           {var,1508,'Mode'}]}]},
       {clause,1509,
        [{tuple,1509,
          [{atom,1509,log},
           {var,1509,'_'},
           {var,1509,'_'},
           {var,1509,'_'},
           {var,1509,'_'},
           {var,1509,'_'},
           {var,1509,'_'},
           {var,1509,'_'},
           {var,1509,'_'},
           {atom,1509,wrap_int},
           {var,1509,'_'},
           {var,1509,'Mode'},
           {var,1509,'_'},
           {var,1509,'Handle'},
           {var,1509,'_'}]}],
        [],
        [{call,1510,
          {remote,1510,{atom,1510,disk_log_1},{atom,1510,mf_int_close}},
          [{var,1510,'Handle'},{var,1510,'Mode'}]}]},
       {clause,1511,
        [{tuple,1511,
          [{atom,1511,log},
           {var,1511,'_'},
           {var,1511,'_'},
           {var,1511,'_'},
           {var,1511,'_'},
           {var,1511,'_'},
           {var,1511,'_'},
           {var,1511,'_'},
           {var,1511,'_'},
           {atom,1511,halt_ext},
           {var,1511,'_'},
           {var,1511,'_'},
           {var,1511,'_'},
           {var,1511,'Halt'},
           {var,1511,'_'}]}],
        [],
        [{call,1512,
          {remote,1512,{atom,1512,disk_log_1},{atom,1512,fclose}},
          [{call,1512,
            {remote,1512,{atom,1512,erlang},{atom,1512,element}},
            [{integer,1512,2},{var,1512,'Halt'}]},
           {call,1512,
            {remote,1512,{atom,1512,erlang},{atom,1512,element}},
            [{integer,1512,6},{var,1512,'L'}]}]}]},
       {clause,1513,
        [{tuple,1513,
          [{atom,1513,log},
           {var,1513,'_'},
           {var,1513,'_'},
           {var,1513,'_'},
           {var,1513,'_'},
           {var,1513,'_'},
           {var,1513,'_'},
           {var,1513,'_'},
           {var,1513,'_'},
           {atom,1513,wrap_ext},
           {var,1513,'_'},
           {var,1513,'Mode'},
           {var,1513,'_'},
           {var,1513,'Handle'},
           {var,1513,'_'}]}],
        [],
        [{call,1514,
          {remote,1514,{atom,1514,disk_log_1},{atom,1514,mf_ext_close}},
          [{var,1514,'Handle'},{var,1514,'Mode'}]}]}]},
     {atom,1516,closed}]}]},
 {function,1518,do_format_error,1,
  [{clause,1518,
    [{tuple,1518,[{atom,1518,error},{var,1518,'Module'},{var,1518,'Error'}]}],
    [],
    [{call,1519,
      {remote,1519,{var,1519,'Module'},{atom,1519,format_error}},
      [{var,1519,'Error'}]}]},
   {clause,1520,
    [{tuple,1520,[{atom,1520,error},{var,1520,'Reason'}]}],
    [],
    [{call,1521,{atom,1521,do_format_error},[{var,1521,'Reason'}]}]},
   {clause,1522,
    [{tuple,1522,
      [{var,1522,'Node'},
       {match,1522,
        {var,1522,'Error'},
        {tuple,1522,[{atom,1522,error},{var,1522,'_Reason'}]}}]}],
    [],
    [{call,1523,
      {remote,1523,{atom,1523,lists},{atom,1523,append}},
      [{call,1523,
        {remote,1523,{atom,1523,io_lib},{atom,1523,format}},
        [{string,1523,"~p: "},{cons,1523,{var,1523,'Node'},{nil,1523}}]},
       {call,1523,{atom,1523,do_format_error},[{var,1523,'Error'}]}]}]},
   {clause,1524,
    [{tuple,1524,[{atom,1524,badarg},{var,1524,'Arg'}]}],
    [],
    [{call,1525,
      {remote,1525,{atom,1525,io_lib},{atom,1525,format}},
      [{string,1525,
        "The argument ~p is missing, not recognized or not wellformed~n"},
       {cons,1526,{var,1526,'Arg'},{nil,1526}}]}]},
   {clause,1527,
    [{tuple,1527,
      [{atom,1527,size_mismatch},{var,1527,'OldSize'},{var,1527,'ArgSize'}]}],
    [],
    [{call,1528,
      {remote,1528,{atom,1528,io_lib},{atom,1528,format}},
      [{string,1528,
        "The given size ~p does not match the size ~p found on the disk log size file~n"},
       {cons,1529,
        {var,1529,'ArgSize'},
        {cons,1529,{var,1529,'OldSize'},{nil,1529}}}]}]},
   {clause,1530,
    [{tuple,1530,[{atom,1530,read_only_mode},{var,1530,'Log'}]}],
    [],
    [{call,1531,
      {remote,1531,{atom,1531,io_lib},{atom,1531,format}},
      [{string,1531,
        "The disk log ~tp has been opened read-only, but the requested operation needs read-write access~n"},
       {cons,1532,{var,1532,'Log'},{nil,1532}}]}]},
   {clause,1533,
    [{tuple,1533,[{atom,1533,format_external},{var,1533,'Log'}]}],
    [],
    [{call,1534,
      {remote,1534,{atom,1534,io_lib},{atom,1534,format}},
      [{string,1534,
        "The requested operation can only be applied on internally formatted disk logs, but ~tp is externally formatted~n"},
       {cons,1536,{var,1536,'Log'},{nil,1536}}]}]},
   {clause,1537,
    [{tuple,1537,[{atom,1537,blocked_log},{var,1537,'Log'}]}],
    [],
    [{call,1538,
      {remote,1538,{atom,1538,io_lib},{atom,1538,format}},
      [{string,1538,
        "The blocked disk log ~tp does not queue requests, or the log has been blocked by the calling process~n"},
       {cons,1539,{var,1539,'Log'},{nil,1539}}]}]},
   {clause,1540,
    [{tuple,1540,[{atom,1540,full},{var,1540,'Log'}]}],
    [],
    [{call,1541,
      {remote,1541,{atom,1541,io_lib},{atom,1541,format}},
      [{string,1541,"The halt log ~tp is full~n"},
       {cons,1541,{var,1541,'Log'},{nil,1541}}]}]},
   {clause,1542,
    [{tuple,1542,[{atom,1542,not_blocked},{var,1542,'Log'}]}],
    [],
    [{call,1543,
      {remote,1543,{atom,1543,io_lib},{atom,1543,format}},
      [{string,1543,"The disk log ~tp is not blocked~n"},
       {cons,1543,{var,1543,'Log'},{nil,1543}}]}]},
   {clause,1544,
    [{tuple,1544,[{atom,1544,not_owner},{var,1544,'Pid'}]}],
    [],
    [{call,1545,
      {remote,1545,{atom,1545,io_lib},{atom,1545,format}},
      [{string,1545,"The pid ~tp is not an owner of the disk log~n"},
       {cons,1545,{var,1545,'Pid'},{nil,1545}}]}]},
   {clause,1546,
    [{tuple,1546,[{atom,1546,not_blocked_by_pid},{var,1546,'Log'}]}],
    [],
    [{call,1547,
      {remote,1547,{atom,1547,io_lib},{atom,1547,format}},
      [{string,1547,
        "The disk log ~tp is blocked, but only the blocking pid can unblock a disk log~n"},
       {cons,1548,{var,1548,'Log'},{nil,1548}}]}]},
   {clause,1549,
    [{tuple,1549,
      [{atom,1549,new_size_too_small},
       {var,1549,'Log'},
       {var,1549,'CurrentSize'}]}],
    [],
    [{call,1550,
      {remote,1550,{atom,1550,io_lib},{atom,1550,format}},
      [{string,1550,
        "The current size ~p of the halt log ~tp is greater than the requested new size~n"},
       {cons,1551,
        {var,1551,'CurrentSize'},
        {cons,1551,{var,1551,'Log'},{nil,1551}}}]}]},
   {clause,1552,
    [{tuple,1552,[{atom,1552,halt_log},{var,1552,'Log'}]}],
    [],
    [{call,1553,
      {remote,1553,{atom,1553,io_lib},{atom,1553,format}},
      [{string,1553,"The halt log ~tp cannot be wrapped~n"},
       {cons,1553,{var,1553,'Log'},{nil,1553}}]}]},
   {clause,1554,
    [{tuple,1554,[{atom,1554,same_file_name},{var,1554,'Log'}]}],
    [],
    [{call,1555,
      {remote,1555,{atom,1555,io_lib},{atom,1555,format}},
      [{string,1555,
        "Current and new file name of the disk log ~tp are the same~n"},
       {cons,1556,{var,1556,'Log'},{nil,1556}}]}]},
   {clause,1557,
    [{tuple,1557,
      [{atom,1557,arg_mismatch},
       {var,1557,'Option'},
       {var,1557,'FirstValue'},
       {var,1557,'ArgValue'}]}],
    [],
    [{call,1558,
      {remote,1558,{atom,1558,io_lib},{atom,1558,format}},
      [{string,1558,
        "The value ~tp of the disk log option ~p does not match the current value ~tp~n"},
       {cons,1559,
        {var,1559,'ArgValue'},
        {cons,1559,
         {var,1559,'Option'},
         {cons,1559,{var,1559,'FirstValue'},{nil,1559}}}}]}]},
   {clause,1560,
    [{tuple,1560,[{atom,1560,name_already_open},{var,1560,'Log'}]}],
    [],
    [{call,1561,
      {remote,1561,{atom,1561,io_lib},{atom,1561,format}},
      [{string,1561,"The disk log ~tp has already opened another file~n"},
       {cons,1561,{var,1561,'Log'},{nil,1561}}]}]},
   {clause,1562,
    [{tuple,1562,[{atom,1562,node_already_open},{var,1562,'Log'}]}],
    [],
    [{call,1563,
      {remote,1563,{atom,1563,io_lib},{atom,1563,format}},
      [{string,1563,
        "The distribution option of the disk log ~tp does not match already open log~n"},
       {cons,1564,{var,1564,'Log'},{nil,1564}}]}]},
   {clause,1565,
    [{tuple,1565,[{atom,1565,open_read_write},{var,1565,'Log'}]}],
    [],
    [{call,1566,
      {remote,1566,{atom,1566,io_lib},{atom,1566,format}},
      [{string,1566,"The disk log ~tp has already been opened read-write~n"},
       {cons,1567,{var,1567,'Log'},{nil,1567}}]}]},
   {clause,1568,
    [{tuple,1568,[{atom,1568,open_read_only},{var,1568,'Log'}]}],
    [],
    [{call,1569,
      {remote,1569,{atom,1569,io_lib},{atom,1569,format}},
      [{string,1569,"The disk log ~tp has already been opened read-only~n"},
       {cons,1570,{var,1570,'Log'},{nil,1570}}]}]},
   {clause,1571,
    [{tuple,1571,[{atom,1571,not_internal_wrap},{var,1571,'Log'}]}],
    [],
    [{call,1572,
      {remote,1572,{atom,1572,io_lib},{atom,1572,format}},
      [{string,1572,
        "The requested operation cannot be applied since ~tp is not an internally formatted disk log~n"},
       {cons,1573,{var,1573,'Log'},{nil,1573}}]}]},
   {clause,1574,
    [{atom,1574,no_such_log}],
    [],
    [{call,1575,
      {remote,1575,{atom,1575,io_lib},{atom,1575,format}},
      [{string,1575,"There is no disk log with the given name~n"},
       {nil,1575}]}]},
   {clause,1576,
    [{atom,1576,nonode}],
    [],
    [{call,1577,
      {remote,1577,{atom,1577,io_lib},{atom,1577,format}},
      [{string,1577,
        "There seems to be no node up that can handle the request~n"},
       {nil,1578}]}]},
   {clause,1579,
    [{atom,1579,nodedown}],
    [],
    [{call,1580,
      {remote,1580,{atom,1580,io_lib},{atom,1580,format}},
      [{string,1580,
        "There seems to be no node up that can handle the request~n"},
       {nil,1581}]}]},
   {clause,1582,
    [{tuple,1582,[{atom,1582,corrupt_log_file},{var,1582,'FileName'}]}],
    [],
    [{call,1583,
      {remote,1583,{atom,1583,io_lib},{atom,1583,format}},
      [{string,1583,"The disk log file \"~ts\" contains corrupt data~n"},
       {cons,1584,{var,1584,'FileName'},{nil,1584}}]}]},
   {clause,1585,
    [{tuple,1585,[{atom,1585,need_repair},{var,1585,'FileName'}]}],
    [],
    [{call,1586,
      {remote,1586,{atom,1586,io_lib},{atom,1586,format}},
      [{string,1586,
        "The disk log file \"~ts\" has not been closed properly and needs repair~n"},
       {cons,1587,{var,1587,'FileName'},{nil,1587}}]}]},
   {clause,1588,
    [{tuple,1588,[{atom,1588,not_a_log_file},{var,1588,'FileName'}]}],
    [],
    [{call,1589,
      {remote,1589,{atom,1589,io_lib},{atom,1589,format}},
      [{string,1589,"The file \"~ts\" is not a wrap log file~n"},
       {cons,1589,{var,1589,'FileName'},{nil,1589}}]}]},
   {clause,1590,
    [{tuple,1590,[{atom,1590,invalid_header},{var,1590,'InvalidHeader'}]}],
    [],
    [{call,1591,
      {remote,1591,{atom,1591,io_lib},{atom,1591,format}},
      [{string,1591,"The disk log header is not wellformed: ~p~n"},
       {cons,1592,{var,1592,'InvalidHeader'},{nil,1592}}]}]},
   {clause,1593,
    [{atom,1593,end_of_log}],
    [],
    [{call,1594,
      {remote,1594,{atom,1594,io_lib},{atom,1594,format}},
      [{string,1594,
        "An attempt was made to step outside a not yet full wrap log~n"},
       {nil,1595}]}]},
   {clause,1596,
    [{tuple,1596,[{atom,1596,invalid_index_file},{var,1596,'FileName'}]}],
    [],
    [{call,1597,
      {remote,1597,{atom,1597,io_lib},{atom,1597,format}},
      [{string,1597,"The wrap log index file \"~ts\" cannot be used~n"},
       {cons,1598,{var,1598,'FileName'},{nil,1598}}]}]},
   {clause,1599,
    [{tuple,1599,[{atom,1599,no_continuation},{var,1599,'BadCont'}]}],
    [],
    [{call,1600,
      {remote,1600,{atom,1600,io_lib},{atom,1600,format}},
      [{string,1600,"The term ~p is not a chunk continuation~n"},
       {cons,1600,{var,1600,'BadCont'},{nil,1600}}]}]},
   {clause,1601,
    [{tuple,1601,
      [{atom,1601,file_error},{var,1601,'FileName'},{var,1601,'Reason'}]}],
    [],
    [{call,1602,
      {remote,1602,{atom,1602,io_lib},{atom,1602,format}},
      [{string,1602,"\"~ts\": ~tp~n"},
       {cons,1602,
        {var,1602,'FileName'},
        {cons,1602,
         {call,1602,
          {remote,1602,{atom,1602,file},{atom,1602,format_error}},
          [{var,1602,'Reason'}]},
         {nil,1602}}}]}]},
   {clause,1603,
    [{var,1603,'E'}],
    [],
    [{call,1604,
      {remote,1604,{atom,1604,io_lib},{atom,1604,format}},
      [{string,1604,"~tp~n"},{cons,1604,{var,1604,'E'},{nil,1604}}]}]}]},
 {function,1606,do_info,2,
  [{clause,1606,
    [{var,1606,'L'},{var,1606,'Cnt'}],
    [],
    [{match,1609,
      {tuple,1607,
       [{atom,1607,log},
        {var,1608,'Status'},
        {var,1607,'Name'},
        {var,1607,'_'},
        {var,1608,'Users'},
        {var,1607,'File'},
        {var,1608,'Owners'},
        {var,1607,'Type'},
        {var,1609,'Format'},
        {var,1607,'_'},
        {var,1609,'Head'},
        {var,1607,'Mode'},
        {var,1607,'_'},
        {var,1608,'Extra'},
        {var,1607,'_'}]},
      {var,1609,'L'}},
     {match,1610,
      {var,1610,'Size'},
      {'case',1610,
       {var,1610,'Type'},
       [{clause,1611,
         [{atom,1611,wrap}],
         [],
         [{call,1612,
           {remote,1612,{atom,1612,disk_log_1},{atom,1612,get_wrap_size}},
           [{var,1612,'Extra'}]}]},
        {clause,1613,
         [{atom,1613,halt}],
         [],
         [{call,1614,
           {remote,1614,{atom,1614,erlang},{atom,1614,element}},
           [{integer,1614,4},{var,1614,'Extra'}]}]}]}},
     {match,1616,
      {var,1616,'Distribution'},
      {'case',1617,
       {call,1617,
        {remote,1617,{atom,1617,disk_log_server},{atom,1617,get_log_pids}},
        [{var,1617,'Name'}]},
       [{clause,1618,
         [{tuple,1618,[{atom,1618,local},{var,1618,'_Pid'}]}],
         [],
         [{atom,1619,local}]},
        {clause,1620,
         [{tuple,1620,[{atom,1620,distributed},{var,1620,'Pids'}]}],
         [],
         [{lc,1621,
           {call,1621,{atom,1621,node},[{var,1621,'P'}]},
           [{generate,1621,{var,1621,'P'},{var,1621,'Pids'}}]}]},
        {clause,1622,[{atom,1622,undefined}],[],[{nil,1623}]}]}},
     {match,1625,
      {var,1625,'RW'},
      {'case',1625,
       {var,1625,'Type'},
       [{clause,1626,
         [{atom,1626,wrap}],
         [[{op,1626,'=:=',{var,1626,'Mode'},{atom,1626,read_write}}]],
         [{match,1629,
           {tuple,1627,
            [{atom,1627,handle},
             {var,1627,'_'},
             {var,1627,'_'},
             {var,1627,'_'},
             {var,1627,'CurB'},
             {var,1627,'CurF'},
             {var,1627,'_'},
             {var,1627,'_'},
             {var,1628,'CurCnt'},
             {var,1628,'AccCnt'},
             {var,1627,'_'},
             {var,1629,'NoFull'},
             {var,1629,'AccFull'}]},
           {var,1629,'Extra'}},
          {match,1630,
           {var,1630,'NewAccFull'},
           {op,1630,'+',{var,1630,'AccFull'},{var,1630,'NoFull'}}},
          {match,1631,
           {var,1631,'NewExtra'},
           {call,1631,
            {remote,1631,{atom,1631,erlang},{atom,1631,setelement}},
            [{integer,1631,13},
             {call,1631,
              {remote,1631,{atom,1631,erlang},{atom,1631,setelement}},
              [{integer,1631,12},{var,1631,'Extra'},{integer,1631,0}]},
             {var,1631,'NewAccFull'}]}},
          {call,1632,
           {atom,1632,put},
           [{atom,1632,log},
            {call,1632,
             {remote,1632,{atom,1632,erlang},{atom,1632,setelement}},
             [{integer,1632,14},{var,1632,'L'},{var,1632,'NewExtra'}]}]},
          {cons,1633,
           {tuple,1633,[{atom,1633,no_current_bytes},{var,1633,'CurB'}]},
           {cons,1634,
            {tuple,1634,[{atom,1634,no_current_items},{var,1634,'CurCnt'}]},
            {cons,1635,
             {tuple,1635,[{atom,1635,no_items},{var,1635,'Cnt'}]},
             {cons,1636,
              {tuple,1636,
               [{atom,1636,no_written_items},
                {op,1636,'+',{var,1636,'CurCnt'},{var,1636,'AccCnt'}}]},
              {cons,1637,
               {tuple,1637,[{atom,1637,current_file},{var,1637,'CurF'}]},
               {cons,1638,
                {tuple,1638,
                 [{atom,1638,no_overflows},
                  {tuple,1638,[{var,1638,'NewAccFull'},{var,1638,'NoFull'}]}]},
                {nil,1639}}}}}}}]},
        {clause,1640,
         [{atom,1640,halt}],
         [[{op,1640,'=:=',{var,1640,'Mode'},{atom,1640,read_write}}]],
         [{match,1641,
           {var,1641,'IsFull'},
           {'case',1641,
            {call,1641,{atom,1641,get},[{atom,1641,is_full}]},
            [{clause,1642,[{atom,1642,undefined}],[],[{atom,1642,false}]},
             {clause,1643,[{var,1643,'_'}],[],[{atom,1643,true}]}]}},
          {cons,1645,
           {tuple,1645,[{atom,1645,full},{var,1645,'IsFull'}]},
           {cons,1646,
            {tuple,1646,[{atom,1646,no_written_items},{var,1646,'Cnt'}]},
            {nil,1647}}}]},
        {clause,1648,
         [{var,1648,'_'}],
         [[{op,1648,'=:=',{var,1648,'Mode'},{atom,1648,read_only}}]],
         [{nil,1649}]}]}},
     {match,1651,
      {var,1651,'HeadL'},
      {'case',1651,
       {var,1651,'Mode'},
       [{clause,1652,
         [{atom,1652,read_write}],
         [],
         [{cons,1653,
           {tuple,1653,[{atom,1653,head},{var,1653,'Head'}]},
           {nil,1653}}]},
        {clause,1654,[{atom,1654,read_only}],[],[{nil,1655}]}]}},
     {match,1657,
      {var,1657,'Common'},
      {op,1664,'++',
       {cons,1657,
        {tuple,1657,[{atom,1657,name},{var,1657,'Name'}]},
        {cons,1658,
         {tuple,1658,[{atom,1658,file},{var,1658,'File'}]},
         {cons,1659,
          {tuple,1659,[{atom,1659,type},{var,1659,'Type'}]},
          {cons,1660,
           {tuple,1660,[{atom,1660,format},{var,1660,'Format'}]},
           {cons,1661,
            {tuple,1661,[{atom,1661,size},{var,1661,'Size'}]},
            {cons,1662,
             {tuple,1662,[{atom,1662,items},{var,1662,'Cnt'}]},
             {cons,1663,
              {tuple,1663,[{atom,1663,owners},{var,1663,'Owners'}]},
              {cons,1664,
               {tuple,1664,[{atom,1664,users},{var,1664,'Users'}]},
               {nil,1664}}}}}}}}},
       {op,1665,'++',
        {var,1665,'HeadL'},
        {cons,1666,
         {tuple,1666,[{atom,1666,mode},{var,1666,'Mode'}]},
         {cons,1667,
          {tuple,1667,[{atom,1667,status},{var,1667,'Status'}]},
          {cons,1668,
           {tuple,1668,[{atom,1668,node},{call,1668,{atom,1668,node},[]}]},
           {cons,1669,
            {tuple,1669,[{atom,1669,distributed},{var,1669,'Distribution'}]},
            {nil,1670}}}}}}}},
     {op,1671,'++',{var,1671,'Common'},{var,1671,'RW'}}]}]},
 {function,1673,do_block,3,
  [{clause,1673,
    [{var,1673,'Pid'},{var,1673,'QueueLogRecs'},{var,1673,'L'}],
    [],
    [{match,1674,
      {var,1674,'L2'},
      {call,1674,
       {remote,1674,{atom,1674,erlang},{atom,1674,setelement}},
       [{integer,1674,4},
        {call,1674,
         {remote,1674,{atom,1674,erlang},{atom,1674,setelement}},
         [{integer,1674,2},
          {var,1674,'L'},
          {tuple,1674,[{atom,1674,blocked},{var,1674,'QueueLogRecs'}]}]},
        {var,1674,'Pid'}]}},
     {call,1675,{atom,1675,put},[{atom,1675,log},{var,1675,'L2'}]},
     {'case',1676,
      {call,1676,{atom,1676,is_owner},[{var,1676,'Pid'},{var,1676,'L2'}]},
      [{clause,1677,
        [{tuple,1677,[{atom,1677,true},{var,1677,'_Notify'}]}],
        [],
        [{atom,1678,ok}]},
       {clause,1679,
        [{atom,1679,false}],
        [],
        [{call,1680,{atom,1680,link},[{var,1680,'Pid'}]}]}]}]}]},
 {function,1683,do_unblock,3,
  [{clause,1683,
    [{var,1683,'Pid'},{var,1683,'L'},{var,1683,'S'}],
    [[{op,1683,'=:=',
       {call,1683,
        {remote,1683,{atom,1683,erlang},{atom,1683,element}},
        [{integer,1683,4},{var,1683,'L'}]},
       {var,1683,'Pid'}}]],
    [{call,1684,{atom,1684,do_unblock},[{var,1684,'L'},{var,1684,'S'}]}]},
   {clause,1685,
    [{var,1685,'_Pid'},{var,1685,'_L'},{var,1685,'S'}],
    [],
    [{var,1686,'S'}]}]},
 {function,1688,do_unblock,2,
  [{clause,1688,
    [{var,1688,'L'},{var,1688,'S'}],
    [],
    [{call,1689,{atom,1689,unblock_pid},[{var,1689,'L'}]},
     {match,1690,
      {var,1690,'L2'},
      {call,1690,
       {remote,1690,{atom,1690,erlang},{atom,1690,setelement}},
       [{integer,1690,2},
        {call,1690,
         {remote,1690,{atom,1690,erlang},{atom,1690,setelement}},
         [{integer,1690,4},{var,1690,'L'},{atom,1690,none}]},
        {atom,1690,ok}]}},
     {call,1691,{atom,1691,put},[{atom,1691,log},{var,1691,'L2'}]},
     {match,1696,
      {nil,1696},
      {call,1696,
       {remote,1696,{atom,1696,erlang},{atom,1696,element}},
       [{integer,1696,3},{var,1696,'S'}]}},
     {call,1697,
      {remote,1697,{atom,1697,erlang},{atom,1697,setelement}},
      [{integer,1697,3},
       {call,1697,
        {remote,1697,{atom,1697,erlang},{atom,1697,setelement}},
        [{integer,1697,2},{var,1697,'S'},{nil,1697}]},
       {call,1697,
        {remote,1697,{atom,1697,lists},{atom,1697,reverse}},
        [{call,1697,
          {remote,1697,{atom,1697,erlang},{atom,1697,element}},
          [{integer,1697,2},{var,1697,'S'}]}]}]}]}]},
 {function,1701,do_log,2,
  [{clause,1701,
    [{var,1701,'L'},{var,1701,'B'}],
    [[{op,1701,'=:=',
       {call,1701,
        {remote,1701,{atom,1701,erlang},{atom,1701,element}},
        [{integer,1701,8},{var,1701,'L'}]},
       {atom,1701,halt}}]],
    [{match,1702,
      {tuple,1702,
       [{atom,1702,log},
        {var,1702,'_'},
        {var,1702,'_'},
        {var,1702,'_'},
        {var,1702,'_'},
        {var,1702,'_'},
        {var,1702,'_'},
        {var,1702,'_'},
        {var,1702,'Format'},
        {var,1702,'_'},
        {var,1702,'_'},
        {var,1702,'_'},
        {var,1702,'_'},
        {var,1702,'Halt'},
        {var,1702,'_'}]},
      {var,1702,'L'}},
     {match,1703,
      {tuple,1703,
       [{atom,1703,halt},{var,1703,'_'},{var,1703,'CurSize'},{var,1703,'Sz'}]},
      {var,1703,'Halt'}},
     {match,1704,
      {tuple,1704,[{var,1704,'Bs'},{var,1704,'BSize'}]},
      {call,1704,{atom,1704,bsize},[{var,1704,'B'},{var,1704,'Format'}]}},
     {'case',1705,
      {call,1705,{atom,1705,get},[{atom,1705,is_full}]},
      [{clause,1706,
        [{atom,1706,true}],
        [],
        [{tuple,1707,
          [{atom,1707,error},
           {tuple,1707,
            [{atom,1707,error},
             {tuple,1707,
              [{atom,1707,full},
               {call,1707,
                {remote,1707,{atom,1707,erlang},{atom,1707,element}},
                [{integer,1707,3},{var,1707,'L'}]}]}]},
           {integer,1707,0}]}]},
       {clause,1708,
        [{atom,1708,undefined}],
        [[{op,1708,'=:=',{var,1708,'Sz'},{atom,1708,infinity}}],
         [{op,1708,'=<',
           {op,1708,'+',{var,1708,'CurSize'},{var,1708,'BSize'}},
           {var,1708,'Sz'}}]],
        [{call,1709,
          {atom,1709,halt_write},
          [{var,1709,'Halt'},
           {var,1709,'L'},
           {var,1709,'B'},
           {var,1709,'Bs'},
           {var,1709,'BSize'}]}]},
       {clause,1710,
        [{atom,1710,undefined}],
        [],
        [{call,1711,
          {atom,1711,halt_write_full},
          [{var,1711,'L'},
           {var,1711,'B'},
           {var,1711,'Format'},
           {integer,1711,0}]}]}]}]},
   {clause,1713,
    [{var,1713,'L'},{var,1713,'B'}],
    [[{op,1713,'=:=',
       {call,1713,
        {remote,1713,{atom,1713,erlang},{atom,1713,element}},
        [{integer,1713,10},{var,1713,'L'}]},
       {atom,1713,wrap_int}}]],
    [{'case',1714,
      {call,1714,
       {remote,1714,{atom,1714,disk_log_1},{atom,1714,mf_int_log}},
       [{call,1714,
         {remote,1714,{atom,1714,erlang},{atom,1714,element}},
         [{integer,1714,14},{var,1714,'L'}]},
        {var,1714,'B'},
        {call,1714,
         {remote,1714,{atom,1714,erlang},{atom,1714,element}},
         [{integer,1714,11},{var,1714,'L'}]}]},
      [{clause,1715,
        [{tuple,1715,
          [{atom,1715,ok},
           {var,1715,'Handle'},
           {var,1715,'Logged'},
           {var,1715,'Lost'},
           {var,1715,'Wraps'}]}],
        [],
        [{call,1716,{atom,1716,notify_owners_wrap},[{var,1716,'Wraps'}]},
         {call,1717,
          {atom,1717,put},
          [{atom,1717,log},
           {call,1717,
            {remote,1717,{atom,1717,erlang},{atom,1717,setelement}},
            [{integer,1717,14},{var,1717,'L'},{var,1717,'Handle'}]}]},
         {op,1718,'-',{var,1718,'Logged'},{var,1718,'Lost'}}]},
       {clause,1719,
        [{tuple,1719,
          [{atom,1719,ok},{var,1719,'Handle'},{var,1719,'Logged'}]}],
        [],
        [{call,1720,
          {atom,1720,put},
          [{atom,1720,log},
           {call,1720,
            {remote,1720,{atom,1720,erlang},{atom,1720,setelement}},
            [{integer,1720,14},{var,1720,'L'},{var,1720,'Handle'}]}]},
         {var,1721,'Logged'}]},
       {clause,1722,
        [{tuple,1722,
          [{atom,1722,error},
           {var,1722,'Error'},
           {var,1722,'Handle'},
           {var,1722,'Logged'},
           {var,1722,'Lost'}]}],
        [],
        [{call,1723,
          {atom,1723,put},
          [{atom,1723,log},
           {call,1723,
            {remote,1723,{atom,1723,erlang},{atom,1723,setelement}},
            [{integer,1723,14},{var,1723,'L'},{var,1723,'Handle'}]}]},
         {tuple,1724,
          [{atom,1724,error},
           {var,1724,'Error'},
           {op,1724,'-',{var,1724,'Logged'},{var,1724,'Lost'}}]}]}]}]},
   {clause,1726,
    [{var,1726,'L'},{var,1726,'B'}],
    [[{op,1726,'=:=',
       {call,1726,
        {remote,1726,{atom,1726,erlang},{atom,1726,element}},
        [{integer,1726,10},{var,1726,'L'}]},
       {atom,1726,wrap_ext}}]],
    [{'case',1727,
      {call,1727,
       {remote,1727,{atom,1727,disk_log_1},{atom,1727,mf_ext_log}},
       [{call,1727,
         {remote,1727,{atom,1727,erlang},{atom,1727,element}},
         [{integer,1727,14},{var,1727,'L'}]},
        {var,1727,'B'},
        {call,1727,
         {remote,1727,{atom,1727,erlang},{atom,1727,element}},
         [{integer,1727,11},{var,1727,'L'}]}]},
      [{clause,1728,
        [{tuple,1728,
          [{atom,1728,ok},
           {var,1728,'Handle'},
           {var,1728,'Logged'},
           {var,1728,'Lost'},
           {var,1728,'Wraps'}]}],
        [],
        [{call,1729,{atom,1729,notify_owners_wrap},[{var,1729,'Wraps'}]},
         {call,1730,
          {atom,1730,put},
          [{atom,1730,log},
           {call,1730,
            {remote,1730,{atom,1730,erlang},{atom,1730,setelement}},
            [{integer,1730,14},{var,1730,'L'},{var,1730,'Handle'}]}]},
         {op,1731,'-',{var,1731,'Logged'},{var,1731,'Lost'}}]},
       {clause,1732,
        [{tuple,1732,
          [{atom,1732,ok},{var,1732,'Handle'},{var,1732,'Logged'}]}],
        [],
        [{call,1733,
          {atom,1733,put},
          [{atom,1733,log},
           {call,1733,
            {remote,1733,{atom,1733,erlang},{atom,1733,setelement}},
            [{integer,1733,14},{var,1733,'L'},{var,1733,'Handle'}]}]},
         {var,1734,'Logged'}]},
       {clause,1735,
        [{tuple,1735,
          [{atom,1735,error},
           {var,1735,'Error'},
           {var,1735,'Handle'},
           {var,1735,'Logged'},
           {var,1735,'Lost'}]}],
        [],
        [{call,1736,
          {atom,1736,put},
          [{atom,1736,log},
           {call,1736,
            {remote,1736,{atom,1736,erlang},{atom,1736,setelement}},
            [{integer,1736,14},{var,1736,'L'},{var,1736,'Handle'}]}]},
         {tuple,1737,
          [{atom,1737,error},
           {var,1737,'Error'},
           {op,1737,'-',{var,1737,'Logged'},{var,1737,'Lost'}}]}]}]}]}]},
 {function,1740,bsize,2,
  [{clause,1740,
    [{var,1740,'B'},{atom,1740,external}],
    [],
    [{tuple,1741,
      [{var,1741,'B'},
       {call,1741,{atom,1741,xsz},[{var,1741,'B'},{integer,1741,0}]}]}]},
   {clause,1742,
    [{var,1742,'B'},{atom,1742,internal}],
    [],
    [{call,1743,
      {remote,1743,{atom,1743,disk_log_1},{atom,1743,logl}},
      [{var,1743,'B'}]}]}]},
 {function,1745,xsz,2,
  [{clause,1745,
    [{cons,1745,{var,1745,'B'},{var,1745,'T'}},{var,1745,'Sz'}],
    [],
    [{call,1745,
      {atom,1745,xsz},
      [{var,1745,'T'},
       {op,1745,'+',
        {call,1745,{atom,1745,byte_size},[{var,1745,'B'}]},
        {var,1745,'Sz'}}]}]},
   {clause,1746,[{nil,1746},{var,1746,'Sz'}],[],[{var,1746,'Sz'}]}]},
 {function,1748,halt_write_full,4,
  [{clause,1748,
    [{var,1748,'L'},
     {cons,1748,{var,1748,'Bin'},{var,1748,'Bins'}},
     {var,1748,'Format'},
     {var,1748,'N'}],
    [],
    [{match,1749,{var,1749,'B'},{cons,1749,{var,1749,'Bin'},{nil,1749}}},
     {match,1750,
      {tuple,1750,[{var,1750,'Bs'},{var,1750,'BSize'}]},
      {call,1750,{atom,1750,bsize},[{var,1750,'B'},{var,1750,'Format'}]}},
     {match,1751,
      {var,1751,'Halt'},
      {call,1751,
       {remote,1751,{atom,1751,erlang},{atom,1751,element}},
       [{integer,1751,14},{var,1751,'L'}]}},
     {match,1752,
      {tuple,1752,
       [{atom,1752,halt},{var,1752,'_'},{var,1752,'CurSize'},{var,1752,'Sz'}]},
      {var,1752,'Halt'}},
     {'if',1753,
      [{clause,1754,[],
        [[{op,1754,'=<',
           {op,1754,'+',{var,1754,'CurSize'},{var,1754,'BSize'}},
           {var,1754,'Sz'}}]],
        [{'case',1755,
          {call,1755,
           {atom,1755,halt_write},
           [{var,1755,'Halt'},
            {var,1755,'L'},
            {var,1755,'B'},
            {var,1755,'Bs'},
            {var,1755,'BSize'}]},
          [{clause,1756,
            [{var,1756,'N1'}],
            [[{call,1756,{atom,1756,is_integer},[{var,1756,'N1'}]}]],
            [{call,1757,
              {atom,1757,halt_write_full},
              [{call,1757,{atom,1757,get},[{atom,1757,log}]},
               {var,1757,'Bins'},
               {var,1757,'Format'},
               {op,1757,'+',{var,1757,'N'},{var,1757,'N1'}}]}]},
           {clause,1758,[{var,1758,'Error'}],[],[{var,1759,'Error'}]}]}]},
       {clause,1761,[],
        [[{atom,1761,true}]],
        [{call,1762,
          {atom,1762,halt_write_full},
          [{var,1762,'L'},
           {nil,1762},
           {var,1762,'Format'},
           {var,1762,'N'}]}]}]}]},
   {clause,1764,
    [{var,1764,'L'},{var,1764,'_Bs'},{var,1764,'_Format'},{var,1764,'N'}],
    [],
    [{call,1765,{atom,1765,put},[{atom,1765,is_full},{atom,1765,true}]},
     {call,1766,{atom,1766,notify_owners},[{atom,1766,full}]},
     {tuple,1767,
      [{atom,1767,error},
       {tuple,1767,
        [{atom,1767,error},
         {tuple,1767,
          [{atom,1767,full},
           {call,1767,
            {remote,1767,{atom,1767,erlang},{atom,1767,element}},
            [{integer,1767,3},{var,1767,'L'}]}]}]},
       {var,1767,'N'}]}]}]},
 {function,1769,halt_write,5,
  [{clause,1769,
    [{var,1769,'Halt'},
     {var,1769,'L'},
     {var,1769,'B'},
     {var,1769,'Bs'},
     {var,1769,'BSize'}],
    [],
    [{'case',1770,
      {call,1770,
       {remote,1770,{atom,1770,disk_log_1},{atom,1770,fwrite}},
       [{call,1770,
         {remote,1770,{atom,1770,erlang},{atom,1770,element}},
         [{integer,1770,2},{var,1770,'Halt'}]},
        {call,1770,
         {remote,1770,{atom,1770,erlang},{atom,1770,element}},
         [{integer,1770,6},{var,1770,'L'}]},
        {var,1770,'Bs'},
        {var,1770,'BSize'}]},
      [{clause,1771,
        [{tuple,1771,[{atom,1771,ok},{var,1771,'NewFdC'}]}],
        [],
        [{match,1772,
          {var,1772,'NCurB'},
          {op,1772,'+',
           {call,1772,
            {remote,1772,{atom,1772,erlang},{atom,1772,element}},
            [{integer,1772,3},{var,1772,'Halt'}]},
           {var,1772,'BSize'}}},
         {match,1773,
          {var,1773,'NewHalt'},
          {call,1773,
           {remote,1773,{atom,1773,erlang},{atom,1773,setelement}},
           [{integer,1773,3},
            {call,1773,
             {remote,1773,{atom,1773,erlang},{atom,1773,setelement}},
             [{integer,1773,2},{var,1773,'Halt'},{var,1773,'NewFdC'}]},
            {var,1773,'NCurB'}]}},
         {call,1774,
          {atom,1774,put},
          [{atom,1774,log},
           {call,1774,
            {remote,1774,{atom,1774,erlang},{atom,1774,setelement}},
            [{integer,1774,14},{var,1774,'L'},{var,1774,'NewHalt'}]}]},
         {call,1775,{atom,1775,length},[{var,1775,'B'}]}]},
       {clause,1776,
        [{tuple,1776,[{var,1776,'Error'},{var,1776,'NewFdC'}]}],
        [],
        [{call,1777,
          {atom,1777,put},
          [{atom,1777,log},
           {call,1777,
            {remote,1777,{atom,1777,erlang},{atom,1777,setelement}},
            [{integer,1777,14},
             {var,1777,'L'},
             {call,1777,
              {remote,1777,{atom,1777,erlang},{atom,1777,setelement}},
              [{integer,1777,2},{var,1777,'Halt'},{var,1777,'NewFdC'}]}]}]},
         {tuple,1778,
          [{atom,1778,error},{var,1778,'Error'},{integer,1778,0}]}]}]}]}]},
 {function,1782,do_write_cache,1,
  [{clause,1782,
    [{match,1782,
      {tuple,1782,
       [{atom,1782,log},
        {var,1782,'_'},
        {var,1782,'_'},
        {var,1782,'_'},
        {var,1782,'_'},
        {var,1782,'FName'},
        {var,1782,'_'},
        {atom,1782,halt},
        {var,1782,'_'},
        {var,1782,'_'},
        {var,1782,'_'},
        {var,1782,'_'},
        {var,1782,'_'},
        {var,1782,'Halt'},
        {var,1782,'_'}]},
      {var,1782,'Log'}}],
    [],
    [{match,1783,
      {tuple,1783,[{var,1783,'Reply'},{var,1783,'NewFdC'}]},
      {call,1783,
       {remote,1783,{atom,1783,disk_log_1},{atom,1783,write_cache}},
       [{call,1783,
         {remote,1783,{atom,1783,erlang},{atom,1783,element}},
         [{integer,1783,2},{var,1783,'Halt'}]},
        {var,1783,'FName'}]}},
     {call,1784,
      {atom,1784,put},
      [{atom,1784,log},
       {call,1784,
        {remote,1784,{atom,1784,erlang},{atom,1784,setelement}},
        [{integer,1784,14},
         {var,1784,'Log'},
         {call,1784,
          {remote,1784,{atom,1784,erlang},{atom,1784,setelement}},
          [{integer,1784,2},{var,1784,'Halt'},{var,1784,'NewFdC'}]}]}]},
     {var,1785,'Reply'}]},
   {clause,1786,
    [{match,1786,
      {tuple,1786,
       [{atom,1786,log},
        {var,1786,'_'},
        {var,1786,'_'},
        {var,1786,'_'},
        {var,1786,'_'},
        {var,1786,'_'},
        {var,1786,'_'},
        {atom,1786,wrap},
        {var,1786,'_'},
        {var,1786,'_'},
        {var,1786,'_'},
        {var,1786,'_'},
        {var,1786,'_'},
        {var,1786,'Handle'},
        {var,1786,'_'}]},
      {var,1786,'Log'}}],
    [],
    [{match,1787,
      {tuple,1787,[{var,1787,'Reply'},{var,1787,'NewHandle'}]},
      {call,1787,
       {remote,1787,{atom,1787,disk_log_1},{atom,1787,mf_write_cache}},
       [{var,1787,'Handle'}]}},
     {call,1788,
      {atom,1788,put},
      [{atom,1788,log},
       {call,1788,
        {remote,1788,{atom,1788,erlang},{atom,1788,setelement}},
        [{integer,1788,14},{var,1788,'Log'},{var,1788,'NewHandle'}]}]},
     {var,1789,'Reply'}]}]},
 {function,1792,do_sync,1,
  [{clause,1792,
    [{match,1792,
      {tuple,1792,
       [{atom,1792,log},
        {var,1792,'_'},
        {var,1792,'_'},
        {var,1792,'_'},
        {var,1792,'_'},
        {var,1792,'FName'},
        {var,1792,'_'},
        {atom,1792,halt},
        {var,1792,'_'},
        {var,1792,'_'},
        {var,1792,'_'},
        {var,1792,'_'},
        {var,1792,'_'},
        {var,1792,'Halt'},
        {var,1792,'_'}]},
      {var,1792,'Log'}}],
    [],
    [{match,1793,
      {tuple,1793,[{var,1793,'Reply'},{var,1793,'NewFdC'}]},
      {call,1793,
       {remote,1793,{atom,1793,disk_log_1},{atom,1793,sync}},
       [{call,1793,
         {remote,1793,{atom,1793,erlang},{atom,1793,element}},
         [{integer,1793,2},{var,1793,'Halt'}]},
        {var,1793,'FName'}]}},
     {call,1794,
      {atom,1794,put},
      [{atom,1794,log},
       {call,1794,
        {remote,1794,{atom,1794,erlang},{atom,1794,setelement}},
        [{integer,1794,14},
         {var,1794,'Log'},
         {call,1794,
          {remote,1794,{atom,1794,erlang},{atom,1794,setelement}},
          [{integer,1794,2},{var,1794,'Halt'},{var,1794,'NewFdC'}]}]}]},
     {var,1795,'Reply'}]},
   {clause,1796,
    [{match,1796,
      {tuple,1796,
       [{atom,1796,log},
        {var,1796,'_'},
        {var,1796,'_'},
        {var,1796,'_'},
        {var,1796,'_'},
        {var,1796,'_'},
        {var,1796,'_'},
        {atom,1796,wrap},
        {var,1796,'_'},
        {var,1796,'_'},
        {var,1796,'_'},
        {var,1796,'_'},
        {var,1796,'_'},
        {var,1796,'Handle'},
        {var,1796,'_'}]},
      {var,1796,'Log'}}],
    [],
    [{match,1797,
      {tuple,1797,[{var,1797,'Reply'},{var,1797,'NewHandle'}]},
      {call,1797,
       {remote,1797,{atom,1797,disk_log_1},{atom,1797,mf_sync}},
       [{var,1797,'Handle'}]}},
     {call,1798,
      {atom,1798,put},
      [{atom,1798,log},
       {call,1798,
        {remote,1798,{atom,1798,erlang},{atom,1798,setelement}},
        [{integer,1798,14},{var,1798,'Log'},{var,1798,'NewHandle'}]}]},
     {var,1799,'Reply'}]}]},
 {function,1802,do_trunc,2,
  [{clause,1802,
    [{var,1802,'L'},{var,1802,'Head'}],
    [[{op,1802,'=:=',
       {call,1802,
        {remote,1802,{atom,1802,erlang},{atom,1802,element}},
        [{integer,1802,8},{var,1802,'L'}]},
       {atom,1802,halt}}]],
    [{match,1803,
      {tuple,1803,
       [{atom,1803,log},
        {var,1803,'_'},
        {var,1803,'_'},
        {var,1803,'_'},
        {var,1803,'_'},
        {var,1803,'FName'},
        {var,1803,'_'},
        {var,1803,'_'},
        {var,1803,'_'},
        {var,1803,'_'},
        {var,1803,'_'},
        {var,1803,'_'},
        {var,1803,'_'},
        {var,1803,'Halt'},
        {var,1803,'_'}]},
      {var,1803,'L'}},
     {match,1804,
      {var,1804,'FdC'},
      {call,1804,
       {remote,1804,{atom,1804,erlang},{atom,1804,element}},
       [{integer,1804,2},{var,1804,'Halt'}]}},
     {match,1805,
      {tuple,1805,[{var,1805,'Reply1'},{var,1805,'FdC2'}]},
      {'case',1806,
       {call,1806,
        {remote,1806,{atom,1806,erlang},{atom,1806,element}},
        [{integer,1806,9},{var,1806,'L'}]},
       [{clause,1807,
         [{atom,1807,internal}],
         [],
         [{call,1808,
           {remote,1808,{atom,1808,disk_log_1},{atom,1808,truncate}},
           [{var,1808,'FdC'},{var,1808,'FName'},{var,1808,'Head'}]}]},
        {clause,1809,
         [{atom,1809,external}],
         [],
         [{'case',1810,
           {call,1810,
            {remote,1810,{atom,1810,disk_log_1},{atom,1810,truncate_at}},
            [{var,1810,'FdC'},{var,1810,'FName'},{atom,1810,bof}]},
           [{clause,1811,
             [{tuple,1811,[{atom,1811,ok},{var,1811,'NFdC'}]}],
             [[{op,1811,'=:=',{var,1811,'Head'},{atom,1811,none}}]],
             [{tuple,1812,[{atom,1812,ok},{var,1812,'NFdC'}]}]},
            {clause,1813,
             [{tuple,1813,[{atom,1813,ok},{var,1813,'NFdC'}]}],
             [],
             [{match,1814,
               {tuple,1814,[{atom,1814,ok},{var,1814,'H'}]},
               {var,1814,'Head'}},
              {call,1815,
               {remote,1815,{atom,1815,disk_log_1},{atom,1815,fwrite}},
               [{var,1815,'NFdC'},
                {var,1815,'FName'},
                {var,1815,'H'},
                {call,1815,{atom,1815,byte_size},[{var,1815,'H'}]}]}]},
            {clause,1816,[{var,1816,'R'}],[],[{var,1817,'R'}]}]}]}]}},
     {match,1820,
      {tuple,1820,[{var,1820,'Reply'},{var,1820,'NewHalt'}]},
      {'case',1821,
       {call,1821,
        {remote,1821,{atom,1821,disk_log_1},{atom,1821,position}},
        [{var,1821,'FdC2'},{var,1821,'FName'},{atom,1821,cur}]},
       [{clause,1822,
         [{tuple,1822,
           [{atom,1822,ok},{var,1822,'NewFdC'},{var,1822,'FileSize'}]}],
         [[{op,1822,'=:=',{var,1822,'Reply1'},{atom,1822,ok}}]],
         [{tuple,1823,
           [{atom,1823,ok},
            {call,1823,
             {remote,1823,{atom,1823,erlang},{atom,1823,setelement}},
             [{integer,1823,3},
              {call,1823,
               {remote,1823,{atom,1823,erlang},{atom,1823,setelement}},
               [{integer,1823,2},{var,1823,'Halt'},{var,1823,'NewFdC'}]},
              {var,1823,'FileSize'}]}]}]},
        {clause,1824,
         [{tuple,1824,[{var,1824,'Reply2'},{var,1824,'NewFdC'}]}],
         [],
         [{tuple,1825,
           [{var,1825,'Reply2'},
            {call,1825,
             {remote,1825,{atom,1825,erlang},{atom,1825,setelement}},
             [{integer,1825,2},{var,1825,'Halt'},{var,1825,'NewFdC'}]}]}]},
        {clause,1826,
         [{tuple,1826,[{atom,1826,ok},{var,1826,'NewFdC'},{var,1826,'_'}]}],
         [],
         [{tuple,1827,
           [{var,1827,'Reply1'},
            {call,1827,
             {remote,1827,{atom,1827,erlang},{atom,1827,setelement}},
             [{integer,1827,2},{var,1827,'Halt'},{var,1827,'NewFdC'}]}]}]}]}},
     {call,1829,
      {atom,1829,put},
      [{atom,1829,log},
       {call,1829,
        {remote,1829,{atom,1829,erlang},{atom,1829,setelement}},
        [{integer,1829,14},{var,1829,'L'},{var,1829,'NewHalt'}]}]},
     {var,1830,'Reply'}]},
   {clause,1831,
    [{var,1831,'L'},{var,1831,'Head'}],
    [[{op,1831,'=:=',
       {call,1831,
        {remote,1831,{atom,1831,erlang},{atom,1831,element}},
        [{integer,1831,8},{var,1831,'L'}]},
       {atom,1831,wrap}}]],
    [{match,1832,
      {var,1832,'Handle'},
      {call,1832,
       {remote,1832,{atom,1832,erlang},{atom,1832,element}},
       [{integer,1832,14},{var,1832,'L'}]}},
     {match,1833,
      {var,1833,'OldHead'},
      {call,1833,
       {remote,1833,{atom,1833,erlang},{atom,1833,element}},
       [{integer,1833,11},{var,1833,'L'}]}},
     {match,1834,
      {tuple,1834,[{var,1834,'MaxB'},{var,1834,'MaxF'}]},
      {call,1834,
       {remote,1834,{atom,1834,disk_log_1},{atom,1834,get_wrap_size}},
       [{var,1834,'Handle'}]}},
     {match,1835,
      {atom,1835,ok},
      {call,1835,
       {atom,1835,do_change_size},
       [{var,1835,'L'},{tuple,1835,[{var,1835,'MaxB'},{integer,1835,1}]}]}},
     {match,1836,
      {var,1836,'NewLog'},
      {call,1836,
       {atom,1836,trunc_wrap},
       [{call,1836,
         {remote,1836,{atom,1836,erlang},{atom,1836,setelement}},
         [{integer,1836,11},
          {call,1836,{atom,1836,get},[{atom,1836,log}]},
          {var,1836,'Head'}]}]}},
     {match,1838,
      {var,1838,'NewLog2'},
      {call,1838,{atom,1838,trunc_wrap},[{var,1838,'NewLog'}]}},
     {match,1839,
      {var,1839,'NewHandle'},
      {call,1839,
       {remote,1839,{atom,1839,erlang},{atom,1839,setelement}},
       [{integer,1839,13},
        {call,1839,
         {remote,1839,{atom,1839,erlang},{atom,1839,setelement}},
         [{integer,1839,12},
          {call,1839,
           {remote,1839,{atom,1839,erlang},{atom,1839,element}},
           [{integer,1839,14},{var,1839,'NewLog2'}]},
          {integer,1839,0}]},
        {integer,1839,0}]}},
     {call,1840,
      {atom,1840,do_change_size},
      [{call,1840,
        {remote,1840,{atom,1840,erlang},{atom,1840,setelement}},
        [{integer,1840,11},
         {call,1840,
          {remote,1840,{atom,1840,erlang},{atom,1840,setelement}},
          [{integer,1840,14},{var,1840,'NewLog2'},{var,1840,'NewHandle'}]},
         {var,1840,'OldHead'}]},
       {tuple,1841,[{var,1841,'MaxB'},{var,1841,'MaxF'}]}]}]}]},
 {function,1843,trunc_wrap,1,
  [{clause,1843,
    [{var,1843,'L'}],
    [],
    [{'case',1844,
      {call,1844,{atom,1844,do_inc_wrap_file},[{var,1844,'L'}]},
      [{clause,1845,
        [{tuple,1845,[{atom,1845,ok},{var,1845,'L2'},{var,1845,'_Lost'}]}],
        [],
        [{var,1846,'L2'}]},
       {clause,1847,
        [{tuple,1847,[{atom,1847,error},{var,1847,'Error'},{var,1847,'_L2'}]}],
        [],
        [{call,1848,{atom,1848,throw},[{var,1848,'Error'}]}]}]}]}]},
 {function,1851,do_chunk,4,
  [{clause,1851,
    [{match,1851,
      {tuple,1851,
       [{atom,1851,log},
        {var,1851,'_'},
        {var,1851,'_'},
        {var,1851,'_'},
        {var,1851,'_'},
        {var,1851,'_'},
        {var,1851,'_'},
        {var,1851,'_'},
        {var,1851,'_'},
        {atom,1851,halt_int},
        {var,1851,'_'},
        {var,1851,'_'},
        {var,1851,'_'},
        {var,1851,'Halt'},
        {var,1851,'_'}]},
      {var,1851,'L'}},
     {var,1851,'Pos'},
     {var,1851,'B'},
     {var,1851,'N'}],
    [],
    [{match,1852,
      {var,1852,'FdC'},
      {call,1852,
       {remote,1852,{atom,1852,erlang},{atom,1852,element}},
       [{integer,1852,2},{var,1852,'Halt'}]}},
     {match,1853,
      {tuple,1853,[{var,1853,'NewFdC'},{var,1853,'Reply'}]},
      {'case',1854,
       {call,1854,
        {remote,1854,{atom,1854,erlang},{atom,1854,element}},
        [{integer,1854,12},{var,1854,'L'}]},
       [{clause,1855,
         [{atom,1855,read_only}],
         [],
         [{call,1856,
           {remote,1856,{atom,1856,disk_log_1},{atom,1856,chunk_read_only}},
           [{var,1856,'FdC'},
            {call,1856,
             {remote,1856,{atom,1856,erlang},{atom,1856,element}},
             [{integer,1856,6},{var,1856,'L'}]},
            {var,1856,'Pos'},
            {var,1856,'B'},
            {var,1856,'N'}]}]},
        {clause,1857,
         [{atom,1857,read_write}],
         [],
         [{call,1858,
           {remote,1858,{atom,1858,disk_log_1},{atom,1858,chunk}},
           [{var,1858,'FdC'},
            {call,1858,
             {remote,1858,{atom,1858,erlang},{atom,1858,element}},
             [{integer,1858,6},{var,1858,'L'}]},
            {var,1858,'Pos'},
            {var,1858,'B'},
            {var,1858,'N'}]}]}]}},
     {call,1860,
      {atom,1860,put},
      [{atom,1860,log},
       {call,1860,
        {remote,1860,{atom,1860,erlang},{atom,1860,setelement}},
        [{integer,1860,14},
         {var,1860,'L'},
         {call,1860,
          {remote,1860,{atom,1860,erlang},{atom,1860,setelement}},
          [{integer,1860,2},{var,1860,'Halt'},{var,1860,'NewFdC'}]}]}]},
     {var,1861,'Reply'}]},
   {clause,1862,
    [{match,1863,
      {tuple,1862,
       [{atom,1862,log},
        {var,1862,'_'},
        {var,1862,'_'},
        {var,1862,'_'},
        {var,1862,'_'},
        {var,1862,'_'},
        {var,1862,'_'},
        {var,1862,'_'},
        {var,1862,'_'},
        {atom,1862,wrap_int},
        {var,1862,'_'},
        {atom,1862,read_only},
        {var,1862,'_'},
        {var,1863,'Handle'},
        {var,1862,'_'}]},
      {var,1863,'Log'}},
     {var,1863,'Pos'},
     {var,1863,'B'},
     {var,1863,'N'}],
    [],
    [{match,1864,
      {tuple,1864,[{var,1864,'NewHandle'},{var,1864,'Reply'}]},
      {call,1864,
       {remote,1864,{atom,1864,disk_log_1},{atom,1864,mf_int_chunk_read_only}},
       [{var,1864,'Handle'},{var,1864,'Pos'},{var,1864,'B'},{var,1864,'N'}]}},
     {call,1865,
      {atom,1865,put},
      [{atom,1865,log},
       {call,1865,
        {remote,1865,{atom,1865,erlang},{atom,1865,setelement}},
        [{integer,1865,14},{var,1865,'Log'},{var,1865,'NewHandle'}]}]},
     {var,1866,'Reply'}]},
   {clause,1867,
    [{match,1867,
      {tuple,1867,
       [{atom,1867,log},
        {var,1867,'_'},
        {var,1867,'_'},
        {var,1867,'_'},
        {var,1867,'_'},
        {var,1867,'_'},
        {var,1867,'_'},
        {var,1867,'_'},
        {var,1867,'_'},
        {atom,1867,wrap_int},
        {var,1867,'_'},
        {var,1867,'_'},
        {var,1867,'_'},
        {var,1867,'Handle'},
        {var,1867,'_'}]},
      {var,1867,'Log'}},
     {var,1867,'Pos'},
     {var,1867,'B'},
     {var,1867,'N'}],
    [],
    [{match,1868,
      {tuple,1868,[{var,1868,'NewHandle'},{var,1868,'Reply'}]},
      {call,1868,
       {remote,1868,{atom,1868,disk_log_1},{atom,1868,mf_int_chunk}},
       [{var,1868,'Handle'},{var,1868,'Pos'},{var,1868,'B'},{var,1868,'N'}]}},
     {call,1869,
      {atom,1869,put},
      [{atom,1869,log},
       {call,1869,
        {remote,1869,{atom,1869,erlang},{atom,1869,setelement}},
        [{integer,1869,14},{var,1869,'Log'},{var,1869,'NewHandle'}]}]},
     {var,1870,'Reply'}]},
   {clause,1871,
    [{var,1871,'Log'},{var,1871,'_Pos'},{var,1871,'_B'},{var,1871,'_'}],
    [],
    [{tuple,1872,
      [{atom,1872,error},
       {tuple,1872,
        [{atom,1872,format_external},
         {call,1872,
          {remote,1872,{atom,1872,erlang},{atom,1872,element}},
          [{integer,1872,3},{var,1872,'Log'}]}]}]}]}]},
 {function,1874,do_chunk_step,3,
  [{clause,1874,
    [{tuple,1874,
      [{atom,1874,log},
       {var,1874,'_'},
       {var,1874,'_'},
       {var,1874,'_'},
       {var,1874,'_'},
       {var,1874,'_'},
       {var,1874,'_'},
       {var,1874,'_'},
       {var,1874,'_'},
       {atom,1874,wrap_int},
       {var,1874,'_'},
       {var,1874,'_'},
       {var,1874,'_'},
       {var,1874,'Handle'},
       {var,1874,'_'}]},
     {var,1874,'Pos'},
     {var,1874,'N'}],
    [],
    [{call,1875,
      {remote,1875,{atom,1875,disk_log_1},{atom,1875,mf_int_chunk_step}},
      [{var,1875,'Handle'},{var,1875,'Pos'},{var,1875,'N'}]}]},
   {clause,1876,
    [{var,1876,'Log'},{var,1876,'_Pos'},{var,1876,'_N'}],
    [],
    [{tuple,1877,
      [{atom,1877,error},
       {tuple,1877,
        [{atom,1877,not_internal_wrap},
         {call,1877,
          {remote,1877,{atom,1877,erlang},{atom,1877,element}},
          [{integer,1877,3},{var,1877,'Log'}]}]}]}]}]},
 {function,1880,replies,2,
  [{clause,1880,
    [{var,1880,'Pids'},{var,1880,'Reply'}],
    [],
    [{match,1881,
      {var,1881,'M'},
      {tuple,1881,
       [{atom,1881,disk_log},
        {call,1881,{atom,1881,self},[]},
        {var,1881,'Reply'}]}},
     {call,1882,{atom,1882,send_reply},[{var,1882,'Pids'},{var,1882,'M'}]}]}]},
 {function,1884,send_reply,2,
  [{clause,1884,
    [{var,1884,'Pid'},{var,1884,'M'}],
    [[{call,1884,{atom,1884,is_pid},[{var,1884,'Pid'}]}]],
    [{op,1885,'!',{var,1885,'Pid'},{var,1885,'M'}},{atom,1886,ok}]},
   {clause,1887,
    [{cons,1887,{var,1887,'Pid'},{var,1887,'Pids'}},{var,1887,'M'}],
    [],
    [{op,1888,'!',{var,1888,'Pid'},{var,1888,'M'}},
     {call,1889,{atom,1889,send_reply},[{var,1889,'Pids'},{var,1889,'M'}]}]},
   {clause,1890,[{nil,1890},{var,1890,'_M'}],[],[{atom,1891,ok}]}]},
 {function,1893,reply,3,
  [{clause,1893,
    [{var,1893,'To'},{var,1893,'Reply'},{var,1893,'S'}],
    [],
    [{op,1894,'!',
      {var,1894,'To'},
      {tuple,1894,
       [{atom,1894,disk_log},
        {call,1894,{atom,1894,self},[]},
        {var,1894,'Reply'}]}},
     {call,1895,{atom,1895,loop},[{var,1895,'S'}]}]}]},
 {function,1897,req,2,
  [{clause,1897,
    [{var,1897,'Log'},{var,1897,'R'}],
    [],
    [{'case',1898,
      {call,1898,
       {remote,1898,{atom,1898,disk_log_server},{atom,1898,get_log_pids}},
       [{var,1898,'Log'}]},
      [{clause,1899,
        [{tuple,1899,[{atom,1899,local},{var,1899,'Pid'}]}],
        [],
        [{call,1900,
          {atom,1900,monitor_request},
          [{var,1900,'Pid'},{var,1900,'R'}]}]},
       {clause,1901,
        [{atom,1901,undefined}],
        [],
        [{tuple,1902,[{atom,1902,error},{atom,1902,no_such_log}]}]},
       {clause,1903,
        [{tuple,1903,[{atom,1903,distributed},{var,1903,'Pids'}]}],
        [],
        [{call,1904,
          {atom,1904,multi_req},
          [{tuple,1904,[{call,1904,{atom,1904,self},[]},{var,1904,'R'}]},
           {var,1904,'Pids'}]}]}]}]}]},
 {function,1907,multi_req,2,
  [{clause,1907,
    [{var,1907,'Msg'},{var,1907,'Pids'}],
    [],
    [{match,1908,
      {var,1908,'Refs'},
      {call,1909,
       {remote,1909,{atom,1909,lists},{atom,1909,map}},
       [{'fun',1909,
         {clauses,
          [{clause,1909,
            [{var,1909,'Pid'}],
            [],
            [{match,1910,
              {var,1910,'Ref'},
              {call,1910,
               {remote,1910,{atom,1910,erlang},{atom,1910,monitor}},
               [{atom,1910,process},{var,1910,'Pid'}]}},
             {op,1911,'!',{var,1911,'Pid'},{var,1911,'Msg'}},
             {tuple,1912,[{var,1912,'Pid'},{var,1912,'Ref'}]}]}]}},
        {var,1913,'Pids'}]}},
     {call,1914,
      {remote,1914,{atom,1914,lists},{atom,1914,foldl}},
      [{'fun',1914,
        {clauses,
         [{clause,1914,
           [{tuple,1914,[{var,1914,'Pid'},{var,1914,'Ref'}]},
            {var,1914,'Reply'}],
           [],
           [{'receive',1915,
             [{clause,1916,
               [{tuple,1916,
                 [{atom,1916,'DOWN'},
                  {var,1916,'Ref'},
                  {atom,1916,process},
                  {var,1916,'Pid'},
                  {var,1916,'_Info'}]}],
               [],
               [{var,1917,'Reply'}]},
              {clause,1918,
               [{tuple,1918,
                 [{atom,1918,disk_log},{var,1918,'Pid'},{var,1918,'_Reply'}]}],
               [],
               [{call,1919,
                 {remote,1919,{atom,1919,erlang},{atom,1919,demonitor}},
                 [{var,1919,'Ref'},{cons,1919,{atom,1919,flush},{nil,1919}}]},
                {atom,1920,ok}]}]}]}]}},
       {tuple,1922,[{atom,1922,error},{atom,1922,nonode}]},
       {var,1922,'Refs'}]}]}]},
 {function,1924,sreq,2,
  [{clause,1924,
    [{var,1924,'Log'},{var,1924,'R'}],
    [],
    [{'case',1925,
      {call,1925,
       {atom,1925,nearby_pid},
       [{var,1925,'Log'},{call,1925,{atom,1925,node},[]}]},
      [{clause,1926,
        [{atom,1926,undefined}],
        [],
        [{tuple,1927,[{atom,1927,error},{atom,1927,no_such_log}]}]},
       {clause,1928,
        [{var,1928,'Pid'}],
        [],
        [{call,1929,
          {atom,1929,monitor_request},
          [{var,1929,'Pid'},{var,1929,'R'}]}]}]}]}]},
 {function,1933,lreq,3,
  [{clause,1933,
    [{var,1933,'Log'},{var,1933,'R'},{var,1933,'Node'}],
    [],
    [{'case',1934,
      {call,1934,{atom,1934,nearby_pid},[{var,1934,'Log'},{var,1934,'Node'}]},
      [{clause,1935,
        [{var,1935,'Pid'}],
        [[{call,1935,{atom,1935,is_pid},[{var,1935,'Pid'}]},
          {op,1935,'=:=',
           {call,1935,{atom,1935,node},[{var,1935,'Pid'}]},
           {var,1935,'Node'}}]],
        [{call,1936,
          {atom,1936,monitor_request},
          [{var,1936,'Pid'},{var,1936,'R'}]}]},
       {clause,1937,
        [{var,1937,'_Else'}],
        [],
        [{tuple,1938,[{atom,1938,error},{atom,1938,no_such_log}]}]}]}]}]},
 {function,1941,nearby_pid,2,
  [{clause,1941,
    [{var,1941,'Log'},{var,1941,'Node'}],
    [],
    [{'case',1942,
      {call,1942,
       {remote,1942,{atom,1942,disk_log_server},{atom,1942,get_log_pids}},
       [{var,1942,'Log'}]},
      [{clause,1943,[{atom,1943,undefined}],[],[{atom,1944,undefined}]},
       {clause,1945,
        [{tuple,1945,[{atom,1945,local},{var,1945,'Pid'}]}],
        [],
        [{var,1946,'Pid'}]},
       {clause,1947,
        [{tuple,1947,[{atom,1947,distributed},{var,1947,'Pids'}]}],
        [],
        [{call,1948,
          {atom,1948,get_near_pid},
          [{var,1948,'Pids'},{var,1948,'Node'}]}]}]}]}]},
 {function,1953,get_near_pid,2,
  [{clause,1953,
    [{cons,1953,{var,1953,'Pid'},{var,1953,'_'}},{var,1953,'Node'}],
    [[{op,1953,'=:=',
       {call,1953,{atom,1953,node},[{var,1953,'Pid'}]},
       {var,1953,'Node'}}]],
    [{var,1953,'Pid'}]},
   {clause,1954,
    [{cons,1954,{var,1954,'Pid'},{nil,1954}},{var,1954,'_'}],
    [],
    [{var,1954,'Pid'}]},
   {clause,1955,
    [{cons,1955,{var,1955,'_'},{var,1955,'T'}},{var,1955,'Node'}],
    [],
    [{call,1955,
      {atom,1955,get_near_pid},
      [{var,1955,'T'},{var,1955,'Node'}]}]}]},
 {function,1957,monitor_request,2,
  [{clause,1957,
    [{var,1957,'Pid'},{var,1957,'Req'}],
    [],
    [{match,1958,
      {var,1958,'Ref'},
      {call,1958,
       {remote,1958,{atom,1958,erlang},{atom,1958,monitor}},
       [{atom,1958,process},{var,1958,'Pid'}]}},
     {op,1959,'!',
      {var,1959,'Pid'},
      {tuple,1959,[{call,1959,{atom,1959,self},[]},{var,1959,'Req'}]}},
     {'receive',1960,
      [{clause,1961,
        [{tuple,1961,
          [{atom,1961,'DOWN'},
           {var,1961,'Ref'},
           {atom,1961,process},
           {var,1961,'Pid'},
           {var,1961,'_Info'}]}],
        [],
        [{tuple,1962,[{atom,1962,error},{atom,1962,no_such_log}]}]},
       {clause,1963,
        [{tuple,1963,
          [{atom,1963,disk_log},{var,1963,'Pid'},{var,1963,'Reply'}]}],
        [[{op,1963,'orelse',
           {op,1963,'not',
            {call,1963,{atom,1963,is_tuple},[{var,1963,'Reply'}]}},
           {op,1964,'=/=',
            {call,1964,
             {atom,1964,element},
             [{integer,1964,2},{var,1964,'Reply'}]},
            {atom,1964,disk_log_stopped}}}]],
        [{call,1965,
          {remote,1965,{atom,1965,erlang},{atom,1965,demonitor}},
          [{var,1965,'Ref'},{cons,1965,{atom,1965,flush},{nil,1965}}]},
         {var,1966,'Reply'}]}]}]}]},
 {function,1969,req2,2,
  [{clause,1969,
    [{var,1969,'Pid'},{var,1969,'R'}],
    [],
    [{call,1970,
      {atom,1970,monitor_request},
      [{var,1970,'Pid'},{var,1970,'R'}]}]}]},
 {function,1972,merge_head,2,
  [{clause,1972,[{atom,1972,none},{var,1972,'Head'}],[],[{var,1973,'Head'}]},
   {clause,1974,[{var,1974,'Head'},{var,1974,'_'}],[],[{var,1975,'Head'}]}]},
 {function,1978,wrap_file_extensions,1,
  [{clause,1978,
    [{var,1978,'File'}],
    [],
    [{match,1979,
      {tuple,1979,
       [{var,1979,'_CurF'},
        {var,1979,'_CurFSz'},
        {var,1979,'_TotSz'},
        {var,1979,'NoOfFiles'}]},
      {call,1980,
       {remote,1980,{atom,1980,disk_log_1},{atom,1980,read_index_file}},
       [{var,1980,'File'}]}},
     {match,1981,
      {var,1981,'Fs'},
      {'if',1981,
       [{clause,1982,[],
         [[{op,1982,'>=',{var,1982,'NoOfFiles'},{integer,1982,1}}]],
         [{call,1983,
           {remote,1983,{atom,1983,lists},{atom,1983,seq}},
           [{integer,1983,1},{var,1983,'NoOfFiles'}]}]},
        {clause,1984,[],
         [[{op,1984,'=:=',{var,1984,'NoOfFiles'},{integer,1984,0}}]],
         [{nil,1985}]}]}},
     {match,1987,
      {var,1987,'Fun'},
      {'fun',1987,
       {clauses,
        [{clause,1987,
          [{var,1987,'Ext'}],
          [],
          [{'case',1988,
            {call,1988,
             {remote,1988,{atom,1988,file},{atom,1988,read_file_info}},
             [{call,1988,
               {atom,1988,add_ext},
               [{var,1988,'File'},{var,1988,'Ext'}]}]},
            [{clause,1989,
              [{tuple,1989,[{atom,1989,ok},{var,1989,'_'}]}],
              [],
              [{atom,1990,true}]},
             {clause,1991,[{var,1991,'_Else'}],[],[{atom,1992,false}]}]}]}]}}},
     {call,1995,
      {remote,1995,{atom,1995,lists},{atom,1995,filter}},
      [{var,1995,'Fun'},
       {cons,1995,
        {string,1995,"idx"},
        {cons,1995,{string,1995,"siz"},{var,1995,'Fs'}}}]}]}]},
 {function,1997,add_ext,2,
  [{clause,1997,
    [{var,1997,'File'},{var,1997,'Ext'}],
    [],
    [{call,1998,
      {remote,1998,{atom,1998,lists},{atom,1998,concat}},
      [{cons,1998,
        {var,1998,'File'},
        {cons,1998,
         {string,1998,"."},
         {cons,1998,{var,1998,'Ext'},{nil,1998}}}}]}]}]},
 {function,2000,notify,2,
  [{clause,2000,
    [{var,2000,'Log'},{var,2000,'R'}],
    [],
    [{'case',2001,
      {call,2001,
       {remote,2001,{atom,2001,disk_log_server},{atom,2001,get_log_pids}},
       [{var,2001,'Log'}]},
      [{clause,2002,
        [{atom,2002,undefined}],
        [],
        [{tuple,2003,[{atom,2003,error},{atom,2003,no_such_log}]}]},
       {clause,2004,
        [{tuple,2004,[{atom,2004,local},{var,2004,'Pid'}]}],
        [],
        [{op,2005,'!',{var,2005,'Pid'},{var,2005,'R'}},{atom,2006,ok}]},
       {clause,2007,
        [{tuple,2007,[{atom,2007,distributed},{var,2007,'Pids'}]}],
        [],
        [{call,2008,
          {remote,2008,{atom,2008,lists},{atom,2008,foreach}},
          [{'fun',2008,
            {clauses,
             [{clause,2008,
               [{var,2008,'Pid'}],
               [],
               [{op,2008,'!',{var,2008,'Pid'},{var,2008,'R'}}]}]}},
           {var,2008,'Pids'}]},
         {atom,2009,ok}]}]}]}]},
 {function,2012,notify_owners_wrap,1,
  [{clause,2012,[{nil,2012}],[],[{atom,2013,ok}]},
   {clause,2014,
    [{cons,2014,{var,2014,'N'},{var,2014,'Wraps'}}],
    [],
    [{call,2015,
      {atom,2015,notify_owners},
      [{tuple,2015,[{atom,2015,wrap},{var,2015,'N'}]}]},
     {call,2016,{atom,2016,notify_owners_wrap},[{var,2016,'Wraps'}]}]}]},
 {function,2018,notify_owners,1,
  [{clause,2018,
    [{var,2018,'Note'}],
    [],
    [{match,2019,{var,2019,'L'},{call,2019,{atom,2019,get},[{atom,2019,log}]}},
     {match,2020,
      {var,2020,'Msg'},
      {tuple,2020,
       [{atom,2020,disk_log},
        {call,2020,{atom,2020,node},[]},
        {call,2020,
         {remote,2020,{atom,2020,erlang},{atom,2020,element}},
         [{integer,2020,3},{var,2020,'L'}]},
        {var,2020,'Note'}]}},
     {call,2021,
      {remote,2021,{atom,2021,lists},{atom,2021,foreach}},
      [{'fun',2021,
        {clauses,
         [{clause,2021,
           [{tuple,2021,[{var,2021,'Pid'},{atom,2021,true}]}],
           [],
           [{op,2021,'!',{var,2021,'Pid'},{var,2021,'Msg'}}]},
          {clause,2022,[{var,2022,'_'}],[],[{atom,2022,ok}]}]}},
       {call,2023,
        {remote,2023,{atom,2023,erlang},{atom,2023,element}},
        [{integer,2023,7},{var,2023,'L'}]}]}]}]},
 {function,2025,cache_error,2,
  [{clause,2025,
    [{var,2025,'S'},{var,2025,'Pids'}],
    [],
    [{match,2026,
      {var,2026,'Error'},
      {call,2026,
       {remote,2026,{atom,2026,erlang},{atom,2026,element}},
       [{integer,2026,9},{var,2026,'S'}]}},
     {match,2027,
      {atom,2027,ok},
      {call,2027,{atom,2027,replies},[{var,2027,'Pids'},{var,2027,'Error'}]}},
     {call,2028,
      {atom,2028,state_err},
      [{call,2028,
        {remote,2028,{atom,2028,erlang},{atom,2028,setelement}},
        [{integer,2028,9},{var,2028,'S'},{atom,2028,ok}]},
       {var,2028,'Error'}]}]}]},
 {function,2030,state_ok,1,
  [{clause,2030,
    [{var,2030,'S'}],
    [],
    [{call,2031,{atom,2031,state_err},[{var,2031,'S'},{atom,2031,ok}]}]}]},
 {function,2035,state_err,2,
  [{clause,2035,
    [{var,2035,'S'},{var,2035,'Err'}],
    [[{op,2035,'=:=',
       {call,2035,
        {remote,2035,{atom,2035,erlang},{atom,2035,element}},
        [{integer,2035,8},{var,2035,'S'}]},
       {var,2035,'Err'}}]],
    [{var,2035,'S'}]},
   {clause,2036,
    [{var,2036,'S'},{var,2036,'Err'}],
    [],
    [{call,2037,
      {atom,2037,notify_owners},
      [{tuple,2037,[{atom,2037,error_status},{var,2037,'Err'}]}]},
     {call,2038,
      {remote,2038,{atom,2038,erlang},{atom,2038,setelement}},
      [{integer,2038,8},{var,2038,'S'},{var,2038,'Err'}]}]}]}]
