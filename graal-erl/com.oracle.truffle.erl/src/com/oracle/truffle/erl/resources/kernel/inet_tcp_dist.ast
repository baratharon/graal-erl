inet_tcp_dist
[{error_logger,error_msg,2}]
[]
[{function,55,select,1,
  [{clause,55,
    [{var,55,'Node'}],
    [],
    [{'case',56,
      {call,56,
       {atom,56,split_node},
       [{call,56,{atom,56,atom_to_list},[{var,56,'Node'}]},
        {char,56,64},
        {nil,56}]},
      [{clause,57,
        [{cons,57,{var,57,'_'},{cons,57,{var,57,'_Host'},{nil,57}}}],
        [],
        [{atom,57,true}]},
       {clause,58,[{var,58,'_'}],[],[{atom,58,false}]}]}]}]},
 {function,66,listen,1,
  [{clause,66,
    [{var,66,'Name'}],
    [],
    [{'case',67,
      {call,67,
       {atom,67,do_listen},
       [{cons,67,
         {tuple,67,[{atom,67,active},{atom,67,false}]},
         {cons,67,
          {tuple,67,[{atom,67,packet},{integer,67,2}]},
          {cons,67,
           {tuple,67,[{atom,67,reuseaddr},{atom,67,true}]},
           {nil,67}}}}]},
      [{clause,68,
        [{tuple,68,[{atom,68,ok},{var,68,'Socket'}]}],
        [],
        [{match,69,
          {var,69,'TcpAddress'},
          {call,69,{atom,69,get_tcp_address},[{var,69,'Socket'}]}},
         {match,70,
          {tuple,70,[{var,70,'_'},{var,70,'Port'}]},
          {call,70,
           {remote,70,{atom,70,erlang},{atom,70,element}},
           [{integer,70,2},{var,70,'TcpAddress'}]}},
         {'case',71,
          {call,71,
           {remote,71,{atom,71,erl_epmd},{atom,71,register_node}},
           [{var,71,'Name'},{var,71,'Port'}]},
          [{clause,72,
            [{tuple,72,[{atom,72,ok},{var,72,'Creation'}]}],
            [],
            [{tuple,73,
              [{atom,73,ok},
               {tuple,73,
                [{var,73,'Socket'},
                 {var,73,'TcpAddress'},
                 {var,73,'Creation'}]}]}]},
           {clause,74,[{var,74,'Error'}],[],[{var,75,'Error'}]}]}]},
       {clause,77,[{var,77,'Error'}],[],[{var,78,'Error'}]}]}]}]},
 {function,81,do_listen,1,
  [{clause,81,
    [{var,81,'Options'}],
    [],
    [{match,82,
      {tuple,82,[{var,82,'First'},{var,82,'Last'}]},
      {'case',82,
       {call,82,
        {remote,82,{atom,82,application},{atom,82,get_env}},
        [{atom,82,kernel},{atom,82,inet_dist_listen_min}]},
       [{clause,83,
         [{tuple,83,[{atom,83,ok},{var,83,'N'}]}],
         [[{call,83,{atom,83,is_integer},[{var,83,'N'}]}]],
         [{'case',84,
           {call,84,
            {remote,84,{atom,84,application},{atom,84,get_env}},
            [{atom,84,kernel},{atom,85,inet_dist_listen_max}]},
           [{clause,86,
             [{tuple,86,[{atom,86,ok},{var,86,'M'}]}],
             [[{call,86,{atom,86,is_integer},[{var,86,'M'}]}]],
             [{tuple,87,[{var,87,'N'},{var,87,'M'}]}]},
            {clause,88,
             [{var,88,'_'}],
             [],
             [{tuple,89,[{var,89,'N'},{var,89,'N'}]}]}]}]},
        {clause,91,
         [{var,91,'_'}],
         [],
         [{tuple,92,[{integer,92,0},{integer,92,0}]}]}]}},
     {call,94,
      {atom,94,do_listen},
      [{var,94,'First'},
       {var,94,'Last'},
       {call,94,
        {atom,94,listen_options},
        [{cons,94,
          {tuple,94,[{atom,94,backlog},{integer,94,128}]},
          {var,94,'Options'}}]}]}]}]},
 {function,96,do_listen,3,
  [{clause,96,
    [{var,96,'First'},{var,96,'Last'},{var,96,'_'}],
    [[{op,96,'>',{var,96,'First'},{var,96,'Last'}}]],
    [{tuple,97,[{atom,97,error},{atom,97,eaddrinuse}]}]},
   {clause,98,
    [{var,98,'First'},{var,98,'Last'},{var,98,'Options'}],
    [],
    [{'case',99,
      {call,99,
       {remote,99,{atom,99,inet_tcp},{atom,99,listen}},
       [{var,99,'First'},{var,99,'Options'}]},
      [{clause,100,
        [{tuple,100,[{atom,100,error},{atom,100,eaddrinuse}]}],
        [],
        [{call,101,
          {atom,101,do_listen},
          [{op,101,'+',{var,101,'First'},{integer,101,1}},
           {var,101,'Last'},
           {var,101,'Options'}]}]},
       {clause,102,[{var,102,'Other'}],[],[{var,103,'Other'}]}]}]}]},
 {function,106,listen_options,1,
  [{clause,106,
    [{var,106,'Opts0'}],
    [],
    [{match,107,
      {var,107,'Opts1'},
      {'case',108,
       {call,108,
        {remote,108,{atom,108,application},{atom,108,get_env}},
        [{atom,108,kernel},{atom,108,inet_dist_use_interface}]},
       [{clause,109,
         [{tuple,109,[{atom,109,ok},{var,109,'Ip'}]}],
         [],
         [{cons,110,
           {tuple,110,[{atom,110,ip},{var,110,'Ip'}]},
           {var,110,'Opts0'}}]},
        {clause,111,[{var,111,'_'}],[],[{var,112,'Opts0'}]}]}},
     {'case',114,
      {call,114,
       {remote,114,{atom,114,application},{atom,114,get_env}},
       [{atom,114,kernel},{atom,114,inet_dist_listen_options}]},
      [{clause,115,
        [{tuple,115,[{atom,115,ok},{var,115,'ListenOpts'}]}],
        [],
        [{op,116,'++',{var,116,'ListenOpts'},{var,116,'Opts1'}}]},
       {clause,117,[{var,117,'_'}],[],[{var,118,'Opts1'}]}]}]}]},
 {function,126,accept,1,
  [{clause,126,
    [{var,126,'Listen'}],
    [],
    [{call,127,
      {atom,127,spawn_opt},
      [{atom,-1,inet_tcp_dist},
       {atom,127,accept_loop},
       {cons,127,
        {call,127,{atom,127,self},[]},
        {cons,127,{var,127,'Listen'},{nil,127}}},
       {cons,127,
        {atom,127,link},
        {cons,127,
         {tuple,127,[{atom,127,priority},{atom,127,max}]},
         {nil,127}}}]}]}]},
 {function,129,accept_loop,2,
  [{clause,129,
    [{var,129,'Kernel'},{var,129,'Listen'}],
    [],
    [{'case',130,
      {call,130,
       {remote,130,{atom,130,inet_tcp},{atom,130,accept}},
       [{var,130,'Listen'}]},
      [{clause,131,
        [{tuple,131,[{atom,131,ok},{var,131,'Socket'}]}],
        [],
        [{op,132,'!',
          {var,132,'Kernel'},
          {tuple,132,
           [{atom,132,accept},
            {call,132,{atom,132,self},[]},
            {var,132,'Socket'},
            {atom,132,inet},
            {atom,132,tcp}]}},
         {match,133,
          {var,133,'_'},
          {call,133,
           {atom,133,controller},
           [{var,133,'Kernel'},{var,133,'Socket'}]}},
         {call,134,
          {atom,134,accept_loop},
          [{var,134,'Kernel'},{var,134,'Listen'}]}]},
       {clause,135,
        [{var,135,'Error'}],
        [],
        [{call,136,{atom,136,exit},[{var,136,'Error'}]}]}]}]}]},
 {function,139,controller,2,
  [{clause,139,
    [{var,139,'Kernel'},{var,139,'Socket'}],
    [],
    [{'receive',140,
      [{clause,141,
        [{tuple,141,
          [{var,141,'Kernel'},{atom,141,controller},{var,141,'Pid'}]}],
        [],
        [{call,142,
          {atom,142,flush_controller},
          [{var,142,'Pid'},{var,142,'Socket'}]},
         {call,143,
          {remote,143,{atom,143,inet_tcp},{atom,143,controlling_process}},
          [{var,143,'Socket'},{var,143,'Pid'}]},
         {call,144,
          {atom,144,flush_controller},
          [{var,144,'Pid'},{var,144,'Socket'}]},
         {op,145,'!',
          {var,145,'Pid'},
          {tuple,145,[{call,145,{atom,145,self},[]},{atom,145,controller}]}}]},
       {clause,146,
        [{tuple,146,[{var,146,'Kernel'},{atom,146,unsupported_protocol}]}],
        [],
        [{call,147,{atom,147,exit},[{atom,147,unsupported_protocol}]}]}]}]}]},
 {function,150,flush_controller,2,
  [{clause,150,
    [{var,150,'Pid'},{var,150,'Socket'}],
    [],
    [{'receive',151,
      [{clause,152,
        [{tuple,152,[{atom,152,tcp},{var,152,'Socket'},{var,152,'Data'}]}],
        [],
        [{op,153,'!',
          {var,153,'Pid'},
          {tuple,153,[{atom,153,tcp},{var,153,'Socket'},{var,153,'Data'}]}},
         {call,154,
          {atom,154,flush_controller},
          [{var,154,'Pid'},{var,154,'Socket'}]}]},
       {clause,155,
        [{tuple,155,[{atom,155,tcp_closed},{var,155,'Socket'}]}],
        [],
        [{op,156,'!',
          {var,156,'Pid'},
          {tuple,156,[{atom,156,tcp_closed},{var,156,'Socket'}]}},
         {call,157,
          {atom,157,flush_controller},
          [{var,157,'Pid'},{var,157,'Socket'}]}]}],
      {integer,158,0},
      [{atom,159,ok}]}]}]},
 {function,167,accept_connection,5,
  [{clause,167,
    [{var,167,'AcceptPid'},
     {var,167,'Socket'},
     {var,167,'MyNode'},
     {var,167,'Allowed'},
     {var,167,'SetupTime'}],
    [],
    [{call,168,
      {atom,168,spawn_opt},
      [{atom,-1,inet_tcp_dist},
       {atom,168,do_accept},
       {cons,169,
        {call,169,{atom,169,self},[]},
        {cons,169,
         {var,169,'AcceptPid'},
         {cons,169,
          {var,169,'Socket'},
          {cons,169,
           {var,169,'MyNode'},
           {cons,169,
            {var,169,'Allowed'},
            {cons,169,{var,169,'SetupTime'},{nil,169}}}}}}},
       {cons,170,
        {atom,170,link},
        {cons,170,
         {tuple,170,[{atom,170,priority},{atom,170,max}]},
         {nil,170}}}]}]}]},
 {function,172,do_accept,6,
  [{clause,172,
    [{var,172,'Kernel'},
     {var,172,'AcceptPid'},
     {var,172,'Socket'},
     {var,172,'MyNode'},
     {var,172,'Allowed'},
     {var,172,'SetupTime'}],
    [],
    [{'receive',173,
      [{clause,174,
        [{tuple,174,[{var,174,'AcceptPid'},{atom,174,controller}]}],
        [],
        [{match,175,
          {var,175,'Timer'},
          {call,175,
           {remote,175,{atom,175,dist_util},{atom,175,start_timer}},
           [{var,175,'SetupTime'}]}},
         {'case',176,
          {call,176,{atom,176,check_ip},[{var,176,'Socket'}]},
          [{clause,177,
            [{atom,177,true}],
            [],
            [{match,178,
              {var,178,'HSData'},
              {tuple,178,
               [{atom,178,hs_data},
                {var,179,'Kernel'},
                {atom,178,undefined},
                {var,180,'MyNode'},
                {var,181,'Socket'},
                {var,182,'Timer'},
                {integer,183,0},
                {var,184,'Allowed'},
                {atom,178,undefined},
                {atom,178,undefined},
                {atom,178,undefined},
                {'fun',185,
                 {clauses,
                  [{clause,185,
                    [{var,185,'S'},{var,185,'D'}],
                    [],
                    [{call,185,
                      {remote,185,{atom,185,inet_tcp},{atom,185,send}},
                      [{var,185,'S'},{var,185,'D'}]}]}]}},
                {'fun',186,
                 {clauses,
                  [{clause,186,
                    [{var,186,'S'},{var,186,'N'},{var,186,'T'}],
                    [],
                    [{call,186,
                      {remote,186,{atom,186,inet_tcp},{atom,186,recv}},
                      [{var,186,'S'},{var,186,'N'},{var,186,'T'}]}]}]}},
                {'fun',189,
                 {clauses,
                  [{clause,189,
                    [{var,189,'S'}],
                    [],
                    [{call,190,
                      {remote,190,{atom,190,inet},{atom,190,setopts}},
                      [{var,190,'S'},
                       {cons,191,
                        {tuple,191,[{atom,191,active},{atom,191,false}]},
                        {cons,192,
                         {tuple,192,[{atom,192,packet},{integer,192,4}]},
                         {cons,193,
                          {call,193,{atom,193,nodelay},[]},
                          {nil,193}}}}]}]}]}},
                {'fun',196,
                 {clauses,
                  [{clause,196,
                    [{var,196,'S'}],
                    [],
                    [{call,197,
                      {remote,197,{atom,197,inet},{atom,197,setopts}},
                      [{var,197,'S'},
                       {cons,198,
                        {tuple,198,[{atom,198,active},{atom,198,true}]},
                        {cons,199,
                         {tuple,199,[{atom,199,deliver},{atom,199,port}]},
                         {cons,200,
                          {tuple,200,[{atom,200,packet},{integer,200,4}]},
                          {cons,201,
                           {call,201,{atom,201,nodelay},[]},
                           {nil,201}}}}}]}]}]}},
                {'fun',203,
                 {clauses,
                  [{clause,203,
                    [{var,203,'S'}],
                    [],
                    [{call,204,
                      {remote,204,{atom,204,inet},{atom,204,getll}},
                      [{var,204,'S'}]}]}]}},
                {'fun',206,{function,get_remote_id,2}},
                {'fun',207,
                 {function,
                  {atom,-1,inet_tcp_dist},
                  {atom,207,tick},
                  {integer,207,1}}},
                {'fun',208,
                 {function,
                  {atom,-1,inet_tcp_dist},
                  {atom,208,getstat},
                  {integer,208,1}}},
                {atom,77,normal}]}},
             {call,210,
              {remote,210,
               {atom,210,dist_util},
               {atom,210,handshake_other_started}},
              [{var,210,'HSData'}]}]},
           {clause,211,
            [{tuple,211,[{atom,211,false},{var,211,'IP'}]}],
            [],
            [{call,212,
              {atom,212,error_msg},
              [{string,212,
                "** Connection attempt from disallowed IP ~w ** ~n"},
               {cons,213,{var,213,'IP'},{nil,213}}]},
             {call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,inet_tcp_dist},
               {integer,41,41},
               {atom,214,no_node}]}]}]}]}]}]}]},
 {function,222,nodelay,0,
  [{clause,222,[],[],
    [{'case',223,
      {call,223,
       {remote,223,{atom,223,application},{atom,223,get_env}},
       [{atom,223,kernel},{atom,223,dist_nodelay}]},
      [{clause,224,
        [{atom,224,undefined}],
        [],
        [{tuple,225,[{atom,225,nodelay},{atom,225,true}]}]},
       {clause,226,
        [{tuple,226,[{atom,226,ok},{atom,226,true}]}],
        [],
        [{tuple,227,[{atom,227,nodelay},{atom,227,true}]}]},
       {clause,228,
        [{tuple,228,[{atom,228,ok},{atom,228,false}]}],
        [],
        [{tuple,229,[{atom,229,nodelay},{atom,229,false}]}]},
       {clause,230,
        [{var,230,'_'}],
        [],
        [{tuple,231,[{atom,231,nodelay},{atom,231,true}]}]}]}]}]},
 {function,238,get_remote_id,2,
  [{clause,238,
    [{var,238,'Socket'},{var,238,'Node'}],
    [],
    [{'case',239,
      {call,239,
       {remote,239,{atom,239,inet},{atom,239,peername}},
       [{var,239,'Socket'}]},
      [{clause,240,
        [{tuple,240,[{atom,240,ok},{var,240,'Address'}]}],
        [],
        [{'case',241,
          {call,241,
           {atom,241,split_node},
           [{call,241,{atom,241,atom_to_list},[{var,241,'Node'}]},
            {char,241,64},
            {nil,241}]},
          [{clause,242,
            [{cons,242,{var,242,'_'},{cons,242,{var,242,'Host'},{nil,242}}}],
            [],
            [{tuple,243,
              [{atom,243,net_address},
               {var,243,'Address'},
               {var,243,'Host'},
               {atom,244,tcp},
               {atom,244,inet}]}]},
           {clause,245,
            [{var,245,'_'}],
            [],
            [{call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,inet_tcp_dist},
               {integer,41,41},
               {atom,247,no_node}]}]}]}]},
       {clause,249,
        [{tuple,249,[{atom,249,error},{var,249,'_Reason'}]}],
        [],
        [{call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,inet_tcp_dist},
           {integer,41,41},
           {atom,250,no_node}]}]}]}]}]},
 {function,258,setup,5,
  [{clause,258,
    [{var,258,'Node'},
     {var,258,'Type'},
     {var,258,'MyNode'},
     {var,258,'LongOrShortNames'},
     {var,258,'SetupTime'}],
    [],
    [{call,259,
      {atom,259,spawn_opt},
      [{atom,-1,inet_tcp_dist},
       {atom,259,do_setup},
       {cons,260,
        {call,260,{atom,260,self},[]},
        {cons,260,
         {var,260,'Node'},
         {cons,260,
          {var,260,'Type'},
          {cons,260,
           {var,260,'MyNode'},
           {cons,260,
            {var,260,'LongOrShortNames'},
            {cons,260,{var,260,'SetupTime'},{nil,260}}}}}}},
       {cons,261,
        {atom,261,link},
        {cons,261,
         {tuple,261,[{atom,261,priority},{atom,261,max}]},
         {nil,261}}}]}]}]},
 {function,263,do_setup,6,
  [{clause,263,
    [{var,263,'Kernel'},
     {var,263,'Node'},
     {var,263,'Type'},
     {var,263,'MyNode'},
     {var,263,'LongOrShortNames'},
     {var,263,'SetupTime'}],
    [],
    [{atom,37,ok},
     {match,265,
      {cons,265,{var,265,'Name'},{cons,265,{var,265,'Address'},{nil,265}}},
      {call,265,
       {atom,265,splitnode},
       [{var,265,'Node'},{var,265,'LongOrShortNames'}]}},
     {'case',266,
      {call,266,
       {remote,266,{atom,266,inet},{atom,266,getaddr}},
       [{var,266,'Address'},{atom,266,inet}]},
      [{clause,267,
        [{tuple,267,[{atom,267,ok},{var,267,'Ip'}]}],
        [],
        [{match,268,
          {var,268,'Timer'},
          {call,268,
           {remote,268,{atom,268,dist_util},{atom,268,start_timer}},
           [{var,268,'SetupTime'}]}},
         {'case',269,
          {call,269,
           {remote,269,{atom,269,erl_epmd},{atom,269,port_please}},
           [{var,269,'Name'},{var,269,'Ip'}]},
          [{clause,270,
            [{tuple,270,
              [{atom,270,port},{var,270,'TcpPort'},{var,270,'Version'}]}],
            [],
            [{atom,37,ok},
             {call,273,
              {remote,273,{atom,273,dist_util},{atom,273,reset_timer}},
              [{var,273,'Timer'}]},
             {'case',274,
              {call,275,
               {remote,275,{atom,275,inet_tcp},{atom,275,connect}},
               [{var,276,'Ip'},
                {var,276,'TcpPort'},
                {call,277,
                 {atom,277,connect_options},
                 [{cons,277,
                   {tuple,277,[{atom,277,active},{atom,277,false}]},
                   {cons,277,
                    {tuple,277,[{atom,277,packet},{integer,277,2}]},
                    {nil,277}}}]}]},
              [{clause,279,
                [{tuple,279,[{atom,279,ok},{var,279,'Socket'}]}],
                [],
                [{match,280,
                  {var,280,'HSData'},
                  {tuple,280,
                   [{atom,280,hs_data},
                    {var,281,'Kernel'},
                    {var,282,'Node'},
                    {var,283,'MyNode'},
                    {var,284,'Socket'},
                    {var,285,'Timer'},
                    {integer,286,0},
                    {atom,280,undefined},
                    {var,287,'Version'},
                    {atom,280,undefined},
                    {atom,280,undefined},
                    {'fun',288,
                     {function,
                      {atom,288,inet_tcp},
                      {atom,288,send},
                      {integer,288,2}}},
                    {'fun',289,
                     {function,
                      {atom,289,inet_tcp},
                      {atom,289,recv},
                      {integer,289,3}}},
                    {'fun',291,
                     {clauses,
                      [{clause,291,
                        [{var,291,'S'}],
                        [],
                        [{call,292,
                          {remote,292,{atom,292,inet},{atom,292,setopts}},
                          [{var,293,'S'},
                           {cons,294,
                            {tuple,294,[{atom,294,active},{atom,294,false}]},
                            {cons,295,
                             {tuple,295,[{atom,295,packet},{integer,295,4}]},
                             {cons,296,
                              {call,296,{atom,296,nodelay},[]},
                              {nil,296}}}}]}]}]}},
                    {'fun',299,
                     {clauses,
                      [{clause,299,
                        [{var,299,'S'}],
                        [],
                        [{call,300,
                          {remote,300,{atom,300,inet},{atom,300,setopts}},
                          [{var,301,'S'},
                           {cons,302,
                            {tuple,302,[{atom,302,active},{atom,302,true}]},
                            {cons,303,
                             {tuple,303,[{atom,303,deliver},{atom,303,port}]},
                             {cons,304,
                              {tuple,304,[{atom,304,packet},{integer,304,4}]},
                              {cons,305,
                               {call,305,{atom,305,nodelay},[]},
                               {nil,305}}}}}]}]}]}},
                    {'fun',307,
                     {function,
                      {atom,307,inet},
                      {atom,307,getll},
                      {integer,307,1}}},
                    {'fun',309,
                     {clauses,
                      [{clause,309,
                        [{var,309,'_'},{var,309,'_'}],
                        [],
                        [{tuple,310,
                          [{atom,310,net_address},
                           {tuple,311,[{var,311,'Ip'},{var,311,'TcpPort'}]},
                           {var,312,'Address'},
                           {atom,313,tcp},
                           {atom,314,inet}]}]}]}},
                    {'fun',316,
                     {function,
                      {atom,-1,inet_tcp_dist},
                      {atom,316,tick},
                      {integer,316,1}}},
                    {'fun',317,
                     {function,
                      {atom,-1,inet_tcp_dist},
                      {atom,317,getstat},
                      {integer,317,1}}},
                    {var,318,'Type'}]}},
                 {call,320,
                  {remote,320,
                   {atom,320,dist_util},
                   {atom,320,handshake_we_started}},
                  [{var,320,'HSData'}]}]},
               {clause,321,
                [{var,321,'_'}],
                [],
                [{atom,37,ok},
                 {call,41,
                  {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
                  [{atom,-1,inet_tcp_dist},
                   {integer,41,41},
                   {var,327,'Node'}]}]}]}]},
           {clause,329,
            [{var,329,'_'}],
            [],
            [{atom,37,ok},
             {call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,inet_tcp_dist},
               {integer,41,41},
               {var,332,'Node'}]}]}]}]},
       {clause,334,
        [{var,334,'_Other'}],
        [],
        [{atom,37,ok},
         {call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,inet_tcp_dist},{integer,41,41},{var,337,'Node'}]}]}]}]}]},
 {function,340,connect_options,1,
  [{clause,340,
    [{var,340,'Opts'}],
    [],
    [{'case',341,
      {call,341,
       {remote,341,{atom,341,application},{atom,341,get_env}},
       [{atom,341,kernel},{atom,341,inet_dist_connect_options}]},
      [{clause,342,
        [{tuple,342,[{atom,342,ok},{var,342,'ConnectOpts'}]}],
        [],
        [{op,343,'++',{var,343,'ConnectOpts'},{var,343,'Opts'}}]},
       {clause,344,[{var,344,'_'}],[],[{var,345,'Opts'}]}]}]}]},
 {function,351,close,1,
  [{clause,351,
    [{var,351,'Socket'}],
    [],
    [{call,352,
      {remote,352,{atom,352,inet_tcp},{atom,352,close}},
      [{var,352,'Socket'}]}]}]},
 {function,356,splitnode,2,
  [{clause,356,
    [{var,356,'Node'},{var,356,'LongOrShortNames'}],
    [],
    [{'case',357,
      {call,357,
       {atom,357,split_node},
       [{call,357,{atom,357,atom_to_list},[{var,357,'Node'}]},
        {char,357,64},
        {nil,357}]},
      [{clause,358,
        [{cons,358,{var,358,'Name'},{var,358,'Tail'}}],
        [[{op,358,'=/=',{var,358,'Tail'},{nil,358}}]],
        [{match,359,
          {var,359,'Host'},
          {call,359,
           {remote,359,{atom,359,lists},{atom,359,append}},
           [{var,359,'Tail'}]}},
         {'case',360,
          {call,360,
           {atom,360,split_node},
           [{var,360,'Host'},{char,360,46},{nil,360}]},
          [{clause,361,
            [{cons,361,{var,361,'_'},{nil,361}}],
            [[{op,361,'=:=',
               {var,361,'LongOrShortNames'},
               {atom,361,longnames}}]],
            [{call,362,
              {atom,362,error_msg},
              [{string,362,
                "** System running to use fully qualified hostnames **~n** Hostname ~s is illegal **~n"},
               {cons,366,{var,366,'Host'},{nil,366}}]},
             {call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,inet_tcp_dist},{integer,41,41},{var,367,'Node'}]}]},
           {clause,368,
            [{var,368,'L'}],
            [[{op,368,'>',
               {call,368,{atom,368,length},[{var,368,'L'}]},
               {integer,368,1}},
              {op,368,'=:=',
               {var,368,'LongOrShortNames'},
               {atom,368,shortnames}}]],
            [{call,369,
              {atom,369,error_msg},
              [{string,369,
                "** System NOT running to use fully qualified hostnames **~n** Hostname ~s is illegal **~n"},
               {cons,372,{var,372,'Host'},{nil,372}}]},
             {call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,inet_tcp_dist},{integer,41,41},{var,373,'Node'}]}]},
           {clause,374,
            [{var,374,'_'}],
            [],
            [{cons,375,
              {var,375,'Name'},
              {cons,375,{var,375,'Host'},{nil,375}}}]}]}]},
       {clause,377,
        [{cons,377,{var,377,'_'},{nil,377}}],
        [],
        [{call,378,
          {atom,378,error_msg},
          [{string,378,"** Nodename ~p illegal, no '@' character **~n"},
           {cons,379,{var,379,'Node'},{nil,379}}]},
         {call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,inet_tcp_dist},{integer,41,41},{var,380,'Node'}]}]},
       {clause,381,
        [{var,381,'_'}],
        [],
        [{call,382,
          {atom,382,error_msg},
          [{string,382,"** Nodename ~p illegal **~n"},
           {cons,382,{var,382,'Node'},{nil,382}}]},
         {call,41,
          {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
          [{atom,-1,inet_tcp_dist},{integer,41,41},{var,383,'Node'}]}]}]}]}]},
 {function,386,split_node,3,
  [{clause,386,
    [{cons,386,{var,386,'Chr'},{var,386,'T'}},{var,386,'Chr'},{var,386,'Ack'}],
    [],
    [{cons,386,
      {call,386,
       {remote,386,{atom,386,lists},{atom,386,reverse}},
       [{var,386,'Ack'}]},
      {call,386,
       {atom,386,split_node},
       [{var,386,'T'},{var,386,'Chr'},{nil,386}]}}]},
   {clause,387,
    [{cons,387,{var,387,'H'},{var,387,'T'}},{var,387,'Chr'},{var,387,'Ack'}],
    [],
    [{call,387,
      {atom,387,split_node},
      [{var,387,'T'},
       {var,387,'Chr'},
       {cons,387,{var,387,'H'},{var,387,'Ack'}}]}]},
   {clause,388,
    [{nil,388},{var,388,'_'},{var,388,'Ack'}],
    [],
    [{cons,388,
      {call,388,
       {remote,388,{atom,388,lists},{atom,388,reverse}},
       [{var,388,'Ack'}]},
      {nil,388}}]}]},
 {function,393,get_tcp_address,1,
  [{clause,393,
    [{var,393,'Socket'}],
    [],
    [{match,394,
      {tuple,394,[{atom,394,ok},{var,394,'Address'}]},
      {call,394,
       {remote,394,{atom,394,inet},{atom,394,sockname}},
       [{var,394,'Socket'}]}},
     {match,395,
      {tuple,395,[{atom,395,ok},{var,395,'Host'}]},
      {call,395,{remote,395,{atom,395,inet},{atom,395,gethostname}},[]}},
     {tuple,396,
      [{atom,396,net_address},
       {var,397,'Address'},
       {var,398,'Host'},
       {atom,399,tcp},
       {atom,400,inet}]}]}]},
 {function,407,check_ip,1,
  [{clause,407,
    [{var,407,'Socket'}],
    [],
    [{'case',408,
      {call,408,
       {remote,408,{atom,408,application},{atom,408,get_env}},
       [{atom,408,check_ip}]},
      [{clause,409,
        [{tuple,409,[{atom,409,ok},{atom,409,true}]}],
        [],
        [{'case',410,
          {call,410,{atom,410,get_ifs},[{var,410,'Socket'}]},
          [{clause,411,
            [{tuple,411,[{atom,411,ok},{var,411,'IFs'},{var,411,'IP'}]}],
            [],
            [{call,412,{atom,412,check_ip},[{var,412,'IFs'},{var,412,'IP'}]}]},
           {clause,413,
            [{var,413,'_'}],
            [],
            [{call,41,
              {remote,41,{atom,41,dist_util},{atom,41,shutdown}},
              [{atom,-1,inet_tcp_dist},
               {integer,41,41},
               {atom,414,no_node}]}]}]}]},
       {clause,416,[{var,416,'_'}],[],[{atom,417,true}]}]}]}]},
 {function,420,get_ifs,1,
  [{clause,420,
    [{var,420,'Socket'}],
    [],
    [{'case',421,
      {call,421,
       {remote,421,{atom,421,inet},{atom,421,peername}},
       [{var,421,'Socket'}]},
      [{clause,422,
        [{tuple,422,
          [{atom,422,ok},{tuple,422,[{var,422,'IP'},{var,422,'_'}]}]}],
        [],
        [{'case',423,
          {call,423,
           {remote,423,{atom,423,inet},{atom,423,getif}},
           [{var,423,'Socket'}]},
          [{clause,424,
            [{tuple,424,[{atom,424,ok},{var,424,'IFs'}]}],
            [],
            [{tuple,424,[{atom,424,ok},{var,424,'IFs'},{var,424,'IP'}]}]},
           {clause,425,[{var,425,'Error'}],[],[{var,425,'Error'}]}]}]},
       {clause,427,[{var,427,'Error'}],[],[{var,428,'Error'}]}]}]}]},
 {function,431,check_ip,2,
  [{clause,431,
    [{cons,431,
      {tuple,431,[{var,431,'OwnIP'},{var,431,'_'},{var,431,'Netmask'}]},
      {var,431,'IFs'}},
     {var,431,'PeerIP'}],
    [],
    [{'case',432,
      {tuple,432,
       [{call,432,{atom,432,mask},[{var,432,'Netmask'},{var,432,'PeerIP'}]},
        {call,432,{atom,432,mask},[{var,432,'Netmask'},{var,432,'OwnIP'}]}]},
      [{clause,433,
        [{tuple,433,[{var,433,'M'},{var,433,'M'}]}],
        [],
        [{atom,433,true}]},
       {clause,434,
        [{var,434,'_'}],
        [],
        [{call,434,
          {atom,434,check_ip},
          [{var,434,'IFs'},{var,434,'PeerIP'}]}]}]}]},
   {clause,436,
    [{nil,436},{var,436,'PeerIP'}],
    [],
    [{tuple,437,[{atom,437,false},{var,437,'PeerIP'}]}]}]},
 {function,439,mask,2,
  [{clause,439,
    [{tuple,439,[{var,439,'M1'},{var,439,'M2'},{var,439,'M3'},{var,439,'M4'}]},
     {tuple,439,
      [{var,439,'IP1'},{var,439,'IP2'},{var,439,'IP3'},{var,439,'IP4'}]}],
    [],
    [{tuple,440,
      [{op,440,'band',{var,440,'M1'},{var,440,'IP1'}},
       {op,441,'band',{var,441,'M2'},{var,441,'IP2'}},
       {op,442,'band',{var,442,'M3'},{var,442,'IP3'}},
       {op,443,'band',{var,443,'M4'},{var,443,'IP4'}}]}]}]},
 {function,445,is_node_name,1,
  [{clause,445,
    [{var,445,'Node'}],
    [[{call,445,{atom,445,is_atom},[{var,445,'Node'}]}]],
    [{'case',446,
      {call,446,
       {atom,446,split_node},
       [{call,446,{atom,446,atom_to_list},[{var,446,'Node'}]},
        {char,446,64},
        {nil,446}]},
      [{clause,447,
        [{cons,447,{var,447,'_'},{cons,447,{var,447,'_Host'},{nil,447}}}],
        [],
        [{atom,447,true}]},
       {clause,448,[{var,448,'_'}],[],[{atom,448,false}]}]}]},
   {clause,450,[{var,450,'_Node'}],[],[{atom,451,false}]}]},
 {function,453,tick,1,
  [{clause,453,
    [{var,453,'Sock'}],
    [],
    [{'case',38,
      {call,38,
       {remote,38,{atom,38,inet_tcp},{atom,38,send}},
       [{var,454,'Sock'},{nil,454},{cons,454,{atom,454,force},{nil,454}}]},
      [{clause,39,
        [{tuple,39,[{atom,39,error},{atom,39,closed}]}],
        [],
        [{op,40,'!',
          {call,40,{atom,40,self},[]},
          {tuple,40,[{atom,40,tcp_closed},{var,454,'Sock'}]}},
         {tuple,41,[{atom,41,error},{atom,41,closed}]}]},
       {clause,42,[{var,42,'R'}],[],[{var,43,'R'}]}]}]}]},
 {function,456,getstat,1,
  [{clause,456,
    [{var,456,'Socket'}],
    [],
    [{'case',457,
      {call,457,
       {remote,457,{atom,457,inet},{atom,457,getstat}},
       [{var,457,'Socket'},
        {cons,457,
         {atom,457,recv_cnt},
         {cons,457,
          {atom,457,send_cnt},
          {cons,457,{atom,457,send_pend},{nil,457}}}}]},
      [{clause,458,
        [{tuple,458,[{atom,458,ok},{var,458,'Stat'}]}],
        [],
        [{call,459,
          {atom,459,split_stat},
          [{var,459,'Stat'},
           {integer,459,0},
           {integer,459,0},
           {integer,459,0}]}]},
       {clause,460,[{var,460,'Error'}],[],[{var,461,'Error'}]}]}]}]},
 {function,464,split_stat,4,
  [{clause,464,
    [{cons,464,
      {tuple,464,[{atom,464,recv_cnt},{var,464,'R'}]},
      {var,464,'Stat'}},
     {var,464,'_'},
     {var,464,'W'},
     {var,464,'P'}],
    [],
    [{call,465,
      {atom,465,split_stat},
      [{var,465,'Stat'},{var,465,'R'},{var,465,'W'},{var,465,'P'}]}]},
   {clause,466,
    [{cons,466,
      {tuple,466,[{atom,466,send_cnt},{var,466,'W'}]},
      {var,466,'Stat'}},
     {var,466,'R'},
     {var,466,'_'},
     {var,466,'P'}],
    [],
    [{call,467,
      {atom,467,split_stat},
      [{var,467,'Stat'},{var,467,'R'},{var,467,'W'},{var,467,'P'}]}]},
   {clause,468,
    [{cons,468,
      {tuple,468,[{atom,468,send_pend},{var,468,'P'}]},
      {var,468,'Stat'}},
     {var,468,'R'},
     {var,468,'W'},
     {var,468,'_'}],
    [],
    [{call,469,
      {atom,469,split_stat},
      [{var,469,'Stat'},{var,469,'R'},{var,469,'W'},{var,469,'P'}]}]},
   {clause,470,
    [{nil,470},{var,470,'R'},{var,470,'W'},{var,470,'P'}],
    [],
    [{tuple,471,
      [{atom,471,ok},{var,471,'R'},{var,471,'W'},{var,471,'P'}]}]}]}]
