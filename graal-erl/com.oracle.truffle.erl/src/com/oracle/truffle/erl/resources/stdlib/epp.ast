epp
[]
[]
[{function,94,open,2,
  [{clause,94,
    [{var,94,'Name'},{var,94,'Path'}],
    [],
    [{call,95,{atom,95,open},[{var,95,'Name'},{var,95,'Path'},{nil,95}]}]}]},
 {function,105,open,3,
  [{clause,105,
    [{var,105,'Name'},{var,105,'Path'},{var,105,'Pdm'}],
    [],
    [{call,106,
      {atom,106,internal_open},
      [{cons,106,
        {tuple,106,[{atom,106,name},{var,106,'Name'}]},
        {cons,106,
         {tuple,106,[{atom,106,includes},{var,106,'Path'}]},
         {cons,106,
          {tuple,106,[{atom,106,macros},{var,106,'Pdm'}]},
          {nil,106}}}},
       {tuple,106,
        [{atom,106,epp},
         {atom,106,undefined},
         {integer,53,1},
         {integer,54,0},
         {string,55,[]},
         {string,56,[]},
         {nil,57},
         {nil,58},
         {nil,59},
         {call,60,{remote,60,{atom,60,dict},{atom,60,new}},[]},
         {call,62,{remote,62,{atom,62,dict},{atom,62,new}},[]},
         {atom,49,utf8},
         {atom,65,false}]}]}]}]},
 {function,108,open,5,
  [{clause,108,
    [{var,108,'Name'},
     {var,108,'File'},
     {var,108,'StartLocation'},
     {var,108,'Path'},
     {var,108,'Pdm'}],
    [],
    [{call,109,
      {atom,109,internal_open},
      [{cons,109,
        {tuple,109,[{atom,109,name},{var,109,'Name'}]},
        {cons,109,
         {tuple,109,[{atom,109,includes},{var,109,'Path'}]},
         {cons,109,
          {tuple,109,[{atom,109,macros},{var,109,'Pdm'}]},
          {nil,109}}}},
       {tuple,110,
        [{atom,110,epp},
         {var,110,'File'},
         {var,110,'StartLocation'},
         {integer,54,0},
         {string,55,[]},
         {string,56,[]},
         {nil,57},
         {nil,58},
         {nil,59},
         {call,60,{remote,60,{atom,60,dict},{atom,60,new}},[]},
         {call,62,{remote,62,{atom,62,dict},{atom,62,new}},[]},
         {atom,49,utf8},
         {atom,110,true}]}]}]}]},
 {function,123,open,1,
  [{clause,123,
    [{var,123,'Options'}],
    [],
    [{call,124,
      {atom,124,internal_open},
      [{var,124,'Options'},
       {tuple,124,
        [{atom,124,epp},
         {atom,124,undefined},
         {integer,53,1},
         {integer,54,0},
         {string,55,[]},
         {string,56,[]},
         {nil,57},
         {nil,58},
         {nil,59},
         {call,60,{remote,60,{atom,60,dict},{atom,60,new}},[]},
         {call,62,{remote,62,{atom,62,dict},{atom,62,new}},[]},
         {atom,49,utf8},
         {atom,65,false}]}]}]}]},
 {function,126,internal_open,2,
  [{clause,126,
    [{var,126,'Options'},{var,126,'St'}],
    [],
    [{'case',127,
      {call,127,
       {remote,127,{atom,127,proplists},{atom,127,get_value}},
       [{atom,127,name},{var,127,'Options'}]},
      [{clause,128,
        [{atom,128,undefined}],
        [],
        [{call,129,
          {remote,129,{atom,129,erlang},{atom,129,error}},
          [{atom,129,badarg}]}]},
       {clause,130,
        [{var,130,'Name'}],
        [],
        [{match,131,{var,131,'Self'},{call,131,{atom,131,self},[]}},
         {match,132,
          {var,132,'Epp'},
          {call,132,
           {atom,132,spawn},
           [{'fun',132,
             {clauses,
              [{clause,132,[],[],
                [{call,132,
                  {atom,132,server},
                  [{var,132,'Self'},
                   {var,132,'Name'},
                   {var,132,'Options'},
                   {var,132,'St'}]}]}]}}]}},
         {'case',133,
          {call,133,{atom,133,epp_request},[{var,133,'Epp'}]},
          [{clause,134,
            [{tuple,134,[{atom,134,ok},{var,134,'Pid'},{var,134,'Encoding'}]}],
            [],
            [{'case',135,
              {call,135,
               {remote,135,{atom,135,proplists},{atom,135,get_bool}},
               [{atom,135,extra},{var,135,'Options'}]},
              [{clause,136,
                [{atom,136,true}],
                [],
                [{tuple,136,
                  [{atom,136,ok},
                   {var,136,'Pid'},
                   {cons,136,
                    {tuple,136,[{atom,136,encoding},{var,136,'Encoding'}]},
                    {nil,136}}]}]},
               {clause,137,
                [{atom,137,false}],
                [],
                [{tuple,137,[{atom,137,ok},{var,137,'Pid'}]}]}]}]},
           {clause,139,[{var,139,'Other'}],[],[{var,140,'Other'}]}]}]}]}]}]},
 {function,147,close,1,
  [{clause,147,
    [{var,147,'Epp'}],
    [],
    [{match,150,
      {var,150,'Ref'},
      {call,150,
       {remote,150,{atom,150,erlang},{atom,150,monitor}},
       [{atom,150,process},{var,150,'Epp'}]}},
     {match,151,
      {var,151,'R'},
      {call,151,{atom,151,epp_request},[{var,151,'Epp'},{atom,151,close}]}},
     {'receive',152,
      [{clause,152,
        [{tuple,152,
          [{atom,152,'DOWN'},
           {var,152,'Ref'},
           {var,152,'_'},
           {var,152,'_'},
           {var,152,'_'}]}],
        [],
        [{atom,152,ok}]}]},
     {var,153,'R'}]}]},
 {function,155,scan_erl_form,1,
  [{clause,155,
    [{var,155,'Epp'}],
    [],
    [{call,156,
      {atom,156,epp_request},
      [{var,156,'Epp'},{atom,156,scan_erl_form}]}]}]},
 {function,165,parse_erl_form,1,
  [{clause,165,
    [{var,165,'Epp'}],
    [],
    [{'case',166,
      {call,166,
       {atom,166,epp_request},
       [{var,166,'Epp'},{atom,166,scan_erl_form}]},
      [{clause,167,
        [{tuple,167,[{atom,167,ok},{var,167,'Toks'}]}],
        [],
        [{call,168,
          {remote,168,{atom,168,erl_parse},{atom,168,parse_form}},
          [{var,168,'Toks'}]}]},
       {clause,169,[{var,169,'Other'}],[],[{var,170,'Other'}]}]}]}]},
 {function,173,macro_defs,1,
  [{clause,173,
    [{var,173,'Epp'}],
    [],
    [{call,174,
      {atom,174,epp_request},
      [{var,174,'Epp'},{atom,174,macro_defs}]}]}]},
 {function,182,format_error,1,
  [{clause,182,
    [{atom,182,cannot_parse}],
    [],
    [{call,183,
      {remote,183,{atom,183,io_lib},{atom,183,format}},
      [{string,183,"cannot parse file, giving up"},{nil,183}]}]},
   {clause,184,
    [{tuple,184,[{atom,184,bad},{var,184,'W'}]}],
    [],
    [{call,185,
      {remote,185,{atom,185,io_lib},{atom,185,format}},
      [{string,185,"badly formed '~s'"},{cons,185,{var,185,'W'},{nil,185}}]}]},
   {clause,186,
    [{atom,186,missing_parenthesis}],
    [],
    [{call,187,
      {remote,187,{atom,187,io_lib},{atom,187,format}},
      [{string,187,"badly formed define: missing closing right parenthesis"},
       {nil,187}]}]},
   {clause,188,[{atom,188,premature_end}],[],[{string,189,"premature end"}]},
   {clause,190,
    [{tuple,190,[{atom,190,call},{var,190,'What'}]}],
    [],
    [{call,191,
      {remote,191,{atom,191,io_lib},{atom,191,format}},
      [{string,191,"illegal macro call '~s'"},
       {cons,191,{var,191,'What'},{nil,191}}]}]},
   {clause,192,
    [{tuple,192,[{atom,192,undefined},{var,192,'M'},{atom,192,none}]}],
    [],
    [{call,193,
      {remote,193,{atom,193,io_lib},{atom,193,format}},
      [{string,193,"undefined macro '~s'"},
       {cons,193,{var,193,'M'},{nil,193}}]}]},
   {clause,194,
    [{tuple,194,[{atom,194,undefined},{var,194,'M'},{var,194,'A'}]}],
    [],
    [{call,195,
      {remote,195,{atom,195,io_lib},{atom,195,format}},
      [{string,195,"undefined macro '~s/~p'"},
       {cons,195,{var,195,'M'},{cons,195,{var,195,'A'},{nil,195}}}]}]},
   {clause,196,
    [{tuple,196,[{atom,196,depth},{var,196,'What'}]}],
    [],
    [{call,197,
      {remote,197,{atom,197,io_lib},{atom,197,format}},
      [{string,197,"~s too deep"},{cons,197,{var,197,'What'},{nil,197}}]}]},
   {clause,198,
    [{tuple,198,[{atom,198,mismatch},{var,198,'M'}]}],
    [],
    [{call,199,
      {remote,199,{atom,199,io_lib},{atom,199,format}},
      [{string,199,"argument mismatch for macro '~s'"},
       {cons,199,{var,199,'M'},{nil,199}}]}]},
   {clause,200,
    [{tuple,200,[{atom,200,arg_error},{var,200,'M'}]}],
    [],
    [{call,201,
      {remote,201,{atom,201,io_lib},{atom,201,format}},
      [{string,201,"badly formed argument for macro '~s'"},
       {cons,201,{var,201,'M'},{nil,201}}]}]},
   {clause,202,
    [{tuple,202,[{atom,202,redefine},{var,202,'M'}]}],
    [],
    [{call,203,
      {remote,203,{atom,203,io_lib},{atom,203,format}},
      [{string,203,"redefining macro '~s'"},
       {cons,203,{var,203,'M'},{nil,203}}]}]},
   {clause,204,
    [{tuple,204,[{atom,204,redefine_predef},{var,204,'M'}]}],
    [],
    [{call,205,
      {remote,205,{atom,205,io_lib},{atom,205,format}},
      [{string,205,"redefining predefined macro '~s'"},
       {cons,205,{var,205,'M'},{nil,205}}]}]},
   {clause,206,
    [{tuple,206,[{atom,206,circular},{var,206,'M'},{atom,206,none}]}],
    [],
    [{call,207,
      {remote,207,{atom,207,io_lib},{atom,207,format}},
      [{string,207,"circular macro '~s'"},
       {cons,207,{var,207,'M'},{nil,207}}]}]},
   {clause,208,
    [{tuple,208,[{atom,208,circular},{var,208,'M'},{var,208,'A'}]}],
    [],
    [{call,209,
      {remote,209,{atom,209,io_lib},{atom,209,format}},
      [{string,209,"circular macro '~s/~p'"},
       {cons,209,{var,209,'M'},{cons,209,{var,209,'A'},{nil,209}}}]}]},
   {clause,210,
    [{tuple,210,[{atom,210,include},{var,210,'W'},{var,210,'F'}]}],
    [],
    [{call,211,
      {remote,211,{atom,211,io_lib},{atom,211,format}},
      [{string,211,"can't find include ~s \"~s\""},
       {cons,211,{var,211,'W'},{cons,211,{var,211,'F'},{nil,211}}}]}]},
   {clause,212,
    [{tuple,212,[{atom,212,illegal},{var,212,'How'},{var,212,'What'}]}],
    [],
    [{call,213,
      {remote,213,{atom,213,io_lib},{atom,213,format}},
      [{string,213,"~s '-~s'"},
       {cons,213,{var,213,'How'},{cons,213,{var,213,'What'},{nil,213}}}]}]},
   {clause,214,
    [{tuple,214,[{atom,214,'NYI'},{var,214,'What'}]}],
    [],
    [{call,215,
      {remote,215,{atom,215,io_lib},{atom,215,format}},
      [{string,215,"not yet implemented '~s'"},
       {cons,215,{var,215,'What'},{nil,215}}]}]},
   {clause,216,
    [{var,216,'E'}],
    [],
    [{call,216,
      {remote,216,{atom,216,file},{atom,216,format_error}},
      [{var,216,'E'}]}]}]},
 {function,228,parse_file,3,
  [{clause,228,
    [{var,228,'Ifile'},{var,228,'Path'},{var,228,'Predefs'}],
    [],
    [{call,229,
      {atom,229,parse_file},
      [{var,229,'Ifile'},
       {cons,229,
        {tuple,229,[{atom,229,includes},{var,229,'Path'}]},
        {cons,229,
         {tuple,229,[{atom,229,macros},{var,229,'Predefs'}]},
         {nil,229}}}]}]}]},
 {function,244,parse_file,2,
  [{clause,244,
    [{var,244,'Ifile'},{var,244,'Options'}],
    [],
    [{'case',245,
      {call,245,
       {atom,245,internal_open},
       [{cons,245,
         {tuple,245,[{atom,245,name},{var,245,'Ifile'}]},
         {var,245,'Options'}},
        {tuple,245,
         [{atom,245,epp},
          {atom,245,undefined},
          {integer,53,1},
          {integer,54,0},
          {string,55,[]},
          {string,56,[]},
          {nil,57},
          {nil,58},
          {nil,59},
          {call,60,{remote,60,{atom,60,dict},{atom,60,new}},[]},
          {call,62,{remote,62,{atom,62,dict},{atom,62,new}},[]},
          {atom,49,utf8},
          {atom,65,false}]}]},
      [{clause,246,
        [{tuple,246,[{atom,246,ok},{var,246,'Epp'}]}],
        [],
        [{match,247,
          {var,247,'Forms'},
          {call,247,{atom,247,parse_file},[{var,247,'Epp'}]}},
         {call,248,{atom,248,close},[{var,248,'Epp'}]},
         {tuple,249,[{atom,249,ok},{var,249,'Forms'}]}]},
       {clause,250,
        [{tuple,250,[{atom,250,ok},{var,250,'Epp'},{var,250,'Extra'}]}],
        [],
        [{match,251,
          {var,251,'Forms'},
          {call,251,{atom,251,parse_file},[{var,251,'Epp'}]}},
         {call,252,{atom,252,close},[{var,252,'Epp'}]},
         {tuple,253,[{atom,253,ok},{var,253,'Forms'},{var,253,'Extra'}]}]},
       {clause,254,
        [{tuple,254,[{atom,254,error},{var,254,'E'}]}],
        [],
        [{tuple,255,[{atom,255,error},{var,255,'E'}]}]}]}]}]},
 {function,264,parse_file,1,
  [{clause,264,
    [{var,264,'Epp'}],
    [],
    [{'case',265,
      {call,265,{atom,265,parse_erl_form},[{var,265,'Epp'}]},
      [{clause,266,
        [{tuple,266,[{atom,266,ok},{var,266,'Form'}]}],
        [],
        [{'case',267,
          {var,267,'Form'},
          [{clause,268,
            [{tuple,268,
              [{atom,268,attribute},
               {var,268,'La'},
               {atom,268,record},
               {tuple,268,[{var,268,'Record'},{var,268,'Fields'}]}]}],
            [],
            [{'case',269,
              {call,269,
               {atom,269,normalize_typed_record_fields},
               [{var,269,'Fields'}]},
              [{clause,270,
                [{tuple,270,[{atom,270,typed},{var,270,'NewFields'}]}],
                [],
                [{cons,271,
                  {tuple,271,
                   [{atom,271,attribute},
                    {var,271,'La'},
                    {atom,271,record},
                    {tuple,271,[{var,271,'Record'},{var,271,'NewFields'}]}]},
                  {cons,272,
                   {tuple,272,
                    [{atom,272,attribute},
                     {var,272,'La'},
                     {atom,272,type},
                     {tuple,273,
                      [{tuple,273,[{atom,273,record},{var,273,'Record'}]},
                       {var,273,'Fields'},
                       {nil,273}]}]},
                   {call,274,{atom,274,parse_file},[{var,274,'Epp'}]}}}]},
               {clause,275,
                [{atom,275,not_typed}],
                [],
                [{cons,276,
                  {var,276,'Form'},
                  {call,276,{atom,276,parse_file},[{var,276,'Epp'}]}}]}]}]},
           {clause,278,
            [{var,278,'_'}],
            [],
            [{cons,279,
              {var,279,'Form'},
              {call,279,{atom,279,parse_file},[{var,279,'Epp'}]}}]}]}]},
       {clause,281,
        [{tuple,281,[{atom,281,error},{var,281,'E'}]}],
        [],
        [{cons,282,
          {tuple,282,[{atom,282,error},{var,282,'E'}]},
          {call,282,{atom,282,parse_file},[{var,282,'Epp'}]}}]},
       {clause,283,
        [{tuple,283,[{atom,283,eof},{var,283,'Location'}]}],
        [],
        [{cons,284,
          {tuple,284,
           [{atom,284,eof},
            {call,284,
             {remote,284,{atom,284,erl_anno},{atom,284,new}},
             [{var,284,'Location'}]}]},
          {nil,284}}]}]}]}]},
 {function,289,default_encoding,0,[{clause,289,[],[],[{atom,49,utf8}]}]},
 {function,295,encoding_to_string,1,
  [{clause,295,[{atom,295,latin1}],[],[{string,295,"coding: latin-1"}]},
   {clause,296,[{atom,296,utf8}],[],[{string,296,"coding: utf-8"}]}]},
 {function,301,read_encoding,1,
  [{clause,301,
    [{var,301,'Name'}],
    [],
    [{call,302,{atom,302,read_encoding},[{var,302,'Name'},{nil,302}]}]}]},
 {function,309,read_encoding,2,
  [{clause,309,
    [{var,309,'Name'},{var,309,'Options'}],
    [],
    [{match,310,
      {var,310,'InComment'},
      {call,310,
       {remote,310,{atom,310,proplists},{atom,310,get_value}},
       [{atom,310,in_comment_only},{var,310,'Options'},{atom,310,true}]}},
     {'case',311,
      {call,311,
       {remote,311,{atom,311,file},{atom,311,open}},
       [{var,311,'Name'},{cons,311,{atom,311,read},{nil,311}}]},
      [{clause,312,
        [{tuple,312,[{atom,312,ok},{var,312,'File'}]}],
        [],
        [{'try',313,
          [{call,313,
            {atom,313,read_encoding_from_file},
            [{var,313,'File'},{var,313,'InComment'}]}],
          [],[],
          [{match,314,
            {atom,314,ok},
            {call,314,
             {remote,314,{atom,314,file},{atom,314,close}},
             [{var,314,'File'}]}}]}]},
       {clause,316,[{var,316,'_Error'}],[],[{atom,317,none}]}]}]}]},
 {function,323,set_encoding,1,
  [{clause,323,
    [{var,323,'File'}],
    [],
    [{call,324,{atom,324,set_encoding},[{var,324,'File'},{atom,49,utf8}]}]}]},
 {function,330,set_encoding,2,
  [{clause,330,
    [{var,330,'File'},{var,330,'Default'}],
    [],
    [{match,331,
      {var,331,'Encoding'},
      {call,331,
       {atom,331,read_encoding_from_file},
       [{var,331,'File'},{atom,331,true}]}},
     {match,332,
      {var,332,'Enc'},
      {'case',332,
       {var,332,'Encoding'},
       [{clause,333,[{atom,333,none}],[],[{var,333,'Default'}]},
        {clause,334,[{var,334,'Encoding'}],[],[{var,334,'Encoding'}]}]}},
     {match,336,
      {atom,336,ok},
      {call,336,
       {remote,336,{atom,336,io},{atom,336,setopts}},
       [{var,336,'File'},
        {cons,336,
         {tuple,336,[{atom,336,encoding},{var,336,'Enc'}]},
         {nil,336}}]}},
     {var,337,'Encoding'}]}]},
 {function,345,read_encoding_from_binary,1,
  [{clause,345,
    [{var,345,'Binary'}],
    [],
    [{call,346,
      {atom,346,read_encoding_from_binary},
      [{var,346,'Binary'},{nil,346}]}]}]},
 {function,354,read_encoding_from_binary,2,
  [{clause,354,
    [{var,354,'Binary'},{var,354,'Options'}],
    [],
    [{match,355,
      {var,355,'InComment'},
      {call,355,
       {remote,355,{atom,355,proplists},{atom,355,get_value}},
       [{atom,355,in_comment_only},{var,355,'Options'},{atom,355,true}]}},
     {'try',356,
      [{call,357,
        {atom,357,com_nl},
        [{var,357,'Binary'},
         {call,357,{atom,357,fake_reader},[{integer,357,0}]},
         {integer,357,0},
         {var,357,'InComment'}]}],
      [],
      [{clause,359,
        [{tuple,359,[{atom,359,throw},{atom,359,no},{var,359,'_'}]}],
        [],
        [{atom,360,none}]}],
      []}]}]},
 {function,363,fake_reader,1,
  [{clause,363,
    [{var,363,'N'}],
    [],
    [{'fun',364,
      {clauses,
       [{clause,364,[],
         [[{op,364,'=:=',{var,364,'N'},{integer,343,16}}]],
         [{call,365,{atom,365,throw},[{atom,365,no}]}]},
        {clause,366,[],[],
         [{tuple,367,
           [{bin,367,[]},
            {call,367,
             {atom,367,fake_reader},
             [{op,367,'+',{var,367,'N'},{integer,367,1}}]}]}]}]}}]}]},
 {function,374,read_encoding_from_file,2,
  [{clause,374,
    [{var,374,'File'},{var,374,'InComment'}],
    [],
    [{match,375,
      {tuple,375,[{atom,375,ok},{var,375,'Pos0'}]},
      {call,375,
       {remote,375,{atom,375,file},{atom,375,position}},
       [{var,375,'File'},{atom,375,cur}]}},
     {match,376,
      {var,376,'Opts'},
      {call,376,
       {remote,376,{atom,376,io},{atom,376,getopts}},
       [{var,376,'File'}]}},
     {match,377,
      {var,377,'Encoding0'},
      {call,377,
       {remote,377,{atom,377,lists},{atom,377,keyfind}},
       [{atom,377,encoding},{integer,377,1},{var,377,'Opts'}]}},
     {match,378,
      {var,378,'Binary0'},
      {call,378,
       {remote,378,{atom,378,lists},{atom,378,keyfind}},
       [{atom,378,binary},{integer,378,1},{var,378,'Opts'}]}},
     {match,379,
      {atom,379,ok},
      {call,379,
       {remote,379,{atom,379,io},{atom,379,setopts}},
       [{var,379,'File'},
        {cons,379,
         {atom,379,binary},
         {cons,379,
          {tuple,379,[{atom,379,encoding},{atom,379,latin1}]},
          {nil,379}}}]}},
     {'try',380,
      [{match,381,
        {tuple,381,[{var,381,'B'},{var,381,'Fun'}]},
        {call,381,
         {call,381,{atom,381,reader},[{var,381,'File'},{integer,381,0}]},
         []}},
       {call,382,
        {atom,382,com_nl},
        [{var,382,'B'},
         {var,382,'Fun'},
         {integer,382,0},
         {var,382,'InComment'}]}],
      [],
      [{clause,384,
        [{tuple,384,[{atom,384,throw},{atom,384,no},{var,384,'_'}]}],
        [],
        [{atom,385,none}]}],
      [{match,387,
        {tuple,387,[{atom,387,ok},{var,387,'Pos0'}]},
        {call,387,
         {remote,387,{atom,387,file},{atom,387,position}},
         [{var,387,'File'},{var,387,'Pos0'}]}},
       {match,388,
        {atom,388,ok},
        {call,388,
         {remote,388,{atom,388,io},{atom,388,setopts}},
         [{var,388,'File'},
          {cons,388,
           {var,388,'Binary0'},
           {cons,388,{var,388,'Encoding0'},{nil,388}}}]}}]}]}]},
 {function,391,reader,2,
  [{clause,391,
    [{var,391,'Fd'},{var,391,'N'}],
    [],
    [{'fun',392,
      {clauses,
       [{clause,392,[],
         [[{op,392,'=:=',{var,392,'N'},{integer,343,16}}]],
         [{call,393,{atom,393,throw},[{atom,393,no}]}]},
        {clause,394,[],[],
         [{'case',395,
           {call,395,
            {remote,395,{atom,395,file},{atom,395,read}},
            [{var,395,'Fd'},{integer,342,32}]},
           [{clause,396,
             [{atom,396,eof}],
             [],
             [{tuple,397,
               [{bin,397,[]},
                {call,397,
                 {atom,397,reader},
                 [{var,397,'Fd'},
                  {op,397,'+',{var,397,'N'},{integer,397,1}}]}]}]},
            {clause,398,
             [{tuple,398,[{atom,398,ok},{var,398,'Bin'}]}],
             [],
             [{tuple,399,
               [{var,399,'Bin'},
                {call,399,
                 {atom,399,reader},
                 [{var,399,'Fd'},
                  {op,399,'+',{var,399,'N'},{integer,399,1}}]}]}]},
            {clause,400,
             [{tuple,400,[{atom,400,error},{var,400,'_'}]}],
             [],
             [{call,401,{atom,401,throw},[{atom,401,no}]}]}]}]}]}}]}]},
 {function,405,com_nl,4,
  [{clause,405,
    [{var,405,'_'},{var,405,'_'},{integer,405,2},{var,405,'_'}],
    [],
    [{call,406,{atom,406,throw},[{atom,406,no}]}]},
   {clause,407,
    [{var,407,'B'},
     {var,407,'Fun'},
     {var,407,'N'},
     {match,407,{atom,407,false},{var,407,'Com'}}],
    [],
    [{call,408,
      {atom,408,com_c},
      [{var,408,'B'},{var,408,'Fun'},{var,408,'N'},{var,408,'Com'}]}]},
   {clause,409,
    [{var,409,'B'},
     {var,409,'Fun'},
     {var,409,'N'},
     {match,409,{atom,409,true},{var,409,'Com'}}],
    [],
    [{call,410,
      {atom,410,com},
      [{var,410,'B'},{var,410,'Fun'},{var,410,'N'},{var,410,'Com'}]}]}]},
 {function,412,com,4,
  [{clause,412,
    [{bin,412,
      [{bin_element,412,{string,412,"\n"},default,default},
       {bin_element,412,{var,412,'B'},default,[binary]}]},
     {var,412,'Fun'},
     {var,412,'N'},
     {var,412,'Com'}],
    [],
    [{call,413,
      {atom,413,com_nl},
      [{var,413,'B'},
       {var,413,'Fun'},
       {op,413,'+',{var,413,'N'},{integer,413,1}},
       {var,413,'Com'}]}]},
   {clause,414,
    [{bin,414,
      [{bin_element,414,{string,414,"%"},default,default},
       {bin_element,414,{var,414,'B'},default,[binary]}]},
     {var,414,'Fun'},
     {var,414,'N'},
     {var,414,'Com'}],
    [],
    [{call,415,
      {atom,415,com_c},
      [{var,415,'B'},{var,415,'Fun'},{var,415,'N'},{var,415,'Com'}]}]},
   {clause,416,
    [{bin,416,
      [{bin_element,416,{var,416,'_'},{integer,416,1},[{unit,8}]},
       {bin_element,416,{var,416,'B'},default,[binary]}]},
     {var,416,'Fun'},
     {var,416,'N'},
     {var,416,'Com'}],
    [],
    [{call,417,
      {atom,417,com},
      [{var,417,'B'},{var,417,'Fun'},{var,417,'N'},{var,417,'Com'}]}]},
   {clause,418,
    [{bin,418,[]},{var,418,'Fun'},{var,418,'N'},{var,418,'Com'}],
    [],
    [{match,419,
      {tuple,419,[{var,419,'B'},{var,419,'Fun1'}]},
      {call,419,{var,419,'Fun'},[]}},
     {call,420,
      {atom,420,com},
      [{var,420,'B'},{var,420,'Fun1'},{var,420,'N'},{var,420,'Com'}]}]}]},
 {function,422,com_c,4,
  [{clause,422,
    [{bin,422,
      [{bin_element,422,{string,422,"c"},default,default},
       {bin_element,422,{var,422,'B'},default,[binary]}]},
     {var,422,'Fun'},
     {var,422,'N'},
     {var,422,'Com'}],
    [],
    [{call,423,
      {atom,423,com_oding},
      [{var,423,'B'},{var,423,'Fun'},{var,423,'N'},{var,423,'Com'}]}]},
   {clause,424,
    [{bin,424,
      [{bin_element,424,{string,424,"\n"},default,default},
       {bin_element,424,{var,424,'B'},default,[binary]}]},
     {var,424,'Fun'},
     {var,424,'N'},
     {var,424,'Com'}],
    [],
    [{call,425,
      {atom,425,com_nl},
      [{var,425,'B'},
       {var,425,'Fun'},
       {op,425,'+',{var,425,'N'},{integer,425,1}},
       {var,425,'Com'}]}]},
   {clause,426,
    [{bin,426,
      [{bin_element,426,{var,426,'_'},{integer,426,1},[{unit,8}]},
       {bin_element,426,{var,426,'B'},default,[binary]}]},
     {var,426,'Fun'},
     {var,426,'N'},
     {var,426,'Com'}],
    [],
    [{call,427,
      {atom,427,com_c},
      [{var,427,'B'},{var,427,'Fun'},{var,427,'N'},{var,427,'Com'}]}]},
   {clause,428,
    [{bin,428,[]},{var,428,'Fun'},{var,428,'N'},{var,428,'Com'}],
    [],
    [{match,429,
      {tuple,429,[{var,429,'B'},{var,429,'Fun1'}]},
      {call,429,{var,429,'Fun'},[]}},
     {call,430,
      {atom,430,com_c},
      [{var,430,'B'},{var,430,'Fun1'},{var,430,'N'},{var,430,'Com'}]}]}]},
 {function,432,com_oding,4,
  [{clause,432,
    [{bin,432,
      [{bin_element,432,{string,432,"oding"},default,default},
       {bin_element,432,{var,432,'B'},default,[binary]}]},
     {var,432,'Fun'},
     {var,432,'N'},
     {var,432,'Com'}],
    [],
    [{call,433,
      {atom,433,com_sep},
      [{var,433,'B'},{var,433,'Fun'},{var,433,'N'},{var,433,'Com'}]}]},
   {clause,434,
    [{var,434,'B'},{var,434,'Fun'},{var,434,'N'},{var,434,'Com'}],
    [[{op,434,'>=',
       {call,434,{atom,434,byte_size},[{var,434,'B'}]},
       {call,434,{atom,434,length},[{string,434,"oding"}]}}]],
    [{call,435,
      {atom,435,com_c},
      [{var,435,'B'},{var,435,'Fun'},{var,435,'N'},{var,435,'Com'}]}]},
   {clause,436,
    [{var,436,'B'},{var,436,'Fun'},{var,436,'N'},{var,436,'Com'}],
    [],
    [{match,437,
      {tuple,437,[{var,437,'B1'},{var,437,'Fun1'}]},
      {call,437,{var,437,'Fun'},[]}},
     {call,438,
      {atom,438,com_oding},
      [{call,438,
        {atom,438,list_to_binary},
        [{cons,438,{var,438,'B'},{cons,438,{var,438,'B1'},{nil,438}}}]},
       {var,438,'Fun1'},
       {var,438,'N'},
       {var,438,'Com'}]}]}]},
 {function,440,com_sep,4,
  [{clause,440,
    [{bin,440,
      [{bin_element,440,{string,440,":"},default,default},
       {bin_element,440,{var,440,'B'},default,[binary]}]},
     {var,440,'Fun'},
     {var,440,'N'},
     {var,440,'Com'}],
    [],
    [{call,441,
      {atom,441,com_space},
      [{var,441,'B'},{var,441,'Fun'},{var,441,'N'},{var,441,'Com'}]}]},
   {clause,442,
    [{bin,442,
      [{bin_element,442,{string,442,"="},default,default},
       {bin_element,442,{var,442,'B'},default,[binary]}]},
     {var,442,'Fun'},
     {var,442,'N'},
     {var,442,'Com'}],
    [],
    [{call,443,
      {atom,443,com_space},
      [{var,443,'B'},{var,443,'Fun'},{var,443,'N'},{var,443,'Com'}]}]},
   {clause,444,
    [{bin,444,
      [{bin_element,444,{string,444," "},default,default},
       {bin_element,444,{var,444,'B'},default,[binary]}]},
     {var,444,'Fun'},
     {var,444,'N'},
     {var,444,'Com'}],
    [],
    [{call,445,
      {atom,445,com_sep},
      [{var,445,'B'},{var,445,'Fun'},{var,445,'N'},{var,445,'Com'}]}]},
   {clause,446,
    [{bin,446,[]},{var,446,'Fun'},{var,446,'N'},{var,446,'Com'}],
    [],
    [{match,447,
      {tuple,447,[{var,447,'B'},{var,447,'Fun1'}]},
      {call,447,{var,447,'Fun'},[]}},
     {call,448,
      {atom,448,com_sep},
      [{var,448,'B'},{var,448,'Fun1'},{var,448,'N'},{var,448,'Com'}]}]},
   {clause,449,
    [{var,449,'B'},{var,449,'Fun'},{var,449,'N'},{var,449,'Com'}],
    [],
    [{call,450,
      {atom,450,com_c},
      [{var,450,'B'},{var,450,'Fun'},{var,450,'N'},{var,450,'Com'}]}]}]},
 {function,452,com_space,4,
  [{clause,452,
    [{bin,452,
      [{bin_element,452,{string,452," "},default,default},
       {bin_element,452,{var,452,'B'},default,[binary]}]},
     {var,452,'Fun'},
     {var,452,'N'},
     {var,452,'Com'}],
    [],
    [{call,453,
      {atom,453,com_space},
      [{var,453,'B'},{var,453,'Fun'},{var,453,'N'},{var,453,'Com'}]}]},
   {clause,454,
    [{bin,454,[]},{var,454,'Fun'},{var,454,'N'},{var,454,'Com'}],
    [],
    [{match,455,
      {tuple,455,[{var,455,'B'},{var,455,'Fun1'}]},
      {call,455,{var,455,'Fun'},[]}},
     {call,456,
      {atom,456,com_space},
      [{var,456,'B'},{var,456,'Fun1'},{var,456,'N'},{var,456,'Com'}]}]},
   {clause,457,
    [{var,457,'B'},{var,457,'Fun'},{var,457,'N'},{var,457,'_Com'}],
    [],
    [{call,458,
      {atom,458,com_enc},
      [{var,458,'B'},{var,458,'Fun'},{var,458,'N'},{nil,458},{nil,458}]}]}]},
 {function,460,com_enc,5,
  [{clause,460,
    [{bin,460,
      [{bin_element,460,{var,460,'C'},{integer,460,1},[{unit,8}]},
       {bin_element,460,{var,460,'B'},default,[binary]}]},
     {var,460,'Fun'},
     {var,460,'N'},
     {var,460,'L'},
     {var,460,'Ps'}],
    [[{op,460,'>=',{var,460,'C'},{char,460,97}},
      {op,460,'=<',{var,460,'C'},{char,460,122}}],
     [{op,461,'>=',{var,461,'C'},{char,461,65}},
      {op,461,'=<',{var,461,'C'},{char,461,90}}],
     [{op,462,'>=',{var,462,'C'},{char,462,48}},
      {op,462,'=<',{var,462,'C'},{char,462,57}}]],
    [{call,463,
      {atom,463,com_enc},
      [{var,463,'B'},
       {var,463,'Fun'},
       {var,463,'N'},
       {cons,463,{var,463,'C'},{var,463,'L'}},
       {var,463,'Ps'}]}]},
   {clause,464,
    [{bin,464,[]},{var,464,'Fun'},{var,464,'N'},{var,464,'L'},{var,464,'Ps'}],
    [],
    [{'case',465,
      {call,465,{var,465,'Fun'},[]},
      [{clause,466,
        [{tuple,466,[{bin,466,[]},{var,466,'_'}]}],
        [],
        [{call,467,
          {atom,467,com_enc_end},
          [{cons,467,{var,467,'L'},{var,467,'Ps'}}]}]},
       {clause,468,
        [{tuple,468,[{var,468,'B'},{var,468,'Fun1'}]}],
        [],
        [{call,469,
          {atom,469,com_enc},
          [{var,469,'B'},
           {var,469,'Fun1'},
           {var,469,'N'},
           {var,469,'L'},
           {var,469,'Ps'}]}]}]}]},
   {clause,471,
    [{bin,471,
      [{bin_element,471,{string,471,"-"},default,default},
       {bin_element,471,{var,471,'B'},default,[binary]}]},
     {var,471,'Fun'},
     {var,471,'N'},
     {var,471,'L'},
     {var,471,'Ps'}],
    [],
    [{call,472,
      {atom,472,com_enc},
      [{var,472,'B'},
       {var,472,'Fun'},
       {var,472,'N'},
       {nil,472},
       {cons,472,{var,472,'L'},{var,472,'Ps'}}]}]},
   {clause,473,
    [{var,473,'_B'},
     {var,473,'_Fun'},
     {var,473,'_N'},
     {var,473,'L'},
     {var,473,'Ps'}],
    [],
    [{call,474,
      {atom,474,com_enc_end},
      [{cons,474,{var,474,'L'},{var,474,'Ps'}}]}]}]},
 {function,476,com_enc_end,1,
  [{clause,476,
    [{var,476,'Ps0'}],
    [],
    [{match,477,
      {var,477,'Ps'},
      {call,477,
       {remote,477,{atom,477,lists},{atom,477,reverse}},
       [{lc,477,
         {call,477,
          {remote,477,{atom,477,lists},{atom,477,reverse}},
          [{call,477,
            {remote,477,{atom,477,string},{atom,477,to_lower}},
            [{var,477,'P'}]}]},
         [{generate,477,{var,477,'P'},{var,477,'Ps0'}}]}]}},
     {call,478,{atom,478,com_encoding},[{var,478,'Ps'}]}]}]},
 {function,480,com_encoding,1,
  [{clause,480,
    [{cons,480,
      {string,480,"latin"},
      {cons,480,{string,480,"1"},{var,480,'_'}}}],
    [],
    [{atom,481,latin1}]},
   {clause,482,
    [{cons,482,{string,482,"utf"},{cons,482,{string,482,"8"},{var,482,'_'}}}],
    [],
    [{atom,483,utf8}]},
   {clause,484,
    [{var,484,'_'}],
    [],
    [{call,485,{atom,485,throw},[{atom,485,no}]}]}]},
 {function,487,normalize_typed_record_fields,1,
  [{clause,487,[{nil,487}],[],[{tuple,488,[{atom,488,typed},{nil,488}]}]},
   {clause,489,
    [{var,489,'Fields'}],
    [],
    [{call,490,
      {atom,490,normalize_typed_record_fields},
      [{var,490,'Fields'},{nil,490},{atom,490,false}]}]}]},
 {function,492,normalize_typed_record_fields,3,
  [{clause,492,
    [{nil,492},{var,492,'NewFields'},{var,492,'Typed'}],
    [],
    [{'case',493,
      {var,493,'Typed'},
      [{clause,494,
        [{atom,494,true}],
        [],
        [{tuple,494,
          [{atom,494,typed},
           {call,494,
            {remote,494,{atom,494,lists},{atom,494,reverse}},
            [{var,494,'NewFields'}]}]}]},
       {clause,495,[{atom,495,false}],[],[{atom,495,not_typed}]}]}]},
   {clause,497,
    [{cons,497,
      {tuple,497,
       [{atom,497,typed_record_field},{var,497,'Field'},{var,497,'_'}]},
      {var,497,'Rest'}},
     {var,498,'NewFields'},
     {var,498,'_Typed'}],
    [],
    [{call,499,
      {atom,499,normalize_typed_record_fields},
      [{var,499,'Rest'},
       {cons,499,{var,499,'Field'},{var,499,'NewFields'}},
       {atom,499,true}]}]},
   {clause,500,
    [{cons,500,{var,500,'Field'},{var,500,'Rest'}},
     {var,500,'NewFields'},
     {var,500,'Typed'}],
    [],
    [{call,501,
      {atom,501,normalize_typed_record_fields},
      [{var,501,'Rest'},
       {cons,501,{var,501,'Field'},{var,501,'NewFields'}},
       {var,501,'Typed'}]}]}]},
 {function,503,restore_typed_record_fields,1,
  [{clause,503,[{nil,503}],[],[{nil,504}]},
   {clause,505,
    [{cons,505,
      {tuple,505,
       [{atom,505,attribute},
        {var,505,'La'},
        {atom,505,record},
        {tuple,505,[{var,505,'Record'},{var,505,'_NewFields'}]}]},
      {cons,506,
       {tuple,506,
        [{atom,506,attribute},
         {var,506,'La'},
         {atom,506,type},
         {tuple,506,
          [{tuple,506,[{atom,506,record},{var,506,'Record'}]},
           {var,506,'Fields'},
           {nil,506}]}]},
       {var,507,'Forms'}}}],
    [],
    [{cons,508,
      {tuple,508,
       [{atom,508,attribute},
        {var,508,'La'},
        {atom,508,record},
        {tuple,508,[{var,508,'Record'},{var,508,'Fields'}]}]},
      {call,509,{atom,509,restore_typed_record_fields},[{var,509,'Forms'}]}}]},
   {clause,510,
    [{cons,510,
      {tuple,510,
       [{atom,510,attribute},
        {var,510,'La'},
        {atom,510,type},
        {tuple,510,
         [{tuple,510,[{atom,510,record},{var,510,'Record'}]},
          {var,510,'Fields'},
          {nil,510}]}]},
      {var,511,'Forms'}}],
    [],
    [{cons,514,
      {tuple,514,
       [{atom,514,attribute},
        {var,514,'La'},
        {atom,514,record},
        {tuple,514,[{var,514,'Record'},{var,514,'Fields'}]}]},
      {call,515,{atom,515,restore_typed_record_fields},[{var,515,'Forms'}]}}]},
   {clause,516,
    [{cons,516,{var,516,'Form'},{var,516,'Forms'}}],
    [],
    [{cons,517,
      {var,517,'Form'},
      {call,517,
       {atom,517,restore_typed_record_fields},
       [{var,517,'Forms'}]}}]}]},
 {function,519,server,4,
  [{clause,519,
    [{var,519,'Pid'},
     {var,519,'Name'},
     {var,519,'Options'},
     {match,519,
      {tuple,519,
       [{atom,519,epp},
        {var,519,'_'},
        {var,519,'_'},
        {var,519,'_'},
        {var,519,'_'},
        {var,519,'_'},
        {var,519,'_'},
        {var,519,'_'},
        {var,519,'_'},
        {var,519,'_'},
        {var,519,'_'},
        {var,519,'_'},
        {var,519,'PreOpened'}]},
      {var,519,'St'}}],
    [],
    [{call,520,{atom,520,process_flag},[{atom,520,trap_exit},{atom,520,true}]},
     {'case',521,
      {var,521,'PreOpened'},
      [{clause,522,
        [{atom,522,false}],
        [],
        [{'case',523,
          {call,523,
           {remote,523,{atom,523,file},{atom,523,open}},
           [{var,523,'Name'},{cons,523,{atom,523,read},{nil,523}}]},
          [{clause,524,
            [{tuple,524,[{atom,524,ok},{var,524,'File'}]}],
            [],
            [{call,525,
              {atom,525,init_server},
              [{var,525,'Pid'},
               {var,525,'Name'},
               {var,525,'Options'},
               {call,525,
                {remote,525,{atom,525,erlang},{atom,525,setelement}},
                [{integer,525,2},{var,525,'St'},{var,525,'File'}]}]}]},
           {clause,526,
            [{tuple,526,[{atom,526,error},{var,526,'E'}]}],
            [],
            [{call,527,
              {atom,527,epp_reply},
              [{var,527,'Pid'},
               {tuple,527,[{atom,527,error},{var,527,'E'}]}]}]}]}]},
       {clause,529,
        [{atom,529,true}],
        [],
        [{call,530,
          {atom,530,init_server},
          [{var,530,'Pid'},
           {var,530,'Name'},
           {var,530,'Options'},
           {var,530,'St'}]}]}]}]}]},
 {function,533,init_server,4,
  [{clause,533,
    [{var,533,'Pid'},{var,533,'Name'},{var,533,'Options'},{var,533,'St0'}],
    [],
    [{match,534,
      {var,534,'Pdm'},
      {call,534,
       {remote,534,{atom,534,proplists},{atom,534,get_value}},
       [{atom,534,macros},{var,534,'Options'},{nil,534}]}},
     {match,535,
      {var,535,'Ms0'},
      {call,535,{atom,535,predef_macros},[{var,535,'Name'}]}},
     {'case',536,
      {call,536,{atom,536,user_predef},[{var,536,'Pdm'},{var,536,'Ms0'}]},
      [{clause,537,
        [{tuple,537,[{atom,537,ok},{var,537,'Ms1'}]}],
        [],
        [{match,538,
          {tuple,538,
           [{atom,538,epp},
            {var,538,'File'},
            {var,538,'AtLocation'},
            {var,538,'_'},
            {var,538,'_'},
            {var,538,'_'},
            {var,538,'_'},
            {var,538,'_'},
            {var,538,'_'},
            {var,538,'_'},
            {var,538,'_'},
            {var,538,'_'},
            {var,538,'_'}]},
          {var,538,'St0'}},
         {match,539,
          {var,539,'DefEncoding'},
          {call,539,
           {remote,539,{atom,539,proplists},{atom,539,get_value}},
           [{atom,539,default_encoding},{var,539,'Options'},{atom,49,utf8}]}},
         {match,541,
          {var,541,'Encoding'},
          {call,541,
           {atom,541,set_encoding},
           [{var,541,'File'},{var,541,'DefEncoding'}]}},
         {call,542,
          {atom,542,epp_reply},
          [{var,542,'Pid'},
           {tuple,542,
            [{atom,542,ok},
             {call,542,{atom,542,self},[]},
             {var,542,'Encoding'}]}]},
         {match,545,
          {var,545,'Path'},
          {cons,545,
           {call,545,
            {remote,545,{atom,545,filename},{atom,545,dirname}},
            [{var,545,'Name'}]},
           {call,546,
            {remote,546,{atom,546,proplists},{atom,546,get_value}},
            [{atom,546,includes},{var,546,'Options'},{nil,546}]}}},
         {match,547,
          {var,547,'St'},
          {call,547,
           {remote,547,{atom,547,erlang},{atom,547,setelement}},
           [{integer,547,12},
            {call,547,
             {remote,547,{atom,547,erlang},{atom,547,setelement}},
             [{integer,547,10},
              {call,547,
               {remote,547,{atom,547,erlang},{atom,547,setelement}},
               [{integer,547,9},
                {call,547,
                 {remote,547,{atom,547,erlang},{atom,547,setelement}},
                 [{integer,547,6},
                  {call,547,
                   {remote,547,{atom,547,erlang},{atom,547,setelement}},
                   [{integer,547,5},
                    {call,547,
                     {remote,547,{atom,547,erlang},{atom,547,setelement}},
                     [{integer,547,4},{var,547,'St0'},{integer,547,0}]},
                    {var,547,'Name'}]},
                  {var,547,'Name'}]},
                {var,548,'Path'}]},
              {var,548,'Ms1'}]},
            {var,549,'DefEncoding'}]}},
         {match,550,
          {var,550,'From'},
          {call,550,{atom,550,wait_request},[{var,550,'St'}]}},
         {match,551,
          {var,551,'Anno'},
          {call,551,
           {remote,551,{atom,551,erl_anno},{atom,551,new}},
           [{var,551,'AtLocation'}]}},
         {call,552,
          {atom,552,enter_file_reply},
          [{var,552,'From'},
           {var,552,'Name'},
           {var,552,'Anno'},
           {var,552,'AtLocation'},
           {atom,552,code}]},
         {call,553,{atom,553,wait_req_scan},[{var,553,'St'}]}]},
       {clause,554,
        [{tuple,554,[{atom,554,error},{var,554,'E'}]}],
        [],
        [{call,555,
          {atom,555,epp_reply},
          [{var,555,'Pid'},
           {tuple,555,[{atom,555,error},{var,555,'E'}]}]}]}]}]}]},
 {function,562,predef_macros,1,
  [{clause,562,
    [{var,562,'File'}],
    [],
    [{match,563,
      {var,563,'Machine'},
      {call,563,
       {atom,563,list_to_atom},
       [{call,563,
         {remote,563,{atom,563,erlang},{atom,563,system_info}},
         [{atom,563,machine}]}]}},
     {match,564,{var,564,'Anno'},{call,564,{atom,564,line1},[]}},
     {call,565,
      {remote,565,{atom,565,dict},{atom,565,from_list}},
      [{cons,565,
        {tuple,566,
         [{tuple,566,[{atom,566,atom},{atom,566,'FILE'}]},
          {tuple,566,
           [{atom,566,none},
            {cons,566,
             {tuple,566,[{atom,566,string},{var,566,'Anno'},{var,566,'File'}]},
             {nil,566}}]}]},
        {cons,567,
         {tuple,567,
          [{tuple,567,[{atom,567,atom},{atom,567,'LINE'}]},
           {tuple,567,
            [{atom,567,none},
             {cons,567,
              {tuple,567,
               [{atom,567,integer},{var,567,'Anno'},{integer,567,1}]},
              {nil,567}}]}]},
         {cons,568,
          {tuple,568,
           [{tuple,568,[{atom,568,atom},{atom,568,'MODULE'}]},
            {atom,568,undefined}]},
          {cons,569,
           {tuple,569,
            [{tuple,569,[{atom,569,atom},{atom,569,'MODULE_STRING'}]},
             {atom,569,undefined}]},
           {cons,570,
            {tuple,570,
             [{tuple,570,[{atom,570,atom},{atom,570,'BASE_MODULE'}]},
              {atom,570,undefined}]},
            {cons,571,
             {tuple,571,
              [{tuple,571,[{atom,571,atom},{atom,571,'BASE_MODULE_STRING'}]},
               {atom,571,undefined}]},
             {cons,572,
              {tuple,572,
               [{tuple,572,[{atom,572,atom},{atom,572,'MACHINE'}]},
                {tuple,572,
                 [{atom,572,none},
                  {cons,572,
                   {tuple,572,
                    [{atom,572,atom},{var,572,'Anno'},{var,572,'Machine'}]},
                   {nil,572}}]}]},
              {cons,573,
               {tuple,573,
                [{tuple,573,[{atom,573,atom},{var,573,'Machine'}]},
                 {tuple,573,
                  [{atom,573,none},
                   {cons,573,
                    {tuple,573,
                     [{atom,573,atom},{var,573,'Anno'},{atom,573,true}]},
                    {nil,573}}]}]},
               {nil,574}}}}}}}}}]}]}]},
 {function,581,user_predef,2,
  [{clause,581,
    [{cons,581,
      {tuple,581,[{var,581,'M'},{var,581,'Val'},{atom,581,redefine}]},
      {var,581,'Pdm'}},
     {var,581,'Ms'}],
    [[{call,581,{atom,581,is_atom},[{var,581,'M'}]}]],
    [{match,582,
      {var,582,'Exp'},
      {call,582,
       {remote,582,{atom,582,erl_parse},{atom,582,tokens}},
       [{call,582,
         {remote,582,{atom,582,erl_parse},{atom,582,abstract}},
         [{var,582,'Val'}]}]}},
     {call,583,
      {atom,583,user_predef},
      [{var,583,'Pdm'},
       {call,583,
        {remote,583,{atom,583,dict},{atom,583,store}},
        [{tuple,583,[{atom,583,atom},{var,583,'M'}]},
         {tuple,583,[{atom,583,none},{var,583,'Exp'}]},
         {var,583,'Ms'}]}]}]},
   {clause,584,
    [{cons,584,{tuple,584,[{var,584,'M'},{var,584,'Val'}]},{var,584,'Pdm'}},
     {var,584,'Ms'}],
    [[{call,584,{atom,584,is_atom},[{var,584,'M'}]}]],
    [{'case',585,
      {call,585,
       {remote,585,{atom,585,dict},{atom,585,find}},
       [{tuple,585,[{atom,585,atom},{var,585,'M'}]},{var,585,'Ms'}]},
      [{clause,586,
        [{tuple,586,[{atom,586,ok},{var,586,'_Defs'}]}],
        [[{call,586,{atom,586,is_list},[{var,586,'_Defs'}]}]],
        [{tuple,587,
          [{atom,587,error},
           {tuple,587,[{atom,587,redefine},{var,587,'M'}]}]}]},
       {clause,588,
        [{tuple,588,[{atom,588,ok},{var,588,'_Def'}]}],
        [],
        [{tuple,589,
          [{atom,589,error},
           {tuple,589,[{atom,589,redefine_predef},{var,589,'M'}]}]}]},
       {clause,590,
        [{atom,590,error}],
        [],
        [{match,591,
          {var,591,'Exp'},
          {call,591,
           {remote,591,{atom,591,erl_parse},{atom,591,tokens}},
           [{call,591,
             {remote,591,{atom,591,erl_parse},{atom,591,abstract}},
             [{var,591,'Val'}]}]}},
         {call,592,
          {atom,592,user_predef},
          [{var,592,'Pdm'},
           {call,592,
            {remote,592,{atom,592,dict},{atom,592,store}},
            [{tuple,592,[{atom,592,atom},{var,592,'M'}]},
             {cons,592,
              {tuple,592,
               [{atom,592,none},
                {tuple,592,[{atom,592,none},{var,592,'Exp'}]}]},
              {nil,592}},
             {var,592,'Ms'}]}]}]}]}]},
   {clause,594,
    [{cons,594,{var,594,'M'},{var,594,'Pdm'}},{var,594,'Ms'}],
    [[{call,594,{atom,594,is_atom},[{var,594,'M'}]}]],
    [{'case',595,
      {call,595,
       {remote,595,{atom,595,dict},{atom,595,find}},
       [{tuple,595,[{atom,595,atom},{var,595,'M'}]},{var,595,'Ms'}]},
      [{clause,596,
        [{tuple,596,[{atom,596,ok},{var,596,'_Defs'}]}],
        [[{call,596,{atom,596,is_list},[{var,596,'_Defs'}]}]],
        [{tuple,597,
          [{atom,597,error},
           {tuple,597,[{atom,597,redefine},{var,597,'M'}]}]}]},
       {clause,598,
        [{tuple,598,[{atom,598,ok},{var,598,'_Def'}]}],
        [],
        [{tuple,599,
          [{atom,599,error},
           {tuple,599,[{atom,599,redefine_predef},{var,599,'M'}]}]}]},
       {clause,600,
        [{atom,600,error}],
        [],
        [{match,601,{var,601,'A'},{call,601,{atom,601,line1},[]}},
         {call,602,
          {atom,602,user_predef},
          [{var,602,'Pdm'},
           {call,603,
            {remote,603,{atom,603,dict},{atom,603,store}},
            [{tuple,603,[{atom,603,atom},{var,603,'M'}]},
             {cons,603,
              {tuple,603,
               [{atom,603,none},
                {tuple,603,
                 [{atom,603,none},
                  {cons,603,
                   {tuple,603,[{atom,603,atom},{var,603,'A'},{atom,603,true}]},
                   {nil,603}}]}]},
              {nil,603}},
             {var,603,'Ms'}]}]}]}]}]},
   {clause,605,
    [{cons,605,{var,605,'Md'},{var,605,'_Pdm'}},{var,605,'_Ms'}],
    [],
    [{tuple,605,
      [{atom,605,error},{tuple,605,[{atom,605,bad},{var,605,'Md'}]}]}]},
   {clause,606,
    [{nil,606},{var,606,'Ms'}],
    [],
    [{tuple,606,[{atom,606,ok},{var,606,'Ms'}]}]}]},
 {function,614,wait_request,1,
  [{clause,614,
    [{var,614,'St'}],
    [],
    [{'receive',615,
      [{clause,616,
        [{tuple,616,
          [{atom,616,epp_request},{var,616,'From'},{atom,616,scan_erl_form}]}],
        [],
        [{var,616,'From'}]},
       {clause,617,
        [{tuple,617,
          [{atom,617,epp_request},{var,617,'From'},{atom,617,macro_defs}]}],
        [],
        [{call,618,
          {atom,618,epp_reply},
          [{var,618,'From'},
           {call,618,
            {remote,618,{atom,618,dict},{atom,618,to_list}},
            [{call,618,
              {remote,618,{atom,618,erlang},{atom,618,element}},
              [{integer,618,10},{var,618,'St'}]}]}]},
         {call,619,{atom,619,wait_request},[{var,619,'St'}]}]},
       {clause,620,
        [{tuple,620,
          [{atom,620,epp_request},{var,620,'From'},{atom,620,close}]}],
        [],
        [{call,621,{atom,621,close_file},[{var,621,'St'}]},
         {call,622,{atom,622,epp_reply},[{var,622,'From'},{atom,622,ok}]},
         {call,623,{atom,623,exit},[{atom,623,normal}]}]},
       {clause,624,
        [{tuple,624,[{atom,624,'EXIT'},{var,624,'_'},{var,624,'R'}]}],
        [],
        [{call,625,{atom,625,exit},[{var,625,'R'}]}]},
       {clause,626,
        [{var,626,'Other'}],
        [],
        [{call,627,
          {remote,627,{atom,627,io},{atom,627,fwrite}},
          [{string,627,"Epp: unknown '~w'\n"},
           {cons,627,{var,627,'Other'},{nil,627}}]},
         {call,628,{atom,628,wait_request},[{var,628,'St'}]}]}]}]}]},
 {function,631,close_file,1,
  [{clause,631,
    [{tuple,631,
      [{atom,631,epp},
       {var,631,'_'},
       {var,631,'_'},
       {var,631,'_'},
       {var,631,'_'},
       {var,631,'_'},
       {var,631,'_'},
       {var,631,'_'},
       {var,631,'_'},
       {var,631,'_'},
       {var,631,'_'},
       {var,631,'_'},
       {atom,631,true}]}],
    [],
    [{atom,632,ok}]},
   {clause,633,
    [{tuple,633,
      [{atom,633,epp},
       {var,633,'File'},
       {var,633,'_'},
       {var,633,'_'},
       {var,633,'_'},
       {var,633,'_'},
       {var,633,'_'},
       {var,633,'_'},
       {var,633,'_'},
       {var,633,'_'},
       {var,633,'_'},
       {var,633,'_'},
       {atom,633,false}]}],
    [],
    [{match,634,
      {atom,634,ok},
      {call,634,
       {remote,634,{atom,634,file},{atom,634,close}},
       [{var,634,'File'}]}}]}]},
 {function,636,wait_req_scan,1,
  [{clause,636,
    [{var,636,'St'}],
    [],
    [{match,637,
      {var,637,'From'},
      {call,637,{atom,637,wait_request},[{var,637,'St'}]}},
     {call,638,{atom,638,scan_toks},[{var,638,'From'},{var,638,'St'}]}]}]},
 {function,640,wait_req_skip,2,
  [{clause,640,
    [{var,640,'St'},{var,640,'Sis'}],
    [],
    [{match,641,
      {var,641,'From'},
      {call,641,{atom,641,wait_request},[{var,641,'St'}]}},
     {call,642,
      {atom,642,skip_toks},
      [{var,642,'From'},{var,642,'St'},{var,642,'Sis'}]}]}]},
 {function,650,enter_file,4,
  [{clause,650,
    [{var,650,'_NewName'},{var,650,'Inc'},{var,650,'From'},{var,650,'St'}],
    [[{op,651,'>=',
       {call,651,
        {atom,651,length},
        [{call,651,
          {remote,651,{atom,651,erlang},{atom,651,element}},
          [{integer,651,8},{var,651,'St'}]}]},
       {integer,651,8}}]],
    [{call,652,
      {atom,652,epp_reply},
      [{var,652,'From'},
       {tuple,652,
        [{atom,652,error},
         {tuple,652,
          [{call,652,{atom,652,loc},[{var,652,'Inc'}]},
           {atom,652,epp},
           {tuple,652,[{atom,652,depth},{string,652,"include"}]}]}]}]},
     {call,653,{atom,653,wait_req_scan},[{var,653,'St'}]}]},
   {clause,654,
    [{var,654,'NewName'},{var,654,'Inc'},{var,654,'From'},{var,654,'St'}],
    [],
    [{'case',655,
      {call,655,
       {remote,655,{atom,655,file},{atom,655,path_open}},
       [{call,655,
         {remote,655,{atom,655,erlang},{atom,655,element}},
         [{integer,655,9},{var,655,'St'}]},
        {var,655,'NewName'},
        {cons,655,{atom,655,read},{nil,655}}]},
      [{clause,656,
        [{tuple,656,[{atom,656,ok},{var,656,'NewF'},{var,656,'Pname'}]}],
        [],
        [{match,657,
          {var,657,'Loc'},
          {call,657,
           {atom,657,start_loc},
           [{call,657,
             {remote,657,{atom,657,erlang},{atom,657,element}},
             [{integer,657,3},{var,657,'St'}]}]}},
         {call,658,
          {atom,658,wait_req_scan},
          [{call,658,
            {atom,658,enter_file2},
            [{var,658,'NewF'},
             {var,658,'Pname'},
             {var,658,'From'},
             {var,658,'St'},
             {var,658,'Loc'}]}]}]},
       {clause,659,
        [{tuple,659,[{atom,659,error},{var,659,'_E'}]}],
        [],
        [{call,660,
          {atom,660,epp_reply},
          [{var,660,'From'},
           {tuple,660,
            [{atom,660,error},
             {tuple,660,
              [{call,660,{atom,660,loc},[{var,660,'Inc'}]},
               {atom,660,epp},
               {tuple,660,
                [{atom,660,include},
                 {atom,660,file},
                 {var,660,'NewName'}]}]}]}]},
         {call,661,{atom,661,wait_req_scan},[{var,661,'St'}]}]}]}]}]},
 {function,667,enter_file2,5,
  [{clause,667,
    [{var,667,'NewF'},
     {var,667,'Pname'},
     {var,667,'From'},
     {var,667,'St0'},
     {var,667,'AtLocation'}],
    [],
    [{match,668,
      {var,668,'Anno'},
      {call,668,
       {remote,668,{atom,668,erl_anno},{atom,668,new}},
       [{var,668,'AtLocation'}]}},
     {call,669,
      {atom,669,enter_file_reply},
      [{var,669,'From'},
       {var,669,'Pname'},
       {var,669,'Anno'},
       {var,669,'AtLocation'},
       {atom,669,code}]},
     {match,670,
      {var,670,'Ms'},
      {call,670,
       {remote,670,{atom,670,dict},{atom,670,store}},
       [{tuple,670,[{atom,670,atom},{atom,670,'FILE'}]},
        {tuple,670,
         [{atom,670,none},
          {cons,670,
           {tuple,670,[{atom,670,string},{var,670,'Anno'},{var,670,'Pname'}]},
           {nil,670}}]},
        {call,670,
         {remote,670,{atom,670,erlang},{atom,670,element}},
         [{integer,670,10},{var,670,'St0'}]}]}},
     {match,677,
      {var,677,'Path'},
      {cons,677,
       {call,677,
        {remote,677,{atom,677,filename},{atom,677,dirname}},
        [{var,677,'Pname'}]},
       {call,677,
        {atom,677,tl},
        [{call,677,
          {remote,677,{atom,677,erlang},{atom,677,element}},
          [{integer,677,9},{var,677,'St0'}]}]}}},
     {match,678,
      {var,678,'DefEncoding'},
      {call,678,
       {remote,678,{atom,678,erlang},{atom,678,element}},
       [{integer,678,12},{var,678,'St0'}]}},
     {match,679,
      {var,679,'_'},
      {call,679,
       {atom,679,set_encoding},
       [{var,679,'NewF'},{var,679,'DefEncoding'}]}},
     {tuple,680,
      [{atom,680,epp},
       {var,680,'NewF'},
       {var,680,'AtLocation'},
       {integer,680,0},
       {var,680,'Pname'},
       {var,680,'Pname'},
       {nil,57},
       {cons,681,
        {var,681,'St0'},
        {call,681,
         {remote,681,{atom,681,erlang},{atom,681,element}},
         [{integer,681,8},{var,681,'St0'}]}},
       {var,681,'Path'},
       {var,681,'Ms'},
       {call,62,{remote,62,{atom,62,dict},{atom,62,new}},[]},
       {var,682,'DefEncoding'},
       {atom,65,false}]}]}]},
 {function,684,enter_file_reply,5,
  [{clause,684,
    [{var,684,'From'},
     {var,684,'Name'},
     {var,684,'LocationAnno'},
     {var,684,'AtLocation'},
     {var,684,'Where'}],
    [],
    [{match,685,
      {var,685,'Anno0'},
      {call,685,{atom,685,loc_anno},[{var,685,'AtLocation'}]}},
     {match,686,
      {var,686,'Anno'},
      {'case',686,
       {var,686,'Where'},
       [{clause,687,[{atom,687,code}],[],[{var,687,'Anno0'}]},
        {clause,688,
         [{atom,688,generated}],
         [],
         [{call,688,
           {remote,688,{atom,688,erl_anno},{atom,688,set_generated}},
           [{atom,688,true},{var,688,'Anno0'}]}]}]}},
     {match,690,
      {var,690,'Rep'},
      {tuple,690,
       [{atom,690,ok},
        {cons,690,
         {tuple,690,[{atom,690,'-'},{var,690,'Anno'}]},
         {cons,690,
          {tuple,690,[{atom,690,atom},{var,690,'Anno'},{atom,690,file}]},
          {cons,690,
           {tuple,690,[{atom,690,'('},{var,690,'Anno'}]},
           {cons,691,
            {tuple,691,
             [{atom,691,string},
              {var,691,'Anno'},
              {call,691,{atom,691,file_name},[{var,691,'Name'}]}]},
            {cons,691,
             {tuple,691,[{atom,691,','},{var,691,'Anno'}]},
             {cons,692,
              {tuple,692,
               [{atom,692,integer},
                {var,692,'Anno'},
                {call,692,{atom,692,get_line},[{var,692,'LocationAnno'}]}]},
              {cons,692,
               {tuple,692,[{atom,692,')'},{var,692,'LocationAnno'}]},
               {cons,693,
                {tuple,693,[{atom,693,dot},{var,693,'Anno'}]},
                {nil,693}}}}}}}}}]}},
     {call,694,{atom,694,epp_reply},[{var,694,'From'},{var,694,'Rep'}]}]}]},
 {function,698,file_name,1,
  [{clause,698,
    [{cons,698,{var,698,'C'},{var,698,'T'}}],
    [[{call,698,{atom,698,is_integer},[{var,698,'C'}]},
      {op,698,'>',{var,698,'C'},{integer,698,0}}]],
    [{cons,699,
      {var,699,'C'},
      {call,699,{atom,699,file_name},[{var,699,'T'}]}}]},
   {clause,700,
    [{cons,700,{var,700,'H'},{var,700,'T'}}],
    [],
    [{op,701,'++',
      {call,701,{atom,701,file_name},[{var,701,'H'}]},
      {call,701,{atom,701,file_name},[{var,701,'T'}]}}]},
   {clause,702,[{nil,702}],[],[{nil,703}]},
   {clause,704,
    [{var,704,'N'}],
    [[{call,704,{atom,704,is_atom},[{var,704,'N'}]}]],
    [{call,705,{atom,705,atom_to_list},[{var,705,'N'}]}]}]},
 {function,707,leave_file,2,
  [{clause,707,
    [{var,707,'From'},{var,707,'St'}],
    [],
    [{'case',708,
      {call,708,
       {remote,708,{atom,708,erlang},{atom,708,element}},
       [{integer,708,7},{var,708,'St'}]},
      [{clause,709,
        [{cons,709,{var,709,'I'},{var,709,'Cis'}}],
        [],
        [{call,710,
          {atom,710,epp_reply},
          [{var,710,'From'},
           {tuple,711,
            [{atom,711,error},
             {tuple,711,
              [{call,711,
                {remote,711,{atom,711,erlang},{atom,711,element}},
                [{integer,711,3},{var,711,'St'}]},
               {atom,711,epp},
               {tuple,712,
                [{atom,712,illegal},
                 {string,712,"unterminated"},
                 {var,712,'I'}]}]}]}]},
         {call,713,
          {atom,713,leave_file},
          [{call,713,{atom,713,wait_request},[{var,713,'St'}]},
           {call,713,
            {remote,713,{atom,713,erlang},{atom,713,setelement}},
            [{integer,713,7},{var,713,'St'},{var,713,'Cis'}]}]}]},
       {clause,714,
        [{nil,714}],
        [],
        [{'case',715,
          {call,715,
           {remote,715,{atom,715,erlang},{atom,715,element}},
           [{integer,715,8},{var,715,'St'}]},
          [{clause,716,
            [{cons,716,{var,716,'OldSt'},{var,716,'Sts'}}],
            [],
            [{call,717,{atom,717,close_file},[{var,717,'St'}]},
             {match,719,
              {tuple,718,
               [{atom,718,epp},
                {var,718,'_'},
                {var,718,'OldLoc'},
                {var,718,'Delta'},
                {var,718,'OldName'},
                {var,719,'OldName2'},
                {var,718,'_'},
                {var,718,'_'},
                {var,718,'_'},
                {var,718,'_'},
                {var,718,'_'},
                {var,718,'_'},
                {var,718,'_'}]},
              {var,719,'OldSt'}},
             {match,720,
              {var,720,'CurrLoc'},
              {call,720,
               {atom,720,add_line},
               [{var,720,'OldLoc'},{var,720,'Delta'}]}},
             {match,721,
              {var,721,'Anno'},
              {call,721,
               {remote,721,{atom,721,erl_anno},{atom,721,new}},
               [{var,721,'CurrLoc'}]}},
             {match,722,
              {var,722,'Ms'},
              {call,722,
               {remote,722,{atom,722,dict},{atom,722,store}},
               [{tuple,722,[{atom,722,atom},{atom,722,'FILE'}]},
                {tuple,723,
                 [{atom,723,none},
                  {cons,723,
                   {tuple,723,
                    [{atom,723,string},{var,723,'Anno'},{var,723,'OldName2'}]},
                   {nil,723}}]},
                {call,724,
                 {remote,724,{atom,724,erlang},{atom,724,element}},
                 [{integer,724,10},{var,724,'St'}]}]}},
             {match,725,
              {var,725,'NextSt'},
              {call,725,
               {remote,725,{atom,725,erlang},{atom,725,setelement}},
               [{integer,725,11},
                {call,725,
                 {remote,725,{atom,725,erlang},{atom,725,setelement}},
                 [{integer,725,10},
                  {call,725,
                   {remote,725,{atom,725,erlang},{atom,725,setelement}},
                   [{integer,725,8},{var,725,'OldSt'},{var,725,'Sts'}]},
                  {var,725,'Ms'}]},
                {call,725,
                 {remote,725,{atom,725,erlang},{atom,725,element}},
                 [{integer,725,11},{var,725,'St'}]}]}},
             {call,726,
              {atom,726,enter_file_reply},
              [{var,726,'From'},
               {var,726,'OldName'},
               {var,726,'Anno'},
               {var,726,'CurrLoc'},
               {atom,726,code}]},
             {'case',727,
              {op,727,'=:=',{var,727,'OldName2'},{var,727,'OldName'}},
              [{clause,728,[{atom,728,true}],[],[{atom,729,ok}]},
               {clause,730,
                [{atom,730,false}],
                [],
                [{match,731,
                  {var,731,'NFrom'},
                  {call,731,{atom,731,wait_request},[{var,731,'NextSt'}]}},
                 {match,732,
                  {var,732,'OldAnno'},
                  {call,732,
                   {remote,732,{atom,732,erl_anno},{atom,732,new}},
                   [{var,732,'OldLoc'}]}},
                 {call,733,
                  {atom,733,enter_file_reply},
                  [{var,733,'NFrom'},
                   {var,733,'OldName2'},
                   {var,733,'OldAnno'},
                   {var,734,'CurrLoc'},
                   {atom,734,generated}]}]}]},
             {call,736,{atom,736,wait_req_scan},[{var,736,'NextSt'}]}]},
           {clause,737,
            [{nil,737}],
            [],
            [{call,738,
              {atom,738,epp_reply},
              [{var,738,'From'},
               {tuple,738,
                [{atom,738,eof},
                 {call,738,
                  {remote,738,{atom,738,erlang},{atom,738,element}},
                  [{integer,738,3},{var,738,'St'}]}]}]},
             {call,739,{atom,739,wait_req_scan},[{var,739,'St'}]}]}]}]}]}]}]},
 {function,746,scan_toks,2,
  [{clause,746,
    [{var,746,'From'},{var,746,'St'}],
    [],
    [{'case',747,
      {call,747,
       {remote,747,{atom,747,io},{atom,747,scan_erl_form}},
       [{call,747,
         {remote,747,{atom,747,erlang},{atom,747,element}},
         [{integer,747,2},{var,747,'St'}]},
        {atom,747,''},
        {call,747,
         {remote,747,{atom,747,erlang},{atom,747,element}},
         [{integer,747,3},{var,747,'St'}]}]},
      [{clause,748,
        [{tuple,748,[{atom,748,ok},{var,748,'Toks'},{var,748,'Cl'}]}],
        [],
        [{call,749,
          {atom,749,scan_toks},
          [{var,749,'Toks'},
           {var,749,'From'},
           {call,749,
            {remote,749,{atom,749,erlang},{atom,749,setelement}},
            [{integer,749,3},{var,749,'St'},{var,749,'Cl'}]}]}]},
       {clause,750,
        [{tuple,750,[{atom,750,error},{var,750,'E'},{var,750,'Cl'}]}],
        [],
        [{call,751,
          {atom,751,epp_reply},
          [{var,751,'From'},{tuple,751,[{atom,751,error},{var,751,'E'}]}]},
         {call,752,
          {atom,752,wait_req_scan},
          [{call,752,
            {remote,752,{atom,752,erlang},{atom,752,setelement}},
            [{integer,752,3},{var,752,'St'},{var,752,'Cl'}]}]}]},
       {clause,753,
        [{tuple,753,[{atom,753,eof},{var,753,'Cl'}]}],
        [],
        [{call,754,
          {atom,754,leave_file},
          [{var,754,'From'},
           {call,754,
            {remote,754,{atom,754,erlang},{atom,754,setelement}},
            [{integer,754,3},{var,754,'St'},{var,754,'Cl'}]}]}]},
       {clause,755,
        [{tuple,755,[{atom,755,error},{var,755,'_E'}]}],
        [],
        [{call,756,
          {atom,756,epp_reply},
          [{var,756,'From'},
           {tuple,756,
            [{atom,756,error},
             {tuple,756,
              [{call,756,
                {remote,756,{atom,756,erlang},{atom,756,element}},
                [{integer,756,3},{var,756,'St'}]},
               {atom,756,epp},
               {atom,756,cannot_parse}]}]}]},
         {call,757,
          {atom,757,leave_file},
          [{call,757,{atom,757,wait_request},[{var,757,'St'}]},
           {var,757,'St'}]}]}]}]}]},
 {function,760,scan_toks,3,
  [{clause,760,
    [{cons,760,
      {tuple,760,[{atom,760,'-'},{var,760,'_Lh'}]},
      {cons,760,
       {match,760,
        {tuple,760,[{atom,760,atom},{var,760,'_Ld'},{atom,760,define}]},
        {var,760,'Define'}},
       {var,760,'Toks'}}},
     {var,760,'From'},
     {var,760,'St'}],
    [],
    [{call,761,
      {atom,761,scan_define},
      [{var,761,'Toks'},{var,761,'Define'},{var,761,'From'},{var,761,'St'}]}]},
   {clause,762,
    [{cons,762,
      {tuple,762,[{atom,762,'-'},{var,762,'_Lh'}]},
      {cons,762,
       {match,762,
        {tuple,762,[{atom,762,atom},{var,762,'_Ld'},{atom,762,undef}]},
        {var,762,'Undef'}},
       {var,762,'Toks'}}},
     {var,762,'From'},
     {var,762,'St'}],
    [],
    [{call,763,
      {atom,763,scan_undef},
      [{var,763,'Toks'},{var,763,'Undef'},{var,763,'From'},{var,763,'St'}]}]},
   {clause,764,
    [{cons,764,
      {tuple,764,[{atom,764,'-'},{var,764,'_Lh'}]},
      {cons,764,
       {match,764,
        {tuple,764,[{atom,764,atom},{var,764,'_Li'},{atom,764,include}]},
        {var,764,'Inc'}},
       {var,764,'Toks'}}},
     {var,764,'From'},
     {var,764,'St'}],
    [],
    [{call,765,
      {atom,765,scan_include},
      [{var,765,'Toks'},{var,765,'Inc'},{var,765,'From'},{var,765,'St'}]}]},
   {clause,766,
    [{cons,766,
      {tuple,766,[{atom,766,'-'},{var,766,'_Lh'}]},
      {cons,766,
       {match,766,
        {tuple,766,[{atom,766,atom},{var,766,'_Li'},{atom,766,include_lib}]},
        {var,766,'IncLib'}},
       {var,766,'Toks'}}},
     {var,766,'From'},
     {var,766,'St'}],
    [],
    [{call,767,
      {atom,767,scan_include_lib},
      [{var,767,'Toks'},{var,767,'IncLib'},{var,767,'From'},{var,767,'St'}]}]},
   {clause,768,
    [{cons,768,
      {tuple,768,[{atom,768,'-'},{var,768,'_Lh'}]},
      {cons,768,
       {match,768,
        {tuple,768,[{atom,768,atom},{var,768,'_Li'},{atom,768,ifdef}]},
        {var,768,'IfDef'}},
       {var,768,'Toks'}}},
     {var,768,'From'},
     {var,768,'St'}],
    [],
    [{call,769,
      {atom,769,scan_ifdef},
      [{var,769,'Toks'},{var,769,'IfDef'},{var,769,'From'},{var,769,'St'}]}]},
   {clause,770,
    [{cons,770,
      {tuple,770,[{atom,770,'-'},{var,770,'_Lh'}]},
      {cons,770,
       {match,770,
        {tuple,770,[{atom,770,atom},{var,770,'_Li'},{atom,770,ifndef}]},
        {var,770,'IfnDef'}},
       {var,770,'Toks'}}},
     {var,770,'From'},
     {var,770,'St'}],
    [],
    [{call,771,
      {atom,771,scan_ifndef},
      [{var,771,'Toks'},{var,771,'IfnDef'},{var,771,'From'},{var,771,'St'}]}]},
   {clause,772,
    [{cons,772,
      {tuple,772,[{atom,772,'-'},{var,772,'_Lh'}]},
      {cons,772,
       {match,772,
        {tuple,772,[{atom,772,atom},{var,772,'_Le'},{atom,772,else}]},
        {var,772,'Else'}},
       {var,772,'Toks'}}},
     {var,772,'From'},
     {var,772,'St'}],
    [],
    [{call,773,
      {atom,773,scan_else},
      [{var,773,'Toks'},{var,773,'Else'},{var,773,'From'},{var,773,'St'}]}]},
   {clause,774,
    [{cons,774,
      {tuple,774,[{atom,774,'-'},{var,774,'_Lh'}]},
      {cons,774,
       {match,774,
        {tuple,774,[{atom,774,'if'},{var,774,'_Le'}]},
        {var,774,'If'}},
       {var,774,'Toks'}}},
     {var,774,'From'},
     {var,774,'St'}],
    [],
    [{call,775,
      {atom,775,scan_if},
      [{var,775,'Toks'},{var,775,'If'},{var,775,'From'},{var,775,'St'}]}]},
   {clause,776,
    [{cons,776,
      {tuple,776,[{atom,776,'-'},{var,776,'_Lh'}]},
      {cons,776,
       {match,776,
        {tuple,776,[{atom,776,atom},{var,776,'_Le'},{atom,776,elif}]},
        {var,776,'Elif'}},
       {var,776,'Toks'}}},
     {var,776,'From'},
     {var,776,'St'}],
    [],
    [{call,777,
      {atom,777,scan_elif},
      [{var,777,'Toks'},{var,777,'Elif'},{var,777,'From'},{var,777,'St'}]}]},
   {clause,778,
    [{cons,778,
      {tuple,778,[{atom,778,'-'},{var,778,'_Lh'}]},
      {cons,778,
       {match,778,
        {tuple,778,[{atom,778,atom},{var,778,'_Le'},{atom,778,endif}]},
        {var,778,'Endif'}},
       {var,778,'Toks'}}},
     {var,778,'From'},
     {var,778,'St'}],
    [],
    [{call,779,
      {atom,779,scan_endif},
      [{var,779,'Toks'},{var,779,'Endif'},{var,779,'From'},{var,779,'St'}]}]},
   {clause,780,
    [{cons,780,
      {tuple,780,[{atom,780,'-'},{var,780,'_Lh'}]},
      {cons,780,
       {match,780,
        {tuple,780,[{atom,780,atom},{var,780,'_Lf'},{atom,780,file}]},
        {var,780,'FileToken'}},
       {var,780,'Toks0'}}},
     {var,780,'From'},
     {var,780,'St'}],
    [],
    [{'case',781,
      {'catch',781,
       {call,781,
        {atom,781,expand_macros},
        [{var,781,'Toks0'},
         {tuple,781,
          [{call,781,
            {remote,781,{atom,781,erlang},{atom,781,element}},
            [{integer,781,10},{var,781,'St'}]},
           {call,781,
            {remote,781,{atom,781,erlang},{atom,781,element}},
            [{integer,781,11},{var,781,'St'}]}]}]}},
      [{clause,782,
        [{var,782,'Toks1'}],
        [[{call,782,{atom,782,is_list},[{var,782,'Toks1'}]}]],
        [{call,783,
          {atom,783,scan_file},
          [{var,783,'Toks1'},
           {var,783,'FileToken'},
           {var,783,'From'},
           {var,783,'St'}]}]},
       {clause,784,
        [{tuple,784,[{atom,784,error},{var,784,'ErrL'},{var,784,'What'}]}],
        [],
        [{call,785,
          {atom,785,epp_reply},
          [{var,785,'From'},
           {tuple,785,
            [{atom,785,error},
             {tuple,785,
              [{var,785,'ErrL'},{atom,785,epp},{var,785,'What'}]}]}]},
         {call,786,{atom,786,wait_req_scan},[{var,786,'St'}]}]}]}]},
   {clause,788,
    [{var,788,'Toks0'},{var,788,'From'},{var,788,'St'}],
    [],
    [{'case',789,
      {'catch',789,
       {call,789,
        {atom,789,expand_macros},
        [{var,789,'Toks0'},
         {tuple,789,
          [{call,789,
            {remote,789,{atom,789,erlang},{atom,789,element}},
            [{integer,789,10},{var,789,'St'}]},
           {call,789,
            {remote,789,{atom,789,erlang},{atom,789,element}},
            [{integer,789,11},{var,789,'St'}]}]}]}},
      [{clause,790,
        [{var,790,'Toks1'}],
        [[{call,790,{atom,790,is_list},[{var,790,'Toks1'}]}]],
        [{call,791,
          {atom,791,epp_reply},
          [{var,791,'From'},{tuple,791,[{atom,791,ok},{var,791,'Toks1'}]}]},
         {call,792,
          {atom,792,wait_req_scan},
          [{call,792,
            {remote,792,{atom,792,erlang},{atom,792,setelement}},
            [{integer,792,10},
             {var,792,'St'},
             {call,792,
              {atom,792,scan_module},
              [{var,792,'Toks1'},
               {call,792,
                {remote,792,{atom,792,erlang},{atom,792,element}},
                [{integer,792,10},{var,792,'St'}]}]}]}]}]},
       {clause,793,
        [{tuple,793,[{atom,793,error},{var,793,'ErrL'},{var,793,'What'}]}],
        [],
        [{call,794,
          {atom,794,epp_reply},
          [{var,794,'From'},
           {tuple,794,
            [{atom,794,error},
             {tuple,794,
              [{var,794,'ErrL'},{atom,794,epp},{var,794,'What'}]}]}]},
         {call,795,{atom,795,wait_req_scan},[{var,795,'St'}]}]}]}]}]},
 {function,798,scan_module,2,
  [{clause,798,
    [{cons,798,
      {tuple,798,[{atom,798,'-'},{var,798,'_Lh'}]},
      {cons,798,
       {tuple,798,[{atom,798,atom},{var,798,'_Lm'},{atom,798,module}]},
       {cons,798,
        {tuple,798,[{atom,798,'('},{var,798,'_Ll'}]},
        {var,798,'Ts'}}}},
     {var,798,'Ms'}],
    [],
    [{call,799,
      {atom,799,scan_module_1},
      [{var,799,'Ts'},{nil,799},{var,799,'Ms'}]}]},
   {clause,800,
    [{cons,800,
      {tuple,800,[{atom,800,'-'},{var,800,'_Lh'}]},
      {cons,800,
       {tuple,800,[{atom,800,atom},{var,800,'_Lm'},{atom,800,extends}]},
       {cons,800,
        {tuple,800,[{atom,800,'('},{var,800,'_Ll'}]},
        {var,800,'Ts'}}}},
     {var,800,'Ms'}],
    [],
    [{call,801,
      {atom,801,scan_extends},
      [{var,801,'Ts'},{nil,801},{var,801,'Ms'}]}]},
   {clause,802,[{var,802,'_Ts'},{var,802,'Ms'}],[],[{var,802,'Ms'}]}]},
 {function,804,scan_module_1,3,
  [{clause,804,
    [{cons,804,
      {match,804,
       {tuple,804,[{atom,804,atom},{var,804,'_'},{var,804,'_'}]},
       {var,804,'A'}},
      {cons,804,{tuple,804,[{atom,804,','},{var,804,'L'}]},{var,804,'Ts'}}},
     {var,804,'As'},
     {var,804,'Ms'}],
    [],
    [{call,806,
      {atom,806,scan_module_1},
      [{cons,806,
        {var,806,'A'},
        {cons,806,{tuple,806,[{atom,806,')'},{var,806,'L'}]},{var,806,'Ts'}}},
       {var,806,'As'},
       {var,806,'Ms'}]}]},
   {clause,807,
    [{cons,807,
      {tuple,807,[{atom,807,atom},{var,807,'Ln'},{var,807,'A'}]},
      {cons,807,{tuple,807,[{atom,807,')'},{var,807,'_Lr'}]},{var,807,'_Ts'}}},
     {var,807,'As'},
     {var,807,'Ms0'}],
    [],
    [{match,808,
      {var,808,'Mod'},
      {call,808,
       {remote,808,{atom,808,lists},{atom,808,concat}},
       [{call,808,
         {remote,808,{atom,808,lists},{atom,808,reverse}},
         [{cons,808,{var,808,'A'},{var,808,'As'}}]}]}},
     {match,809,
      {var,809,'Ms'},
      {call,809,
       {remote,809,{atom,809,dict},{atom,809,store}},
       [{tuple,809,[{atom,809,atom},{atom,809,'MODULE'}]},
        {tuple,810,
         [{atom,810,none},
          {cons,810,
           {tuple,810,
            [{atom,810,atom},
             {var,810,'Ln'},
             {call,810,{atom,810,list_to_atom},[{var,810,'Mod'}]}]},
           {nil,810}}]},
        {var,810,'Ms0'}]}},
     {call,811,
      {remote,811,{atom,811,dict},{atom,811,store}},
      [{tuple,811,[{atom,811,atom},{atom,811,'MODULE_STRING'}]},
       {tuple,811,
        [{atom,811,none},
         {cons,811,
          {tuple,811,[{atom,811,string},{var,811,'Ln'},{var,811,'Mod'}]},
          {nil,811}}]},
       {var,811,'Ms'}]}]},
   {clause,812,
    [{cons,812,
      {tuple,812,[{atom,812,atom},{var,812,'_Ln'},{var,812,'A'}]},
      {cons,812,{tuple,812,[{atom,812,'.'},{var,812,'_Lr'}]},{var,812,'Ts'}}},
     {var,812,'As'},
     {var,812,'Ms'}],
    [],
    [{call,813,
      {atom,813,scan_module_1},
      [{var,813,'Ts'},
       {cons,813,{string,813,"."},{cons,813,{var,813,'A'},{var,813,'As'}}},
       {var,813,'Ms'}]}]},
   {clause,814,
    [{cons,814,{tuple,814,[{atom,814,'.'},{var,814,'_Lr'}]},{var,814,'Ts'}},
     {var,814,'As'},
     {var,814,'Ms'}],
    [],
    [{call,815,
      {atom,815,scan_module_1},
      [{var,815,'Ts'},{var,815,'As'},{var,815,'Ms'}]}]},
   {clause,816,
    [{var,816,'_Ts'},{var,816,'_As'},{var,816,'Ms'}],
    [],
    [{var,816,'Ms'}]}]},
 {function,818,scan_extends,3,
  [{clause,818,
    [{cons,818,
      {tuple,818,[{atom,818,atom},{var,818,'Ln'},{var,818,'A'}]},
      {cons,818,{tuple,818,[{atom,818,')'},{var,818,'_Lr'}]},{var,818,'_Ts'}}},
     {var,818,'As'},
     {var,818,'Ms0'}],
    [],
    [{match,819,
      {var,819,'Mod'},
      {call,819,
       {remote,819,{atom,819,lists},{atom,819,concat}},
       [{call,819,
         {remote,819,{atom,819,lists},{atom,819,reverse}},
         [{cons,819,{var,819,'A'},{var,819,'As'}}]}]}},
     {match,820,
      {var,820,'Ms'},
      {call,820,
       {remote,820,{atom,820,dict},{atom,820,store}},
       [{tuple,820,[{atom,820,atom},{atom,820,'BASE_MODULE'}]},
        {tuple,821,
         [{atom,821,none},
          {cons,821,
           {tuple,821,
            [{atom,821,atom},
             {var,821,'Ln'},
             {call,821,{atom,821,list_to_atom},[{var,821,'Mod'}]}]},
           {nil,821}}]},
        {var,821,'Ms0'}]}},
     {call,822,
      {remote,822,{atom,822,dict},{atom,822,store}},
      [{tuple,822,[{atom,822,atom},{atom,822,'BASE_MODULE_STRING'}]},
       {tuple,822,
        [{atom,822,none},
         {cons,822,
          {tuple,822,[{atom,822,string},{var,822,'Ln'},{var,822,'Mod'}]},
          {nil,822}}]},
       {var,822,'Ms'}]}]},
   {clause,823,
    [{cons,823,
      {tuple,823,[{atom,823,atom},{var,823,'_Ln'},{var,823,'A'}]},
      {cons,823,{tuple,823,[{atom,823,'.'},{var,823,'_Lr'}]},{var,823,'Ts'}}},
     {var,823,'As'},
     {var,823,'Ms'}],
    [],
    [{call,824,
      {atom,824,scan_extends},
      [{var,824,'Ts'},
       {cons,824,{string,824,"."},{cons,824,{var,824,'A'},{var,824,'As'}}},
       {var,824,'Ms'}]}]},
   {clause,825,
    [{cons,825,{tuple,825,[{atom,825,'.'},{var,825,'_Lr'}]},{var,825,'Ts'}},
     {var,825,'As'},
     {var,825,'Ms'}],
    [],
    [{call,826,
      {atom,826,scan_extends},
      [{var,826,'Ts'},{var,826,'As'},{var,826,'Ms'}]}]},
   {clause,827,
    [{var,827,'_Ts'},{var,827,'_As'},{var,827,'Ms'}],
    [],
    [{var,827,'Ms'}]}]},
 {function,831,scan_define,4,
  [{clause,831,
    [{cons,831,
      {tuple,831,[{atom,831,'('},{var,831,'_Lp'}]},
      {cons,831,
       {match,831,
        {tuple,831,[{var,831,'Type'},{var,831,'_Lm'},{var,831,'M'}]},
        {var,831,'Mac'}},
       {cons,831,
        {match,831,
         {tuple,831,[{atom,831,','},{var,831,'_'}]},
         {var,831,'Comma'}},
        {var,831,'Toks'}}}},
     {var,831,'_Def'},
     {var,831,'From'},
     {var,831,'St'}],
    [[{op,832,'=:=',{var,832,'Type'},{atom,832,atom}}],
     [{op,832,'=:=',{var,832,'Type'},{atom,832,var}}]],
    [{'case',833,
      {'catch',833,
       {call,833,
        {atom,833,macro_expansion},
        [{var,833,'Toks'},{var,833,'Comma'}]}},
      [{clause,834,
        [{var,834,'Expansion'}],
        [[{call,834,{atom,834,is_list},[{var,834,'Expansion'}]}]],
        [{'case',835,
          {call,835,
           {remote,835,{atom,835,dict},{atom,835,find}},
           [{tuple,835,[{atom,835,atom},{var,835,'M'}]},
            {call,835,
             {remote,835,{atom,835,erlang},{atom,835,element}},
             [{integer,835,10},{var,835,'St'}]}]},
          [{clause,836,
            [{tuple,836,[{atom,836,ok},{var,836,'Defs'}]}],
            [[{call,836,{atom,836,is_list},[{var,836,'Defs'}]}]],
            [{'case',838,
              {call,838,
               {remote,838,{atom,838,proplists},{atom,838,is_defined}},
               [{atom,838,none},{var,838,'Defs'}]},
              [{clause,839,
                [{atom,839,true}],
                [],
                [{call,840,
                  {atom,840,epp_reply},
                  [{var,840,'From'},
                   {tuple,840,
                    [{atom,840,error},
                     {tuple,840,
                      [{call,840,{atom,840,loc},[{var,840,'Mac'}]},
                       {atom,840,epp},
                       {tuple,840,[{atom,840,redefine},{var,840,'M'}]}]}]}]},
                 {call,841,{atom,841,wait_req_scan},[{var,841,'St'}]}]},
               {clause,842,
                [{atom,842,false}],
                [],
                [{call,843,
                  {atom,843,scan_define_cont},
                  [{var,843,'From'},
                   {var,843,'St'},
                   {tuple,844,[{atom,844,atom},{var,844,'M'}]},
                   {tuple,845,
                    [{atom,845,none},
                     {tuple,845,
                      [{atom,845,none},{var,845,'Expansion'}]}]}]}]}]}]},
           {clause,847,
            [{tuple,847,[{atom,847,ok},{var,847,'_PreDef'}]}],
            [],
            [{call,849,
              {atom,849,epp_reply},
              [{var,849,'From'},
               {tuple,849,
                [{atom,849,error},
                 {tuple,849,
                  [{call,849,{atom,849,loc},[{var,849,'Mac'}]},
                   {atom,849,epp},
                   {tuple,849,
                    [{atom,849,redefine_predef},{var,849,'M'}]}]}]}]},
             {call,850,{atom,850,wait_req_scan},[{var,850,'St'}]}]},
           {clause,851,
            [{atom,851,error}],
            [],
            [{call,852,
              {atom,852,scan_define_cont},
              [{var,852,'From'},
               {var,852,'St'},
               {tuple,853,[{atom,853,atom},{var,853,'M'}]},
               {tuple,854,
                [{atom,854,none},
                 {tuple,854,[{atom,854,none},{var,854,'Expansion'}]}]}]}]}]}]},
       {clause,856,
        [{tuple,856,[{atom,856,error},{var,856,'ErrL'},{var,856,'What'}]}],
        [],
        [{call,857,
          {atom,857,epp_reply},
          [{var,857,'From'},
           {tuple,857,
            [{atom,857,error},
             {tuple,857,
              [{var,857,'ErrL'},{atom,857,epp},{var,857,'What'}]}]}]},
         {call,858,{atom,858,wait_req_scan},[{var,858,'St'}]}]}]}]},
   {clause,860,
    [{cons,860,
      {tuple,860,[{atom,860,'('},{var,860,'_Lp'}]},
      {cons,860,
       {match,860,
        {tuple,860,[{var,860,'Type'},{var,860,'_Lm'},{var,860,'M'}]},
        {var,860,'Mac'}},
       {cons,860,
        {tuple,860,[{atom,860,'('},{var,860,'_Lc'}]},
        {var,860,'Toks'}}}},
     {var,860,'Def'},
     {var,860,'From'},
     {var,860,'St'}],
    [[{op,861,'=:=',{var,861,'Type'},{atom,861,atom}}],
     [{op,861,'=:=',{var,861,'Type'},{atom,861,var}}]],
    [{'case',862,
      {'catch',862,
       {call,862,{atom,862,macro_pars},[{var,862,'Toks'},{nil,862}]}},
      [{clause,863,
        [{tuple,863,
          [{atom,863,ok},{tuple,863,[{var,863,'As'},{var,863,'Me'}]}]}],
        [],
        [{match,864,
          {var,864,'Len'},
          {call,864,{atom,864,length},[{var,864,'As'}]}},
         {'case',865,
          {call,865,
           {remote,865,{atom,865,dict},{atom,865,find}},
           [{tuple,865,[{atom,865,atom},{var,865,'M'}]},
            {call,865,
             {remote,865,{atom,865,erlang},{atom,865,element}},
             [{integer,865,10},{var,865,'St'}]}]},
          [{clause,866,
            [{tuple,866,[{atom,866,ok},{var,866,'Defs'}]}],
            [[{call,866,{atom,866,is_list},[{var,866,'Defs'}]}]],
            [{'case',868,
              {call,868,
               {remote,868,{atom,868,proplists},{atom,868,is_defined}},
               [{var,868,'Len'},{var,868,'Defs'}]},
              [{clause,869,
                [{atom,869,true}],
                [],
                [{call,870,
                  {atom,870,epp_reply},
                  [{var,870,'From'},
                   {tuple,870,
                    [{atom,870,error},
                     {tuple,870,
                      [{call,870,{atom,870,loc},[{var,870,'Mac'}]},
                       {atom,870,epp},
                       {tuple,870,[{atom,870,redefine},{var,870,'M'}]}]}]}]},
                 {call,871,{atom,871,wait_req_scan},[{var,871,'St'}]}]},
               {clause,872,
                [{atom,872,false}],
                [],
                [{call,873,
                  {atom,873,scan_define_cont},
                  [{var,873,'From'},
                   {var,873,'St'},
                   {tuple,873,[{atom,873,atom},{var,873,'M'}]},
                   {tuple,874,
                    [{var,874,'Len'},
                     {tuple,874,[{var,874,'As'},{var,874,'Me'}]}]}]}]}]}]},
           {clause,876,
            [{tuple,876,[{atom,876,ok},{var,876,'_PreDef'}]}],
            [],
            [{call,879,
              {atom,879,epp_reply},
              [{var,879,'From'},
               {tuple,879,
                [{atom,879,error},
                 {tuple,879,
                  [{call,879,{atom,879,loc},[{var,879,'Mac'}]},
                   {atom,879,epp},
                   {tuple,879,
                    [{atom,879,redefine_predef},{var,879,'M'}]}]}]}]},
             {call,880,{atom,880,wait_req_scan},[{var,880,'St'}]}]},
           {clause,881,
            [{atom,881,error}],
            [],
            [{call,882,
              {atom,882,scan_define_cont},
              [{var,882,'From'},
               {var,882,'St'},
               {tuple,882,[{atom,882,atom},{var,882,'M'}]},
               {tuple,882,
                [{var,882,'Len'},
                 {tuple,882,[{var,882,'As'},{var,882,'Me'}]}]}]}]}]}]},
       {clause,884,
        [{tuple,884,[{atom,884,error},{var,884,'ErrL'},{var,884,'What'}]}],
        [],
        [{call,885,
          {atom,885,epp_reply},
          [{var,885,'From'},
           {tuple,885,
            [{atom,885,error},
             {tuple,885,
              [{var,885,'ErrL'},{atom,885,epp},{var,885,'What'}]}]}]},
         {call,886,{atom,886,wait_req_scan},[{var,886,'St'}]}]},
       {clause,887,
        [{var,887,'_'}],
        [],
        [{call,888,
          {atom,888,epp_reply},
          [{var,888,'From'},
           {tuple,888,
            [{atom,888,error},
             {tuple,888,
              [{call,888,{atom,888,loc},[{var,888,'Def'}]},
               {atom,888,epp},
               {tuple,888,[{atom,888,bad},{atom,888,define}]}]}]}]},
         {call,889,{atom,889,wait_req_scan},[{var,889,'St'}]}]}]}]},
   {clause,891,
    [{var,891,'_Toks'},{var,891,'Def'},{var,891,'From'},{var,891,'St'}],
    [],
    [{call,892,
      {atom,892,epp_reply},
      [{var,892,'From'},
       {tuple,892,
        [{atom,892,error},
         {tuple,892,
          [{call,892,{atom,892,loc},[{var,892,'Def'}]},
           {atom,892,epp},
           {tuple,892,[{atom,892,bad},{atom,892,define}]}]}]}]},
     {call,893,{atom,893,wait_req_scan},[{var,893,'St'}]}]}]},
 {function,904,scan_define_cont,4,
  [{clause,904,
    [{var,904,'F'},
     {var,904,'St'},
     {var,904,'M'},
     {tuple,904,[{var,904,'Arity'},{var,904,'Def'}]}],
    [],
    [{match,905,
      {var,905,'Ms'},
      {call,905,
       {remote,905,{atom,905,dict},{atom,905,append_list}},
       [{var,905,'M'},
        {cons,905,{tuple,905,[{var,905,'Arity'},{var,905,'Def'}]},{nil,905}},
        {call,905,
         {remote,905,{atom,905,erlang},{atom,905,element}},
         [{integer,905,10},{var,905,'St'}]}]}},
     {'try',906,
      [{call,906,
        {remote,906,{atom,906,dict},{atom,906,append_list}},
        [{var,906,'M'},
         {cons,906,
          {tuple,906,
           [{var,906,'Arity'},
            {call,906,{atom,906,macro_uses},[{var,906,'Def'}]}]},
          {nil,906}},
         {call,906,
          {remote,906,{atom,906,erlang},{atom,906,element}},
          [{integer,906,11},{var,906,'St'}]}]}],
      [{clause,907,
        [{var,907,'U'}],
        [],
        [{call,908,
          {atom,908,scan_toks},
          [{var,908,'F'},
           {call,908,
            {remote,908,{atom,908,erlang},{atom,908,setelement}},
            [{integer,908,10},
             {call,908,
              {remote,908,{atom,908,erlang},{atom,908,setelement}},
              [{integer,908,11},{var,908,'St'},{var,908,'U'}]},
             {var,908,'Ms'}]}]}]}],
      [{clause,910,
        [{tuple,910,
          [{atom,910,throw},
           {tuple,910,[{atom,910,error},{var,910,'Line'},{var,910,'Reason'}]},
           {var,910,'_'}]}],
        [],
        [{call,911,
          {atom,911,epp_reply},
          [{var,911,'F'},
           {tuple,911,
            [{atom,911,error},
             {tuple,911,
              [{var,911,'Line'},{atom,911,epp},{var,911,'Reason'}]}]}]},
         {call,912,{atom,912,wait_req_scan},[{var,912,'St'}]}]}],
      []}]}]},
 {function,915,macro_uses,1,
  [{clause,915,
    [{tuple,915,[{var,915,'_Args'},{var,915,'Tokens'}]}],
    [],
    [{match,916,
      {var,916,'Uses0'},
      {call,916,{atom,916,macro_ref},[{var,916,'Tokens'}]}},
     {call,917,
      {remote,917,{atom,917,lists},{atom,917,usort}},
      [{var,917,'Uses0'}]}]}]},
 {function,919,macro_ref,1,
  [{clause,919,[{nil,919}],[],[{nil,920}]},
   {clause,921,
    [{cons,921,
      {tuple,921,[{atom,921,'?'},{var,921,'_'}]},
      {cons,921,{tuple,921,[{atom,921,'?'},{var,921,'_'}]},{var,921,'Rest'}}}],
    [],
    [{call,922,{atom,922,macro_ref},[{var,922,'Rest'}]}]},
   {clause,923,
    [{cons,923,
      {tuple,923,[{atom,923,'?'},{var,923,'_'}]},
      {cons,923,
       {match,923,
        {tuple,923,[{atom,923,atom},{var,923,'_'},{var,923,'A'}]},
        {var,923,'Atom'}},
       {var,923,'Rest'}}}],
    [],
    [{match,924,{var,924,'Lm'},{call,924,{atom,924,loc},[{var,924,'Atom'}]}},
     {match,925,
      {var,925,'Arity'},
      {call,925,
       {atom,925,count_args},
       [{var,925,'Rest'},{var,925,'Lm'},{var,925,'A'}]}},
     {cons,926,
      {tuple,926,
       [{tuple,926,[{atom,926,atom},{var,926,'A'}]},{var,926,'Arity'}]},
      {call,926,{atom,926,macro_ref},[{var,926,'Rest'}]}}]},
   {clause,927,
    [{cons,927,
      {tuple,927,[{atom,927,'?'},{var,927,'_'}]},
      {cons,927,
       {match,927,
        {tuple,927,[{atom,927,var},{var,927,'_'},{var,927,'A'}]},
        {var,927,'Var'}},
       {var,927,'Rest'}}}],
    [],
    [{match,928,{var,928,'Lm'},{call,928,{atom,928,loc},[{var,928,'Var'}]}},
     {match,929,
      {var,929,'Arity'},
      {call,929,
       {atom,929,count_args},
       [{var,929,'Rest'},{var,929,'Lm'},{var,929,'A'}]}},
     {cons,930,
      {tuple,930,
       [{tuple,930,[{atom,930,atom},{var,930,'A'}]},{var,930,'Arity'}]},
      {call,930,{atom,930,macro_ref},[{var,930,'Rest'}]}}]},
   {clause,931,
    [{cons,931,{var,931,'_Token'},{var,931,'Rest'}}],
    [],
    [{call,932,{atom,932,macro_ref},[{var,932,'Rest'}]}]}]},
 {function,936,scan_undef,4,
  [{clause,936,
    [{cons,936,
      {tuple,936,[{atom,936,'('},{var,936,'_Llp'}]},
      {cons,936,
       {tuple,936,[{atom,936,atom},{var,936,'_Lm'},{var,936,'M'}]},
       {cons,936,
        {tuple,936,[{atom,936,')'},{var,936,'_Lrp'}]},
        {cons,936,{tuple,936,[{atom,936,dot},{var,936,'_Ld'}]},{nil,936}}}}},
     {var,936,'_Undef'},
     {var,936,'From'},
     {var,936,'St'}],
    [],
    [{match,937,
      {var,937,'Macs'},
      {call,937,
       {remote,937,{atom,937,dict},{atom,937,erase}},
       [{tuple,937,[{atom,937,atom},{var,937,'M'}]},
        {call,937,
         {remote,937,{atom,937,erlang},{atom,937,element}},
         [{integer,937,10},{var,937,'St'}]}]}},
     {match,938,
      {var,938,'Uses'},
      {call,938,
       {remote,938,{atom,938,dict},{atom,938,erase}},
       [{tuple,938,[{atom,938,atom},{var,938,'M'}]},
        {call,938,
         {remote,938,{atom,938,erlang},{atom,938,element}},
         [{integer,938,11},{var,938,'St'}]}]}},
     {call,939,
      {atom,939,scan_toks},
      [{var,939,'From'},
       {call,939,
        {remote,939,{atom,939,erlang},{atom,939,setelement}},
        [{integer,939,11},
         {call,939,
          {remote,939,{atom,939,erlang},{atom,939,setelement}},
          [{integer,939,10},{var,939,'St'},{var,939,'Macs'}]},
         {var,939,'Uses'}]}]}]},
   {clause,940,
    [{cons,940,
      {tuple,940,[{atom,940,'('},{var,940,'_Llp'}]},
      {cons,940,
       {tuple,940,[{atom,940,var},{var,940,'_Lm'},{var,940,'M'}]},
       {cons,940,
        {tuple,940,[{atom,940,')'},{var,940,'_Lrp'}]},
        {cons,940,{tuple,940,[{atom,940,dot},{var,940,'_Ld'}]},{nil,940}}}}},
     {var,940,'_Undef'},
     {var,940,'From'},
     {var,940,'St'}],
    [],
    [{match,941,
      {var,941,'Macs'},
      {call,941,
       {remote,941,{atom,941,dict},{atom,941,erase}},
       [{tuple,941,[{atom,941,atom},{var,941,'M'}]},
        {call,941,
         {remote,941,{atom,941,erlang},{atom,941,element}},
         [{integer,941,10},{var,941,'St'}]}]}},
     {match,942,
      {var,942,'Uses'},
      {call,942,
       {remote,942,{atom,942,dict},{atom,942,erase}},
       [{tuple,942,[{atom,942,atom},{var,942,'M'}]},
        {call,942,
         {remote,942,{atom,942,erlang},{atom,942,element}},
         [{integer,942,11},{var,942,'St'}]}]}},
     {call,943,
      {atom,943,scan_toks},
      [{var,943,'From'},
       {call,943,
        {remote,943,{atom,943,erlang},{atom,943,setelement}},
        [{integer,943,11},
         {call,943,
          {remote,943,{atom,943,erlang},{atom,943,setelement}},
          [{integer,943,10},{var,943,'St'},{var,943,'Macs'}]},
         {var,943,'Uses'}]}]}]},
   {clause,944,
    [{var,944,'_Toks'},{var,944,'Undef'},{var,944,'From'},{var,944,'St'}],
    [],
    [{call,945,
      {atom,945,epp_reply},
      [{var,945,'From'},
       {tuple,945,
        [{atom,945,error},
         {tuple,945,
          [{call,945,{atom,945,loc},[{var,945,'Undef'}]},
           {atom,945,epp},
           {tuple,945,[{atom,945,bad},{atom,945,undef}]}]}]}]},
     {call,946,{atom,946,wait_req_scan},[{var,946,'St'}]}]}]},
 {function,950,scan_include,4,
  [{clause,950,
    [{cons,950,
      {tuple,950,[{atom,950,'('},{var,950,'_Llp'}]},
      {cons,950,
       {tuple,950,[{atom,950,string},{var,950,'_Lf'},{var,950,'NewName0'}]},
       {cons,950,
        {tuple,950,[{atom,950,')'},{var,950,'_Lrp'}]},
        {cons,950,{tuple,950,[{atom,950,dot},{var,950,'_Ld'}]},{nil,950}}}}},
     {var,950,'Inc'},
     {var,951,'From'},
     {var,951,'St'}],
    [],
    [{match,952,
      {var,952,'NewName'},
      {call,952,{atom,952,expand_var},[{var,952,'NewName0'}]}},
     {call,953,
      {atom,953,enter_file},
      [{var,953,'NewName'},{var,953,'Inc'},{var,953,'From'},{var,953,'St'}]}]},
   {clause,954,
    [{var,954,'_Toks'},{var,954,'Inc'},{var,954,'From'},{var,954,'St'}],
    [],
    [{call,955,
      {atom,955,epp_reply},
      [{var,955,'From'},
       {tuple,955,
        [{atom,955,error},
         {tuple,955,
          [{call,955,{atom,955,loc},[{var,955,'Inc'}]},
           {atom,955,epp},
           {tuple,955,[{atom,955,bad},{atom,955,include}]}]}]}]},
     {call,956,{atom,956,wait_req_scan},[{var,956,'St'}]}]}]},
 {function,963,find_lib_dir,1,
  [{clause,963,
    [{var,963,'NewName'}],
    [],
    [{match,964,
      {cons,964,{var,964,'Lib'},{var,964,'Rest'}},
      {call,964,
       {remote,964,{atom,964,filename},{atom,964,split}},
       [{var,964,'NewName'}]}},
     {tuple,965,
      [{call,965,
        {remote,965,{atom,965,code},{atom,965,lib_dir}},
        [{call,965,{atom,965,list_to_atom},[{var,965,'Lib'}]}]},
       {var,965,'Rest'}]}]}]},
 {function,967,scan_include_lib,4,
  [{clause,967,
    [{cons,967,
      {tuple,967,[{atom,967,'('},{var,967,'_Llp'}]},
      {cons,967,
       {tuple,967,[{atom,967,string},{var,967,'_Lf'},{var,967,'_NewName0'}]},
       {cons,967,
        {tuple,967,[{atom,967,')'},{var,967,'_Lrp'}]},
        {cons,967,{tuple,967,[{atom,967,dot},{var,967,'_Ld'}]},{nil,967}}}}},
     {var,968,'Inc'},
     {var,968,'From'},
     {var,968,'St'}],
    [[{op,969,'>=',
       {call,969,
        {atom,969,length},
        [{call,969,
          {remote,969,{atom,969,erlang},{atom,969,element}},
          [{integer,969,8},{var,969,'St'}]}]},
       {integer,969,8}}]],
    [{call,970,
      {atom,970,epp_reply},
      [{var,970,'From'},
       {tuple,970,
        [{atom,970,error},
         {tuple,970,
          [{call,970,{atom,970,loc},[{var,970,'Inc'}]},
           {atom,970,epp},
           {tuple,970,[{atom,970,depth},{string,970,"include_lib"}]}]}]}]},
     {call,971,{atom,971,wait_req_scan},[{var,971,'St'}]}]},
   {clause,972,
    [{cons,972,
      {tuple,972,[{atom,972,'('},{var,972,'_Llp'}]},
      {cons,972,
       {tuple,972,[{atom,972,string},{var,972,'_Lf'},{var,972,'NewName0'}]},
       {cons,972,
        {tuple,972,[{atom,972,')'},{var,972,'_Lrp'}]},
        {cons,972,{tuple,972,[{atom,972,dot},{var,972,'_Ld'}]},{nil,972}}}}},
     {var,973,'Inc'},
     {var,973,'From'},
     {var,973,'St'}],
    [],
    [{match,974,
      {var,974,'NewName'},
      {call,974,{atom,974,expand_var},[{var,974,'NewName0'}]}},
     {match,975,
      {var,975,'Loc'},
      {call,975,
       {atom,975,start_loc},
       [{call,975,
         {remote,975,{atom,975,erlang},{atom,975,element}},
         [{integer,975,3},{var,975,'St'}]}]}},
     {'case',976,
      {call,976,
       {remote,976,{atom,976,file},{atom,976,path_open}},
       [{call,976,
         {remote,976,{atom,976,erlang},{atom,976,element}},
         [{integer,976,9},{var,976,'St'}]},
        {var,976,'NewName'},
        {cons,976,{atom,976,read},{nil,976}}]},
      [{clause,977,
        [{tuple,977,[{atom,977,ok},{var,977,'NewF'},{var,977,'Pname'}]}],
        [],
        [{call,978,
          {atom,978,wait_req_scan},
          [{call,978,
            {atom,978,enter_file2},
            [{var,978,'NewF'},
             {var,978,'Pname'},
             {var,978,'From'},
             {var,978,'St'},
             {var,978,'Loc'}]}]}]},
       {clause,979,
        [{tuple,979,[{atom,979,error},{var,979,'_E1'}]}],
        [],
        [{'case',980,
          {'catch',980,
           {call,980,{atom,980,find_lib_dir},[{var,980,'NewName'}]}},
          [{clause,981,
            [{tuple,981,[{var,981,'LibDir'},{var,981,'Rest'}]}],
            [[{call,981,{atom,981,is_list},[{var,981,'LibDir'}]}]],
            [{match,982,
              {var,982,'LibName'},
              {call,982,
               {atom,982,fname_join},
               [{cons,982,{var,982,'LibDir'},{var,982,'Rest'}}]}},
             {'case',983,
              {call,983,
               {remote,983,{atom,983,file},{atom,983,open}},
               [{var,983,'LibName'},{cons,983,{atom,983,read},{nil,983}}]},
              [{clause,984,
                [{tuple,984,[{atom,984,ok},{var,984,'NewF'}]}],
                [],
                [{call,985,
                  {atom,985,wait_req_scan},
                  [{call,985,
                    {atom,985,enter_file2},
                    [{var,985,'NewF'},
                     {var,985,'LibName'},
                     {var,985,'From'},
                     {var,986,'St'},
                     {var,986,'Loc'}]}]}]},
               {clause,987,
                [{tuple,987,[{atom,987,error},{var,987,'_E2'}]}],
                [],
                [{call,988,
                  {atom,988,epp_reply},
                  [{var,988,'From'},
                   {tuple,989,
                    [{atom,989,error},
                     {tuple,989,
                      [{call,989,{atom,989,loc},[{var,989,'Inc'}]},
                       {atom,989,epp},
                       {tuple,990,
                        [{atom,990,include},
                         {atom,990,lib},
                         {var,990,'NewName'}]}]}]}]},
                 {call,991,{atom,991,wait_req_scan},[{var,991,'St'}]}]}]}]},
           {clause,993,
            [{var,993,'_Error'}],
            [],
            [{call,994,
              {atom,994,epp_reply},
              [{var,994,'From'},
               {tuple,994,
                [{atom,994,error},
                 {tuple,994,
                  [{call,994,{atom,994,loc},[{var,994,'Inc'}]},
                   {atom,994,epp},
                   {tuple,995,
                    [{atom,995,include},
                     {atom,995,lib},
                     {var,995,'NewName'}]}]}]}]},
             {call,996,{atom,996,wait_req_scan},[{var,996,'St'}]}]}]}]}]}]},
   {clause,999,
    [{var,999,'_Toks'},{var,999,'Inc'},{var,999,'From'},{var,999,'St'}],
    [],
    [{call,1000,
      {atom,1000,epp_reply},
      [{var,1000,'From'},
       {tuple,1000,
        [{atom,1000,error},
         {tuple,1000,
          [{call,1000,{atom,1000,loc},[{var,1000,'Inc'}]},
           {atom,1000,epp},
           {tuple,1000,[{atom,1000,bad},{atom,1000,include_lib}]}]}]}]},
     {call,1001,{atom,1001,wait_req_scan},[{var,1001,'St'}]}]}]},
 {function,1008,scan_ifdef,4,
  [{clause,1008,
    [{cons,1008,
      {tuple,1008,[{atom,1008,'('},{var,1008,'_Llp'}]},
      {cons,1008,
       {tuple,1008,[{atom,1008,atom},{var,1008,'_Lm'},{var,1008,'M'}]},
       {cons,1008,
        {tuple,1008,[{atom,1008,')'},{var,1008,'_Lrp'}]},
        {cons,1008,
         {tuple,1008,[{atom,1008,dot},{var,1008,'_Ld'}]},
         {nil,1008}}}}},
     {var,1008,'_IfD'},
     {var,1008,'From'},
     {var,1008,'St'}],
    [],
    [{'case',1009,
      {call,1009,
       {remote,1009,{atom,1009,dict},{atom,1009,find}},
       [{tuple,1009,[{atom,1009,atom},{var,1009,'M'}]},
        {call,1009,
         {remote,1009,{atom,1009,erlang},{atom,1009,element}},
         [{integer,1009,10},{var,1009,'St'}]}]},
      [{clause,1010,
        [{tuple,1010,[{atom,1010,ok},{var,1010,'_Def'}]}],
        [],
        [{call,1011,
          {atom,1011,scan_toks},
          [{var,1011,'From'},
           {call,1011,
            {remote,1011,{atom,1011,erlang},{atom,1011,setelement}},
            [{integer,1011,7},
             {var,1011,'St'},
             {cons,1011,
              {atom,1011,ifdef},
              {call,1011,
               {remote,1011,{atom,1011,erlang},{atom,1011,element}},
               [{integer,1011,7},{var,1011,'St'}]}}]}]}]},
       {clause,1012,
        [{atom,1012,error}],
        [],
        [{call,1013,
          {atom,1013,skip_toks},
          [{var,1013,'From'},
           {var,1013,'St'},
           {cons,1013,{atom,1013,ifdef},{nil,1013}}]}]}]}]},
   {clause,1015,
    [{cons,1015,
      {tuple,1015,[{atom,1015,'('},{var,1015,'_Llp'}]},
      {cons,1015,
       {tuple,1015,[{atom,1015,var},{var,1015,'_Lm'},{var,1015,'M'}]},
       {cons,1015,
        {tuple,1015,[{atom,1015,')'},{var,1015,'_Lrp'}]},
        {cons,1015,
         {tuple,1015,[{atom,1015,dot},{var,1015,'_Ld'}]},
         {nil,1015}}}}},
     {var,1015,'_IfD'},
     {var,1015,'From'},
     {var,1015,'St'}],
    [],
    [{'case',1016,
      {call,1016,
       {remote,1016,{atom,1016,dict},{atom,1016,find}},
       [{tuple,1016,[{atom,1016,atom},{var,1016,'M'}]},
        {call,1016,
         {remote,1016,{atom,1016,erlang},{atom,1016,element}},
         [{integer,1016,10},{var,1016,'St'}]}]},
      [{clause,1017,
        [{tuple,1017,[{atom,1017,ok},{var,1017,'_Def'}]}],
        [],
        [{call,1018,
          {atom,1018,scan_toks},
          [{var,1018,'From'},
           {call,1018,
            {remote,1018,{atom,1018,erlang},{atom,1018,setelement}},
            [{integer,1018,7},
             {var,1018,'St'},
             {cons,1018,
              {atom,1018,ifdef},
              {call,1018,
               {remote,1018,{atom,1018,erlang},{atom,1018,element}},
               [{integer,1018,7},{var,1018,'St'}]}}]}]}]},
       {clause,1019,
        [{atom,1019,error}],
        [],
        [{call,1020,
          {atom,1020,skip_toks},
          [{var,1020,'From'},
           {var,1020,'St'},
           {cons,1020,{atom,1020,ifdef},{nil,1020}}]}]}]}]},
   {clause,1022,
    [{var,1022,'_Toks'},{var,1022,'IfDef'},{var,1022,'From'},{var,1022,'St'}],
    [],
    [{call,1023,
      {atom,1023,epp_reply},
      [{var,1023,'From'},
       {tuple,1023,
        [{atom,1023,error},
         {tuple,1023,
          [{call,1023,{atom,1023,loc},[{var,1023,'IfDef'}]},
           {atom,1023,epp},
           {tuple,1023,[{atom,1023,bad},{atom,1023,ifdef}]}]}]}]},
     {call,1024,
      {atom,1024,wait_req_skip},
      [{var,1024,'St'},{cons,1024,{atom,1024,ifdef},{nil,1024}}]}]}]},
 {function,1026,scan_ifndef,4,
  [{clause,1026,
    [{cons,1026,
      {tuple,1026,[{atom,1026,'('},{var,1026,'_Llp'}]},
      {cons,1026,
       {tuple,1026,[{atom,1026,atom},{var,1026,'_Lm'},{var,1026,'M'}]},
       {cons,1026,
        {tuple,1026,[{atom,1026,')'},{var,1026,'_Lrp'}]},
        {cons,1026,
         {tuple,1026,[{atom,1026,dot},{var,1026,'_Ld'}]},
         {nil,1026}}}}},
     {var,1026,'_IfnD'},
     {var,1026,'From'},
     {var,1026,'St'}],
    [],
    [{'case',1027,
      {call,1027,
       {remote,1027,{atom,1027,dict},{atom,1027,find}},
       [{tuple,1027,[{atom,1027,atom},{var,1027,'M'}]},
        {call,1027,
         {remote,1027,{atom,1027,erlang},{atom,1027,element}},
         [{integer,1027,10},{var,1027,'St'}]}]},
      [{clause,1028,
        [{tuple,1028,[{atom,1028,ok},{var,1028,'_Def'}]}],
        [],
        [{call,1029,
          {atom,1029,skip_toks},
          [{var,1029,'From'},
           {var,1029,'St'},
           {cons,1029,{atom,1029,ifndef},{nil,1029}}]}]},
       {clause,1030,
        [{atom,1030,error}],
        [],
        [{call,1031,
          {atom,1031,scan_toks},
          [{var,1031,'From'},
           {call,1031,
            {remote,1031,{atom,1031,erlang},{atom,1031,setelement}},
            [{integer,1031,7},
             {var,1031,'St'},
             {cons,1031,
              {atom,1031,ifndef},
              {call,1031,
               {remote,1031,{atom,1031,erlang},{atom,1031,element}},
               [{integer,1031,7},{var,1031,'St'}]}}]}]}]}]}]},
   {clause,1033,
    [{cons,1033,
      {tuple,1033,[{atom,1033,'('},{var,1033,'_Llp'}]},
      {cons,1033,
       {tuple,1033,[{atom,1033,var},{var,1033,'_Lm'},{var,1033,'M'}]},
       {cons,1033,
        {tuple,1033,[{atom,1033,')'},{var,1033,'_Lrp'}]},
        {cons,1033,
         {tuple,1033,[{atom,1033,dot},{var,1033,'_Ld'}]},
         {nil,1033}}}}},
     {var,1033,'_IfnD'},
     {var,1033,'From'},
     {var,1033,'St'}],
    [],
    [{'case',1034,
      {call,1034,
       {remote,1034,{atom,1034,dict},{atom,1034,find}},
       [{tuple,1034,[{atom,1034,atom},{var,1034,'M'}]},
        {call,1034,
         {remote,1034,{atom,1034,erlang},{atom,1034,element}},
         [{integer,1034,10},{var,1034,'St'}]}]},
      [{clause,1035,
        [{tuple,1035,[{atom,1035,ok},{var,1035,'_Def'}]}],
        [],
        [{call,1036,
          {atom,1036,skip_toks},
          [{var,1036,'From'},
           {var,1036,'St'},
           {cons,1036,{atom,1036,ifndef},{nil,1036}}]}]},
       {clause,1037,
        [{atom,1037,error}],
        [],
        [{call,1038,
          {atom,1038,scan_toks},
          [{var,1038,'From'},
           {call,1038,
            {remote,1038,{atom,1038,erlang},{atom,1038,setelement}},
            [{integer,1038,7},
             {var,1038,'St'},
             {cons,1038,
              {atom,1038,ifndef},
              {call,1038,
               {remote,1038,{atom,1038,erlang},{atom,1038,element}},
               [{integer,1038,7},{var,1038,'St'}]}}]}]}]}]}]},
   {clause,1040,
    [{var,1040,'_Toks'},{var,1040,'IfnDef'},{var,1040,'From'},{var,1040,'St'}],
    [],
    [{call,1041,
      {atom,1041,epp_reply},
      [{var,1041,'From'},
       {tuple,1041,
        [{atom,1041,error},
         {tuple,1041,
          [{call,1041,{atom,1041,loc},[{var,1041,'IfnDef'}]},
           {atom,1041,epp},
           {tuple,1041,[{atom,1041,bad},{atom,1041,ifndef}]}]}]}]},
     {call,1042,
      {atom,1042,wait_req_skip},
      [{var,1042,'St'},{cons,1042,{atom,1042,ifndef},{nil,1042}}]}]}]},
 {function,1048,scan_else,4,
  [{clause,1048,
    [{cons,1048,{tuple,1048,[{atom,1048,dot},{var,1048,'_Ld'}]},{nil,1048}},
     {var,1048,'Else'},
     {var,1048,'From'},
     {var,1048,'St'}],
    [],
    [{'case',1049,
      {call,1049,
       {remote,1049,{atom,1049,erlang},{atom,1049,element}},
       [{integer,1049,7},{var,1049,'St'}]},
      [{clause,1050,
        [{cons,1050,{atom,1050,else},{var,1050,'Cis'}}],
        [],
        [{call,1051,
          {atom,1051,epp_reply},
          [{var,1051,'From'},
           {tuple,1051,
            [{atom,1051,error},
             {tuple,1051,
              [{call,1051,{atom,1051,loc},[{var,1051,'Else'}]},
               {atom,1052,epp},
               {tuple,1052,
                [{atom,1052,illegal},
                 {string,1052,"repeated"},
                 {atom,1052,else}]}]}]}]},
         {call,1053,
          {atom,1053,wait_req_skip},
          [{call,1053,
            {remote,1053,{atom,1053,erlang},{atom,1053,setelement}},
            [{integer,1053,7},{var,1053,'St'},{var,1053,'Cis'}]},
           {cons,1053,{atom,1053,else},{nil,1053}}]}]},
       {clause,1054,
        [{cons,1054,{var,1054,'_I'},{var,1054,'Cis'}}],
        [],
        [{call,1055,
          {atom,1055,skip_toks},
          [{var,1055,'From'},
           {call,1055,
            {remote,1055,{atom,1055,erlang},{atom,1055,setelement}},
            [{integer,1055,7},{var,1055,'St'},{var,1055,'Cis'}]},
           {cons,1055,{atom,1055,else},{nil,1055}}]}]},
       {clause,1056,
        [{nil,1056}],
        [],
        [{call,1057,
          {atom,1057,epp_reply},
          [{var,1057,'From'},
           {tuple,1057,
            [{atom,1057,error},
             {tuple,1057,
              [{call,1057,{atom,1057,loc},[{var,1057,'Else'}]},
               {atom,1057,epp},
               {tuple,1058,
                [{atom,1058,illegal},
                 {string,1058,"unbalanced"},
                 {atom,1058,else}]}]}]}]},
         {call,1059,{atom,1059,wait_req_scan},[{var,1059,'St'}]}]}]}]},
   {clause,1061,
    [{var,1061,'_Toks'},{var,1061,'Else'},{var,1061,'From'},{var,1061,'St'}],
    [],
    [{call,1062,
      {atom,1062,epp_reply},
      [{var,1062,'From'},
       {tuple,1062,
        [{atom,1062,error},
         {tuple,1062,
          [{call,1062,{atom,1062,loc},[{var,1062,'Else'}]},
           {atom,1062,epp},
           {tuple,1062,[{atom,1062,bad},{atom,1062,else}]}]}]}]},
     {call,1063,{atom,1063,wait_req_scan},[{var,1063,'St'}]}]}]},
 {function,1069,scan_if,4,
  [{clause,1069,
    [{var,1069,'_Toks'},{var,1069,'If'},{var,1069,'From'},{var,1069,'St'}],
    [],
    [{call,1070,
      {atom,1070,epp_reply},
      [{var,1070,'From'},
       {tuple,1070,
        [{atom,1070,error},
         {tuple,1070,
          [{call,1070,{atom,1070,loc},[{var,1070,'If'}]},
           {atom,1070,epp},
           {tuple,1070,[{atom,1070,'NYI'},{atom,1070,'if'}]}]}]}]},
     {call,1071,
      {atom,1071,wait_req_skip},
      [{var,1071,'St'},{cons,1071,{atom,1071,'if'},{nil,1071}}]}]}]},
 {function,1077,scan_elif,4,
  [{clause,1077,
    [{var,1077,'_Toks'},{var,1077,'Elif'},{var,1077,'From'},{var,1077,'St'}],
    [],
    [{call,1078,
      {atom,1078,epp_reply},
      [{var,1078,'From'},
       {tuple,1078,
        [{atom,1078,error},
         {tuple,1078,
          [{call,1078,{atom,1078,loc},[{var,1078,'Elif'}]},
           {atom,1078,epp},
           {tuple,1078,[{atom,1078,'NYI'},{atom,1078,elif}]}]}]}]},
     {call,1079,{atom,1079,wait_req_scan},[{var,1079,'St'}]}]}]},
 {function,1084,scan_endif,4,
  [{clause,1084,
    [{cons,1084,{tuple,1084,[{atom,1084,dot},{var,1084,'_Ld'}]},{nil,1084}},
     {var,1084,'Endif'},
     {var,1084,'From'},
     {var,1084,'St'}],
    [],
    [{'case',1085,
      {call,1085,
       {remote,1085,{atom,1085,erlang},{atom,1085,element}},
       [{integer,1085,7},{var,1085,'St'}]},
      [{clause,1086,
        [{cons,1086,{var,1086,'_I'},{var,1086,'Cis'}}],
        [],
        [{call,1087,
          {atom,1087,scan_toks},
          [{var,1087,'From'},
           {call,1087,
            {remote,1087,{atom,1087,erlang},{atom,1087,setelement}},
            [{integer,1087,7},{var,1087,'St'},{var,1087,'Cis'}]}]}]},
       {clause,1088,
        [{nil,1088}],
        [],
        [{call,1089,
          {atom,1089,epp_reply},
          [{var,1089,'From'},
           {tuple,1089,
            [{atom,1089,error},
             {tuple,1089,
              [{call,1089,{atom,1089,loc},[{var,1089,'Endif'}]},
               {atom,1089,epp},
               {tuple,1090,
                [{atom,1090,illegal},
                 {string,1090,"unbalanced"},
                 {atom,1090,endif}]}]}]}]},
         {call,1091,{atom,1091,wait_req_scan},[{var,1091,'St'}]}]}]}]},
   {clause,1093,
    [{var,1093,'_Toks'},{var,1093,'Endif'},{var,1093,'From'},{var,1093,'St'}],
    [],
    [{call,1094,
      {atom,1094,epp_reply},
      [{var,1094,'From'},
       {tuple,1094,
        [{atom,1094,error},
         {tuple,1094,
          [{call,1094,{atom,1094,loc},[{var,1094,'Endif'}]},
           {atom,1094,epp},
           {tuple,1094,[{atom,1094,bad},{atom,1094,endif}]}]}]}]},
     {call,1095,{atom,1095,wait_req_scan},[{var,1095,'St'}]}]}]},
 {function,1101,scan_file,4,
  [{clause,1101,
    [{cons,1101,
      {tuple,1101,[{atom,1101,'('},{var,1101,'_Llp'}]},
      {cons,1101,
       {tuple,1101,[{atom,1101,string},{var,1101,'_Ls'},{var,1101,'Name'}]},
       {cons,1101,
        {tuple,1101,[{atom,1101,','},{var,1101,'_Lc'}]},
        {cons,1101,
         {tuple,1101,[{atom,1101,integer},{var,1101,'_Li'},{var,1101,'Ln'}]},
         {cons,1101,
          {tuple,1101,[{atom,1101,')'},{var,1101,'_Lrp'}]},
          {cons,1102,
           {tuple,1102,[{atom,1102,dot},{var,1102,'_Ld'}]},
           {nil,1102}}}}}}},
     {var,1102,'Tf'},
     {var,1102,'From'},
     {var,1102,'St'}],
    [],
    [{match,1103,
      {var,1103,'Anno'},
      {call,1103,
       {remote,1103,{atom,1103,erl_anno},{atom,1103,new}},
       [{var,1103,'Ln'}]}},
     {call,1104,
      {atom,1104,enter_file_reply},
      [{var,1104,'From'},
       {var,1104,'Name'},
       {var,1104,'Anno'},
       {call,1104,{atom,1104,loc},[{var,1104,'Tf'}]},
       {atom,1104,generated}]},
     {match,1105,
      {var,1105,'Ms'},
      {call,1105,
       {remote,1105,{atom,1105,dict},{atom,1105,store}},
       [{tuple,1105,[{atom,1105,atom},{atom,1105,'FILE'}]},
        {tuple,1105,
         [{atom,1105,none},
          {cons,1105,
           {tuple,1105,
            [{atom,1105,string},
             {call,1105,{atom,1105,line1},[]},
             {var,1105,'Name'}]},
           {nil,1105}}]},
        {call,1105,
         {remote,1105,{atom,1105,erlang},{atom,1105,element}},
         [{integer,1105,10},{var,1105,'St'}]}]}},
     {match,1106,
      {var,1106,'Locf'},
      {call,1106,{atom,1106,loc},[{var,1106,'Tf'}]}},
     {match,1107,
      {var,1107,'NewLoc'},
      {call,1107,
       {atom,1107,new_location},
       [{var,1107,'Ln'},
        {call,1107,
         {remote,1107,{atom,1107,erlang},{atom,1107,element}},
         [{integer,1107,3},{var,1107,'St'}]},
        {var,1107,'Locf'}]}},
     {match,1108,
      {var,1108,'Delta'},
      {op,1108,'+',
       {op,1108,'-',
        {call,1108,
         {atom,1108,get_line},
         [{call,1108,{atom,1108,element},[{integer,1108,2},{var,1108,'Tf'}]}]},
        {var,1108,'Ln'}},
       {call,1108,
        {remote,1108,{atom,1108,erlang},{atom,1108,element}},
        [{integer,1108,4},{var,1108,'St'}]}}},
     {call,1109,
      {atom,1109,wait_req_scan},
      [{call,1109,
        {remote,1109,{atom,1109,erlang},{atom,1109,setelement}},
        [{integer,1109,10},
         {call,1109,
          {remote,1109,{atom,1109,erlang},{atom,1109,setelement}},
          [{integer,1109,4},
           {call,1109,
            {remote,1109,{atom,1109,erlang},{atom,1109,setelement}},
            [{integer,1109,3},
             {call,1109,
              {remote,1109,{atom,1109,erlang},{atom,1109,setelement}},
              [{integer,1109,6},{var,1109,'St'},{var,1109,'Name'}]},
             {var,1109,'NewLoc'}]},
           {var,1109,'Delta'}]},
         {var,1109,'Ms'}]}]}]},
   {clause,1110,
    [{var,1110,'_Toks'},{var,1110,'Tf'},{var,1110,'From'},{var,1110,'St'}],
    [],
    [{call,1111,
      {atom,1111,epp_reply},
      [{var,1111,'From'},
       {tuple,1111,
        [{atom,1111,error},
         {tuple,1111,
          [{call,1111,{atom,1111,loc},[{var,1111,'Tf'}]},
           {atom,1111,epp},
           {tuple,1111,[{atom,1111,bad},{atom,1111,file}]}]}]}]},
     {call,1112,{atom,1112,wait_req_scan},[{var,1112,'St'}]}]}]},
 {function,1114,new_location,3,
  [{clause,1114,
    [{var,1114,'Ln'},{var,1114,'Le'},{var,1114,'Lf'}],
    [[{call,1114,{atom,1114,is_integer},[{var,1114,'Lf'}]}]],
    [{op,1115,'+',
      {var,1115,'Ln'},
      {op,1115,'-',{var,1115,'Le'},{var,1115,'Lf'}}}]},
   {clause,1116,
    [{var,1116,'Ln'},
     {tuple,1116,[{var,1116,'Le'},{var,1116,'_'}]},
     {tuple,1116,[{var,1116,'Lf'},{var,1116,'_'}]}],
    [],
    [{tuple,1117,
      [{op,1117,'+',
        {var,1117,'Ln'},
        {op,1117,'-',{var,1117,'Le'},{var,1117,'Lf'}}},
       {integer,1117,1}]}]}]},
 {function,1123,skip_toks,3,
  [{clause,1123,
    [{var,1123,'From'},
     {var,1123,'St'},
     {cons,1123,{var,1123,'I'},{var,1123,'Sis'}}],
    [],
    [{'case',1124,
      {call,1124,
       {remote,1124,{atom,1124,io},{atom,1124,scan_erl_form}},
       [{call,1124,
         {remote,1124,{atom,1124,erlang},{atom,1124,element}},
         [{integer,1124,2},{var,1124,'St'}]},
        {atom,1124,''},
        {call,1124,
         {remote,1124,{atom,1124,erlang},{atom,1124,element}},
         [{integer,1124,3},{var,1124,'St'}]}]},
      [{clause,1125,
        [{tuple,1125,
          [{atom,1125,ok},
           {cons,1125,
            {tuple,1125,[{atom,1125,'-'},{var,1125,'_Lh'}]},
            {cons,1125,
             {tuple,1125,
              [{atom,1125,atom},{var,1125,'_Li'},{atom,1125,ifdef}]},
             {var,1125,'_Toks'}}},
           {var,1125,'Cl'}]}],
        [],
        [{call,1126,
          {atom,1126,skip_toks},
          [{var,1126,'From'},
           {call,1126,
            {remote,1126,{atom,1126,erlang},{atom,1126,setelement}},
            [{integer,1126,3},{var,1126,'St'},{var,1126,'Cl'}]},
           {cons,1126,
            {atom,1126,ifdef},
            {cons,1126,{var,1126,'I'},{var,1126,'Sis'}}}]}]},
       {clause,1127,
        [{tuple,1127,
          [{atom,1127,ok},
           {cons,1127,
            {tuple,1127,[{atom,1127,'-'},{var,1127,'_Lh'}]},
            {cons,1127,
             {tuple,1127,
              [{atom,1127,atom},{var,1127,'_Li'},{atom,1127,ifndef}]},
             {var,1127,'_Toks'}}},
           {var,1127,'Cl'}]}],
        [],
        [{call,1128,
          {atom,1128,skip_toks},
          [{var,1128,'From'},
           {call,1128,
            {remote,1128,{atom,1128,erlang},{atom,1128,setelement}},
            [{integer,1128,3},{var,1128,'St'},{var,1128,'Cl'}]},
           {cons,1128,
            {atom,1128,ifndef},
            {cons,1128,{var,1128,'I'},{var,1128,'Sis'}}}]}]},
       {clause,1129,
        [{tuple,1129,
          [{atom,1129,ok},
           {cons,1129,
            {tuple,1129,[{atom,1129,'-'},{var,1129,'_Lh'}]},
            {cons,1129,
             {tuple,1129,[{atom,1129,'if'},{var,1129,'_Li'}]},
             {var,1129,'_Toks'}}},
           {var,1129,'Cl'}]}],
        [],
        [{call,1130,
          {atom,1130,skip_toks},
          [{var,1130,'From'},
           {call,1130,
            {remote,1130,{atom,1130,erlang},{atom,1130,setelement}},
            [{integer,1130,3},{var,1130,'St'},{var,1130,'Cl'}]},
           {cons,1130,
            {atom,1130,'if'},
            {cons,1130,{var,1130,'I'},{var,1130,'Sis'}}}]}]},
       {clause,1131,
        [{tuple,1131,
          [{atom,1131,ok},
           {cons,1131,
            {tuple,1131,[{atom,1131,'-'},{var,1131,'_Lh'}]},
            {cons,1131,
             {match,1131,
              {tuple,1131,
               [{atom,1131,atom},{var,1131,'_Le'},{atom,1131,else}]},
              {var,1131,'Else'}},
             {var,1131,'_Toks'}}},
           {var,1131,'Cl'}]}],
        [],
        [{call,1132,
          {atom,1132,skip_else},
          [{var,1132,'Else'},
           {var,1132,'From'},
           {call,1132,
            {remote,1132,{atom,1132,erlang},{atom,1132,setelement}},
            [{integer,1132,3},{var,1132,'St'},{var,1132,'Cl'}]},
           {cons,1132,{var,1132,'I'},{var,1132,'Sis'}}]}]},
       {clause,1133,
        [{tuple,1133,
          [{atom,1133,ok},
           {cons,1133,
            {tuple,1133,[{atom,1133,'-'},{var,1133,'_Lh'}]},
            {cons,1133,
             {tuple,1133,
              [{atom,1133,atom},{var,1133,'_Le'},{atom,1133,endif}]},
             {var,1133,'_Toks'}}},
           {var,1133,'Cl'}]}],
        [],
        [{call,1134,
          {atom,1134,skip_toks},
          [{var,1134,'From'},
           {call,1134,
            {remote,1134,{atom,1134,erlang},{atom,1134,setelement}},
            [{integer,1134,3},{var,1134,'St'},{var,1134,'Cl'}]},
           {var,1134,'Sis'}]}]},
       {clause,1135,
        [{tuple,1135,[{atom,1135,ok},{var,1135,'_Toks'},{var,1135,'Cl'}]}],
        [],
        [{call,1136,
          {atom,1136,skip_toks},
          [{var,1136,'From'},
           {call,1136,
            {remote,1136,{atom,1136,erlang},{atom,1136,setelement}},
            [{integer,1136,3},{var,1136,'St'},{var,1136,'Cl'}]},
           {cons,1136,{var,1136,'I'},{var,1136,'Sis'}}]}]},
       {clause,1137,
        [{tuple,1137,[{atom,1137,error},{var,1137,'E'},{var,1137,'Cl'}]}],
        [],
        [{'case',1138,
          {var,1138,'E'},
          [{clause,1139,
            [{tuple,1139,
              [{var,1139,'_'},
               {atom,1139,file_io_server},
               {atom,1139,invalid_unicode}]}],
            [],
            [{call,1144,
              {atom,1144,epp_reply},
              [{var,1144,'From'},
               {tuple,1144,[{atom,1144,error},{var,1144,'E'}]}]},
             {call,1145,
              {atom,1145,leave_file},
              [{call,1145,{atom,1145,wait_request},[{var,1145,'St'}]},
               {var,1145,'St'}]}]},
           {clause,1146,
            [{var,1146,'_'}],
            [],
            [{call,1149,
              {atom,1149,skip_toks},
              [{var,1149,'From'},
               {call,1149,
                {remote,1149,{atom,1149,erlang},{atom,1149,setelement}},
                [{integer,1149,3},{var,1149,'St'},{var,1149,'Cl'}]},
               {cons,1149,{var,1149,'I'},{var,1149,'Sis'}}]}]}]}]},
       {clause,1151,
        [{tuple,1151,[{atom,1151,eof},{var,1151,'Cl'}]}],
        [],
        [{call,1152,
          {atom,1152,leave_file},
          [{var,1152,'From'},
           {call,1152,
            {remote,1152,{atom,1152,erlang},{atom,1152,setelement}},
            [{integer,1152,7},
             {call,1152,
              {remote,1152,{atom,1152,erlang},{atom,1152,setelement}},
              [{integer,1152,3},{var,1152,'St'},{var,1152,'Cl'}]},
             {cons,1152,{var,1152,'I'},{var,1152,'Sis'}}]}]}]},
       {clause,1153,
        [{tuple,1153,[{atom,1153,error},{var,1153,'_E'}]}],
        [],
        [{call,1154,
          {atom,1154,epp_reply},
          [{var,1154,'From'},
           {tuple,1154,
            [{atom,1154,error},
             {tuple,1154,
              [{call,1154,
                {remote,1154,{atom,1154,erlang},{atom,1154,element}},
                [{integer,1154,3},{var,1154,'St'}]},
               {atom,1154,epp},
               {atom,1154,cannot_parse}]}]}]},
         {call,1155,
          {atom,1155,leave_file},
          [{call,1155,{atom,1155,wait_request},[{var,1155,'St'}]},
           {var,1155,'St'}]}]}]}]},
   {clause,1157,
    [{var,1157,'From'},{var,1157,'St'},{nil,1157}],
    [],
    [{call,1158,{atom,1158,scan_toks},[{var,1158,'From'},{var,1158,'St'}]}]}]},
 {function,1160,skip_else,4,
  [{clause,1160,
    [{var,1160,'Else'},
     {var,1160,'From'},
     {var,1160,'St'},
     {cons,1160,{atom,1160,else},{var,1160,'Sis'}}],
    [],
    [{call,1161,
      {atom,1161,epp_reply},
      [{var,1161,'From'},
       {tuple,1161,
        [{atom,1161,error},
         {tuple,1161,
          [{call,1161,{atom,1161,loc},[{var,1161,'Else'}]},
           {atom,1161,epp},
           {tuple,1161,
            [{atom,1161,illegal},
             {string,1161,"repeated"},
             {atom,1161,else}]}]}]}]},
     {call,1162,
      {atom,1162,wait_req_skip},
      [{var,1162,'St'},{cons,1162,{atom,1162,else},{var,1162,'Sis'}}]}]},
   {clause,1163,
    [{var,1163,'_Else'},
     {var,1163,'From'},
     {var,1163,'St'},
     {cons,1163,{var,1163,'_I'},{nil,1163}}],
    [],
    [{call,1164,
      {atom,1164,scan_toks},
      [{var,1164,'From'},
       {call,1164,
        {remote,1164,{atom,1164,erlang},{atom,1164,setelement}},
        [{integer,1164,7},
         {var,1164,'St'},
         {cons,1164,
          {atom,1164,else},
          {call,1164,
           {remote,1164,{atom,1164,erlang},{atom,1164,element}},
           [{integer,1164,7},{var,1164,'St'}]}}]}]}]},
   {clause,1165,
    [{var,1165,'_Else'},{var,1165,'From'},{var,1165,'St'},{var,1165,'Sis'}],
    [],
    [{call,1166,
      {atom,1166,skip_toks},
      [{var,1166,'From'},{var,1166,'St'},{var,1166,'Sis'}]}]}]},
 {function,1172,macro_pars,2,
  [{clause,1172,
    [{cons,1172,
      {tuple,1172,[{atom,1172,')'},{var,1172,'_Lp'}]},
      {cons,1172,
       {tuple,1172,[{atom,1172,','},{var,1172,'Ld'}]},
       {var,1172,'Ex'}}},
     {var,1172,'Args'}],
    [],
    [{tuple,1173,
      [{atom,1173,ok},
       {tuple,1173,
        [{call,1173,
          {remote,1173,{atom,1173,lists},{atom,1173,reverse}},
          [{var,1173,'Args'}]},
         {call,1173,
          {atom,1173,macro_expansion},
          [{var,1173,'Ex'},{var,1173,'Ld'}]}]}]}]},
   {clause,1174,
    [{cons,1174,
      {tuple,1174,[{atom,1174,var},{var,1174,'_'},{var,1174,'Name'}]},
      {cons,1174,
       {tuple,1174,[{atom,1174,')'},{var,1174,'_Lp'}]},
       {cons,1174,
        {tuple,1174,[{atom,1174,','},{var,1174,'Ld'}]},
        {var,1174,'Ex'}}}},
     {var,1174,'Args'}],
    [],
    [{match,1175,
      {atom,1175,false},
      {call,1175,
       {remote,1175,{atom,1175,lists},{atom,1175,member}},
       [{var,1175,'Name'},{var,1175,'Args'}]}},
     {tuple,1176,
      [{atom,1176,ok},
       {tuple,1176,
        [{call,1176,
          {remote,1176,{atom,1176,lists},{atom,1176,reverse}},
          [{cons,1176,{var,1176,'Name'},{var,1176,'Args'}}]},
         {call,1176,
          {atom,1176,macro_expansion},
          [{var,1176,'Ex'},{var,1176,'Ld'}]}]}]}]},
   {clause,1177,
    [{cons,1177,
      {tuple,1177,[{atom,1177,var},{var,1177,'_L'},{var,1177,'Name'}]},
      {cons,1177,
       {tuple,1177,[{atom,1177,','},{var,1177,'_'}]},
       {var,1177,'Ts'}}},
     {var,1177,'Args'}],
    [],
    [{match,1178,
      {atom,1178,false},
      {call,1178,
       {remote,1178,{atom,1178,lists},{atom,1178,member}},
       [{var,1178,'Name'},{var,1178,'Args'}]}},
     {call,1179,
      {atom,1179,macro_pars},
      [{var,1179,'Ts'},{cons,1179,{var,1179,'Name'},{var,1179,'Args'}}]}]}]},
 {function,1181,macro_expansion,2,
  [{clause,1181,
    [{cons,1181,
      {tuple,1181,[{atom,1181,')'},{var,1181,'_Lp'}]},
      {cons,1181,{tuple,1181,[{atom,1181,dot},{var,1181,'_Ld'}]},{nil,1181}}},
     {var,1181,'_Anno0'}],
    [],
    [{nil,1181}]},
   {clause,1182,
    [{cons,1182,
      {match,1182,
       {tuple,1182,[{atom,1182,dot},{var,1182,'_'}]},
       {var,1182,'Dot'}},
      {nil,1182}},
     {var,1182,'_Anno0'}],
    [],
    [{call,1183,
      {atom,1183,throw},
      [{tuple,1183,
        [{atom,1183,error},
         {call,1183,{atom,1183,loc},[{var,1183,'Dot'}]},
         {atom,1183,missing_parenthesis}]}]}]},
   {clause,1184,
    [{cons,1184,{var,1184,'T'},{var,1184,'Ts'}},{var,1184,'_Anno0'}],
    [],
    [{cons,1185,
      {var,1185,'T'},
      {call,1185,
       {atom,1185,macro_expansion},
       [{var,1185,'Ts'},{var,1185,'T'}]}}]},
   {clause,1186,
    [{nil,1186},{var,1186,'Anno0'}],
    [],
    [{call,1186,
      {atom,1186,throw},
      [{tuple,1186,
        [{atom,1186,error},
         {call,1186,{atom,1186,loc},[{var,1186,'Anno0'}]},
         {atom,1186,premature_end}]}]}]}]},
 {function,1193,expand_macros,5,
  [{clause,1193,
    [{var,1193,'Type'},
     {var,1193,'MacT'},
     {var,1193,'M'},
     {var,1193,'Toks'},
     {var,1193,'Ms0'}],
    [],
    [{match,1195,
      {tuple,1195,[{var,1195,'Ms'},{var,1195,'U'}]},
      {var,1195,'Ms0'}},
     {match,1196,
      {var,1196,'Lm'},
      {call,1196,{atom,1196,loc},[{var,1196,'MacT'}]}},
     {match,1197,
      {var,1197,'Tinfo'},
      {call,1197,{atom,1197,element},[{integer,1197,2},{var,1197,'MacT'}]}},
     {'case',1198,
      {call,1198,
       {atom,1198,expand_macro1},
       [{var,1198,'Type'},
        {var,1198,'Lm'},
        {var,1198,'M'},
        {var,1198,'Toks'},
        {var,1198,'Ms'}]},
      [{clause,1199,
        [{tuple,1199,
          [{atom,1199,ok},{tuple,1199,[{atom,1199,none},{var,1199,'Exp'}]}]}],
        [],
        [{call,1200,
          {atom,1200,check_uses},
          [{cons,1200,
            {tuple,1200,
             [{tuple,1200,[{var,1200,'Type'},{var,1200,'M'}]},
              {atom,1200,none}]},
            {nil,1200}},
           {nil,1200},
           {var,1200,'U'},
           {var,1200,'Lm'}]},
         {match,1201,
          {var,1201,'Toks1'},
          {call,1201,
           {atom,1201,expand_macros},
           [{call,1201,
             {atom,1201,expand_macro},
             [{var,1201,'Exp'},
              {var,1201,'Tinfo'},
              {nil,1201},
              {call,1201,{remote,1201,{atom,1201,dict},{atom,1201,new}},[]}]},
            {var,1201,'Ms0'}]}},
         {call,1202,
          {atom,1202,expand_macros},
          [{op,1202,'++',{var,1202,'Toks1'},{var,1202,'Toks'}},
           {var,1202,'Ms0'}]}]},
       {clause,1203,
        [{tuple,1203,
          [{atom,1203,ok},{tuple,1203,[{var,1203,'As'},{var,1203,'Exp'}]}]}],
        [],
        [{call,1204,
          {atom,1204,check_uses},
          [{cons,1204,
            {tuple,1204,
             [{tuple,1204,[{var,1204,'Type'},{var,1204,'M'}]},
              {call,1204,{atom,1204,length},[{var,1204,'As'}]}]},
            {nil,1204}},
           {nil,1204},
           {var,1204,'U'},
           {var,1204,'Lm'}]},
         {match,1205,
          {tuple,1205,[{var,1205,'Bs'},{var,1205,'Toks1'}]},
          {call,1205,
           {atom,1205,bind_args},
           [{var,1205,'Toks'},
            {var,1205,'Lm'},
            {var,1205,'M'},
            {var,1205,'As'},
            {call,1205,{remote,1205,{atom,1205,dict},{atom,1205,new}},[]}]}},
         {call,1206,
          {atom,1206,expand_macros},
          [{call,1206,
            {atom,1206,expand_macro},
            [{var,1206,'Exp'},
             {var,1206,'Tinfo'},
             {var,1206,'Toks1'},
             {var,1206,'Bs'}]},
           {var,1206,'Ms0'}]}]}]}]}]},
 {function,1209,expand_macro1,5,
  [{clause,1209,
    [{var,1209,'Type'},
     {var,1209,'Lm'},
     {var,1209,'M'},
     {var,1209,'Toks'},
     {var,1209,'Ms'}],
    [],
    [{match,1210,
      {var,1210,'Arity'},
      {call,1210,
       {atom,1210,count_args},
       [{var,1210,'Toks'},{var,1210,'Lm'},{var,1210,'M'}]}},
     {'case',1211,
      {call,1211,
       {remote,1211,{atom,1211,dict},{atom,1211,find}},
       [{tuple,1211,[{var,1211,'Type'},{var,1211,'M'}]},{var,1211,'Ms'}]},
      [{clause,1212,
        [{atom,1212,error}],
        [],
        [{call,1213,
          {atom,1213,throw},
          [{tuple,1213,
            [{atom,1213,error},
             {var,1213,'Lm'},
             {tuple,1213,
              [{atom,1213,undefined},{var,1213,'M'},{var,1213,'Arity'}]}]}]}]},
       {clause,1214,
        [{tuple,1214,[{atom,1214,ok},{atom,1214,undefined}]}],
        [],
        [{call,1215,
          {atom,1215,throw},
          [{tuple,1215,
            [{atom,1215,error},
             {var,1215,'Lm'},
             {tuple,1215,
              [{atom,1215,undefined},{var,1215,'M'},{var,1215,'Arity'}]}]}]}]},
       {clause,1216,
        [{tuple,1216,
          [{atom,1216,ok},
           {cons,1216,
            {tuple,1216,[{atom,1216,none},{var,1216,'Def'}]},
            {nil,1216}}]}],
        [],
        [{tuple,1217,[{atom,1217,ok},{var,1217,'Def'}]}]},
       {clause,1218,
        [{tuple,1218,[{atom,1218,ok},{var,1218,'Defs'}]}],
        [[{call,1218,{atom,1218,is_list},[{var,1218,'Defs'}]}]],
        [{'case',1219,
          {call,1219,
           {remote,1219,{atom,1219,proplists},{atom,1219,get_value}},
           [{var,1219,'Arity'},{var,1219,'Defs'}]},
          [{clause,1220,
            [{atom,1220,undefined}],
            [],
            [{call,1221,
              {atom,1221,throw},
              [{tuple,1221,
                [{atom,1221,error},
                 {var,1221,'Lm'},
                 {tuple,1221,[{atom,1221,mismatch},{var,1221,'M'}]}]}]}]},
           {clause,1222,
            [{var,1222,'Def'}],
            [],
            [{tuple,1223,[{atom,1223,ok},{var,1223,'Def'}]}]}]}]},
       {clause,1225,
        [{tuple,1225,[{atom,1225,ok},{var,1225,'PreDef'}]}],
        [],
        [{tuple,1226,[{atom,1226,ok},{var,1226,'PreDef'}]}]}]}]}]},
 {function,1229,check_uses,4,
  [{clause,1229,
    [{nil,1229},{var,1229,'_Anc'},{var,1229,'_U'},{var,1229,'_Lm'}],
    [],
    [{atom,1230,ok}]},
   {clause,1231,
    [{cons,1231,{var,1231,'M'},{var,1231,'Rest'}},
     {var,1231,'Anc'},
     {var,1231,'U'},
     {var,1231,'Lm'}],
    [],
    [{'case',1232,
      {call,1232,
       {remote,1232,{atom,1232,lists},{atom,1232,member}},
       [{var,1232,'M'},{var,1232,'Anc'}]},
      [{clause,1233,
        [{atom,1233,true}],
        [],
        [{match,1234,
          {tuple,1234,
           [{tuple,1234,[{var,1234,'_'},{var,1234,'Name'}]},
            {var,1234,'Arity'}]},
          {var,1234,'M'}},
         {call,1235,
          {atom,1235,throw},
          [{tuple,1235,
            [{atom,1235,error},
             {var,1235,'Lm'},
             {tuple,1235,
              [{atom,1235,circular},
               {var,1235,'Name'},
               {var,1235,'Arity'}]}]}]}]},
       {clause,1236,
        [{atom,1236,false}],
        [],
        [{match,1237,
          {var,1237,'L'},
          {call,1237,
           {atom,1237,get_macro_uses},
           [{var,1237,'M'},{var,1237,'U'}]}},
         {call,1238,
          {atom,1238,check_uses},
          [{var,1238,'L'},
           {cons,1238,{var,1238,'M'},{var,1238,'Anc'}},
           {var,1238,'U'},
           {var,1238,'Lm'}]},
         {call,1239,
          {atom,1239,check_uses},
          [{var,1239,'Rest'},
           {var,1239,'Anc'},
           {var,1239,'U'},
           {var,1239,'Lm'}]}]}]}]}]},
 {function,1242,get_macro_uses,2,
  [{clause,1242,
    [{tuple,1242,[{var,1242,'M'},{var,1242,'Arity'}]},{var,1242,'U'}],
    [],
    [{'case',1243,
      {call,1243,
       {remote,1243,{atom,1243,dict},{atom,1243,find}},
       [{var,1243,'M'},{var,1243,'U'}]},
      [{clause,1244,[{atom,1244,error}],[],[{nil,1245}]},
       {clause,1246,
        [{tuple,1246,[{atom,1246,ok},{var,1246,'L'}]}],
        [],
        [{call,1247,
          {remote,1247,{atom,1247,proplists},{atom,1247,get_value}},
          [{var,1247,'Arity'},
           {var,1247,'L'},
           {call,1247,
            {remote,1247,{atom,1247,proplists},{atom,1247,get_value}},
            [{atom,1247,none},{var,1247,'L'},{nil,1247}]}]}]}]}]}]},
 {function,1252,expand_macros,2,
  [{clause,1252,
    [{cons,1252,
      {tuple,1252,[{atom,1252,'?'},{var,1252,'_Lq'}]},
      {cons,1252,
       {match,1252,
        {tuple,1252,[{atom,1252,atom},{var,1252,'_Lm'},{var,1252,'M'}]},
        {var,1252,'MacT'}},
       {var,1252,'Toks'}}},
     {var,1252,'Ms'}],
    [],
    [{call,1253,
      {atom,1253,expand_macros},
      [{atom,1253,atom},
       {var,1253,'MacT'},
       {var,1253,'M'},
       {var,1253,'Toks'},
       {var,1253,'Ms'}]}]},
   {clause,1255,
    [{cons,1255,
      {tuple,1255,[{atom,1255,'?'},{var,1255,'_Lq'}]},
      {cons,1255,
       {match,1255,
        {tuple,1255,[{atom,1255,var},{var,1255,'Lm'},{atom,1255,'LINE'}]},
        {var,1255,'Tok'}},
       {var,1255,'Toks'}}},
     {var,1255,'Ms'}],
    [],
    [{match,1256,
      {var,1256,'Line'},
      {call,1256,
       {remote,1256,{atom,1256,erl_scan},{atom,1256,line}},
       [{var,1256,'Tok'}]}},
     {cons,1257,
      {tuple,1257,[{atom,1257,integer},{var,1257,'Lm'},{var,1257,'Line'}]},
      {call,1257,
       {atom,1257,expand_macros},
       [{var,1257,'Toks'},{var,1257,'Ms'}]}}]},
   {clause,1258,
    [{cons,1258,
      {tuple,1258,[{atom,1258,'?'},{var,1258,'_Lq'}]},
      {cons,1258,
       {match,1258,
        {tuple,1258,[{atom,1258,var},{var,1258,'_Lm'},{var,1258,'M'}]},
        {var,1258,'MacT'}},
       {var,1258,'Toks'}}},
     {var,1258,'Ms'}],
    [],
    [{call,1259,
      {atom,1259,expand_macros},
      [{atom,1259,atom},
       {var,1259,'MacT'},
       {var,1259,'M'},
       {var,1259,'Toks'},
       {var,1259,'Ms'}]}]},
   {clause,1261,
    [{cons,1261,
      {tuple,1261,[{atom,1261,'?'},{var,1261,'_Lq'}]},
      {cons,1261,{var,1261,'Token'},{var,1261,'_Toks'}}},
     {var,1261,'_Ms'}],
    [],
    [{match,1262,
      {var,1262,'T'},
      {'case',1262,
       {call,1262,
        {remote,1262,{atom,1262,erl_scan},{atom,1262,text}},
        [{var,1262,'Token'}]},
       [{clause,1263,
         [{var,1263,'Text'}],
         [[{call,1263,{atom,1263,is_list},[{var,1263,'Text'}]}]],
         [{var,1264,'Text'}]},
        {clause,1265,
         [{atom,1265,undefined}],
         [],
         [{match,1266,
           {var,1266,'Symbol'},
           {call,1266,
            {remote,1266,{atom,1266,erl_scan},{atom,1266,symbol}},
            [{var,1266,'Token'}]}},
          {call,1267,
           {remote,1267,{atom,1267,io_lib},{atom,1267,write}},
           [{var,1267,'Symbol'}]}]}]}},
     {call,1269,
      {atom,1269,throw},
      [{tuple,1269,
        [{atom,1269,error},
         {call,1269,{atom,1269,loc},[{var,1269,'Token'}]},
         {tuple,1269,
          [{atom,1269,call},{cons,1269,{char,1269,63},{var,1269,'T'}}]}]}]}]},
   {clause,1270,
    [{cons,1270,{var,1270,'T'},{var,1270,'Ts'}},{var,1270,'Ms'}],
    [],
    [{cons,1271,
      {var,1271,'T'},
      {call,1271,
       {atom,1271,expand_macros},
       [{var,1271,'Ts'},{var,1271,'Ms'}]}}]},
   {clause,1272,[{nil,1272},{var,1272,'_Ms'}],[],[{nil,1272}]}]},
 {function,1277,bind_args,5,
  [{clause,1277,
    [{cons,1277,
      {tuple,1277,[{atom,1277,'('},{var,1277,'_Llp'}]},
      {cons,1277,
       {tuple,1277,[{atom,1277,')'},{var,1277,'_Lrp'}]},
       {var,1277,'Toks'}}},
     {var,1277,'_Lm'},
     {var,1277,'_M'},
     {nil,1277},
     {var,1277,'Bs'}],
    [],
    [{tuple,1278,[{var,1278,'Bs'},{var,1278,'Toks'}]}]},
   {clause,1279,
    [{cons,1279,
      {tuple,1279,[{atom,1279,'('},{var,1279,'_Llp'}]},
      {var,1279,'Toks0'}},
     {var,1279,'Lm'},
     {var,1279,'M'},
     {cons,1279,{var,1279,'A'},{var,1279,'As'}},
     {var,1279,'Bs'}],
    [],
    [{match,1280,
      {tuple,1280,[{var,1280,'Arg'},{var,1280,'Toks1'}]},
      {call,1280,
       {atom,1280,macro_arg},
       [{var,1280,'Toks0'},{nil,1280},{nil,1280}]}},
     {call,1281,
      {atom,1281,macro_args},
      [{var,1281,'Toks1'},
       {var,1281,'Lm'},
       {var,1281,'M'},
       {var,1281,'As'},
       {call,1281,
        {atom,1281,store_arg},
        [{var,1281,'Lm'},
         {var,1281,'M'},
         {var,1281,'A'},
         {var,1281,'Arg'},
         {var,1281,'Bs'}]}]}]},
   {clause,1282,
    [{var,1282,'_Toks'},
     {var,1282,'Lm'},
     {var,1282,'M'},
     {var,1282,'_As'},
     {var,1282,'_Bs'}],
    [],
    [{call,1283,
      {atom,1283,throw},
      [{tuple,1283,
        [{atom,1283,error},
         {var,1283,'Lm'},
         {tuple,1283,[{atom,1283,mismatch},{var,1283,'M'}]}]}]}]}]},
 {function,1285,macro_args,5,
  [{clause,1285,
    [{cons,1285,
      {tuple,1285,[{atom,1285,')'},{var,1285,'_Lrp'}]},
      {var,1285,'Toks'}},
     {var,1285,'_Lm'},
     {var,1285,'_M'},
     {nil,1285},
     {var,1285,'Bs'}],
    [],
    [{tuple,1286,[{var,1286,'Bs'},{var,1286,'Toks'}]}]},
   {clause,1287,
    [{cons,1287,
      {tuple,1287,[{atom,1287,','},{var,1287,'_Lc'}]},
      {var,1287,'Toks0'}},
     {var,1287,'Lm'},
     {var,1287,'M'},
     {cons,1287,{var,1287,'A'},{var,1287,'As'}},
     {var,1287,'Bs'}],
    [],
    [{match,1288,
      {tuple,1288,[{var,1288,'Arg'},{var,1288,'Toks1'}]},
      {call,1288,
       {atom,1288,macro_arg},
       [{var,1288,'Toks0'},{nil,1288},{nil,1288}]}},
     {call,1289,
      {atom,1289,macro_args},
      [{var,1289,'Toks1'},
       {var,1289,'Lm'},
       {var,1289,'M'},
       {var,1289,'As'},
       {call,1289,
        {atom,1289,store_arg},
        [{var,1289,'Lm'},
         {var,1289,'M'},
         {var,1289,'A'},
         {var,1289,'Arg'},
         {var,1289,'Bs'}]}]}]},
   {clause,1290,
    [{nil,1290},
     {var,1290,'Lm'},
     {var,1290,'M'},
     {var,1290,'_As'},
     {var,1290,'_Bs'}],
    [],
    [{call,1291,
      {atom,1291,throw},
      [{tuple,1291,
        [{atom,1291,error},
         {var,1291,'Lm'},
         {tuple,1291,[{atom,1291,arg_error},{var,1291,'M'}]}]}]}]},
   {clause,1292,
    [{var,1292,'_Toks'},
     {var,1292,'Lm'},
     {var,1292,'M'},
     {var,1292,'_As'},
     {var,1292,'_Bs'}],
    [],
    [{call,1293,
      {atom,1293,throw},
      [{tuple,1293,
        [{atom,1293,error},
         {var,1293,'Lm'},
         {tuple,1293,[{atom,1293,mismatch},{var,1293,'M'}]}]}]}]}]},
 {function,1295,store_arg,5,
  [{clause,1295,
    [{var,1295,'L'},
     {var,1295,'M'},
     {var,1295,'_A'},
     {nil,1295},
     {var,1295,'_Bs'}],
    [],
    [{call,1296,
      {atom,1296,throw},
      [{tuple,1296,
        [{atom,1296,error},
         {var,1296,'L'},
         {tuple,1296,[{atom,1296,mismatch},{var,1296,'M'}]}]}]}]},
   {clause,1297,
    [{var,1297,'_L'},
     {var,1297,'_M'},
     {var,1297,'A'},
     {var,1297,'Arg'},
     {var,1297,'Bs'}],
    [],
    [{call,1298,
      {remote,1298,{atom,1298,dict},{atom,1298,store}},
      [{var,1298,'A'},{var,1298,'Arg'},{var,1298,'Bs'}]}]}]},
 {function,1302,count_args,3,
  [{clause,1302,
    [{cons,1302,
      {tuple,1302,[{atom,1302,'('},{var,1302,'_Llp'}]},
      {cons,1302,
       {tuple,1302,[{atom,1302,')'},{var,1302,'_Lrp'}]},
       {var,1302,'_Toks'}}},
     {var,1302,'_Lm'},
     {var,1302,'_M'}],
    [],
    [{integer,1303,0}]},
   {clause,1304,
    [{cons,1304,
      {tuple,1304,[{atom,1304,'('},{var,1304,'_Llp'}]},
      {cons,1304,
       {tuple,1304,[{atom,1304,','},{var,1304,'_Lc'}]},
       {var,1304,'_Toks'}}},
     {var,1304,'Lm'},
     {var,1304,'M'}],
    [],
    [{call,1305,
      {atom,1305,throw},
      [{tuple,1305,
        [{atom,1305,error},
         {var,1305,'Lm'},
         {tuple,1305,[{atom,1305,arg_error},{var,1305,'M'}]}]}]}]},
   {clause,1306,
    [{cons,1306,
      {tuple,1306,[{atom,1306,'('},{var,1306,'_Llp'}]},
      {var,1306,'Toks0'}},
     {var,1306,'Lm'},
     {var,1306,'M'}],
    [],
    [{match,1307,
      {tuple,1307,[{var,1307,'_Arg'},{var,1307,'Toks1'}]},
      {call,1307,
       {atom,1307,macro_arg},
       [{var,1307,'Toks0'},{nil,1307},{nil,1307}]}},
     {call,1308,
      {atom,1308,count_args},
      [{var,1308,'Toks1'},{var,1308,'Lm'},{var,1308,'M'},{integer,1308,1}]}]},
   {clause,1309,
    [{var,1309,'_Toks'},{var,1309,'_Lm'},{var,1309,'_M'}],
    [],
    [{atom,1310,none}]}]},
 {function,1312,count_args,4,
  [{clause,1312,
    [{cons,1312,
      {tuple,1312,[{atom,1312,')'},{var,1312,'_Lrp'}]},
      {var,1312,'_Toks'}},
     {var,1312,'_Lm'},
     {var,1312,'_M'},
     {var,1312,'NbArgs'}],
    [],
    [{var,1313,'NbArgs'}]},
   {clause,1314,
    [{cons,1314,
      {tuple,1314,[{atom,1314,','},{var,1314,'_Lc'}]},
      {cons,1314,
       {tuple,1314,[{atom,1314,')'},{var,1314,'_Lrp'}]},
       {var,1314,'_Toks'}}},
     {var,1314,'Lm'},
     {var,1314,'M'},
     {var,1314,'_NbArgs'}],
    [],
    [{call,1315,
      {atom,1315,throw},
      [{tuple,1315,
        [{atom,1315,error},
         {var,1315,'Lm'},
         {tuple,1315,[{atom,1315,arg_error},{var,1315,'M'}]}]}]}]},
   {clause,1316,
    [{cons,1316,
      {tuple,1316,[{atom,1316,','},{var,1316,'_Lc'}]},
      {var,1316,'Toks0'}},
     {var,1316,'Lm'},
     {var,1316,'M'},
     {var,1316,'NbArgs'}],
    [],
    [{match,1317,
      {tuple,1317,[{var,1317,'_Arg'},{var,1317,'Toks1'}]},
      {call,1317,
       {atom,1317,macro_arg},
       [{var,1317,'Toks0'},{nil,1317},{nil,1317}]}},
     {call,1318,
      {atom,1318,count_args},
      [{var,1318,'Toks1'},
       {var,1318,'Lm'},
       {var,1318,'M'},
       {op,1318,'+',{var,1318,'NbArgs'},{integer,1318,1}}]}]},
   {clause,1319,
    [{nil,1319},{var,1319,'Lm'},{var,1319,'M'},{var,1319,'_NbArgs'}],
    [],
    [{call,1320,
      {atom,1320,throw},
      [{tuple,1320,
        [{atom,1320,error},
         {var,1320,'Lm'},
         {tuple,1320,[{atom,1320,arg_error},{var,1320,'M'}]}]}]}]},
   {clause,1321,
    [{var,1321,'_Toks'},{var,1321,'Lm'},{var,1321,'M'},{var,1321,'_NbArgs'}],
    [],
    [{call,1322,
      {atom,1322,throw},
      [{tuple,1322,
        [{atom,1322,error},
         {var,1322,'Lm'},
         {tuple,1322,[{atom,1322,mismatch},{var,1322,'M'}]}]}]}]}]},
 {function,1329,macro_arg,3,
  [{clause,1329,
    [{cons,1329,
      {tuple,1329,[{atom,1329,','},{var,1329,'Lc'}]},
      {var,1329,'Toks'}},
     {nil,1329},
     {var,1329,'Arg'}],
    [],
    [{tuple,1330,
      [{call,1330,
        {remote,1330,{atom,1330,lists},{atom,1330,reverse}},
        [{var,1330,'Arg'}]},
       {cons,1330,
        {tuple,1330,[{atom,1330,','},{var,1330,'Lc'}]},
        {var,1330,'Toks'}}]}]},
   {clause,1331,
    [{cons,1331,
      {tuple,1331,[{atom,1331,')'},{var,1331,'Lrp'}]},
      {var,1331,'Toks'}},
     {nil,1331},
     {var,1331,'Arg'}],
    [],
    [{tuple,1332,
      [{call,1332,
        {remote,1332,{atom,1332,lists},{atom,1332,reverse}},
        [{var,1332,'Arg'}]},
       {cons,1332,
        {tuple,1332,[{atom,1332,')'},{var,1332,'Lrp'}]},
        {var,1332,'Toks'}}]}]},
   {clause,1333,
    [{cons,1333,
      {tuple,1333,[{atom,1333,'('},{var,1333,'Llp'}]},
      {var,1333,'Toks'}},
     {var,1333,'E'},
     {var,1333,'Arg'}],
    [],
    [{call,1334,
      {atom,1334,macro_arg},
      [{var,1334,'Toks'},
       {cons,1334,{atom,1334,')'},{var,1334,'E'}},
       {cons,1334,
        {tuple,1334,[{atom,1334,'('},{var,1334,'Llp'}]},
        {var,1334,'Arg'}}]}]},
   {clause,1335,
    [{cons,1335,
      {tuple,1335,[{atom,1335,'<<'},{var,1335,'Lls'}]},
      {var,1335,'Toks'}},
     {var,1335,'E'},
     {var,1335,'Arg'}],
    [],
    [{call,1336,
      {atom,1336,macro_arg},
      [{var,1336,'Toks'},
       {cons,1336,{atom,1336,'>>'},{var,1336,'E'}},
       {cons,1336,
        {tuple,1336,[{atom,1336,'<<'},{var,1336,'Lls'}]},
        {var,1336,'Arg'}}]}]},
   {clause,1337,
    [{cons,1337,
      {tuple,1337,[{atom,1337,'['},{var,1337,'Lls'}]},
      {var,1337,'Toks'}},
     {var,1337,'E'},
     {var,1337,'Arg'}],
    [],
    [{call,1338,
      {atom,1338,macro_arg},
      [{var,1338,'Toks'},
       {cons,1338,{atom,1338,']'},{var,1338,'E'}},
       {cons,1338,
        {tuple,1338,[{atom,1338,'['},{var,1338,'Lls'}]},
        {var,1338,'Arg'}}]}]},
   {clause,1339,
    [{cons,1339,
      {tuple,1339,[{atom,1339,'{'},{var,1339,'Llc'}]},
      {var,1339,'Toks'}},
     {var,1339,'E'},
     {var,1339,'Arg'}],
    [],
    [{call,1340,
      {atom,1340,macro_arg},
      [{var,1340,'Toks'},
       {cons,1340,{atom,1340,'}'},{var,1340,'E'}},
       {cons,1340,
        {tuple,1340,[{atom,1340,'{'},{var,1340,'Llc'}]},
        {var,1340,'Arg'}}]}]},
   {clause,1341,
    [{cons,1341,
      {tuple,1341,[{atom,1341,'begin'},{var,1341,'Lb'}]},
      {var,1341,'Toks'}},
     {var,1341,'E'},
     {var,1341,'Arg'}],
    [],
    [{call,1342,
      {atom,1342,macro_arg},
      [{var,1342,'Toks'},
       {cons,1342,{atom,1342,'end'},{var,1342,'E'}},
       {cons,1342,
        {tuple,1342,[{atom,1342,'begin'},{var,1342,'Lb'}]},
        {var,1342,'Arg'}}]}]},
   {clause,1343,
    [{cons,1343,
      {tuple,1343,[{atom,1343,'if'},{var,1343,'Li'}]},
      {var,1343,'Toks'}},
     {var,1343,'E'},
     {var,1343,'Arg'}],
    [],
    [{call,1344,
      {atom,1344,macro_arg},
      [{var,1344,'Toks'},
       {cons,1344,{atom,1344,'end'},{var,1344,'E'}},
       {cons,1344,
        {tuple,1344,[{atom,1344,'if'},{var,1344,'Li'}]},
        {var,1344,'Arg'}}]}]},
   {clause,1345,
    [{cons,1345,
      {tuple,1345,[{atom,1345,'case'},{var,1345,'Lc'}]},
      {var,1345,'Toks'}},
     {var,1345,'E'},
     {var,1345,'Arg'}],
    [],
    [{call,1346,
      {atom,1346,macro_arg},
      [{var,1346,'Toks'},
       {cons,1346,{atom,1346,'end'},{var,1346,'E'}},
       {cons,1346,
        {tuple,1346,[{atom,1346,'case'},{var,1346,'Lc'}]},
        {var,1346,'Arg'}}]}]},
   {clause,1347,
    [{cons,1347,
      {tuple,1347,[{atom,1347,'fun'},{var,1347,'Lc'}]},
      {match,1347,
       {cons,1347,
        {tuple,1347,[{atom,1347,'('},{var,1347,'_'}]},
        {var,1347,'_'}},
       {var,1347,'Toks'}}},
     {var,1347,'E'},
     {var,1347,'Arg'}],
    [],
    [{call,1348,
      {atom,1348,macro_arg},
      [{var,1348,'Toks'},
       {cons,1348,{atom,1348,'end'},{var,1348,'E'}},
       {cons,1348,
        {tuple,1348,[{atom,1348,'fun'},{var,1348,'Lc'}]},
        {var,1348,'Arg'}}]}]},
   {clause,1349,
    [{cons,1349,
      {match,1349,
       {tuple,1349,[{atom,1349,'fun'},{var,1349,'_'}]},
       {var,1349,'Fun'}},
      {cons,1349,
       {match,1349,
        {tuple,1349,[{atom,1349,var},{var,1349,'_'},{var,1349,'_'}]},
        {var,1349,'Name'}},
       {match,1349,
        {cons,1349,
         {tuple,1349,[{atom,1349,'('},{var,1349,'_'}]},
         {var,1349,'_'}},
        {var,1349,'Toks'}}}},
     {var,1349,'E'},
     {var,1349,'Arg'}],
    [],
    [{call,1350,
      {atom,1350,macro_arg},
      [{var,1350,'Toks'},
       {cons,1350,{atom,1350,'end'},{var,1350,'E'}},
       {cons,1350,
        {var,1350,'Name'},
        {cons,1350,{var,1350,'Fun'},{var,1350,'Arg'}}}]}]},
   {clause,1351,
    [{cons,1351,
      {tuple,1351,[{atom,1351,'receive'},{var,1351,'Lr'}]},
      {var,1351,'Toks'}},
     {var,1351,'E'},
     {var,1351,'Arg'}],
    [],
    [{call,1352,
      {atom,1352,macro_arg},
      [{var,1352,'Toks'},
       {cons,1352,{atom,1352,'end'},{var,1352,'E'}},
       {cons,1352,
        {tuple,1352,[{atom,1352,'receive'},{var,1352,'Lr'}]},
        {var,1352,'Arg'}}]}]},
   {clause,1353,
    [{cons,1353,
      {tuple,1353,[{atom,1353,'try'},{var,1353,'Lr'}]},
      {var,1353,'Toks'}},
     {var,1353,'E'},
     {var,1353,'Arg'}],
    [],
    [{call,1354,
      {atom,1354,macro_arg},
      [{var,1354,'Toks'},
       {cons,1354,{atom,1354,'end'},{var,1354,'E'}},
       {cons,1354,
        {tuple,1354,[{atom,1354,'try'},{var,1354,'Lr'}]},
        {var,1354,'Arg'}}]}]},
   {clause,1355,
    [{cons,1355,
      {tuple,1355,[{atom,1355,'cond'},{var,1355,'Lr'}]},
      {var,1355,'Toks'}},
     {var,1355,'E'},
     {var,1355,'Arg'}],
    [],
    [{call,1356,
      {atom,1356,macro_arg},
      [{var,1356,'Toks'},
       {cons,1356,{atom,1356,'end'},{var,1356,'E'}},
       {cons,1356,
        {tuple,1356,[{atom,1356,'cond'},{var,1356,'Lr'}]},
        {var,1356,'Arg'}}]}]},
   {clause,1357,
    [{cons,1357,
      {tuple,1357,[{var,1357,'Rb'},{var,1357,'Lrb'}]},
      {var,1357,'Toks'}},
     {cons,1357,{var,1357,'Rb'},{var,1357,'E'}},
     {var,1357,'Arg'}],
    [],
    [{call,1358,
      {atom,1358,macro_arg},
      [{var,1358,'Toks'},
       {var,1358,'E'},
       {cons,1358,
        {tuple,1358,[{var,1358,'Rb'},{var,1358,'Lrb'}]},
        {var,1358,'Arg'}}]}]},
   {clause,1359,
    [{cons,1359,{var,1359,'T'},{var,1359,'Toks'}},
     {var,1359,'E'},
     {var,1359,'Arg'}],
    [],
    [{call,1360,
      {atom,1360,macro_arg},
      [{var,1360,'Toks'},
       {var,1360,'E'},
       {cons,1360,{var,1360,'T'},{var,1360,'Arg'}}]}]},
   {clause,1361,
    [{nil,1361},{var,1361,'_E'},{var,1361,'Arg'}],
    [],
    [{tuple,1362,
      [{call,1362,
        {remote,1362,{atom,1362,lists},{atom,1362,reverse}},
        [{var,1362,'Arg'}]},
       {nil,1362}]}]}]},
 {function,1370,expand_macro,4,
  [{clause,1370,
    [{cons,1370,
      {tuple,1370,[{atom,1370,var},{var,1370,'_Lv'},{var,1370,'V'}]},
      {var,1370,'Ts'}},
     {var,1370,'L'},
     {var,1370,'Rest'},
     {var,1370,'Bs'}],
    [],
    [{'case',1371,
      {call,1371,
       {remote,1371,{atom,1371,dict},{atom,1371,find}},
       [{var,1371,'V'},{var,1371,'Bs'}]},
      [{clause,1372,
        [{tuple,1372,[{atom,1372,ok},{var,1372,'Val'}]}],
        [],
        [{call,1374,
          {atom,1374,expand_arg},
          [{var,1374,'Val'},
           {var,1374,'Ts'},
           {var,1374,'L'},
           {var,1374,'Rest'},
           {var,1374,'Bs'}]}]},
       {clause,1375,
        [{atom,1375,error}],
        [],
        [{cons,1376,
          {tuple,1376,[{atom,1376,var},{var,1376,'L'},{var,1376,'V'}]},
          {call,1376,
           {atom,1376,expand_macro},
           [{var,1376,'Ts'},
            {var,1376,'L'},
            {var,1376,'Rest'},
            {var,1376,'Bs'}]}}]}]}]},
   {clause,1378,
    [{cons,1378,
      {tuple,1378,[{atom,1378,'?'},{var,1378,'_'}]},
      {cons,1378,
       {tuple,1378,[{atom,1378,'?'},{var,1378,'_'}]},
       {cons,1378,
        {tuple,1378,[{atom,1378,var},{var,1378,'_Lv'},{var,1378,'V'}]},
        {var,1378,'Ts'}}}},
     {var,1378,'L'},
     {var,1378,'Rest'},
     {var,1378,'Bs'}],
    [],
    [{'case',1379,
      {call,1379,
       {remote,1379,{atom,1379,dict},{atom,1379,find}},
       [{var,1379,'V'},{var,1379,'Bs'}]},
      [{clause,1380,
        [{tuple,1380,[{atom,1380,ok},{var,1380,'Val'}]}],
        [],
        [{call,1382,
          {atom,1382,expand_arg},
          [{call,1382,{atom,1382,stringify},[{var,1382,'Val'},{var,1382,'L'}]},
           {var,1382,'Ts'},
           {var,1382,'L'},
           {var,1382,'Rest'},
           {var,1382,'Bs'}]}]},
       {clause,1383,
        [{atom,1383,error}],
        [],
        [{cons,1384,
          {tuple,1384,[{atom,1384,var},{var,1384,'L'},{var,1384,'V'}]},
          {call,1384,
           {atom,1384,expand_macro},
           [{var,1384,'Ts'},
            {var,1384,'L'},
            {var,1384,'Rest'},
            {var,1384,'Bs'}]}}]}]}]},
   {clause,1386,
    [{cons,1386,{var,1386,'T'},{var,1386,'Ts'}},
     {var,1386,'L'},
     {var,1386,'Rest'},
     {var,1386,'Bs'}],
    [],
    [{cons,1387,
      {call,1387,
       {atom,1387,setelement},
       [{integer,1387,2},{var,1387,'T'},{var,1387,'L'}]},
      {call,1387,
       {atom,1387,expand_macro},
       [{var,1387,'Ts'},{var,1387,'L'},{var,1387,'Rest'},{var,1387,'Bs'}]}}]},
   {clause,1388,
    [{nil,1388},{var,1388,'_L'},{var,1388,'Rest'},{var,1388,'_Bs'}],
    [],
    [{var,1388,'Rest'}]}]},
 {function,1390,expand_arg,5,
  [{clause,1390,
    [{cons,1390,{var,1390,'A'},{var,1390,'As'}},
     {var,1390,'Ts'},
     {var,1390,'_L'},
     {var,1390,'Rest'},
     {var,1390,'Bs'}],
    [],
    [{match,1392,
      {var,1392,'NextL'},
      {call,1392,{atom,1392,element},[{integer,1392,2},{var,1392,'A'}]}},
     {cons,1393,
      {var,1393,'A'},
      {call,1393,
       {atom,1393,expand_arg},
       [{var,1393,'As'},
        {var,1393,'Ts'},
        {var,1393,'NextL'},
        {var,1393,'Rest'},
        {var,1393,'Bs'}]}}]},
   {clause,1394,
    [{nil,1394},
     {var,1394,'Ts'},
     {var,1394,'L'},
     {var,1394,'Rest'},
     {var,1394,'Bs'}],
    [],
    [{call,1395,
      {atom,1395,expand_macro},
      [{var,1395,'Ts'},{var,1395,'L'},{var,1395,'Rest'},{var,1395,'Bs'}]}]}]},
 {function,1402,token_src,1,
  [{clause,1402,
    [{tuple,1402,[{atom,1402,dot},{var,1402,'_'}]}],
    [],
    [{string,1403,"."}]},
   {clause,1404,
    [{tuple,1404,[{var,1404,'X'},{var,1404,'_'}]}],
    [[{call,1404,{atom,1404,is_atom},[{var,1404,'X'}]}]],
    [{call,1405,{atom,1405,atom_to_list},[{var,1405,'X'}]}]},
   {clause,1406,
    [{tuple,1406,[{atom,1406,var},{var,1406,'_'},{var,1406,'X'}]}],
    [],
    [{call,1407,{atom,1407,atom_to_list},[{var,1407,'X'}]}]},
   {clause,1408,
    [{tuple,1408,[{atom,1408,char},{var,1408,'_'},{var,1408,'C'}]}],
    [],
    [{call,1409,
      {remote,1409,{atom,1409,io_lib},{atom,1409,write_char}},
      [{var,1409,'C'}]}]},
   {clause,1410,
    [{tuple,1410,[{atom,1410,string},{var,1410,'_'},{var,1410,'X'}]}],
    [],
    [{call,1411,
      {remote,1411,{atom,1411,io_lib},{atom,1411,write_string}},
      [{var,1411,'X'}]}]},
   {clause,1412,
    [{tuple,1412,[{var,1412,'_'},{var,1412,'_'},{var,1412,'X'}]}],
    [],
    [{call,1413,
      {remote,1413,{atom,1413,io_lib},{atom,1413,format}},
      [{string,1413,"~w"},{cons,1413,{var,1413,'X'},{nil,1413}}]}]}]},
 {function,1415,stringify1,1,
  [{clause,1415,[{nil,1415}],[],[{nil,1416}]},
   {clause,1417,
    [{cons,1417,{var,1417,'T'},{var,1417,'Tokens'}}],
    [],
    [{cons,1418,
      {call,1418,
       {remote,1418,{atom,1418,io_lib},{atom,1418,format}},
       [{string,1418," ~ts"},
        {cons,1418,
         {call,1418,{atom,1418,token_src},[{var,1418,'T'}]},
         {nil,1418}}]},
      {call,1418,{atom,1418,stringify1},[{var,1418,'Tokens'}]}}]}]},
 {function,1420,stringify,2,
  [{clause,1420,
    [{var,1420,'Ts'},{var,1420,'L'}],
    [],
    [{match,1421,
      {cons,1421,{char,1421,32},{var,1421,'S'}},
      {call,1421,
       {remote,1421,{atom,1421,lists},{atom,1421,flatten}},
       [{call,1421,{atom,1421,stringify1},[{var,1421,'Ts'}]}]}},
     {cons,1422,
      {tuple,1422,[{atom,1422,string},{var,1422,'L'},{var,1422,'S'}]},
      {nil,1422}}]}]},
 {function,1429,epp_request,1,
  [{clause,1429,
    [{var,1429,'Epp'}],
    [],
    [{call,1430,
      {atom,1430,wait_epp_reply},
      [{var,1430,'Epp'},
       {call,1430,
        {remote,1430,{atom,1430,erlang},{atom,1430,monitor}},
        [{atom,1430,process},{var,1430,'Epp'}]}]}]}]},
 {function,1432,epp_request,2,
  [{clause,1432,
    [{var,1432,'Epp'},{var,1432,'Req'}],
    [],
    [{op,1433,'!',
      {var,1433,'Epp'},
      {tuple,1433,
       [{atom,1433,epp_request},
        {call,1433,{atom,1433,self},[]},
        {var,1433,'Req'}]}},
     {call,1434,
      {atom,1434,wait_epp_reply},
      [{var,1434,'Epp'},
       {call,1434,
        {remote,1434,{atom,1434,erlang},{atom,1434,monitor}},
        [{atom,1434,process},{var,1434,'Epp'}]}]}]}]},
 {function,1436,epp_reply,2,
  [{clause,1436,
    [{var,1436,'From'},{var,1436,'Rep'}],
    [],
    [{op,1437,'!',
      {var,1437,'From'},
      {tuple,1437,
       [{atom,1437,epp_reply},
        {call,1437,{atom,1437,self},[]},
        {var,1437,'Rep'}]}},
     {atom,1438,ok}]}]},
 {function,1440,wait_epp_reply,2,
  [{clause,1440,
    [{var,1440,'Epp'},{var,1440,'Mref'}],
    [],
    [{'receive',1441,
      [{clause,1442,
        [{tuple,1442,
          [{atom,1442,epp_reply},{var,1442,'Epp'},{var,1442,'Rep'}]}],
        [],
        [{call,1443,
          {remote,1443,{atom,1443,erlang},{atom,1443,demonitor}},
          [{var,1443,'Mref'},{cons,1443,{atom,1443,flush},{nil,1443}}]},
         {var,1444,'Rep'}]},
       {clause,1445,
        [{tuple,1445,
          [{atom,1445,'DOWN'},
           {var,1445,'Mref'},
           {var,1445,'_'},
           {var,1445,'_'},
           {var,1445,'E'}]}],
        [],
        [{'receive',1446,
          [{clause,1446,
            [{tuple,1446,
              [{atom,1446,epp_reply},{var,1446,'Epp'},{var,1446,'Rep'}]}],
            [],
            [{var,1446,'Rep'}]}],
          {integer,1447,0},
          [{call,1447,{atom,1447,exit},[{var,1447,'E'}]}]}]}]}]}]},
 {function,1451,expand_var,1,
  [{clause,1451,
    [{match,1451,
      {cons,1451,{char,1451,36},{var,1451,'_'}},
      {var,1451,'NewName'}}],
    [],
    [{'case',1452,
      {'catch',1452,
       {call,1452,{atom,1452,expand_var1},[{var,1452,'NewName'}]}},
      [{clause,1453,
        [{tuple,1453,[{atom,1453,ok},{var,1453,'ExpName'}]}],
        [],
        [{var,1454,'ExpName'}]},
       {clause,1455,[{var,1455,'_'}],[],[{var,1456,'NewName'}]}]}]},
   {clause,1458,[{var,1458,'NewName'}],[],[{var,1459,'NewName'}]}]},
 {function,1461,expand_var1,1,
  [{clause,1461,
    [{var,1461,'NewName'}],
    [],
    [{match,1462,
      {cons,1462,
       {cons,1462,{char,1462,36},{var,1462,'Var'}},
       {var,1462,'Rest'}},
      {call,1462,
       {remote,1462,{atom,1462,filename},{atom,1462,split}},
       [{var,1462,'NewName'}]}},
     {match,1463,
      {var,1463,'Value'},
      {call,1463,
       {remote,1463,{atom,1463,os},{atom,1463,getenv}},
       [{var,1463,'Var'}]}},
     {match,1464,
      {atom,1464,true},
      {op,1464,'=/=',{var,1464,'Value'},{atom,1464,false}}},
     {tuple,1465,
      [{atom,1465,ok},
       {call,1465,
        {atom,1465,fname_join},
        [{cons,1465,{var,1465,'Value'},{var,1465,'Rest'}}]}]}]}]},
 {function,1467,fname_join,1,
  [{clause,1467,
    [{cons,1467,
      {string,1467,"."},
      {match,1467,
       {cons,1467,{var,1467,'_'},{var,1467,'_'}},
       {var,1467,'Rest'}}}],
    [],
    [{call,1468,{atom,1468,fname_join},[{var,1468,'Rest'}]}]},
   {clause,1469,
    [{var,1469,'Components'}],
    [],
    [{call,1470,
      {remote,1470,{atom,1470,filename},{atom,1470,join}},
      [{var,1470,'Components'}]}]}]},
 {function,1473,loc_anno,1,
  [{clause,1473,
    [{var,1473,'Line'}],
    [[{call,1473,{atom,1473,is_integer},[{var,1473,'Line'}]}]],
    [{call,1474,
      {remote,1474,{atom,1474,erl_anno},{atom,1474,new}},
      [{var,1474,'Line'}]}]},
   {clause,1475,
    [{tuple,1475,[{var,1475,'Line'},{var,1475,'_Column'}]}],
    [],
    [{call,1476,
      {remote,1476,{atom,1476,erl_anno},{atom,1476,new}},
      [{var,1476,'Line'}]}]}]},
 {function,1478,loc,1,
  [{clause,1478,
    [{var,1478,'Token'}],
    [],
    [{call,1479,
      {remote,1479,{atom,1479,erl_scan},{atom,1479,location}},
      [{var,1479,'Token'}]}]}]},
 {function,1481,add_line,2,
  [{clause,1481,
    [{var,1481,'Line'},{var,1481,'Offset'}],
    [[{call,1481,{atom,1481,is_integer},[{var,1481,'Line'}]}]],
    [{op,1482,'+',{var,1482,'Line'},{var,1482,'Offset'}}]},
   {clause,1483,
    [{tuple,1483,[{var,1483,'Line'},{var,1483,'Column'}]},{var,1483,'Offset'}],
    [],
    [{tuple,1484,
      [{op,1484,'+',{var,1484,'Line'},{var,1484,'Offset'}},
       {var,1484,'Column'}]}]}]},
 {function,1486,start_loc,1,
  [{clause,1486,
    [{var,1486,'Line'}],
    [[{call,1486,{atom,1486,is_integer},[{var,1486,'Line'}]}]],
    [{integer,1487,1}]},
   {clause,1488,
    [{tuple,1488,[{var,1488,'_Line'},{var,1488,'_Column'}]}],
    [],
    [{tuple,1489,[{integer,1489,1},{integer,1489,1}]}]}]},
 {function,1491,line1,0,
  [{clause,1491,[],[],
    [{call,1492,
      {remote,1492,{atom,1492,erl_anno},{atom,1492,new}},
      [{integer,1492,1}]}]}]},
 {function,1494,get_line,1,
  [{clause,1494,
    [{var,1494,'Anno'}],
    [],
    [{call,1495,
      {remote,1495,{atom,1495,erl_anno},{atom,1495,line}},
      [{var,1495,'Anno'}]}]}]},
 {function,1532,interpret_file_attribute,1,
  [{clause,1532,
    [{var,1532,'Forms'}],
    [],
    [{call,1533,
      {atom,1533,interpret_file_attr},
      [{var,1533,'Forms'},{integer,1533,0},{nil,1533}]}]}]},
 {function,1535,interpret_file_attr,3,
  [{clause,1535,
    [{cons,1535,
      {match,1535,
       {tuple,1535,
        [{atom,1535,attribute},
         {var,1535,'Anno'},
         {atom,1535,file},
         {tuple,1535,[{var,1535,'File'},{var,1535,'Line'}]}]},
       {var,1535,'Form'}},
      {var,1535,'Forms'}},
     {var,1536,'Delta'},
     {var,1536,'Fs'}],
    [],
    [{match,1537,
      {var,1537,'L'},
      {call,1537,{atom,1537,get_line},[{var,1537,'Anno'}]}},
     {match,1538,
      {var,1538,'Generated'},
      {call,1538,
       {remote,1538,{atom,1538,erl_anno},{atom,1538,generated}},
       [{var,1538,'Anno'}]}},
     {'if',1539,
      [{clause,1540,[],
        [[{var,1540,'Generated'}]],
        [{call,1542,
          {atom,1542,interpret_file_attr},
          [{var,1542,'Forms'},
           {op,1542,'-',
            {op,1542,'+',{var,1542,'L'},{var,1542,'Delta'}},
            {var,1542,'Line'}},
           {var,1542,'Fs'}]}]},
       {clause,1543,[],
        [[{op,1543,'not',{var,1543,'Generated'}}]],
        [{'case',1546,
          {var,1546,'Fs'},
          [{clause,1547,
            [{cons,1547,
              {var,1547,'_'},
              {cons,1547,{var,1547,'File'},{var,1547,'Fs1'}}}],
            [],
            [{cons,1548,
              {var,1548,'Form'},
              {call,1548,
               {atom,1548,interpret_file_attr},
               [{var,1548,'Forms'},
                {integer,1548,0},
                {cons,1548,{var,1548,'File'},{var,1548,'Fs1'}}]}}]},
           {clause,1549,
            [{var,1549,'_'}],
            [],
            [{cons,1550,
              {var,1550,'Form'},
              {call,1550,
               {atom,1550,interpret_file_attr},
               [{var,1550,'Forms'},
                {integer,1550,0},
                {cons,1550,{var,1550,'File'},{var,1550,'Fs'}}]}}]}]}]}]}]},
   {clause,1553,
    [{cons,1553,{var,1553,'Form0'},{var,1553,'Forms'}},
     {var,1553,'Delta'},
     {var,1553,'Fs'}],
    [],
    [{match,1554,
      {var,1554,'F'},
      {'fun',1554,
       {clauses,
        [{clause,1554,
          [{var,1554,'Anno'}],
          [],
          [{match,1555,
            {var,1555,'Line'},
            {call,1555,
             {remote,1555,{atom,1555,erl_anno},{atom,1555,line}},
             [{var,1555,'Anno'}]}},
           {call,1556,
            {remote,1556,{atom,1556,erl_anno},{atom,1556,set_line}},
            [{op,1556,'+',{var,1556,'Line'},{var,1556,'Delta'}},
             {var,1556,'Anno'}]}]}]}}},
     {match,1558,
      {var,1558,'Form'},
      {call,1558,
       {remote,1558,{atom,1558,erl_parse},{atom,1558,map_anno}},
       [{var,1558,'F'},{var,1558,'Form0'}]}},
     {cons,1559,
      {var,1559,'Form'},
      {call,1559,
       {atom,1559,interpret_file_attr},
       [{var,1559,'Forms'},{var,1559,'Delta'},{var,1559,'Fs'}]}}]},
   {clause,1560,
    [{nil,1560},{var,1560,'_Delta'},{var,1560,'_Fs'}],
    [],
    [{nil,1561}]}]}]
