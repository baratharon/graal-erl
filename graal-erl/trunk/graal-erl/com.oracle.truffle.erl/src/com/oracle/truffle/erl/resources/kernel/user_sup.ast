user_sup
[]
[]
[{function,36,start,0,
     [{clause,36,[],[],
          [{call,37,
               {remote,37,{atom,37,supervisor_bridge},{atom,37,start_link}},
               [{atom,37,user_sup},{nil,37}]}]}]},
 {function,41,init,1,
     [{clause,41,
          [{nil,41}],
          [],
          [{'case',42,
               {call,42,{atom,42,get_user},[]},
               [{clause,43,[{atom,43,nouser}],[],[{atom,44,ignore}]},
                {clause,45,
                    [{tuple,45,[{atom,45,master},{var,45,'Master'}]}],
                    [],
                    [{match,46,
                         {var,46,'Pid'},
                         {call,46,{atom,46,start_slave},[{var,46,'Master'}]}},
                     {tuple,47,[{atom,47,ok},{var,47,'Pid'},{var,47,'Pid'}]}]},
                {clause,48,
                    [{tuple,48,[{var,48,'M'},{var,48,'F'},{var,48,'A'}]}],
                    [],
                    [{'case',49,
                         {call,49,
                             {atom,49,start_user},
                             [{var,49,'M'},{var,49,'F'},{var,49,'A'}]},
                         [{clause,50,
                              [{tuple,50,[{atom,50,ok},{var,50,'Pid'}]}],
                              [],
                              [{tuple,51,
                                   [{atom,51,ok},
                                    {var,51,'Pid'},
                                    {var,51,'Pid'}]}]},
                          {clause,52,
                              [{var,52,'Error'}],
                              [],
                              [{var,53,'Error'}]}]}]}]}]}]},
 {function,57,start_slave,1,
     [{clause,57,
          [{var,57,'Master'}],
          [],
          [{'case',58,
               {call,58,
                   {remote,58,{atom,58,rpc},{atom,58,call}},
                   [{var,58,'Master'},
                    {atom,58,erlang},
                    {atom,58,whereis},
                    {cons,58,{atom,58,user},{nil,58}}]},
               [{clause,59,
                    [{var,59,'User'}],
                    [[{call,59,{atom,59,is_pid},[{var,59,'User'}]}]],
                    [{call,60,
                         {atom,60,spawn},
                         [{atom,-1,user_sup},
                          {atom,60,relay},
                          {cons,60,{var,60,'User'},{nil,60}}]}]},
                {clause,61,
                    [{var,61,'_'}],
                    [],
                    [{call,62,
                         {remote,62,
                             {atom,62,error_logger},
                             {atom,62,error_msg}},
                         [{string,62,"Cannot get remote user"},{nil,62}]},
                     {'receive',63,[],{integer,63,1000},[{atom,63,true}]},
                     {call,64,{atom,64,halt},[]}]}]}]}]},
 {function,69,relay,1,
     [{clause,69,
          [{var,69,'Pid'}],
          [],
          [{call,70,
               {atom,70,register},
               [{atom,70,user},{call,70,{atom,70,self},[]}]},
           {call,71,{atom,71,relay1},[{var,71,'Pid'}]}]}]},
 {function,73,relay1,1,
     [{clause,73,
          [{var,73,'Pid'}],
          [],
          [{'receive',74,
               [{clause,75,
                    [{var,75,'X'}],
                    [],
                    [{op,76,'!',{var,76,'Pid'},{var,76,'X'}},
                     {call,77,{atom,77,relay1},[{var,77,'Pid'}]}]}]}]}]},
 {function,88,terminate,2,
     [{clause,88,
          [{var,88,'_Reason'},{var,88,'UserPid'}],
          [],
          [{'receive',89,[],{integer,89,1000},[{atom,89,ok}]},
           {call,90,{atom,90,exit},[{var,90,'UserPid'},{atom,90,kill}]},
           {atom,91,ok}]}]},
 {function,99,start_user,3,
     [{clause,99,
          [{var,99,'Mod'},{var,99,'Func'},{var,99,'A'}],
          [],
          [{call,100,
               {atom,100,apply},
               [{var,100,'Mod'},{var,100,'Func'},{var,100,'A'}]},
           {call,101,{atom,101,wait_for_user_p},[{integer,101,100}]}]}]},
 {function,103,wait_for_user_p,1,
     [{clause,103,
          [{integer,103,0}],
          [],
          [{tuple,104,[{atom,104,error},{atom,104,nouser}]}]},
      {clause,105,
          [{var,105,'N'}],
          [],
          [{'case',106,
               {call,106,{atom,106,whereis},[{atom,106,user}]},
               [{clause,107,
                    [{var,107,'Pid'}],
                    [[{call,107,{atom,107,is_pid},[{var,107,'Pid'}]}]],
                    [{call,108,{atom,108,link},[{var,108,'Pid'}]},
                     {tuple,109,[{atom,109,ok},{var,109,'Pid'}]}]},
                {clause,110,
                    [{var,110,'_'}],
                    [],
                    [{'receive',111,[],{integer,111,100},[{atom,111,ok}]},
                     {call,112,
                         {atom,112,wait_for_user_p},
                         [{op,112,'-',{var,112,'N'},{integer,112,1}}]}]}]}]}]},
 {function,115,get_user,0,
     [{clause,115,[],[],
          [{match,116,
               {var,116,'Flags'},
               {call,116,
                   {remote,116,{atom,116,init},{atom,116,get_arguments}},
                   []}},
           {call,117,
               {atom,117,check_flags},
               [{var,117,'Flags'},
                {tuple,117,
                    [{atom,117,user_drv},{atom,117,start},{nil,117}]}]}]}]},
 {function,121,check_flags,2,
     [{clause,121,
          [{cons,121,{tuple,121,[{atom,121,nouser},{nil,121}]},{var,121,'T'}},
           {var,121,'_'}],
          [],
          [{call,121,
               {atom,121,check_flags},
               [{var,121,'T'},{atom,121,nouser}]}]},
      {clause,122,
          [{cons,122,
               {tuple,122,
                   [{atom,122,user},{cons,122,{var,122,'User'},{nil,122}}]},
               {var,122,'T'}},
           {var,122,'_'}],
          [],
          [{call,123,
               {atom,123,check_flags},
               [{var,123,'T'},
                {tuple,123,
                    [{call,123,{atom,123,list_to_atom},[{var,123,'User'}]},
                     {atom,123,start},
                     {nil,123}]}]}]},
      {clause,124,
          [{cons,124,{tuple,124,[{atom,124,noshell},{nil,124}]},{var,124,'T'}},
           {var,124,'_'}],
          [],
          [{call,124,
               {atom,124,check_flags},
               [{var,124,'T'},
                {tuple,124,[{atom,124,user},{atom,124,start},{nil,124}]}]}]},
      {clause,125,
          [{cons,125,
               {tuple,125,[{atom,125,oldshell},{nil,125}]},
               {var,125,'T'}},
           {var,125,'_'}],
          [],
          [{call,125,
               {atom,125,check_flags},
               [{var,125,'T'},
                {tuple,125,[{atom,125,user},{atom,125,start},{nil,125}]}]}]},
      {clause,126,
          [{cons,126,{tuple,126,[{atom,126,noinput},{nil,126}]},{var,126,'T'}},
           {var,126,'_'}],
          [],
          [{call,126,
               {atom,126,check_flags},
               [{var,126,'T'},
                {tuple,126,
                    [{atom,126,user},{atom,126,start_out},{nil,126}]}]}]},
      {clause,127,
          [{cons,127,
               {tuple,127,
                   [{atom,127,master},{cons,127,{var,127,'Node'},{nil,127}}]},
               {var,127,'T'}},
           {var,127,'_'}],
          [],
          [{call,128,
               {atom,128,check_flags},
               [{var,128,'T'},
                {tuple,128,
                    [{atom,128,master},
                     {call,128,
                         {atom,128,list_to_atom},
                         [{var,128,'Node'}]}]}]}]},
      {clause,129,
          [{cons,129,{var,129,'_H'},{var,129,'T'}},{var,129,'User'}],
          [],
          [{call,129,
               {atom,129,check_flags},
               [{var,129,'T'},{var,129,'User'}]}]},
      {clause,130,[{nil,130},{var,130,'User'}],[],[{var,130,'User'}]}]}]
