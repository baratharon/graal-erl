orddict
[]
[]
[{function,41,new,0,[{clause,41,[],[],[{nil,41}]}]},
 {function,46,is_key,2,
     [{clause,46,
          [{var,46,'Key'},
           {cons,46,{tuple,46,[{var,46,'K'},{var,46,'_'}]},{var,46,'_'}}],
          [[{op,46,'<',{var,46,'Key'},{var,46,'K'}}]],
          [{atom,46,false}]},
      {clause,47,
          [{var,47,'Key'},
           {cons,47,{tuple,47,[{var,47,'K'},{var,47,'_'}]},{var,47,'Dict'}}],
          [[{op,47,'>',{var,47,'Key'},{var,47,'K'}}]],
          [{call,47,{atom,47,is_key},[{var,47,'Key'},{var,47,'Dict'}]}]},
      {clause,48,
          [{var,48,'_Key'},
           {cons,48,{tuple,48,[{var,48,'_K'},{var,48,'_Val'}]},{var,48,'_'}}],
          [],
          [{atom,48,true}]},
      {clause,49,[{var,49,'_'},{nil,49}],[],[{atom,49,false}]}]},
 {function,55,to_list,1,[{clause,55,[{var,55,'Dict'}],[],[{var,55,'Dict'}]}]},
 {function,61,from_list,1,
     [{clause,61,[{nil,61}],[],[{nil,61}]},
      {clause,62,
          [{match,62,
               {cons,62,{tuple,62,[{var,62,'_'},{var,62,'_'}]},{nil,62}},
               {var,62,'Pair'}}],
          [],
          [{var,62,'Pair'}]},
      {clause,63,
          [{var,63,'Pairs'}],
          [],
          [{call,64,
               {remote,64,{atom,64,lists},{atom,64,ukeysort}},
               [{integer,64,1},
                {call,64,
                    {atom,64,reverse_pairs},
                    [{var,64,'Pairs'},{nil,64}]}]}]}]},
 {function,69,size,1,
     [{clause,69,
          [{var,69,'D'}],
          [],
          [{call,69,{atom,69,length},[{var,69,'D'}]}]}]},
 {function,74,is_empty,1,
     [{clause,74,[{nil,74}],[],[{atom,74,true}]},
      {clause,75,[{cons,75,{var,75,'_'},{var,75,'_'}}],[],[{atom,75,false}]}]},
 {function,80,fetch,2,
     [{clause,80,
          [{var,80,'Key'},
           {cons,80,{tuple,80,[{var,80,'K'},{var,80,'_'}]},{var,80,'D'}}],
          [[{op,80,'>',{var,80,'Key'},{var,80,'K'}}]],
          [{call,80,{atom,80,fetch},[{var,80,'Key'},{var,80,'D'}]}]},
      {clause,81,
          [{var,81,'Key'},
           {cons,81,{tuple,81,[{var,81,'K'},{var,81,'Value'}]},{var,81,'_'}}],
          [[{op,81,'==',{var,81,'Key'},{var,81,'K'}}]],
          [{var,81,'Value'}]}]},
 {function,86,find,2,
     [{clause,86,
          [{var,86,'Key'},
           {cons,86,{tuple,86,[{var,86,'K'},{var,86,'_'}]},{var,86,'_'}}],
          [[{op,86,'<',{var,86,'Key'},{var,86,'K'}}]],
          [{atom,86,error}]},
      {clause,87,
          [{var,87,'Key'},
           {cons,87,{tuple,87,[{var,87,'K'},{var,87,'_'}]},{var,87,'D'}}],
          [[{op,87,'>',{var,87,'Key'},{var,87,'K'}}]],
          [{call,87,{atom,87,find},[{var,87,'Key'},{var,87,'D'}]}]},
      {clause,88,
          [{var,88,'_Key'},
           {cons,88,{tuple,88,[{var,88,'_K'},{var,88,'Value'}]},{var,88,'_'}}],
          [],
          [{tuple,88,[{atom,88,ok},{var,88,'Value'}]}]},
      {clause,89,[{var,89,'_'},{nil,89}],[],[{atom,89,error}]}]},
 {function,95,fetch_keys,1,
     [{clause,95,
          [{cons,95,{tuple,95,[{var,95,'Key'},{var,95,'_'}]},{var,95,'Dict'}}],
          [],
          [{cons,96,
               {var,96,'Key'},
               {call,96,{atom,96,fetch_keys},[{var,96,'Dict'}]}}]},
      {clause,97,[{nil,97}],[],[{nil,97}]}]},
 {function,103,erase,2,
     [{clause,103,
          [{var,103,'Key'},
           {cons,103,
               {match,103,
                   {tuple,103,[{var,103,'K'},{var,103,'_'}]},
                   {var,103,'E'}},
               {var,103,'Dict'}}],
          [[{op,103,'<',{var,103,'Key'},{var,103,'K'}}]],
          [{cons,103,{var,103,'E'},{var,103,'Dict'}}]},
      {clause,104,
          [{var,104,'Key'},
           {cons,104,
               {match,104,
                   {tuple,104,[{var,104,'K'},{var,104,'_'}]},
                   {var,104,'E'}},
               {var,104,'Dict'}}],
          [[{op,104,'>',{var,104,'Key'},{var,104,'K'}}]],
          [{cons,105,
               {var,105,'E'},
               {call,105,
                   {atom,105,erase},
                   [{var,105,'Key'},{var,105,'Dict'}]}}]},
      {clause,106,
          [{var,106,'_Key'},
           {cons,106,
               {tuple,106,[{var,106,'_K'},{var,106,'_Val'}]},
               {var,106,'Dict'}}],
          [],
          [{var,106,'Dict'}]},
      {clause,107,[{var,107,'_'},{nil,107}],[],[{nil,107}]}]},
 {function,113,store,3,
     [{clause,113,
          [{var,113,'Key'},
           {var,113,'New'},
           {match,113,
               {cons,113,
                   {tuple,113,[{var,113,'K'},{var,113,'_'}]},
                   {var,113,'_'}},
               {var,113,'Dict'}}],
          [[{op,113,'<',{var,113,'Key'},{var,113,'K'}}]],
          [{cons,114,
               {tuple,114,[{var,114,'Key'},{var,114,'New'}]},
               {var,114,'Dict'}}]},
      {clause,115,
          [{var,115,'Key'},
           {var,115,'New'},
           {cons,115,
               {match,115,
                   {tuple,115,[{var,115,'K'},{var,115,'_'}]},
                   {var,115,'E'}},
               {var,115,'Dict'}}],
          [[{op,115,'>',{var,115,'Key'},{var,115,'K'}}]],
          [{cons,116,
               {var,116,'E'},
               {call,116,
                   {atom,116,store},
                   [{var,116,'Key'},{var,116,'New'},{var,116,'Dict'}]}}]},
      {clause,117,
          [{var,117,'Key'},
           {var,117,'New'},
           {cons,117,
               {tuple,117,[{var,117,'_K'},{var,117,'_Old'}]},
               {var,117,'Dict'}}],
          [],
          [{cons,118,
               {tuple,118,[{var,118,'Key'},{var,118,'New'}]},
               {var,118,'Dict'}}]},
      {clause,119,
          [{var,119,'Key'},{var,119,'New'},{nil,119}],
          [],
          [{cons,119,
               {tuple,119,[{var,119,'Key'},{var,119,'New'}]},
               {nil,119}}]}]},
 {function,125,append,3,
     [{clause,125,
          [{var,125,'Key'},
           {var,125,'New'},
           {match,125,
               {cons,125,
                   {tuple,125,[{var,125,'K'},{var,125,'_'}]},
                   {var,125,'_'}},
               {var,125,'Dict'}}],
          [[{op,125,'<',{var,125,'Key'},{var,125,'K'}}]],
          [{cons,126,
               {tuple,126,
                   [{var,126,'Key'},{cons,126,{var,126,'New'},{nil,126}}]},
               {var,126,'Dict'}}]},
      {clause,127,
          [{var,127,'Key'},
           {var,127,'New'},
           {cons,127,
               {match,127,
                   {tuple,127,[{var,127,'K'},{var,127,'_'}]},
                   {var,127,'E'}},
               {var,127,'Dict'}}],
          [[{op,127,'>',{var,127,'Key'},{var,127,'K'}}]],
          [{cons,128,
               {var,128,'E'},
               {call,128,
                   {atom,128,append},
                   [{var,128,'Key'},{var,128,'New'},{var,128,'Dict'}]}}]},
      {clause,129,
          [{var,129,'Key'},
           {var,129,'New'},
           {cons,129,
               {tuple,129,[{var,129,'_K'},{var,129,'Old'}]},
               {var,129,'Dict'}}],
          [],
          [{cons,130,
               {tuple,130,
                   [{var,130,'Key'},
                    {op,130,'++',
                        {var,130,'Old'},
                        {cons,130,{var,130,'New'},{nil,130}}}]},
               {var,130,'Dict'}}]},
      {clause,131,
          [{var,131,'Key'},{var,131,'New'},{nil,131}],
          [],
          [{cons,131,
               {tuple,131,
                   [{var,131,'Key'},{cons,131,{var,131,'New'},{nil,131}}]},
               {nil,131}}]}]},
 {function,138,append_list,3,
     [{clause,138,
          [{var,138,'Key'},
           {var,138,'NewList'},
           {match,138,
               {cons,138,
                   {tuple,138,[{var,138,'K'},{var,138,'_'}]},
                   {var,138,'_'}},
               {var,138,'Dict'}}],
          [[{op,138,'<',{var,138,'Key'},{var,138,'K'}}]],
          [{cons,139,
               {tuple,139,[{var,139,'Key'},{var,139,'NewList'}]},
               {var,139,'Dict'}}]},
      {clause,140,
          [{var,140,'Key'},
           {var,140,'NewList'},
           {cons,140,
               {match,140,
                   {tuple,140,[{var,140,'K'},{var,140,'_'}]},
                   {var,140,'E'}},
               {var,140,'Dict'}}],
          [[{op,140,'>',{var,140,'Key'},{var,140,'K'}}]],
          [{cons,141,
               {var,141,'E'},
               {call,141,
                   {atom,141,append_list},
                   [{var,141,'Key'},{var,141,'NewList'},{var,141,'Dict'}]}}]},
      {clause,142,
          [{var,142,'Key'},
           {var,142,'NewList'},
           {cons,142,
               {tuple,142,[{var,142,'_K'},{var,142,'Old'}]},
               {var,142,'Dict'}}],
          [],
          [{cons,143,
               {tuple,143,
                   [{var,143,'Key'},
                    {op,143,'++',{var,143,'Old'},{var,143,'NewList'}}]},
               {var,143,'Dict'}}]},
      {clause,144,
          [{var,144,'Key'},{var,144,'NewList'},{nil,144}],
          [],
          [{cons,145,
               {tuple,145,[{var,145,'Key'},{var,145,'NewList'}]},
               {nil,145}}]}]},
 {function,152,update,3,
     [{clause,152,
          [{var,152,'Key'},
           {var,152,'Fun'},
           {cons,152,
               {match,152,
                   {tuple,152,[{var,152,'K'},{var,152,'_'}]},
                   {var,152,'E'}},
               {var,152,'Dict'}}],
          [[{op,152,'>',{var,152,'Key'},{var,152,'K'}}]],
          [{cons,153,
               {var,153,'E'},
               {call,153,
                   {atom,153,update},
                   [{var,153,'Key'},{var,153,'Fun'},{var,153,'Dict'}]}}]},
      {clause,154,
          [{var,154,'Key'},
           {var,154,'Fun'},
           {cons,154,
               {tuple,154,[{var,154,'K'},{var,154,'Val'}]},
               {var,154,'Dict'}}],
          [[{op,154,'==',{var,154,'Key'},{var,154,'K'}}]],
          [{cons,155,
               {tuple,155,
                   [{var,155,'Key'},
                    {call,155,{var,155,'Fun'},[{var,155,'Val'}]}]},
               {var,155,'Dict'}}]}]},
 {function,163,update,4,
     [{clause,163,
          [{var,163,'Key'},
           {var,163,'_'},
           {var,163,'Init'},
           {match,163,
               {cons,163,
                   {tuple,163,[{var,163,'K'},{var,163,'_'}]},
                   {var,163,'_'}},
               {var,163,'Dict'}}],
          [[{op,163,'<',{var,163,'Key'},{var,163,'K'}}]],
          [{cons,164,
               {tuple,164,[{var,164,'Key'},{var,164,'Init'}]},
               {var,164,'Dict'}}]},
      {clause,165,
          [{var,165,'Key'},
           {var,165,'Fun'},
           {var,165,'Init'},
           {cons,165,
               {match,165,
                   {tuple,165,[{var,165,'K'},{var,165,'_'}]},
                   {var,165,'E'}},
               {var,165,'Dict'}}],
          [[{op,165,'>',{var,165,'Key'},{var,165,'K'}}]],
          [{cons,166,
               {var,166,'E'},
               {call,166,
                   {atom,166,update},
                   [{var,166,'Key'},
                    {var,166,'Fun'},
                    {var,166,'Init'},
                    {var,166,'Dict'}]}}]},
      {clause,167,
          [{var,167,'Key'},
           {var,167,'Fun'},
           {var,167,'_Init'},
           {cons,167,
               {tuple,167,[{var,167,'_K'},{var,167,'Val'}]},
               {var,167,'Dict'}}],
          [],
          [{cons,168,
               {tuple,168,
                   [{var,168,'Key'},
                    {call,168,{var,168,'Fun'},[{var,168,'Val'}]}]},
               {var,168,'Dict'}}]},
      {clause,169,
          [{var,169,'Key'},{var,169,'_'},{var,169,'Init'},{nil,169}],
          [],
          [{cons,169,
               {tuple,169,[{var,169,'Key'},{var,169,'Init'}]},
               {nil,169}}]}]},
 {function,176,update_counter,3,
     [{clause,176,
          [{var,176,'Key'},
           {var,176,'Incr'},
           {match,176,
               {cons,176,
                   {tuple,176,[{var,176,'K'},{var,176,'_'}]},
                   {var,176,'_'}},
               {var,176,'Dict'}}],
          [[{op,176,'<',{var,176,'Key'},{var,176,'K'}}]],
          [{cons,177,
               {tuple,177,[{var,177,'Key'},{var,177,'Incr'}]},
               {var,177,'Dict'}}]},
      {clause,178,
          [{var,178,'Key'},
           {var,178,'Incr'},
           {cons,178,
               {match,178,
                   {tuple,178,[{var,178,'K'},{var,178,'_'}]},
                   {var,178,'E'}},
               {var,178,'Dict'}}],
          [[{op,178,'>',{var,178,'Key'},{var,178,'K'}}]],
          [{cons,179,
               {var,179,'E'},
               {call,179,
                   {atom,179,update_counter},
                   [{var,179,'Key'},{var,179,'Incr'},{var,179,'Dict'}]}}]},
      {clause,180,
          [{var,180,'Key'},
           {var,180,'Incr'},
           {cons,180,
               {tuple,180,[{var,180,'_K'},{var,180,'Val'}]},
               {var,180,'Dict'}}],
          [],
          [{cons,181,
               {tuple,181,
                   [{var,181,'Key'},
                    {op,181,'+',{var,181,'Val'},{var,181,'Incr'}}]},
               {var,181,'Dict'}}]},
      {clause,182,
          [{var,182,'Key'},{var,182,'Incr'},{nil,182}],
          [],
          [{cons,182,
               {tuple,182,[{var,182,'Key'},{var,182,'Incr'}]},
               {nil,182}}]}]},
 {function,192,fold,3,
     [{clause,192,
          [{var,192,'F'},
           {var,192,'Acc'},
           {cons,192,
               {tuple,192,[{var,192,'Key'},{var,192,'Val'}]},
               {var,192,'D'}}],
          [],
          [{call,193,
               {atom,193,fold},
               [{var,193,'F'},
                {call,193,
                    {var,193,'F'},
                    [{var,193,'Key'},{var,193,'Val'},{var,193,'Acc'}]},
                {var,193,'D'}]}]},
      {clause,194,
          [{var,194,'F'},{var,194,'Acc'},{nil,194}],
          [[{call,194,
                {atom,194,is_function},
                [{var,194,'F'},{integer,194,3}]}]],
          [{var,194,'Acc'}]}]},
 {function,201,map,2,
     [{clause,201,
          [{var,201,'F'},
           {cons,201,
               {tuple,201,[{var,201,'Key'},{var,201,'Val'}]},
               {var,201,'D'}}],
          [],
          [{cons,202,
               {tuple,202,
                   [{var,202,'Key'},
                    {call,202,
                        {var,202,'F'},
                        [{var,202,'Key'},{var,202,'Val'}]}]},
               {call,202,{atom,202,map},[{var,202,'F'},{var,202,'D'}]}}]},
      {clause,203,
          [{var,203,'F'},{nil,203}],
          [[{call,203,
                {atom,203,is_function},
                [{var,203,'F'},{integer,203,2}]}]],
          [{nil,203}]}]},
 {function,210,filter,2,
     [{clause,210,
          [{var,210,'F'},
           {cons,210,
               {match,210,
                   {tuple,210,[{var,210,'Key'},{var,210,'Val'}]},
                   {var,210,'E'}},
               {var,210,'D'}}],
          [],
          [{'case',211,
               {call,211,{var,211,'F'},[{var,211,'Key'},{var,211,'Val'}]},
               [{clause,212,
                    [{atom,212,true}],
                    [],
                    [{cons,212,
                         {var,212,'E'},
                         {call,212,
                             {atom,212,filter},
                             [{var,212,'F'},{var,212,'D'}]}}]},
                {clause,213,
                    [{atom,213,false}],
                    [],
                    [{call,213,
                         {atom,213,filter},
                         [{var,213,'F'},{var,213,'D'}]}]}]}]},
      {clause,215,
          [{var,215,'F'},{nil,215}],
          [[{call,215,
                {atom,215,is_function},
                [{var,215,'F'},{integer,215,2}]}]],
          [{nil,215}]}]},
 {function,223,merge,3,
     [{clause,223,
          [{var,223,'F'},
           {cons,223,
               {match,223,
                   {tuple,223,[{var,223,'K1'},{var,223,'_'}]},
                   {var,223,'E1'}},
               {var,223,'D1'}},
           {cons,223,
               {match,223,
                   {tuple,223,[{var,223,'K2'},{var,223,'_'}]},
                   {var,223,'E2'}},
               {var,223,'D2'}}],
          [[{op,223,'<',{var,223,'K1'},{var,223,'K2'}}]],
          [{cons,224,
               {var,224,'E1'},
               {call,224,
                   {atom,224,merge},
                   [{var,224,'F'},
                    {var,224,'D1'},
                    {cons,224,{var,224,'E2'},{var,224,'D2'}}]}}]},
      {clause,225,
          [{var,225,'F'},
           {cons,225,
               {match,225,
                   {tuple,225,[{var,225,'K1'},{var,225,'_'}]},
                   {var,225,'E1'}},
               {var,225,'D1'}},
           {cons,225,
               {match,225,
                   {tuple,225,[{var,225,'K2'},{var,225,'_'}]},
                   {var,225,'E2'}},
               {var,225,'D2'}}],
          [[{op,225,'>',{var,225,'K1'},{var,225,'K2'}}]],
          [{cons,226,
               {var,226,'E2'},
               {call,226,
                   {atom,226,merge},
                   [{var,226,'F'},
                    {cons,226,{var,226,'E1'},{var,226,'D1'}},
                    {var,226,'D2'}]}}]},
      {clause,227,
          [{var,227,'F'},
           {cons,227,
               {tuple,227,[{var,227,'K1'},{var,227,'V1'}]},
               {var,227,'D1'}},
           {cons,227,
               {tuple,227,[{var,227,'_K2'},{var,227,'V2'}]},
               {var,227,'D2'}}],
          [],
          [{cons,228,
               {tuple,228,
                   [{var,228,'K1'},
                    {call,228,
                        {var,228,'F'},
                        [{var,228,'K1'},{var,228,'V1'},{var,228,'V2'}]}]},
               {call,228,
                   {atom,228,merge},
                   [{var,228,'F'},{var,228,'D1'},{var,228,'D2'}]}}]},
      {clause,229,
          [{var,229,'F'},{nil,229},{var,229,'D2'}],
          [[{call,229,
                {atom,229,is_function},
                [{var,229,'F'},{integer,229,3}]}]],
          [{var,229,'D2'}]},
      {clause,230,
          [{var,230,'F'},{var,230,'D1'},{nil,230}],
          [[{call,230,
                {atom,230,is_function},
                [{var,230,'F'},{integer,230,3}]}]],
          [{var,230,'D1'}]}]},
 {function,232,reverse_pairs,2,
     [{clause,232,
          [{cons,232,
               {match,232,
                   {tuple,232,[{var,232,'_'},{var,232,'_'}]},
                   {var,232,'H'}},
               {var,232,'T'}},
           {var,232,'Acc'}],
          [],
          [{call,233,
               {atom,233,reverse_pairs},
               [{var,233,'T'},{cons,233,{var,233,'H'},{var,233,'Acc'}}]}]},
      {clause,234,[{nil,234},{var,234,'Acc'}],[],[{var,234,'Acc'}]}]}]
