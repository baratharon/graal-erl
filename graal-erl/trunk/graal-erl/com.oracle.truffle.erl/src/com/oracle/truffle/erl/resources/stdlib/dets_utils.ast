dets_utils
[]
[]
[{function,66,cmp,2,
  [{clause,66,[{var,66,'T'},{var,66,'T'}],[],[{integer,67,0}]},
   {clause,68,
    [{cons,68,{var,68,'E1'},{var,68,'T1'}},
     {cons,68,{var,68,'E2'},{var,68,'T2'}}],
    [],
    [{'case',69,
      {call,69,{atom,69,cmp},[{var,69,'E1'},{var,69,'E2'}]},
      [{clause,70,
        [{integer,70,0}],
        [],
        [{call,70,{atom,70,cmp},[{var,70,'T1'},{var,70,'T2'}]}]},
       {clause,71,[{var,71,'R'}],[],[{var,71,'R'}]}]}]},
   {clause,73,
    [{var,73,'T1'},{var,73,'T2'}],
    [[{op,73,'=:=',
       {call,73,{atom,73,tuple_size},[{var,73,'T1'}]},
       {call,73,{atom,73,tuple_size},[{var,73,'T2'}]}}]],
    [{call,74,
      {atom,74,tcmp},
      [{var,74,'T1'},
       {var,74,'T2'},
       {integer,74,1},
       {call,74,{atom,74,tuple_size},[{var,74,'T1'}]}]}]},
   {clause,75,
    [{var,75,'I'},{var,75,'F'}],
    [[{call,75,{atom,75,is_integer},[{var,75,'I'}]},
      {call,75,{atom,75,is_float},[{var,75,'F'}]}]],
    [{op,76,'-',{integer,76,1}}]},
   {clause,77,
    [{var,77,'F'},{var,77,'I'}],
    [[{call,77,{atom,77,is_float},[{var,77,'F'}]},
      {call,77,{atom,77,is_integer},[{var,77,'I'}]}]],
    [{integer,78,1}]},
   {clause,79,
    [{var,79,'T1'},{var,79,'T2'}],
    [[{op,79,'<',{var,79,'T1'},{var,79,'T2'}}]],
    [{op,80,'-',{integer,80,1}}]},
   {clause,81,[{var,81,'_T1'},{var,81,'_T2'}],[],[{integer,82,1}]}]},
 {function,84,tcmp,4,
  [{clause,84,
    [{var,84,'T1'},{var,84,'T2'},{var,84,'I'},{var,84,'I'}],
    [],
    [{call,85,
      {atom,85,cmp},
      [{call,85,{atom,85,element},[{var,85,'I'},{var,85,'T1'}]},
       {call,85,{atom,85,element},[{var,85,'I'},{var,85,'T2'}]}]}]},
   {clause,86,
    [{var,86,'T1'},{var,86,'T2'},{var,86,'I'},{var,86,'N'}],
    [],
    [{'case',87,
      {call,87,
       {atom,87,cmp},
       [{call,87,{atom,87,element},[{var,87,'I'},{var,87,'T1'}]},
        {call,87,{atom,87,element},[{var,87,'I'},{var,87,'T2'}]}]},
      [{clause,88,
        [{integer,88,0}],
        [],
        [{call,88,
          {atom,88,tcmp},
          [{var,88,'T1'},
           {var,88,'T2'},
           {op,88,'+',{var,88,'I'},{integer,88,1}},
           {var,88,'N'}]}]},
       {clause,89,[{var,89,'R'}],[],[{var,89,'R'}]}]}]}]},
 {function,92,msort,1,
  [{clause,92,
    [{var,92,'L'}],
    [],
    [{match,94,
      {var,94,'F'},
      {'fun',94,
       {clauses,
        [{clause,94,
          [{var,94,'X'},{var,94,'Y'}],
          [],
          [{op,94,'=<',
            {call,94,{atom,94,cmp},[{var,94,'X'},{var,94,'Y'}]},
            {integer,94,0}}]}]}}},
     {call,95,
      {remote,95,{atom,95,lists},{atom,95,sort}},
      [{var,95,'F'},
       {call,95,
        {remote,95,{atom,95,lists},{atom,95,sort}},
        [{var,95,'L'}]}]}]}]},
 {function,97,mkeysort,2,
  [{clause,97,
    [{var,97,'I'},{var,97,'L'}],
    [],
    [{match,98,
      {var,98,'F'},
      {'fun',98,
       {clauses,
        [{clause,98,
          [{var,98,'X'},{var,98,'Y'}],
          [],
          [{op,98,'=<',
            {call,98,
             {atom,98,cmp},
             [{call,98,{atom,98,element},[{var,98,'I'},{var,98,'X'}]},
              {call,98,{atom,98,element},[{var,98,'I'},{var,98,'Y'}]}]},
            {integer,98,0}}]}]}}},
     {call,100,
      {remote,100,{atom,100,lists},{atom,100,sort}},
      [{var,100,'F'},
       {call,100,
        {remote,100,{atom,100,lists},{atom,100,keysort}},
        [{var,100,'I'},{var,100,'L'}]}]}]}]},
 {function,102,mkeysearch,3,
  [{clause,102,
    [{var,102,'Key'},{var,102,'I'},{var,102,'L'}],
    [],
    [{'case',103,
      {call,103,
       {remote,103,{atom,103,lists},{atom,103,keysearch}},
       [{var,103,'Key'},{var,103,'I'},{var,103,'L'}]},
      [{clause,104,
        [{match,104,
          {tuple,104,[{atom,104,value},{var,104,'Value'}]},
          {var,104,'Reply'}}],
        [[{op,104,'=:=',
           {call,104,{atom,104,element},[{var,104,'I'},{var,104,'Value'}]},
           {var,104,'Key'}}]],
        [{var,105,'Reply'}]},
       {clause,106,[{atom,106,false}],[],[{atom,107,false}]},
       {clause,108,
        [{var,108,'_'}],
        [],
        [{call,109,
          {atom,109,mkeysearch2},
          [{var,109,'Key'},{var,109,'I'},{var,109,'L'}]}]}]}]}]},
 {function,112,mkeysearch2,3,
  [{clause,112,
    [{var,112,'_Key'},{var,112,'_I'},{nil,112}],
    [],
    [{atom,113,false}]},
   {clause,114,
    [{var,114,'Key'},{var,114,'I'},{cons,114,{var,114,'E'},{var,114,'_L'}}],
    [[{op,114,'=:=',
       {call,114,{atom,114,element},[{var,114,'I'},{var,114,'E'}]},
       {var,114,'Key'}}]],
    [{tuple,115,[{atom,115,value},{var,115,'E'}]}]},
   {clause,116,
    [{var,116,'Key'},{var,116,'I'},{cons,116,{var,116,'_'},{var,116,'L'}}],
    [],
    [{call,117,
      {atom,117,mkeysearch2},
      [{var,117,'Key'},{var,117,'I'},{var,117,'L'}]}]}]},
 {function,122,family,1,
  [{clause,122,[{nil,122}],[],[{nil,123}]},
   {clause,124,
    [{var,124,'L'}],
    [],
    [{match,125,
      {cons,125,{tuple,125,[{var,125,'K'},{var,125,'V'}]},{var,125,'KVL'}},
      {call,125,{atom,125,mkeysort},[{integer,125,1},{var,125,'L'}]}},
     {call,126,
      {atom,126,per_key},
      [{var,126,'KVL'},
       {var,126,'K'},
       {cons,126,{var,126,'V'},{nil,126}},
       {nil,126}]}]}]},
 {function,128,per_key,4,
  [{clause,128,
    [{nil,128},{var,128,'K'},{var,128,'Vs'},{var,128,'KVs'}],
    [],
    [{call,129,
      {remote,129,{atom,129,lists},{atom,129,reverse}},
      [{var,129,'KVs'},
       {cons,129,
        {tuple,129,
         [{var,129,'K'},{call,129,{atom,129,msort},[{var,129,'Vs'}]}]},
        {nil,129}}]}]},
   {clause,130,
    [{cons,130,{tuple,130,[{var,130,'K'},{var,130,'V'}]},{var,130,'L'}},
     {var,130,'K'},
     {var,130,'Vs'},
     {var,130,'KVs'}],
    [],
    [{call,131,
      {atom,131,per_key},
      [{var,131,'L'},
       {var,131,'K'},
       {cons,131,{var,131,'V'},{var,131,'Vs'}},
       {var,131,'KVs'}]}]},
   {clause,132,
    [{cons,132,{tuple,132,[{var,132,'K1'},{var,132,'V'}]},{var,132,'L'}},
     {var,132,'K'},
     {var,132,'Vs'},
     {var,132,'KVs'}],
    [],
    [{call,133,
      {atom,133,per_key},
      [{var,133,'L'},
       {var,133,'K1'},
       {cons,133,{var,133,'V'},{nil,133}},
       {cons,133,
        {tuple,133,
         [{var,133,'K'},{call,133,{atom,133,msort},[{var,133,'Vs'}]}]},
        {var,133,'KVs'}}]}]}]},
 {function,135,rename,2,
  [{clause,135,
    [{var,135,'From'},{var,135,'To'}],
    [],
    [{'case',136,
      {call,136,
       {remote,136,{atom,136,file},{atom,136,rename}},
       [{var,136,'From'},{var,136,'To'}]},
      [{clause,137,[{atom,137,ok}],[],[{atom,138,ok}]},
       {clause,139,
        [{tuple,139,[{atom,139,error},{var,139,'Reason'}]}],
        [],
        [{tuple,140,
          [{atom,140,error},
           {tuple,140,
            [{atom,140,file_error},
             {tuple,140,[{var,140,'From'},{var,140,'To'}]},
             {var,140,'Reason'}]}]}]}]}]}]},
 {function,144,pread,2,
  [{clause,144,
    [{var,144,'Positions'},{var,144,'Head'}],
    [],
    [{match,145,
      {var,145,'R'},
      {'case',145,
       {call,145,
        {remote,145,{atom,145,file},{atom,145,pread}},
        [{call,145,
          {remote,145,{atom,145,erlang},{atom,145,element}},
          [{integer,145,5},{var,145,'Head'}]},
         {var,145,'Positions'}]},
       [{clause,146,
         [{tuple,146,[{atom,146,ok},{var,146,'Bins'}]}],
         [],
         [{'case',148,
           {call,148,
            {remote,148,{atom,148,lists},{atom,148,member}},
            [{atom,148,eof},{var,148,'Bins'}]},
           [{clause,149,
             [{atom,149,true}],
             [],
             [{tuple,150,
               [{atom,150,error},
                {tuple,150,
                 [{atom,150,premature_eof},
                  {call,150,
                   {remote,150,{atom,150,erlang},{atom,150,element}},
                   [{integer,150,23},{var,150,'Head'}]}]}]}]},
            {clause,151,
             [{atom,151,false}],
             [],
             [{tuple,152,[{atom,152,ok},{var,152,'Bins'}]}]}]}]},
        {clause,154,
         [{tuple,154,[{atom,154,error},{var,154,'Reason'}]}],
         [[{op,154,'=:=',{atom,154,enomem},{var,154,'Reason'}}],
          [{op,154,'=:=',{atom,154,einval},{var,154,'Reason'}}]],
         [{tuple,155,
           [{atom,155,error},
            {tuple,155,
             [{atom,155,bad_object_header},
              {call,155,
               {remote,155,{atom,155,erlang},{atom,155,element}},
               [{integer,155,23},{var,155,'Head'}]}]}]}]},
        {clause,156,
         [{tuple,156,[{atom,156,error},{var,156,'Reason'}]}],
         [],
         [{tuple,157,
           [{atom,157,file_error},
            {call,157,
             {remote,157,{atom,157,erlang},{atom,157,element}},
             [{integer,157,23},{var,157,'Head'}]},
            {var,157,'Reason'}]}]}]}},
     {'case',159,
      {var,159,'R'},
      [{clause,160,
        [{tuple,160,[{atom,160,ok},{var,160,'_Bins'}]}],
        [],
        [{var,161,'R'}]},
       {clause,162,
        [{var,162,'Error'}],
        [],
        [{call,163,
          {atom,163,throw},
          [{call,163,
            {atom,163,corrupt},
            [{var,163,'Head'},{var,163,'Error'}]}]}]}]}]}]},
 {function,167,pread,4,
  [{clause,167,
    [{var,167,'Head'},{var,167,'Pos'},{var,167,'Min'},{var,167,'Extra'}],
    [],
    [{match,168,
      {var,168,'R'},
      {'case',168,
       {call,168,
        {remote,168,{atom,168,file},{atom,168,pread}},
        [{call,168,
          {remote,168,{atom,168,erlang},{atom,168,element}},
          [{integer,168,5},{var,168,'Head'}]},
         {var,168,'Pos'},
         {op,168,'+',{var,168,'Min'},{var,168,'Extra'}}]},
       [{clause,169,
         [{tuple,169,[{atom,169,error},{var,169,'Reason'}]}],
         [[{op,169,'=:=',{atom,169,enomem},{var,169,'Reason'}}],
          [{op,169,'=:=',{atom,169,einval},{var,169,'Reason'}}]],
         [{tuple,170,
           [{atom,170,error},
            {tuple,170,
             [{atom,170,bad_object_header},
              {call,170,
               {remote,170,{atom,170,erlang},{atom,170,element}},
               [{integer,170,23},{var,170,'Head'}]}]}]}]},
        {clause,171,
         [{tuple,171,[{atom,171,error},{var,171,'Reason'}]}],
         [],
         [{tuple,172,
           [{atom,172,file_error},
            {call,172,
             {remote,172,{atom,172,erlang},{atom,172,element}},
             [{integer,172,23},{var,172,'Head'}]},
            {var,172,'Reason'}]}]},
        {clause,173,
         [{tuple,173,[{atom,173,ok},{var,173,'Bin'}]}],
         [[{op,173,'<',
            {call,173,{atom,173,byte_size},[{var,173,'Bin'}]},
            {var,173,'Min'}}]],
         [{tuple,174,
           [{atom,174,error},
            {tuple,174,
             [{atom,174,premature_eof},
              {call,174,
               {remote,174,{atom,174,erlang},{atom,174,element}},
               [{integer,174,23},{var,174,'Head'}]}]}]}]},
        {clause,175,[{var,175,'OK'}],[],[{var,175,'OK'}]}]}},
     {'case',177,
      {var,177,'R'},
      [{clause,178,
        [{tuple,178,[{atom,178,ok},{var,178,'_Bin'}]}],
        [],
        [{var,179,'R'}]},
       {clause,180,
        [{var,180,'Error'}],
        [],
        [{call,181,
          {atom,181,throw},
          [{call,181,
            {atom,181,corrupt},
            [{var,181,'Head'},{var,181,'Error'}]}]}]}]}]}]},
 {function,185,ipread,3,
  [{clause,185,
    [{var,185,'Head'},{var,185,'Pos1'},{var,185,'MaxSize'}],
    [],
    [{'try',186,
      [{call,187,{atom,187,disk_map_pread},[{var,187,'Pos1'}]}],
      [],
      [{clause,188,
        [{tuple,188,[{atom,188,throw},{var,188,'Bad'},{var,188,'_'}]}],
        [],
        [{call,189,
          {atom,189,throw},
          [{call,189,
            {atom,189,corrupt_reason},
            [{var,189,'Head'},
             {tuple,189,[{atom,189,disk_map},{var,189,'Bad'}]}]}]}]}],
      []},
     {'case',191,
      {call,191,
       {remote,191,{atom,191,file},{atom,191,ipread_s32bu_p32bu}},
       [{call,191,
         {remote,191,{atom,191,erlang},{atom,191,element}},
         [{integer,191,5},{var,191,'Head'}]},
        {var,191,'Pos1'},
        {var,191,'MaxSize'}]},
      [{clause,192,
        [{tuple,192,
          [{atom,192,ok},
           {tuple,192,[{integer,192,0},{integer,192,0},{atom,192,eof}]}]}],
        [],
        [{nil,193}]},
       {clause,194,
        [{tuple,194,[{atom,194,ok},{var,194,'Reply'}]}],
        [],
        [{tuple,195,[{atom,195,ok},{var,195,'Reply'}]}]},
       {clause,196,[{var,196,'_Else'}],[],[{atom,197,eof}]}]}]}]},
 {function,201,pwrite,2,
  [{clause,201,
    [{var,201,'Head'},{nil,201}],
    [],
    [{tuple,202,[{var,202,'Head'},{atom,202,ok}]}]},
   {clause,203,
    [{var,203,'Head'},{var,203,'Bins'}],
    [],
    [{'try',204,
      [{call,205,{atom,205,disk_map},[{var,205,'Bins'}]}],
      [],
      [{clause,206,
        [{tuple,206,[{atom,206,throw},{var,206,'Bad'},{var,206,'_'}]}],
        [],
        [{call,207,
          {atom,207,throw},
          [{call,207,
            {atom,207,corrupt_reason},
            [{var,207,'Head'},
             {tuple,207,
              [{atom,207,disk_map},{var,207,'Bad'},{var,207,'Bins'}]}]}]}]}],
      []},
     {'case',209,
      {call,209,
       {remote,209,{atom,209,file},{atom,209,pwrite}},
       [{call,209,
         {remote,209,{atom,209,erlang},{atom,209,element}},
         [{integer,209,5},{var,209,'Head'}]},
        {var,209,'Bins'}]},
      [{clause,210,
        [{atom,210,ok}],
        [],
        [{tuple,211,[{var,211,'Head'},{atom,211,ok}]}]},
       {clause,212,
        [{var,212,'Error'}],
        [],
        [{call,213,
          {atom,213,corrupt_file},
          [{var,213,'Head'},{var,213,'Error'}]}]}]}]}]},
 {function,217,write,2,
  [{clause,217,[{var,217,'_Head'},{nil,217}],[],[{atom,218,ok}]},
   {clause,219,
    [{var,219,'Head'},{var,219,'Bins'}],
    [],
    [{'case',220,
      {call,220,
       {remote,220,{atom,220,file},{atom,220,write}},
       [{call,220,
         {remote,220,{atom,220,erlang},{atom,220,element}},
         [{integer,220,5},{var,220,'Head'}]},
        {var,220,'Bins'}]},
      [{clause,221,[{atom,221,ok}],[],[{atom,222,ok}]},
       {clause,223,
        [{var,223,'Error'}],
        [],
        [{call,224,
          {atom,224,corrupt_file},
          [{var,224,'Head'},{var,224,'Error'}]}]}]}]}]},
 {function,229,write_file,2,
  [{clause,229,
    [{var,229,'Head'},{var,229,'Bin'}],
    [],
    [{match,230,
      {var,230,'R'},
      {'case',230,
       {call,230,
        {remote,230,{atom,230,file},{atom,230,open}},
        [{call,230,
          {remote,230,{atom,230,erlang},{atom,230,element}},
          [{integer,230,23},{var,230,'Head'}]},
         {cons,230,
          {atom,230,binary},
          {cons,230,{atom,230,raw},{cons,230,{atom,230,write},{nil,230}}}}]},
       [{clause,231,
         [{tuple,231,[{atom,231,ok},{var,231,'Fd'}]}],
         [],
         [{match,232,
           {var,232,'R1'},
           {call,232,
            {remote,232,{atom,232,file},{atom,232,write}},
            [{var,232,'Fd'},{var,232,'Bin'}]}},
          {match,233,
           {var,233,'R2'},
           {call,233,
            {remote,233,{atom,233,file},{atom,233,sync}},
            [{var,233,'Fd'}]}},
          {match,234,
           {var,234,'R3'},
           {call,234,
            {remote,234,{atom,234,file},{atom,234,close}},
            [{var,234,'Fd'}]}},
          {'case',235,
           {tuple,235,[{var,235,'R1'},{var,235,'R2'},{var,235,'R3'}]},
           [{clause,236,
             [{tuple,236,[{atom,236,ok},{atom,236,ok},{var,236,'R3'}]}],
             [],
             [{var,236,'R3'}]},
            {clause,237,
             [{tuple,237,[{atom,237,ok},{var,237,'R2'},{var,237,'_'}]}],
             [],
             [{var,237,'R2'}]},
            {clause,238,
             [{tuple,238,[{var,238,'R1'},{var,238,'_'},{var,238,'_'}]}],
             [],
             [{var,238,'R1'}]}]}]},
        {clause,240,[{var,240,'Else'}],[],[{var,241,'Else'}]}]}},
     {'case',243,
      {var,243,'R'},
      [{clause,244,[{atom,244,ok}],[],[{atom,245,ok}]},
       {clause,246,
        [{var,246,'Error'}],
        [],
        [{call,247,
          {atom,247,corrupt_file},
          [{var,247,'Head'},{var,247,'Error'}]}]}]}]}]},
 {function,251,truncate,2,
  [{clause,251,
    [{var,251,'Head'},{var,251,'Pos'}],
    [],
    [{'case',252,
      {'catch',252,
       {call,252,
        {atom,252,truncate},
        [{call,252,
          {remote,252,{atom,252,erlang},{atom,252,element}},
          [{integer,252,5},{var,252,'Head'}]},
         {call,252,
          {remote,252,{atom,252,erlang},{atom,252,element}},
          [{integer,252,23},{var,252,'Head'}]},
         {var,252,'Pos'}]}},
      [{clause,253,[{atom,253,ok}],[],[{atom,254,ok}]},
       {clause,255,
        [{var,255,'Error'}],
        [],
        [{call,256,
          {atom,256,throw},
          [{call,256,
            {atom,256,corrupt},
            [{var,256,'Head'},{var,256,'Error'}]}]}]}]}]}]},
 {function,260,position,2,
  [{clause,260,
    [{var,260,'Head'},{var,260,'Pos'}],
    [],
    [{'case',261,
      {call,261,
       {remote,261,{atom,261,file},{atom,261,position}},
       [{call,261,
         {remote,261,{atom,261,erlang},{atom,261,element}},
         [{integer,261,5},{var,261,'Head'}]},
        {var,261,'Pos'}]},
      [{clause,262,
        [{match,262,
          {tuple,262,[{atom,262,error},{var,262,'_Reason'}]},
          {var,262,'Error'}}],
        [],
        [{call,263,
          {atom,263,corrupt_file},
          [{var,263,'Head'},{var,263,'Error'}]}]},
       {clause,264,[{var,264,'OK'}],[],[{var,264,'OK'}]}]}]}]},
 {function,268,sync,1,
  [{clause,268,
    [{var,268,'Head'}],
    [],
    [{'case',269,
      {call,269,
       {remote,269,{atom,269,file},{atom,269,sync}},
       [{call,269,
         {remote,269,{atom,269,erlang},{atom,269,element}},
         [{integer,269,5},{var,269,'Head'}]}]},
      [{clause,270,[{atom,270,ok}],[],[{atom,271,ok}]},
       {clause,272,
        [{var,272,'Error'}],
        [],
        [{call,273,
          {atom,273,corrupt_file},
          [{var,273,'Head'},{var,273,'Error'}]}]}]}]}]},
 {function,276,open,2,
  [{clause,276,
    [{var,276,'FileSpec'},{var,276,'Args'}],
    [],
    [{'case',277,
      {call,277,
       {remote,277,{atom,277,file},{atom,277,open}},
       [{var,277,'FileSpec'},{var,277,'Args'}]},
      [{clause,278,
        [{tuple,278,[{atom,278,ok},{var,278,'Fd'}]}],
        [],
        [{tuple,279,[{atom,279,ok},{var,279,'Fd'}]}]},
       {clause,280,
        [{var,280,'Error'}],
        [],
        [{call,281,
          {atom,281,file_error},
          [{var,281,'FileSpec'},{var,281,'Error'}]}]}]}]}]},
 {function,284,truncate,3,
  [{clause,284,
    [{var,284,'Fd'},{var,284,'FileName'},{var,284,'Pos'}],
    [],
    [{match,285,
      {var,285,'_'},
      {lc,285,
       {call,285,
        {atom,285,position},
        [{var,285,'Fd'},{var,285,'FileName'},{var,285,'Pos'}]},
       [{op,285,'=/=',{var,285,'Pos'},{atom,285,cur}}]}},
     {'case',286,
      {call,286,
       {remote,286,{atom,286,file},{atom,286,truncate}},
       [{var,286,'Fd'}]},
      [{clause,287,[{atom,287,ok}],[],[{atom,288,ok}]},
       {clause,289,
        [{var,289,'Error'}],
        [],
        [{call,290,
          {atom,290,file_error},
          [{var,290,'FileName'},
           {tuple,290,[{atom,290,error},{var,290,'Error'}]}]}]}]}]}]},
 {function,293,fwrite,3,
  [{clause,293,
    [{var,293,'Fd'},{var,293,'FileName'},{var,293,'B'}],
    [],
    [{'case',294,
      {call,294,
       {remote,294,{atom,294,file},{atom,294,write}},
       [{var,294,'Fd'},{var,294,'B'}]},
      [{clause,295,[{atom,295,ok}],[],[{atom,295,ok}]},
       {clause,296,
        [{var,296,'Error'}],
        [],
        [{call,296,
          {atom,296,file_error_close},
          [{var,296,'Fd'},{var,296,'FileName'},{var,296,'Error'}]}]}]}]}]},
 {function,299,position,3,
  [{clause,299,
    [{var,299,'Fd'},{var,299,'FileName'},{var,299,'Pos'}],
    [],
    [{'case',300,
      {call,300,
       {remote,300,{atom,300,file},{atom,300,position}},
       [{var,300,'Fd'},{var,300,'Pos'}]},
      [{clause,301,
        [{tuple,301,[{atom,301,error},{var,301,'Error'}]}],
        [],
        [{call,301,
          {atom,301,file_error},
          [{var,301,'FileName'},
           {tuple,301,[{atom,301,error},{var,301,'Error'}]}]}]},
       {clause,302,[{var,302,'OK'}],[],[{var,302,'OK'}]}]}]}]},
 {function,305,position_close,3,
  [{clause,305,
    [{var,305,'Fd'},{var,305,'FileName'},{var,305,'Pos'}],
    [],
    [{'case',306,
      {call,306,
       {remote,306,{atom,306,file},{atom,306,position}},
       [{var,306,'Fd'},{var,306,'Pos'}]},
      [{clause,307,
        [{tuple,307,[{atom,307,error},{var,307,'Error'}]}],
        [],
        [{call,307,
          {atom,307,file_error_close},
          [{var,307,'Fd'},
           {var,307,'FileName'},
           {tuple,307,[{atom,307,error},{var,307,'Error'}]}]}]},
       {clause,308,[{var,308,'OK'}],[],[{var,308,'OK'}]}]}]}]},
 {function,311,pwrite,4,
  [{clause,311,
    [{var,311,'Fd'},{var,311,'FileName'},{var,311,'Position'},{var,311,'B'}],
    [],
    [{'case',312,
      {call,312,
       {remote,312,{atom,312,file},{atom,312,pwrite}},
       [{var,312,'Fd'},{var,312,'Position'},{var,312,'B'}]},
      [{clause,313,[{atom,313,ok}],[],[{atom,313,ok}]},
       {clause,314,
        [{var,314,'Error'}],
        [],
        [{call,314,
          {atom,314,file_error},
          [{var,314,'FileName'},
           {tuple,314,[{atom,314,error},{var,314,'Error'}]}]}]}]}]}]},
 {function,317,pwrite,3,
  [{clause,317,
    [{var,317,'Fd'},{var,317,'FileName'},{var,317,'Bins'}],
    [],
    [{'case',318,
      {call,318,
       {remote,318,{atom,318,file},{atom,318,pwrite}},
       [{var,318,'Fd'},{var,318,'Bins'}]},
      [{clause,319,[{atom,319,ok}],[],[{atom,320,ok}]},
       {clause,321,
        [{tuple,321,
          [{atom,321,error},
           {tuple,321,[{var,321,'_NoWrites'},{var,321,'Reason'}]}]}],
        [],
        [{call,322,
          {atom,322,file_error},
          [{var,322,'FileName'},
           {tuple,322,[{atom,322,error},{var,322,'Reason'}]}]}]}]}]}]},
 {function,325,pread_close,4,
  [{clause,325,
    [{var,325,'Fd'},{var,325,'FileName'},{var,325,'Pos'},{var,325,'Size'}],
    [],
    [{'case',326,
      {call,326,
       {remote,326,{atom,326,file},{atom,326,pread}},
       [{var,326,'Fd'},{var,326,'Pos'},{var,326,'Size'}]},
      [{clause,327,
        [{tuple,327,[{atom,327,error},{var,327,'Error'}]}],
        [],
        [{call,328,
          {atom,328,file_error_close},
          [{var,328,'Fd'},
           {var,328,'FileName'},
           {tuple,328,[{atom,328,error},{var,328,'Error'}]}]}]},
       {clause,329,
        [{tuple,329,[{atom,329,ok},{var,329,'Bin'}]}],
        [[{op,329,'<',
           {call,329,{atom,329,byte_size},[{var,329,'Bin'}]},
           {var,329,'Size'}}]],
        [{match,330,
          {var,330,'_'},
          {call,330,
           {remote,330,{atom,330,file},{atom,330,close}},
           [{var,330,'Fd'}]}},
         {call,331,
          {atom,331,throw},
          [{tuple,331,
            [{atom,331,error},
             {tuple,331,[{atom,331,tooshort},{var,331,'FileName'}]}]}]}]},
       {clause,332,
        [{atom,332,eof}],
        [],
        [{match,333,
          {var,333,'_'},
          {call,333,
           {remote,333,{atom,333,file},{atom,333,close}},
           [{var,333,'Fd'}]}},
         {call,334,
          {atom,334,throw},
          [{tuple,334,
            [{atom,334,error},
             {tuple,334,[{atom,334,tooshort},{var,334,'FileName'}]}]}]}]},
       {clause,335,[{var,335,'OK'}],[],[{var,335,'OK'}]}]}]}]},
 {function,338,file_error,2,
  [{clause,338,
    [{var,338,'FileName'},{tuple,338,[{atom,338,error},{var,338,'Reason'}]}],
    [],
    [{call,339,
      {atom,339,throw},
      [{tuple,339,
        [{atom,339,error},
         {tuple,339,
          [{atom,339,file_error},
           {var,339,'FileName'},
           {var,339,'Reason'}]}]}]}]}]},
 {function,341,file_error_close,3,
  [{clause,341,
    [{var,341,'Fd'},
     {var,341,'FileName'},
     {tuple,341,[{atom,341,error},{var,341,'Reason'}]}],
    [],
    [{match,342,
      {var,342,'_'},
      {call,342,
       {remote,342,{atom,342,file},{atom,342,close}},
       [{var,342,'Fd'}]}},
     {call,343,
      {atom,343,throw},
      [{tuple,343,
        [{atom,343,error},
         {tuple,343,
          [{atom,343,file_error},
           {var,343,'FileName'},
           {var,343,'Reason'}]}]}]}]}]},
 {function,345,debug_mode,0,
  [{clause,345,[],[],
    [{op,346,'=:=',
      {call,346,
       {remote,346,{atom,346,os},{atom,346,getenv}},
       [{string,346,"DETS_DEBUG"}]},
      {string,346,"true"}}]}]},
 {function,348,bad_object,2,
  [{clause,348,
    [{var,348,'Where'},{var,348,'Extra'}],
    [],
    [{'case',349,
      {call,349,{atom,349,debug_mode},[]},
      [{clause,350,
        [{atom,350,true}],
        [],
        [{tuple,351,
          [{atom,351,bad_object},{var,351,'Where'},{var,351,'Extra'}]}]},
       {clause,352,
        [{atom,352,false}],
        [],
        [{tuple,354,[{atom,354,bad_object},{var,354,'Where'}]}]}]}]}]},
 {function,357,read_n,2,
  [{clause,357,
    [{var,357,'Fd'},{var,357,'Max'}],
    [],
    [{'case',358,
      {call,358,
       {remote,358,{atom,358,file},{atom,358,read}},
       [{var,358,'Fd'},{var,358,'Max'}]},
      [{clause,359,
        [{tuple,359,[{atom,359,ok},{var,359,'Bin'}]}],
        [],
        [{var,360,'Bin'}]},
       {clause,361,[{var,361,'_Else'}],[],[{atom,362,eof}]}]}]}]},
 {function,365,pread_n,3,
  [{clause,365,
    [{var,365,'Fd'},{var,365,'Position'},{var,365,'Max'}],
    [],
    [{'case',366,
      {call,366,
       {remote,366,{atom,366,file},{atom,366,pread}},
       [{var,366,'Fd'},{var,366,'Position'},{var,366,'Max'}]},
      [{clause,367,
        [{tuple,367,[{atom,367,ok},{var,367,'Bin'}]}],
        [],
        [{var,368,'Bin'}]},
       {clause,369,[{var,369,'_'}],[],[{atom,370,eof}]}]}]}]},
 {function,373,read_4,2,
  [{clause,373,
    [{var,373,'Fd'},{var,373,'Position'}],
    [],
    [{match,374,
      {tuple,374,[{atom,374,ok},{var,374,'_'}]},
      {call,374,
       {remote,374,{atom,374,file},{atom,374,position}},
       [{var,374,'Fd'},{var,374,'Position'}]}},
     {match,375,
      {bin,375,[{bin_element,375,{var,375,'Four'},{integer,375,32},default}]},
      {call,375,
       {remote,375,{atom,375,dets_utils},{atom,375,read_n}},
       [{var,375,'Fd'},{integer,375,4}]}},
     {var,376,'Four'}]}]},
 {function,378,corrupt_file,2,
  [{clause,378,
    [{var,378,'Head'},{tuple,378,[{atom,378,error},{var,378,'Reason'}]}],
    [],
    [{match,379,
      {var,379,'Error'},
      {tuple,379,
       [{atom,379,error},
        {tuple,379,
         [{atom,379,file_error},
          {call,379,
           {remote,379,{atom,379,erlang},{atom,379,element}},
           [{integer,379,23},{var,379,'Head'}]},
          {var,379,'Reason'}]}]}},
     {call,380,
      {atom,380,throw},
      [{call,380,
        {atom,380,corrupt},
        [{var,380,'Head'},{var,380,'Error'}]}]}]}]},
 {function,383,corrupt_reason,2,
  [{clause,383,
    [{var,383,'Head'},{var,383,'Reason0'}],
    [],
    [{match,384,
      {var,384,'Reason'},
      {'case',384,
       {call,384,{atom,384,get_disk_map},[]},
       [{clause,385,[{atom,385,no_disk_map}],[],[{var,386,'Reason0'}]},
        {clause,387,
         [{var,387,'DM'}],
         [],
         [{match,388,
           {var,388,'ST'},
           {call,388,
            {remote,388,{atom,388,erlang},{atom,388,get_stacktrace}},
            []}},
          {match,389,{var,389,'PD'},{call,389,{atom,389,get},[]}},
          {tuple,390,
           [{var,390,'Reason0'},
            {var,390,'ST'},
            {var,390,'PD'},
            {var,390,'DM'}]}]}]}},
     {match,392,
      {var,392,'Error'},
      {tuple,392,
       [{atom,392,error},
        {tuple,392,
         [{var,392,'Reason'},
          {call,392,
           {remote,392,{atom,392,erlang},{atom,392,element}},
           [{integer,392,23},{var,392,'Head'}]}]}]}},
     {call,393,{atom,393,corrupt},[{var,393,'Head'},{var,393,'Error'}]}]}]},
 {function,395,corrupt,2,
  [{clause,395,
    [{var,395,'Head'},{var,395,'Error'}],
    [],
    [{'case',396,
      {call,396,{atom,396,get},[{atom,396,verbose}]},
      [{clause,397,
        [{atom,397,yes}],
        [],
        [{call,398,
          {remote,398,{atom,398,error_logger},{atom,398,format}},
          [{string,398,"** dets: Corrupt table ~p: ~tp\n"},
           {cons,399,
            {call,399,
             {remote,399,{atom,399,erlang},{atom,399,element}},
             [{integer,399,26},{var,399,'Head'}]},
            {cons,399,{var,399,'Error'},{nil,399}}}]}]},
       {clause,400,[{var,400,'_'}],[],[{atom,400,ok}]}]},
     {'case',402,
      {call,402,
       {remote,402,{atom,402,erlang},{atom,402,element}},
       [{integer,402,16},{var,402,'Head'}]},
      [{clause,403,
        [{tuple,403,[{atom,403,error},{var,403,'_'}]}],
        [],
        [{tuple,404,[{var,404,'Head'},{var,404,'Error'}]}]},
       {clause,405,
        [{var,405,'_'}],
        [],
        [{tuple,406,
          [{call,406,
            {remote,406,{atom,406,erlang},{atom,406,setelement}},
            [{integer,406,16},{var,406,'Head'},{var,406,'Error'}]},
           {var,406,'Error'}]}]}]}]}]},
 {function,409,vformat,2,
  [{clause,409,
    [{var,409,'F'},{var,409,'As'}],
    [],
    [{'case',410,
      {call,410,{atom,410,get},[{atom,410,verbose}]},
      [{clause,411,
        [{atom,411,yes}],
        [],
        [{call,411,
          {remote,411,{atom,411,error_logger},{atom,411,format}},
          [{var,411,'F'},{var,411,'As'}]}]},
       {clause,412,[{var,412,'_'}],[],[{atom,412,ok}]}]}]}]},
 {function,415,code_to_type,1,
  [{clause,415,[{integer,27,1}],[],[{atom,415,set}]},
   {clause,416,[{integer,28,2}],[],[{atom,416,bag}]},
   {clause,417,[{integer,29,3}],[],[{atom,417,duplicate_bag}]},
   {clause,418,[{var,418,'_Type'}],[],[{atom,418,badtype}]}]},
 {function,420,type_to_code,1,
  [{clause,420,[{atom,420,set}],[],[{integer,27,1}]},
   {clause,421,[{atom,421,bag}],[],[{integer,28,2}]},
   {clause,422,[{atom,422,duplicate_bag}],[],[{integer,29,3}]}]},
 {function,428,cache_size,1,
  [{clause,428,
    [{var,428,'C'}],
    [],
    [{tuple,429,
      [{call,429,
        {remote,429,{atom,429,erlang},{atom,429,element}},
        [{integer,429,7},{var,429,'C'}]},
       {call,429,
        {remote,429,{atom,429,erlang},{atom,429,element}},
        [{integer,429,6},{var,429,'C'}]}]}]}]},
 {function,432,cache_lookup,4,
  [{clause,432,
    [{var,432,'Type'},
     {cons,432,{var,432,'Key'},{var,432,'Keys'}},
     {var,432,'CL'},
     {var,432,'LU'}],
    [],
    [{'case',434,
      {call,434,
       {atom,434,mkeysearch},
       [{var,434,'Key'},{integer,434,1},{var,434,'CL'}]},
      [{clause,435,
        [{tuple,435,
          [{atom,435,value},
           {tuple,435,
            [{var,435,'Key'},
             {tuple,435,
              [{var,435,'_Seq'},
               {tuple,435,[{atom,435,insert},{var,435,'Object'}]}]}]}]}],
        [[{op,435,'=:=',{var,435,'Type'},{atom,435,set}}]],
        [{call,436,
          {atom,436,cache_lookup},
          [{var,436,'Type'},
           {var,436,'Keys'},
           {var,436,'CL'},
           {cons,436,{var,436,'Object'},{var,436,'LU'}}]}]},
       {clause,437,
        [{tuple,437,
          [{atom,437,value},
           {tuple,437,
            [{var,437,'Key'},
             {tuple,437,[{var,437,'_Seq'},{atom,437,delete_key}]}]}]}],
        [],
        [{call,438,
          {atom,438,cache_lookup},
          [{var,438,'Type'},{var,438,'Keys'},{var,438,'CL'},{var,438,'LU'}]}]},
       {clause,439,[{var,439,'_'}],[],[{atom,440,false}]}]}]},
   {clause,442,
    [{var,442,'_Type'},{nil,442},{var,442,'_CL'},{var,442,'LU'}],
    [],
    [{var,443,'LU'}]}]},
 {function,445,reset_cache,1,
  [{clause,445,
    [{var,445,'C'}],
    [],
    [{match,446,
      {var,446,'WrTime'},
      {call,446,
       {remote,446,{atom,446,erlang},{atom,446,element}},
       [{integer,446,5},{var,446,'C'}]}},
     {match,447,
      {var,447,'NewWrTime'},
      {'if',447,
       [{clause,448,[],
         [[{op,448,'=:=',{var,448,'WrTime'},{atom,448,undefined}}]],
         [{var,449,'WrTime'}]},
        {clause,450,[],
         [[{atom,450,true}]],
         [{call,451,
           {remote,451,{atom,451,erlang},{atom,451,monotonic_time}},
           [{integer,451,1000000}]}]}]}},
     {match,453,
      {var,453,'PK'},
      {call,453,
       {atom,453,family},
       [{call,453,
         {remote,453,{atom,453,erlang},{atom,453,element}},
         [{integer,453,2},{var,453,'C'}]}]}},
     {match,454,
      {var,454,'NewC'},
      {call,454,
       {remote,454,{atom,454,erlang},{atom,454,setelement}},
       [{integer,454,5},
        {call,454,
         {remote,454,{atom,454,erlang},{atom,454,setelement}},
         [{integer,454,4},
          {call,454,
           {remote,454,{atom,454,erlang},{atom,454,setelement}},
           [{integer,454,3},
            {call,454,
             {remote,454,{atom,454,erlang},{atom,454,setelement}},
             [{integer,454,2},{var,454,'C'},{nil,454}]},
            {integer,454,0}]},
          {integer,454,0}]},
        {var,454,'NewWrTime'}]}},
     {tuple,455,
      [{var,455,'NewC'},
       {call,455,
        {remote,455,{atom,455,erlang},{atom,455,element}},
        [{integer,455,4},{var,455,'C'}]},
       {var,455,'PK'}]}]}]},
 {function,457,is_empty_cache,1,
  [{clause,457,
    [{var,457,'Cache'}],
    [],
    [{op,458,'=:=',
      {call,458,
       {remote,458,{atom,458,erlang},{atom,458,element}},
       [{integer,458,2},{var,458,'Cache'}]},
      {nil,458}}]}]},
 {function,460,new_cache,1,
  [{clause,460,
    [{tuple,460,[{var,460,'Delay'},{var,460,'Size'}]}],
    [],
    [{tuple,461,
      [{atom,461,cache},
       {nil,461},
       {integer,461,0},
       {integer,461,0},
       {atom,462,undefined},
       {var,462,'Size'},
       {var,462,'Delay'}]}]}]},
 {function,481,init_slots_from_old_file,2,
  [{clause,481,
    [{cons,481,{tuple,481,[{var,481,'Slot'},{var,481,'Addr'}]},{var,481,'T'}},
     {var,481,'Ftab'}],
    [],
    [{call,482,
      {atom,482,init_slot},
      [{op,482,'+',{var,482,'Slot'},{integer,482,1}},
       {cons,482,
        {tuple,482,[{var,482,'Slot'},{var,482,'Addr'}]},
        {var,482,'T'}},
       {var,482,'Ftab'}]}]},
   {clause,483,[{nil,483},{var,483,'Ftab'}],[],[{var,484,'Ftab'}]}]},
 {function,486,init_slot,3,
  [{clause,486,
    [{var,486,'_Slot'},{nil,486},{var,486,'Ftab'}],
    [],
    [{var,487,'Ftab'}]},
   {clause,488,
    [{var,488,'_Slot'},
     {cons,488,{tuple,488,[{var,488,'_Addr'},{integer,488,0}]},{var,488,'T'}},
     {var,488,'Ftab'}],
    [],
    [{call,489,
      {atom,489,init_slots_from_old_file},
      [{var,489,'T'},{var,489,'Ftab'}]}]},
   {clause,490,
    [{var,490,'Slot'},
     {cons,490,
      {tuple,490,[{var,490,'_Slot1'},{var,490,'Addr'}]},
      {var,490,'T'}},
     {var,490,'Ftab'}],
    [],
    [{match,491,
      {var,491,'Stree'},
      {call,491,{atom,491,element},[{var,491,'Slot'},{var,491,'Ftab'}]}},
     {call,493,
      {atom,493,init_slot},
      [{var,493,'Slot'},
       {var,493,'T'},
       {call,493,
        {atom,493,setelement},
        [{var,493,'Slot'},
         {var,493,'Ftab'},
         {call,493,
          {atom,493,bplus_insert},
          [{var,493,'Stree'},{var,493,'Addr'}]}]}]}]}]},
 {function,518,init_alloc,1,
  [{clause,518,
    [{var,518,'Base'}],
    [],
    [{match,519,{var,519,'Ftab'},{call,519,{atom,519,empty_free_lists},[]}},
     {match,520,{var,520,'Empty'},{call,520,{atom,520,bplus_empty_tree},[]}},
     {call,521,
      {atom,521,setelement},
      [{integer,469,32},
       {var,521,'Ftab'},
       {call,521,
        {atom,521,bplus_insert},
        [{var,521,'Empty'},{var,521,'Base'}]}]}]}]},
 {function,523,empty_free_lists,0,
  [{clause,523,[],[],
    [{match,524,{var,524,'Empty'},{call,524,{atom,524,bplus_empty_tree},[]}},
     {call,526,
      {remote,526,{atom,526,erlang},{atom,526,make_tuple}},
      [{integer,469,32},{var,526,'Empty'}]}]}]},
 {function,529,alloc_many,4,
  [{clause,529,
    [{var,529,'Head'},{var,529,'_Sz'},{integer,529,0},{var,529,'_A0'}],
    [],
    [{var,530,'Head'}]},
   {clause,531,
    [{var,531,'Head'},{var,531,'Sz'},{var,531,'N'},{var,531,'A0'}],
    [],
    [{match,532,
      {var,532,'Ftab'},
      {call,532,
       {remote,532,{atom,532,erlang},{atom,532,element}},
       [{integer,532,12},{var,532,'Head'}]}},
     {call,533,
      {remote,533,{atom,533,erlang},{atom,533,setelement}},
      [{integer,533,12},
       {var,533,'Head'},
       {call,533,
        {atom,533,alloc_many1},
        [{var,533,'Ftab'},
         {integer,533,1},
         {op,533,'*',{var,533,'Sz'},{var,533,'N'}},
         {var,533,'A0'},
         {var,533,'Head'}]}]}]}]},
 {function,536,alloc_many1,5,
  [{clause,536,
    [{var,536,'Ftab'},
     {var,536,'Pos'},
     {var,536,'Size'},
     {var,536,'A0'},
     {var,536,'H'}],
    [],
    [{match,537,
      {tuple,537,[{var,537,'FPos'},{var,537,'Addr'}]},
      {call,537,
       {atom,537,find_first_free},
       [{var,537,'Ftab'},{var,537,'Pos'},{var,537,'Pos'},{var,537,'H'}]}},
     {match,538,{atom,538,true},{op,538,'>=',{var,538,'Addr'},{var,538,'A0'}}},
     {'if',539,
      [{clause,540,[],
        [[{op,540,'>=',
           {op,42,'bsl',
            {integer,42,1},
            {op,540,'-',{var,540,'FPos'},{integer,540,1}}},
           {var,540,'Size'}}]],
        [{call,541,
          {atom,541,alloc_many2},
          [{var,541,'Ftab'},
           {call,541,{atom,541,sz2pos},[{var,541,'Size'}]},
           {var,541,'Size'},
           {var,541,'A0'},
           {var,541,'H'}]}]},
       {clause,542,[],
        [[{atom,542,true}]],
        [{match,543,
          {var,543,'NewFtab'},
          {call,543,
           {atom,543,reserve_buddy},
           [{var,543,'Ftab'},
            {var,543,'FPos'},
            {var,543,'FPos'},
            {var,543,'Addr'}]}},
         {match,544,
          {var,544,'NSize'},
          {op,544,'-',
           {var,544,'Size'},
           {op,42,'bsl',
            {integer,42,1},
            {op,544,'-',{var,544,'FPos'},{integer,544,1}}}}},
         {call,545,
          {atom,545,alloc_many1},
          [{var,545,'NewFtab'},
           {var,545,'FPos'},
           {var,545,'NSize'},
           {var,545,'Addr'},
           {var,545,'H'}]}]}]}]}]},
 {function,548,alloc_many2,5,
  [{clause,548,
    [{var,548,'Ftab'},
     {var,548,'_Pos'},
     {integer,548,0},
     {var,548,'_A0'},
     {var,548,'_H'}],
    [],
    [{var,549,'Ftab'}]},
   {clause,550,
    [{var,550,'Ftab'},
     {var,550,'Pos'},
     {var,550,'Size'},
     {var,550,'A0'},
     {var,550,'H'}],
    [[{op,550,'>',
       {op,550,'band',
        {var,550,'Size'},
        {op,42,'bsl',
         {integer,42,1},
         {op,550,'-',{var,550,'Pos'},{integer,550,1}}}},
       {integer,550,0}}]],
    [{match,551,
      {tuple,551,[{var,551,'FPos'},{var,551,'Addr'}]},
      {call,551,
       {atom,551,find_first_free},
       [{var,551,'Ftab'},{var,551,'Pos'},{var,551,'Pos'},{var,551,'H'}]}},
     {match,552,{atom,552,true},{op,552,'>=',{var,552,'Addr'},{var,552,'A0'}}},
     {match,553,
      {var,553,'NewFtab'},
      {call,553,
       {atom,553,reserve_buddy},
       [{var,553,'Ftab'},{var,553,'FPos'},{var,553,'Pos'},{var,553,'Addr'}]}},
     {match,554,
      {var,554,'NSize'},
      {op,554,'-',
       {var,554,'Size'},
       {op,42,'bsl',
        {integer,42,1},
        {op,554,'-',{var,554,'Pos'},{integer,554,1}}}}},
     {call,555,
      {atom,555,alloc_many2},
      [{var,555,'NewFtab'},
       {op,555,'-',{var,555,'Pos'},{integer,555,1}},
       {var,555,'NSize'},
       {var,555,'Addr'},
       {var,555,'H'}]}]},
   {clause,556,
    [{var,556,'Ftab'},
     {var,556,'Pos'},
     {var,556,'Size'},
     {var,556,'A0'},
     {var,556,'H'}],
    [],
    [{call,557,
      {atom,557,alloc_many2},
      [{var,557,'Ftab'},
       {op,557,'-',{var,557,'Pos'},{integer,557,1}},
       {var,557,'Size'},
       {var,557,'A0'},
       {var,557,'H'}]}]}]},
 {function,560,alloc,2,
  [{clause,560,
    [{var,560,'Head'},{var,560,'Sz'}],
    [[{op,560,'=/=',
       {call,560,
        {remote,560,{atom,560,erlang},{atom,560,element}},
        [{integer,560,17},{var,560,'Head'}]},
       {atom,560,false}}]],
    [{atom,473,true},
     {match,562,{var,562,'Pos'},{call,562,{atom,562,sz2pos},[{var,562,'Sz'}]}},
     {match,563,
      {tuple,563,[{var,563,'Frozen'},{var,563,'Ftab'}]},
      {call,563,
       {remote,563,{atom,563,erlang},{atom,563,element}},
       [{integer,563,12},{var,563,'Head'}]}},
     {match,564,
      {tuple,564,[{var,564,'FPos'},{var,564,'Addr'}]},
      {call,564,
       {atom,564,find_first_free},
       [{var,564,'Frozen'},{var,564,'Pos'},{var,564,'Pos'},{var,564,'Head'}]}},
     {match,565,
      {var,565,'NewFrozen'},
      {call,565,
       {atom,565,reserve_buddy},
       [{var,565,'Frozen'},
        {var,565,'FPos'},
        {var,565,'Pos'},
        {var,565,'Addr'}]}},
     {match,566,
      {var,566,'Ftab1'},
      {call,566,
       {atom,566,undo_free},
       [{var,566,'Ftab'},
        {var,566,'FPos'},
        {var,566,'Addr'},
        {call,566,
         {remote,566,{atom,566,erlang},{atom,566,element}},
         [{integer,566,32},{var,566,'Head'}]}]}},
     {match,567,
      {var,567,'NewFtab'},
      {call,567,
       {atom,567,move_down},
       [{var,567,'Ftab1'},{var,567,'FPos'},{var,567,'Pos'},{var,567,'Addr'}]}},
     {match,568,
      {var,568,'NewFreelists'},
      {tuple,568,[{var,568,'NewFrozen'},{var,568,'NewFtab'}]}},
     {tuple,569,
      [{call,569,
        {remote,569,{atom,569,erlang},{atom,569,setelement}},
        [{integer,569,12},{var,569,'Head'},{var,569,'NewFreelists'}]},
       {var,569,'Addr'},
       {var,569,'Pos'}]}]},
   {clause,570,
    [{var,570,'Head'},{var,570,'Sz'}],
    [[{op,570,'=:=',
       {call,570,
        {remote,570,{atom,570,erlang},{atom,570,element}},
        [{integer,570,17},{var,570,'Head'}]},
       {atom,570,false}}]],
    [{atom,473,true},
     {match,572,{var,572,'Pos'},{call,572,{atom,572,sz2pos},[{var,572,'Sz'}]}},
     {match,573,
      {var,573,'Ftab'},
      {call,573,
       {remote,573,{atom,573,erlang},{atom,573,element}},
       [{integer,573,12},{var,573,'Head'}]}},
     {match,574,
      {tuple,574,[{var,574,'FPos'},{var,574,'Addr'}]},
      {call,574,
       {atom,574,find_first_free},
       [{var,574,'Ftab'},{var,574,'Pos'},{var,574,'Pos'},{var,574,'Head'}]}},
     {match,575,
      {var,575,'NewFtab'},
      {call,575,
       {atom,575,reserve_buddy},
       [{var,575,'Ftab'},{var,575,'FPos'},{var,575,'Pos'},{var,575,'Addr'}]}},
     {tuple,576,
      [{call,576,
        {remote,576,{atom,576,erlang},{atom,576,setelement}},
        [{integer,576,12},{var,576,'Head'},{var,576,'NewFtab'}]},
       {var,576,'Addr'},
       {var,576,'Pos'}]}]}]},
 {function,578,find_first_free,4,
  [{clause,578,
    [{var,578,'_Ftab'},{var,578,'Pos'},{var,578,'_Pos0'},{var,578,'Head'}],
    [[{op,578,'>',{var,578,'Pos'},{integer,469,32}}]],
    [{call,579,
      {atom,579,throw},
      [{tuple,579,
        [{atom,579,error},
         {tuple,579,
          [{atom,579,no_more_space_on_file},
           {call,579,
            {remote,579,{atom,579,erlang},{atom,579,element}},
            [{integer,579,23},{var,579,'Head'}]}]}]}]}]},
   {clause,580,
    [{var,580,'Ftab'},{var,580,'Pos'},{var,580,'Pos0'},{var,580,'Head'}],
    [],
    [{match,581,
      {var,581,'PosTab'},
      {call,581,{atom,581,element},[{var,581,'Pos'},{var,581,'Ftab'}]}},
     {'case',582,
      {call,582,{atom,582,bplus_lookup_first},[{var,582,'PosTab'}]},
      [{clause,583,
        [{atom,583,undefined}],
        [],
        [{call,584,
          {atom,584,find_first_free},
          [{var,584,'Ftab'},
           {op,584,'+',{var,584,'Pos'},{integer,584,1}},
           {var,584,'Pos0'},
           {var,584,'Head'}]}]},
       {clause,585,
        [{tuple,585,[{atom,585,ok},{var,585,'Addr'}]}],
        [[{op,585,'>',
           {op,585,'+',
            {var,585,'Addr'},
            {op,42,'bsl',
             {integer,42,1},
             {op,585,'-',{var,585,'Pos0'},{integer,585,1}}}},
           {op,585,'-',
            {op,42,'bsl',
             {integer,42,1},
             {op,585,'-',{integer,469,32},{integer,585,1}}},
            {integer,470,50000000}}}]],
        [{call,587,
          {atom,587,throw},
          [{tuple,587,
            [{atom,587,error},
             {tuple,587,
              [{atom,587,no_more_space_on_file},
               {call,587,
                {remote,587,{atom,587,erlang},{atom,587,element}},
                [{integer,587,23},{var,587,'Head'}]}]}]}]}]},
       {clause,588,
        [{tuple,588,[{atom,588,ok},{var,588,'Addr'}]}],
        [],
        [{tuple,589,[{var,589,'Pos'},{var,589,'Addr'}]}]}]}]}]},
 {function,595,undo_free,4,
  [{clause,595,
    [{var,595,'Ftab'},{var,595,'Pos'},{var,595,'Addr'},{var,595,'Base'}],
    [],
    [{match,596,
      {var,596,'PosTab'},
      {call,596,{atom,596,element},[{var,596,'Pos'},{var,596,'Ftab'}]}},
     {'case',597,
      {call,597,{atom,597,bplus_lookup},[{var,597,'PosTab'},{var,597,'Addr'}]},
      [{clause,598,
        [{atom,598,undefined}],
        [],
        [{match,599,
          {tuple,599,[{var,599,'BuddyAddr'},{var,599,'MoveUpAddr'}]},
          {call,599,
           {atom,599,my_buddy},
           [{var,599,'Addr'},
            {op,42,'bsl',
             {integer,42,1},
             {op,599,'-',{var,599,'Pos'},{integer,599,1}}},
            {var,599,'Base'}]}},
         {match,600,
          {var,600,'NewFtab'},
          {call,600,
           {atom,600,setelement},
           [{var,600,'Pos'},
            {var,600,'Ftab'},
            {call,600,
             {atom,600,bplus_insert},
             [{var,600,'PosTab'},{var,600,'BuddyAddr'}]}]}},
         {call,601,
          {atom,601,undo_free},
          [{var,601,'NewFtab'},
           {op,601,'+',{var,601,'Pos'},{integer,601,1}},
           {var,601,'MoveUpAddr'},
           {var,601,'Base'}]}]},
       {clause,602,
        [{tuple,602,[{atom,602,ok},{var,602,'Addr'}]}],
        [],
        [{match,603,
          {var,603,'NewPosTab'},
          {call,603,
           {atom,603,bplus_delete},
           [{var,603,'PosTab'},{var,603,'Addr'}]}},
         {call,604,
          {atom,604,setelement},
          [{var,604,'Pos'},{var,604,'Ftab'},{var,604,'NewPosTab'}]}]}]}]}]},
 {function,607,reserve_buddy,4,
  [{clause,607,
    [{var,607,'Ftab'},{var,607,'Pos'},{var,607,'Pos0'},{var,607,'Addr'}],
    [],
    [{match,608,
      {var,608,'PosTab'},
      {call,608,{atom,608,element},[{var,608,'Pos'},{var,608,'Ftab'}]}},
     {match,609,
      {var,609,'NewPosTab'},
      {call,609,
       {atom,609,bplus_delete},
       [{var,609,'PosTab'},{var,609,'Addr'}]}},
     {match,610,
      {var,610,'NewFtab'},
      {call,610,
       {atom,610,setelement},
       [{var,610,'Pos'},{var,610,'Ftab'},{var,610,'NewPosTab'}]}},
     {call,611,
      {atom,611,move_down},
      [{var,611,'NewFtab'},
       {var,611,'Pos'},
       {var,611,'Pos0'},
       {var,611,'Addr'}]}]}]},
 {function,613,move_down,4,
  [{clause,613,
    [{var,613,'Ftab'},{var,613,'Pos'},{var,613,'Pos'},{var,613,'_Addr'}],
    [],
    [{atom,473,true},{var,616,'Ftab'}]},
   {clause,617,
    [{var,617,'Ftab'},{var,617,'Pos'},{var,617,'Pos0'},{var,617,'Addr'}],
    [],
    [{match,618,
      {var,618,'Pos_1'},
      {op,618,'-',{var,618,'Pos'},{integer,618,1}}},
     {match,619,
      {var,619,'Size'},
      {op,42,'bsl',{integer,42,1},{var,619,'Pos_1'}}},
     {match,620,
      {var,620,'HighBuddy'},
      {op,620,'+',
       {var,620,'Addr'},
       {op,620,'bsr',{var,620,'Size'},{integer,620,1}}}},
     {match,621,
      {var,621,'NewPosTab_1'},
      {call,621,
       {atom,621,bplus_insert},
       [{call,621,{atom,621,element},[{var,621,'Pos_1'},{var,621,'Ftab'}]},
        {var,621,'HighBuddy'}]}},
     {match,622,
      {var,622,'NewFtab'},
      {call,622,
       {atom,622,setelement},
       [{var,622,'Pos_1'},{var,622,'Ftab'},{var,622,'NewPosTab_1'}]}},
     {call,623,
      {atom,623,move_down},
      [{var,623,'NewFtab'},
       {var,623,'Pos_1'},
       {var,623,'Pos0'},
       {var,623,'Addr'}]}]}]},
 {function,626,free,3,
  [{clause,626,
    [{var,626,'Head'},{var,626,'Addr'},{var,626,'Sz'}],
    [],
    [{atom,473,true},
     {match,628,
      {var,628,'Ftab'},
      {call,628,{atom,628,get_freelists},[{var,628,'Head'}]}},
     {match,629,{var,629,'Pos'},{call,629,{atom,629,sz2pos},[{var,629,'Sz'}]}},
     {tuple,630,
      [{call,630,
        {atom,630,set_freelists},
        [{var,630,'Head'},
         {call,630,
          {atom,630,free_in_pos},
          [{var,630,'Ftab'},
           {var,630,'Addr'},
           {var,630,'Pos'},
           {call,630,
            {remote,630,{atom,630,erlang},{atom,630,element}},
            [{integer,630,32},{var,630,'Head'}]}]}]},
       {var,630,'Pos'}]}]}]},
 {function,632,free_in_pos,4,
  [{clause,632,
    [{var,632,'Ftab'},{var,632,'_Addr'},{var,632,'Pos'},{var,632,'_Base'}],
    [[{op,632,'>',{var,632,'Pos'},{integer,469,32}}]],
    [{var,633,'Ftab'}]},
   {clause,634,
    [{var,634,'Ftab'},{var,634,'Addr'},{var,634,'Pos'},{var,634,'Base'}],
    [],
    [{match,635,
      {var,635,'PosTab'},
      {call,635,{atom,635,element},[{var,635,'Pos'},{var,635,'Ftab'}]}},
     {match,636,
      {tuple,636,[{var,636,'BuddyAddr'},{var,636,'MoveUpAddr'}]},
      {call,636,
       {atom,636,my_buddy},
       [{var,636,'Addr'},
        {op,42,'bsl',
         {integer,42,1},
         {op,636,'-',{var,636,'Pos'},{integer,636,1}}},
        {var,636,'Base'}]}},
     {'case',637,
      {call,637,
       {atom,637,bplus_lookup},
       [{var,637,'PosTab'},{var,637,'BuddyAddr'}]},
      [{clause,638,
        [{atom,638,undefined}],
        [],
        [{atom,473,true},
         {call,640,
          {atom,640,setelement},
          [{var,640,'Pos'},
           {var,640,'Ftab'},
           {call,640,
            {atom,640,bplus_insert},
            [{var,640,'PosTab'},{var,640,'Addr'}]}]}]},
       {clause,641,
        [{tuple,641,[{atom,641,ok},{var,641,'BuddyAddr'}]}],
        [],
        [{match,642,
          {var,642,'PosTab1'},
          {call,642,
           {atom,642,bplus_delete},
           [{var,642,'PosTab'},{var,642,'Addr'}]}},
         {match,643,
          {var,643,'PosTab2'},
          {call,643,
           {atom,643,bplus_delete},
           [{var,643,'PosTab1'},{var,643,'BuddyAddr'}]}},
         {atom,473,true},
         {match,645,
          {var,645,'NewFtab'},
          {call,645,
           {atom,645,setelement},
           [{var,645,'Pos'},{var,645,'Ftab'},{var,645,'PosTab2'}]}},
         {call,646,
          {atom,646,free_in_pos},
          [{var,646,'NewFtab'},
           {var,646,'MoveUpAddr'},
           {op,646,'+',{var,646,'Pos'},{integer,646,1}},
           {var,646,'Base'}]}]}]}]}]},
 {function,649,get_freelists,1,
  [{clause,649,
    [{var,649,'Head'}],
    [[{op,649,'=:=',
       {call,649,
        {remote,649,{atom,649,erlang},{atom,649,element}},
        [{integer,649,17},{var,649,'Head'}]},
       {atom,649,false}}]],
    [{call,650,
      {remote,650,{atom,650,erlang},{atom,650,element}},
      [{integer,650,12},{var,650,'Head'}]}]},
   {clause,651,
    [{var,651,'Head'}],
    [[{op,651,'=/=',
       {call,651,
        {remote,651,{atom,651,erlang},{atom,651,element}},
        [{integer,651,17},{var,651,'Head'}]},
       {atom,651,false}}]],
    [{match,652,
      {tuple,652,[{var,652,'_Frozen'},{var,652,'Current'}]},
      {call,652,
       {remote,652,{atom,652,erlang},{atom,652,element}},
       [{integer,652,12},{var,652,'Head'}]}},
     {var,653,'Current'}]}]},
 {function,655,set_freelists,2,
  [{clause,655,
    [{var,655,'Head'},{var,655,'Ftab'}],
    [[{op,655,'=:=',
       {call,655,
        {remote,655,{atom,655,erlang},{atom,655,element}},
        [{integer,655,17},{var,655,'Head'}]},
       {atom,655,false}}]],
    [{call,656,
      {remote,656,{atom,656,erlang},{atom,656,setelement}},
      [{integer,656,12},{var,656,'Head'},{var,656,'Ftab'}]}]},
   {clause,657,
    [{var,657,'Head'},{var,657,'Ftab'}],
    [[{op,657,'=/=',
       {call,657,
        {remote,657,{atom,657,erlang},{atom,657,element}},
        [{integer,657,17},{var,657,'Head'}]},
       {atom,657,false}}]],
    [{match,658,
      {tuple,658,[{var,658,'Frozen'},{var,658,'_'}]},
      {call,658,
       {remote,658,{atom,658,erlang},{atom,658,element}},
       [{integer,658,12},{var,658,'Head'}]}},
     {call,659,
      {remote,659,{atom,659,erlang},{atom,659,setelement}},
      [{integer,659,12},
       {var,659,'Head'},
       {tuple,659,[{var,659,'Frozen'},{var,659,'Ftab'}]}]}]}]},
 {function,663,sz2pos,1,
  [{clause,663,
    [{var,663,'N'}],
    [[{op,663,'>',{var,663,'N'},{integer,663,0}}]],
    [{op,664,'+',
      {integer,664,1},
      {call,664,
       {atom,664,log2},
       [{op,664,'+',{var,664,'N'},{integer,664,1}}]}}]}]},
 {function,667,log2,1,
  [{clause,667,
    [{var,667,'N'}],
    [[{call,667,{atom,667,is_integer},[{var,667,'N'}]},
      {op,667,'>=',{var,667,'N'},{integer,667,0}}]],
    [{'if',668,
      [{clause,668,[],
        [[{op,668,'>',
           {var,668,'N'},
           {op,42,'bsl',{integer,42,1},{integer,668,8}}}]],
        [{'if',669,
          [{clause,669,[],
            [[{op,669,'>',
               {var,669,'N'},
               {op,42,'bsl',{integer,42,1},{integer,669,10}}}]],
            [{'if',670,
              [{clause,670,[],
                [[{op,670,'>',
                   {var,670,'N'},
                   {op,42,'bsl',{integer,42,1},{integer,670,11}}}]],
                [{'if',671,
                  [{clause,671,[],
                    [[{op,671,'>',
                       {var,671,'N'},
                       {op,42,'bsl',{integer,42,1},{integer,671,12}}}]],
                    [{op,672,'+',
                      {integer,672,12},
                      {'if',672,
                       [{clause,672,[],
                         [[{op,672,'=:=',
                            {op,672,'band',
                             {var,672,'N'},
                             {op,672,'-',
                              {op,42,'bsl',{integer,42,1},{integer,672,12}},
                              {integer,672,1}}},
                            {integer,672,0}}]],
                         [{call,673,
                           {atom,673,log2},
                           [{op,673,'bsr',{var,673,'N'},{integer,673,12}}]}]},
                        {clause,674,[],
                         [[{atom,674,true}]],
                         [{call,674,
                           {atom,674,log2},
                           [{op,674,'+',
                             {integer,674,1},
                             {op,674,'bsr',
                              {var,674,'N'},
                              {integer,674,12}}}]}]}]}}]},
                   {clause,676,[],[[{atom,676,true}]],[{integer,676,12}]}]}]},
               {clause,678,[],[[{atom,678,true}]],[{integer,678,11}]}]}]},
           {clause,680,[],
            [[{op,680,'>',
               {var,680,'N'},
               {op,42,'bsl',{integer,42,1},{integer,680,9}}}]],
            [{integer,680,10}]},
           {clause,681,[],[[{atom,681,true}]],[{integer,681,9}]}]}]},
       {clause,683,[],
        [[{op,683,'>',
           {var,683,'N'},
           {op,42,'bsl',{integer,42,1},{integer,683,4}}}]],
        [{'if',684,
          [{clause,684,[],
            [[{op,684,'>',
               {var,684,'N'},
               {op,42,'bsl',{integer,42,1},{integer,684,6}}}]],
            [{'if',685,
              [{clause,685,[],
                [[{op,685,'>',
                   {var,685,'N'},
                   {op,42,'bsl',{integer,42,1},{integer,685,7}}}]],
                [{integer,685,8}]},
               {clause,686,[],[[{atom,686,true}]],[{integer,686,7}]}]}]},
           {clause,688,[],
            [[{op,688,'>',
               {var,688,'N'},
               {op,42,'bsl',{integer,42,1},{integer,688,5}}}]],
            [{integer,688,6}]},
           {clause,689,[],[[{atom,689,true}]],[{integer,689,5}]}]}]},
       {clause,691,[],
        [[{op,691,'>',
           {var,691,'N'},
           {op,42,'bsl',{integer,42,1},{integer,691,2}}}]],
        [{'if',692,
          [{clause,693,[],
            [[{op,693,'>',
               {var,693,'N'},
               {op,42,'bsl',{integer,42,1},{integer,693,3}}}]],
            [{integer,693,4}]},
           {clause,694,[],[[{atom,694,true}]],[{integer,694,3}]}]}]},
       {clause,696,[],
        [[{op,696,'>',
           {var,696,'N'},
           {op,42,'bsl',{integer,42,1},{integer,696,1}}}]],
        [{integer,696,2}]},
       {clause,697,[],
        [[{op,697,'>=',
           {var,697,'N'},
           {op,42,'bsl',{integer,42,1},{integer,697,0}}}]],
        [{integer,697,1}]},
       {clause,698,[],[[{atom,698,true}]],[{integer,698,0}]}]}]}]},
 {function,701,make_zeros,1,
  [{clause,701,[{integer,701,0}],[],[{nil,701}]},
   {clause,702,
    [{var,702,'N'}],
    [[{op,702,'=:=',
       {op,702,'rem',{var,702,'N'},{integer,702,2}},
       {integer,702,0}}]],
    [{match,703,
      {var,703,'P'},
      {call,703,
       {atom,703,make_zeros},
       [{op,703,'div',{var,703,'N'},{integer,703,2}}]}},
     {cons,704,{var,704,'P'},{var,704,'P'}}]},
   {clause,705,
    [{var,705,'N'}],
    [],
    [{match,706,
      {var,706,'P'},
      {call,706,
       {atom,706,make_zeros},
       [{op,706,'div',{var,706,'N'},{integer,706,2}}]}},
     {cons,707,{integer,707,0},{cons,707,{var,707,'P'},{var,707,'P'}}}]}]},
 {function,710,my_buddy,3,
  [{clause,710,
    [{var,710,'Addr'},{var,710,'Sz'},{var,710,'Base'}],
    [],
    [{'case',711,
      {op,711,'band',
       {op,711,'-',{var,711,'Addr'},{var,711,'Base'}},
       {var,711,'Sz'}},
      [{clause,712,
        [{integer,712,0}],
        [],
        [{tuple,713,
          [{op,713,'+',{var,713,'Addr'},{var,713,'Sz'}},{var,713,'Addr'}]}]},
       {clause,714,
        [{var,714,'_'}],
        [],
        [{match,715,
          {var,715,'T'},
          {op,715,'-',{var,715,'Addr'},{var,715,'Sz'}}},
         {tuple,716,[{var,716,'T'},{var,716,'T'}]}]}]}]}]},
 {function,719,all_free,1,
  [{clause,719,
    [{var,719,'Head'}],
    [],
    [{match,720,
      {var,720,'Tab'},
      {call,720,{atom,720,get_freelists},[{var,720,'Head'}]}},
     {match,721,
      {var,721,'Base'},
      {call,721,
       {remote,721,{atom,721,erlang},{atom,721,element}},
       [{integer,721,32},{var,721,'Head'}]}},
     {'case',722,
      {call,722,
       {atom,722,all_free},
       [{call,722,{atom,722,all},[{var,722,'Tab'}]},
        {var,722,'Base'},
        {var,722,'Base'},
        {nil,722}]},
      [{clause,723,
        [{cons,723,
          {tuple,723,[{var,723,'Base'},{var,723,'Base'}]},
          {var,723,'L'}}],
        [],
        [{var,723,'L'}]},
       {clause,724,[{var,724,'L'}],[],[{var,724,'L'}]}]}]}]},
 {function,727,all_free,4,
  [{clause,727,
    [{nil,727},{var,727,'X0'},{var,727,'Y0'},{var,727,'F'}],
    [],
    [{call,728,
      {remote,728,{atom,728,lists},{atom,728,reverse}},
      [{cons,728,
        {tuple,728,[{var,728,'X0'},{var,728,'Y0'}]},
        {var,728,'F'}}]}]},
   {clause,729,
    [{cons,729,{tuple,729,[{var,729,'X'},{var,729,'Y'}]},{var,729,'L'}},
     {var,729,'X0'},
     {var,729,'Y0'},
     {var,729,'F'}],
    [[{op,729,'=:=',{var,729,'Y0'},{var,729,'X'}}]],
    [{call,730,
      {atom,730,all_free},
      [{var,730,'L'},{var,730,'X0'},{var,730,'Y'},{var,730,'F'}]}]},
   {clause,731,
    [{cons,731,{tuple,731,[{var,731,'X'},{var,731,'Y'}]},{var,731,'L'}},
     {var,731,'X0'},
     {var,731,'Y0'},
     {var,731,'F'}],
    [[{op,731,'<',{var,731,'Y0'},{var,731,'X'}}]],
    [{call,732,
      {atom,732,all_free},
      [{var,732,'L'},
       {var,732,'X'},
       {var,732,'Y'},
       {cons,732,
        {tuple,732,[{var,732,'X0'},{var,732,'Y0'}]},
        {var,732,'F'}}]}]}]},
 {function,734,all_allocated,1,
  [{clause,734,
    [{var,734,'Head'}],
    [],
    [{call,735,
      {atom,735,all_allocated},
      [{call,735,
        {atom,735,all},
        [{call,735,{atom,735,get_freelists},[{var,735,'Head'}]}]},
       {integer,735,0},
       {call,735,
        {remote,735,{atom,735,erlang},{atom,735,element}},
        [{integer,735,32},{var,735,'Head'}]},
       {nil,735}]}]}]},
 {function,737,all_allocated,4,
  [{clause,737,
    [{nil,737},{var,737,'_X0'},{var,737,'_Y0'},{nil,737}],
    [],
    [{bin,738,[]}]},
   {clause,739,
    [{nil,739},{var,739,'_X0'},{var,739,'_Y0'},{var,739,'A0'}],
    [],
    [{match,740,
      {cons,740,
       {bin,740,
        [{bin_element,740,{var,740,'From'},{integer,740,32},default},
         {bin_element,740,{var,740,'To'},{integer,740,32},default}]},
       {var,740,'A'}},
      {call,740,
       {remote,740,{atom,740,lists},{atom,740,reverse}},
       [{var,740,'A0'}]}},
     {tuple,741,
      [{var,741,'From'},
       {var,741,'To'},
       {call,741,{atom,741,list_to_binary},[{var,741,'A'}]}]}]},
   {clause,742,
    [{cons,742,{tuple,742,[{var,742,'X'},{var,742,'Y'}]},{var,742,'L'}},
     {var,742,'X0'},
     {var,742,'Y0'},
     {var,742,'A'}],
    [[{op,742,'=:=',{var,742,'Y0'},{var,742,'X'}}]],
    [{call,743,
      {atom,743,all_allocated},
      [{var,743,'L'},{var,743,'X0'},{var,743,'Y'},{var,743,'A'}]}]},
   {clause,744,
    [{cons,744,{tuple,744,[{var,744,'X'},{var,744,'Y'}]},{var,744,'L'}},
     {var,744,'_X0'},
     {var,744,'Y0'},
     {var,744,'A'}],
    [[{op,744,'<',{var,744,'Y0'},{var,744,'X'}}]],
    [{call,745,
      {atom,745,all_allocated},
      [{var,745,'L'},
       {var,745,'X'},
       {var,745,'Y'},
       {cons,745,
        {bin,745,
         [{bin_element,745,{var,745,'Y0'},{integer,745,32},default},
          {bin_element,745,{var,745,'X'},{integer,745,32},default}]},
        {var,745,'A'}}]}]}]},
 {function,747,all_allocated_as_list,1,
  [{clause,747,
    [{var,747,'Head'}],
    [],
    [{call,748,
      {atom,748,all_allocated_as_list},
      [{call,748,
        {atom,748,all},
        [{call,748,{atom,748,get_freelists},[{var,748,'Head'}]}]},
       {integer,748,0},
       {call,748,
        {remote,748,{atom,748,erlang},{atom,748,element}},
        [{integer,748,32},{var,748,'Head'}]},
       {nil,748}]}]}]},
 {function,750,all_allocated_as_list,4,
  [{clause,750,
    [{nil,750},{var,750,'_X0'},{var,750,'_Y0'},{nil,750}],
    [],
    [{nil,751}]},
   {clause,752,
    [{nil,752},{var,752,'_X0'},{var,752,'_Y0'},{var,752,'A'}],
    [],
    [{call,753,
      {remote,753,{atom,753,lists},{atom,753,reverse}},
      [{var,753,'A'}]}]},
   {clause,754,
    [{cons,754,{tuple,754,[{var,754,'X'},{var,754,'Y'}]},{var,754,'L'}},
     {var,754,'X0'},
     {var,754,'Y0'},
     {var,754,'A'}],
    [[{op,754,'=:=',{var,754,'Y0'},{var,754,'X'}}]],
    [{call,755,
      {atom,755,all_allocated_as_list},
      [{var,755,'L'},{var,755,'X0'},{var,755,'Y'},{var,755,'A'}]}]},
   {clause,756,
    [{cons,756,{tuple,756,[{var,756,'X'},{var,756,'Y'}]},{var,756,'L'}},
     {var,756,'_X0'},
     {var,756,'Y0'},
     {var,756,'A'}],
    [[{op,756,'<',{var,756,'Y0'},{var,756,'X'}}]],
    [{call,757,
      {atom,757,all_allocated_as_list},
      [{var,757,'L'},
       {var,757,'X'},
       {var,757,'Y'},
       {cons,757,{cons,757,{var,757,'Y0'},{var,757,'X'}},{var,757,'A'}}]}]}]},
 {function,759,all,1,
  [{clause,759,
    [{var,759,'Tab'}],
    [],
    [{call,760,
      {atom,760,all},
      [{var,760,'Tab'},
       {call,760,{atom,760,tuple_size},[{var,760,'Tab'}]},
       {nil,760}]}]}]},
 {function,762,all,3,
  [{clause,762,
    [{var,762,'_Tab'},{integer,762,0},{var,762,'L'}],
    [],
    [{call,765,
      {remote,765,{atom,765,lists},{atom,765,sort}},
      [{var,765,'L'}]}]},
   {clause,766,
    [{var,766,'Tab'},{var,766,'I'},{var,766,'L'}],
    [],
    [{match,767,
      {var,767,'LL'},
      {call,767,
       {atom,767,collect_tree},
       [{call,767,{atom,767,element},[{var,767,'I'},{var,767,'Tab'}]},
        {var,767,'I'},
        {var,767,'L'}]}},
     {call,768,
      {atom,768,all},
      [{var,768,'Tab'},
       {op,768,'-',{var,768,'I'},{integer,768,1}},
       {var,768,'LL'}]}]}]},
 {function,771,find_allocated,4,
  [{clause,771,
    [{var,771,'Ftab'},{var,771,'Addr'},{var,771,'Length'},{var,771,'Base'}],
    [],
    [{match,772,
      {var,772,'MaxAddr'},
      {op,772,'+',{var,772,'Addr'},{var,772,'Length'}}},
     {match,773,
      {var,773,'Ints'},
      {call,773,
       {atom,773,collect_all_interval},
       [{var,773,'Ftab'},
        {var,773,'Addr'},
        {var,773,'MaxAddr'},
        {var,773,'Base'}]}},
     {call,774,
      {atom,774,allocated},
      [{var,774,'Ints'},
       {var,774,'Addr'},
       {var,774,'MaxAddr'},
       {var,774,'Ftab'},
       {var,774,'Base'}]}]}]},
 {function,776,allocated,5,
  [{clause,776,
    [{var,776,'Some'},
     {var,776,'Addr'},
     {var,776,'Max'},
     {var,776,'Ftab'},
     {var,776,'Base'}],
    [],
    [{'case',777,
      {call,777,
       {atom,777,allocated1},
       [{var,777,'Some'},{var,777,'Addr'},{var,777,'Max'},{nil,777}]},
      [{clause,778,
        [{nil,778}],
        [],
        [{'case',779,
          {call,779,
           {atom,779,find_next_allocated},
           [{var,779,'Ftab'},{var,779,'Addr'},{var,779,'Base'}]},
          [{clause,780,
            [{tuple,780,[{var,780,'From'},{var,780,'_'}]}],
            [],
            [{call,781,
              {atom,781,find_allocated},
              [{var,781,'Ftab'},
               {var,781,'From'},
               {integer,38,8192},
               {var,781,'Base'}]}]},
           {clause,782,[{atom,782,none}],[],[{bin,783,[]}]}]}]},
       {clause,785,
        [{var,785,'L'}],
        [],
        [{call,786,
          {atom,786,list_to_binary},
          [{call,786,
            {remote,786,{atom,786,lists},{atom,786,reverse}},
            [{var,786,'L'}]}]}]}]}]}]},
 {function,789,allocated1,4,
  [{clause,789,
    [{nil,789},{var,789,'Y0'},{var,789,'Max'},{var,789,'A'}],
    [[{op,789,'<',{var,789,'Y0'},{var,789,'Max'}}]],
    [{cons,790,
      {bin,790,
       [{bin_element,790,{var,790,'Y0'},{integer,790,32},default},
        {bin_element,790,{var,790,'Max'},{integer,790,32},default}]},
      {var,790,'A'}}]},
   {clause,791,
    [{nil,791},{var,791,'_Y0'},{var,791,'_Max'},{var,791,'A'}],
    [],
    [{var,792,'A'}]},
   {clause,793,
    [{cons,793,{tuple,793,[{var,793,'X'},{var,793,'Y'}]},{var,793,'L'}},
     {var,793,'Y0'},
     {var,793,'Max'},
     {var,793,'A'}],
    [[{op,793,'>=',{var,793,'Y0'},{var,793,'X'}}]],
    [{call,794,
      {atom,794,allocated1},
      [{var,794,'L'},{var,794,'Y'},{var,794,'Max'},{var,794,'A'}]}]},
   {clause,795,
    [{cons,795,{tuple,795,[{var,795,'X'},{var,795,'Y'}]},{var,795,'L'}},
     {var,795,'Y0'},
     {var,795,'Max'},
     {var,795,'A'}],
    [],
    [{call,796,
      {atom,796,allocated1},
      [{var,796,'L'},
       {var,796,'Y'},
       {var,796,'Max'},
       {cons,796,
        {bin,796,
         [{bin_element,796,{var,796,'Y0'},{integer,796,32},default},
          {bin_element,796,{var,796,'X'},{integer,796,32},default}]},
        {var,796,'A'}}]}]}]},
 {function,799,find_next_allocated,3,
  [{clause,799,
    [{var,799,'Ftab'},{var,799,'Addr'},{var,799,'Base'}],
    [],
    [{'case',800,
      {call,800,
       {atom,800,find_next_free},
       [{var,800,'Ftab'},{var,800,'Addr'},{var,800,'Base'}]},
      [{clause,801,[{atom,801,none}],[],[{atom,802,none}]},
       {clause,803,
        [{tuple,803,[{var,803,'Addr1'},{var,803,'Pos'}]}],
        [[{op,803,'=<',{var,803,'Addr1'},{var,803,'Addr'}}]],
        [{call,804,
          {atom,804,find_next_allocated},
          [{var,804,'Ftab'},
           {op,804,'+',
            {var,804,'Addr1'},
            {op,42,'bsl',
             {integer,42,1},
             {op,804,'-',{var,804,'Pos'},{integer,804,1}}}},
           {var,804,'Base'}]}]},
       {clause,805,
        [{tuple,805,[{var,805,'Next'},{var,805,'_Pos'}]}],
        [],
        [{tuple,806,[{var,806,'Addr'},{var,806,'Next'}]}]}]}]}]},
 {function,811,find_next_free,3,
  [{clause,811,
    [{var,811,'Ftab'},{var,811,'Addr'},{var,811,'Base'}],
    [],
    [{match,812,
      {var,812,'MaxBud'},
      {call,812,{atom,812,tuple_size},[{var,812,'Ftab'}]}},
     {call,813,
      {atom,813,find_next_free},
      [{var,813,'Ftab'},
       {var,813,'Addr'},
       {integer,813,1},
       {var,813,'MaxBud'},
       {op,813,'-',{integer,813,1}},
       {op,813,'-',{integer,813,1}},
       {var,813,'Base'}]}]}]},
 {function,815,find_next_free,7,
  [{clause,815,
    [{var,815,'Ftab'},
     {var,815,'Addr0'},
     {var,815,'Pos'},
     {var,815,'MaxBud'},
     {var,815,'Next'},
     {var,815,'PosN'},
     {var,815,'Base'}],
    [[{op,816,'=<',{var,816,'Pos'},{var,816,'MaxBud'}}]],
    [{match,817,
      {var,817,'Addr'},
      {call,817,
       {atom,817,adjust_addr},
       [{var,817,'Addr0'},{var,817,'Pos'},{var,817,'Base'}]}},
     {match,818,
      {var,818,'PosTab'},
      {call,818,{atom,818,element},[{var,818,'Pos'},{var,818,'Ftab'}]}},
     {'case',819,
      {call,819,
       {atom,819,bplus_lookup_next},
       [{var,819,'PosTab'},{op,819,'-',{var,819,'Addr'},{integer,819,1}}]},
      [{clause,820,
        [{atom,820,undefined}],
        [],
        [{call,821,
          {atom,821,find_next_free},
          [{var,821,'Ftab'},
           {var,821,'Addr0'},
           {op,821,'+',{var,821,'Pos'},{integer,821,1}},
           {var,821,'MaxBud'},
           {var,821,'Next'},
           {var,821,'PosN'},
           {var,821,'Base'}]}]},
       {clause,822,
        [{tuple,822,[{atom,822,ok},{var,822,'Next1'}]}],
        [[{op,822,'=:=',{var,822,'PosN'},{op,822,'-',{integer,822,1}}}],
         [{op,822,'<',{var,822,'Next1'},{var,822,'Next'}}]],
        [{call,823,
          {atom,823,find_next_free},
          [{var,823,'Ftab'},
           {var,823,'Addr0'},
           {op,823,'+',{var,823,'Pos'},{integer,823,1}},
           {var,823,'MaxBud'},
           {var,823,'Next1'},
           {var,823,'Pos'},
           {var,823,'Base'}]}]},
       {clause,824,
        [{tuple,824,[{atom,824,ok},{var,824,'_'}]}],
        [],
        [{call,825,
          {atom,825,find_next_free},
          [{var,825,'Ftab'},
           {var,825,'Addr0'},
           {op,825,'+',{var,825,'Pos'},{integer,825,1}},
           {var,825,'MaxBud'},
           {var,825,'Next'},
           {var,825,'PosN'},
           {var,825,'Base'}]}]}]}]},
   {clause,827,
    [{var,827,'_Ftab'},
     {var,827,'_Addr'},
     {var,827,'_Pos'},
     {var,827,'_MaxBud'},
     {op,827,'-',{integer,827,1}},
     {var,827,'_PosN'},
     {var,827,'_Base'}],
    [],
    [{atom,828,none}]},
   {clause,829,
    [{var,829,'_Ftab'},
     {var,829,'_Addr'},
     {var,829,'_Pos'},
     {var,829,'_MaxBud'},
     {var,829,'Next'},
     {var,829,'PosN'},
     {var,829,'_Base'}],
    [],
    [{tuple,830,[{var,830,'Next'},{var,830,'PosN'}]}]}]},
 {function,832,collect_all_interval,4,
  [{clause,832,
    [{var,832,'Ftab'},{var,832,'Addr'},{var,832,'MaxAddr'},{var,832,'Base'}],
    [],
    [{match,833,
      {var,833,'MaxBud'},
      {call,833,{atom,833,tuple_size},[{var,833,'Ftab'}]}},
     {call,834,
      {atom,834,collect_all_interval},
      [{var,834,'Ftab'},
       {var,834,'Addr'},
       {var,834,'MaxAddr'},
       {integer,834,1},
       {var,834,'MaxBud'},
       {var,834,'Base'},
       {nil,834}]}]}]},
 {function,836,collect_all_interval,7,
  [{clause,836,
    [{var,836,'Ftab'},
     {var,836,'L0'},
     {var,836,'U'},
     {var,836,'Pos'},
     {var,836,'MaxBud'},
     {var,836,'Base'},
     {var,836,'Acc0'}],
    [[{op,836,'=<',{var,836,'Pos'},{var,836,'MaxBud'}}]],
    [{match,837,
      {var,837,'PosTab'},
      {call,837,{atom,837,element},[{var,837,'Pos'},{var,837,'Ftab'}]}},
     {match,838,
      {var,838,'L'},
      {call,838,
       {atom,838,adjust_addr},
       [{var,838,'L0'},{var,838,'Pos'},{var,838,'Base'}]}},
     {match,839,
      {var,839,'Acc'},
      {call,839,
       {atom,839,collect_interval},
       [{var,839,'PosTab'},
        {var,839,'Pos'},
        {var,839,'L'},
        {var,839,'U'},
        {var,839,'Acc0'}]}},
     {call,840,
      {atom,840,collect_all_interval},
      [{var,840,'Ftab'},
       {var,840,'L0'},
       {var,840,'U'},
       {op,840,'+',{var,840,'Pos'},{integer,840,1}},
       {var,840,'MaxBud'},
       {var,840,'Base'},
       {var,840,'Acc'}]}]},
   {clause,841,
    [{var,841,'_Ftab'},
     {var,841,'_L'},
     {var,841,'_U'},
     {var,841,'_Pos'},
     {var,841,'_MaxBud'},
     {var,841,'_Base'},
     {var,841,'Acc'}],
    [],
    [{call,842,
      {remote,842,{atom,842,lists},{atom,842,sort}},
      [{var,842,'Acc'}]}]}]},
 {function,846,adjust_addr,3,
  [{clause,846,
    [{var,846,'Addr'},{var,846,'Pos'},{var,846,'Base'}],
    [],
    [{match,847,
      {var,847,'Pow'},
      {op,42,'bsl',
       {integer,42,1},
       {op,847,'-',{var,847,'Pos'},{integer,847,1}}}},
     {match,848,
      {var,848,'Rem'},
      {op,848,'rem',
       {op,848,'-',{var,848,'Addr'},{var,848,'Base'}},
       {var,848,'Pow'}}},
     {'if',849,
      [{clause,850,[],
        [[{op,850,'=:=',{var,850,'Rem'},{integer,850,0}}]],
        [{var,851,'Addr'}]},
       {clause,852,[],
        [[{op,852,'<',{var,852,'Addr'},{var,852,'Pow'}}]],
        [{var,853,'Addr'}]},
       {clause,854,[],
        [[{atom,854,true}]],
        [{op,855,'-',{var,855,'Addr'},{var,855,'Rem'}}]}]}]}]},
 {function,865,get_disk_map,0,
  [{clause,865,[],[],
    [{'case',866,
      {call,866,{atom,866,get},[{atom,863,disk_map}]},
      [{clause,867,[{atom,867,undefined}],[],[{atom,867,no_disk_map}]},
       {clause,868,
        [{var,868,'T'}],
        [],
        [{tuple,868,
          [{atom,868,disk_map},
           {call,868,
            {remote,868,{atom,868,ets},{atom,868,tab2list}},
            [{var,868,'T'}]}]}]}]}]}]},
 {function,871,init_disk_map,1,
  [{clause,871,
    [{var,871,'Name'}],
    [],
    [{call,872,
      {remote,872,{atom,872,error_logger},{atom,872,info_msg}},
      [{string,872,"** dets: (debug) using disk map for ~p~n"},
       {cons,872,{var,872,'Name'},{nil,872}}]},
     {call,873,
      {atom,873,put},
      [{atom,863,disk_map},
       {call,873,
        {remote,873,{atom,873,ets},{atom,873,new}},
        [{atom,873,any},{cons,873,{atom,873,ordered_set},{nil,873}}]}]}]}]},
 {function,875,stop_disk_map,0,
  [{clause,875,[],[],
    [{'catch',876,
      {call,876,
       {remote,876,{atom,876,ets},{atom,876,delete}},
       [{call,876,{atom,876,erase},[{atom,863,disk_map}]}]}}]}]},
 {function,878,disk_map_segment_p,2,
  [{clause,878,
    [{var,878,'Fd'},{var,878,'P'}],
    [],
    [{'case',879,
      {call,879,{atom,879,get},[{atom,863,disk_map}]},
      [{clause,880,[{atom,880,undefined}],[],[{atom,881,ok}]},
       {clause,882,
        [{var,882,'_T'}],
        [],
        [{call,883,
          {atom,883,disk_map_segment},
          [{var,883,'P'},
           {call,883,
            {atom,883,pread_n},
            [{var,883,'Fd'},
             {var,883,'P'},
             {op,883,'*',{integer,883,8},{integer,883,256}}]}]}]}]}]}]},
 {function,886,disk_map_segment,2,
  [{clause,886,
    [{var,886,'P'},{var,886,'Segment'}],
    [],
    [{'case',887,
      {call,887,{atom,887,get},[{atom,863,disk_map}]},
      [{clause,888,[{atom,888,undefined}],[],[{atom,889,ok}]},
       {clause,890,
        [{var,890,'T'}],
        [],
        [{match,891,
          {var,891,'Ps'},
          {call,891,
           {atom,891,segment_fragment_to_pointers},
           [{var,891,'P'},
            {call,891,{atom,891,iolist_to_binary},[{var,891,'Segment'}]}]}},
         {match,892,
          {var,892,'Ss'},
          {lc,892,
           {tuple,892,
            [{var,892,'X'},
             {bin,892,
              [{bin_element,892,{var,892,'Sz'},{integer,892,32},default},
               {bin_element,34,
                {integer,34,305419896},
                {integer,892,32},
                default}]}]},
           [{generate,893,
             {tuple,893,
              [{var,893,'_P1'},
               {bin,893,
                [{bin_element,893,{var,893,'Sz'},{integer,893,32},default},
                 {bin_element,893,{var,893,'X'},{integer,893,32},default}]}]},
             {var,893,'Ps'}},
            {op,894,'>',{var,894,'X'},{integer,894,0}}]}},
         {call,895,
          {atom,895,dm},
          [{op,895,'++',{var,895,'Ps'},{var,895,'Ss'}},{var,895,'T'}]}]}]}]}]},
 {function,898,disk_map_pread,1,
  [{clause,898,
    [{var,898,'P'}],
    [],
    [{'case',899,
      {call,899,{atom,899,get},[{atom,863,disk_map}]},
      [{clause,900,[{atom,900,undefined}],[],[{atom,901,ok}]},
       {clause,902,
        [{var,902,'T'}],
        [],
        [{'case',903,
          {call,903,
           {remote,903,{atom,903,ets},{atom,903,lookup}},
           [{var,903,'T'},{var,903,'P'}]},
          [{clause,904,
            [{nil,904}],
            [],
            [{call,905,
              {atom,905,throw},
              [{tuple,905,
                [{atom,905,pread},{var,905,'P'},{integer,905,8}]}]}]},
           {clause,906,
            [{cons,906,
              {tuple,906,
               [{var,906,'P'},
                {tuple,906,
                 [{atom,906,pointer},{integer,906,0},{integer,906,0}]}]},
              {nil,906}}],
            [],
            [{atom,907,ok}]},
           {clause,908,
            [{cons,908,
              {tuple,908,
               [{var,908,'P'},
                {tuple,908,
                 [{atom,908,pointer},{var,908,'Pointer'},{var,908,'Sz'}]}]},
              {nil,908}}],
            [],
            [{'case',909,
              {call,909,
               {remote,909,{atom,909,ets},{atom,909,lookup}},
               [{var,909,'T'},{var,909,'Pointer'}]},
              [{clause,911,
                [{cons,911,
                  {tuple,911,
                   [{var,911,'Pointer'},
                    {tuple,911,
                     [{atom,911,slot},{var,911,'_P'},{var,911,'Sz'}]}]},
                  {nil,911}}],
                [],
                [{atom,912,ok}]},
               {clause,913,
                [{var,913,'Got'}],
                [],
                [{call,914,
                  {atom,914,throw},
                  [{tuple,914,
                    [{atom,914,pread},
                     {var,914,'P'},
                     {var,914,'Pointer'},
                     {var,914,'Got'}]}]}]}]}]},
           {clause,916,
            [{var,916,'Got'}],
            [],
            [{call,917,
              {atom,917,throw},
              [{tuple,917,
                [{atom,917,pread},
                 {var,917,'P'},
                 {var,917,'Got'}]}]}]}]}]}]}]}]},
 {function,923,disk_map,1,
  [{clause,923,
    [{var,923,'Bins'}],
    [],
    [{'case',924,
      {call,924,{atom,924,get},[{atom,863,disk_map}]},
      [{clause,925,[{atom,925,undefined}],[],[{atom,926,ok}]},
       {clause,927,
        [{var,927,'T'}],
        [],
        [{match,928,
          {var,928,'Bs'},
          {lc,928,
           {tuple,928,
            [{var,928,'P'},
             {call,928,{atom,928,iolist_to_binary},[{var,928,'Io'}]}]},
           [{generate,928,
             {tuple,928,[{var,928,'P'},{var,928,'Io'}]},
             {var,928,'Bins'}}]}},
         {call,929,{atom,929,dm},[{var,929,'Bs'},{var,929,'T'}]}]}]}]}]},
 {function,932,dm,2,
  [{clause,932,
    [{cons,932,{tuple,932,[{var,932,'P'},{var,932,'_Header'}]},{var,932,'Bs'}},
     {var,932,'T'}],
    [[{op,932,'<',{var,932,'P'},{integer,922,1336}}]],
    [{call,933,{atom,933,dm},[{var,933,'Bs'},{var,933,'T'}]}]},
   {clause,934,
    [{cons,934,
      {tuple,934,
       [{var,934,'P0'},
        {bin,934,
         [{bin_element,33,{integer,33,61591023},{integer,934,32},default}]}]},
      {var,934,'Bs'}},
     {var,934,'T'}],
    [],
    [{match,935,{var,935,'P'},{op,935,'-',{var,935,'P0'},{integer,921,4}}},
     {'case',936,
      {call,936,
       {remote,936,{atom,936,ets},{atom,936,lookup}},
       [{var,936,'T'},{var,936,'P'}]},
      [{clause,937,
        [{nil,937}],
        [],
        [{call,938,
          {atom,938,throw},
          [{tuple,938,[{atom,938,free},{var,938,'P0'}]}]}]},
       {clause,939,
        [{cons,939,{tuple,939,[{var,939,'P'},{var,939,'_OldSz'}]},{nil,939}}],
        [],
        [{match,940,
          {atom,940,true},
          {call,940,
           {remote,940,{atom,940,ets},{atom,940,delete}},
           [{var,940,'T'},{var,940,'P'}]}}]}]},
     {call,942,{atom,942,dm},[{var,942,'Bs'},{var,942,'T'}]}]},
   {clause,943,
    [{cons,943,
      {tuple,943,
       [{var,943,'SlotP'},
        {bin,943,
         [{bin_element,943,{var,943,'Sz'},{integer,943,32},default},
          {bin_element,34,{integer,34,305419896},{integer,943,32},default},
          {bin_element,943,{var,943,'_'},default,[binary]}]}]},
      {var,943,'Bs'}},
     {var,943,'T'}],
    [],
    [{match,944,
      {var,944,'Ptr'},
      {'case',944,
       {call,944,
        {remote,944,{atom,944,ets},{atom,944,lookup}},
        [{var,944,'T'},{tuple,944,[{atom,944,pointer},{var,944,'SlotP'}]}]},
       [{clause,945,
         [{cons,945,
           {tuple,945,
            [{tuple,945,[{atom,945,pointer},{var,945,'SlotP'}]},
             {var,945,'Pointer'}]},
           {nil,945}}],
         [],
         [{'case',946,
           {call,946,
            {remote,946,{atom,946,ets},{atom,946,lookup}},
            [{var,946,'T'},{var,946,'Pointer'}]},
           [{clause,947,
             [{cons,947,
               {tuple,947,
                [{var,947,'Pointer'},
                 {tuple,947,
                  [{atom,947,pointer},{var,947,'SlotP'},{var,947,'Sz2'}]}]},
               {nil,947}}],
             [],
             [{'case',948,
               {op,948,'=:=',
                {call,948,{atom,948,log2},[{var,948,'Sz'}]},
                {call,948,{atom,948,log2},[{var,948,'Sz2'}]}},
               [{clause,949,[{atom,949,true}],[],[{var,950,'Pointer'}]},
                {clause,951,
                 [{atom,951,false}],
                 [],
                 [{call,952,
                   {atom,952,throw},
                   [{tuple,952,
                     [{atom,952,active},
                      {var,952,'SlotP'},
                      {var,952,'Sz'},
                      {var,952,'Pointer'},
                      {var,952,'Sz2'}]}]}]}]}]},
            {clause,954,
             [{var,954,'Got'}],
             [],
             [{call,955,
               {atom,955,throw},
               [{tuple,955,
                 [{atom,955,active},
                  {var,955,'SlotP'},
                  {var,955,'Sz'},
                  {var,955,'Got'}]}]}]}]}]},
        {clause,957,
         [{nil,957}],
         [],
         [{call,958,
           {atom,958,throw},
           [{tuple,958,
             [{atom,958,active},{var,958,'SlotP'},{var,958,'Sz'}]}]}]}]}},
     {match,960,
      {atom,960,true},
      {call,960,
       {remote,960,{atom,960,ets},{atom,960,insert}},
       [{var,960,'T'},
        {tuple,960,
         [{var,960,'SlotP'},
          {tuple,960,[{atom,960,slot},{var,960,'Ptr'},{var,960,'Sz'}]}]}]}},
     {call,961,{atom,961,dm},[{var,961,'Bs'},{var,961,'T'}]}]},
   {clause,962,
    [{cons,962,
      {tuple,962,
       [{var,962,'P'},
        {bin,962,
         [{bin_element,962,{var,962,'Sz'},{integer,962,32},default},
          {bin_element,962,{var,962,'X'},{integer,962,32},default}]}]},
      {var,962,'Bs'}},
     {var,962,'T'}],
    [],
    [{'case',964,
      {call,964,{atom,964,prev},[{var,964,'P'},{var,964,'T'}]},
      [{clause,965,
        [{tuple,965,[{var,965,'Prev'},{var,965,'PrevSz'}]}],
        [],
        [{call,966,
          {atom,966,throw},
          [{tuple,966,
            [{atom,966,prev},
             {var,966,'P'},
             {var,966,'Sz'},
             {var,966,'X'},
             {var,966,'Prev'},
             {var,966,'PrevSz'}]}]}]},
       {clause,967,[{atom,967,ok}],[],[{atom,968,ok}]}]},
     {'case',970,
      {call,970,{atom,970,next},[{var,970,'P'},{integer,970,8},{var,970,'T'}]},
      [{clause,971,
        [{tuple,971,[{atom,971,next},{var,971,'Next'}]}],
        [],
        [{call,973,
          {atom,973,throw},
          [{tuple,973,
            [{atom,973,next},
             {var,973,'P'},
             {var,973,'Sz'},
             {var,973,'X'},
             {var,973,'Next'}]}]}]},
       {clause,974,[{atom,974,ok}],[],[{atom,975,ok}]}]},
     {match,977,
      {atom,977,true},
      {call,977,
       {remote,977,{atom,977,ets},{atom,977,insert}},
       [{var,977,'T'},
        {tuple,977,
         [{var,977,'P'},
          {tuple,977,[{atom,977,pointer},{var,977,'X'},{var,977,'Sz'}]}]}]}},
     {'if',978,
      [{clause,979,[],
        [[{op,979,'=:=',{var,979,'Sz'},{integer,979,0}}]],
        [{match,980,{var,980,'X'},{integer,980,0}},{atom,981,true}]},
       {clause,982,[],
        [[{atom,982,true}]],
        [{match,983,
          {atom,983,true},
          {call,983,
           {remote,983,{atom,983,ets},{atom,983,insert}},
           [{var,983,'T'},
            {tuple,983,
             [{tuple,983,[{atom,983,pointer},{var,983,'X'}]},
              {var,983,'P'}]}]}}]}]},
     {call,985,{atom,985,dm},[{var,985,'Bs'},{var,985,'T'}]}]},
   {clause,986,
    [{cons,986,
      {tuple,986,
       [{var,986,'P'},
        {bin,986,[{bin_element,986,{var,986,'X'},{integer,986,32},default}]}]},
      {var,986,'Bs'}},
     {var,986,'T'}],
    [],
    [{'case',987,
      {call,987,
       {remote,987,{atom,987,ets},{atom,987,lookup}},
       [{var,987,'T'},{var,987,'X'}]},
      [{clause,988,
        [{nil,988}],
        [],
        [{call,988,
          {atom,988,throw},
          [{tuple,988,[{atom,988,segment},{var,988,'P'},{var,988,'X'}]}]}]},
       {clause,989,
        [{cons,989,
          {tuple,989,
           [{var,989,'X'},
            {tuple,989,[{atom,989,pointer},{integer,989,0},{integer,989,0}]}]},
          {nil,989}}],
        [],
        [{atom,989,ok}]},
       {clause,990,
        [{cons,990,
          {tuple,990,
           [{var,990,'X'},
            {tuple,990,[{atom,990,pointer},{var,990,'P'},{var,990,'X'}]}]},
          {nil,990}}],
        [],
        [{atom,990,ok}]}]},
     {call,992,{atom,992,dm},[{var,992,'Bs'},{var,992,'T'}]}]},
   {clause,993,
    [{cons,993,
      {tuple,993,
       [{var,993,'P'},
        {match,993,
         {bin,993,
          [{bin_element,993,{var,993,'_Sz'},{integer,993,32},default},
           {bin_element,993,{var,993,'B0'},default,[binary]}]},
         {var,993,'B'}}]},
      {var,993,'Bs'}},
     {var,993,'T'}],
    [],
    [{match,994,
      {var,994,'Overwrite'},
      {'case',995,
       {'catch',995,{call,995,{atom,995,binary_to_term},[{var,995,'B0'}]}},
       [{clause,996,
         [{tuple,996,[{atom,996,'EXIT'},{var,996,'_'}]}],
         [],
         [{match,997,
           {bin,997,
            [{bin_element,997,{var,997,'_Sz1'},{integer,997,32},default},
             {bin_element,997,{var,997,'B1'},default,[binary]}]},
           {var,997,'B0'}},
          {'case',998,
           {'catch',998,{call,998,{atom,998,binary_to_term},[{var,998,'B1'}]}},
           [{clause,999,
             [{tuple,999,[{atom,999,'EXIT'},{var,999,'_'}]}],
             [],
             [{atom,1000,false}]},
            {clause,1001,[{var,1001,'_'}],[],[{atom,1002,true}]}]}]},
        {clause,1004,[{var,1004,'_'}],[],[{atom,1005,true}]}]}},
     {'if',1007,
      [{clause,1008,[],
        [[{var,1008,'Overwrite'}]],
        [{call,1010,
          {atom,1010,dm},
          [{cons,1010,
            {tuple,1010,
             [{op,1010,'-',{var,1010,'P'},{integer,1010,8}},
              {bin,1010,
               [{bin_element,1010,
                 {op,1010,'+',
                  {call,1010,{atom,1010,byte_size},[{var,1010,'B'}]},
                  {integer,1010,8}},
                 {integer,1010,32},
                 default},
                {bin_element,34,
                 {integer,34,305419896},
                 {integer,1010,32},
                 default},
                {bin_element,1010,{var,1010,'B'},default,[binary]}]}]},
            {var,1010,'Bs'}},
           {var,1010,'T'}]}]},
       {clause,1011,[],
        [[{atom,1011,true}]],
        [{call,1012,
          {atom,1012,dm},
          [{op,1012,'++',
            {call,1012,
             {atom,1012,segment_fragment_to_pointers},
             [{var,1012,'P'},{var,1012,'B'}]},
            {var,1012,'Bs'}},
           {var,1012,'T'}]}]}]}]},
   {clause,1014,[{nil,1014},{var,1014,'_T'}],[],[{atom,1015,ok}]}]},
 {function,1017,segment_fragment_to_pointers,2,
  [{clause,1017,[{var,1017,'_P'},{bin,1017,[]}],[],[{nil,1018}]},
   {clause,1019,
    [{var,1019,'P'},
     {bin,1019,
      [{bin_element,1019,{var,1019,'SzP'},{integer,1019,8},[binary]},
       {bin_element,1019,{var,1019,'B'},default,[binary]}]}],
    [],
    [{cons,1020,
      {tuple,1020,[{var,1020,'P'},{var,1020,'SzP'}]},
      {call,1020,
       {atom,1020,segment_fragment_to_pointers},
       [{op,1020,'+',{var,1020,'P'},{integer,1020,8}},{var,1020,'B'}]}}]}]},
 {function,1022,prev,2,
  [{clause,1022,
    [{var,1022,'P'},{var,1022,'T'}],
    [],
    [{'case',1023,
      {call,1023,
       {remote,1023,{atom,1023,ets},{atom,1023,prev}},
       [{var,1023,'T'},{var,1023,'P'}]},
      [{clause,1024,[{atom,1024,'$end_of_table'}],[],[{atom,1024,ok}]},
       {clause,1025,
        [{var,1025,'Prev'}],
        [],
        [{'case',1026,
          {call,1026,
           {remote,1026,{atom,1026,ets},{atom,1026,lookup}},
           [{var,1026,'T'},{var,1026,'Prev'}]},
          [{clause,1027,
            [{cons,1027,
              {tuple,1027,
               [{var,1027,'Prev'},
                {tuple,1027,
                 [{atom,1027,pointer},{var,1027,'_Ptr'},{var,1027,'_'}]}]},
              {nil,1027}}],
            [[{op,1027,'>',
               {op,1027,'+',{var,1027,'Prev'},{integer,1027,8}},
               {var,1027,'P'}}]],
            [{tuple,1028,[{var,1028,'Prev'},{integer,1028,8}]}]},
           {clause,1029,
            [{cons,1029,
              {tuple,1029,
               [{var,1029,'Prev'},
                {tuple,1029,
                 [{atom,1029,slot},{var,1029,'_'},{var,1029,'Sz'}]}]},
              {nil,1029}}],
            [[{op,1029,'>',
               {op,1029,'+',{var,1029,'Prev'},{var,1029,'Sz'}},
               {var,1029,'P'}}]],
            [{tuple,1030,[{var,1030,'Prev'},{var,1030,'Sz'}]}]},
           {clause,1031,[{var,1031,'_'}],[],[{atom,1032,ok}]}]}]}]}]}]},
 {function,1036,next,3,
  [{clause,1036,
    [{var,1036,'P'},{var,1036,'PSz'},{var,1036,'T'}],
    [],
    [{'case',1037,
      {call,1037,
       {remote,1037,{atom,1037,ets},{atom,1037,next}},
       [{var,1037,'T'},{var,1037,'P'}]},
      [{clause,1038,[{atom,1038,'$end_of_table'}],[],[{atom,1038,ok}]},
       {clause,1039,
        [{var,1039,'Next'}],
        [[{op,1039,'>',
           {op,1039,'+',{var,1039,'P'},{var,1039,'PSz'}},
           {var,1039,'Next'}}]],
        [{tuple,1040,[{atom,1040,next},{var,1040,'Next'}]}]},
       {clause,1041,[{var,1041,'_'}],[],[{atom,1042,ok}]}]}]}]},
 {function,1067,collect_tree,3,
  [{clause,1067,
    [{atom,1067,v},{var,1067,'_TI'},{var,1067,'Acc'}],
    [],
    [{var,1067,'Acc'}]},
   {clause,1068,
    [{var,1068,'T'},{var,1068,'TI'},{var,1068,'Acc'}],
    [],
    [{match,1069,
      {var,1069,'Pow'},
      {op,42,'bsl',
       {integer,42,1},
       {op,1069,'-',{var,1069,'TI'},{integer,1069,1}}}},
     {call,1070,
      {atom,1070,collect_tree2},
      [{var,1070,'T'},{var,1070,'Pow'},{var,1070,'Acc'}]}]}]},
 {function,1072,collect_tree2,3,
  [{clause,1072,
    [{var,1072,'Tree'},{var,1072,'Pow'},{var,1072,'Acc'}],
    [],
    [{match,1073,
      {var,1073,'S'},
      {call,1073,{atom,1073,bplus_get_size},[{var,1073,'Tree'}]}},
     {'case',1074,
      {call,1054,{atom,1054,element},[{integer,1054,1},{var,1074,'Tree'}]},
      [{clause,1075,
        [{atom,1075,l}],
        [],
        [{call,1076,
          {atom,1076,collect_leaf},
          [{var,1076,'Tree'},
           {var,1076,'S'},
           {var,1076,'Pow'},
           {var,1076,'Acc'}]}]},
       {clause,1077,
        [{atom,1077,n}],
        [],
        [{call,1078,
          {atom,1078,collect_node},
          [{var,1078,'Tree'},
           {var,1078,'S'},
           {var,1078,'Pow'},
           {var,1078,'Acc'}]}]}]}]}]},
 {function,1081,collect_leaf,4,
  [{clause,1081,
    [{var,1081,'_Leaf'},{integer,1081,0},{var,1081,'_Pow'},{var,1081,'Acc'}],
    [],
    [{var,1082,'Acc'}]},
   {clause,1083,
    [{var,1083,'Leaf'},{var,1083,'I'},{var,1083,'Pow'},{var,1083,'Acc'}],
    [],
    [{match,1084,
      {var,1084,'Key'},
      {call,1064,
       {atom,1064,element},
       [{op,1064,'+',{var,1084,'I'},{integer,1064,1}},{var,1084,'Leaf'}]}},
     {match,1085,
      {var,1085,'V'},
      {tuple,1085,
       [{var,1085,'Key'},{op,1085,'+',{var,1085,'Key'},{var,1085,'Pow'}}]}},
     {call,1086,
      {atom,1086,collect_leaf},
      [{var,1086,'Leaf'},
       {op,1086,'-',{var,1086,'I'},{integer,1086,1}},
       {var,1086,'Pow'},
       {cons,1086,{var,1086,'V'},{var,1086,'Acc'}}]}]}]},
 {function,1088,collect_node,4,
  [{clause,1088,
    [{var,1088,'_Node'},{integer,1088,0},{var,1088,'_Pow'},{var,1088,'Acc'}],
    [],
    [{var,1089,'Acc'}]},
   {clause,1090,
    [{var,1090,'Node'},{var,1090,'I'},{var,1090,'Pow'},{var,1090,'Acc'}],
    [],
    [{match,1091,
      {var,1091,'Acc1'},
      {call,1091,
       {atom,1091,collect_tree2},
       [{call,1091,
         {atom,1091,bplus_get_tree},
         [{var,1091,'Node'},{var,1091,'I'}]},
        {var,1091,'Pow'},
        {var,1091,'Acc'}]}},
     {call,1092,
      {atom,1092,collect_node},
      [{var,1092,'Node'},
       {op,1092,'-',{var,1092,'I'},{integer,1092,1}},
       {var,1092,'Pow'},
       {var,1092,'Acc1'}]}]}]},
 {function,1095,tree_to_bin,5,
  [{clause,1095,
    [{atom,1095,v},
     {var,1095,'_F'},
     {var,1095,'_Max'},
     {var,1095,'Ws'},
     {var,1095,'WsSz'}],
    [],
    [{tuple,1095,[{var,1095,'Ws'},{var,1095,'WsSz'}]}]},
   {clause,1096,
    [{var,1096,'T'},
     {var,1096,'F'},
     {var,1096,'Max'},
     {var,1096,'Ws'},
     {var,1096,'WsSz'}],
    [],
    [{match,1097,
      {tuple,1097,
       [{var,1097,'N'},{var,1097,'L1'},{var,1097,'Ws1'},{var,1097,'WsSz1'}]},
      {call,1097,
       {atom,1097,tree_to_bin2},
       [{var,1097,'T'},
        {var,1097,'F'},
        {var,1097,'Max'},
        {integer,1097,0},
        {nil,1097},
        {var,1097,'Ws'},
        {var,1097,'WsSz'}]}},
     {match,1098,
      {tuple,1098,
       [{var,1098,'N1'},{var,1098,'L2'},{var,1098,'Ws2'},{var,1098,'WsSz2'}]},
      {call,1098,
       {var,1098,'F'},
       [{var,1098,'N'},
        {call,1098,
         {remote,1098,{atom,1098,lists},{atom,1098,reverse}},
         [{var,1098,'L1'}]},
        {var,1098,'Ws1'},
        {var,1098,'WsSz1'}]}},
     {match,1099,
      {tuple,1099,
       [{integer,1099,0},{nil,1099},{var,1099,'NWs'},{var,1099,'NWsSz'}]},
      {call,1099,
       {var,1099,'F'},
       [{var,1099,'N1'},{var,1099,'L2'},{var,1099,'Ws2'},{var,1099,'WsSz2'}]}},
     {tuple,1100,[{var,1100,'NWs'},{var,1100,'NWsSz'}]}]}]},
 {function,1102,tree_to_bin2,7,
  [{clause,1102,
    [{var,1102,'Tree'},
     {var,1102,'F'},
     {var,1102,'Max'},
     {var,1102,'N'},
     {var,1102,'Acc'},
     {var,1102,'Ws'},
     {var,1102,'WsSz'}],
    [[{op,1102,'>=',{var,1102,'N'},{var,1102,'Max'}}]],
    [{match,1103,
      {tuple,1103,
       [{var,1103,'NN'},
        {var,1103,'NAcc'},
        {var,1103,'NWs'},
        {var,1103,'NWsSz'}]},
      {call,1103,
       {var,1103,'F'},
       [{var,1103,'N'},
        {call,1103,
         {remote,1103,{atom,1103,lists},{atom,1103,reverse}},
         [{var,1103,'Acc'}]},
        {var,1103,'Ws'},
        {var,1103,'WsSz'}]}},
     {call,1104,
      {atom,1104,tree_to_bin2},
      [{var,1104,'Tree'},
       {var,1104,'F'},
       {var,1104,'Max'},
       {var,1104,'NN'},
       {call,1104,
        {remote,1104,{atom,1104,lists},{atom,1104,reverse}},
        [{var,1104,'NAcc'}]},
       {var,1104,'NWs'},
       {var,1104,'NWsSz'}]}]},
   {clause,1105,
    [{var,1105,'Tree'},
     {var,1105,'F'},
     {var,1105,'Max'},
     {var,1105,'N'},
     {var,1105,'Acc'},
     {var,1105,'Ws'},
     {var,1105,'WsSz'}],
    [],
    [{match,1106,
      {var,1106,'S'},
      {call,1106,{atom,1106,bplus_get_size},[{var,1106,'Tree'}]}},
     {'case',1107,
      {call,1054,{atom,1054,element},[{integer,1054,1},{var,1107,'Tree'}]},
      [{clause,1108,
        [{atom,1108,l}],
        [],
        [{tuple,1109,
          [{op,1109,'+',{var,1109,'N'},{var,1109,'S'}},
           {call,1109,
            {atom,1109,leaf_to_bin},
            [{call,1109,{atom,1109,bplus_leaf_to_list},[{var,1109,'Tree'}]},
             {var,1109,'Acc'}]},
           {var,1109,'Ws'},
           {var,1109,'WsSz'}]}]},
       {clause,1110,
        [{atom,1110,n}],
        [],
        [{call,1111,
          {atom,1111,node_to_bin},
          [{var,1111,'Tree'},
           {var,1111,'F'},
           {var,1111,'Max'},
           {var,1111,'N'},
           {var,1111,'Acc'},
           {integer,1111,1},
           {var,1111,'S'},
           {var,1111,'Ws'},
           {var,1111,'WsSz'}]}]}]}]}]},
 {function,1114,node_to_bin,9,
  [{clause,1114,
    [{var,1114,'_Node'},
     {var,1114,'_F'},
     {var,1114,'_Max'},
     {var,1114,'N'},
     {var,1114,'Acc'},
     {var,1114,'I'},
     {var,1114,'S'},
     {var,1114,'Ws'},
     {var,1114,'WsSz'}],
    [[{op,1114,'>',{var,1114,'I'},{var,1114,'S'}}]],
    [{tuple,1115,
      [{var,1115,'N'},{var,1115,'Acc'},{var,1115,'Ws'},{var,1115,'WsSz'}]}]},
   {clause,1116,
    [{var,1116,'Node'},
     {var,1116,'F'},
     {var,1116,'Max'},
     {var,1116,'N'},
     {var,1116,'Acc'},
     {var,1116,'I'},
     {var,1116,'S'},
     {var,1116,'Ws'},
     {var,1116,'WsSz'}],
    [],
    [{match,1117,
      {tuple,1117,
       [{var,1117,'N1'},
        {var,1117,'Acc1'},
        {var,1117,'Ws1'},
        {var,1117,'WsSz1'}]},
      {call,1118,
       {atom,1118,tree_to_bin2},
       [{call,1118,
         {atom,1118,bplus_get_tree},
         [{var,1118,'Node'},{var,1118,'I'}]},
        {var,1118,'F'},
        {var,1118,'Max'},
        {var,1118,'N'},
        {var,1118,'Acc'},
        {var,1118,'Ws'},
        {var,1118,'WsSz'}]}},
     {call,1119,
      {atom,1119,node_to_bin},
      [{var,1119,'Node'},
       {var,1119,'F'},
       {var,1119,'Max'},
       {var,1119,'N1'},
       {var,1119,'Acc1'},
       {op,1119,'+',{var,1119,'I'},{integer,1119,1}},
       {var,1119,'S'},
       {var,1119,'Ws1'},
       {var,1119,'WsSz1'}]}]}]},
 {function,1121,leaf_to_bin,2,
  [{clause,1121,
    [{cons,1121,{var,1121,'N'},{var,1121,'L'}},{var,1121,'Acc'}],
    [],
    [{call,1122,
      {atom,1122,leaf_to_bin},
      [{var,1122,'L'},
       {cons,1122,
        {bin,1122,
         [{bin_element,1122,{var,1122,'N'},{integer,1122,32},default}]},
        {var,1122,'Acc'}}]}]},
   {clause,1123,[{nil,1123},{var,1123,'Acc'}],[],[{var,1124,'Acc'}]}]},
 {function,1127,list_to_tree,1,
  [{clause,1127,
    [{var,1127,'L'}],
    [],
    [{call,1128,
      {atom,1128,leafs_to_nodes},
      [{var,1128,'L'},
       {call,1128,{atom,1128,length},[{var,1128,'L'}]},
       {'fun',1128,{function,bplus_mk_leaf,1}},
       {nil,1128}]}]}]},
 {function,1130,leafs_to_nodes,4,
  [{clause,1130,
    [{nil,1130},
     {integer,1130,0},
     {var,1130,'_F'},
     {cons,1130,{var,1130,'T'},{nil,1130}}],
    [],
    [{var,1131,'T'}]},
   {clause,1132,
    [{nil,1132},{integer,1132,0},{var,1132,'_F'},{var,1132,'L'}],
    [],
    [{call,1133,
      {atom,1133,leafs_to_nodes},
      [{call,1133,
        {remote,1133,{atom,1133,lists},{atom,1133,reverse}},
        [{var,1133,'L'}]},
       {call,1133,{atom,1133,length},[{var,1133,'L'}]},
       {'fun',1133,{function,mk_node,1}},
       {nil,1133}]}]},
   {clause,1134,
    [{var,1134,'Ls'},{var,1134,'Sz'},{var,1134,'F'},{var,1134,'L'}],
    [],
    [{match,1135,
      {var,1135,'I'},
      {'if',1135,
       [{clause,1136,[],
         [[{op,1136,'=<',{var,1136,'Sz'},{integer,1136,16}}]],
         [{var,1136,'Sz'}]},
        {clause,1137,[],
         [[{op,1137,'=<',{var,1137,'Sz'},{integer,1137,32}}]],
         [{op,1137,'div',{var,1137,'Sz'},{integer,1137,2}}]},
        {clause,1138,[],[[{atom,1138,true}]],[{integer,1138,12}]}]}},
     {match,1140,
      {tuple,1140,[{var,1140,'L1'},{var,1140,'R'}]},
      {call,1140,
       {atom,1140,split_list},
       [{var,1140,'Ls'},{var,1140,'I'},{nil,1140}]}},
     {match,1141,{var,1141,'N'},{call,1141,{var,1141,'F'},[{var,1141,'L1'}]}},
     {match,1142,
      {var,1142,'Sz1'},
      {op,1142,'-',{var,1142,'Sz'},{var,1142,'I'}}},
     {call,1143,
      {atom,1143,leafs_to_nodes},
      [{var,1143,'R'},
       {var,1143,'Sz1'},
       {var,1143,'F'},
       {cons,1143,{var,1143,'N'},{var,1143,'L'}}]}]}]},
 {function,1145,mk_node,1,
  [{clause,1145,
    [{cons,1145,{var,1145,'E'},{var,1145,'Es'}}],
    [],
    [{match,1146,
      {var,1146,'NL'},
      {cons,1146,
       {var,1146,'E'},
       {call,1146,
        {remote,1146,{atom,1146,lists},{atom,1146,foldr}},
        [{'fun',1146,
          {clauses,
           [{clause,1146,
             [{var,1146,'X'},{var,1146,'A'}],
             [],
             [{cons,1146,
               {call,1146,{atom,1146,get_first_key},[{var,1146,'X'}]},
               {cons,1146,{var,1146,'X'},{var,1146,'A'}}}]}]}},
         {nil,1146},
         {var,1146,'Es'}]}}},
     {call,1147,{atom,1147,bplus_mk_node},[{var,1147,'NL'}]}]}]},
 {function,1149,split_list,3,
  [{clause,1149,
    [{var,1149,'L'},{integer,1149,0},{var,1149,'SL'}],
    [],
    [{tuple,1150,[{var,1150,'SL'},{var,1150,'L'}]}]},
   {clause,1151,
    [{cons,1151,{var,1151,'E'},{var,1151,'Es'}},
     {var,1151,'I'},
     {var,1151,'SL'}],
    [],
    [{call,1152,
      {atom,1152,split_list},
      [{var,1152,'Es'},
       {op,1152,'-',{var,1152,'I'},{integer,1152,1}},
       {cons,1152,{var,1152,'E'},{var,1152,'SL'}}]}]}]},
 {function,1154,get_first_key,1,
  [{clause,1154,
    [{var,1154,'T'}],
    [],
    [{'case',1155,
      {call,1054,{atom,1054,element},[{integer,1054,1},{var,1155,'T'}]},
      [{clause,1156,
        [{atom,1156,l}],
        [],
        [{call,1064,
          {atom,1064,element},
          [{op,1064,'+',{integer,1157,1},{integer,1064,1}},{var,1157,'T'}]}]},
       {clause,1158,
        [{atom,1158,n}],
        [],
        [{call,1159,
          {atom,1159,get_first_key},
          [{call,1159,
            {atom,1159,bplus_get_tree},
            [{var,1159,'T'},{integer,1159,1}]}]}]}]}]}]},
 {function,1163,collect_interval,5,
  [{clause,1163,
    [{atom,1163,v},
     {var,1163,'_TI'},
     {var,1163,'_L'},
     {var,1163,'_U'},
     {var,1163,'Acc'}],
    [],
    [{var,1163,'Acc'}]},
   {clause,1164,
    [{var,1164,'T'},
     {var,1164,'TI'},
     {var,1164,'L'},
     {var,1164,'U'},
     {var,1164,'Acc'}],
    [],
    [{match,1165,
      {var,1165,'Pow'},
      {op,42,'bsl',
       {integer,42,1},
       {op,1165,'-',{var,1165,'TI'},{integer,1165,1}}}},
     {call,1166,
      {atom,1166,collect_interval2},
      [{var,1166,'T'},
       {var,1166,'Pow'},
       {var,1166,'L'},
       {var,1166,'U'},
       {var,1166,'Acc'}]}]}]},
 {function,1168,collect_interval2,5,
  [{clause,1168,
    [{var,1168,'Tree'},
     {var,1168,'Pow'},
     {var,1168,'L'},
     {var,1168,'U'},
     {var,1168,'Acc'}],
    [],
    [{match,1169,
      {var,1169,'S'},
      {call,1169,{atom,1169,bplus_get_size},[{var,1169,'Tree'}]}},
     {'case',1170,
      {call,1054,{atom,1054,element},[{integer,1054,1},{var,1170,'Tree'}]},
      [{clause,1171,
        [{atom,1171,l}],
        [],
        [{call,1172,
          {atom,1172,collect_leaf_interval},
          [{var,1172,'Tree'},
           {var,1172,'S'},
           {var,1172,'Pow'},
           {var,1172,'L'},
           {var,1172,'U'},
           {var,1172,'Acc'}]}]},
       {clause,1173,
        [{atom,1173,n}],
        [],
        [{match,1174,
          {tuple,1174,[{var,1174,'Max'},{var,1174,'_'}]},
          {call,1174,
           {atom,1174,bplus_select_sub_tree},
           [{var,1174,'Tree'},{var,1174,'U'}]}},
         {match,1175,
          {tuple,1175,[{var,1175,'Min'},{var,1175,'_'}]},
          {call,1175,
           {atom,1175,bplus_select_sub_tree_2},
           [{var,1175,'Tree'},{var,1175,'L'},{var,1175,'Max'}]}},
         {call,1176,
          {atom,1176,collect_node_interval},
          [{var,1176,'Tree'},
           {var,1176,'Min'},
           {var,1176,'Max'},
           {var,1176,'Pow'},
           {var,1176,'L'},
           {var,1176,'U'},
           {var,1176,'Acc'}]}]}]}]}]},
 {function,1179,collect_leaf_interval,6,
  [{clause,1179,
    [{var,1179,'_Leaf'},
     {integer,1179,0},
     {var,1179,'_Pow'},
     {var,1179,'_L'},
     {var,1179,'_U'},
     {var,1179,'Acc'}],
    [],
    [{var,1180,'Acc'}]},
   {clause,1181,
    [{var,1181,'Leaf'},
     {var,1181,'I'},
     {var,1181,'Pow'},
     {var,1181,'L'},
     {var,1181,'U'},
     {var,1181,'Acc'}],
    [],
    [{match,1182,
      {var,1182,'Key'},
      {call,1064,
       {atom,1064,element},
       [{op,1064,'+',{var,1182,'I'},{integer,1064,1}},{var,1182,'Leaf'}]}},
     {'if',1183,
      [{clause,1184,[],
        [[{op,1184,'<',{var,1184,'Key'},{var,1184,'L'}}]],
        [{var,1185,'Acc'}]},
       {clause,1186,[],
        [[{op,1186,'>',{var,1186,'Key'},{var,1186,'U'}}]],
        [{call,1187,
          {atom,1187,collect_leaf_interval},
          [{var,1187,'Leaf'},
           {op,1187,'-',{var,1187,'I'},{integer,1187,1}},
           {var,1187,'Pow'},
           {var,1187,'L'},
           {var,1187,'U'},
           {var,1187,'Acc'}]}]},
       {clause,1188,[],
        [[{atom,1188,true}]],
        [{call,1189,
          {atom,1189,collect_leaf_interval},
          [{var,1189,'Leaf'},
           {op,1189,'-',{var,1189,'I'},{integer,1189,1}},
           {var,1189,'Pow'},
           {var,1189,'L'},
           {var,1189,'U'},
           {cons,1189,
            {tuple,1189,
             [{var,1189,'Key'},
              {op,1189,'+',{var,1189,'Key'},{var,1189,'Pow'}}]},
            {var,1189,'Acc'}}]}]}]}]}]},
 {function,1192,collect_node_interval,7,
  [{clause,1192,
    [{var,1192,'_Node'},
     {var,1192,'I'},
     {var,1192,'UP'},
     {var,1192,'_Pow'},
     {var,1192,'_L'},
     {var,1192,'_U'},
     {var,1192,'Acc'}],
    [[{op,1192,'>',{var,1192,'I'},{var,1192,'UP'}}]],
    [{var,1193,'Acc'}]},
   {clause,1194,
    [{var,1194,'Node'},
     {var,1194,'I'},
     {var,1194,'UP'},
     {var,1194,'Pow'},
     {var,1194,'L'},
     {var,1194,'U'},
     {var,1194,'Acc'}],
    [],
    [{match,1195,
      {var,1195,'Acc1'},
      {call,1195,
       {atom,1195,collect_interval2},
       [{call,1195,
         {atom,1195,bplus_get_tree},
         [{var,1195,'Node'},{var,1195,'I'}]},
        {var,1195,'Pow'},
        {var,1195,'L'},
        {var,1195,'U'},
        {var,1195,'Acc'}]}},
     {call,1196,
      {atom,1196,collect_node_interval},
      [{var,1196,'Node'},
       {op,1196,'+',{var,1196,'I'},{integer,1196,1}},
       {var,1196,'UP'},
       {var,1196,'Pow'},
       {var,1196,'L'},
       {var,1196,'U'},
       {var,1196,'Acc1'}]}]}]},
 {function,1203,bplus_empty_tree,0,[{clause,1203,[],[],[{atom,1203,v}]}]},
 {function,1210,bplus_lookup,2,
  [{clause,1210,[{atom,1210,v},{var,1210,'_Key'}],[],[{atom,1210,undefined}]},
   {clause,1211,
    [{var,1211,'Tree'},{var,1211,'Key'}],
    [],
    [{'case',1212,
      {call,1054,{atom,1054,element},[{integer,1054,1},{var,1212,'Tree'}]},
      [{clause,1213,
        [{atom,1213,l}],
        [],
        [{call,1214,
          {atom,1214,bplus_lookup_leaf},
          [{var,1214,'Key'},{var,1214,'Tree'}]}]},
       {clause,1215,
        [{atom,1215,n}],
        [],
        [{match,1216,
          {tuple,1216,[{var,1216,'_'},{var,1216,'SubTree'}]},
          {call,1216,
           {atom,1216,bplus_select_sub_tree},
           [{var,1216,'Tree'},{var,1216,'Key'}]}},
         {call,1217,
          {atom,1217,bplus_lookup},
          [{var,1217,'SubTree'},{var,1217,'Key'}]}]}]}]}]},
 {function,1224,bplus_lookup_leaf,2,
  [{clause,1224,
    [{var,1224,'Key'},{var,1224,'Leaf'}],
    [],
    [{call,1225,
      {atom,1225,bplus_lookup_leaf_2},
      [{var,1225,'Key'},
       {var,1225,'Leaf'},
       {call,1225,{atom,1225,bplus_get_size},[{var,1225,'Leaf'}]}]}]}]},
 {function,1227,bplus_lookup_leaf_2,3,
  [{clause,1227,
    [{var,1227,'_'},{var,1227,'_'},{integer,1227,0}],
    [],
    [{atom,1227,undefined}]},
   {clause,1228,
    [{var,1228,'Key'},{var,1228,'Leaf'},{var,1228,'N'}],
    [],
    [{'case',1229,
      {call,1064,
       {atom,1064,element},
       [{op,1064,'+',{var,1229,'N'},{integer,1064,1}},{var,1229,'Leaf'}]},
      [{clause,1230,
        [{var,1230,'Key'}],
        [],
        [{tuple,1230,[{atom,1230,ok},{var,1230,'Key'}]}]},
       {clause,1231,
        [{var,1231,'_'}],
        [],
        [{call,1232,
          {atom,1232,bplus_lookup_leaf_2},
          [{var,1232,'Key'},
           {var,1232,'Leaf'},
           {op,1232,'-',{var,1232,'N'},{integer,1232,1}}]}]}]}]}]},
 {function,1240,bplus_lookup_first,1,
  [{clause,1240,[{atom,1240,v}],[],[{atom,1240,undefined}]},
   {clause,1241,
    [{var,1241,'Tree'}],
    [],
    [{'case',1242,
      {call,1054,{atom,1054,element},[{integer,1054,1},{var,1242,'Tree'}]},
      [{clause,1243,
        [{atom,1243,l}],
        [],
        [{tuple,1245,
          [{atom,1245,ok},
           {call,1064,
            {atom,1064,element},
            [{op,1064,'+',{integer,1245,1},{integer,1064,1}},
             {var,1245,'Tree'}]}]}]},
       {clause,1246,
        [{atom,1246,n}],
        [],
        [{call,1248,
          {atom,1248,bplus_lookup_first},
          [{call,1248,
            {atom,1248,bplus_get_tree},
            [{var,1248,'Tree'},{integer,1248,1}]}]}]}]}]}]},
 {function,1257,bplus_lookup_next,2,
  [{clause,1257,[{atom,1257,v},{var,1257,'_'}],[],[{atom,1257,undefined}]},
   {clause,1258,
    [{var,1258,'Tree'},{var,1258,'Key'}],
    [],
    [{'case',1259,
      {call,1054,{atom,1054,element},[{integer,1054,1},{var,1259,'Tree'}]},
      [{clause,1260,
        [{atom,1260,l}],
        [],
        [{call,1261,
          {atom,1261,lookup_next_leaf},
          [{var,1261,'Key'},{var,1261,'Tree'}]}]},
       {clause,1262,
        [{atom,1262,n}],
        [],
        [{match,1263,
          {tuple,1263,[{var,1263,'Pos'},{var,1263,'SubTree'}]},
          {call,1263,
           {atom,1263,bplus_select_sub_tree},
           [{var,1263,'Tree'},{var,1263,'Key'}]}},
         {'case',1264,
          {call,1264,
           {atom,1264,bplus_lookup_next},
           [{var,1264,'SubTree'},{var,1264,'Key'}]},
          [{clause,1265,
            [{atom,1265,undefined}],
            [],
            [{match,1266,
              {var,1266,'S'},
              {call,1266,{atom,1266,bplus_get_size},[{var,1266,'Tree'}]}},
             {'if',1267,
              [{clause,1269,[],
                [[{op,1269,'>',{var,1269,'S'},{var,1269,'Pos'}}]],
                [{call,1270,
                  {atom,1270,bplus_lookup_first},
                  [{call,1270,
                    {atom,1270,bplus_get_tree},
                    [{var,1270,'Tree'},
                     {op,1270,'+',{var,1270,'Pos'},{integer,1270,1}}]}]}]},
               {clause,1272,[],
                [[{atom,1272,true}]],
                [{atom,1273,undefined}]}]}]},
           {clause,1276,
            [{var,1276,'Result'}],
            [],
            [{var,1277,'Result'}]}]}]}]}]}]},
 {function,1286,lookup_next_leaf,2,
  [{clause,1286,
    [{var,1286,'Key'},{var,1286,'Leaf'}],
    [],
    [{call,1287,
      {atom,1287,lookup_next_leaf_2},
      [{var,1287,'Key'},
       {var,1287,'Leaf'},
       {call,1287,{atom,1287,bplus_get_size},[{var,1287,'Leaf'}]},
       {integer,1287,1}]}]}]},
 {function,1289,lookup_next_leaf_2,4,
  [{clause,1289,
    [{var,1289,'Key'},{var,1289,'Leaf'},{var,1289,'Size'},{var,1289,'Size'}],
    [],
    [{match,1291,
      {var,1291,'K'},
      {call,1064,
       {atom,1064,element},
       [{op,1064,'+',{var,1291,'Size'},{integer,1064,1}},{var,1291,'Leaf'}]}},
     {'if',1292,
      [{clause,1293,[],
        [[{op,1293,'>',{var,1293,'K'},{var,1293,'Key'}}]],
        [{tuple,1294,
          [{atom,1294,ok},
           {call,1064,
            {atom,1064,element},
            [{op,1064,'+',{var,1294,'Size'},{integer,1064,1}},
             {var,1294,'Leaf'}]}]}]},
       {clause,1295,[],[[{atom,1295,true}]],[{atom,1296,undefined}]}]}]},
   {clause,1298,
    [{var,1298,'Key'},{var,1298,'Leaf'},{var,1298,'Size'},{var,1298,'N'}],
    [],
    [{match,1299,
      {var,1299,'K'},
      {call,1064,
       {atom,1064,element},
       [{op,1064,'+',{var,1299,'N'},{integer,1064,1}},{var,1299,'Leaf'}]}},
     {'if',1300,
      [{clause,1301,[],
        [[{op,1301,'<',{var,1301,'K'},{var,1301,'Key'}}]],
        [{call,1303,
          {atom,1303,lookup_next_leaf_2},
          [{var,1303,'Key'},
           {var,1303,'Leaf'},
           {var,1303,'Size'},
           {op,1303,'+',{var,1303,'N'},{integer,1303,1}}]}]},
       {clause,1304,[],
        [[{op,1304,'==',{var,1304,'Key'},{var,1304,'K'}}]],
        [{tuple,1306,
          [{atom,1306,ok},
           {call,1064,
            {atom,1064,element},
            [{op,1064,'+',
              {op,1306,'+',{var,1306,'N'},{integer,1306,1}},
              {integer,1064,1}},
             {var,1306,'Leaf'}]}]}]},
       {clause,1307,[],
        [[{atom,1307,true}]],
        [{tuple,1310,
          [{atom,1310,ok},
           {call,1064,
            {atom,1064,element},
            [{op,1064,'+',{var,1310,'N'},{integer,1064,1}},
             {var,1310,'Leaf'}]}]}]}]}]}]},
 {function,1318,bplus_insert,2,
  [{clause,1318,
    [{atom,1318,v},{var,1318,'Key'}],
    [],
    [{call,1318,
      {atom,1318,bplus_mk_leaf},
      [{cons,1318,{var,1318,'Key'},{nil,1318}}]}]},
   {clause,1319,
    [{var,1319,'Tree'},{var,1319,'Key'}],
    [],
    [{match,1320,
      {var,1320,'NewTree'},
      {call,1320,
       {atom,1320,bplus_insert_in},
       [{var,1320,'Tree'},{var,1320,'Key'}]}},
     {'case',1321,
      {op,1058,'>',
       {call,1058,{atom,1058,bplus_get_size},[{var,1321,'NewTree'}]},
       {integer,1049,16}},
      [{clause,1322,[{atom,1322,false}],[],[{var,1323,'NewTree'}]},
       {clause,1325,
        [{atom,1325,true}],
        [],
        [{match,1326,
          {tuple,1326,
           [{var,1326,'LTree'},{var,1326,'DKey'},{var,1326,'RTree'}]},
          {'case',1327,
           {call,1054,
            {atom,1054,element},
            [{integer,1054,1},{var,1327,'NewTree'}]},
           [{clause,1328,
             [{atom,1328,l}],
             [],
             [{call,1329,
               {atom,1329,bplus_split_leaf},
               [{var,1329,'NewTree'}]}]},
            {clause,1330,
             [{atom,1330,n}],
             [],
             [{call,1331,
               {atom,1331,bplus_split_node},
               [{var,1331,'NewTree'}]}]}]}},
         {call,1333,
          {atom,1333,bplus_mk_node},
          [{cons,1333,
            {var,1333,'LTree'},
            {cons,1333,
             {var,1333,'DKey'},
             {cons,1333,{var,1333,'RTree'},{nil,1333}}}}]}]}]}]}]},
 {function,1341,bplus_delete,2,
  [{clause,1341,[{atom,1341,v},{var,1341,'_Key'}],[],[{atom,1341,v}]},
   {clause,1342,
    [{var,1342,'Tree'},{var,1342,'Key'}],
    [],
    [{match,1343,
      {var,1343,'NewTree'},
      {call,1343,
       {atom,1343,bplus_delete_in},
       [{var,1343,'Tree'},{var,1343,'Key'}]}},
     {match,1344,
      {var,1344,'S'},
      {call,1344,{atom,1344,bplus_get_size},[{var,1344,'NewTree'}]}},
     {'case',1345,
      {call,1054,{atom,1054,element},[{integer,1054,1},{var,1345,'NewTree'}]},
      [{clause,1346,
        [{atom,1346,l}],
        [],
        [{'if',1347,
          [{clause,1348,[],
            [[{op,1348,'=:=',{var,1348,'S'},{integer,1348,0}}]],
            [{atom,1349,v}]},
           {clause,1350,[],[[{atom,1350,true}]],[{var,1351,'NewTree'}]}]}]},
       {clause,1353,
        [{atom,1353,n}],
        [],
        [{'if',1354,
          [{clause,1355,[],
            [[{op,1355,'=:=',{var,1355,'S'},{integer,1355,1}}]],
            [{call,1356,
              {atom,1356,bplus_get_tree},
              [{var,1356,'NewTree'},{integer,1356,1}]}]},
           {clause,1357,[],
            [[{atom,1357,true}]],
            [{var,1358,'NewTree'}]}]}]}]}]}]},
 {function,1367,bplus_insert_in,2,
  [{clause,1367,
    [{var,1367,'Tree'},{var,1367,'Key'}],
    [],
    [{'case',1368,
      {call,1054,{atom,1054,element},[{integer,1054,1},{var,1368,'Tree'}]},
      [{clause,1369,
        [{atom,1369,l}],
        [],
        [{call,1370,
          {atom,1370,bplus_insert_in_leaf},
          [{var,1370,'Tree'},{var,1370,'Key'}]}]},
       {clause,1371,
        [{atom,1371,n}],
        [],
        [{match,1372,
          {tuple,1372,[{var,1372,'Pos'},{var,1372,'SubTree'}]},
          {call,1372,
           {atom,1372,bplus_select_sub_tree},
           [{var,1372,'Tree'},{var,1372,'Key'}]}},
         {match,1374,
          {var,1374,'NewSubTree'},
          {call,1374,
           {atom,1374,bplus_insert_in},
           [{var,1374,'SubTree'},{var,1374,'Key'}]}},
         {'case',1375,
          {op,1058,'>',
           {call,1058,{atom,1058,bplus_get_size},[{var,1375,'NewSubTree'}]},
           {integer,1049,16}},
          [{clause,1376,
            [{atom,1376,false}],
            [],
            [{call,1377,
              {atom,1377,bplus_put_subtree},
              [{var,1377,'Tree'},
               {cons,1377,
                {var,1377,'NewSubTree'},
                {cons,1377,{var,1377,'Pos'},{nil,1377}}}]}]},
           {clause,1378,
            [{atom,1378,true}],
            [],
            [{'case',1379,
              {call,1379,
               {atom,1379,bplus_reorganize_tree_ins},
               [{var,1379,'Tree'},{var,1379,'NewSubTree'},{var,1379,'Pos'}]},
              [{clause,1380,
                [{tuple,1380,
                  [{atom,1380,left},
                   {tuple,1380,
                    [{var,1380,'LeftT'},
                     {var,1380,'DKey'},
                     {var,1380,'MiddleT'}]}]}],
                [],
                [{call,1381,
                  {atom,1381,bplus_put_subtree},
                  [{call,1381,
                    {atom,1381,bplus_put_lkey},
                    [{var,1381,'Tree'},{var,1381,'DKey'},{var,1381,'Pos'}]},
                   {cons,1382,
                    {var,1382,'LeftT'},
                    {cons,1382,
                     {op,1382,'-',{var,1382,'Pos'},{integer,1382,1}},
                     {cons,1382,
                      {var,1382,'MiddleT'},
                      {cons,1382,{var,1382,'Pos'},{nil,1382}}}}}]}]},
               {clause,1383,
                [{tuple,1383,
                  [{atom,1383,right},
                   {tuple,1383,
                    [{var,1383,'MiddleT'},
                     {var,1383,'DKey'},
                     {var,1383,'RightT'}]}]}],
                [],
                [{call,1384,
                  {atom,1384,bplus_put_subtree},
                  [{call,1384,
                    {atom,1384,bplus_put_rkey},
                    [{var,1384,'Tree'},{var,1384,'DKey'},{var,1384,'Pos'}]},
                   {cons,1385,
                    {var,1385,'MiddleT'},
                    {cons,1385,
                     {var,1385,'Pos'},
                     {cons,1385,
                      {var,1385,'RightT'},
                      {cons,1385,
                       {op,1385,'+',{var,1385,'Pos'},{integer,1385,1}},
                       {nil,1385}}}}}]}]},
               {clause,1386,
                [{tuple,1386,
                  [{atom,1386,split},
                   {tuple,1386,
                    [{var,1386,'LeftT'},
                     {var,1386,'DKey'},
                     {var,1386,'RightT'}]}]}],
                [],
                [{call,1387,
                  {atom,1387,bplus_extend_tree},
                  [{var,1387,'Tree'},
                   {tuple,1387,
                    [{var,1387,'LeftT'},
                     {var,1387,'DKey'},
                     {var,1387,'RightT'}]},
                   {var,1387,'Pos'}]}]}]}]}]}]}]}]}]},
 {function,1395,bplus_insert_in_leaf,2,
  [{clause,1395,
    [{var,1395,'Leaf'},{var,1395,'Key'}],
    [],
    [{call,1396,
      {atom,1396,bplus_insert_in_leaf_2},
      [{var,1396,'Leaf'},
       {var,1396,'Key'},
       {call,1396,{atom,1396,bplus_get_size},[{var,1396,'Leaf'}]},
       {nil,1396}]}]}]},
 {function,1398,bplus_insert_in_leaf_2,4,
  [{clause,1398,
    [{var,1398,'Leaf'},{var,1398,'Key'},{integer,1398,0},{var,1398,'Accum'}],
    [],
    [{call,1399,
      {atom,1399,bplus_insert_in_leaf_3},
      [{var,1399,'Leaf'},
       {integer,1399,0},
       {cons,1399,{var,1399,'Key'},{var,1399,'Accum'}}]}]},
   {clause,1400,
    [{var,1400,'Leaf'},{var,1400,'Key'},{var,1400,'N'},{var,1400,'Accum'}],
    [],
    [{match,1401,
      {var,1401,'K'},
      {call,1064,
       {atom,1064,element},
       [{op,1064,'+',{var,1401,'N'},{integer,1064,1}},{var,1401,'Leaf'}]}},
     {'if',1402,
      [{clause,1403,[],
        [[{op,1403,'<',{var,1403,'Key'},{var,1403,'K'}}]],
        [{call,1405,
          {atom,1405,bplus_insert_in_leaf_2},
          [{var,1405,'Leaf'},
           {var,1405,'Key'},
           {op,1405,'-',{var,1405,'N'},{integer,1405,1}},
           {cons,1405,{var,1405,'K'},{var,1405,'Accum'}}]}]},
       {clause,1406,[],
        [[{op,1406,'<',{var,1406,'K'},{var,1406,'Key'}}]],
        [{call,1408,
          {atom,1408,bplus_insert_in_leaf_3},
          [{var,1408,'Leaf'},
           {op,1408,'-',{var,1408,'N'},{integer,1408,1}},
           {cons,1408,
            {var,1408,'K'},
            {cons,1408,{var,1408,'Key'},{var,1408,'Accum'}}}]}]},
       {clause,1409,[],
        [[{op,1409,'==',{var,1409,'K'},{var,1409,'Key'}}]],
        [{call,1411,
          {atom,1411,bplus_insert_in_leaf_3},
          [{var,1411,'Leaf'},
           {op,1411,'-',{var,1411,'N'},{integer,1411,1}},
           {cons,1411,{var,1411,'Key'},{var,1411,'Accum'}}]}]}]}]}]},
 {function,1414,bplus_insert_in_leaf_3,3,
  [{clause,1414,
    [{var,1414,'_Leaf'},{integer,1414,0},{var,1414,'LeafList'}],
    [],
    [{call,1415,{atom,1415,bplus_mk_leaf},[{var,1415,'LeafList'}]}]},
   {clause,1416,
    [{var,1416,'Leaf'},{var,1416,'N'},{var,1416,'LeafList'}],
    [],
    [{call,1417,
      {atom,1417,bplus_insert_in_leaf_3},
      [{var,1417,'Leaf'},
       {op,1417,'-',{var,1417,'N'},{integer,1417,1}},
       {cons,1417,
        {call,1064,
         {atom,1064,element},
         [{op,1064,'+',{var,1417,'N'},{integer,1064,1}},{var,1417,'Leaf'}]},
        {var,1417,'LeafList'}}]}]}]},
 {function,1424,bplus_delete_in,2,
  [{clause,1424,
    [{var,1424,'Tree'},{var,1424,'Key'}],
    [],
    [{'case',1425,
      {call,1054,{atom,1054,element},[{integer,1054,1},{var,1425,'Tree'}]},
      [{clause,1426,
        [{atom,1426,l}],
        [],
        [{call,1427,
          {atom,1427,bplus_delete_in_leaf},
          [{var,1427,'Tree'},{var,1427,'Key'}]}]},
       {clause,1428,
        [{atom,1428,n}],
        [],
        [{match,1429,
          {tuple,1429,[{var,1429,'Pos'},{var,1429,'SubTree'}]},
          {call,1429,
           {atom,1429,bplus_select_sub_tree},
           [{var,1429,'Tree'},{var,1429,'Key'}]}},
         {match,1431,
          {var,1431,'NewSubTree'},
          {call,1431,
           {atom,1431,bplus_delete_in},
           [{var,1431,'SubTree'},{var,1431,'Key'}]}},
         {'case',1433,
          {op,1060,'<',
           {call,1060,{atom,1060,bplus_get_size},[{var,1433,'NewSubTree'}]},
           {integer,1050,8}},
          [{clause,1434,
            [{atom,1434,false}],
            [],
            [{call,1435,
              {atom,1435,bplus_put_subtree},
              [{var,1435,'Tree'},
               {cons,1435,
                {var,1435,'NewSubTree'},
                {cons,1435,{var,1435,'Pos'},{nil,1435}}}]}]},
           {clause,1436,
            [{atom,1436,true}],
            [],
            [{'case',1437,
              {call,1437,
               {atom,1437,bplus_reorganize_tree_del},
               [{var,1437,'Tree'},{var,1437,'NewSubTree'},{var,1437,'Pos'}]},
              [{clause,1438,
                [{tuple,1438,
                  [{atom,1438,left},
                   {tuple,1438,
                    [{var,1438,'LeftT'},
                     {var,1438,'DKey'},
                     {var,1438,'MiddleT'}]}]}],
                [],
                [{call,1439,
                  {atom,1439,bplus_put_subtree},
                  [{call,1439,
                    {atom,1439,bplus_put_lkey},
                    [{var,1439,'Tree'},{var,1439,'DKey'},{var,1439,'Pos'}]},
                   {cons,1440,
                    {var,1440,'LeftT'},
                    {cons,1440,
                     {op,1440,'-',{var,1440,'Pos'},{integer,1440,1}},
                     {cons,1440,
                      {var,1440,'MiddleT'},
                      {cons,1440,{var,1440,'Pos'},{nil,1440}}}}}]}]},
               {clause,1441,
                [{tuple,1441,
                  [{atom,1441,right},
                   {tuple,1441,
                    [{var,1441,'MiddleT'},
                     {var,1441,'DKey'},
                     {var,1441,'RightT'}]}]}],
                [],
                [{call,1442,
                  {atom,1442,bplus_put_subtree},
                  [{call,1442,
                    {atom,1442,bplus_put_rkey},
                    [{var,1442,'Tree'},{var,1442,'DKey'},{var,1442,'Pos'}]},
                   {cons,1443,
                    {var,1443,'MiddleT'},
                    {cons,1443,
                     {var,1443,'Pos'},
                     {cons,1443,
                      {var,1443,'RightT'},
                      {cons,1443,
                       {op,1443,'+',{var,1443,'Pos'},{integer,1443,1}},
                       {nil,1443}}}}}]}]},
               {clause,1444,
                [{tuple,1444,[{atom,1444,join_left},{var,1444,'JoinedTree'}]}],
                [],
                [{call,1445,
                  {atom,1445,bplus_joinleft_tree},
                  [{var,1445,'Tree'},
                   {var,1445,'JoinedTree'},
                   {var,1445,'Pos'}]}]},
               {clause,1446,
                [{tuple,1446,
                  [{atom,1446,join_right},{var,1446,'JoinedTree'}]}],
                [],
                [{call,1447,
                  {atom,1447,bplus_joinright_tree},
                  [{var,1447,'Tree'},
                   {var,1447,'JoinedTree'},
                   {var,1447,'Pos'}]}]}]}]}]}]}]}]}]},
 {function,1455,bplus_delete_in_leaf,2,
  [{clause,1455,
    [{var,1455,'Leaf'},{var,1455,'Key'}],
    [],
    [{call,1456,
      {atom,1456,bplus_delete_in_leaf_2},
      [{var,1456,'Leaf'},
       {var,1456,'Key'},
       {call,1456,{atom,1456,bplus_get_size},[{var,1456,'Leaf'}]},
       {nil,1456}]}]}]},
 {function,1458,bplus_delete_in_leaf_2,4,
  [{clause,1458,
    [{var,1458,'Leaf'},{var,1458,'_'},{integer,1458,0},{var,1458,'_'}],
    [],
    [{var,1458,'Leaf'}]},
   {clause,1459,
    [{var,1459,'Leaf'},{var,1459,'Key'},{var,1459,'N'},{var,1459,'Accum'}],
    [],
    [{match,1460,
      {var,1460,'K'},
      {call,1064,
       {atom,1064,element},
       [{op,1064,'+',{var,1460,'N'},{integer,1064,1}},{var,1460,'Leaf'}]}},
     {'if',1461,
      [{clause,1462,[],
        [[{op,1462,'==',{var,1462,'Key'},{var,1462,'K'}}]],
        [{call,1464,
          {atom,1464,bplus_delete_in_leaf_3},
          [{var,1464,'Leaf'},
           {op,1464,'-',{var,1464,'N'},{integer,1464,1}},
           {var,1464,'Accum'}]}]},
       {clause,1465,[],
        [[{atom,1465,true}]],
        [{call,1466,
          {atom,1466,bplus_delete_in_leaf_2},
          [{var,1466,'Leaf'},
           {var,1466,'Key'},
           {op,1466,'-',{var,1466,'N'},{integer,1466,1}},
           {cons,1466,{var,1466,'K'},{var,1466,'Accum'}}]}]}]}]}]},
 {function,1469,bplus_delete_in_leaf_3,3,
  [{clause,1469,
    [{var,1469,'_Leaf'},{integer,1469,0},{var,1469,'LeafList'}],
    [],
    [{call,1470,{atom,1470,bplus_mk_leaf},[{var,1470,'LeafList'}]}]},
   {clause,1471,
    [{var,1471,'Leaf'},{var,1471,'N'},{var,1471,'LeafList'}],
    [],
    [{call,1472,
      {atom,1472,bplus_delete_in_leaf_3},
      [{var,1472,'Leaf'},
       {op,1472,'-',{var,1472,'N'},{integer,1472,1}},
       {cons,1472,
        {call,1064,
         {atom,1064,element},
         [{op,1064,'+',{var,1472,'N'},{integer,1064,1}},{var,1472,'Leaf'}]},
        {var,1472,'LeafList'}}]}]}]},
 {function,1479,bplus_select_sub_tree,2,
  [{clause,1479,
    [{var,1479,'Tree'},{var,1479,'Key'}],
    [],
    [{call,1480,
      {atom,1480,bplus_select_sub_tree_2},
      [{var,1480,'Tree'},
       {var,1480,'Key'},
       {call,1480,{atom,1480,bplus_get_size},[{var,1480,'Tree'}]}]}]}]},
 {function,1482,bplus_select_sub_tree_2,3,
  [{clause,1482,
    [{var,1482,'Tree'},{var,1482,'_Key'},{integer,1482,1}],
    [],
    [{tuple,1482,
      [{integer,1482,1},
       {call,1482,
        {atom,1482,bplus_get_tree},
        [{var,1482,'Tree'},{integer,1482,1}]}]}]},
   {clause,1483,
    [{var,1483,'Tree'},{var,1483,'Key'},{var,1483,'N'}],
    [],
    [{match,1484,
      {var,1484,'K'},
      {call,1484,
       {atom,1484,bplus_get_lkey},
       [{var,1484,'Tree'},{var,1484,'N'}]}},
     {'if',1485,
      [{clause,1486,[],
        [[{op,1486,'>',{var,1486,'K'},{var,1486,'Key'}}]],
        [{call,1487,
          {atom,1487,bplus_select_sub_tree_2},
          [{var,1487,'Tree'},
           {var,1487,'Key'},
           {op,1487,'-',{var,1487,'N'},{integer,1487,1}}]}]},
       {clause,1488,[],
        [[{op,1488,'=<',{var,1488,'K'},{var,1488,'Key'}}]],
        [{tuple,1490,
          [{var,1490,'N'},
           {call,1490,
            {atom,1490,bplus_get_tree},
            [{var,1490,'Tree'},{var,1490,'N'}]}]}]}]}]}]},
 {function,1497,bplus_reorganize_tree_ins,3,
  [{clause,1497,
    [{var,1497,'Tree'},{var,1497,'NewSubTree'},{integer,1497,1}],
    [],
    [{match,1498,
      {var,1498,'RTree'},
      {call,1498,
       {atom,1498,bplus_get_tree},
       [{var,1498,'Tree'},{integer,1498,2}]}},
     {'case',1499,
      {op,1056,'>=',
       {call,1056,{atom,1056,bplus_get_size},[{var,1499,'RTree'}]},
       {integer,1049,16}},
      [{clause,1500,
        [{atom,1500,false}],
        [],
        [{call,1501,
          {atom,1501,bplus_reorganize_tree_r},
          [{var,1501,'Tree'},
           {var,1501,'NewSubTree'},
           {integer,1501,1},
           {var,1501,'RTree'}]}]},
       {clause,1502,
        [{atom,1502,true}],
        [],
        [{call,1504,
          {atom,1504,bplus_reorganize_tree_s},
          [{var,1504,'NewSubTree'}]}]}]}]},
   {clause,1506,
    [{var,1506,'Tree'},{var,1506,'NewSubTree'},{var,1506,'Pos'}],
    [],
    [{match,1507,
      {var,1507,'Size'},
      {call,1507,{atom,1507,bplus_get_size},[{var,1507,'Tree'}]}},
     {'if',1508,
      [{clause,1509,[],
        [[{op,1509,'==',{var,1509,'Pos'},{var,1509,'Size'}}]],
        [{match,1512,
          {var,1512,'LTree'},
          {call,1512,
           {atom,1512,bplus_get_tree},
           [{var,1512,'Tree'},
            {op,1512,'-',{var,1512,'Pos'},{integer,1512,1}}]}},
         {'case',1513,
          {op,1056,'>=',
           {call,1056,{atom,1056,bplus_get_size},[{var,1513,'LTree'}]},
           {integer,1049,16}},
          [{clause,1514,
            [{atom,1514,false}],
            [],
            [{call,1515,
              {atom,1515,bplus_reorganize_tree_l},
              [{var,1515,'Tree'},
               {var,1515,'NewSubTree'},
               {var,1515,'Pos'},
               {var,1515,'LTree'}]}]},
           {clause,1516,
            [{atom,1516,true}],
            [],
            [{call,1518,
              {atom,1518,bplus_reorganize_tree_s},
              [{var,1518,'NewSubTree'}]}]}]}]},
       {clause,1520,[],
        [[{atom,1520,true}]],
        [{match,1522,
          {var,1522,'LTree'},
          {call,1522,
           {atom,1522,bplus_get_tree},
           [{var,1522,'Tree'},
            {op,1522,'-',{var,1522,'Pos'},{integer,1522,1}}]}},
         {match,1523,
          {var,1523,'RTree'},
          {call,1523,
           {atom,1523,bplus_get_tree},
           [{var,1523,'Tree'},
            {op,1523,'+',{var,1523,'Pos'},{integer,1523,1}}]}},
         {match,1524,
          {var,1524,'SL'},
          {call,1524,{atom,1524,bplus_get_size},[{var,1524,'LTree'}]}},
         {match,1525,
          {var,1525,'SR'},
          {call,1525,{atom,1525,bplus_get_size},[{var,1525,'RTree'}]}},
         {'if',1526,
          [{clause,1527,[],
            [[{op,1527,'>',{var,1527,'SL'},{var,1527,'SR'}}]],
            [{call,1528,
              {atom,1528,bplus_reorganize_tree_r},
              [{var,1528,'Tree'},
               {var,1528,'NewSubTree'},
               {var,1528,'Pos'},
               {var,1528,'RTree'}]}]},
           {clause,1529,[],
            [[{op,1529,'<',{var,1529,'SL'},{var,1529,'SR'}}]],
            [{call,1530,
              {atom,1530,bplus_reorganize_tree_l},
              [{var,1530,'Tree'},
               {var,1530,'NewSubTree'},
               {var,1530,'Pos'},
               {var,1530,'LTree'}]}]},
           {clause,1531,[],
            [[{atom,1531,true}]],
            [{'case',1532,
              {op,1056,'>=',
               {call,1056,{atom,1056,bplus_get_size},[{var,1532,'LTree'}]},
               {integer,1049,16}},
              [{clause,1533,
                [{atom,1533,false}],
                [],
                [{call,1534,
                  {atom,1534,bplus_reorganize_tree_l},
                  [{var,1534,'Tree'},
                   {var,1534,'NewSubTree'},
                   {var,1534,'Pos'},
                   {var,1534,'LTree'}]}]},
               {clause,1535,
                [{atom,1535,true}],
                [],
                [{call,1536,
                  {atom,1536,bplus_reorganize_tree_s},
                  [{var,1536,'NewSubTree'}]}]}]}]}]}]}]}]}]},
 {function,1545,bplus_reorganize_tree_del,3,
  [{clause,1545,
    [{var,1545,'Tree'},{var,1545,'NewSubTree'},{integer,1545,1}],
    [],
    [{match,1547,
      {var,1547,'RTree'},
      {call,1547,
       {atom,1547,bplus_get_tree},
       [{var,1547,'Tree'},{integer,1547,2}]}},
     {'case',1548,
      {op,1062,'=<',
       {call,1062,{atom,1062,bplus_get_size},[{var,1548,'RTree'}]},
       {integer,1050,8}},
      [{clause,1549,
        [{atom,1549,false}],
        [],
        [{call,1550,
          {atom,1550,bplus_reorganize_tree_r},
          [{var,1550,'Tree'},
           {var,1550,'NewSubTree'},
           {integer,1550,1},
           {var,1550,'RTree'}]}]},
       {clause,1551,
        [{atom,1551,true}],
        [],
        [{call,1553,
          {atom,1553,bplus_reorganize_tree_jr},
          [{var,1553,'Tree'},
           {var,1553,'NewSubTree'},
           {integer,1553,1},
           {var,1553,'RTree'}]}]}]}]},
   {clause,1555,
    [{var,1555,'Tree'},{var,1555,'NewSubTree'},{var,1555,'Pos'}],
    [],
    [{match,1556,
      {var,1556,'Size'},
      {call,1556,{atom,1556,bplus_get_size},[{var,1556,'Tree'}]}},
     {'if',1557,
      [{clause,1558,[],
        [[{op,1558,'==',{var,1558,'Pos'},{var,1558,'Size'}}]],
        [{match,1561,
          {var,1561,'LTree'},
          {call,1561,
           {atom,1561,bplus_get_tree},
           [{var,1561,'Tree'},
            {op,1561,'-',{var,1561,'Pos'},{integer,1561,1}}]}},
         {'case',1562,
          {op,1062,'=<',
           {call,1062,{atom,1062,bplus_get_size},[{var,1562,'LTree'}]},
           {integer,1050,8}},
          [{clause,1563,
            [{atom,1563,false}],
            [],
            [{call,1564,
              {atom,1564,bplus_reorganize_tree_l},
              [{var,1564,'Tree'},
               {var,1564,'NewSubTree'},
               {var,1564,'Pos'},
               {var,1564,'LTree'}]}]},
           {clause,1565,
            [{atom,1565,true}],
            [],
            [{call,1567,
              {atom,1567,bplus_reorganize_tree_jl},
              [{var,1567,'Tree'},
               {var,1567,'NewSubTree'},
               {var,1567,'Pos'},
               {var,1567,'LTree'}]}]}]}]},
       {clause,1569,[],
        [[{atom,1569,true}]],
        [{match,1571,
          {var,1571,'LTree'},
          {call,1571,
           {atom,1571,bplus_get_tree},
           [{var,1571,'Tree'},
            {op,1571,'-',{var,1571,'Pos'},{integer,1571,1}}]}},
         {match,1572,
          {var,1572,'RTree'},
          {call,1572,
           {atom,1572,bplus_get_tree},
           [{var,1572,'Tree'},
            {op,1572,'+',{var,1572,'Pos'},{integer,1572,1}}]}},
         {match,1573,
          {var,1573,'SL'},
          {call,1573,{atom,1573,bplus_get_size},[{var,1573,'LTree'}]}},
         {match,1574,
          {var,1574,'SR'},
          {call,1574,{atom,1574,bplus_get_size},[{var,1574,'RTree'}]}},
         {'if',1575,
          [{clause,1576,[],
            [[{op,1576,'>',{var,1576,'SL'},{var,1576,'SR'}}]],
            [{call,1577,
              {atom,1577,bplus_reorganize_tree_l},
              [{var,1577,'Tree'},
               {var,1577,'NewSubTree'},
               {var,1577,'Pos'},
               {var,1577,'LTree'}]}]},
           {clause,1578,[],
            [[{op,1578,'<',{var,1578,'SL'},{var,1578,'SR'}}]],
            [{call,1579,
              {atom,1579,bplus_reorganize_tree_r},
              [{var,1579,'Tree'},
               {var,1579,'NewSubTree'},
               {var,1579,'Pos'},
               {var,1579,'RTree'}]}]},
           {clause,1580,[],
            [[{atom,1580,true}]],
            [{'case',1581,
              {op,1062,'=<',
               {call,1062,{atom,1062,bplus_get_size},[{var,1581,'LTree'}]},
               {integer,1050,8}},
              [{clause,1582,
                [{atom,1582,false}],
                [],
                [{call,1583,
                  {atom,1583,bplus_reorganize_tree_l},
                  [{var,1583,'Tree'},
                   {var,1583,'NewSubTree'},
                   {var,1583,'Pos'},
                   {var,1583,'LTree'}]}]},
               {clause,1584,
                [{atom,1584,true}],
                [],
                [{call,1585,
                  {atom,1585,bplus_reorganize_tree_jl},
                  [{var,1585,'Tree'},
                   {var,1585,'NewSubTree'},
                   {var,1585,'Pos'},
                   {var,1585,'LTree'}]}]}]}]}]}]}]}]}]},
 {function,1591,bplus_reorganize_tree_l,4,
  [{clause,1591,
    [{var,1591,'Tree'},
     {var,1591,'NewSubTree'},
     {var,1591,'Pos'},
     {var,1591,'LTree'}],
    [],
    [{'case',1592,
      {call,1054,
       {atom,1054,element},
       [{integer,1054,1},{var,1592,'NewSubTree'}]},
      [{clause,1593,
        [{atom,1593,l}],
        [],
        [{tuple,1594,
          [{atom,1594,left},
           {call,1594,
            {atom,1594,bplus_split_leaf},
            [{call,1595,
              {atom,1595,bplus_mk_leaf},
              [{call,1596,
                {remote,1596,{atom,1596,lists},{atom,1596,append}},
                [{call,1596,
                  {atom,1596,bplus_leaf_to_list},
                  [{var,1596,'LTree'}]},
                 {call,1597,
                  {atom,1597,bplus_leaf_to_list},
                  [{var,1597,'NewSubTree'}]}]}]}]}]}]},
       {clause,1598,
        [{atom,1598,n}],
        [],
        [{tuple,1599,
          [{atom,1599,left},
           {call,1599,
            {atom,1599,bplus_split_node},
            [{call,1600,
              {atom,1600,bplus_mk_node},
              [{call,1601,
                {remote,1601,{atom,1601,lists},{atom,1601,append}},
                [{cons,1601,
                  {call,1601,
                   {atom,1601,bplus_node_to_list},
                   [{var,1601,'LTree'}]},
                  {cons,1602,
                   {cons,1602,
                    {call,1602,
                     {atom,1602,bplus_get_lkey},
                     [{var,1602,'Tree'},{var,1602,'Pos'}]},
                    {nil,1602}},
                   {cons,1603,
                    {call,1603,
                     {atom,1603,bplus_node_to_list},
                     [{var,1603,'NewSubTree'}]},
                    {nil,1603}}}}]}]}]}]}]}]}]}]},
 {function,1606,bplus_reorganize_tree_r,4,
  [{clause,1606,
    [{var,1606,'Tree'},
     {var,1606,'NewSubTree'},
     {var,1606,'Pos'},
     {var,1606,'RTree'}],
    [],
    [{'case',1607,
      {call,1054,
       {atom,1054,element},
       [{integer,1054,1},{var,1607,'NewSubTree'}]},
      [{clause,1608,
        [{atom,1608,l}],
        [],
        [{tuple,1609,
          [{atom,1609,right},
           {call,1610,
            {atom,1610,bplus_split_leaf},
            [{call,1611,
              {atom,1611,bplus_mk_leaf},
              [{call,1612,
                {remote,1612,{atom,1612,lists},{atom,1612,append}},
                [{cons,1612,
                  {call,1612,
                   {atom,1612,bplus_leaf_to_list},
                   [{var,1612,'NewSubTree'}]},
                  {cons,1613,
                   {call,1613,
                    {atom,1613,bplus_leaf_to_list},
                    [{var,1613,'RTree'}]},
                   {nil,1613}}}]}]}]}]}]},
       {clause,1614,
        [{atom,1614,n}],
        [],
        [{tuple,1615,
          [{atom,1615,right},
           {call,1616,
            {atom,1616,bplus_split_node},
            [{call,1617,
              {atom,1617,bplus_mk_node},
              [{call,1618,
                {remote,1618,{atom,1618,lists},{atom,1618,append}},
                [{cons,1618,
                  {call,1618,
                   {atom,1618,bplus_node_to_list},
                   [{var,1618,'NewSubTree'}]},
                  {cons,1619,
                   {cons,1619,
                    {call,1619,
                     {atom,1619,bplus_get_rkey},
                     [{var,1619,'Tree'},{var,1619,'Pos'}]},
                    {nil,1619}},
                   {cons,1620,
                    {call,1620,
                     {atom,1620,bplus_node_to_list},
                     [{var,1620,'RTree'}]},
                    {nil,1620}}}}]}]}]}]}]}]}]}]},
 {function,1623,bplus_reorganize_tree_s,1,
  [{clause,1623,
    [{var,1623,'NewSubTree'}],
    [],
    [{'case',1624,
      {call,1054,
       {atom,1054,element},
       [{integer,1054,1},{var,1624,'NewSubTree'}]},
      [{clause,1625,
        [{atom,1625,l}],
        [],
        [{tuple,1626,
          [{atom,1626,split},
           {call,1626,
            {atom,1626,bplus_split_leaf},
            [{var,1626,'NewSubTree'}]}]}]},
       {clause,1627,
        [{atom,1627,n}],
        [],
        [{tuple,1628,
          [{atom,1628,split},
           {call,1628,
            {atom,1628,bplus_split_node},
            [{var,1628,'NewSubTree'}]}]}]}]}]}]},
 {function,1631,bplus_reorganize_tree_jl,4,
  [{clause,1631,
    [{var,1631,'Tree'},
     {var,1631,'NewSubTree'},
     {var,1631,'Pos'},
     {var,1631,'LTree'}],
    [],
    [{'case',1632,
      {call,1054,
       {atom,1054,element},
       [{integer,1054,1},{var,1632,'NewSubTree'}]},
      [{clause,1633,
        [{atom,1633,l}],
        [],
        [{tuple,1634,
          [{atom,1634,join_left},
           {call,1635,
            {atom,1635,bplus_mk_leaf},
            [{call,1635,
              {remote,1635,{atom,1635,lists},{atom,1635,append}},
              [{cons,1635,
                {call,1635,
                 {atom,1635,bplus_leaf_to_list},
                 [{var,1635,'LTree'}]},
                {cons,1636,
                 {call,1636,
                  {atom,1636,bplus_leaf_to_list},
                  [{var,1636,'NewSubTree'}]},
                 {nil,1636}}}]}]}]}]},
       {clause,1637,
        [{atom,1637,n}],
        [],
        [{tuple,1638,
          [{atom,1638,join_left},
           {call,1639,
            {atom,1639,bplus_mk_node},
            [{call,1639,
              {remote,1639,{atom,1639,lists},{atom,1639,append}},
              [{cons,1639,
                {call,1639,
                 {atom,1639,bplus_node_to_list},
                 [{var,1639,'LTree'}]},
                {cons,1640,
                 {cons,1640,
                  {call,1640,
                   {atom,1640,bplus_get_lkey},
                   [{var,1640,'Tree'},{var,1640,'Pos'}]},
                  {nil,1640}},
                 {cons,1641,
                  {call,1641,
                   {atom,1641,bplus_node_to_list},
                   [{var,1641,'NewSubTree'}]},
                  {nil,1641}}}}]}]}]}]}]}]}]},
 {function,1644,bplus_reorganize_tree_jr,4,
  [{clause,1644,
    [{var,1644,'Tree'},
     {var,1644,'NewSubTree'},
     {var,1644,'Pos'},
     {var,1644,'RTree'}],
    [],
    [{'case',1645,
      {call,1054,
       {atom,1054,element},
       [{integer,1054,1},{var,1645,'NewSubTree'}]},
      [{clause,1646,
        [{atom,1646,l}],
        [],
        [{tuple,1647,
          [{atom,1647,join_right},
           {call,1648,
            {atom,1648,bplus_mk_leaf},
            [{call,1648,
              {remote,1648,{atom,1648,lists},{atom,1648,append}},
              [{cons,1648,
                {call,1648,
                 {atom,1648,bplus_leaf_to_list},
                 [{var,1648,'NewSubTree'}]},
                {cons,1649,
                 {call,1649,
                  {atom,1649,bplus_leaf_to_list},
                  [{var,1649,'RTree'}]},
                 {nil,1649}}}]}]}]}]},
       {clause,1650,
        [{atom,1650,n}],
        [],
        [{tuple,1651,
          [{atom,1651,join_right},
           {call,1652,
            {atom,1652,bplus_mk_node},
            [{call,1652,
              {remote,1652,{atom,1652,lists},{atom,1652,append}},
              [{cons,1652,
                {call,1652,
                 {atom,1652,bplus_node_to_list},
                 [{var,1652,'NewSubTree'}]},
                {cons,1653,
                 {cons,1653,
                  {call,1653,
                   {atom,1653,bplus_get_rkey},
                   [{var,1653,'Tree'},{var,1653,'Pos'}]},
                  {nil,1653}},
                 {cons,1654,
                  {call,1654,
                   {atom,1654,bplus_node_to_list},
                   [{var,1654,'RTree'}]},
                  {nil,1654}}}}]}]}]}]}]}]}]},
 {function,1662,bplus_split_leaf,1,
  [{clause,1662,
    [{var,1662,'Leaf'}],
    [],
    [{match,1663,
      {var,1663,'S'},
      {call,1663,{atom,1663,bplus_get_size},[{var,1663,'Leaf'}]}},
     {call,1664,
      {atom,1664,bplus_split_leaf_2},
      [{var,1664,'Leaf'},
       {var,1664,'S'},
       {op,1664,'div',{var,1664,'S'},{integer,1664,2}},
       {nil,1664}]}]}]},
 {function,1666,bplus_split_leaf_2,4,
  [{clause,1666,
    [{var,1666,'Leaf'},{var,1666,'Pos'},{integer,1666,1},{var,1666,'Accum'}],
    [],
    [{match,1667,
      {var,1667,'K'},
      {call,1064,
       {atom,1064,element},
       [{op,1064,'+',{var,1667,'Pos'},{integer,1064,1}},{var,1667,'Leaf'}]}},
     {call,1668,
      {atom,1668,bplus_split_leaf_3},
      [{var,1668,'Leaf'},
       {op,1668,'-',{var,1668,'Pos'},{integer,1668,1}},
       {nil,1668},
       {var,1668,'K'},
       {cons,1668,{var,1668,'K'},{var,1668,'Accum'}}]}]},
   {clause,1669,
    [{var,1669,'Leaf'},{var,1669,'Pos'},{var,1669,'N'},{var,1669,'Accum'}],
    [],
    [{call,1670,
      {atom,1670,bplus_split_leaf_2},
      [{var,1670,'Leaf'},
       {op,1670,'-',{var,1670,'Pos'},{integer,1670,1}},
       {op,1670,'-',{var,1670,'N'},{integer,1670,1}},
       {cons,1670,
        {call,1064,
         {atom,1064,element},
         [{op,1064,'+',{var,1670,'Pos'},{integer,1064,1}},{var,1670,'Leaf'}]},
        {var,1670,'Accum'}}]}]}]},
 {function,1672,bplus_split_leaf_3,5,
  [{clause,1672,
    [{var,1672,'_'},
     {integer,1672,0},
     {var,1672,'LeftAcc'},
     {var,1672,'DKey'},
     {var,1672,'RightAcc'}],
    [],
    [{tuple,1673,
      [{call,1673,{atom,1673,bplus_mk_leaf},[{var,1673,'LeftAcc'}]},
       {var,1673,'DKey'},
       {call,1673,{atom,1673,bplus_mk_leaf},[{var,1673,'RightAcc'}]}]}]},
   {clause,1674,
    [{var,1674,'Leaf'},
     {var,1674,'Pos'},
     {var,1674,'LeftAcc'},
     {var,1674,'DKey'},
     {var,1674,'RightAcc'}],
    [],
    [{call,1675,
      {atom,1675,bplus_split_leaf_3},
      [{var,1675,'Leaf'},
       {op,1675,'-',{var,1675,'Pos'},{integer,1675,1}},
       {cons,1675,
        {call,1064,
         {atom,1064,element},
         [{op,1064,'+',{var,1675,'Pos'},{integer,1064,1}},{var,1675,'Leaf'}]},
        {var,1675,'LeftAcc'}},
       {var,1676,'DKey'},
       {var,1676,'RightAcc'}]}]}]},
 {function,1682,bplus_split_node,1,
  [{clause,1682,
    [{var,1682,'Node'}],
    [],
    [{match,1683,
      {var,1683,'S'},
      {call,1683,{atom,1683,bplus_get_size},[{var,1683,'Node'}]}},
     {call,1684,
      {atom,1684,bplus_split_node_2},
      [{var,1684,'Node'},
       {var,1684,'S'},
       {op,1684,'div',{var,1684,'S'},{integer,1684,2}},
       {nil,1684}]}]}]},
 {function,1686,bplus_split_node_2,4,
  [{clause,1686,
    [{var,1686,'Node'},{var,1686,'Pos'},{integer,1686,1},{var,1686,'Accum'}],
    [],
    [{call,1687,
      {atom,1687,bplus_split_node_3},
      [{var,1687,'Node'},
       {op,1687,'-',{var,1687,'Pos'},{integer,1687,1}},
       {nil,1687},
       {call,1687,
        {atom,1687,bplus_get_lkey},
        [{var,1687,'Node'},{var,1687,'Pos'}]},
       {cons,1688,
        {call,1688,
         {atom,1688,bplus_get_tree},
         [{var,1688,'Node'},{var,1688,'Pos'}]},
        {var,1688,'Accum'}}]}]},
   {clause,1689,
    [{var,1689,'Node'},{var,1689,'Pos'},{var,1689,'N'},{var,1689,'Accum'}],
    [],
    [{call,1690,
      {atom,1690,bplus_split_node_2},
      [{var,1690,'Node'},
       {op,1690,'-',{var,1690,'Pos'},{integer,1690,1}},
       {op,1690,'-',{var,1690,'N'},{integer,1690,1}},
       {cons,1690,
        {call,1690,
         {atom,1690,bplus_get_lkey},
         [{var,1690,'Node'},{var,1690,'Pos'}]},
        {cons,1691,
         {call,1691,
          {atom,1691,bplus_get_tree},
          [{var,1691,'Node'},{var,1691,'Pos'}]},
         {var,1691,'Accum'}}}]}]}]},
 {function,1693,bplus_split_node_3,5,
  [{clause,1693,
    [{var,1693,'Node'},
     {integer,1693,1},
     {var,1693,'LeftAcc'},
     {var,1693,'DKey'},
     {var,1693,'RightAcc'}],
    [],
    [{tuple,1694,
      [{call,1694,
        {atom,1694,bplus_mk_node},
        [{cons,1694,
          {call,1694,
           {atom,1694,bplus_get_tree},
           [{var,1694,'Node'},{integer,1694,1}]},
          {var,1694,'LeftAcc'}}]},
       {var,1694,'DKey'},
       {call,1695,{atom,1695,bplus_mk_node},[{var,1695,'RightAcc'}]}]}]},
   {clause,1696,
    [{var,1696,'Node'},
     {var,1696,'Pos'},
     {var,1696,'LeftAcc'},
     {var,1696,'DKey'},
     {var,1696,'RightAcc'}],
    [],
    [{call,1697,
      {atom,1697,bplus_split_node_3},
      [{var,1697,'Node'},
       {op,1697,'-',{var,1697,'Pos'},{integer,1697,1}},
       {cons,1698,
        {call,1698,
         {atom,1698,bplus_get_lkey},
         [{var,1698,'Node'},{var,1698,'Pos'}]},
        {cons,1699,
         {call,1699,
          {atom,1699,bplus_get_tree},
          [{var,1699,'Node'},{var,1699,'Pos'}]},
         {var,1699,'LeftAcc'}}},
       {var,1700,'DKey'},
       {var,1700,'RightAcc'}]}]}]},
 {function,1706,bplus_joinleft_tree,3,
  [{clause,1706,
    [{var,1706,'Tree'},{var,1706,'JoinedTree'},{var,1706,'Pos'}],
    [],
    [{call,1707,
      {atom,1707,bplus_join_tree_2},
      [{var,1707,'Tree'},
       {var,1707,'JoinedTree'},
       {var,1707,'Pos'},
       {call,1707,{atom,1707,bplus_get_size},[{var,1707,'Tree'}]},
       {nil,1707}]}]}]},
 {function,1708,bplus_joinright_tree,3,
  [{clause,1708,
    [{var,1708,'Tree'},{var,1708,'JoinedTree'},{var,1708,'Pos'}],
    [],
    [{call,1709,
      {atom,1709,bplus_join_tree_2},
      [{var,1709,'Tree'},
       {var,1709,'JoinedTree'},
       {op,1709,'+',{var,1709,'Pos'},{integer,1709,1}},
       {call,1709,{atom,1709,bplus_get_size},[{var,1709,'Tree'}]},
       {nil,1709}]}]}]},
 {function,1711,bplus_join_tree_2,5,
  [{clause,1711,
    [{var,1711,'Tree'},
     {var,1711,'JoinedTree'},
     {var,1711,'Pos'},
     {var,1711,'Pos'},
     {var,1711,'Accum'}],
    [],
    [{call,1712,
      {atom,1712,bplus_join_tree_3},
      [{var,1712,'Tree'},
       {op,1712,'-',{var,1712,'Pos'},{integer,1712,2}},
       {cons,1712,{var,1712,'JoinedTree'},{var,1712,'Accum'}}]}]},
   {clause,1713,
    [{var,1713,'Tree'},
     {var,1713,'JoinedTree'},
     {var,1713,'Pos'},
     {var,1713,'N'},
     {var,1713,'Accum'}],
    [],
    [{call,1714,
      {atom,1714,bplus_join_tree_2},
      [{var,1714,'Tree'},
       {var,1714,'JoinedTree'},
       {var,1714,'Pos'},
       {op,1714,'-',{var,1714,'N'},{integer,1714,1}},
       {cons,1715,
        {call,1715,
         {atom,1715,bplus_get_lkey},
         [{var,1715,'Tree'},{var,1715,'N'}]},
        {cons,1715,
         {call,1715,
          {atom,1715,bplus_get_tree},
          [{var,1715,'Tree'},{var,1715,'N'}]},
         {var,1715,'Accum'}}}]}]}]},
 {function,1717,bplus_join_tree_3,3,
  [{clause,1717,
    [{var,1717,'_Tree'},{integer,1717,0},{var,1717,'Accum'}],
    [],
    [{call,1717,{atom,1717,bplus_mk_node},[{var,1717,'Accum'}]}]},
   {clause,1718,
    [{var,1718,'Tree'},{var,1718,'Pos'},{var,1718,'Accum'}],
    [],
    [{call,1719,
      {atom,1719,bplus_join_tree_3},
      [{var,1719,'Tree'},
       {op,1719,'-',{var,1719,'Pos'},{integer,1719,1}},
       {cons,1719,
        {call,1719,
         {atom,1719,bplus_get_tree},
         [{var,1719,'Tree'},{var,1719,'Pos'}]},
        {cons,1720,
         {call,1720,
          {atom,1720,bplus_get_rkey},
          [{var,1720,'Tree'},{var,1720,'Pos'}]},
         {var,1720,'Accum'}}}]}]}]},
 {function,1729,bplus_mk_node,1,
  [{clause,1729,
    [{var,1729,'NodeList'}],
    [],
    [{call,1729,
      {atom,1729,list_to_tuple},
      [{cons,1729,{atom,1729,n},{var,1729,'NodeList'}}]}]}]},
 {function,1734,bplus_node_to_list,1,
  [{clause,1734,
    [{var,1734,'Node'}],
    [],
    [{match,1735,
      {cons,1735,{var,1735,'_'},{var,1735,'NodeList'}},
      {call,1735,{atom,1735,tuple_to_list},[{var,1735,'Node'}]}},
     {var,1736,'NodeList'}]}]},
 {function,1741,bplus_mk_leaf,1,
  [{clause,1741,
    [{var,1741,'KeyList'}],
    [],
    [{call,1741,
      {atom,1741,list_to_tuple},
      [{cons,1741,{atom,1741,l},{var,1741,'KeyList'}}]}]}]},
 {function,1746,bplus_leaf_to_list,1,
  [{clause,1746,
    [{var,1746,'Leaf'}],
    [],
    [{match,1747,
      {cons,1747,{var,1747,'_'},{var,1747,'LeafList'}},
      {call,1747,{atom,1747,tuple_to_list},[{var,1747,'Leaf'}]}},
     {var,1748,'LeafList'}]}]},
 {function,1753,bplus_put_subtree,2,
  [{clause,1753,[{var,1753,'Tree'},{nil,1753}],[],[{var,1753,'Tree'}]},
   {clause,1754,
    [{var,1754,'Tree'},
     {cons,1754,
      {var,1754,'NewSubTree'},
      {cons,1754,{var,1754,'Pos'},{var,1754,'Rest'}}}],
    [],
    [{call,1755,
      {atom,1755,bplus_put_subtree},
      [{call,1755,
        {atom,1755,setelement},
        [{op,1755,'*',{var,1755,'Pos'},{integer,1755,2}},
         {var,1755,'Tree'},
         {var,1755,'NewSubTree'}]},
       {var,1755,'Rest'}]}]}]},
 {function,1760,bplus_extend_tree,3,
  [{clause,1760,
    [{var,1760,'Tree'},{var,1760,'Inserts'},{var,1760,'Pos'}],
    [],
    [{call,1761,
      {atom,1761,bplus_extend_tree_2},
      [{var,1761,'Tree'},
       {var,1761,'Inserts'},
       {var,1761,'Pos'},
       {call,1761,{atom,1761,bplus_get_size},[{var,1761,'Tree'}]},
       {nil,1761}]}]}]},
 {function,1763,bplus_extend_tree_2,5,
  [{clause,1763,
    [{var,1763,'Tree'},
     {tuple,1763,[{var,1763,'T1'},{var,1763,'DKey'},{var,1763,'T2'}]},
     {var,1763,'Pos'},
     {var,1763,'Pos'},
     {var,1763,'Accum'}],
    [],
    [{call,1764,
      {atom,1764,bplus_extend_tree_3},
      [{var,1764,'Tree'},
       {op,1764,'-',{var,1764,'Pos'},{integer,1764,1}},
       {cons,1764,
        {var,1764,'T1'},
        {cons,1764,
         {var,1764,'DKey'},
         {cons,1764,{var,1764,'T2'},{var,1764,'Accum'}}}}]}]},
   {clause,1765,
    [{var,1765,'Tree'},
     {var,1765,'Inserts'},
     {var,1765,'Pos'},
     {var,1765,'N'},
     {var,1765,'Accum'}],
    [],
    [{call,1766,
      {atom,1766,bplus_extend_tree_2},
      [{var,1766,'Tree'},
       {var,1766,'Inserts'},
       {var,1766,'Pos'},
       {op,1766,'-',{var,1766,'N'},{integer,1766,1}},
       {cons,1767,
        {call,1767,
         {atom,1767,bplus_get_lkey},
         [{var,1767,'Tree'},{var,1767,'N'}]},
        {cons,1767,
         {call,1767,
          {atom,1767,bplus_get_tree},
          [{var,1767,'Tree'},{var,1767,'N'}]},
         {var,1767,'Accum'}}}]}]}]},
 {function,1769,bplus_extend_tree_3,3,
  [{clause,1769,
    [{var,1769,'_'},{integer,1769,0},{var,1769,'Accum'}],
    [],
    [{call,1769,{atom,1769,bplus_mk_node},[{var,1769,'Accum'}]}]},
   {clause,1770,
    [{var,1770,'Tree'},{var,1770,'N'},{var,1770,'Accum'}],
    [],
    [{call,1771,
      {atom,1771,bplus_extend_tree_3},
      [{var,1771,'Tree'},
       {op,1771,'-',{var,1771,'N'},{integer,1771,1}},
       {cons,1771,
        {call,1771,
         {atom,1771,bplus_get_tree},
         [{var,1771,'Tree'},{var,1771,'N'}]},
        {cons,1772,
         {call,1772,
          {atom,1772,bplus_get_rkey},
          [{var,1772,'Tree'},{var,1772,'N'}]},
         {var,1772,'Accum'}}}]}]}]},
 {function,1777,bplus_put_lkey,3,
  [{clause,1777,
    [{var,1777,'Tree'},{var,1777,'DKey'},{var,1777,'Pos'}],
    [],
    [{call,1777,
      {atom,1777,setelement},
      [{op,1777,'-',
        {op,1777,'*',{var,1777,'Pos'},{integer,1777,2}},
        {integer,1777,1}},
       {var,1777,'Tree'},
       {var,1777,'DKey'}]}]}]},
 {function,1778,bplus_put_rkey,3,
  [{clause,1778,
    [{var,1778,'Tree'},{var,1778,'DKey'},{var,1778,'Pos'}],
    [],
    [{call,1778,
      {atom,1778,setelement},
      [{op,1778,'+',
        {op,1778,'*',{var,1778,'Pos'},{integer,1778,2}},
        {integer,1778,1}},
       {var,1778,'Tree'},
       {var,1778,'DKey'}]}]}]},
 {function,1784,bplus_get_size,1,
  [{clause,1784,
    [{var,1784,'Tree'}],
    [],
    [{'case',1785,
      {call,1054,{atom,1054,element},[{integer,1054,1},{var,1785,'Tree'}]},
      [{clause,1786,
        [{atom,1786,l}],
        [],
        [{op,1787,'-',
          {call,1787,{atom,1787,tuple_size},[{var,1787,'Tree'}]},
          {integer,1787,1}}]},
       {clause,1788,
        [{atom,1788,n}],
        [],
        [{op,1789,'div',
          {call,1789,{atom,1789,tuple_size},[{var,1789,'Tree'}]},
          {integer,1789,2}}]}]}]}]},
 {function,1795,bplus_get_tree,2,
  [{clause,1795,
    [{var,1795,'Tree'},{var,1795,'Pos'}],
    [],
    [{call,1795,
      {atom,1795,element},
      [{op,1795,'*',{var,1795,'Pos'},{integer,1795,2}},{var,1795,'Tree'}]}]}]},
 {function,1800,bplus_get_lkey,2,
  [{clause,1800,
    [{var,1800,'Tree'},{var,1800,'Pos'}],
    [],
    [{call,1800,
      {atom,1800,element},
      [{op,1800,'-',
        {op,1800,'*',{var,1800,'Pos'},{integer,1800,2}},
        {integer,1800,1}},
       {var,1800,'Tree'}]}]}]},
 {function,1801,bplus_get_rkey,2,
  [{clause,1801,
    [{var,1801,'Tree'},{var,1801,'Pos'}],
    [],
    [{call,1801,
      {atom,1801,element},
      [{op,1801,'+',
        {op,1801,'*',{var,1801,'Pos'},{integer,1801,2}},
        {integer,1801,1}},
       {var,1801,'Tree'}]}]}]}]
