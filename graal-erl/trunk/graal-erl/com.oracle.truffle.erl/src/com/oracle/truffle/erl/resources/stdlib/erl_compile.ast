erl_compile
[]
[]
[{function,33,compiler,1,
  [{clause,33,
    [{string,33,".erl"}],
    [],
    [{tuple,33,[{atom,33,compile},{atom,33,compile}]}]},
   {clause,34,
    [{string,34,".S"}],
    [],
    [{tuple,34,[{atom,34,compile},{atom,34,compile_asm}]}]},
   {clause,35,
    [{string,35,".beam"}],
    [],
    [{tuple,35,[{atom,35,compile},{atom,35,compile_beam}]}]},
   {clause,36,
    [{string,36,".core"}],
    [],
    [{tuple,36,[{atom,36,compile},{atom,36,compile_core}]}]},
   {clause,37,
    [{string,37,".mib"}],
    [],
    [{tuple,37,[{atom,37,snmpc},{atom,37,compile}]}]},
   {clause,38,
    [{string,38,".bin"}],
    [],
    [{tuple,38,[{atom,38,snmpc},{atom,38,mib_to_hrl}]}]},
   {clause,39,
    [{string,39,".xrl"}],
    [],
    [{tuple,39,[{atom,39,leex},{atom,39,compile}]}]},
   {clause,40,
    [{string,40,".yrl"}],
    [],
    [{tuple,40,[{atom,40,yecc},{atom,40,compile}]}]},
   {clause,41,
    [{string,41,".script"}],
    [],
    [{tuple,41,[{atom,41,systools},{atom,41,script2boot}]}]},
   {clause,42,
    [{string,42,".rel"}],
    [],
    [{tuple,42,[{atom,42,systools},{atom,42,compile_rel}]}]},
   {clause,43,
    [{string,43,".idl"}],
    [],
    [{tuple,43,[{atom,43,ic},{atom,43,compile}]}]},
   {clause,44,
    [{string,44,".asn1"}],
    [],
    [{tuple,44,[{atom,44,asn1ct},{atom,44,compile_asn1}]}]},
   {clause,45,
    [{string,45,".asn"}],
    [],
    [{tuple,45,[{atom,45,asn1ct},{atom,45,compile_asn}]}]},
   {clause,46,
    [{string,46,".py"}],
    [],
    [{tuple,46,[{atom,46,asn1ct},{atom,46,compile_py}]}]},
   {clause,47,[{var,47,'_'}],[],[{atom,47,no}]}]},
 {function,55,compile_cmdline,0,
  [{clause,55,[],[],
    [{match,56,
      {var,56,'List'},
      {call,56,{remote,56,{atom,56,init},{atom,56,get_plain_arguments}},[]}},
     {'case',57,
      {call,57,{atom,57,compile},[{var,57,'List'}]},
      [{clause,58,
        [{atom,58,ok}],
        [],
        [{call,58,{atom,58,my_halt},[{integer,58,0}]}]},
       {clause,59,
        [{atom,59,error}],
        [],
        [{call,59,{atom,59,my_halt},[{integer,59,1}]}]},
       {clause,60,
        [{var,60,'_'}],
        [],
        [{call,60,{atom,60,my_halt},[{integer,60,2}]}]}]}]}]},
 {function,63,my_halt,1,
  [{clause,63,
    [{var,63,'Reason'}],
    [],
    [{call,64,
      {remote,64,{atom,64,erlang},{atom,64,halt}},
      [{var,64,'Reason'}]}]}]},
 {function,68,compile,1,
  [{clause,68,
    [{var,68,'List'}],
    [],
    [{call,69,{atom,69,process_flag},[{atom,69,trap_exit},{atom,69,true}]},
     {match,70,
      {var,70,'Pid'},
      {call,70,
       {atom,70,spawn_link},
       [{call,70,{atom,70,compiler_runner},[{var,70,'List'}]}]}},
     {'receive',71,
      [{clause,72,
        [{tuple,72,
          [{atom,72,'EXIT'},
           {var,72,'Pid'},
           {tuple,72,[{atom,72,compiler_result},{var,72,'Result'}]}]}],
        [],
        [{var,73,'Result'}]},
       {clause,74,
        [{tuple,74,
          [{atom,74,'EXIT'},
           {var,74,'Pid'},
           {tuple,74,[{atom,74,compiler_error},{var,74,'Error'}]}]}],
        [],
        [{call,75,
          {remote,75,{atom,75,io},{atom,75,put_chars}},
          [{atom,29,standard_error},{var,75,'Error'}]},
         {call,76,
          {remote,76,{atom,76,io},{atom,76,nl}},
          [{atom,29,standard_error}]},
         {atom,77,error}]},
       {clause,78,
        [{tuple,78,[{atom,78,'EXIT'},{var,78,'Pid'},{var,78,'Reason'}]}],
        [],
        [{call,79,
          {remote,79,{atom,79,io},{atom,79,format}},
          [{atom,29,standard_error},
           {string,79,"Runtime error: ~tp~n"},
           {cons,79,{var,79,'Reason'},{nil,79}}]},
         {atom,80,error}]}]}]}]},
 {function,85,compiler_runner,1,
  [{clause,85,
    [{var,85,'List'}],
    [],
    [{'fun',86,
      {clauses,
       [{clause,86,[],[],
         [{match,89,
           {var,89,'Path'},
           {lc,89,
            {var,89,'D'},
            [{generate,89,
              {var,89,'D'},
              {call,89,{remote,89,{atom,89,code},{atom,89,get_path}},[]}},
             {op,89,'=/=',{var,89,'D'},{string,89,"."}}]}},
          {match,90,
           {atom,90,true},
           {call,90,
            {remote,90,{atom,90,code},{atom,90,set_path}},
            [{var,90,'Path'}]}},
          {call,91,
           {atom,91,exit},
           [{tuple,91,
             [{atom,91,compiler_result},
              {call,91,{atom,91,compile1},[{var,91,'List'}]}]}]}]}]}}]}]},
 {function,96,compile1,1,
  [{clause,96,
    [{var,96,'Args'}],
    [],
    [{match,97,
      {tuple,97,[{atom,97,ok},{var,97,'Cwd'}]},
      {call,97,{remote,97,{atom,97,file},{atom,97,get_cwd}},[]}},
     {call,98,
      {atom,98,compile1},
      [{var,98,'Args'},
       {tuple,98,
        [{atom,98,options},
         {nil,24},
         {var,98,'Cwd'},
         {atom,28,undefined},
         {nil,29},
         {integer,33,1},
         {atom,36,false},
         {integer,37,999},
         {nil,38},
         {string,39,[]},
         {var,98,'Cwd'}]}]}]}]},
 {function,102,compile1,2,
  [{clause,102,
    [{cons,102,{string,102,"--"},{var,102,'Files'}},{var,102,'Opts'}],
    [],
    [{call,103,{atom,103,compile2},[{var,103,'Files'},{var,103,'Opts'}]}]},
   {clause,104,
    [{cons,104,
      {op,104,'++',{string,104,"-"},{var,104,'Option'}},
      {var,104,'T'}},
     {var,104,'Opts'}],
    [],
    [{call,105,
      {atom,105,parse_generic_option},
      [{var,105,'Option'},{var,105,'T'},{var,105,'Opts'}]}]},
   {clause,106,
    [{cons,106,
      {op,106,'++',{string,106,"+"},{var,106,'Option'}},
      {var,106,'Rest'}},
     {var,106,'Opts'}],
    [],
    [{match,107,
      {var,107,'Term'},
      {call,107,{atom,107,make_term},[{var,107,'Option'}]}},
     {match,108,
      {var,108,'Specific'},
      {call,108,
       {remote,108,{atom,108,erlang},{atom,108,element}},
       [{integer,108,9},{var,108,'Opts'}]}},
     {call,109,
      {atom,109,compile1},
      [{var,109,'Rest'},
       {call,109,
        {remote,109,{atom,109,erlang},{atom,109,setelement}},
        [{integer,109,9},
         {var,109,'Opts'},
         {cons,109,{var,109,'Term'},{var,109,'Specific'}}]}]}]},
   {clause,110,
    [{var,110,'Files'},{var,110,'Opts'}],
    [],
    [{call,111,{atom,111,compile2},[{var,111,'Files'},{var,111,'Opts'}]}]}]},
 {function,113,parse_generic_option,3,
  [{clause,113,
    [{op,113,'++',{string,113,"b"},{var,113,'Opt'}},
     {var,113,'T0'},
     {var,113,'Opts'}],
    [],
    [{match,114,
      {tuple,114,[{var,114,'OutputType'},{var,114,'T'}]},
      {call,114,
       {atom,114,get_option},
       [{string,114,"b"},{var,114,'Opt'},{var,114,'T0'}]}},
     {call,115,
      {atom,115,compile1},
      [{var,115,'T'},
       {call,115,
        {remote,115,{atom,115,erlang},{atom,115,setelement}},
        [{integer,115,4},
         {var,115,'Opts'},
         {call,115,{atom,115,list_to_atom},[{var,115,'OutputType'}]}]}]}]},
   {clause,116,
    [{op,116,'++',{string,116,"D"},{var,116,'Opt'}},
     {var,116,'T0'},
     {match,116,
      {tuple,116,
       [{atom,116,options},
        {var,116,'_'},
        {var,116,'_'},
        {var,116,'_'},
        {var,116,'Defs'},
        {var,116,'_'},
        {var,116,'_'},
        {var,116,'_'},
        {var,116,'_'},
        {var,116,'_'},
        {var,116,'_'}]},
      {var,116,'Opts'}}],
    [],
    [{match,117,
      {tuple,117,[{var,117,'Val0'},{var,117,'T'}]},
      {call,117,
       {atom,117,get_option},
       [{string,117,"D"},{var,117,'Opt'},{var,117,'T0'}]}},
     {match,118,
      {tuple,118,[{var,118,'Key0'},{var,118,'Val1'}]},
      {call,118,{atom,118,split_at_equals},[{var,118,'Val0'},{nil,118}]}},
     {match,119,
      {var,119,'Key'},
      {call,119,{atom,119,list_to_atom},[{var,119,'Key0'}]}},
     {'case',120,
      {var,120,'Val1'},
      [{clause,121,
        [{nil,121}],
        [],
        [{call,122,
          {atom,122,compile1},
          [{var,122,'T'},
           {call,122,
            {remote,122,{atom,122,erlang},{atom,122,setelement}},
            [{integer,122,5},
             {var,122,'Opts'},
             {cons,122,{var,122,'Key'},{var,122,'Defs'}}]}]}]},
       {clause,123,
        [{var,123,'Val2'}],
        [],
        [{match,124,
          {var,124,'Val'},
          {call,124,{atom,124,make_term},[{var,124,'Val2'}]}},
         {call,125,
          {atom,125,compile1},
          [{var,125,'T'},
           {call,125,
            {remote,125,{atom,125,erlang},{atom,125,setelement}},
            [{integer,125,5},
             {var,125,'Opts'},
             {cons,125,
              {tuple,125,[{var,125,'Key'},{var,125,'Val'}]},
              {var,125,'Defs'}}]}]}]}]}]},
   {clause,127,
    [{string,127,"help"},{var,127,'_'},{var,127,'_Opts'}],
    [],
    [{call,128,{atom,128,usage},[]}]},
   {clause,129,
    [{op,129,'++',{string,129,"I"},{var,129,'Opt'}},
     {var,129,'T0'},
     {match,129,
      {tuple,129,
       [{atom,129,options},
        {var,129,'_'},
        {var,129,'_'},
        {var,129,'_'},
        {var,129,'_'},
        {var,129,'_'},
        {var,129,'_'},
        {var,129,'_'},
        {var,129,'_'},
        {var,129,'_'},
        {var,129,'Cwd'}]},
      {var,129,'Opts'}}],
    [],
    [{match,130,
      {tuple,130,[{var,130,'Dir'},{var,130,'T'}]},
      {call,130,
       {atom,130,get_option},
       [{string,130,"I"},{var,130,'Opt'},{var,130,'T0'}]}},
     {match,131,
      {var,131,'AbsDir'},
      {call,131,
       {remote,131,{atom,131,filename},{atom,131,absname}},
       [{var,131,'Dir'},{var,131,'Cwd'}]}},
     {call,132,
      {atom,132,compile1},
      [{var,132,'T'},
       {call,132,
        {remote,132,{atom,132,erlang},{atom,132,setelement}},
        [{integer,132,2},
         {var,132,'Opts'},
         {cons,132,
          {var,132,'AbsDir'},
          {call,132,
           {remote,132,{atom,132,erlang},{atom,132,element}},
           [{integer,132,2},{var,132,'Opts'}]}}]}]}]},
   {clause,133,
    [{op,133,'++',{string,133,"M"},{var,133,'Opt'}},
     {var,133,'T0'},
     {match,133,
      {tuple,133,
       [{atom,133,options},
        {var,133,'_'},
        {var,133,'_'},
        {var,133,'_'},
        {var,133,'_'},
        {var,133,'_'},
        {var,133,'_'},
        {var,133,'_'},
        {var,133,'Spec'},
        {var,133,'_'},
        {var,133,'_'}]},
      {var,133,'Opts'}}],
    [],
    [{'case',134,
      {call,134,{atom,134,parse_dep_option},[{var,134,'Opt'},{var,134,'T0'}]},
      [{clause,135,[{atom,135,error}],[],[{atom,136,error}]},
       {clause,137,
        [{tuple,137,[{var,137,'SpecOpts'},{var,137,'T'}]}],
        [],
        [{call,138,
          {atom,138,compile1},
          [{var,138,'T'},
           {call,138,
            {remote,138,{atom,138,erlang},{atom,138,setelement}},
            [{integer,138,9},
             {var,138,'Opts'},
             {op,138,'++',{var,138,'SpecOpts'},{var,138,'Spec'}}]}]}]}]}]},
   {clause,140,
    [{op,140,'++',{string,140,"o"},{var,140,'Opt'}},
     {var,140,'T0'},
     {match,140,
      {tuple,140,
       [{atom,140,options},
        {var,140,'_'},
        {var,140,'_'},
        {var,140,'_'},
        {var,140,'_'},
        {var,140,'_'},
        {var,140,'_'},
        {var,140,'_'},
        {var,140,'_'},
        {var,140,'_'},
        {var,140,'Cwd'}]},
      {var,140,'Opts'}}],
    [],
    [{match,141,
      {tuple,141,[{var,141,'Dir'},{var,141,'T'}]},
      {call,141,
       {atom,141,get_option},
       [{string,141,"o"},{var,141,'Opt'},{var,141,'T0'}]}},
     {match,142,
      {var,142,'AbsName'},
      {call,142,
       {remote,142,{atom,142,filename},{atom,142,absname}},
       [{var,142,'Dir'},{var,142,'Cwd'}]}},
     {'case',143,
      {call,143,{atom,143,file_or_directory},[{var,143,'AbsName'}]},
      [{clause,144,
        [{atom,144,file}],
        [],
        [{call,145,
          {atom,145,compile1},
          [{var,145,'T'},
           {call,145,
            {remote,145,{atom,145,erlang},{atom,145,setelement}},
            [{integer,145,10},{var,145,'Opts'},{var,145,'AbsName'}]}]}]},
       {clause,146,
        [{atom,146,directory}],
        [],
        [{call,147,
          {atom,147,compile1},
          [{var,147,'T'},
           {call,147,
            {remote,147,{atom,147,erlang},{atom,147,setelement}},
            [{integer,147,3},{var,147,'Opts'},{var,147,'AbsName'}]}]}]}]}]},
   {clause,149,
    [{op,149,'++',{string,149,"O"},{var,149,'Opt'}},
     {var,149,'T'},
     {var,149,'Opts'}],
    [],
    [{'case',150,
      {var,150,'Opt'},
      [{clause,151,
        [{string,151,[]}],
        [],
        [{call,152,
          {atom,152,compile1},
          [{var,152,'T'},
           {call,152,
            {remote,152,{atom,152,erlang},{atom,152,setelement}},
            [{integer,152,8},{var,152,'Opts'},{integer,152,1}]}]}]},
       {clause,153,
        [{var,153,'_'}],
        [],
        [{match,154,
          {var,154,'Term'},
          {call,154,{atom,154,make_term},[{var,154,'Opt'}]}},
         {call,155,
          {atom,155,compile1},
          [{var,155,'T'},
           {call,155,
            {remote,155,{atom,155,erlang},{atom,155,setelement}},
            [{integer,155,8},{var,155,'Opts'},{var,155,'Term'}]}]}]}]}]},
   {clause,157,
    [{string,157,"v"},{var,157,'T'},{var,157,'Opts'}],
    [],
    [{call,158,
      {atom,158,compile1},
      [{var,158,'T'},
       {call,158,
        {remote,158,{atom,158,erlang},{atom,158,setelement}},
        [{integer,158,7},{var,158,'Opts'},{atom,158,true}]}]}]},
   {clause,159,
    [{op,159,'++',{string,159,"W"},{var,159,'Warn'}},
     {var,159,'T'},
     {match,159,
      {tuple,159,
       [{atom,159,options},
        {var,159,'_'},
        {var,159,'_'},
        {var,159,'_'},
        {var,159,'_'},
        {var,159,'_'},
        {var,159,'_'},
        {var,159,'_'},
        {var,159,'Spec'},
        {var,159,'_'},
        {var,159,'_'}]},
      {var,159,'Opts'}}],
    [],
    [{'case',160,
      {var,160,'Warn'},
      [{clause,161,
        [{string,161,"all"}],
        [],
        [{call,162,
          {atom,162,compile1},
          [{var,162,'T'},
           {call,162,
            {remote,162,{atom,162,erlang},{atom,162,setelement}},
            [{integer,162,6},{var,162,'Opts'},{integer,162,999}]}]}]},
       {clause,163,
        [{string,163,"error"}],
        [],
        [{call,164,
          {atom,164,compile1},
          [{var,164,'T'},
           {call,164,
            {remote,164,{atom,164,erlang},{atom,164,setelement}},
            [{integer,164,9},
             {var,164,'Opts'},
             {cons,164,{atom,164,warnings_as_errors},{var,164,'Spec'}}]}]}]},
       {clause,165,
        [{string,165,[]}],
        [],
        [{call,166,
          {atom,166,compile1},
          [{var,166,'T'},
           {call,166,
            {remote,166,{atom,166,erlang},{atom,166,setelement}},
            [{integer,166,6},{var,166,'Opts'},{integer,166,1}]}]}]},
       {clause,167,
        [{var,167,'_'}],
        [],
        [{'try',168,
          [{call,168,{atom,168,list_to_integer},[{var,168,'Warn'}]}],
          [{clause,169,
            [{var,169,'Level'}],
            [],
            [{call,170,
              {atom,170,compile1},
              [{var,170,'T'},
               {call,170,
                {remote,170,{atom,170,erlang},{atom,170,setelement}},
                [{integer,170,6},{var,170,'Opts'},{var,170,'Level'}]}]}]}],
          [{clause,172,
            [{tuple,172,[{atom,172,error},{atom,172,badarg},{var,172,'_'}]}],
            [],
            [{call,173,{atom,173,usage},[]}]}],
          []}]}]}]},
   {clause,176,
    [{string,176,"E"},
     {var,176,'T'},
     {match,176,
      {tuple,176,
       [{atom,176,options},
        {var,176,'_'},
        {var,176,'_'},
        {var,176,'_'},
        {var,176,'_'},
        {var,176,'_'},
        {var,176,'_'},
        {var,176,'_'},
        {var,176,'Spec'},
        {var,176,'_'},
        {var,176,'_'}]},
      {var,176,'Opts'}}],
    [],
    [{call,177,
      {atom,177,compile1},
      [{var,177,'T'},
       {call,177,
        {remote,177,{atom,177,erlang},{atom,177,setelement}},
        [{integer,177,9},
         {var,177,'Opts'},
         {cons,177,{atom,177,'E'},{var,177,'Spec'}}]}]}]},
   {clause,178,
    [{string,178,"P"},
     {var,178,'T'},
     {match,178,
      {tuple,178,
       [{atom,178,options},
        {var,178,'_'},
        {var,178,'_'},
        {var,178,'_'},
        {var,178,'_'},
        {var,178,'_'},
        {var,178,'_'},
        {var,178,'_'},
        {var,178,'Spec'},
        {var,178,'_'},
        {var,178,'_'}]},
      {var,178,'Opts'}}],
    [],
    [{call,179,
      {atom,179,compile1},
      [{var,179,'T'},
       {call,179,
        {remote,179,{atom,179,erlang},{atom,179,setelement}},
        [{integer,179,9},
         {var,179,'Opts'},
         {cons,179,{atom,179,'P'},{var,179,'Spec'}}]}]}]},
   {clause,180,
    [{string,180,"S"},
     {var,180,'T'},
     {match,180,
      {tuple,180,
       [{atom,180,options},
        {var,180,'_'},
        {var,180,'_'},
        {var,180,'_'},
        {var,180,'_'},
        {var,180,'_'},
        {var,180,'_'},
        {var,180,'_'},
        {var,180,'Spec'},
        {var,180,'_'},
        {var,180,'_'}]},
      {var,180,'Opts'}}],
    [],
    [{call,181,
      {atom,181,compile1},
      [{var,181,'T'},
       {call,181,
        {remote,181,{atom,181,erlang},{atom,181,setelement}},
        [{integer,181,9},
         {var,181,'Opts'},
         {cons,181,{atom,181,'S'},{var,181,'Spec'}}]}]}]},
   {clause,182,
    [{var,182,'Option'},{var,182,'_T'},{var,182,'_Opts'}],
    [],
    [{call,183,
      {remote,183,{atom,183,io},{atom,183,format}},
      [{atom,29,standard_error},
       {string,183,"Unknown option: -~s\n"},
       {cons,183,{var,183,'Option'},{nil,183}}]},
     {call,184,{atom,184,usage},[]}]}]},
 {function,186,parse_dep_option,2,
  [{clause,186,
    [{string,186,[]},{var,186,'T'}],
    [],
    [{tuple,187,
      [{cons,187,
        {atom,187,makedep},
        {cons,187,
         {tuple,187,[{atom,187,makedep_output},{atom,187,standard_io}]},
         {nil,187}}},
       {var,187,'T'}]}]},
   {clause,188,
    [{string,188,"D"},{var,188,'T'}],
    [],
    [{tuple,189,[{cons,189,{atom,189,makedep},{nil,189}},{var,189,'T'}]}]},
   {clause,190,
    [{op,190,'++',{string,190,"F"},{var,190,'Opt'}},{var,190,'T0'}],
    [],
    [{match,191,
      {tuple,191,[{var,191,'File'},{var,191,'T'}]},
      {call,191,
       {atom,191,get_option},
       [{string,191,"MF"},{var,191,'Opt'},{var,191,'T0'}]}},
     {tuple,192,
      [{cons,192,
        {atom,192,makedep},
        {cons,192,
         {tuple,192,[{atom,192,makedep_output},{var,192,'File'}]},
         {nil,192}}},
       {var,192,'T'}]}]},
   {clause,193,
    [{string,193,"G"},{var,193,'T'}],
    [],
    [{tuple,194,
      [{cons,194,{atom,194,makedep_add_missing},{nil,194}},{var,194,'T'}]}]},
   {clause,195,
    [{string,195,"P"},{var,195,'T'}],
    [],
    [{tuple,196,
      [{cons,196,{atom,196,makedep_phony},{nil,196}},{var,196,'T'}]}]},
   {clause,197,
    [{op,197,'++',{string,197,"Q"},{var,197,'Opt'}},{var,197,'T0'}],
    [],
    [{match,198,
      {tuple,198,[{var,198,'Target'},{var,198,'T'}]},
      {call,198,
       {atom,198,get_option},
       [{string,198,"MT"},{var,198,'Opt'},{var,198,'T0'}]}},
     {tuple,199,
      [{cons,199,
        {atom,199,makedep_quote_target},
        {cons,199,
         {tuple,199,[{atom,199,makedep_target},{var,199,'Target'}]},
         {nil,199}}},
       {var,199,'T'}]}]},
   {clause,200,
    [{op,200,'++',{string,200,"T"},{var,200,'Opt'}},{var,200,'T0'}],
    [],
    [{match,201,
      {tuple,201,[{var,201,'Target'},{var,201,'T'}]},
      {call,201,
       {atom,201,get_option},
       [{string,201,"MT"},{var,201,'Opt'},{var,201,'T0'}]}},
     {tuple,202,
      [{cons,202,
        {tuple,202,[{atom,202,makedep_target},{var,202,'Target'}]},
        {nil,202}},
       {var,202,'T'}]}]},
   {clause,203,
    [{var,203,'Opt'},{var,203,'_T'}],
    [],
    [{call,204,
      {remote,204,{atom,204,io},{atom,204,format}},
      [{atom,29,standard_error},
       {string,204,"Unknown option: -M~s\n"},
       {cons,204,{var,204,'Opt'},{nil,204}}]},
     {call,205,{atom,205,usage},[]}]}]},
 {function,207,usage,0,
  [{clause,207,[],[],
    [{match,208,
      {var,208,'H'},
      {cons,208,
       {tuple,208,
        [{string,208,"-b type"},
         {string,208,"type of output file (e.g. beam)"}]},
       {cons,209,
        {tuple,209,
         [{string,209,"-d"},{string,209,"turn on debugging of erlc itself"}]},
        {cons,210,
         {tuple,210,[{string,210,"-Dname"},{string,210,"define name"}]},
         {cons,211,
          {tuple,211,
           [{string,211,"-Dname=value"},
            {string,211,"define name to have value"}]},
          {cons,212,
           {tuple,212,
            [{string,212,"-help"},{string,212,"shows this help text"}]},
           {cons,213,
            {tuple,213,
             [{string,213,"-I path"},
              {string,213,"where to search for include files"}]},
            {cons,214,
             {tuple,214,
              [{string,214,"-M"},
               {string,214,
                "generate a rule for make(1) describing the dependencies"}]},
             {cons,215,
              {tuple,215,
               [{string,215,"-MF file"},
                {string,215,"write the dependencies to 'file'"}]},
              {cons,216,
               {tuple,216,
                [{string,216,"-MT target"},
                 {string,216,
                  "change the target of the rule emitted by dependency generation"}]},
               {cons,218,
                {tuple,218,
                 [{string,218,"-MQ target"},
                  {string,218,
                   "same as -MT but quote characters special to make(1)"}]},
                {cons,219,
                 {tuple,219,
                  [{string,219,"-MG"},
                   {string,219,
                    "consider missing headers as generated files and add them to the dependencies"}]},
                 {cons,221,
                  {tuple,221,
                   [{string,221,"-MP"},
                    {string,221,"add a phony target for each dependency"}]},
                  {cons,222,
                   {tuple,222,
                    [{string,222,"-MD"},
                     {string,222,
                      "same as -M -MT file (with default 'file')"}]},
                   {cons,223,
                    {tuple,223,
                     [{string,223,"-o name"},
                      {string,223,"name output directory or file"}]},
                    {cons,224,
                     {tuple,224,
                      [{string,224,"-pa path"},
                       {string,224,
                        "add path to the front of Erlang's code path"}]},
                     {cons,225,
                      {tuple,225,
                       [{string,225,"-pz path"},
                        {string,225,
                         "add path to the end of Erlang's code path"}]},
                      {cons,226,
                       {tuple,226,
                        [{string,226,"-smp"},
                         {string,226,"compile using SMP emulator"}]},
                       {cons,227,
                        {tuple,227,
                         [{string,227,"-v"},
                          {string,227,"verbose compiler output"}]},
                        {cons,228,
                         {tuple,228,
                          [{string,228,"-Werror"},
                           {string,228,"make all warnings into errors"}]},
                         {cons,229,
                          {tuple,229,
                           [{string,229,"-W0"},
                            {string,229,"disable warnings"}]},
                          {cons,230,
                           {tuple,230,
                            [{string,230,"-Wnumber"},
                             {string,230,"set warning level to number"}]},
                           {cons,231,
                            {tuple,231,
                             [{string,231,"-Wall"},
                              {string,231,"enable all warnings"}]},
                            {cons,232,
                             {tuple,232,
                              [{string,232,"-W"},
                               {string,232,
                                "enable warnings (default; same as -W1)"}]},
                             {cons,233,
                              {tuple,233,
                               [{string,233,"-E"},
                                {string,233,
                                 "generate listing of expanded code (Erlang compiler)"}]},
                              {cons,234,
                               {tuple,234,
                                [{string,234,"-S"},
                                 {string,234,
                                  "generate assembly listing (Erlang compiler)"}]},
                               {cons,235,
                                {tuple,235,
                                 [{string,235,"-P"},
                                  {string,235,
                                   "generate listing of preprocessed code (Erlang compiler)"}]},
                                {cons,236,
                                 {tuple,236,
                                  [{string,236,"+term"},
                                   {string,236,
                                    "pass the Erlang term unchanged to the compiler"}]},
                                 {nil,236}}}}}}}}}}}}}}}}}}}}}}}}}}}}},
     {call,237,
      {remote,237,{atom,237,io},{atom,237,put_chars}},
      [{atom,29,standard_error},
       {cons,238,
        {string,238,"Usage: erlc [Options] file.ext ...\n"},
        {cons,239,
         {string,239,"Options:\n"},
         {cons,240,
          {lc,240,
           {call,240,
            {remote,240,{atom,240,io_lib},{atom,240,format}},
            [{string,240,"~-14s ~s\n"},
             {cons,240,{var,240,'K'},{cons,240,{var,240,'D'},{nil,240}}}]},
           [{generate,240,
             {tuple,240,[{var,240,'K'},{var,240,'D'}]},
             {var,240,'H'}}]},
          {nil,240}}}}]},
     {atom,241,error}]}]},
 {function,243,get_option,3,
  [{clause,243,
    [{var,243,'_Name'},
     {nil,243},
     {cons,243,
      {match,243,{cons,243,{var,243,'C'},{var,243,'_'}},{var,243,'Option'}},
      {var,243,'T'}}],
    [[{op,243,'=/=',{var,243,'C'},{char,243,45}}]],
    [{tuple,244,[{var,244,'Option'},{var,244,'T'}]}]},
   {clause,245,
    [{var,245,'_Name'},
     {match,245,{cons,245,{var,245,'_'},{var,245,'_'}},{var,245,'Option'}},
     {var,245,'T'}],
    [],
    [{tuple,246,[{var,246,'Option'},{var,246,'T'}]}]},
   {clause,247,
    [{var,247,'Name'},{var,247,'_'},{var,247,'_'}],
    [],
    [{call,248,
      {atom,248,exit},
      [{tuple,248,
        [{atom,248,compiler_error},
         {op,248,'++',
          {string,248,"No value given to -"},
          {op,248,'++',{var,248,'Name'},{string,248," option"}}}]}]}]}]},
 {function,250,split_at_equals,2,
  [{clause,250,
    [{cons,250,{char,250,61},{var,250,'T'}},{var,250,'Acc'}],
    [],
    [{tuple,251,
      [{call,251,
        {remote,251,{atom,251,lists},{atom,251,reverse}},
        [{var,251,'Acc'}]},
       {var,251,'T'}]}]},
   {clause,252,
    [{cons,252,{var,252,'H'},{var,252,'T'}},{var,252,'Acc'}],
    [],
    [{call,253,
      {atom,253,split_at_equals},
      [{var,253,'T'},{cons,253,{var,253,'H'},{var,253,'Acc'}}]}]},
   {clause,254,
    [{nil,254},{var,254,'Acc'}],
    [],
    [{tuple,255,
      [{call,255,
        {remote,255,{atom,255,lists},{atom,255,reverse}},
        [{var,255,'Acc'}]},
       {nil,255}]}]}]},
 {function,257,compile2,2,
  [{clause,257,
    [{var,257,'Files'},
     {match,257,
      {tuple,257,
       [{atom,257,options},
        {var,257,'Incl'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'_'},
        {var,257,'Outfile'},
        {var,257,'Cwd'}]},
      {var,257,'Opts0'}}],
    [],
    [{match,258,
      {var,258,'Opts'},
      {call,258,
       {remote,258,{atom,258,erlang},{atom,258,setelement}},
       [{integer,258,2},
        {var,258,'Opts0'},
        {call,258,
         {remote,258,{atom,258,lists},{atom,258,reverse}},
         [{var,258,'Incl'}]}]}},
     {'case',259,
      {tuple,259,
       [{var,259,'Outfile'},{call,259,{atom,259,length},[{var,259,'Files'}]}]},
      [{clause,260,
        [{tuple,260,[{string,260,[]},{var,260,'_'}]}],
        [],
        [{call,261,
          {atom,261,compile3},
          [{var,261,'Files'},{var,261,'Cwd'},{var,261,'Opts'}]}]},
       {clause,262,
        [{tuple,262,[{cons,262,{var,262,'_'},{var,262,'_'}},{integer,262,1}]}],
        [],
        [{call,263,
          {atom,263,compile3},
          [{var,263,'Files'},{var,263,'Cwd'},{var,263,'Opts'}]}]},
       {clause,264,
        [{tuple,264,[{cons,264,{var,264,'_'},{var,264,'_'}},{var,264,'_N'}]}],
        [],
        [{call,265,
          {remote,265,{atom,265,io},{atom,265,put_chars}},
          [{atom,29,standard_error},
           {string,266,
            "Output file name given, but more than one input file.\n"}]},
         {atom,268,error}]}]}]}]},
 {function,273,compile3,3,
  [{clause,273,
    [{cons,273,{var,273,'File'},{var,273,'Rest'}},
     {var,273,'Cwd'},
     {var,273,'Options'}],
    [],
    [{match,274,
      {var,274,'Ext'},
      {call,274,
       {remote,274,{atom,274,filename},{atom,274,extension}},
       [{var,274,'File'}]}},
     {match,275,
      {var,275,'Root'},
      {call,275,
       {remote,275,{atom,275,filename},{atom,275,rootname}},
       [{var,275,'File'}]}},
     {match,276,
      {var,276,'InFile'},
      {call,276,
       {remote,276,{atom,276,filename},{atom,276,absname}},
       [{var,276,'Root'},{var,276,'Cwd'}]}},
     {match,277,
      {var,277,'OutFile'},
      {'case',278,
       {call,278,
        {remote,278,{atom,278,erlang},{atom,278,element}},
        [{integer,278,10},{var,278,'Options'}]},
       [{clause,279,
         [{string,279,[]}],
         [],
         [{call,280,
           {remote,280,{atom,280,filename},{atom,280,join}},
           [{call,280,
             {remote,280,{atom,280,erlang},{atom,280,element}},
             [{integer,280,3},{var,280,'Options'}]},
            {call,280,
             {remote,280,{atom,280,filename},{atom,280,basename}},
             [{var,280,'Root'}]}]}]},
        {clause,281,
         [{var,281,'Outfile'}],
         [],
         [{call,282,
           {remote,282,{atom,282,filename},{atom,282,rootname}},
           [{var,282,'Outfile'}]}]}]}},
     {'case',284,
      {call,284,
       {atom,284,compile_file},
       [{var,284,'Ext'},
        {var,284,'InFile'},
        {var,284,'OutFile'},
        {var,284,'Options'}]},
      [{clause,285,
        [{atom,285,ok}],
        [],
        [{call,286,
          {atom,286,compile3},
          [{var,286,'Rest'},{var,286,'Cwd'},{var,286,'Options'}]}]},
       {clause,287,[{var,287,'Other'}],[],[{var,288,'Other'}]}]}]},
   {clause,290,
    [{nil,290},{var,290,'_Cwd'},{var,290,'_Options'}],
    [],
    [{atom,290,ok}]}]},
 {function,294,compile_file,4,
  [{clause,294,
    [{string,294,[]},
     {var,294,'Input'},
     {var,294,'_Output'},
     {var,294,'_Options'}],
    [],
    [{call,295,
      {remote,295,{atom,295,io},{atom,295,format}},
      [{atom,29,standard_error},
       {string,295,"File has no extension: ~ts~n"},
       {cons,295,{var,295,'Input'},{nil,295}}]},
     {atom,296,error}]},
   {clause,297,
    [{var,297,'Ext'},{var,297,'Input'},{var,297,'Output'},{var,297,'Options'}],
    [],
    [{'case',298,
      {call,298,{atom,298,compiler},[{var,298,'Ext'}]},
      [{clause,299,
        [{atom,299,no}],
        [],
        [{call,300,
          {remote,300,{atom,300,io},{atom,300,format}},
          [{atom,29,standard_error},
           {string,300,"Unknown extension: '~ts'\n"},
           {cons,300,{var,300,'Ext'},{nil,300}}]},
         {atom,301,error}]},
       {clause,302,
        [{tuple,302,[{var,302,'M'},{var,302,'F'}]}],
        [],
        [{'case',303,
          {'catch',303,
           {call,303,
            {remote,303,{var,303,'M'},{var,303,'F'}},
            [{var,303,'Input'},{var,303,'Output'},{var,303,'Options'}]}},
          [{clause,304,[{atom,304,ok}],[],[{atom,304,ok}]},
           {clause,305,[{atom,305,error}],[],[{atom,305,error}]},
           {clause,306,
            [{tuple,306,[{atom,306,'EXIT'},{var,306,'Reason'}]}],
            [],
            [{call,307,
              {remote,307,{atom,307,io},{atom,307,format}},
              [{atom,29,standard_error},
               {string,308,"Compiler function ~w:~w/3 failed:\n~p~n"},
               {cons,309,
                {var,309,'M'},
                {cons,309,
                 {var,309,'F'},
                 {cons,309,{var,309,'Reason'},{nil,309}}}}]},
             {atom,310,error}]},
           {clause,311,
            [{var,311,'Other'}],
            [],
            [{call,312,
              {remote,312,{atom,312,io},{atom,312,format}},
              [{atom,29,standard_error},
               {string,313,"Compiler function ~w:~w/3 returned:\n~p~n"},
               {cons,314,
                {var,314,'M'},
                {cons,314,
                 {var,314,'F'},
                 {cons,314,{var,314,'Other'},{nil,314}}}}]},
             {atom,315,error}]}]}]}]}]}]},
 {function,321,file_or_directory,1,
  [{clause,321,
    [{var,321,'Name'}],
    [],
    [{'case',322,
      {call,322,
       {remote,322,{atom,322,file},{atom,322,read_file_info}},
       [{var,322,'Name'}]},
      [{clause,323,
        [{tuple,323,
          [{atom,323,ok},
           {tuple,323,
            [{atom,323,file_info},
             {var,323,'_'},
             {atom,323,regular},
             {var,323,'_'},
             {var,323,'_'},
             {var,323,'_'},
             {var,323,'_'},
             {var,323,'_'},
             {var,323,'_'},
             {var,323,'_'},
             {var,323,'_'},
             {var,323,'_'},
             {var,323,'_'},
             {var,323,'_'}]}]}],
        [],
        [{atom,324,file}]},
       {clause,325,
        [{tuple,325,[{atom,325,ok},{var,325,'_'}]}],
        [],
        [{atom,326,directory}]},
       {clause,327,
        [{tuple,327,[{atom,327,error},{var,327,'_'}]}],
        [],
        [{'case',328,
          {call,328,
           {remote,328,{atom,328,filename},{atom,328,extension}},
           [{var,328,'Name'}]},
          [{clause,329,[{nil,329}],[],[{atom,329,directory}]},
           {clause,330,[{var,330,'_Other'}],[],[{atom,330,file}]}]}]}]}]}]},
 {function,336,make_term,1,
  [{clause,336,
    [{var,336,'Str'}],
    [],
    [{'case',337,
      {call,337,
       {remote,337,{atom,337,erl_scan},{atom,337,string}},
       [{var,337,'Str'}]},
      [{clause,338,
        [{tuple,338,[{atom,338,ok},{var,338,'Tokens'},{var,338,'_'}]}],
        [],
        [{'case',339,
          {call,339,
           {remote,339,{atom,339,erl_parse},{atom,339,parse_term}},
           [{op,339,'++',
             {var,339,'Tokens'},
             {cons,339,
              {tuple,339,[{atom,339,dot},{integer,339,1}]},
              {nil,339}}}]},
          [{clause,340,
            [{tuple,340,[{atom,340,ok},{var,340,'Term'}]}],
            [],
            [{var,340,'Term'}]},
           {clause,341,
            [{tuple,341,
              [{atom,341,error},
               {tuple,341,[{var,341,'_'},{var,341,'_'},{var,341,'Reason'}]}]}],
            [],
            [{call,342,
              {remote,342,{atom,342,io},{atom,342,format}},
              [{atom,29,standard_error},
               {string,342,"~ts: ~ts~n"},
               {cons,342,
                {var,342,'Reason'},
                {cons,342,{var,342,'Str'},{nil,342}}}]},
             {call,343,{atom,343,throw},[{atom,343,error}]}]}]}]},
       {clause,345,
        [{tuple,345,
          [{atom,345,error},
           {tuple,345,[{var,345,'_'},{var,345,'_'},{var,345,'Reason'}]},
           {var,345,'_'}]}],
        [],
        [{call,346,
          {remote,346,{atom,346,io},{atom,346,format}},
          [{atom,29,standard_error},
           {string,346,"~ts: ~ts~n"},
           {cons,346,
            {var,346,'Reason'},
            {cons,346,{var,346,'Str'},{nil,346}}}]},
         {call,347,{atom,347,throw},[{atom,347,error}]}]}]}]}]}]
