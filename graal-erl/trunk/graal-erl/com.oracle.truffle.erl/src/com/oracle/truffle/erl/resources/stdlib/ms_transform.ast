ms_transform
[]
[]
[{function,75,format_error,1,
  [{clause,75,
    [{tuple,75,[{integer,47,50},{var,75,'Name'}]}],
    [],
    [{call,76,
      {remote,76,{atom,76,lists},{atom,76,flatten}},
      [{call,77,
        {remote,77,{atom,77,io_lib},{atom,77,format}},
        [{string,77,"variable ~p shadowed in ms_transform fun head"},
         {cons,78,{var,78,'Name'},{nil,78}}]}]}]},
   {clause,80,
    [{integer,27,1}],
    [],
    [{string,81,"Parameter of ets/dbg:fun2ms/1 is not a literal fun"}]},
   {clause,82,
    [{integer,28,2}],
    [],
    [{string,83,
      "ets:fun2ms requires fun with single variable or tuple parameter"}]},
   {clause,84,
    [{integer,29,3}],
    [],
    [{string,85,
      "dbg:fun2ms requires fun with single variable or list parameter"}]},
   {clause,86,
    [{integer,30,4}],
    [],
    [{string,87,
      "in fun head, only matching (=) on toplevel can be translated into match_spec"}]},
   {clause,88,
    [{integer,31,5}],
    [],
    [{string,89,
      "fun with semicolon (;) in guard cannot be translated into match_spec"}]},
   {clause,90,
    [{op,48,'+',{integer,38,16},{integer,25,0}}],
    [],
    [{string,91,
      "fun with guard matching ('=' in guard) is illegal as match_spec as well"}]},
   {clause,92,
    [{tuple,92,
      [{op,50,'+',{integer,39,17},{integer,25,0}},
       {var,92,'Name'},
       {var,92,'Arithy'}]}],
    [],
    [{call,93,
      {remote,93,{atom,93,lists},{atom,93,flatten}},
      [{call,93,
        {remote,93,{atom,93,io_lib},{atom,93,format}},
        [{string,93,
          "fun containing the local function call '~w/~w' (called in guard) cannot be translated into match_spec"},
         {cons,96,{var,96,'Name'},{cons,96,{var,96,'Arithy'},{nil,96}}}]}]}]},
   {clause,97,
    [{tuple,97,
      [{op,60,'+',{integer,44,22},{integer,25,0}},
       {var,97,'Module'},
       {var,97,'Name'},
       {var,97,'Arithy'}]}],
    [],
    [{call,98,
      {remote,98,{atom,98,lists},{atom,98,flatten}},
      [{call,98,
        {remote,98,{atom,98,io_lib},{atom,98,format}},
        [{string,98,
          "fun containing the remote function call '~w:~w/~w' (called in guard) cannot be translated into match_spec"},
         {cons,101,
          {var,101,'Module'},
          {cons,101,
           {var,101,'Name'},
           {cons,101,{var,101,'Arithy'},{nil,101}}}}]}]}]},
   {clause,102,
    [{tuple,102,[{op,52,'+',{integer,40,18},{integer,25,0}},{var,102,'Str'}]}],
    [],
    [{call,103,
      {remote,103,{atom,103,lists},{atom,103,flatten}},
      [{call,104,
        {remote,104,{atom,104,io_lib},{atom,104,format}},
        [{string,104,
          "the language element ~ts (in guard) cannot be translated into match_spec"},
         {cons,105,{var,105,'Str'},{nil,105}}]}]}]},
   {clause,106,
    [{tuple,106,[{op,62,'+',{integer,45,23},{integer,25,0}},{var,106,'Var'}]}],
    [],
    [{call,107,
      {remote,107,{atom,107,lists},{atom,107,flatten}},
      [{call,108,
        {remote,108,{atom,108,io_lib},{atom,108,format}},
        [{string,108,
          "bit syntax construction with variable ~w (in guard) cannot be translated into match_spec"},
         {cons,110,{var,110,'Var'},{nil,110}}]}]}]},
   {clause,111,
    [{tuple,111,
      [{op,64,'+',{integer,46,24},{integer,25,0}},{var,111,'Operator'}]}],
    [],
    [{call,114,
      {remote,114,{atom,114,lists},{atom,114,flatten}},
      [{call,115,
        {remote,115,{atom,115,io_lib},{atom,115,format}},
        [{string,115,"the operator ~w is not allowed in guards"},
         {cons,115,{var,115,'Operator'},{nil,115}}]}]}]},
   {clause,116,
    [{op,49,'+',{integer,38,16},{integer,26,100}}],
    [],
    [{string,117,
      "fun with body matching ('=' in body) is illegal as match_spec"}]},
   {clause,118,
    [{tuple,118,
      [{op,51,'+',{integer,39,17},{integer,26,100}},
       {var,118,'Name'},
       {var,118,'Arithy'}]}],
    [],
    [{call,119,
      {remote,119,{atom,119,lists},{atom,119,flatten}},
      [{call,119,
        {remote,119,{atom,119,io_lib},{atom,119,format}},
        [{string,119,
          "fun containing the local function call '~w/~w' (called in body) cannot be translated into match_spec"},
         {cons,122,
          {var,122,'Name'},
          {cons,122,{var,122,'Arithy'},{nil,122}}}]}]}]},
   {clause,123,
    [{tuple,123,
      [{op,61,'+',{integer,44,22},{integer,26,100}},
       {var,123,'Module'},
       {var,123,'Name'},
       {var,123,'Arithy'}]}],
    [],
    [{call,124,
      {remote,124,{atom,124,lists},{atom,124,flatten}},
      [{call,124,
        {remote,124,{atom,124,io_lib},{atom,124,format}},
        [{string,124,
          "fun containing the remote function call '~w:~w/~w' (called in body) cannot be translated into match_spec"},
         {cons,127,
          {var,127,'Module'},
          {cons,127,
           {var,127,'Name'},
           {cons,127,{var,127,'Arithy'},{nil,127}}}}]}]}]},
   {clause,128,
    [{tuple,128,
      [{op,53,'+',{integer,40,18},{integer,26,100}},{var,128,'Str'}]}],
    [],
    [{call,129,
      {remote,129,{atom,129,lists},{atom,129,flatten}},
      [{call,130,
        {remote,130,{atom,130,io_lib},{atom,130,format}},
        [{string,130,
          "the language element ~ts (in body) cannot be translated into match_spec"},
         {cons,131,{var,131,'Str'},{nil,131}}]}]}]},
   {clause,132,
    [{tuple,132,
      [{op,63,'+',{integer,45,23},{integer,26,100}},{var,132,'Var'}]}],
    [],
    [{call,133,
      {remote,133,{atom,133,lists},{atom,133,flatten}},
      [{call,134,
        {remote,134,{atom,134,io_lib},{atom,134,format}},
        [{string,134,
          "bit syntax construction with variable ~w (in body) cannot be translated into match_spec"},
         {cons,136,{var,136,'Var'},{nil,136}}]}]}]},
   {clause,137,
    [{tuple,137,
      [{op,65,'+',{integer,46,24},{integer,26,100}},{var,137,'Operator'}]}],
    [],
    [{call,140,
      {remote,140,{atom,140,lists},{atom,140,flatten}},
      [{call,141,
        {remote,141,{atom,141,io_lib},{atom,141,format}},
        [{string,141,"the operator ~w is not allowed in function bodies"},
         {cons,142,{var,142,'Operator'},{nil,142}}]}]}]},
   {clause,144,
    [{tuple,144,[{integer,32,6},{var,144,'Str'}]}],
    [],
    [{call,145,
      {remote,145,{atom,145,lists},{atom,145,flatten}},
      [{call,146,
        {remote,146,{atom,146,io_lib},{atom,146,format}},
        [{string,146,
          "the variable ~s is unbound, cannot translate into match_spec"},
         {cons,147,{var,147,'Str'},{nil,147}}]}]}]},
   {clause,148,
    [{tuple,148,[{integer,33,7},{var,148,'Name'}]}],
    [],
    [{call,149,
      {remote,149,{atom,149,lists},{atom,149,flatten}},
      [{call,150,
        {remote,150,{atom,150,io_lib},{atom,150,format}},
        [{string,150,"fun head contains unknown record type ~w"},
         {cons,150,{var,150,'Name'},{nil,150}}]}]}]},
   {clause,151,
    [{tuple,151,[{integer,34,8},{var,151,'RName'},{var,151,'FName'}]}],
    [],
    [{call,152,
      {remote,152,{atom,152,lists},{atom,152,flatten}},
      [{call,153,
        {remote,153,{atom,153,io_lib},{atom,153,format}},
        [{string,153,
          "fun head contains reference to unknown field ~w in record type ~w"},
         {cons,154,
          {var,154,'FName'},
          {cons,154,{var,154,'RName'},{nil,154}}}]}]}]},
   {clause,155,
    [{tuple,155,[{integer,35,9},{var,155,'RName'},{var,155,'FName'}]}],
    [],
    [{call,156,
      {remote,156,{atom,156,lists},{atom,156,flatten}},
      [{call,157,
        {remote,157,{atom,157,io_lib},{atom,157,format}},
        [{string,157,
          "fun head contains already defined field ~w in record type ~w"},
         {cons,158,
          {var,158,'FName'},
          {cons,158,{var,158,'RName'},{nil,158}}}]}]}]},
   {clause,159,
    [{tuple,159,[{integer,36,10},{var,159,'Atom'}]}],
    [],
    [{call,160,
      {remote,160,{atom,160,lists},{atom,160,flatten}},
      [{call,161,
        {remote,161,{atom,161,io_lib},{atom,161,format}},
        [{string,161,
          "fun head contains atom ~w, which conflics with reserved atoms in match_spec heads"},
         {cons,162,{var,162,'Atom'},{nil,162}}]}]}]},
   {clause,163,
    [{tuple,163,[{integer,37,11},{var,163,'Atom'}]}],
    [],
    [{call,164,
      {remote,164,{atom,164,lists},{atom,164,flatten}},
      [{call,165,
        {remote,165,{atom,165,io_lib},{atom,165,format}},
        [{string,165,
          "fun head contains bit syntax matching of variable ~w, which cannot be translated into match_spec"},
         {cons,166,{var,166,'Atom'},{nil,166}}]}]}]},
   {clause,167,
    [{tuple,167,
      [{op,56,'+',{integer,42,20},{integer,25,0}},{var,167,'Name'}]}],
    [],
    [{call,168,
      {remote,168,{atom,168,lists},{atom,168,flatten}},
      [{call,169,
        {remote,169,{atom,169,io_lib},{atom,169,format}},
        [{string,169,"fun guard contains unknown record type ~w"},
         {cons,169,{var,169,'Name'},{nil,169}}]}]}]},
   {clause,170,
    [{tuple,170,
      [{op,54,'+',{integer,41,19},{integer,25,0}},
       {var,170,'RName'},
       {var,170,'FName'}]}],
    [],
    [{call,171,
      {remote,171,{atom,171,lists},{atom,171,flatten}},
      [{call,172,
        {remote,172,{atom,172,io_lib},{atom,172,format}},
        [{string,172,
          "fun guard contains reference to unknown field ~w in record type ~w"},
         {cons,173,
          {var,173,'FName'},
          {cons,173,{var,173,'RName'},{nil,173}}}]}]}]},
   {clause,174,
    [{tuple,174,
      [{op,58,'+',{integer,43,21},{integer,25,0}},
       {var,174,'RName'},
       {var,174,'FName'}]}],
    [],
    [{call,175,
      {remote,175,{atom,175,lists},{atom,175,flatten}},
      [{call,176,
        {remote,176,{atom,176,io_lib},{atom,176,format}},
        [{string,176,
          "fun guard contains already defined field ~w in record type ~w"},
         {cons,177,
          {var,177,'FName'},
          {cons,177,{var,177,'RName'},{nil,177}}}]}]}]},
   {clause,178,
    [{tuple,178,
      [{op,57,'+',{integer,42,20},{integer,26,100}},{var,178,'Name'}]}],
    [],
    [{call,179,
      {remote,179,{atom,179,lists},{atom,179,flatten}},
      [{call,180,
        {remote,180,{atom,180,io_lib},{atom,180,format}},
        [{string,180,"fun body contains unknown record type ~w"},
         {cons,180,{var,180,'Name'},{nil,180}}]}]}]},
   {clause,181,
    [{tuple,181,
      [{op,55,'+',{integer,41,19},{integer,26,100}},
       {var,181,'RName'},
       {var,181,'FName'}]}],
    [],
    [{call,182,
      {remote,182,{atom,182,lists},{atom,182,flatten}},
      [{call,183,
        {remote,183,{atom,183,io_lib},{atom,183,format}},
        [{string,183,
          "fun body contains reference to unknown field ~w in record type ~w"},
         {cons,184,
          {var,184,'FName'},
          {cons,184,{var,184,'RName'},{nil,184}}}]}]}]},
   {clause,185,
    [{tuple,185,
      [{op,59,'+',{integer,43,21},{integer,26,100}},
       {var,185,'RName'},
       {var,185,'FName'}]}],
    [],
    [{call,186,
      {remote,186,{atom,186,lists},{atom,186,flatten}},
      [{call,187,
        {remote,187,{atom,187,io_lib},{atom,187,format}},
        [{string,187,
          "fun body contains already defined field ~w in record type ~w"},
         {cons,188,
          {var,188,'FName'},
          {cons,188,{var,188,'RName'},{nil,188}}}]}]}]},
   {clause,189,
    [{var,189,'Else'}],
    [],
    [{call,190,
      {remote,190,{atom,190,lists},{atom,190,flatten}},
      [{call,190,
        {remote,190,{atom,190,io_lib},{atom,190,format}},
        [{string,190,"Unknown error code ~w"},
         {cons,190,{var,190,'Else'},{nil,190}}]}]}]}]},
 {function,201,transform_from_shell,3,
  [{clause,201,
    [{var,201,'Dialect'},{var,201,'Clauses'},{var,201,'BoundEnvironment'}],
    [],
    [{match,202,
      {var,202,'SaveFilename'},
      {call,202,{atom,202,setup_filename},[]}},
     {'case',203,
      {'catch',203,
       {call,203,
        {atom,203,ms_clause_list},
        [{integer,203,1},
         {var,203,'Clauses'},
         {var,203,'Dialect'},
         {call,203,{remote,203,{atom,203,gb_sets},{atom,203,new}},[]}]}},
      [{clause,204,
        [{tuple,204,[{atom,204,'EXIT'},{var,204,'Reason'}]}],
        [],
        [{call,205,{atom,205,cleanup_filename},[{var,205,'SaveFilename'}]},
         {call,206,{atom,206,exit},[{var,206,'Reason'}]}]},
       {clause,207,
        [{tuple,207,[{atom,207,error},{var,207,'Line'},{var,207,'R'}]}],
        [],
        [{tuple,208,
          [{atom,208,error},
           {cons,208,
            {tuple,208,
             [{call,208,
               {atom,208,cleanup_filename},
               [{var,208,'SaveFilename'}]},
              {cons,209,
               {tuple,209,
                [{var,209,'Line'},{atom,-1,ms_transform},{var,209,'R'}]},
               {nil,209}}]},
            {nil,209}},
           {nil,209}]}]},
       {clause,210,
        [{var,210,'Else'}],
        [],
        [{'case',211,
          {'catch',211,
           {call,211,
            {atom,211,fixup_environment},
            [{var,211,'Else'},{var,211,'BoundEnvironment'}]}},
          [{clause,212,
            [{tuple,212,[{atom,212,error},{var,212,'Line1'},{var,212,'R1'}]}],
            [],
            [{tuple,213,
              [{atom,213,error},
               {cons,213,
                {tuple,213,
                 [{call,213,
                   {atom,213,cleanup_filename},
                   [{var,213,'SaveFilename'}]},
                  {cons,214,
                   {tuple,214,
                    [{var,214,'Line1'},{atom,-1,ms_transform},{var,214,'R1'}]},
                   {nil,214}}]},
                {nil,214}},
               {nil,214}]}]},
           {clause,215,
            [{var,215,'Else1'}],
            [],
            [{match,216,
              {var,216,'Ret'},
              {call,216,{atom,216,normalise},[{var,216,'Else1'}]}},
             {call,217,{atom,217,cleanup_filename},[{var,217,'SaveFilename'}]},
             {var,218,'Ret'}]}]}]}]}]}]},
 {function,231,parse_transform,2,
  [{clause,231,
    [{var,231,'Forms'},{var,231,'_Options'}],
    [],
    [{match,232,
      {var,232,'SaveFilename'},
      {call,232,{atom,232,setup_filename},[]}},
     {'case',234,
      {'catch',234,{call,234,{atom,234,forms},[{var,234,'Forms'}]}},
      [{clause,235,
        [{tuple,235,[{atom,235,'EXIT'},{var,235,'Reason'}]}],
        [],
        [{call,236,{atom,236,cleanup_filename},[{var,236,'SaveFilename'}]},
         {call,237,{atom,237,exit},[{var,237,'Reason'}]}]},
       {clause,238,
        [{tuple,238,[{atom,238,error},{var,238,'Line'},{var,238,'R'}]}],
        [],
        [{tuple,239,
          [{atom,239,error},
           {cons,239,
            {tuple,239,
             [{call,239,
               {atom,239,cleanup_filename},
               [{var,239,'SaveFilename'}]},
              {cons,240,
               {tuple,240,
                [{var,240,'Line'},{atom,-1,ms_transform},{var,240,'R'}]},
               {nil,240}}]},
            {nil,240}},
           {nil,240}]}]},
       {clause,241,
        [{var,241,'Else'}],
        [],
        [{'case',243,
          {call,243,{atom,243,get_warnings},[]},
          [{clause,244,
            [{nil,244}],
            [],
            [{call,245,{atom,245,cleanup_filename},[{var,245,'SaveFilename'}]},
             {var,246,'Else'}]},
           {clause,247,
            [{var,247,'WL'}],
            [],
            [{match,248,
              {var,248,'FName'},
              {call,248,
               {atom,248,cleanup_filename},
               [{var,248,'SaveFilename'}]}},
             {match,249,
              {var,249,'WList'},
              {lc,249,
               {tuple,249,
                [{var,249,'FName'},
                 {cons,249,
                  {tuple,249,
                   [{var,249,'L'},{atom,-1,ms_transform},{var,249,'R'}]},
                  {nil,249}}]},
               [{generate,249,
                 {tuple,249,[{var,249,'L'},{var,249,'R'}]},
                 {var,249,'WL'}}]}},
             {tuple,250,
              [{atom,250,warning},
               {var,250,'Else'},
               {var,250,'WList'}]}]}]}]}]}]}]},
 {function,254,get_warnings,0,
  [{clause,254,[],[],
    [{'case',255,
      {call,255,{atom,255,get},[{atom,255,warnings}]},
      [{clause,256,[{atom,256,undefined}],[],[{nil,257}]},
       {clause,258,[{var,258,'Else'}],[],[{var,259,'Else'}]}]}]}]},
 {function,262,add_warning,2,
  [{clause,262,
    [{var,262,'Line'},{var,262,'R'}],
    [],
    [{call,263,
      {atom,263,put},
      [{atom,263,warnings},
       {cons,263,
        {tuple,263,[{var,263,'Line'},{var,263,'R'}]},
        {call,263,{atom,263,get_warnings},[]}}]}]}]},
 {function,265,setup_filename,0,
  [{clause,265,[],[],
    [{tuple,266,
      [{call,266,{atom,266,erase},[{atom,266,filename}]},
       {call,266,{atom,266,erase},[{atom,266,records}]},
       {call,266,{atom,266,erase},[{atom,266,warnings}]}]}]}]},
 {function,268,put_filename,1,
  [{clause,268,
    [{var,268,'Name'}],
    [],
    [{call,269,{atom,269,put},[{atom,269,filename},{var,269,'Name'}]}]}]},
 {function,271,put_records,1,
  [{clause,271,
    [{var,271,'R'}],
    [],
    [{call,272,{atom,272,put},[{atom,272,records},{var,272,'R'}]},
     {atom,273,ok}]}]},
 {function,274,get_records,0,
  [{clause,274,[],[],
    [{'case',275,
      {call,275,{atom,275,get},[{atom,275,records}]},
      [{clause,276,[{atom,276,undefined}],[],[{nil,277}]},
       {clause,278,[{var,278,'Else'}],[],[{var,279,'Else'}]}]}]}]},
 {function,281,cleanup_filename,1,
  [{clause,281,
    [{tuple,281,[{var,281,'Old'},{var,281,'OldRec'},{var,281,'OldWarnings'}]}],
    [],
    [{match,282,
      {var,282,'Ret'},
      {'case',282,
       {call,282,{atom,282,erase},[{atom,282,filename}]},
       [{clause,283,[{atom,283,undefined}],[],[{string,284,"TOP_LEVEL"}]},
        {clause,285,[{var,285,'X'}],[],[{var,286,'X'}]}]}},
     {'case',288,
      {var,288,'OldRec'},
      [{clause,289,
        [{atom,289,undefined}],
        [],
        [{call,290,{atom,290,erase},[{atom,290,records}]}]},
       {clause,291,
        [{var,291,'Rec'}],
        [],
        [{call,292,{atom,292,put},[{atom,292,records},{var,292,'Rec'}]}]}]},
     {'case',294,
      {var,294,'OldWarnings'},
      [{clause,295,
        [{atom,295,undefined}],
        [],
        [{call,296,{atom,296,erase},[{atom,296,warnings}]}]},
       {clause,297,
        [{var,297,'Warn'}],
        [],
        [{call,298,{atom,298,put},[{atom,298,warnings},{var,298,'Warn'}]}]}]},
     {'case',300,
      {var,300,'Old'},
      [{clause,301,[{atom,301,undefined}],[],[{var,302,'Ret'}]},
       {clause,303,
        [{var,303,'Y'}],
        [],
        [{call,304,{atom,304,put},[{atom,304,filename},{var,304,'Y'}]},
         {var,305,'Ret'}]}]}]}]},
 {function,308,add_record_definition,1,
  [{clause,308,
    [{tuple,308,[{var,308,'Name'},{var,308,'FieldList'}]}],
    [],
    [{match,309,
      {tuple,309,[{var,309,'KeyList'},{var,309,'_'}]},
      {call,309,
       {remote,309,{atom,309,lists},{atom,309,foldl}},
       [{'fun',310,
         {clauses,
          [{clause,310,
            [{tuple,310,
              [{atom,310,record_field},
               {var,310,'_'},
               {tuple,310,
                [{atom,310,atom},{var,310,'Line0'},{var,310,'FieldName'}]}]},
             {tuple,310,[{var,310,'L'},{var,310,'C'}]}],
            [],
            [{tuple,311,
              [{cons,311,
                {tuple,311,
                 [{var,311,'FieldName'},
                  {var,311,'C'},
                  {tuple,311,
                   [{atom,311,atom},{var,311,'Line0'},{atom,311,undefined}]}]},
                {var,311,'L'}},
               {op,311,'+',{var,311,'C'},{integer,311,1}}]}]},
           {clause,312,
            [{tuple,312,
              [{atom,312,record_field},
               {var,312,'_'},
               {tuple,312,
                [{atom,312,atom},{var,312,'_'},{var,312,'FieldName'}]},
               {var,312,'Def'}]},
             {tuple,312,[{var,312,'L'},{var,312,'C'}]}],
            [],
            [{tuple,313,
              [{cons,313,
                {tuple,313,
                 [{var,313,'FieldName'},{var,313,'C'},{var,313,'Def'}]},
                {var,313,'L'}},
               {op,313,'+',{var,313,'C'},{integer,313,1}}]}]}]}},
        {tuple,315,[{nil,315},{integer,315,2}]},
        {var,316,'FieldList'}]}},
     {call,317,
      {atom,317,put_records},
      [{cons,317,
        {tuple,317,[{var,317,'Name'},{var,317,'KeyList'}]},
        {call,317,{atom,317,get_records},[]}}]}]}]},
 {function,319,forms,1,
  [{clause,319,
    [{cons,319,{var,319,'F0'},{var,319,'Fs0'}}],
    [],
    [{match,320,{var,320,'F1'},{call,320,{atom,320,form},[{var,320,'F0'}]}},
     {match,321,{var,321,'Fs1'},{call,321,{atom,321,forms},[{var,321,'Fs0'}]}},
     {cons,322,{var,322,'F1'},{var,322,'Fs1'}}]},
   {clause,323,[{nil,323}],[],[{nil,323}]}]},
 {function,325,form,1,
  [{clause,325,
    [{match,325,
      {tuple,325,
       [{atom,325,attribute},
        {var,325,'_'},
        {atom,325,file},
        {tuple,325,[{var,325,'Filename'},{var,325,'_'}]}]},
      {var,325,'Form'}}],
    [],
    [{call,326,{atom,326,put_filename},[{var,326,'Filename'}]},
     {var,327,'Form'}]},
   {clause,328,
    [{match,328,
      {tuple,328,
       [{atom,328,attribute},
        {var,328,'_'},
        {atom,328,record},
        {var,328,'Definition'}]},
      {var,328,'Form'}}],
    [],
    [{call,329,{atom,329,add_record_definition},[{var,329,'Definition'}]},
     {var,330,'Form'}]},
   {clause,331,
    [{tuple,331,
      [{atom,331,function},
       {var,331,'Line'},
       {var,331,'Name0'},
       {var,331,'Arity0'},
       {var,331,'Clauses0'}]}],
    [],
    [{match,332,
      {tuple,332,[{var,332,'Name'},{var,332,'Arity'},{var,332,'Clauses'}]},
      {call,332,
       {atom,332,function},
       [{var,332,'Name0'},{var,332,'Arity0'},{var,332,'Clauses0'}]}},
     {tuple,333,
      [{atom,333,function},
       {var,333,'Line'},
       {var,333,'Name'},
       {var,333,'Arity'},
       {var,333,'Clauses'}]}]},
   {clause,334,[{var,334,'AnyOther'}],[],[{var,335,'AnyOther'}]}]},
 {function,336,function,3,
  [{clause,336,
    [{var,336,'Name'},{var,336,'Arity'},{var,336,'Clauses0'}],
    [],
    [{match,337,
      {var,337,'Clauses1'},
      {call,337,{atom,337,clauses},[{var,337,'Clauses0'}]}},
     {tuple,338,[{var,338,'Name'},{var,338,'Arity'},{var,338,'Clauses1'}]}]}]},
 {function,339,clauses,1,
  [{clause,339,
    [{cons,339,{var,339,'C0'},{var,339,'Cs'}}],
    [],
    [{match,340,
      {var,340,'C1'},
      {call,340,
       {atom,340,clause},
       [{var,340,'C0'},
        {call,340,{remote,340,{atom,340,gb_sets},{atom,340,new}},[]}]}},
     {match,341,{var,341,'C2'},{call,341,{atom,341,clauses},[{var,341,'Cs'}]}},
     {cons,342,{var,342,'C1'},{var,342,'C2'}}]},
   {clause,343,[{nil,343}],[],[{nil,343}]}]},
 {function,345,clause,2,
  [{clause,345,
    [{tuple,345,
      [{atom,345,clause},
       {var,345,'Line'},
       {var,345,'H0'},
       {var,345,'G0'},
       {var,345,'B0'}]},
     {var,345,'Bound'}],
    [],
    [{match,346,
      {tuple,346,[{var,346,'H1'},{var,346,'Bound1'}]},
      {call,346,{atom,346,copy},[{var,346,'H0'},{var,346,'Bound'}]}},
     {match,347,
      {tuple,347,[{var,347,'B1'},{var,347,'_Bound2'}]},
      {call,347,{atom,347,copy},[{var,347,'B0'},{var,347,'Bound1'}]}},
     {tuple,348,
      [{atom,348,clause},
       {var,348,'Line'},
       {var,348,'H1'},
       {var,348,'G0'},
       {var,348,'B1'}]}]}]},
 {function,350,copy,2,
  [{clause,350,
    [{tuple,350,
      [{atom,350,call},
       {var,350,'Line'},
       {tuple,350,
        [{atom,350,remote},
         {var,350,'_Line2'},
         {tuple,350,[{atom,350,atom},{var,350,'_Line3'},{atom,350,ets}]},
         {tuple,350,[{atom,350,atom},{var,350,'_Line4'},{atom,350,fun2ms}]}]},
       {var,351,'As0'}]},
     {var,351,'Bound'}],
    [],
    [{tuple,352,
      [{call,352,
        {atom,352,transform_call},
        [{atom,352,ets},{var,352,'Line'},{var,352,'As0'},{var,352,'Bound'}]},
       {var,352,'Bound'}]}]},
   {clause,353,
    [{tuple,353,
      [{atom,353,call},
       {var,353,'Line'},
       {tuple,353,
        [{atom,353,remote},
         {var,353,'_Line2'},
         {tuple,353,
          [{atom,353,record_field},
           {var,353,'_Line3'},
           {tuple,354,[{atom,354,atom},{var,354,'_Line4'},{atom,354,''}]},
           {tuple,354,[{atom,354,atom},{var,354,'_Line5'},{atom,354,ets}]}]},
         {tuple,355,[{atom,355,atom},{var,355,'_Line6'},{atom,355,fun2ms}]}]},
       {var,355,'As0'}]},
     {var,355,'Bound'}],
    [],
    [{tuple,357,
      [{call,357,
        {atom,357,transform_call},
        [{atom,357,ets},{var,357,'Line'},{var,357,'As0'},{var,357,'Bound'}]},
       {var,357,'Bound'}]}]},
   {clause,358,
    [{tuple,358,
      [{atom,358,call},
       {var,358,'Line'},
       {tuple,358,
        [{atom,358,remote},
         {var,358,'_Line2'},
         {tuple,358,[{atom,358,atom},{var,358,'_Line3'},{atom,358,dbg}]},
         {tuple,358,[{atom,358,atom},{var,358,'_Line4'},{atom,358,fun2ms}]}]},
       {var,359,'As0'}]},
     {var,359,'Bound'}],
    [],
    [{tuple,360,
      [{call,360,
        {atom,360,transform_call},
        [{atom,360,dbg},{var,360,'Line'},{var,360,'As0'},{var,360,'Bound'}]},
       {var,360,'Bound'}]}]},
   {clause,361,
    [{tuple,361,
      [{atom,361,match},{var,361,'Line'},{var,361,'A'},{var,361,'B'}]},
     {var,361,'Bound'}],
    [],
    [{match,362,
      {tuple,362,[{var,362,'B1'},{var,362,'Bound1'}]},
      {call,362,{atom,362,copy},[{var,362,'B'},{var,362,'Bound'}]}},
     {match,363,
      {tuple,363,[{var,363,'A1'},{var,363,'Bound2'}]},
      {call,363,{atom,363,copy},[{var,363,'A'},{var,363,'Bound'}]}},
     {tuple,364,
      [{tuple,364,
        [{atom,364,match},{var,364,'Line'},{var,364,'A1'},{var,364,'B1'}]},
       {call,364,
        {remote,364,{atom,364,gb_sets},{atom,364,union}},
        [{var,364,'Bound1'},{var,364,'Bound2'}]}]}]},
   {clause,365,
    [{match,365,
      {tuple,365,[{atom,365,var},{var,365,'_Line'},{atom,365,'_'}]},
      {var,365,'VarDef'}},
     {var,365,'Bound'}],
    [],
    [{tuple,366,[{var,366,'VarDef'},{var,366,'Bound'}]}]},
   {clause,367,
    [{match,367,
      {tuple,367,[{atom,367,var},{var,367,'_Line'},{var,367,'Name'}]},
      {var,367,'VarDef'}},
     {var,367,'Bound'}],
    [],
    [{match,368,
      {var,368,'Bound1'},
      {call,368,
       {remote,368,{atom,368,gb_sets},{atom,368,add}},
       [{var,368,'Name'},{var,368,'Bound'}]}},
     {tuple,369,[{var,369,'VarDef'},{var,369,'Bound1'}]}]},
   {clause,370,
    [{tuple,370,
      [{atom,370,'fun'},
       {var,370,'Line'},
       {tuple,370,[{atom,370,clauses},{var,370,'Clauses'}]}]},
     {var,370,'Bound'}],
    [],
    [{match,371,
      {tuple,371,[{var,371,'NewClauses'},{var,371,'_IgnoredBindings'}]},
      {call,371,{atom,371,copy_list},[{var,371,'Clauses'},{var,371,'Bound'}]}},
     {tuple,372,
      [{tuple,372,
        [{atom,372,'fun'},
         {var,372,'Line'},
         {tuple,372,[{atom,372,clauses},{var,372,'NewClauses'}]}]},
       {var,372,'Bound'}]}]},
   {clause,373,
    [{tuple,373,
      [{atom,373,named_fun},
       {var,373,'Line'},
       {var,373,'Name'},
       {var,373,'Clauses'}]},
     {var,373,'Bound'}],
    [],
    [{match,374,
      {var,374,'Bound1'},
      {'case',374,
       {var,374,'Name'},
       [{clause,375,[{atom,375,'_'}],[],[{var,375,'Bound'}]},
        {clause,376,
         [{var,376,'Name'}],
         [],
         [{call,376,
           {remote,376,{atom,376,gb_sets},{atom,376,add}},
           [{var,376,'Name'},{var,376,'Bound'}]}]}]}},
     {match,378,
      {tuple,378,[{var,378,'NewClauses'},{var,378,'_IgnoredBindings'}]},
      {call,378,
       {atom,378,copy_list},
       [{var,378,'Clauses'},{var,378,'Bound1'}]}},
     {tuple,379,
      [{tuple,379,
        [{atom,379,named_fun},
         {var,379,'Line'},
         {var,379,'Name'},
         {var,379,'NewClauses'}]},
       {var,379,'Bound'}]}]},
   {clause,380,
    [{tuple,380,
      [{atom,380,'case'},
       {var,380,'Line'},
       {var,380,'Of'},
       {var,380,'ClausesList'}]},
     {var,380,'Bound'}],
    [],
    [{match,381,
      {tuple,381,[{var,381,'NewOf'},{var,381,'NewBind0'}]},
      {call,381,{atom,381,copy},[{var,381,'Of'},{var,381,'Bound'}]}},
     {match,382,
      {tuple,382,[{var,382,'NewClausesList'},{var,382,'NewBindings'}]},
      {call,382,
       {atom,382,copy_case_clauses},
       [{var,382,'ClausesList'},{var,382,'NewBind0'},{nil,382}]}},
     {tuple,383,
      [{tuple,383,
        [{atom,383,'case'},
         {var,383,'Line'},
         {var,383,'NewOf'},
         {var,383,'NewClausesList'}]},
       {var,383,'NewBindings'}]}]},
   {clause,384,
    [{var,384,'T'},{var,384,'Bound'}],
    [[{call,384,{atom,384,is_tuple},[{var,384,'T'}]}]],
    [{match,385,
      {tuple,385,[{var,385,'L'},{var,385,'Bound1'}]},
      {call,385,
       {atom,385,copy_list},
       [{call,385,{atom,385,tuple_to_list},[{var,385,'T'}]},
        {var,385,'Bound'}]}},
     {tuple,386,
      [{call,386,{atom,386,list_to_tuple},[{var,386,'L'}]},
       {var,386,'Bound1'}]}]},
   {clause,387,
    [{var,387,'L'},{var,387,'Bound'}],
    [[{call,387,{atom,387,is_list},[{var,387,'L'}]}]],
    [{call,388,{atom,388,copy_list},[{var,388,'L'},{var,388,'Bound'}]}]},
   {clause,389,
    [{var,389,'AnyOther'},{var,389,'Bound'}],
    [],
    [{tuple,390,[{var,390,'AnyOther'},{var,390,'Bound'}]}]}]},
 {function,392,copy_case_clauses,3,
  [{clause,392,
    [{nil,392},{var,392,'Bound'},{var,392,'AddSets'}],
    [],
    [{match,393,
      {var,393,'ReallyAdded'},
      {call,393,
       {remote,393,{atom,393,gb_sets},{atom,393,intersection}},
       [{var,393,'AddSets'}]}},
     {tuple,394,
      [{nil,394},
       {call,394,
        {remote,394,{atom,394,gb_sets},{atom,394,union}},
        [{var,394,'Bound'},{var,394,'ReallyAdded'}]}]}]},
   {clause,395,
    [{cons,395,
      {tuple,395,
       [{atom,395,clause},
        {var,395,'Line'},
        {var,395,'Match'},
        {var,395,'Guard'},
        {var,395,'Clauses'}]},
      {var,395,'T'}},
     {var,395,'Bound'},
     {var,395,'AddSets'}],
    [],
    [{match,396,
      {tuple,396,[{var,396,'NewMatch'},{var,396,'MatchBinds'}]},
      {call,396,{atom,396,copy},[{var,396,'Match'},{var,396,'Bound'}]}},
     {match,397,
      {tuple,397,[{var,397,'NewGuard'},{var,397,'GuardBinds'}]},
      {call,397,{atom,397,copy},[{var,397,'Guard'},{var,397,'MatchBinds'}]}},
     {match,398,
      {tuple,398,[{var,398,'NewClauses'},{var,398,'AllBinds'}]},
      {call,398,{atom,398,copy},[{var,398,'Clauses'},{var,398,'GuardBinds'}]}},
     {match,401,
      {var,401,'AddedBinds'},
      {call,401,
       {remote,401,{atom,401,gb_sets},{atom,401,subtract}},
       [{var,401,'AllBinds'},{var,401,'Bound'}]}},
     {match,402,
      {tuple,402,[{var,402,'NewTail'},{var,402,'ExportedBindings'}]},
      {call,403,
       {atom,403,copy_case_clauses},
       [{var,403,'T'},
        {var,403,'Bound'},
        {cons,403,{var,403,'AddedBinds'},{var,403,'AddSets'}}]}},
     {tuple,404,
      [{cons,404,
        {tuple,404,
         [{atom,404,clause},
          {var,404,'Line'},
          {var,404,'NewMatch'},
          {var,404,'NewGuard'},
          {var,404,'NewClauses'}]},
        {var,404,'NewTail'}},
       {var,404,'ExportedBindings'}]}]}]},
 {function,406,copy_list,2,
  [{clause,406,
    [{cons,406,{var,406,'H'},{var,406,'T'}},{var,406,'Bound'}],
    [],
    [{match,407,
      {tuple,407,[{var,407,'C1'},{var,407,'Bound1'}]},
      {call,407,{atom,407,copy},[{var,407,'H'},{var,407,'Bound'}]}},
     {match,408,
      {tuple,408,[{var,408,'C2'},{var,408,'Bound2'}]},
      {call,408,{atom,408,copy_list},[{var,408,'T'},{var,408,'Bound1'}]}},
     {tuple,409,
      [{cons,409,{var,409,'C1'},{var,409,'C2'}},{var,409,'Bound2'}]}]},
   {clause,410,
    [{nil,410},{var,410,'Bound'}],
    [],
    [{tuple,411,[{nil,411},{var,411,'Bound'}]}]}]},
 {function,413,transform_call,4,
  [{clause,413,
    [{var,413,'Type'},
     {var,413,'_Line'},
     {cons,413,
      {tuple,413,
       [{atom,413,'fun'},
        {var,413,'Line2'},
        {tuple,413,[{atom,413,clauses},{var,413,'ClauseList'}]}]},
      {nil,413}},
     {var,413,'Bound'}],
    [],
    [{call,414,
      {atom,414,ms_clause_list},
      [{var,414,'Line2'},
       {var,414,'ClauseList'},
       {var,414,'Type'},
       {var,414,'Bound'}]}]},
   {clause,415,
    [{var,415,'_Type'},
     {var,415,'Line'},
     {var,415,'_NoAbstractFun'},
     {var,415,'_'}],
    [],
    [{call,416,
      {atom,416,throw},
      [{tuple,416,[{atom,416,error},{var,416,'Line'},{integer,27,1}]}]}]}]},
 {function,419,ms_clause_expand,1,
  [{clause,419,
    [{tuple,419,
      [{atom,419,clause},
       {var,419,'Line'},
       {var,419,'Parameters'},
       {match,419,
        {var,419,'Guard'},
        {cons,419,{var,419,'_'},{cons,419,{var,419,'_'},{var,419,'_'}}}},
       {var,419,'Body'}]}],
    [],
    [{lc,420,
      {tuple,420,
       [{atom,420,clause},
        {var,420,'Line'},
        {var,420,'Parameters'},
        {cons,420,{var,420,'X'},{nil,420}},
        {var,420,'Body'}]},
      [{generate,420,{var,420,'X'},{var,420,'Guard'}}]}]},
   {clause,421,[{var,421,'_Other'}],[],[{atom,422,false}]}]},
 {function,424,ms_clause_list,4,
  [{clause,424,
    [{var,424,'Line'},
     {cons,424,{var,424,'H'},{var,424,'T'}},
     {var,424,'Type'},
     {var,424,'Bound'}],
    [],
    [{'case',425,
      {call,425,{atom,425,ms_clause_expand},[{var,425,'H'}]},
      [{clause,426,
        [{var,426,'NewHead'}],
        [[{call,426,{atom,426,is_list},[{var,426,'NewHead'}]}]],
        [{call,427,
          {atom,427,ms_clause_list},
          [{var,427,'Line'},
           {op,427,'++',{var,427,'NewHead'},{var,427,'T'}},
           {var,427,'Type'},
           {var,427,'Bound'}]}]},
       {clause,428,
        [{atom,428,false}],
        [],
        [{tuple,429,
          [{atom,429,cons},
           {var,429,'Line'},
           {call,429,
            {atom,429,ms_clause},
            [{var,429,'H'},{var,429,'Type'},{var,429,'Bound'}]},
           {call,430,
            {atom,430,ms_clause_list},
            [{var,430,'Line'},
             {var,430,'T'},
             {var,430,'Type'},
             {var,430,'Bound'}]}]}]}]}]},
   {clause,432,
    [{var,432,'Line'},{nil,432},{var,432,'_'},{var,432,'_'}],
    [],
    [{tuple,433,[{atom,433,nil},{var,433,'Line'}]}]}]},
 {function,434,ms_clause,3,
  [{clause,434,
    [{tuple,434,
      [{atom,434,clause},
       {var,434,'Line'},
       {var,434,'Parameters'},
       {var,434,'Guards'},
       {var,434,'Body'}]},
     {var,434,'Type'},
     {var,434,'Bound'}],
    [],
    [{call,435,
      {atom,435,check_type},
      [{var,435,'Line'},{var,435,'Parameters'},{var,435,'Type'}]},
     {match,436,
      {tuple,436,[{var,436,'MSHead'},{var,436,'Bindings'}]},
      {call,436,
       {atom,436,transform_head},
       [{var,436,'Parameters'},{var,436,'Bound'}]}},
     {match,437,
      {var,437,'MSGuards'},
      {call,437,
       {atom,437,transform_guards},
       [{var,437,'Line'},{var,437,'Guards'},{var,437,'Bindings'}]}},
     {match,438,
      {var,438,'MSBody'},
      {call,438,
       {atom,438,transform_body},
       [{var,438,'Line'},{var,438,'Body'},{var,438,'Bindings'}]}},
     {tuple,439,
      [{atom,439,tuple},
       {var,439,'Line'},
       {cons,439,
        {var,439,'MSHead'},
        {cons,439,
         {var,439,'MSGuards'},
         {cons,439,{var,439,'MSBody'},{nil,439}}}}]}]}]},
 {function,442,check_type,3,
  [{clause,442,
    [{var,442,'_'},
     {cons,442,
      {tuple,442,[{atom,442,var},{var,442,'_'},{var,442,'_'}]},
      {nil,442}},
     {var,442,'_'}],
    [],
    [{atom,443,ok}]},
   {clause,444,
    [{var,444,'_'},
     {cons,444,
      {tuple,444,[{atom,444,tuple},{var,444,'_'},{var,444,'_'}]},
      {nil,444}},
     {atom,444,ets}],
    [],
    [{atom,445,ok}]},
   {clause,446,
    [{var,446,'_'},
     {cons,446,
      {tuple,446,
       [{atom,446,record},{var,446,'_'},{var,446,'_'},{var,446,'_'}]},
      {nil,446}},
     {atom,446,ets}],
    [],
    [{atom,447,ok}]},
   {clause,448,
    [{var,448,'_'},
     {cons,448,
      {tuple,448,[{atom,448,cons},{var,448,'_'},{var,448,'_'},{var,448,'_'}]},
      {nil,448}},
     {atom,448,dbg}],
    [],
    [{atom,449,ok}]},
   {clause,450,
    [{var,450,'Line0'},
     {cons,450,
      {tuple,450,
       [{atom,450,match},
        {var,450,'_'},
        {tuple,450,[{atom,450,var},{var,450,'_'},{var,450,'_'}]},
        {var,450,'X'}]},
      {nil,450}},
     {var,450,'Any'}],
    [],
    [{call,451,
      {atom,451,check_type},
      [{var,451,'Line0'},
       {cons,451,{var,451,'X'},{nil,451}},
       {var,451,'Any'}]}]},
   {clause,452,
    [{var,452,'Line0'},
     {cons,452,
      {tuple,452,
       [{atom,452,match},
        {var,452,'_'},
        {var,452,'X'},
        {tuple,452,[{atom,452,var},{var,452,'_'},{var,452,'_'}]}]},
      {nil,452}},
     {var,452,'Any'}],
    [],
    [{call,453,
      {atom,453,check_type},
      [{var,453,'Line0'},
       {cons,453,{var,453,'X'},{nil,453}},
       {var,453,'Any'}]}]},
   {clause,454,
    [{var,454,'Line'},{var,454,'_Type'},{atom,454,ets}],
    [],
    [{call,455,
      {atom,455,throw},
      [{tuple,455,[{atom,455,error},{var,455,'Line'},{integer,28,2}]}]}]},
   {clause,456,
    [{var,456,'Line'},{var,456,'_'},{atom,456,dbg}],
    [],
    [{call,457,
      {atom,457,throw},
      [{tuple,457,[{atom,457,error},{var,457,'Line'},{integer,29,3}]}]}]}]},
 {function,464,transform_guards,3,
  [{clause,464,
    [{var,464,'Line'},{nil,464},{var,464,'_Bindings'}],
    [],
    [{tuple,465,[{atom,465,nil},{var,465,'Line'}]}]},
   {clause,466,
    [{var,466,'Line'},{cons,466,{var,466,'G'},{nil,466}},{var,466,'Bindings'}],
    [],
    [{match,467,
      {var,467,'B'},
      {tuple,467,
       [{atom,467,tgd},{var,467,'Bindings'},{atom,467,guard},{integer,25,0}]}},
     {call,468,
      {atom,468,tg0},
      [{var,468,'Line'},{var,468,'G'},{var,468,'B'}]}]},
   {clause,469,
    [{var,469,'Line'},{var,469,'_'},{var,469,'_'}],
    [],
    [{call,470,
      {atom,470,throw},
      [{tuple,470,[{atom,470,error},{var,470,'Line'},{integer,31,5}]}]}]}]},
 {function,472,transform_body,3,
  [{clause,472,
    [{var,472,'Line'},{var,472,'Body'},{var,472,'Bindings'}],
    [],
    [{match,473,
      {var,473,'B'},
      {tuple,473,
       [{atom,473,tgd},
        {var,473,'Bindings'},
        {atom,473,body},
        {integer,26,100}]}},
     {call,474,
      {atom,474,tg0},
      [{var,474,'Line'},{var,474,'Body'},{var,474,'B'}]}]}]},
 {function,477,guard_top_trans,1,
  [{clause,477,
    [{tuple,477,
      [{atom,477,call},
       {var,477,'Line0'},
       {tuple,477,[{atom,477,atom},{var,477,'Line1'},{var,477,'OldTest'}]},
       {var,477,'Params'}]}],
    [],
    [{'case',478,
      {call,478,
       {atom,478,old_bool_test},
       [{var,478,'OldTest'},
        {call,478,{atom,478,length},[{var,478,'Params'}]}]},
      [{clause,479,
        [{atom,479,undefined}],
        [],
        [{tuple,480,
          [{atom,480,call},
           {var,480,'Line0'},
           {tuple,480,[{atom,480,atom},{var,480,'Line1'},{var,480,'OldTest'}]},
           {var,480,'Params'}]}]},
       {clause,481,
        [{var,481,'Trans'}],
        [],
        [{tuple,482,
          [{atom,482,call},
           {var,482,'Line0'},
           {tuple,482,[{atom,482,atom},{var,482,'Line1'},{var,482,'Trans'}]},
           {var,482,'Params'}]}]}]}]},
   {clause,484,[{var,484,'Else'}],[],[{var,485,'Else'}]}]},
 {function,487,tg0,3,
  [{clause,487,
    [{var,487,'Line'},{nil,487},{var,487,'_'}],
    [],
    [{tuple,488,[{atom,488,nil},{var,488,'Line'}]}]},
   {clause,489,
    [{var,489,'Line'},{cons,489,{var,489,'H0'},{var,489,'T'}},{var,489,'B'}],
    [[{op,489,'=:=',
       {call,489,
        {remote,489,{atom,489,erlang},{atom,489,element}},
        [{integer,489,3},{var,489,'B'}]},
       {atom,489,guard}}]],
    [{match,490,
      {var,490,'H'},
      {call,490,{atom,490,guard_top_trans},[{var,490,'H0'}]}},
     {tuple,491,
      [{atom,491,cons},
       {var,491,'Line'},
       {call,491,{atom,491,tg},[{var,491,'H'},{var,491,'B'}]},
       {call,491,
        {atom,491,tg0},
        [{var,491,'Line'},{var,491,'T'},{var,491,'B'}]}]}]},
   {clause,492,
    [{var,492,'Line'},{cons,492,{var,492,'H'},{var,492,'T'}},{var,492,'B'}],
    [],
    [{tuple,493,
      [{atom,493,cons},
       {var,493,'Line'},
       {call,493,{atom,493,tg},[{var,493,'H'},{var,493,'B'}]},
       {call,493,
        {atom,493,tg0},
        [{var,493,'Line'},{var,493,'T'},{var,493,'B'}]}]}]}]},
 {function,496,tg,2,
  [{clause,496,
    [{tuple,496,
      [{atom,496,match},{var,496,'Line'},{var,496,'_'},{var,496,'_'}]},
     {var,496,'B'}],
    [],
    [{call,497,
      {atom,497,throw},
      [{tuple,497,
        [{atom,497,error},
         {var,497,'Line'},
         {op,497,'+',
          {integer,38,16},
          {call,497,
           {remote,497,{atom,497,erlang},{atom,497,element}},
           [{integer,497,4},{var,497,'B'}]}}]}]}]},
   {clause,498,
    [{tuple,498,
      [{atom,498,op},
       {var,498,'Line'},
       {var,498,'Operator'},
       {var,498,'O1'},
       {var,498,'O2'}]},
     {var,498,'B'}],
    [],
    [{tuple,499,
      [{atom,499,tuple},
       {var,499,'Line'},
       {cons,499,
        {tuple,499,[{atom,499,atom},{var,499,'Line'},{var,499,'Operator'}]},
        {cons,499,
         {call,499,{atom,499,tg},[{var,499,'O1'},{var,499,'B'}]},
         {cons,499,
          {call,499,{atom,499,tg},[{var,499,'O2'},{var,499,'B'}]},
          {nil,499}}}}]}]},
   {clause,500,
    [{tuple,500,
      [{atom,500,op},{var,500,'Line'},{var,500,'Operator'},{var,500,'O1'}]},
     {var,500,'B'}],
    [],
    [{tuple,501,
      [{atom,501,tuple},
       {var,501,'Line'},
       {cons,501,
        {tuple,501,[{atom,501,atom},{var,501,'Line'},{var,501,'Operator'}]},
        {cons,501,
         {call,501,{atom,501,tg},[{var,501,'O1'},{var,501,'B'}]},
         {nil,501}}}]}]},
   {clause,502,
    [{tuple,502,
      [{atom,502,call},
       {var,502,'_Line'},
       {tuple,502,[{atom,502,atom},{var,502,'Line2'},{atom,502,bindings}]},
       {nil,502}]},
     {var,502,'_B'}],
    [],
    [{tuple,503,[{atom,503,atom},{var,503,'Line2'},{atom,503,'$*'}]}]},
   {clause,504,
    [{tuple,504,
      [{atom,504,call},
       {var,504,'_Line'},
       {tuple,504,[{atom,504,atom},{var,504,'Line2'},{atom,504,object}]},
       {nil,504}]},
     {var,504,'_B'}],
    [],
    [{tuple,505,[{atom,505,atom},{var,505,'Line2'},{atom,505,'$_'}]}]},
   {clause,506,
    [{tuple,506,
      [{atom,506,call},
       {var,506,'Line'},
       {match,506,
        {tuple,506,[{atom,506,atom},{var,506,'_'},{atom,506,is_record}]},
        {var,506,'Call'}},
       {cons,506,
        {var,506,'Object'},
        {cons,506,
         {match,506,
          {tuple,506,[{atom,506,atom},{var,506,'Line3'},{var,506,'RName'}]},
          {var,506,'R'}},
         {nil,506}}}]},
     {var,506,'B'}],
    [],
    [{match,507,
      {var,507,'MSObject'},
      {call,507,{atom,507,tg},[{var,507,'Object'},{var,507,'B'}]}},
     {match,508,{var,508,'RDefs'},{call,508,{atom,508,get_records},[]}},
     {'case',509,
      {call,509,
       {remote,509,{atom,509,lists},{atom,509,keysearch}},
       [{var,509,'RName'},{integer,509,1},{var,509,'RDefs'}]},
      [{clause,510,
        [{tuple,510,
          [{atom,510,value},
           {tuple,510,[{var,510,'RName'},{var,510,'FieldList'}]}]}],
        [],
        [{match,511,
          {var,511,'RSize'},
          {op,511,'+',
           {call,511,{atom,511,length},[{var,511,'FieldList'}]},
           {integer,511,1}}},
         {tuple,512,
          [{atom,512,tuple},
           {var,512,'Line'},
           {cons,512,
            {var,512,'Call'},
            {cons,512,
             {var,512,'MSObject'},
             {cons,512,
              {var,512,'R'},
              {cons,512,
               {tuple,512,
                [{atom,512,integer},{var,512,'Line3'},{var,512,'RSize'}]},
               {nil,512}}}}}]}]},
       {clause,513,
        [{var,513,'_'}],
        [],
        [{call,514,
          {atom,514,throw},
          [{tuple,514,
            [{atom,514,error},
             {var,514,'Line3'},
             {tuple,514,
              [{op,514,'+',
                {integer,42,20},
                {call,514,
                 {remote,514,{atom,514,erlang},{atom,514,element}},
                 [{integer,514,4},{var,514,'B'}]}},
               {var,514,'RName'}]}]}]}]}]}]},
   {clause,516,
    [{tuple,516,
      [{atom,516,call},
       {var,516,'Line'},
       {tuple,516,[{atom,516,atom},{var,516,'Line2'},{var,516,'FunName'}]},
       {var,516,'ParaList'}]},
     {var,516,'B'}],
    [],
    [{'case',517,
      {call,517,
       {atom,517,is_ms_function},
       [{var,517,'FunName'},
        {call,517,{atom,517,length},[{var,517,'ParaList'}]},
        {call,517,
         {remote,517,{atom,517,erlang},{atom,517,element}},
         [{integer,517,3},{var,517,'B'}]}]},
      [{clause,518,
        [{atom,518,true}],
        [],
        [{tuple,519,
          [{atom,519,tuple},
           {var,519,'Line'},
           {cons,519,
            {tuple,519,
             [{atom,519,atom},{var,519,'Line2'},{var,519,'FunName'}]},
            {call,520,
             {remote,520,{atom,520,lists},{atom,520,map}},
             [{'fun',520,
               {clauses,
                [{clause,520,
                  [{var,520,'X'}],
                  [],
                  [{call,520,{atom,520,tg},[{var,520,'X'},{var,520,'B'}]}]}]}},
              {var,520,'ParaList'}]}}]}]},
       {clause,521,
        [{var,521,'_'}],
        [],
        [{call,522,
          {atom,522,throw},
          [{tuple,522,
            [{atom,522,error},
             {var,522,'Line'},
             {tuple,522,
              [{op,522,'+',
                {integer,39,17},
                {call,522,
                 {remote,522,{atom,522,erlang},{atom,522,element}},
                 [{integer,522,4},{var,522,'B'}]}},
               {var,523,'FunName'},
               {call,523,{atom,523,length},[{var,523,'ParaList'}]}]}]}]}]}]}]},
   {clause,525,
    [{tuple,525,
      [{atom,525,call},
       {var,525,'Line'},
       {tuple,525,
        [{atom,525,remote},
         {var,525,'_'},
         {tuple,525,[{atom,525,atom},{var,525,'_'},{atom,525,erlang}]},
         {tuple,525,[{atom,525,atom},{var,525,'Line2'},{var,525,'FunName'}]}]},
       {var,525,'ParaList'}]},
     {var,526,'B'}],
    [],
    [{match,527,
      {var,527,'L'},
      {call,527,{atom,527,length},[{var,527,'ParaList'}]}},
     {'case',528,
      {call,528,
       {atom,528,is_imported_from_erlang},
       [{var,528,'FunName'},
        {var,528,'L'},
        {call,528,
         {remote,528,{atom,528,erlang},{atom,528,element}},
         [{integer,528,3},{var,528,'B'}]}]},
      [{clause,529,
        [{atom,529,true}],
        [],
        [{'case',530,
          {call,530,
           {atom,530,is_operator},
           [{var,530,'FunName'},
            {var,530,'L'},
            {call,530,
             {remote,530,{atom,530,erlang},{atom,530,element}},
             [{integer,530,3},{var,530,'B'}]}]},
          [{clause,531,
            [{atom,531,false}],
            [],
            [{call,532,
              {atom,532,tg},
              [{tuple,532,
                [{atom,532,call},
                 {var,532,'Line'},
                 {tuple,532,
                  [{atom,532,atom},{var,532,'Line2'},{var,532,'FunName'}]},
                 {var,532,'ParaList'}]},
               {var,532,'B'}]}]},
           {clause,533,
            [{atom,533,true}],
            [],
            [{call,534,
              {atom,534,tg},
              [{call,534,
                {atom,534,list_to_tuple},
                [{cons,534,
                  {atom,534,op},
                  {cons,534,
                   {var,534,'Line2'},
                   {cons,534,{var,534,'FunName'},{var,534,'ParaList'}}}}]},
               {var,534,'B'}]}]}]}]},
       {clause,536,
        [{var,536,'_'}],
        [],
        [{call,537,
          {atom,537,throw},
          [{tuple,537,
            [{atom,537,error},
             {var,537,'Line'},
             {tuple,537,
              [{op,537,'+',
                {integer,44,22},
                {call,537,
                 {remote,537,{atom,537,erlang},{atom,537,element}},
                 [{integer,537,4},{var,537,'B'}]}},
               {atom,537,erlang},
               {var,538,'FunName'},
               {call,538,{atom,538,length},[{var,538,'ParaList'}]}]}]}]}]}]}]},
   {clause,540,
    [{tuple,540,
      [{atom,540,call},
       {var,540,'Line'},
       {tuple,540,
        [{atom,540,remote},
         {var,540,'_'},
         {tuple,540,[{atom,540,atom},{var,540,'_'},{var,540,'ModuleName'}]},
         {tuple,541,[{atom,541,atom},{var,541,'_'},{var,541,'FunName'}]}]},
       {var,541,'_ParaList'}]},
     {var,541,'B'}],
    [],
    [{call,542,
      {atom,542,throw},
      [{tuple,542,
        [{atom,542,error},
         {var,542,'Line'},
         {tuple,542,
          [{op,542,'+',
            {integer,44,22},
            {call,542,
             {remote,542,{atom,542,erlang},{atom,542,element}},
             [{integer,542,4},{var,542,'B'}]}},
           {var,542,'ModuleName'},
           {var,542,'FunName'}]}]}]}]},
   {clause,543,
    [{tuple,543,
      [{atom,543,cons},{var,543,'Line'},{var,543,'H'},{var,543,'T'}]},
     {var,543,'B'}],
    [],
    [{tuple,544,
      [{atom,544,cons},
       {var,544,'Line'},
       {call,544,{atom,544,tg},[{var,544,'H'},{var,544,'B'}]},
       {call,544,{atom,544,tg},[{var,544,'T'},{var,544,'B'}]}]}]},
   {clause,545,
    [{tuple,545,[{atom,545,nil},{var,545,'Line'}]},{var,545,'_B'}],
    [],
    [{tuple,546,[{atom,546,nil},{var,546,'Line'}]}]},
   {clause,547,
    [{tuple,547,[{atom,547,tuple},{var,547,'Line'},{var,547,'L'}]},
     {var,547,'B'}],
    [],
    [{tuple,548,
      [{atom,548,tuple},
       {var,548,'Line'},
       {cons,548,
        {tuple,548,
         [{atom,548,tuple},
          {var,548,'Line'},
          {call,548,
           {remote,548,{atom,548,lists},{atom,548,map}},
           [{'fun',548,
             {clauses,
              [{clause,548,
                [{var,548,'X'}],
                [],
                [{call,548,{atom,548,tg},[{var,548,'X'},{var,548,'B'}]}]}]}},
            {var,548,'L'}]}]},
        {nil,548}}]}]},
   {clause,549,
    [{tuple,549,[{atom,549,integer},{var,549,'Line'},{var,549,'I'}]},
     {var,549,'_'}],
    [],
    [{tuple,550,[{atom,550,integer},{var,550,'Line'},{var,550,'I'}]}]},
   {clause,551,
    [{tuple,551,[{atom,551,char},{var,551,'Line'},{var,551,'C'}]},
     {var,551,'_'}],
    [],
    [{tuple,552,[{atom,552,char},{var,552,'Line'},{var,552,'C'}]}]},
   {clause,553,
    [{tuple,553,[{atom,553,float},{var,553,'Line'},{var,553,'F'}]},
     {var,553,'_'}],
    [],
    [{tuple,554,[{atom,554,float},{var,554,'Line'},{var,554,'F'}]}]},
   {clause,555,
    [{tuple,555,[{atom,555,atom},{var,555,'Line'},{var,555,'A'}]},
     {var,555,'_'}],
    [],
    [{'case',556,
      {call,556,{atom,556,atom_to_list},[{var,556,'A'}]},
      [{clause,557,
        [{cons,557,{char,557,36},{var,557,'_'}}],
        [],
        [{tuple,558,
          [{atom,558,tuple},
           {var,558,'Line'},
           {cons,558,
            {tuple,558,[{atom,558,atom},{var,558,'Line'},{atom,558,const}]},
            {cons,558,
             {tuple,558,[{atom,558,atom},{var,558,'Line'},{var,558,'A'}]},
             {nil,558}}}]}]},
       {clause,559,
        [{var,559,'_'}],
        [],
        [{tuple,560,[{atom,560,atom},{var,560,'Line'},{var,560,'A'}]}]}]}]},
   {clause,562,
    [{tuple,562,[{atom,562,string},{var,562,'Line'},{var,562,'S'}]},
     {var,562,'_'}],
    [],
    [{tuple,563,[{atom,563,string},{var,563,'Line'},{var,563,'S'}]}]},
   {clause,564,
    [{tuple,564,[{atom,564,var},{var,564,'Line'},{var,564,'VarName'}]},
     {var,564,'B'}],
    [],
    [{'case',565,
      {call,565,
       {atom,565,lkup_bind},
       [{var,565,'VarName'},
        {call,565,
         {remote,565,{atom,565,erlang},{atom,565,element}},
         [{integer,565,2},{var,565,'B'}]}]},
      [{clause,566,
        [{atom,566,undefined}],
        [],
        [{tuple,567,
          [{atom,567,tuple},
           {var,567,'Line'},
           {cons,567,
            {tuple,567,[{atom,567,atom},{var,567,'Line'},{atom,567,const}]},
            {cons,567,
             {tuple,567,[{atom,567,var},{var,567,'Line'},{var,567,'VarName'}]},
             {nil,567}}}]}]},
       {clause,568,
        [{var,568,'AtomName'}],
        [],
        [{tuple,569,
          [{atom,569,atom},{var,569,'Line'},{var,569,'AtomName'}]}]}]}]},
   {clause,571,
    [{tuple,571,
      [{atom,571,record_field},
       {var,571,'Line'},
       {var,571,'Object'},
       {var,571,'RName'},
       {tuple,571,[{atom,571,atom},{var,571,'_Line1'},{var,571,'KeyName'}]}]},
     {var,571,'B'}],
    [],
    [{match,572,{var,572,'RDefs'},{call,572,{atom,572,get_records},[]}},
     {'case',573,
      {call,573,
       {remote,573,{atom,573,lists},{atom,573,keysearch}},
       [{var,573,'RName'},{integer,573,1},{var,573,'RDefs'}]},
      [{clause,574,
        [{tuple,574,
          [{atom,574,value},
           {tuple,574,[{var,574,'RName'},{var,574,'FieldList'}]}]}],
        [],
        [{'case',575,
          {call,575,
           {remote,575,{atom,575,lists},{atom,575,keysearch}},
           [{var,575,'KeyName'},{integer,575,1},{var,575,'FieldList'}]},
          [{clause,576,
            [{tuple,576,
              [{atom,576,value},
               {tuple,576,
                [{var,576,'KeyName'},{var,576,'Position'},{var,576,'_'}]}]}],
            [],
            [{match,577,
              {var,577,'NewObject'},
              {call,577,{atom,577,tg},[{var,577,'Object'},{var,577,'B'}]}},
             {tuple,578,
              [{atom,578,tuple},
               {var,578,'Line'},
               {cons,578,
                {tuple,578,
                 [{atom,578,atom},{var,578,'Line'},{atom,578,element}]},
                {cons,579,
                 {tuple,579,
                  [{atom,579,integer},{var,579,'Line'},{var,579,'Position'}]},
                 {cons,579,{var,579,'NewObject'},{nil,579}}}}]}]},
           {clause,580,
            [{var,580,'_'}],
            [],
            [{call,581,
              {atom,581,throw},
              [{tuple,581,
                [{atom,581,error},
                 {var,581,'Line'},
                 {tuple,581,
                  [{op,581,'+',
                    {integer,41,19},
                    {call,581,
                     {remote,581,{atom,581,erlang},{atom,581,element}},
                     [{integer,581,4},{var,581,'B'}]}},
                   {var,581,'RName'},
                   {var,582,'KeyName'}]}]}]}]}]}]},
       {clause,584,
        [{var,584,'_'}],
        [],
        [{call,585,
          {atom,585,throw},
          [{tuple,585,
            [{atom,585,error},
             {var,585,'Line'},
             {tuple,585,
              [{op,585,'+',
                {integer,42,20},
                {call,585,
                 {remote,585,{atom,585,erlang},{atom,585,element}},
                 [{integer,585,4},{var,585,'B'}]}},
               {var,585,'RName'}]}]}]}]}]}]},
   {clause,588,
    [{tuple,588,
      [{atom,588,record},
       {var,588,'Line'},
       {var,588,'RName'},
       {var,588,'RFields'}]},
     {var,588,'B'}],
    [],
    [{match,589,{var,589,'RDefs'},{call,589,{atom,589,get_records},[]}},
     {match,590,
      {var,590,'KeyList0'},
      {call,590,
       {remote,590,{atom,590,lists},{atom,590,foldl}},
       [{'fun',590,
         {clauses,
          [{clause,590,
            [{tuple,590,
              [{atom,590,record_field},
               {var,590,'_'},
               {tuple,590,[{atom,590,atom},{var,590,'_'},{var,590,'Key'}]},
               {var,590,'Value'}]},
             {var,591,'L'}],
            [],
            [{match,592,
              {var,592,'NV'},
              {call,592,{atom,592,tg},[{var,592,'Value'},{var,592,'B'}]}},
             {cons,593,
              {tuple,593,[{var,593,'Key'},{var,593,'NV'}]},
              {var,593,'L'}}]},
           {clause,594,
            [{tuple,594,
              [{atom,594,record_field},
               {var,594,'_'},
               {tuple,594,[{atom,594,var},{var,594,'_'},{atom,594,'_'}]},
               {var,594,'Value'}]},
             {var,595,'L'}],
            [],
            [{match,596,
              {var,596,'NV'},
              {call,596,{atom,596,tg},[{var,596,'Value'},{var,596,'B'}]}},
             {cons,597,
              {tuple,597,[{tuple,597,[{atom,597,default}]},{var,597,'NV'}]},
              {var,597,'L'}}]},
           {clause,598,
            [{var,598,'_'},{var,598,'_'}],
            [],
            [{call,599,
              {atom,599,throw},
              [{tuple,599,
                [{atom,599,error},
                 {var,599,'Line'},
                 {tuple,600,
                  [{op,600,'+',
                    {integer,42,20},
                    {call,600,
                     {remote,600,{atom,600,erlang},{atom,600,element}},
                     [{integer,600,4},{var,600,'B'}]}},
                   {var,601,'RName'}]}]}]}]}]}},
        {nil,603},
        {var,604,'RFields'}]}},
     {match,605,
      {var,605,'DefValue'},
      {'case',605,
       {call,605,
        {remote,605,{atom,605,lists},{atom,605,keysearch}},
        [{tuple,605,[{atom,605,default}]},
         {integer,605,1},
         {var,605,'KeyList0'}]},
       [{clause,606,
         [{tuple,606,
           [{atom,606,value},
            {tuple,606,
             [{tuple,606,[{atom,606,default}]},
              {var,606,'OverriddenDefValue'}]}]}],
         [],
         [{tuple,607,[{atom,607,true},{var,607,'OverriddenDefValue'}]}]},
        {clause,608,[{var,608,'_'}],[],[{atom,609,false}]}]}},
     {match,611,
      {var,611,'KeyList'},
      {call,611,
       {remote,611,{atom,611,lists},{atom,611,keydelete}},
       [{tuple,611,[{atom,611,default}]},
        {integer,611,1},
        {var,611,'KeyList0'}]}},
     {'case',612,
      {call,612,
       {remote,612,{atom,612,lists},{atom,612,keysearch}},
       [{tuple,612,[{atom,612,default}]},{integer,612,1},{var,612,'KeyList'}]},
      [{clause,613,
        [{tuple,613,
          [{atom,613,value},
           {tuple,613,[{tuple,613,[{atom,613,default}]},{var,613,'_'}]}]}],
        [],
        [{call,614,
          {atom,614,throw},
          [{tuple,614,
            [{atom,614,error},
             {var,614,'Line'},
             {tuple,614,
              [{op,614,'+',
                {integer,43,21},
                {call,614,
                 {remote,614,{atom,614,erlang},{atom,614,element}},
                 [{integer,614,4},{var,614,'B'}]}},
               {var,614,'RName'},
               {atom,614,'_'}]}]}]}]},
       {clause,615,[{var,615,'_'}],[],[{atom,616,ok}]}]},
     {'case',618,
      {call,618,
       {remote,618,{atom,618,lists},{atom,618,keysearch}},
       [{var,618,'RName'},{integer,618,1},{var,618,'RDefs'}]},
      [{clause,619,
        [{tuple,619,
          [{atom,619,value},
           {tuple,619,[{var,619,'RName'},{var,619,'FieldList0'}]}]}],
        [],
        [{match,620,
          {var,620,'FieldList1'},
          {call,620,
           {remote,620,{atom,620,lists},{atom,620,foldl}},
           [{'fun',621,
             {clauses,
              [{clause,621,
                [{tuple,621,[{var,621,'FN'},{var,621,'_'},{var,621,'Def'}]},
                 {var,621,'Acc'}],
                [],
                [{match,622,
                  {var,622,'El'},
                  {'case',622,
                   {call,622,
                    {remote,622,{atom,622,lists},{atom,622,keysearch}},
                    [{var,622,'FN'},{integer,622,1},{var,622,'KeyList'}]},
                   [{clause,623,
                     [{tuple,623,
                       [{atom,623,value},
                        {tuple,623,[{var,623,'FN'},{var,623,'X0'}]}]}],
                     [],
                     [{var,624,'X0'}]},
                    {clause,625,
                     [{var,625,'_'}],
                     [],
                     [{'case',626,
                       {var,626,'DefValue'},
                       [{clause,627,
                         [{tuple,627,
                           [{atom,627,true},{var,627,'Overridden'}]}],
                         [],
                         [{var,628,'Overridden'}]},
                        {clause,629,
                         [{atom,629,false}],
                         [],
                         [{var,630,'Def'}]}]}]}]}},
                 {cons,633,{var,633,'El'},{var,633,'Acc'}}]}]}},
            {nil,635},
            {var,636,'FieldList0'}]}},
         {call,637,
          {atom,637,check_multi_field},
          [{var,637,'RName'},
           {var,637,'Line'},
           {var,637,'KeyList'},
           {op,638,'+',
            {integer,43,21},
            {call,638,
             {remote,638,{atom,638,erlang},{atom,638,element}},
             [{integer,638,4},{var,638,'B'}]}}]},
         {call,639,
          {atom,639,check_undef_field},
          [{var,639,'RName'},
           {var,639,'Line'},
           {var,639,'KeyList'},
           {var,639,'FieldList0'},
           {op,640,'+',
            {integer,41,19},
            {call,640,
             {remote,640,{atom,640,erlang},{atom,640,element}},
             [{integer,640,4},{var,640,'B'}]}}]},
         {tuple,641,
          [{atom,641,tuple},
           {var,641,'Line'},
           {cons,641,
            {tuple,641,
             [{atom,641,tuple},
              {var,641,'Line'},
              {cons,641,
               {tuple,641,
                [{atom,641,atom},{var,641,'Line'},{var,641,'RName'}]},
               {var,641,'FieldList1'}}]},
            {nil,641}}]}]},
       {clause,642,
        [{var,642,'_'}],
        [],
        [{call,643,
          {atom,643,throw},
          [{tuple,643,
            [{atom,643,error},
             {var,643,'Line'},
             {tuple,643,
              [{op,643,'+',
                {integer,42,20},
                {call,643,
                 {remote,643,{atom,643,erlang},{atom,643,element}},
                 [{integer,643,4},{var,643,'B'}]}},
               {var,643,'RName'}]}]}]}]}]}]},
   {clause,646,
    [{tuple,646,
      [{atom,646,record_index},
       {var,646,'Line'},
       {var,646,'RName'},
       {tuple,646,[{atom,646,atom},{var,646,'Line2'},{var,646,'KeyName'}]}]},
     {var,646,'B'}],
    [],
    [{match,647,{var,647,'RDefs'},{call,647,{atom,647,get_records},[]}},
     {'case',648,
      {call,648,
       {remote,648,{atom,648,lists},{atom,648,keysearch}},
       [{var,648,'RName'},{integer,648,1},{var,648,'RDefs'}]},
      [{clause,649,
        [{tuple,649,
          [{atom,649,value},
           {tuple,649,[{var,649,'RName'},{var,649,'FieldList'}]}]}],
        [],
        [{'case',650,
          {call,650,
           {remote,650,{atom,650,lists},{atom,650,keysearch}},
           [{var,650,'KeyName'},{integer,650,1},{var,650,'FieldList'}]},
          [{clause,651,
            [{tuple,651,
              [{atom,651,value},
               {tuple,651,
                [{var,651,'KeyName'},{var,651,'Position'},{var,651,'_'}]}]}],
            [],
            [{tuple,652,
              [{atom,652,integer},{var,652,'Line2'},{var,652,'Position'}]}]},
           {clause,653,
            [{var,653,'_'}],
            [],
            [{call,654,
              {atom,654,throw},
              [{tuple,654,
                [{atom,654,error},
                 {var,654,'Line2'},
                 {tuple,654,
                  [{op,654,'+',
                    {integer,41,19},
                    {call,654,
                     {remote,654,{atom,654,erlang},{atom,654,element}},
                     [{integer,654,4},{var,654,'B'}]}},
                   {var,654,'RName'},
                   {var,655,'KeyName'}]}]}]}]}]}]},
       {clause,657,
        [{var,657,'_'}],
        [],
        [{call,658,
          {atom,658,throw},
          [{tuple,658,
            [{atom,658,error},
             {var,658,'Line'},
             {tuple,658,
              [{op,658,'+',
                {integer,42,20},
                {call,658,
                 {remote,658,{atom,658,erlang},{atom,658,element}},
                 [{integer,658,4},{var,658,'B'}]}},
               {var,658,'RName'}]}]}]}]}]}]},
   {clause,661,
    [{tuple,661,
      [{atom,661,record},
       {var,661,'Line'},
       {match,661,
        {tuple,661,[{atom,661,var},{var,661,'Line2'},{var,661,'_VName'}]},
        {var,661,'AVName'}},
       {var,661,'RName'},
       {var,661,'RFields'}]},
     {var,661,'B'}],
    [],
    [{match,662,{var,662,'RDefs'},{call,662,{atom,662,get_records},[]}},
     {match,663,
      {var,663,'MSVName'},
      {call,663,{atom,663,tg},[{var,663,'AVName'},{var,663,'B'}]}},
     {match,664,
      {var,664,'KeyList'},
      {call,664,
       {remote,664,{atom,664,lists},{atom,664,foldl}},
       [{'fun',664,
         {clauses,
          [{clause,664,
            [{tuple,664,
              [{atom,664,record_field},
               {var,664,'_'},
               {tuple,664,[{atom,664,atom},{var,664,'_'},{var,664,'Key'}]},
               {var,664,'Value'}]},
             {var,665,'L'}],
            [],
            [{match,666,
              {var,666,'NV'},
              {call,666,{atom,666,tg},[{var,666,'Value'},{var,666,'B'}]}},
             {cons,667,
              {tuple,667,[{var,667,'Key'},{var,667,'NV'}]},
              {var,667,'L'}}]},
           {clause,668,
            [{var,668,'_'},{var,668,'_'}],
            [],
            [{call,669,
              {atom,669,throw},
              [{tuple,669,
                [{atom,669,error},{var,669,'Line'},{integer,33,7}]}]}]}]}},
        {nil,671},
        {var,672,'RFields'}]}},
     {'case',673,
      {call,673,
       {remote,673,{atom,673,lists},{atom,673,keysearch}},
       [{var,673,'RName'},{integer,673,1},{var,673,'RDefs'}]},
      [{clause,674,
        [{tuple,674,
          [{atom,674,value},
           {tuple,674,[{var,674,'RName'},{var,674,'FieldList0'}]}]}],
        [],
        [{match,675,
          {var,675,'FieldList1'},
          {call,675,
           {remote,675,{atom,675,lists},{atom,675,foldl}},
           [{'fun',676,
             {clauses,
              [{clause,676,
                [{tuple,676,[{var,676,'FN'},{var,676,'Pos'},{var,676,'_'}]},
                 {var,676,'Acc'}],
                [],
                [{match,677,
                  {var,677,'El'},
                  {'case',677,
                   {call,677,
                    {remote,677,{atom,677,lists},{atom,677,keysearch}},
                    [{var,677,'FN'},{integer,677,1},{var,677,'KeyList'}]},
                   [{clause,678,
                     [{tuple,678,
                       [{atom,678,value},
                        {tuple,678,[{var,678,'FN'},{var,678,'X0'}]}]}],
                     [],
                     [{var,679,'X0'}]},
                    {clause,680,
                     [{var,680,'_'}],
                     [],
                     [{tuple,681,
                       [{atom,681,tuple},
                        {var,681,'Line2'},
                        {cons,682,
                         {tuple,682,
                          [{atom,682,atom},
                           {var,682,'Line2'},
                           {atom,682,element}]},
                         {cons,683,
                          {tuple,683,
                           [{atom,683,integer},
                            {var,683,'Line2'},
                            {var,683,'Pos'}]},
                          {cons,684,{var,684,'MSVName'},{nil,684}}}}]}]}]}},
                 {cons,686,{var,686,'El'},{var,686,'Acc'}}]}]}},
            {nil,688},
            {var,689,'FieldList0'}]}},
         {call,690,
          {atom,690,check_multi_field},
          [{var,690,'RName'},
           {var,690,'Line'},
           {var,690,'KeyList'},
           {op,691,'+',
            {integer,43,21},
            {call,691,
             {remote,691,{atom,691,erlang},{atom,691,element}},
             [{integer,691,4},{var,691,'B'}]}}]},
         {call,692,
          {atom,692,check_undef_field},
          [{var,692,'RName'},
           {var,692,'Line'},
           {var,692,'KeyList'},
           {var,692,'FieldList0'},
           {op,693,'+',
            {integer,41,19},
            {call,693,
             {remote,693,{atom,693,erlang},{atom,693,element}},
             [{integer,693,4},{var,693,'B'}]}}]},
         {tuple,694,
          [{atom,694,tuple},
           {var,694,'Line'},
           {cons,694,
            {tuple,694,
             [{atom,694,tuple},
              {var,694,'Line'},
              {cons,694,
               {tuple,694,
                [{atom,694,atom},{var,694,'Line'},{var,694,'RName'}]},
               {var,694,'FieldList1'}}]},
            {nil,694}}]}]},
       {clause,695,
        [{var,695,'_'}],
        [],
        [{call,696,
          {atom,696,throw},
          [{tuple,696,
            [{atom,696,error},
             {var,696,'Line'},
             {tuple,696,
              [{op,696,'+',
                {integer,42,20},
                {call,696,
                 {remote,696,{atom,696,erlang},{atom,696,element}},
                 [{integer,696,4},{var,696,'B'}]}},
               {var,696,'RName'}]}]}]}]}]}]},
   {clause,699,
    [{match,699,
      {tuple,699,
       [{atom,699,bin_element},
        {var,699,'_Line0'},
        {tuple,699,[{atom,699,var},{var,699,'Line'},{var,699,'A'}]},
        {var,699,'_'},
        {var,699,'_'}]},
      {var,699,'Whole'}},
     {var,699,'B'}],
    [],
    [{'case',700,
      {call,700,
       {atom,700,lkup_bind},
       [{var,700,'A'},
        {call,700,
         {remote,700,{atom,700,erlang},{atom,700,element}},
         [{integer,700,2},{var,700,'B'}]}]},
      [{clause,701,[{atom,701,undefined}],[],[{var,702,'Whole'}]},
       {clause,703,
        [{var,703,'_AtomName'}],
        [],
        [{call,704,
          {atom,704,throw},
          [{tuple,704,
            [{atom,704,error},
             {var,704,'Line'},
             {tuple,704,
              [{op,704,'+',
                {integer,45,23},
                {call,704,
                 {remote,704,{atom,704,erlang},{atom,704,element}},
                 [{integer,704,4},{var,704,'B'}]}},
               {var,704,'A'}]}]}]}]}]}]},
   {clause,706,[{atom,706,default},{var,706,'_B'}],[],[{atom,707,default}]},
   {clause,708,
    [{tuple,708,
      [{atom,708,bin_element},
       {var,708,'Line'},
       {var,708,'X'},
       {var,708,'Y'},
       {var,708,'Z'}]},
     {var,708,'B'}],
    [],
    [{tuple,709,
      [{atom,709,bin_element},
       {var,709,'Line'},
       {call,709,{atom,709,tg},[{var,709,'X'},{var,709,'B'}]},
       {call,709,{atom,709,tg},[{var,709,'Y'},{var,709,'B'}]},
       {var,709,'Z'}]}]},
   {clause,711,
    [{tuple,711,[{atom,711,bin},{var,711,'Line'},{var,711,'List'}]},
     {var,711,'B'}],
    [],
    [{tuple,712,
      [{atom,712,bin},
       {var,712,'Line'},
       {lc,712,
        {call,712,{atom,712,tg},[{var,712,'X'},{var,712,'B'}]},
        [{generate,712,{var,712,'X'},{var,712,'List'}}]}]}]},
   {clause,714,
    [{var,714,'T'},{var,714,'B'}],
    [[{call,714,{atom,714,is_tuple},[{var,714,'T'}]},
      {op,714,'>=',
       {call,714,{atom,714,tuple_size},[{var,714,'T'}]},
       {integer,714,2}}]],
    [{match,715,
      {var,715,'Element'},
      {call,715,{atom,715,element},[{integer,715,1},{var,715,'T'}]}},
     {match,716,
      {var,716,'Line'},
      {call,716,{atom,716,element},[{integer,716,2},{var,716,'T'}]}},
     {call,717,
      {atom,717,throw},
      [{tuple,717,
        [{atom,717,error},
         {var,717,'Line'},
         {tuple,717,
          [{op,717,'+',
            {integer,40,18},
            {call,717,
             {remote,717,{atom,717,erlang},{atom,717,element}},
             [{integer,717,4},{var,717,'B'}]}},
           {call,718,
            {atom,718,translate_language_element},
            [{var,718,'Element'}]}]}]}]}]},
   {clause,719,
    [{var,719,'Other'},{var,719,'B'}],
    [],
    [{match,720,
      {var,720,'Element'},
      {call,720,
       {remote,720,{atom,720,io_lib},{atom,720,format}},
       [{string,720,"unknown element ~w"},
        {cons,720,{var,720,'Other'},{nil,720}}]}},
     {call,721,
      {atom,721,throw},
      [{tuple,721,
        [{atom,721,error},
         {atom,721,unknown},
         {tuple,721,
          [{op,721,'+',
            {integer,40,18},
            {call,721,
             {remote,721,{atom,721,erlang},{atom,721,element}},
             [{integer,721,4},{var,721,'B'}]}},
           {var,721,'Element'}]}]}]}]}]},
 {function,723,transform_head,2,
  [{clause,723,
    [{cons,723,{var,723,'V'},{nil,723}},{var,723,'OuterBound'}],
    [],
    [{match,724,{var,724,'Bind'},{call,724,{atom,724,cre_bind},[]}},
     {match,725,
      {tuple,725,[{var,725,'NewV'},{var,725,'NewBind'}]},
      {call,725,
       {atom,725,toplevel_head_match},
       [{var,725,'V'},{var,725,'Bind'},{var,725,'OuterBound'}]}},
     {call,726,
      {atom,726,th},
      [{var,726,'NewV'},{var,726,'NewBind'},{var,726,'OuterBound'}]}]}]},
 {function,729,toplevel_head_match,3,
  [{clause,729,
    [{tuple,729,
      [{atom,729,match},
       {var,729,'_'},
       {tuple,729,[{atom,729,var},{var,729,'Line'},{var,729,'VName'}]},
       {var,729,'Expr'}]},
     {var,729,'B'},
     {var,729,'OB'}],
    [],
    [{call,730,
      {atom,730,warn_var_clash},
      [{var,730,'Line'},{var,730,'VName'},{var,730,'OB'}]},
     {tuple,731,
      [{var,731,'Expr'},
       {call,731,
        {atom,731,new_bind},
        [{tuple,731,[{var,731,'VName'},{atom,731,'$_'}]},{var,731,'B'}]}]}]},
   {clause,732,
    [{tuple,732,
      [{atom,732,match},
       {var,732,'_'},
       {var,732,'Expr'},
       {tuple,732,[{atom,732,var},{var,732,'Line'},{var,732,'VName'}]}]},
     {var,732,'B'},
     {var,732,'OB'}],
    [],
    [{call,733,
      {atom,733,warn_var_clash},
      [{var,733,'Line'},{var,733,'VName'},{var,733,'OB'}]},
     {tuple,734,
      [{var,734,'Expr'},
       {call,734,
        {atom,734,new_bind},
        [{tuple,734,[{var,734,'VName'},{atom,734,'$_'}]},{var,734,'B'}]}]}]},
   {clause,735,
    [{var,735,'Other'},{var,735,'B'},{var,735,'_OB'}],
    [],
    [{tuple,736,[{var,736,'Other'},{var,736,'B'}]}]}]},
 {function,738,th,3,
  [{clause,738,
    [{tuple,738,
      [{atom,738,record},
       {var,738,'Line'},
       {var,738,'RName'},
       {var,738,'RFields'}]},
     {var,738,'B'},
     {var,738,'OB'}],
    [],
    [{match,740,{var,740,'RDefs'},{call,740,{atom,740,get_records},[]}},
     {match,741,
      {tuple,741,[{var,741,'KeyList0'},{var,741,'NewB'}]},
      {call,741,
       {remote,741,{atom,741,lists},{atom,741,foldl}},
       [{'fun',741,
         {clauses,
          [{clause,741,
            [{tuple,741,
              [{atom,741,record_field},
               {var,741,'_'},
               {tuple,741,[{atom,741,atom},{var,741,'_'},{var,741,'Key'}]},
               {var,741,'Value'}]},
             {tuple,742,[{var,742,'L'},{var,742,'B0'}]}],
            [],
            [{match,743,
              {tuple,743,[{var,743,'NV'},{var,743,'B1'}]},
              {call,743,
               {atom,743,th},
               [{var,743,'Value'},{var,743,'B0'},{var,743,'OB'}]}},
             {tuple,744,
              [{cons,744,
                {tuple,744,[{var,744,'Key'},{var,744,'NV'}]},
                {var,744,'L'}},
               {var,744,'B1'}]}]},
           {clause,745,
            [{tuple,745,
              [{atom,745,record_field},
               {var,745,'_'},
               {tuple,745,[{atom,745,var},{var,745,'_'},{atom,745,'_'}]},
               {var,745,'Value'}]},
             {tuple,746,[{var,746,'L'},{var,746,'B0'}]}],
            [],
            [{match,747,
              {tuple,747,[{var,747,'NV'},{var,747,'B1'}]},
              {call,747,
               {atom,747,th},
               [{var,747,'Value'},{var,747,'B0'},{var,747,'OB'}]}},
             {tuple,748,
              [{cons,748,
                {tuple,748,[{tuple,748,[{atom,748,default}]},{var,748,'NV'}]},
                {var,748,'L'}},
               {var,748,'B1'}]}]},
           {clause,749,
            [{var,749,'_'},{var,749,'_'}],
            [],
            [{call,750,
              {atom,750,throw},
              [{tuple,750,
                [{atom,750,error},
                 {var,750,'Line'},
                 {tuple,750,[{integer,33,7},{var,751,'RName'}]}]}]}]}]}},
        {tuple,753,[{nil,753},{var,753,'B'}]},
        {var,754,'RFields'}]}},
     {match,755,
      {var,755,'DefValue'},
      {'case',755,
       {call,755,
        {remote,755,{atom,755,lists},{atom,755,keysearch}},
        [{tuple,755,[{atom,755,default}]},
         {integer,755,1},
         {var,755,'KeyList0'}]},
       [{clause,756,
         [{tuple,756,
           [{atom,756,value},
            {tuple,756,
             [{tuple,756,[{atom,756,default}]},
              {var,756,'OverriddenDefValue'}]}]}],
         [],
         [{var,757,'OverriddenDefValue'}]},
        {clause,758,
         [{var,758,'_'}],
         [],
         [{tuple,759,[{atom,759,atom},{var,759,'Line'},{atom,759,'_'}]}]}]}},
     {match,761,
      {var,761,'KeyList'},
      {call,761,
       {remote,761,{atom,761,lists},{atom,761,keydelete}},
       [{tuple,761,[{atom,761,default}]},
        {integer,761,1},
        {var,761,'KeyList0'}]}},
     {'case',762,
      {call,762,
       {remote,762,{atom,762,lists},{atom,762,keysearch}},
       [{tuple,762,[{atom,762,default}]},{integer,762,1},{var,762,'KeyList'}]},
      [{clause,763,
        [{tuple,763,
          [{atom,763,value},
           {tuple,763,[{tuple,763,[{atom,763,default}]},{var,763,'_'}]}]}],
        [],
        [{call,764,
          {atom,764,throw},
          [{tuple,764,
            [{atom,764,error},
             {var,764,'Line'},
             {tuple,764,
              [{integer,35,9},{var,764,'RName'},{atom,764,'_'}]}]}]}]},
       {clause,765,[{var,765,'_'}],[],[{atom,766,ok}]}]},
     {'case',768,
      {call,768,
       {remote,768,{atom,768,lists},{atom,768,keysearch}},
       [{var,768,'RName'},{integer,768,1},{var,768,'RDefs'}]},
      [{clause,769,
        [{tuple,769,
          [{atom,769,value},
           {tuple,769,[{var,769,'RName'},{var,769,'FieldList0'}]}]}],
        [],
        [{match,770,
          {var,770,'FieldList1'},
          {call,770,
           {remote,770,{atom,770,lists},{atom,770,foldl}},
           [{'fun',771,
             {clauses,
              [{clause,771,
                [{tuple,771,[{var,771,'FN'},{var,771,'_'},{var,771,'_'}]},
                 {var,771,'Acc'}],
                [],
                [{match,772,
                  {var,772,'El'},
                  {'case',772,
                   {call,772,
                    {remote,772,{atom,772,lists},{atom,772,keysearch}},
                    [{var,772,'FN'},{integer,772,1},{var,772,'KeyList'}]},
                   [{clause,773,
                     [{tuple,773,
                       [{atom,773,value},
                        {tuple,773,[{var,773,'FN'},{var,773,'X0'}]}]}],
                     [],
                     [{var,774,'X0'}]},
                    {clause,775,[{var,775,'_'}],[],[{var,776,'DefValue'}]}]}},
                 {cons,778,{var,778,'El'},{var,778,'Acc'}}]}]}},
            {nil,780},
            {var,781,'FieldList0'}]}},
         {call,782,
          {atom,782,check_multi_field},
          [{var,782,'RName'},
           {var,782,'Line'},
           {var,782,'KeyList'},
           {integer,35,9}]},
         {call,784,
          {atom,784,check_undef_field},
          [{var,784,'RName'},
           {var,784,'Line'},
           {var,784,'KeyList'},
           {var,784,'FieldList0'},
           {integer,34,8}]},
         {tuple,786,
          [{tuple,786,
            [{atom,786,tuple},
             {var,786,'Line'},
             {cons,786,
              {tuple,786,[{atom,786,atom},{var,786,'Line'},{var,786,'RName'}]},
              {var,786,'FieldList1'}}]},
           {var,786,'NewB'}]}]},
       {clause,787,
        [{var,787,'_'}],
        [],
        [{call,788,
          {atom,788,throw},
          [{tuple,788,
            [{atom,788,error},
             {var,788,'Line'},
             {tuple,788,[{integer,33,7},{var,788,'RName'}]}]}]}]}]}]},
   {clause,790,
    [{tuple,790,
      [{atom,790,match},{var,790,'Line'},{var,790,'_'},{var,790,'_'}]},
     {var,790,'_'},
     {var,790,'_'}],
    [],
    [{call,791,
      {atom,791,throw},
      [{tuple,791,[{atom,791,error},{var,791,'Line'},{integer,30,4}]}]}]},
   {clause,792,
    [{tuple,792,[{atom,792,atom},{var,792,'Line'},{var,792,'A'}]},
     {var,792,'B'},
     {var,792,'_OB'}],
    [],
    [{'case',793,
      {call,793,{atom,793,atom_to_list},[{var,793,'A'}]},
      [{clause,794,
        [{cons,794,{char,794,36},{var,794,'NL'}}],
        [],
        [{'case',795,
          {'catch',795,{call,795,{atom,795,list_to_integer},[{var,795,'NL'}]}},
          [{clause,796,
            [{var,796,'N'}],
            [[{call,796,{atom,796,is_integer},[{var,796,'N'}]}]],
            [{call,797,
              {atom,797,throw},
              [{tuple,797,
                [{atom,797,error},
                 {var,797,'Line'},
                 {tuple,797,[{integer,36,10},{var,797,'A'}]}]}]}]},
           {clause,798,
            [{var,798,'_'}],
            [],
            [{tuple,799,
              [{tuple,799,[{atom,799,atom},{var,799,'Line'},{var,799,'A'}]},
               {var,799,'B'}]}]}]}]},
       {clause,801,
        [{var,801,'_'}],
        [],
        [{tuple,802,
          [{tuple,802,[{atom,802,atom},{var,802,'Line'},{var,802,'A'}]},
           {var,802,'B'}]}]}]}]},
   {clause,804,
    [{tuple,804,
      [{atom,804,bin_element},
       {var,804,'_Line0'},
       {tuple,804,[{atom,804,var},{var,804,'Line'},{var,804,'A'}]},
       {var,804,'_'},
       {var,804,'_'}]},
     {var,804,'_'},
     {var,804,'_'}],
    [],
    [{call,805,
      {atom,805,throw},
      [{tuple,805,
        [{atom,805,error},
         {var,805,'Line'},
         {tuple,805,[{integer,37,11},{var,805,'A'}]}]}]}]},
   {clause,807,
    [{tuple,807,[{atom,807,var},{var,807,'Line'},{var,807,'Name'}]},
     {var,807,'B'},
     {var,807,'OB'}],
    [],
    [{call,808,
      {atom,808,warn_var_clash},
      [{var,808,'Line'},{var,808,'Name'},{var,808,'OB'}]},
     {'case',809,
      {call,809,{atom,809,lkup_bind},[{var,809,'Name'},{var,809,'B'}]},
      [{clause,810,
        [{atom,810,undefined}],
        [],
        [{match,811,
          {var,811,'NewB'},
          {call,811,{atom,811,new_bind},[{var,811,'Name'},{var,811,'B'}]}},
         {tuple,812,
          [{tuple,812,
            [{atom,812,atom},
             {var,812,'Line'},
             {call,812,
              {atom,812,lkup_bind},
              [{var,812,'Name'},{var,812,'NewB'}]}]},
           {var,812,'NewB'}]}]},
       {clause,813,
        [{var,813,'Trans'}],
        [],
        [{tuple,814,
          [{tuple,814,[{atom,814,atom},{var,814,'Line'},{var,814,'Trans'}]},
           {var,814,'B'}]}]}]}]},
   {clause,816,
    [{cons,816,{var,816,'H'},{var,816,'T'}},{var,816,'B'},{var,816,'OB'}],
    [],
    [{match,817,
      {tuple,817,[{var,817,'NH'},{var,817,'NB'}]},
      {call,817,{atom,817,th},[{var,817,'H'},{var,817,'B'},{var,817,'OB'}]}},
     {match,818,
      {tuple,818,[{var,818,'NT'},{var,818,'NNB'}]},
      {call,818,{atom,818,th},[{var,818,'T'},{var,818,'NB'},{var,818,'OB'}]}},
     {tuple,819,[{cons,819,{var,819,'NH'},{var,819,'NT'}},{var,819,'NNB'}]}]},
   {clause,820,
    [{var,820,'T'},{var,820,'B'},{var,820,'OB'}],
    [[{call,820,{atom,820,is_tuple},[{var,820,'T'}]}]],
    [{match,821,
      {tuple,821,[{var,821,'L'},{var,821,'NB'}]},
      {call,821,
       {atom,821,th},
       [{call,821,{atom,821,tuple_to_list},[{var,821,'T'}]},
        {var,821,'B'},
        {var,821,'OB'}]}},
     {tuple,822,
      [{call,822,{atom,822,list_to_tuple},[{var,822,'L'}]},{var,822,'NB'}]}]},
   {clause,823,
    [{var,823,'Nonstruct'},{var,823,'B'},{var,823,'_OB'}],
    [],
    [{tuple,824,[{var,824,'Nonstruct'},{var,824,'B'}]}]}]},
 {function,826,warn_var_clash,3,
  [{clause,826,
    [{var,826,'Anno'},{var,826,'Name'},{var,826,'OuterBound'}],
    [],
    [{'case',827,
      {call,827,
       {remote,827,{atom,827,gb_sets},{atom,827,is_member}},
       [{var,827,'Name'},{var,827,'OuterBound'}]},
      [{clause,828,
        [{atom,828,true}],
        [],
        [{match,829,
          {var,829,'Line'},
          {call,829,
           {remote,829,{atom,829,erl_anno},{atom,829,line}},
           [{var,829,'Anno'}]}},
         {call,830,
          {atom,830,add_warning},
          [{var,830,'Line'},{tuple,830,[{integer,47,50},{var,830,'Name'}]}]}]},
       {clause,831,[{var,831,'_'}],[],[{atom,832,ok}]}]}]}]},
 {function,836,check_multi_field,4,
  [{clause,836,
    [{var,836,'_'},{var,836,'_'},{nil,836},{var,836,'_'}],
    [],
    [{atom,837,ok}]},
   {clause,838,
    [{var,838,'RName'},
     {var,838,'Line'},
     {cons,838,{tuple,838,[{var,838,'Key'},{var,838,'_'}]},{var,838,'T'}},
     {var,838,'ErrCode'}],
    [],
    [{'case',839,
      {call,839,
       {remote,839,{atom,839,lists},{atom,839,keymember}},
       [{var,839,'Key'},{integer,839,1},{var,839,'T'}]},
      [{clause,840,
        [{atom,840,true}],
        [],
        [{call,841,
          {atom,841,throw},
          [{tuple,841,
            [{atom,841,error},
             {var,841,'Line'},
             {tuple,841,
              [{var,841,'ErrCode'},{var,841,'RName'},{var,841,'Key'}]}]}]}]},
       {clause,842,
        [{atom,842,false}],
        [],
        [{call,843,
          {atom,843,check_multi_field},
          [{var,843,'RName'},
           {var,843,'Line'},
           {var,843,'T'},
           {var,843,'ErrCode'}]}]}]}]}]},
 {function,845,check_undef_field,5,
  [{clause,845,
    [{var,845,'_'},{var,845,'_'},{nil,845},{var,845,'_'},{var,845,'_'}],
    [],
    [{atom,846,ok}]},
   {clause,847,
    [{var,847,'RName'},
     {var,847,'Line'},
     {cons,847,{tuple,847,[{var,847,'Key'},{var,847,'_'}]},{var,847,'T'}},
     {var,847,'FieldList'},
     {var,847,'ErrCode'}],
    [],
    [{'case',848,
      {call,848,
       {remote,848,{atom,848,lists},{atom,848,keymember}},
       [{var,848,'Key'},{integer,848,1},{var,848,'FieldList'}]},
      [{clause,849,
        [{atom,849,true}],
        [],
        [{call,850,
          {atom,850,check_undef_field},
          [{var,850,'RName'},
           {var,850,'Line'},
           {var,850,'T'},
           {var,850,'FieldList'},
           {var,850,'ErrCode'}]}]},
       {clause,851,
        [{atom,851,false}],
        [],
        [{call,852,
          {atom,852,throw},
          [{tuple,852,
            [{atom,852,error},
             {var,852,'Line'},
             {tuple,852,
              [{var,852,'ErrCode'},
               {var,852,'RName'},
               {var,852,'Key'}]}]}]}]}]}]}]},
 {function,855,cre_bind,0,
  [{clause,855,[],[],
    [{tuple,856,
      [{integer,856,1},
       {cons,856,{tuple,856,[{atom,856,'_'},{atom,856,'_'}]},{nil,856}}]}]}]},
 {function,858,lkup_bind,2,
  [{clause,858,
    [{var,858,'Name'},{tuple,858,[{var,858,'_'},{var,858,'List'}]}],
    [],
    [{'case',859,
      {call,859,
       {remote,859,{atom,859,lists},{atom,859,keysearch}},
       [{var,859,'Name'},{integer,859,1},{var,859,'List'}]},
      [{clause,860,
        [{tuple,860,
          [{atom,860,value},
           {tuple,860,[{var,860,'Name'},{var,860,'Trans'}]}]}],
        [],
        [{var,861,'Trans'}]},
       {clause,862,[{var,862,'_'}],[],[{atom,863,undefined}]}]}]}]},
 {function,866,new_bind,2,
  [{clause,866,
    [{tuple,866,[{var,866,'Name'},{var,866,'Trans'}]},
     {tuple,866,[{var,866,'Next'},{var,866,'L'}]}],
    [],
    [{tuple,867,
      [{var,867,'Next'},
       {cons,867,
        {tuple,867,[{var,867,'Name'},{var,867,'Trans'}]},
        {var,867,'L'}}]}]},
   {clause,868,
    [{var,868,'Name'},{tuple,868,[{var,868,'Next'},{var,868,'L'}]}],
    [],
    [{match,869,
      {var,869,'Trans'},
      {call,869,
       {atom,869,list_to_atom},
       [{cons,869,
         {char,869,36},
         {call,869,{atom,869,integer_to_list},[{var,869,'Next'}]}}]}},
     {tuple,870,
      [{op,870,'+',{var,870,'Next'},{integer,870,1}},
       {cons,870,
        {tuple,870,[{var,870,'Name'},{var,870,'Trans'}]},
        {var,870,'L'}}]}]}]},
 {function,872,translate_language_element,1,
  [{clause,872,
    [{var,872,'Atom'}],
    [],
    [{match,873,
      {var,873,'Transtab'},
      {cons,873,
       {tuple,874,[{atom,874,lc},{string,874,"list comprehension"}]},
       {cons,875,
        {tuple,875,[{atom,875,bc},{string,875,"binary comprehension"}]},
        {cons,876,
         {tuple,876,[{atom,876,block},{string,876,"begin/end block"}]},
         {cons,877,
          {tuple,877,[{atom,877,'if'},{string,877,"if"}]},
          {cons,878,
           {tuple,878,[{atom,878,'case'},{string,878,"case"}]},
           {cons,879,
            {tuple,879,[{atom,879,'receive'},{string,879,"receive"}]},
            {cons,880,
             {tuple,880,[{atom,880,'try'},{string,880,"try"}]},
             {cons,881,
              {tuple,881,[{atom,881,'catch'},{string,881,"catch"}]},
              {cons,882,
               {tuple,882,[{atom,882,match},{string,882,"match (=)"}]},
               {cons,883,
                {tuple,883,
                 [{atom,883,remote},{string,883,"external function call"}]},
                {nil,884}}}}}}}}}}}},
     {'case',885,
      {call,885,
       {remote,885,{atom,885,lists},{atom,885,keysearch}},
       [{var,885,'Atom'},{integer,885,1},{var,885,'Transtab'}]},
      [{clause,886,
        [{tuple,886,
          [{atom,886,value},
           {tuple,886,[{var,886,'Atom'},{var,886,'String'}]}]}],
        [],
        [{var,887,'String'}]},
       {clause,888,
        [{var,888,'_'}],
        [],
        [{call,889,{atom,889,atom_to_list},[{var,889,'Atom'}]}]}]}]}]},
 {function,892,old_bool_test,2,
  [{clause,892,[{atom,892,atom},{integer,892,1}],[],[{atom,892,is_atom}]},
   {clause,893,[{atom,893,float},{integer,893,1}],[],[{atom,893,is_float}]},
   {clause,894,
    [{atom,894,integer},{integer,894,1}],
    [],
    [{atom,894,is_integer}]},
   {clause,895,[{atom,895,list},{integer,895,1}],[],[{atom,895,is_list}]},
   {clause,896,[{atom,896,number},{integer,896,1}],[],[{atom,896,is_number}]},
   {clause,897,[{atom,897,pid},{integer,897,1}],[],[{atom,897,is_pid}]},
   {clause,898,[{atom,898,port},{integer,898,1}],[],[{atom,898,is_port}]},
   {clause,899,
    [{atom,899,reference},{integer,899,1}],
    [],
    [{atom,899,is_reference}]},
   {clause,900,[{atom,900,tuple},{integer,900,1}],[],[{atom,900,is_tuple}]},
   {clause,901,[{atom,901,binary},{integer,901,1}],[],[{atom,901,is_binary}]},
   {clause,902,
    [{atom,902,function},{integer,902,1}],
    [],
    [{atom,902,is_function}]},
   {clause,903,[{atom,903,record},{integer,903,2}],[],[{atom,903,is_record}]},
   {clause,904,[{var,904,'_'},{var,904,'_'}],[],[{atom,904,undefined}]}]},
 {function,906,bool_test,2,
  [{clause,906,[{atom,906,is_atom},{integer,906,1}],[],[{atom,906,true}]},
   {clause,907,[{atom,907,is_float},{integer,907,1}],[],[{atom,907,true}]},
   {clause,908,[{atom,908,is_integer},{integer,908,1}],[],[{atom,908,true}]},
   {clause,909,[{atom,909,is_list},{integer,909,1}],[],[{atom,909,true}]},
   {clause,910,[{atom,910,is_number},{integer,910,1}],[],[{atom,910,true}]},
   {clause,911,[{atom,911,is_pid},{integer,911,1}],[],[{atom,911,true}]},
   {clause,912,[{atom,912,is_port},{integer,912,1}],[],[{atom,912,true}]},
   {clause,913,[{atom,913,is_reference},{integer,913,1}],[],[{atom,913,true}]},
   {clause,914,[{atom,914,is_tuple},{integer,914,1}],[],[{atom,914,true}]},
   {clause,915,[{atom,915,is_map},{integer,915,1}],[],[{atom,915,true}]},
   {clause,916,[{atom,916,is_binary},{integer,916,1}],[],[{atom,916,true}]},
   {clause,917,[{atom,917,is_function},{integer,917,1}],[],[{atom,917,true}]},
   {clause,918,[{atom,918,is_record},{integer,918,2}],[],[{atom,918,true}]},
   {clause,919,[{atom,919,is_seq_trace},{integer,919,0}],[],[{atom,919,true}]},
   {clause,920,[{var,920,'_'},{var,920,'_'}],[],[{atom,920,false}]}]},
 {function,922,real_guard_function,2,
  [{clause,922,[{atom,922,abs},{integer,922,1}],[],[{atom,922,true}]},
   {clause,923,[{atom,923,element},{integer,923,2}],[],[{atom,923,true}]},
   {clause,924,[{atom,924,hd},{integer,924,1}],[],[{atom,924,true}]},
   {clause,925,[{atom,925,length},{integer,925,1}],[],[{atom,925,true}]},
   {clause,926,[{atom,926,node},{integer,926,0}],[],[{atom,926,true}]},
   {clause,927,[{atom,927,node},{integer,927,1}],[],[{atom,927,true}]},
   {clause,928,[{atom,928,round},{integer,928,1}],[],[{atom,928,true}]},
   {clause,929,[{atom,929,size},{integer,929,1}],[],[{atom,929,true}]},
   {clause,930,[{atom,930,map_size},{integer,930,1}],[],[{atom,930,true}]},
   {clause,931,[{atom,931,tl},{integer,931,1}],[],[{atom,931,true}]},
   {clause,932,[{atom,932,trunc},{integer,932,1}],[],[{atom,932,true}]},
   {clause,933,[{atom,933,self},{integer,933,0}],[],[{atom,933,true}]},
   {clause,934,[{atom,934,float},{integer,934,1}],[],[{atom,934,true}]},
   {clause,935,[{var,935,'_'},{var,935,'_'}],[],[{atom,935,false}]}]},
 {function,937,pseudo_guard_function,2,
  [{clause,937,[{atom,937,get_tcw},{integer,937,0}],[],[{atom,937,true}]},
   {clause,938,[{var,938,'_'},{var,938,'_'}],[],[{atom,938,false}]}]},
 {function,940,guard_function,2,
  [{clause,940,
    [{var,940,'X'},{var,940,'A'}],
    [],
    [{op,941,'or',
      {call,941,{atom,941,real_guard_function},[{var,941,'X'},{var,941,'A'}]},
      {call,941,
       {atom,941,pseudo_guard_function},
       [{var,941,'X'},{var,941,'A'}]}}]}]},
 {function,943,action_function,2,
  [{clause,943,
    [{atom,943,set_seq_token},{integer,943,2}],
    [],
    [{atom,943,true}]},
   {clause,944,
    [{atom,944,get_seq_token},{integer,944,0}],
    [],
    [{atom,944,true}]},
   {clause,945,[{atom,945,message},{integer,945,1}],[],[{atom,945,true}]},
   {clause,946,[{atom,946,return_trace},{integer,946,0}],[],[{atom,946,true}]},
   {clause,947,
    [{atom,947,exception_trace},{integer,947,0}],
    [],
    [{atom,947,true}]},
   {clause,948,[{atom,948,process_dump},{integer,948,0}],[],[{atom,948,true}]},
   {clause,949,[{atom,949,enable_trace},{integer,949,1}],[],[{atom,949,true}]},
   {clause,950,[{atom,950,enable_trace},{integer,950,2}],[],[{atom,950,true}]},
   {clause,951,
    [{atom,951,disable_trace},{integer,951,1}],
    [],
    [{atom,951,true}]},
   {clause,952,
    [{atom,952,disable_trace},{integer,952,2}],
    [],
    [{atom,952,true}]},
   {clause,953,[{atom,953,display},{integer,953,1}],[],[{atom,953,true}]},
   {clause,954,[{atom,954,caller},{integer,954,0}],[],[{atom,954,true}]},
   {clause,955,[{atom,955,set_tcw},{integer,955,1}],[],[{atom,955,true}]},
   {clause,956,[{atom,956,silent},{integer,956,1}],[],[{atom,956,true}]},
   {clause,957,[{atom,957,trace},{integer,957,2}],[],[{atom,957,true}]},
   {clause,958,[{atom,958,trace},{integer,958,3}],[],[{atom,958,true}]},
   {clause,959,[{var,959,'_'},{var,959,'_'}],[],[{atom,959,false}]}]},
 {function,961,bool_operator,2,
  [{clause,961,[{atom,961,'and'},{integer,961,2}],[],[{atom,962,true}]},
   {clause,963,[{atom,963,'or'},{integer,963,2}],[],[{atom,964,true}]},
   {clause,965,[{atom,965,'xor'},{integer,965,2}],[],[{atom,966,true}]},
   {clause,967,[{atom,967,'not'},{integer,967,1}],[],[{atom,968,true}]},
   {clause,969,[{atom,969,'andalso'},{integer,969,2}],[],[{atom,970,true}]},
   {clause,971,[{atom,971,'orelse'},{integer,971,2}],[],[{atom,972,true}]},
   {clause,973,[{var,973,'_'},{var,973,'_'}],[],[{atom,974,false}]}]},
 {function,976,arith_operator,2,
  [{clause,976,[{atom,976,'+'},{integer,976,1}],[],[{atom,977,true}]},
   {clause,978,[{atom,978,'+'},{integer,978,2}],[],[{atom,979,true}]},
   {clause,980,[{atom,980,'-'},{integer,980,1}],[],[{atom,981,true}]},
   {clause,982,[{atom,982,'-'},{integer,982,2}],[],[{atom,983,true}]},
   {clause,984,[{atom,984,'*'},{integer,984,2}],[],[{atom,985,true}]},
   {clause,986,[{atom,986,'/'},{integer,986,2}],[],[{atom,987,true}]},
   {clause,988,[{atom,988,'div'},{integer,988,2}],[],[{atom,989,true}]},
   {clause,990,[{atom,990,'rem'},{integer,990,2}],[],[{atom,991,true}]},
   {clause,992,[{atom,992,'band'},{integer,992,2}],[],[{atom,993,true}]},
   {clause,994,[{atom,994,'bor'},{integer,994,2}],[],[{atom,995,true}]},
   {clause,996,[{atom,996,'bxor'},{integer,996,2}],[],[{atom,997,true}]},
   {clause,998,[{atom,998,'bnot'},{integer,998,1}],[],[{atom,999,true}]},
   {clause,1000,[{atom,1000,'bsl'},{integer,1000,2}],[],[{atom,1001,true}]},
   {clause,1002,[{atom,1002,'bsr'},{integer,1002,2}],[],[{atom,1003,true}]},
   {clause,1004,[{var,1004,'_'},{var,1004,'_'}],[],[{atom,1005,false}]}]},
 {function,1007,cmp_operator,2,
  [{clause,1007,[{atom,1007,'>'},{integer,1007,2}],[],[{atom,1008,true}]},
   {clause,1009,[{atom,1009,'>='},{integer,1009,2}],[],[{atom,1010,true}]},
   {clause,1011,[{atom,1011,'<'},{integer,1011,2}],[],[{atom,1012,true}]},
   {clause,1013,[{atom,1013,'=<'},{integer,1013,2}],[],[{atom,1014,true}]},
   {clause,1015,[{atom,1015,'=='},{integer,1015,2}],[],[{atom,1016,true}]},
   {clause,1017,[{atom,1017,'=:='},{integer,1017,2}],[],[{atom,1018,true}]},
   {clause,1019,[{atom,1019,'/='},{integer,1019,2}],[],[{atom,1020,true}]},
   {clause,1021,[{atom,1021,'=/='},{integer,1021,2}],[],[{atom,1022,true}]},
   {clause,1023,[{var,1023,'_'},{var,1023,'_'}],[],[{atom,1024,false}]}]},
 {function,1026,is_operator,3,
  [{clause,1026,
    [{var,1026,'X'},{var,1026,'A'},{var,1026,'_'}],
    [],
    [{op,1027,'or',
      {op,1027,'or',
       {call,1027,{atom,1027,bool_operator},[{var,1027,'X'},{var,1027,'A'}]},
       {call,1027,{atom,1027,arith_operator},[{var,1027,'X'},{var,1027,'A'}]}},
      {call,1027,
       {atom,1027,cmp_operator},
       [{var,1027,'X'},{var,1027,'A'}]}}]}]},
 {function,1029,is_imported_from_erlang,3,
  [{clause,1029,
    [{var,1029,'X'},{var,1029,'A'},{var,1029,'_'}],
    [],
    [{op,1031,'or',
      {op,1030,'or',
       {op,1030,'or',
        {op,1030,'or',
         {call,1030,
          {atom,1030,real_guard_function},
          [{var,1030,'X'},{var,1030,'A'}]},
         {call,1030,{atom,1030,bool_test},[{var,1030,'X'},{var,1030,'A'}]}},
        {call,1030,{atom,1030,bool_operator},[{var,1030,'X'},{var,1030,'A'}]}},
       {call,1031,{atom,1031,arith_operator},[{var,1031,'X'},{var,1031,'A'}]}},
      {call,1031,
       {atom,1031,cmp_operator},
       [{var,1031,'X'},{var,1031,'A'}]}}]}]},
 {function,1033,is_ms_function,3,
  [{clause,1033,
    [{var,1033,'X'},{var,1033,'A'},{atom,1033,body}],
    [],
    [{op,1034,'or',
      {op,1034,'or',
       {call,1034,{atom,1034,action_function},[{var,1034,'X'},{var,1034,'A'}]},
       {call,1034,{atom,1034,guard_function},[{var,1034,'X'},{var,1034,'A'}]}},
      {call,1034,{atom,1034,bool_test},[{var,1034,'X'},{var,1034,'A'}]}}]},
   {clause,1036,
    [{var,1036,'X'},{var,1036,'A'},{atom,1036,guard}],
    [],
    [{op,1037,'or',
      {call,1037,{atom,1037,guard_function},[{var,1037,'X'},{var,1037,'A'}]},
      {call,1037,{atom,1037,bool_test},[{var,1037,'X'},{var,1037,'A'}]}}]}]},
 {function,1039,fixup_environment,2,
  [{clause,1039,
    [{var,1039,'L'},{var,1039,'B'}],
    [[{call,1039,{atom,1039,is_list},[{var,1039,'L'}]}]],
    [{call,1040,
      {remote,1040,{atom,1040,lists},{atom,1040,map}},
      [{'fun',1040,
        {clauses,
         [{clause,1040,
           [{var,1040,'X'}],
           [],
           [{call,1041,
             {atom,1041,fixup_environment},
             [{var,1041,'X'},{var,1041,'B'}]}]}]}},
       {var,1043,'L'}]}]},
   {clause,1044,
    [{tuple,1044,[{atom,1044,var},{var,1044,'Line'},{var,1044,'Name'}]},
     {var,1044,'B'}],
    [],
    [{'case',1045,
      {call,1045,
       {remote,1045,{atom,1045,lists},{atom,1045,keysearch}},
       [{var,1045,'Name'},{integer,1045,1},{var,1045,'B'}]},
      [{clause,1046,
        [{tuple,1046,
          [{atom,1046,value},
           {tuple,1046,[{var,1046,'Name'},{var,1046,'Value'}]}]}],
        [],
        [{call,1047,
          {atom,1047,freeze},
          [{var,1047,'Line'},{var,1047,'Value'}]}]},
       {clause,1048,
        [{var,1048,'_'}],
        [],
        [{call,1049,
          {atom,1049,throw},
          [{tuple,1049,
            [{atom,1049,error},
             {var,1049,'Line'},
             {tuple,1049,
              [{integer,32,6},
               {call,1049,
                {atom,1049,atom_to_list},
                [{var,1049,'Name'}]}]}]}]}]}]}]},
   {clause,1051,
    [{var,1051,'T'},{var,1051,'B'}],
    [[{call,1051,{atom,1051,is_tuple},[{var,1051,'T'}]}]],
    [{call,1052,
      {atom,1052,list_to_tuple},
      [{call,1053,
        {remote,1053,{atom,1053,lists},{atom,1053,map}},
        [{'fun',1053,
          {clauses,
           [{clause,1053,
             [{var,1053,'X'}],
             [],
             [{call,1054,
               {atom,1054,fixup_environment},
               [{var,1054,'X'},{var,1054,'B'}]}]}]}},
         {call,1056,{atom,1056,tuple_to_list},[{var,1056,'T'}]}]}]}]},
   {clause,1057,
    [{var,1057,'Other'},{var,1057,'_B'}],
    [],
    [{var,1058,'Other'}]}]},
 {function,1060,freeze,2,
  [{clause,1060,
    [{var,1060,'Line'},{var,1060,'Term'}],
    [],
    [{tuple,1061,[{atom,1061,frozen},{var,1061,'Line'},{var,1061,'Term'}]}]}]},
 {function,1065,normalise,1,
  [{clause,1065,
    [{tuple,1065,[{atom,1065,frozen},{var,1065,'_'},{var,1065,'Term'}]}],
    [],
    [{var,1066,'Term'}]},
   {clause,1067,
    [{tuple,1067,[{atom,1067,char},{var,1067,'_'},{var,1067,'C'}]}],
    [],
    [{var,1067,'C'}]},
   {clause,1068,
    [{tuple,1068,[{atom,1068,integer},{var,1068,'_'},{var,1068,'I'}]}],
    [],
    [{var,1068,'I'}]},
   {clause,1069,
    [{tuple,1069,[{atom,1069,float},{var,1069,'_'},{var,1069,'F'}]}],
    [],
    [{var,1069,'F'}]},
   {clause,1070,
    [{tuple,1070,[{atom,1070,atom},{var,1070,'_'},{var,1070,'A'}]}],
    [],
    [{var,1070,'A'}]},
   {clause,1071,
    [{tuple,1071,[{atom,1071,string},{var,1071,'_'},{var,1071,'S'}]}],
    [],
    [{var,1071,'S'}]},
   {clause,1072,
    [{tuple,1072,[{atom,1072,nil},{var,1072,'_'}]}],
    [],
    [{nil,1072}]},
   {clause,1073,
    [{tuple,1073,[{atom,1073,bin},{var,1073,'_'},{var,1073,'Fs'}]}],
    [],
    [{match,1074,
      {tuple,1074,[{atom,1074,value},{var,1074,'B'},{var,1074,'_'}]},
      {call,1075,
       {remote,1075,{atom,1075,eval_bits},{atom,1075,expr_grp}},
       [{var,1075,'Fs'},
        {nil,1075},
        {'fun',1076,
         {clauses,
          [{clause,1076,
            [{var,1076,'E'},{var,1076,'_'}],
            [],
            [{tuple,1077,
              [{atom,1077,value},
               {call,1077,{atom,1077,normalise},[{var,1077,'E'}]},
               {nil,1077}]}]}]}},
        {nil,1078},
        {atom,1078,true}]}},
     {var,1079,'B'}]},
   {clause,1080,
    [{tuple,1080,
      [{atom,1080,cons},{var,1080,'_'},{var,1080,'Head'},{var,1080,'Tail'}]}],
    [],
    [{cons,1081,
      {call,1081,{atom,1081,normalise},[{var,1081,'Head'}]},
      {call,1081,{atom,1081,normalise},[{var,1081,'Tail'}]}}]},
   {clause,1082,
    [{tuple,1082,[{atom,1082,tuple},{var,1082,'_'},{var,1082,'Args'}]}],
    [],
    [{call,1083,
      {atom,1083,list_to_tuple},
      [{call,1083,{atom,1083,normalise_list},[{var,1083,'Args'}]}]}]},
   {clause,1084,
    [{tuple,1084,[{atom,1084,map},{var,1084,'_'},{var,1084,'Pairs0'}]}],
    [],
    [{match,1085,
      {var,1085,'Pairs1'},
      {call,1085,
       {remote,1085,{atom,1085,lists},{atom,1085,map}},
       [{'fun',1085,
         {clauses,
          [{clause,1085,
            [{tuple,1085,
              [{atom,1085,map_field_exact},
               {var,1085,'_'},
               {var,1085,'K'},
               {var,1085,'V'}]}],
            [],
            [{tuple,1086,
              [{call,1086,{atom,1086,normalise},[{var,1086,'K'}]},
               {call,1086,{atom,1086,normalise},[{var,1086,'V'}]}]}]}]}},
        {var,1088,'Pairs0'}]}},
     {call,1089,
      {remote,1089,{atom,1089,maps},{atom,1089,from_list}},
      [{var,1089,'Pairs1'}]}]},
   {clause,1091,
    [{tuple,1091,
      [{atom,1091,op},
       {var,1091,'_'},
       {atom,1091,'+'},
       {tuple,1091,[{atom,1091,char},{var,1091,'_'},{var,1091,'I'}]}]}],
    [],
    [{var,1091,'I'}]},
   {clause,1092,
    [{tuple,1092,
      [{atom,1092,op},
       {var,1092,'_'},
       {atom,1092,'+'},
       {tuple,1092,[{atom,1092,integer},{var,1092,'_'},{var,1092,'I'}]}]}],
    [],
    [{var,1092,'I'}]},
   {clause,1093,
    [{tuple,1093,
      [{atom,1093,op},
       {var,1093,'_'},
       {atom,1093,'+'},
       {tuple,1093,[{atom,1093,float},{var,1093,'_'},{var,1093,'F'}]}]}],
    [],
    [{var,1093,'F'}]},
   {clause,1094,
    [{tuple,1094,
      [{atom,1094,op},
       {var,1094,'_'},
       {atom,1094,'-'},
       {tuple,1094,[{atom,1094,char},{var,1094,'_'},{var,1094,'I'}]}]}],
    [],
    [{op,1094,'-',{var,1094,'I'}}]},
   {clause,1095,
    [{tuple,1095,
      [{atom,1095,op},
       {var,1095,'_'},
       {atom,1095,'-'},
       {tuple,1095,[{atom,1095,integer},{var,1095,'_'},{var,1095,'I'}]}]}],
    [],
    [{op,1095,'-',{var,1095,'I'}}]},
   {clause,1096,
    [{tuple,1096,
      [{atom,1096,op},
       {var,1096,'_'},
       {atom,1096,'-'},
       {tuple,1096,[{atom,1096,float},{var,1096,'_'},{var,1096,'F'}]}]}],
    [],
    [{op,1096,'-',{var,1096,'F'}}]}]},
 {function,1098,normalise_list,1,
  [{clause,1098,
    [{cons,1098,{var,1098,'H'},{var,1098,'T'}}],
    [],
    [{cons,1099,
      {call,1099,{atom,1099,normalise},[{var,1099,'H'}]},
      {call,1099,{atom,1099,normalise_list},[{var,1099,'T'}]}}]},
   {clause,1100,[{nil,1100}],[],[{nil,1101}]}]}]
