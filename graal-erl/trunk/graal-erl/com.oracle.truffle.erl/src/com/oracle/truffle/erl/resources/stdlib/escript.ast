escript
[]
[]
[{function,80,create,2,
  [{clause,80,
    [{var,80,'File'},{var,80,'Options'}],
    [[{call,80,{atom,80,is_list},[{var,80,'Options'}]}]],
    [{'try',81,
      [{match,82,
        {var,82,'S'},
        {call,82,
         {atom,82,prepare},
         [{var,82,'Options'},
          {tuple,82,
           [{atom,82,sections},
            {atom,82,undefined},
            {atom,82,undefined},
            {atom,82,undefined},
            {atom,82,undefined},
            {atom,82,undefined}]}]}},
       {match,83,
        {var,83,'BinList'},
        {lc,84,
         {var,84,'Section'},
         [{generate,84,
           {var,84,'Section'},
           {cons,84,
            {call,84,
             {remote,84,{atom,84,erlang},{atom,84,element}},
             [{integer,84,3},{var,84,'S'}]},
            {cons,85,
             {call,85,
              {remote,85,{atom,85,erlang},{atom,85,element}},
              [{integer,85,4},{var,85,'S'}]},
             {cons,86,
              {call,86,
               {remote,86,{atom,86,erlang},{atom,86,element}},
               [{integer,86,5},{var,86,'S'}]},
              {cons,87,
               {call,87,
                {remote,87,{atom,87,erlang},{atom,87,element}},
                [{integer,87,6},{var,87,'S'}]},
               {nil,87}}}}}},
          {op,88,'=/=',{var,88,'Section'},{atom,88,undefined}}]}},
       {'case',89,
        {var,89,'File'},
        [{clause,90,
          [{atom,90,binary}],
          [],
          [{tuple,91,
            [{atom,91,ok},
             {call,91,{atom,91,list_to_binary},[{var,91,'BinList'}]}]}]},
         {clause,92,
          [{var,92,'_'}],
          [],
          [{'case',93,
            {call,93,
             {remote,93,{atom,93,file},{atom,93,write_file}},
             [{var,93,'File'},{var,93,'BinList'}]},
            [{clause,94,[{atom,94,ok}],[],[{atom,95,ok}]},
             {clause,96,
              [{tuple,96,[{atom,96,error},{var,96,'Reason'}]}],
              [],
              [{tuple,97,
                [{atom,97,error},
                 {tuple,97,[{var,97,'Reason'},{var,97,'File'}]}]}]}]}]}]}],
      [],
      [{clause,101,
        [{tuple,101,
          [{atom,101,throw},{var,101,'PrepareReason'},{var,101,'_'}]}],
        [],
        [{tuple,102,[{atom,102,error},{var,102,'PrepareReason'}]}]}],
      []}]}]},
 {function,105,prepare,2,
  [{clause,105,
    [{cons,105,{var,105,'H'},{var,105,'T'}},{var,105,'S'}],
    [],
    [{'case',106,
      {var,106,'H'},
      [{clause,107,
        [{tuple,107,[{atom,107,shebang},{atom,107,undefined}]}],
        [],
        [{call,108,{atom,108,prepare},[{var,108,'T'},{var,108,'S'}]}]},
       {clause,109,
        [{atom,109,shebang}],
        [],
        [{call,110,
          {atom,110,prepare},
          [{var,110,'T'},
           {call,110,
            {remote,110,{atom,110,erlang},{atom,110,setelement}},
            [{integer,110,3},
             {var,110,'S'},
             {op,110,'++',
              {string,110,"#!"},
              {op,110,'++',
               {string,30,"/usr/bin/env escript"},
               {string,110,"\n"}}}]}]}]},
       {clause,111,
        [{tuple,111,[{atom,111,shebang},{atom,111,default}]}],
        [],
        [{call,112,
          {atom,112,prepare},
          [{var,112,'T'},
           {call,112,
            {remote,112,{atom,112,erlang},{atom,112,setelement}},
            [{integer,112,3},
             {var,112,'S'},
             {op,112,'++',
              {string,112,"#!"},
              {op,112,'++',
               {string,30,"/usr/bin/env escript"},
               {string,112,"\n"}}}]}]}]},
       {clause,113,
        [{tuple,113,[{atom,113,shebang},{var,113,'Shebang'}]}],
        [[{call,113,{atom,113,is_list},[{var,113,'Shebang'}]}]],
        [{call,114,
          {atom,114,prepare},
          [{var,114,'T'},
           {call,114,
            {remote,114,{atom,114,erlang},{atom,114,setelement}},
            [{integer,114,3},
             {var,114,'S'},
             {op,114,'++',
              {string,114,"#!"},
              {op,114,'++',{var,114,'Shebang'},{string,114,"\n"}}}]}]}]},
       {clause,115,
        [{tuple,115,[{atom,115,comment},{atom,115,undefined}]}],
        [],
        [{call,116,{atom,116,prepare},[{var,116,'T'},{var,116,'S'}]}]},
       {clause,117,
        [{atom,117,comment}],
        [],
        [{call,118,
          {atom,118,prepare},
          [{var,118,'T'},
           {call,118,
            {remote,118,{atom,118,erlang},{atom,118,setelement}},
            [{integer,118,4},
             {var,118,'S'},
             {op,118,'++',
              {string,118,"%% "},
              {op,118,'++',
               {string,31,"This is an -*- erlang -*- file"},
               {string,118,"\n"}}}]}]}]},
       {clause,119,
        [{tuple,119,[{atom,119,comment},{atom,119,default}]}],
        [],
        [{call,120,
          {atom,120,prepare},
          [{var,120,'T'},
           {call,120,
            {remote,120,{atom,120,erlang},{atom,120,setelement}},
            [{integer,120,4},
             {var,120,'S'},
             {op,120,'++',
              {string,120,"%% "},
              {op,120,'++',
               {string,31,"This is an -*- erlang -*- file"},
               {string,120,"\n"}}}]}]}]},
       {clause,121,
        [{tuple,121,[{atom,121,comment},{var,121,'Comment'}]}],
        [[{call,121,{atom,121,is_list},[{var,121,'Comment'}]}]],
        [{call,122,
          {atom,122,prepare},
          [{var,122,'T'},
           {call,122,
            {remote,122,{atom,122,erlang},{atom,122,setelement}},
            [{integer,122,4},
             {var,122,'S'},
             {op,122,'++',
              {string,122,"%% "},
              {op,122,'++',{var,122,'Comment'},{string,122,"\n"}}}]}]}]},
       {clause,123,
        [{tuple,123,[{atom,123,emu_args},{atom,123,undefined}]}],
        [],
        [{call,124,{atom,124,prepare},[{var,124,'T'},{var,124,'S'}]}]},
       {clause,125,
        [{tuple,125,[{atom,125,emu_args},{var,125,'Args'}]}],
        [[{call,125,{atom,125,is_list},[{var,125,'Args'}]}]],
        [{call,126,
          {atom,126,prepare},
          [{var,126,'T'},
           {call,126,
            {remote,126,{atom,126,erlang},{atom,126,setelement}},
            [{integer,126,5},
             {var,126,'S'},
             {op,126,'++',
              {string,126,"%%!"},
              {op,126,'++',{var,126,'Args'},{string,126,"\n"}}}]}]}]},
       {clause,127,
        [{tuple,127,[{var,127,'Type'},{var,127,'File'}]}],
        [[{call,127,{atom,127,is_list},[{var,127,'File'}]}]],
        [{'case',128,
          {call,128,
           {remote,128,{atom,128,file},{atom,128,read_file}},
           [{var,128,'File'}]},
          [{clause,129,
            [{tuple,129,[{atom,129,ok},{var,129,'Bin'}]}],
            [],
            [{call,130,
              {atom,130,prepare},
              [{var,130,'T'},
               {call,130,
                {remote,130,{atom,130,erlang},{atom,130,setelement}},
                [{integer,130,6},
                 {call,130,
                  {remote,130,{atom,130,erlang},{atom,130,setelement}},
                  [{integer,130,2},{var,130,'S'},{var,130,'Type'}]},
                 {var,130,'Bin'}]}]}]},
           {clause,131,
            [{tuple,131,[{atom,131,error},{var,131,'Reason'}]}],
            [],
            [{call,132,
              {atom,132,throw},
              [{tuple,132,[{var,132,'Reason'},{var,132,'H'}]}]}]}]}]},
       {clause,134,
        [{tuple,134,[{var,134,'Type'},{var,134,'Bin'}]}],
        [[{call,134,{atom,134,is_binary},[{var,134,'Bin'}]}]],
        [{call,135,
          {atom,135,prepare},
          [{var,135,'T'},
           {call,135,
            {remote,135,{atom,135,erlang},{atom,135,setelement}},
            [{integer,135,6},
             {call,135,
              {remote,135,{atom,135,erlang},{atom,135,setelement}},
              [{integer,135,2},{var,135,'S'},{var,135,'Type'}]},
             {var,135,'Bin'}]}]}]},
       {clause,136,
        [{tuple,136,
          [{match,136,{atom,136,archive},{var,136,'Type'}},
           {var,136,'ZipFiles'},
           {var,136,'ZipOptions'}]}],
        [[{call,137,{atom,137,is_list},[{var,137,'ZipFiles'}]},
          {call,137,{atom,137,is_list},[{var,137,'ZipOptions'}]}]],
        [{match,138,{var,138,'File'},{string,138,"dummy.zip"}},
         {'case',139,
          {call,139,
           {remote,139,{atom,139,zip},{atom,139,create}},
           [{var,139,'File'},
            {var,139,'ZipFiles'},
            {op,139,'++',
             {var,139,'ZipOptions'},
             {cons,139,{atom,139,memory},{nil,139}}}]},
          [{clause,140,
            [{tuple,140,
              [{atom,140,ok},
               {tuple,140,[{var,140,'File'},{var,140,'ZipBin'}]}]}],
            [],
            [{call,141,
              {atom,141,prepare},
              [{var,141,'T'},
               {call,141,
                {remote,141,{atom,141,erlang},{atom,141,setelement}},
                [{integer,141,6},
                 {call,141,
                  {remote,141,{atom,141,erlang},{atom,141,setelement}},
                  [{integer,141,2},{var,141,'S'},{var,141,'Type'}]},
                 {var,141,'ZipBin'}]}]}]},
           {clause,142,
            [{tuple,142,[{atom,142,error},{var,142,'Reason'}]}],
            [],
            [{call,143,
              {atom,143,throw},
              [{tuple,143,[{var,143,'Reason'},{var,143,'H'}]}]}]}]}]},
       {clause,145,
        [{var,145,'_'}],
        [],
        [{call,146,
          {atom,146,throw},
          [{tuple,146,[{atom,146,badarg},{var,146,'H'}]}]}]}]}]},
   {clause,148,
    [{nil,148},
     {tuple,148,
      [{atom,148,sections},
       {var,148,'_'},
       {var,148,'_'},
       {var,148,'_'},
       {var,148,'_'},
       {atom,148,undefined}]}],
    [],
    [{call,149,{atom,149,throw},[{atom,149,missing_body}]}]},
   {clause,150,
    [{nil,150},
     {match,150,
      {tuple,150,
       [{atom,150,sections},
        {var,150,'Type'},
        {var,150,'_'},
        {var,150,'_'},
        {var,150,'_'},
        {var,150,'_'}]},
      {var,150,'S'}}],
    [[{op,151,'=:=',{var,151,'Type'},{atom,151,source}}],
     [{op,151,'=:=',{var,151,'Type'},{atom,151,beam}}],
     [{op,151,'=:=',{var,151,'Type'},{atom,151,archive}}]],
    [{var,152,'S'}]},
   {clause,153,
    [{nil,153},
     {tuple,153,
      [{atom,153,sections},
       {var,153,'Type'},
       {atom,153,undefined},
       {atom,153,undefined},
       {atom,153,undefined},
       {atom,153,undefined}]}],
    [],
    [{call,154,
      {atom,154,throw},
      [{tuple,154,[{atom,154,illegal_type},{var,154,'Type'}]}]}]},
   {clause,155,
    [{var,155,'BadOptions'},{var,155,'_'}],
    [],
    [{call,156,
      {atom,156,throw},
      [{tuple,156,[{atom,156,badarg},{var,156,'BadOptions'}]}]}]}]},
 {function,163,extract,2,
  [{clause,163,
    [{var,163,'File'},{var,163,'Options'}],
    [[{call,163,{atom,163,is_list},[{var,163,'File'}]},
      {call,163,{atom,163,is_list},[{var,163,'Options'}]}]],
    [{'try',164,
      [{match,165,
        {var,165,'EO'},
        {call,165,
         {atom,165,parse_extract_options},
         [{var,165,'Options'},
          {tuple,166,[{atom,166,extract_options},{atom,166,false}]}]}},
       {match,167,
        {tuple,167,
         [{var,167,'HeaderSz'},
          {var,167,'NextLineNo'},
          {var,167,'Fd'},
          {var,167,'Sections'}]},
        {call,168,
         {atom,168,parse_header},
         [{var,168,'File'},
          {op,168,'not',
           {call,168,
            {remote,168,{atom,168,erlang},{atom,168,element}},
            [{integer,168,2},{var,168,'EO'}]}}]}},
       {match,169,
        {var,169,'Type'},
        {call,169,
         {remote,169,{atom,169,erlang},{atom,169,element}},
         [{integer,169,2},{var,169,'Sections'}]}},
       {'case',170,
        {tuple,170,
         [{var,170,'Type'},
          {call,170,
           {remote,170,{atom,170,erlang},{atom,170,element}},
           [{integer,170,2},{var,170,'EO'}]}]},
        [{clause,171,
          [{tuple,171,[{atom,171,source},{atom,171,true}]}],
          [],
          [{match,172,
            {var,172,'Bin'},
            {call,172,
             {atom,172,compile_source},
             [{var,172,'Type'},
              {var,172,'File'},
              {var,172,'Fd'},
              {var,172,'NextLineNo'},
              {var,172,'HeaderSz'}]}}]},
         {clause,173,
          [{tuple,173,[{var,173,'_'},{var,173,'_'}]}],
          [],
          [{match,174,
            {atom,174,ok},
            {call,174,
             {remote,174,{atom,174,file},{atom,174,close}},
             [{var,174,'Fd'}]}},
           {'case',175,
            {call,175,
             {remote,175,{atom,175,file},{atom,175,read_file}},
             [{var,175,'File'}]},
            [{clause,176,
              [{tuple,176,
                [{atom,176,ok},
                 {bin,176,
                  [{bin_element,176,
                    {var,176,'_Header'},
                    {var,176,'HeaderSz'},
                    [binary]},
                   {bin_element,176,{var,176,'Bin'},default,[binary]}]}]}],
              [],
              [{atom,177,ok}]},
             {clause,178,
              [{tuple,178,[{atom,178,error},{var,178,'ReadReason'}]}],
              [],
              [{match,179,
                {var,179,'Bin'},
                {atom,179,get_rid_of_compiler_warning}},
               {call,180,{atom,180,throw},[{var,180,'ReadReason'}]}]}]}]}]},
       {call,183,
        {atom,183,return_sections},
        [{var,183,'Sections'},{var,183,'Bin'}]}],
      [],
      [{clause,185,
        [{tuple,185,[{atom,185,throw},{var,185,'Reason'},{var,185,'_'}]}],
        [],
        [{tuple,186,[{atom,186,error},{var,186,'Reason'}]}]}],
      []}]}]},
 {function,189,parse_extract_options,2,
  [{clause,189,
    [{cons,189,{var,189,'H'},{var,189,'T'}},{var,189,'EO'}],
    [],
    [{'case',190,
      {var,190,'H'},
      [{clause,191,
        [{atom,191,compile_source}],
        [],
        [{match,192,
          {var,192,'EO2'},
          {call,192,
           {remote,192,{atom,192,erlang},{atom,192,setelement}},
           [{integer,192,2},{var,192,'EO'},{atom,192,true}]}},
         {call,193,
          {atom,193,parse_extract_options},
          [{var,193,'T'},{var,193,'EO2'}]}]},
       {clause,194,
        [{var,194,'_'}],
        [],
        [{call,195,
          {atom,195,throw},
          [{tuple,195,[{atom,195,badarg},{var,195,'H'}]}]}]}]}]},
   {clause,197,[{nil,197},{var,197,'EO'}],[],[{var,198,'EO'}]}]},
 {function,200,compile_source,5,
  [{clause,200,
    [{var,200,'Type'},
     {var,200,'File'},
     {var,200,'Fd'},
     {var,200,'NextLineNo'},
     {var,200,'HeaderSz'}],
    [],
    [{match,201,
      {tuple,201,
       [{atom,201,text},
        {var,201,'_Module'},
        {var,201,'Forms'},
        {var,201,'_HasRecs'},
        {var,201,'_Mode'}]},
      {call,202,
       {atom,202,do_parse_file},
       [{var,202,'Type'},
        {var,202,'File'},
        {var,202,'Fd'},
        {var,202,'NextLineNo'},
        {var,202,'HeaderSz'},
        {atom,202,false}]}},
     {match,203,
      {atom,203,ok},
      {call,203,
       {remote,203,{atom,203,file},{atom,203,close}},
       [{var,203,'Fd'}]}},
     {'case',204,
      {call,204,
       {remote,204,{atom,204,compile},{atom,204,forms}},
       [{var,204,'Forms'},
        {cons,204,
         {atom,204,return_errors},
         {cons,204,{atom,204,debug_info},{nil,204}}}]},
      [{clause,205,
        [{tuple,205,[{atom,205,ok},{var,205,'_'},{var,205,'BeamBin'}]}],
        [],
        [{var,206,'BeamBin'}]},
       {clause,207,
        [{tuple,207,
          [{atom,207,error},{var,207,'Errors'},{var,207,'Warnings'}]}],
        [],
        [{call,208,
          {atom,208,throw},
          [{tuple,208,
            [{atom,208,compile},
             {cons,208,
              {tuple,208,
               [{atom,208,errors},
                {call,208,{atom,208,format_errors},[{var,208,'Errors'}]}]},
              {cons,209,
               {tuple,209,
                [{atom,209,warnings},
                 {call,209,{atom,209,format_errors},[{var,209,'Warnings'}]}]},
               {nil,209}}}]}]}]}]}]}]},
 {function,212,format_errors,1,
  [{clause,212,
    [{var,212,'CompileErrors'}],
    [],
    [{lc,213,
      {call,213,
       {remote,213,{atom,213,lists},{atom,213,flatten}},
       [{cons,213,
         {var,213,'File'},
         {cons,213,
          {string,213,":"},
          {cons,213,
           {call,213,{atom,213,integer_to_list},[{var,213,'LineNo'}]},
           {cons,213,
            {string,213,": "},
            {cons,214,
             {call,214,
              {remote,214,{var,214,'Mod'},{atom,214,format_error}},
              [{var,214,'Error'}]},
             {nil,214}}}}}}]},
      [{generate,215,
        {tuple,215,[{var,215,'File'},{var,215,'FileErrors'}]},
        {var,215,'CompileErrors'}},
       {generate,216,
        {tuple,216,[{var,216,'LineNo'},{var,216,'Mod'},{var,216,'Error'}]},
        {var,216,'FileErrors'}}]}]}]},
 {function,218,return_sections,2,
  [{clause,218,
    [{var,218,'S'},{var,218,'Bin'}],
    [],
    [{tuple,219,
      [{atom,219,ok},
       {cons,219,
        {call,219,
         {atom,219,normalize_section},
         [{atom,219,shebang},
          {call,219,
           {remote,219,{atom,219,erlang},{atom,219,element}},
           [{integer,219,3},{var,219,'S'}]}]},
        {cons,220,
         {call,220,
          {atom,220,normalize_section},
          [{atom,220,comment},
           {call,220,
            {remote,220,{atom,220,erlang},{atom,220,element}},
            [{integer,220,4},{var,220,'S'}]}]},
         {cons,221,
          {call,221,
           {atom,221,normalize_section},
           [{atom,221,emu_args},
            {call,221,
             {remote,221,{atom,221,erlang},{atom,221,element}},
             [{integer,221,5},{var,221,'S'}]}]},
          {cons,222,
           {call,222,
            {atom,222,normalize_section},
            [{call,222,
              {remote,222,{atom,222,erlang},{atom,222,element}},
              [{integer,222,2},{var,222,'S'}]},
             {var,222,'Bin'}]},
           {nil,222}}}}}]}]}]},
 {function,224,normalize_section,2,
  [{clause,224,
    [{var,224,'Name'},{atom,224,undefined}],
    [],
    [{tuple,225,[{var,225,'Name'},{atom,225,undefined}]}]},
   {clause,226,
    [{atom,226,shebang},{op,226,'++',{string,226,"#!"},{var,226,'Chars'}}],
    [],
    [{match,227,
      {var,227,'Chopped'},
      {call,227,
       {remote,227,{atom,227,string},{atom,227,strip}},
       [{var,227,'Chars'},{atom,227,right},{char,227,10}]}},
     {match,228,
      {var,228,'Stripped'},
      {call,228,
       {remote,228,{atom,228,string},{atom,228,strip}},
       [{var,228,'Chopped'},{atom,228,both}]}},
     {'if',229,
      [{clause,230,[],
        [[{op,230,'=:=',
           {var,230,'Stripped'},
           {string,30,"/usr/bin/env escript"}}]],
        [{tuple,231,[{atom,231,shebang},{atom,231,default}]}]},
       {clause,232,[],
        [[{atom,232,true}]],
        [{tuple,233,[{atom,233,shebang},{var,233,'Stripped'}]}]}]}]},
   {clause,235,
    [{atom,235,comment},{var,235,'Chars'}],
    [],
    [{match,236,
      {var,236,'Chopped'},
      {call,236,
       {remote,236,{atom,236,string},{atom,236,strip}},
       [{var,236,'Chars'},{atom,236,right},{char,236,10}]}},
     {match,237,
      {var,237,'Stripped'},
      {call,237,
       {remote,237,{atom,237,string},{atom,237,strip}},
       [{call,237,
         {remote,237,{atom,237,string},{atom,237,strip}},
         [{var,237,'Chopped'},{atom,237,left},{char,237,37}]},
        {atom,237,both}]}},
     {'if',238,
      [{clause,239,[],
        [[{op,239,'=:=',
           {var,239,'Stripped'},
           {string,31,"This is an -*- erlang -*- file"}}]],
        [{tuple,240,[{atom,240,comment},{atom,240,default}]}]},
       {clause,241,[],
        [[{atom,241,true}]],
        [{tuple,242,[{atom,242,comment},{var,242,'Stripped'}]}]}]}]},
   {clause,244,
    [{atom,244,emu_args},{op,244,'++',{string,244,"%%!"},{var,244,'Chars'}}],
    [],
    [{match,245,
      {var,245,'Chopped'},
      {call,245,
       {remote,245,{atom,245,string},{atom,245,strip}},
       [{var,245,'Chars'},{atom,245,right},{char,245,10}]}},
     {match,246,
      {var,246,'Stripped'},
      {call,246,
       {remote,246,{atom,246,string},{atom,246,strip}},
       [{var,246,'Chopped'},{atom,246,both}]}},
     {tuple,247,[{atom,247,emu_args},{var,247,'Stripped'}]}]},
   {clause,248,
    [{var,248,'Name'},{var,248,'Chars'}],
    [],
    [{tuple,249,[{var,249,'Name'},{var,249,'Chars'}]}]}]},
 {function,253,script_name,0,
  [{clause,253,[],[],
    [{match,254,
      {cons,254,{var,254,'ScriptName'},{var,254,'_'}},
      {call,254,
       {remote,254,{atom,254,init},{atom,254,get_plain_arguments}},
       []}},
     {var,255,'ScriptName'}]}]},
 {function,263,start,0,
  [{clause,263,[],[],[{call,264,{atom,264,start},[{nil,264}]}]}]},
 {function,268,start,1,
  [{clause,268,
    [{var,268,'EscriptOptions'}],
    [],
    [{'try',269,
      [{call,274,
        {atom,274,process_flag},
        [{atom,274,trap_exit},{atom,274,false}]},
       {'case',275,
        {call,275,
         {remote,275,{atom,275,init},{atom,275,get_plain_arguments}},
         []},
        [{clause,276,
          [{cons,276,{var,276,'File'},{var,276,'Args'}}],
          [],
          [{call,277,
            {atom,277,parse_and_run},
            [{var,277,'File'},{var,277,'Args'},{var,277,'EscriptOptions'}]}]},
         {clause,278,
          [{nil,278}],
          [],
          [{call,279,
            {remote,279,{atom,279,io},{atom,279,format}},
            [{string,279,"escript: Missing filename\n"},{nil,279}]},
           {call,280,{atom,280,my_halt},[{integer,280,127}]}]}]}],
      [],
      [{clause,283,
        [{tuple,283,[{atom,283,throw},{var,283,'Str'},{var,283,'_'}]}],
        [],
        [{call,284,
          {remote,284,{atom,284,io},{atom,284,format}},
          [{string,284,"escript: ~s\n"},{cons,284,{var,284,'Str'},{nil,284}}]},
         {call,285,{atom,285,my_halt},[{integer,285,127}]}]},
       {clause,286,
        [{tuple,286,[{var,286,'_'},{var,286,'Reason'},{var,286,'_'}]}],
        [],
        [{call,287,
          {remote,287,{atom,287,io},{atom,287,format}},
          [{string,287,"escript: Internal error: ~p\n"},
           {cons,287,{var,287,'Reason'},{nil,287}}]},
         {call,288,
          {remote,288,{atom,288,io},{atom,288,format}},
          [{string,288,"~p\n"},
           {cons,288,
            {call,288,
             {remote,288,{atom,288,erlang},{atom,288,get_stacktrace}},
             []},
            {nil,288}}]},
         {call,289,{atom,289,my_halt},[{integer,289,127}]}]}],
      []}]}]},
 {function,294,parse_and_run,3,
  [{clause,294,
    [{var,294,'File'},{var,294,'Args'},{var,294,'Options'}],
    [],
    [{match,295,
      {var,295,'CheckOnly'},
      {call,295,
       {remote,295,{atom,295,lists},{atom,295,member}},
       [{string,295,"s"},{var,295,'Options'}]}},
     {match,296,
      {tuple,296,
       [{var,296,'Source'},
        {var,296,'Module'},
        {var,296,'FormsOrBin'},
        {var,296,'HasRecs'},
        {var,296,'Mode'}]},
      {call,297,
       {atom,297,parse_file},
       [{var,297,'File'},{var,297,'CheckOnly'}]}},
     {match,298,
      {var,298,'Mode2'},
      {'case',299,
       {call,299,
        {remote,299,{atom,299,lists},{atom,299,member}},
        [{string,299,"d"},{var,299,'Options'}]},
       [{clause,300,[{atom,300,true}],[],[{atom,301,debug}]},
        {clause,302,
         [{atom,302,false}],
         [],
         [{'case',303,
           {call,303,
            {remote,303,{atom,303,lists},{atom,303,member}},
            [{string,303,"c"},{var,303,'Options'}]},
           [{clause,304,[{atom,304,true}],[],[{atom,305,compile}]},
            {clause,306,
             [{atom,306,false}],
             [],
             [{'case',307,
               {call,307,
                {remote,307,{atom,307,lists},{atom,307,member}},
                [{string,307,"i"},{var,307,'Options'}]},
               [{clause,308,[{atom,308,true}],[],[{atom,308,interpret}]},
                {clause,309,
                 [{atom,309,false}],
                 [],
                 [{'case',310,
                   {call,310,
                    {remote,310,{atom,310,lists},{atom,310,member}},
                    [{string,310,"n"},{var,310,'Options'}]},
                   [{clause,311,[{atom,311,true}],[],[{atom,311,native}]},
                    {clause,312,
                     [{atom,312,false}],
                     [],
                     [{var,312,'Mode'}]}]}]}]}]}]}]}]}},
     {'if',317,
      [{clause,318,[],
        [[{call,318,{atom,318,is_list},[{var,318,'FormsOrBin'}]}]],
        [{'case',319,
          {var,319,'Mode2'},
          [{clause,320,
            [{atom,320,interpret}],
            [],
            [{call,321,
              {atom,321,interpret},
              [{var,321,'FormsOrBin'},
               {var,321,'HasRecs'},
               {var,321,'File'},
               {var,321,'Args'}]}]},
           {clause,322,
            [{atom,322,compile}],
            [],
            [{'case',323,
              {call,323,
               {remote,323,{atom,323,compile},{atom,323,forms}},
               [{var,323,'FormsOrBin'},
                {cons,323,{atom,323,report},{nil,323}}]},
              [{clause,324,
                [{tuple,324,
                  [{atom,324,ok},{var,324,'Module'},{var,324,'BeamBin'}]}],
                [],
                [{match,325,
                  {tuple,325,[{atom,325,module},{var,325,'Module'}]},
                  {call,325,
                   {remote,325,{atom,325,code},{atom,325,load_binary}},
                   [{var,325,'Module'},{var,325,'File'},{var,325,'BeamBin'}]}},
                 {call,326,
                  {atom,326,run},
                  [{var,326,'Module'},{var,326,'Args'}]}]},
               {clause,327,
                [{var,327,'_Other'}],
                [],
                [{call,328,
                  {atom,328,fatal},
                  [{string,328,"There were compilation errors."}]}]}]}]},
           {clause,330,
            [{atom,330,native}],
            [],
            [{'case',331,
              {call,331,
               {remote,331,{atom,331,compile},{atom,331,forms}},
               [{var,331,'FormsOrBin'},
                {cons,331,
                 {atom,331,report},
                 {cons,331,{atom,331,native},{nil,331}}}]},
              [{clause,332,
                [{tuple,332,
                  [{atom,332,ok},{var,332,'Module'},{var,332,'BeamBin'}]}],
                [],
                [{match,333,
                  {tuple,333,[{atom,333,module},{var,333,'Module'}]},
                  {call,333,
                   {remote,333,{atom,333,code},{atom,333,load_binary}},
                   [{var,333,'Module'},{var,333,'File'},{var,333,'BeamBin'}]}},
                 {call,334,
                  {atom,334,run},
                  [{var,334,'Module'},{var,334,'Args'}]}]},
               {clause,335,
                [{var,335,'_Other'}],
                [],
                [{call,336,
                  {atom,336,fatal},
                  [{string,336,"There were compilation errors."}]}]}]}]},
           {clause,338,
            [{atom,338,debug}],
            [],
            [{'case',339,
              {call,339,
               {remote,339,{atom,339,compile},{atom,339,forms}},
               [{var,339,'FormsOrBin'},
                {cons,339,
                 {atom,339,report},
                 {cons,339,{atom,339,debug_info},{nil,339}}}]},
              [{clause,340,
                [{tuple,340,
                  [{atom,340,ok},{var,340,'Module'},{var,340,'BeamBin'}]}],
                [],
                [{match,341,
                  {tuple,341,[{atom,341,module},{var,341,'Module'}]},
                  {call,341,
                   {remote,341,{atom,341,code},{atom,341,load_binary}},
                   [{var,341,'Module'},{var,341,'File'},{var,341,'BeamBin'}]}},
                 {call,342,
                  {atom,342,debug},
                  [{var,342,'Module'},
                   {tuple,342,
                    [{var,342,'Module'},
                     {var,342,'File'},
                     {var,342,'File'},
                     {var,342,'BeamBin'}]},
                   {var,342,'Args'}]}]},
               {clause,343,
                [{var,343,'_Other'}],
                [],
                [{call,344,
                  {atom,344,fatal},
                  [{string,344,"There were compilation errors."}]}]}]}]}]}]},
       {clause,347,[],
        [[{call,347,{atom,347,is_binary},[{var,347,'FormsOrBin'}]}]],
        [{'case',348,
          {var,348,'Source'},
          [{clause,349,
            [{atom,349,archive}],
            [],
            [{match,350,
              {tuple,350,[{atom,350,ok},{var,350,'FileInfo'}]},
              {call,350,
               {remote,350,{atom,350,file},{atom,350,read_file_info}},
               [{var,350,'File'}]}},
             {'case',351,
              {call,351,
               {remote,351,{atom,351,code},{atom,351,set_primary_archive}},
               [{var,351,'File'},
                {var,351,'FormsOrBin'},
                {var,351,'FileInfo'},
                {'fun',352,
                 {function,
                  {atom,352,escript},
                  {atom,352,parse_file},
                  {integer,352,1}}}]},
              [{clause,353,
                [{atom,353,ok}],
                [[{var,353,'CheckOnly'}]],
                [{'case',354,
                  {call,354,
                   {remote,354,{atom,354,code},{atom,354,load_file}},
                   [{var,354,'Module'}]},
                  [{clause,355,
                    [{tuple,355,[{atom,355,module},{var,355,'_'}]}],
                    [],
                    [{'case',356,
                      {call,356,
                       {remote,356,
                        {atom,356,erlang},
                        {atom,356,function_exported}},
                       [{var,356,'Module'},{atom,356,main},{integer,356,1}]},
                      [{clause,357,
                        [{atom,357,true}],
                        [],
                        [{call,358,{atom,358,my_halt},[{integer,358,0}]}]},
                       {clause,359,
                        [{atom,359,false}],
                        [],
                        [{match,360,
                          {var,360,'Text'},
                          {call,360,
                           {remote,360,{atom,360,lists},{atom,360,concat}},
                           [{cons,360,
                             {string,360,"Function "},
                             {cons,360,
                              {var,360,'Module'},
                              {cons,361,
                               {string,361,":main/1 is not exported"},
                               {nil,361}}}}]}},
                         {call,362,{atom,362,fatal},[{var,362,'Text'}]}]}]}]},
                   {clause,364,
                    [{var,364,'_'}],
                    [],
                    [{match,365,
                      {var,365,'Text'},
                      {call,365,
                       {remote,365,{atom,365,lists},{atom,365,concat}},
                       [{cons,365,
                         {string,365,"Cannot load module "},
                         {cons,365,
                          {var,365,'Module'},
                          {cons,366,
                           {string,366," from archive"},
                           {nil,366}}}}]}},
                     {call,367,{atom,367,fatal},[{var,367,'Text'}]}]}]}]},
               {clause,369,
                [{atom,369,ok}],
                [],
                [{'case',370,
                  {var,370,'Mode2'},
                  [{clause,371,
                    [{atom,371,run}],
                    [],
                    [{call,371,
                      {atom,371,run},
                      [{var,371,'Module'},{var,371,'Args'}]}]},
                   {clause,372,
                    [{atom,372,debug}],
                    [],
                    [{call,372,
                      {atom,372,debug},
                      [{var,372,'Module'},
                       {var,372,'Module'},
                       {var,372,'Args'}]}]}]}]},
               {clause,374,
                [{tuple,374,[{atom,374,error},{atom,374,bad_eocd}]}],
                [],
                [{call,375,
                  {atom,375,fatal},
                  [{string,375,"Not an archive file"}]}]},
               {clause,376,
                [{tuple,376,[{atom,376,error},{var,376,'Reason'}]}],
                [],
                [{call,377,{atom,377,fatal},[{var,377,'Reason'}]}]}]}]},
           {clause,379,
            [{atom,379,beam}],
            [],
            [{'case',380,
              {var,380,'Mode2'},
              [{clause,381,
                [{atom,381,run}],
                [],
                [{match,382,
                  {tuple,382,[{atom,382,module},{var,382,'Module'}]},
                  {call,382,
                   {remote,382,{atom,382,code},{atom,382,load_binary}},
                   [{var,382,'Module'},
                    {var,382,'File'},
                    {var,382,'FormsOrBin'}]}},
                 {call,383,
                  {atom,383,run},
                  [{var,383,'Module'},{var,383,'Args'}]}]},
               {clause,384,
                [{atom,384,debug}],
                [],
                [{match,385,
                  {cons,385,{var,385,'Base'},{var,385,'Rest'}},
                  {call,385,
                   {remote,385,{atom,385,lists},{atom,385,reverse}},
                   [{call,385,
                     {remote,385,{atom,385,filename},{atom,385,split}},
                     [{var,385,'File'}]}]}},
                 {match,386,
                  {var,386,'Base2'},
                  {call,386,
                   {remote,386,{atom,386,filename},{atom,386,basename}},
                   [{var,386,'Base'},
                    {call,386,
                     {remote,386,{atom,386,code},{atom,386,objfile_extension}},
                     []}]}},
                 {match,387,
                  {var,387,'Rest2'},
                  {'case',388,
                   {var,388,'Rest'},
                   [{clause,389,
                     [{cons,389,{string,389,"ebin"},{var,389,'Top'}}],
                     [],
                     [{cons,389,{string,389,"src"},{var,389,'Top'}}]},
                    {clause,390,[{var,390,'_'}],[],[{var,390,'Rest'}]}]}},
                 {match,392,
                  {var,392,'SrcFile'},
                  {call,392,
                   {remote,392,{atom,392,filename},{atom,392,join}},
                   [{call,392,
                     {remote,392,{atom,392,lists},{atom,392,reverse}},
                     [{cons,392,
                       {op,392,'++',{var,392,'Base2'},{string,392,".erl"}},
                       {var,392,'Rest2'}}]}]}},
                 {call,393,
                  {atom,393,debug},
                  [{var,393,'Module'},
                   {tuple,393,
                    [{var,393,'Module'},
                     {var,393,'SrcFile'},
                     {var,393,'File'},
                     {var,393,'FormsOrBin'}]},
                   {var,393,'Args'}]}]}]}]}]}]}]}]}]},
 {function,403,parse_file,1,
  [{clause,403,
    [{var,403,'File'}],
    [],
    [{'try',404,
      [{call,404,{atom,404,parse_file},[{var,404,'File'},{atom,404,false}]}],
      [{clause,405,
        [{tuple,405,
          [{var,405,'_Source'},
           {var,405,'_Module'},
           {var,405,'FormsOrBin'},
           {var,405,'_HasRecs'},
           {var,405,'_Mode'}]}],
        [[{call,406,{atom,406,is_binary},[{var,406,'FormsOrBin'}]}]],
        [{tuple,407,[{atom,407,ok},{var,407,'FormsOrBin'}]}]},
       {clause,408,
        [{var,408,'_'}],
        [],
        [{tuple,409,[{atom,409,error},{atom,409,no_archive_bin}]}]}],
      [{clause,411,
        [{tuple,411,[{atom,411,throw},{var,411,'Reason'},{var,411,'_'}]}],
        [],
        [{tuple,412,[{atom,412,error},{var,412,'Reason'}]}]}],
      []}]}]},
 {function,415,parse_file,2,
  [{clause,415,
    [{var,415,'File'},{var,415,'CheckOnly'}],
    [],
    [{match,416,
      {tuple,416,
       [{var,416,'HeaderSz'},
        {var,416,'NextLineNo'},
        {var,416,'Fd'},
        {var,416,'Sections'}]},
      {call,417,{atom,417,parse_header},[{var,417,'File'},{atom,417,false}]}},
     {call,418,
      {atom,418,do_parse_file},
      [{call,418,
        {remote,418,{atom,418,erlang},{atom,418,element}},
        [{integer,418,2},{var,418,'Sections'}]},
       {var,419,'File'},
       {var,419,'Fd'},
       {var,419,'NextLineNo'},
       {var,419,'HeaderSz'},
       {var,419,'CheckOnly'}]}]}]},
 {function,421,do_parse_file,6,
  [{clause,421,
    [{var,421,'Type'},
     {var,421,'File'},
     {var,421,'Fd'},
     {var,421,'NextLineNo'},
     {var,421,'HeaderSz'},
     {var,421,'CheckOnly'}],
    [],
    [{match,422,
      {var,422,'S'},
      {call,422,{atom,422,initial_state},[{var,422,'File'}]}},
     {match,427,
      {tuple,423,
       [{atom,423,state},
        {var,423,'_'},
        {var,425,'Module'},
        {var,426,'FormsOrBin'},
        {var,424,'Source'},
        {var,423,'_'},
        {var,423,'Mode'},
        {var,423,'_'},
        {var,427,'HasRecs'}]},
      {'case',428,
       {var,428,'Type'},
       [{clause,429,
         [{atom,429,archive}],
         [],
         [{match,431,
           {atom,431,ok},
           {call,431,
            {remote,431,{atom,431,file},{atom,431,close}},
            [{var,431,'Fd'}]}},
          {call,432,
           {atom,432,parse_archive},
           [{var,432,'S'},{var,432,'File'},{var,432,'HeaderSz'}]}]},
        {clause,433,
         [{atom,433,beam}],
         [],
         [{match,435,
           {atom,435,ok},
           {call,435,
            {remote,435,{atom,435,file},{atom,435,close}},
            [{var,435,'Fd'}]}},
          {call,436,
           {atom,436,parse_beam},
           [{var,436,'S'},
            {var,436,'File'},
            {var,436,'HeaderSz'},
            {var,436,'CheckOnly'}]}]},
        {clause,437,
         [{atom,437,source}],
         [],
         [{call,439,
           {atom,439,parse_source},
           [{var,439,'S'},
            {var,439,'File'},
            {var,439,'Fd'},
            {var,439,'NextLineNo'},
            {var,439,'HeaderSz'},
            {var,439,'CheckOnly'}]}]}]}},
     {tuple,441,
      [{var,441,'Source'},
       {var,441,'Module'},
       {var,441,'FormsOrBin'},
       {var,441,'HasRecs'},
       {var,441,'Mode'}]}]}]},
 {function,443,initial_state,1,
  [{clause,443,
    [{var,443,'File'}],
    [],
    [{tuple,444,
      [{atom,444,state},
       {var,444,'File'},
       {atom,444,undefined},
       {atom,444,undefined},
       {atom,444,undefined},
       {integer,445,0},
       {atom,446,interpret},
       {atom,447,false},
       {atom,448,false}]}]}]},
 {function,451,parse_header,2,
  [{clause,451,
    [{var,451,'File'},{var,451,'KeepFirst'}],
    [],
    [{match,452,{var,452,'LineNo'},{integer,452,1}},
     {match,453,
      {tuple,453,[{atom,453,ok},{var,453,'Fd'}]},
      {'case',454,
       {call,454,
        {remote,454,{atom,454,file},{atom,454,open}},
        [{var,454,'File'},{cons,454,{atom,454,read},{nil,454}}]},
       [{clause,455,
         [{tuple,455,[{atom,455,ok},{var,455,'Fd0'}]}],
         [],
         [{tuple,456,[{atom,456,ok},{var,456,'Fd0'}]}]},
        {clause,457,
         [{tuple,457,[{atom,457,error},{var,457,'R'}]}],
         [],
         [{call,458,
           {atom,458,fatal},
           [{call,458,
             {remote,458,{atom,458,lists},{atom,458,concat}},
             [{cons,458,
               {call,458,
                {remote,458,{atom,458,file},{atom,458,format_error}},
                [{var,458,'R'}]},
               {cons,458,
                {string,458,": '"},
                {cons,458,
                 {var,458,'File'},
                 {cons,458,{string,458,"'"},{nil,458}}}}}]}]}]}]}},
     {match,462,
      {tuple,462,[{atom,462,ok},{var,462,'HeaderSz0'}]},
      {call,462,
       {remote,462,{atom,462,file},{atom,462,position}},
       [{var,462,'Fd'},{atom,462,cur}]}},
     {match,463,
      {var,463,'Line1'},
      {call,463,{atom,463,get_line},[{var,463,'Fd'}]}},
     {'case',464,
      {call,464,{atom,464,classify_line},[{var,464,'Line1'}]},
      [{clause,465,
        [{atom,465,shebang}],
        [],
        [{call,466,
          {atom,466,find_first_body_line},
          [{var,466,'Fd'},
           {var,466,'HeaderSz0'},
           {var,466,'LineNo'},
           {var,466,'KeepFirst'},
           {tuple,467,
            [{atom,467,sections},
             {atom,467,undefined},
             {var,467,'Line1'},
             {atom,467,undefined},
             {atom,467,undefined},
             {atom,467,undefined}]}]}]},
       {clause,468,
        [{atom,468,archive}],
        [],
        [{tuple,469,
          [{var,469,'HeaderSz0'},
           {var,469,'LineNo'},
           {var,469,'Fd'},
           {tuple,470,
            [{atom,470,sections},
             {atom,470,archive},
             {atom,470,undefined},
             {atom,470,undefined},
             {atom,470,undefined},
             {atom,470,undefined}]}]}]},
       {clause,471,
        [{atom,471,beam}],
        [],
        [{tuple,472,
          [{var,472,'HeaderSz0'},
           {var,472,'LineNo'},
           {var,472,'Fd'},
           {tuple,473,
            [{atom,473,sections},
             {atom,473,beam},
             {atom,473,undefined},
             {atom,473,undefined},
             {atom,473,undefined},
             {atom,473,undefined}]}]}]},
       {clause,474,
        [{var,474,'_'}],
        [],
        [{call,475,
          {atom,475,find_first_body_line},
          [{var,475,'Fd'},
           {var,475,'HeaderSz0'},
           {var,475,'LineNo'},
           {var,475,'KeepFirst'},
           {tuple,476,
            [{atom,476,sections},
             {atom,476,undefined},
             {atom,476,undefined},
             {atom,476,undefined},
             {atom,476,undefined},
             {atom,476,undefined}]}]}]}]}]}]},
 {function,479,find_first_body_line,5,
  [{clause,479,
    [{var,479,'Fd'},
     {var,479,'HeaderSz0'},
     {var,479,'LineNo'},
     {var,479,'KeepFirst'},
     {var,479,'Sections'}],
    [],
    [{match,480,
      {tuple,480,[{atom,480,ok},{var,480,'HeaderSz1'}]},
      {call,480,
       {remote,480,{atom,480,file},{atom,480,position}},
       [{var,480,'Fd'},{atom,480,cur}]}},
     {match,482,
      {var,482,'Line2'},
      {call,482,{atom,482,get_line},[{var,482,'Fd'}]}},
     {match,483,
      {tuple,483,[{atom,483,ok},{var,483,'HeaderSz2'}]},
      {call,483,
       {remote,483,{atom,483,file},{atom,483,position}},
       [{var,483,'Fd'},{atom,483,cur}]}},
     {'case',484,
      {call,484,{atom,484,classify_line},[{var,484,'Line2'}]},
      [{clause,485,
        [{atom,485,emu_args}],
        [],
        [{match,487,
          {var,487,'Line3'},
          {call,487,{atom,487,get_line},[{var,487,'Fd'}]}},
         {tuple,488,
          [{var,488,'HeaderSz2'},
           {op,488,'+',{var,488,'LineNo'},{integer,488,2}},
           {var,488,'Fd'},
           {call,489,
            {remote,489,{atom,489,erlang},{atom,489,setelement}},
            [{integer,489,5},
             {call,489,
              {remote,489,{atom,489,erlang},{atom,489,setelement}},
              [{integer,489,4},
               {call,489,
                {remote,489,{atom,489,erlang},{atom,489,setelement}},
                [{integer,489,2},
                 {var,489,'Sections'},
                 {call,489,{atom,489,guess_type},[{var,489,'Line3'}]}]},
               {atom,490,undefined}]},
             {var,491,'Line2'}]}]}]},
       {clause,492,
        [{var,492,'Line2Type'}],
        [],
        [{match,494,
          {var,494,'Line3'},
          {call,494,{atom,494,get_line},[{var,494,'Fd'}]}},
         {match,495,
          {tuple,495,[{atom,495,ok},{var,495,'HeaderSz3'}]},
          {call,495,
           {remote,495,{atom,495,file},{atom,495,position}},
           [{var,495,'Fd'},{atom,495,cur}]}},
         {match,496,
          {var,496,'Line3Type'},
          {call,496,{atom,496,classify_line},[{var,496,'Line3'}]}},
         {'if',497,
          [{clause,498,[],
            [[{op,498,'=:=',{var,498,'Line3Type'},{atom,498,emu_args}}]],
            [{match,500,
              {var,500,'Line4'},
              {call,500,{atom,500,get_line},[{var,500,'Fd'}]}},
             {tuple,501,
              [{var,501,'HeaderSz3'},
               {op,501,'+',{var,501,'LineNo'},{integer,501,3}},
               {var,501,'Fd'},
               {call,502,
                {remote,502,{atom,502,erlang},{atom,502,setelement}},
                [{integer,502,5},
                 {call,502,
                  {remote,502,{atom,502,erlang},{atom,502,setelement}},
                  [{integer,502,4},
                   {call,502,
                    {remote,502,{atom,502,erlang},{atom,502,setelement}},
                    [{integer,502,2},
                     {var,502,'Sections'},
                     {call,502,{atom,502,guess_type},[{var,502,'Line4'}]}]},
                   {var,503,'Line2'}]},
                 {var,504,'Line3'}]}]}]},
           {clause,505,[],
            [[{op,505,'=:=',
               {call,505,
                {remote,505,{atom,505,erlang},{atom,505,element}},
                [{integer,505,3},{var,505,'Sections'}]},
               {atom,505,undefined}},
              {op,506,'=:=',{var,506,'KeepFirst'},{atom,506,true}}]],
            [{tuple,508,
              [{var,508,'HeaderSz0'},
               {var,508,'LineNo'},
               {var,508,'Fd'},
               {call,509,
                {remote,509,{atom,509,erlang},{atom,509,setelement}},
                [{integer,509,2},
                 {var,509,'Sections'},
                 {call,509,{atom,509,guess_type},[{var,509,'Line2'}]}]}]}]},
           {clause,510,[],
            [[{op,510,'=:=',
               {call,510,
                {remote,510,{atom,510,erlang},{atom,510,element}},
                [{integer,510,3},{var,510,'Sections'}]},
               {atom,510,undefined}}]],
            [{tuple,512,
              [{var,512,'HeaderSz1'},
               {var,512,'LineNo'},
               {var,512,'Fd'},
               {call,513,
                {remote,513,{atom,513,erlang},{atom,513,setelement}},
                [{integer,513,2},
                 {var,513,'Sections'},
                 {call,513,{atom,513,guess_type},[{var,513,'Line2'}]}]}]}]},
           {clause,514,[],
            [[{op,514,'=:=',{var,514,'Line2Type'},{atom,514,comment}}]],
            [{tuple,516,
              [{var,516,'HeaderSz2'},
               {op,516,'+',{var,516,'LineNo'},{integer,516,2}},
               {var,516,'Fd'},
               {call,517,
                {remote,517,{atom,517,erlang},{atom,517,setelement}},
                [{integer,517,4},
                 {call,517,
                  {remote,517,{atom,517,erlang},{atom,517,setelement}},
                  [{integer,517,2},
                   {var,517,'Sections'},
                   {call,517,{atom,517,guess_type},[{var,517,'Line3'}]}]},
                 {var,518,'Line2'}]}]}]},
           {clause,519,[],
            [[{atom,519,true}]],
            [{tuple,521,
              [{var,521,'HeaderSz1'},
               {op,521,'+',{var,521,'LineNo'},{integer,521,1}},
               {var,521,'Fd'},
               {call,522,
                {remote,522,{atom,522,erlang},{atom,522,setelement}},
                [{integer,522,2},
                 {var,522,'Sections'},
                 {call,522,
                  {atom,522,guess_type},
                  [{var,522,'Line2'}]}]}]}]}]}]}]}]}]},
 {function,526,classify_line,1,
  [{clause,526,
    [{var,526,'Line'}],
    [],
    [{'case',527,
      {var,527,'Line'},
      [{clause,528,
        [{op,528,'++',{string,528,"#!"},{var,528,'_'}}],
        [],
        [{atom,528,shebang}]},
       {clause,529,
        [{op,529,'++',{string,529,"PK"},{var,529,'_'}}],
        [],
        [{atom,529,archive}]},
       {clause,530,
        [{op,530,'++',{string,530,"FOR1"},{var,530,'_'}}],
        [],
        [{atom,530,beam}]},
       {clause,531,
        [{op,531,'++',{string,531,"%%!"},{var,531,'_'}}],
        [],
        [{atom,531,emu_args}]},
       {clause,532,
        [{op,532,'++',{string,532,"%"},{var,532,'_'}}],
        [],
        [{atom,532,comment}]},
       {clause,533,[{var,533,'_'}],[],[{atom,533,undefined}]}]}]}]},
 {function,536,guess_type,1,
  [{clause,536,
    [{var,536,'Line'}],
    [],
    [{'case',537,
      {call,537,{atom,537,classify_line},[{var,537,'Line'}]},
      [{clause,538,[{atom,538,archive}],[],[{atom,538,archive}]},
       {clause,539,[{atom,539,beam}],[],[{atom,539,beam}]},
       {clause,540,[{var,540,'_'}],[],[{atom,540,source}]}]}]}]},
 {function,543,get_line,1,
  [{clause,543,
    [{var,543,'P'}],
    [],
    [{'case',544,
      {call,544,
       {remote,544,{atom,544,io},{atom,544,get_line}},
       [{var,544,'P'},{atom,544,''}]},
      [{clause,545,
        [{atom,545,eof}],
        [],
        [{call,546,
          {atom,546,fatal},
          [{string,546,"Premature end of file reached"}]}]},
       {clause,547,[{var,547,'Line'}],[],[{var,548,'Line'}]}]}]}]},
 {function,551,parse_archive,3,
  [{clause,551,
    [{var,551,'S'},{var,551,'File'},{var,551,'HeaderSz'}],
    [],
    [{'case',552,
      {call,552,
       {remote,552,{atom,552,file},{atom,552,read_file}},
       [{var,552,'File'}]},
      [{clause,553,
        [{tuple,553,
          [{atom,553,ok},
           {bin,553,
            [{bin_element,553,
              {var,553,'_Header'},
              {var,553,'HeaderSz'},
              [binary]},
             {bin_element,553,{var,553,'Bin'},default,[binary]}]}]}],
        [],
        [{match,554,
          {var,554,'Mod'},
          {'case',555,
           {call,555,
            {remote,555,{atom,555,init},{atom,555,get_argument}},
            [{atom,555,escript}]},
           [{clause,556,
             [{tuple,556,
               [{atom,556,ok},
                {cons,556,
                 {cons,556,
                  {string,556,"main"},
                  {cons,556,{var,556,'M'},{nil,556}}},
                 {nil,556}}]}],
             [],
             [{call,558,{atom,558,list_to_atom},[{var,558,'M'}]}]},
            {clause,559,
             [{var,559,'_'}],
             [],
             [{match,561,
               {var,561,'RevBase'},
               {call,561,
                {remote,561,{atom,561,lists},{atom,561,reverse}},
                [{call,561,
                  {remote,561,{atom,561,filename},{atom,561,basename}},
                  [{var,561,'File'}]}]}},
              {match,562,
               {var,562,'RevBase2'},
               {'case',563,
                {call,563,
                 {remote,563,{atom,563,lists},{atom,563,dropwhile}},
                 [{'fun',563,
                   {clauses,
                    [{clause,563,
                      [{var,563,'X'}],
                      [],
                      [{op,563,'=/=',{var,563,'X'},{char,563,46}}]}]}},
                  {var,563,'RevBase'}]},
                [{clause,564,
                  [{cons,564,{char,564,46},{var,564,'Rest'}}],
                  [],
                  [{var,564,'Rest'}]},
                 {clause,565,[{nil,565}],[],[{var,565,'RevBase'}]}]}},
              {call,567,
               {atom,567,list_to_atom},
               [{call,567,
                 {remote,567,{atom,567,lists},{atom,567,reverse}},
                 [{var,567,'RevBase2'}]}]}]}]}},
         {call,569,
          {remote,569,{atom,569,erlang},{atom,569,setelement}},
          [{integer,569,4},
           {call,569,
            {remote,569,{atom,569,erlang},{atom,569,setelement}},
            [{integer,569,3},
             {call,569,
              {remote,569,{atom,569,erlang},{atom,569,setelement}},
              [{integer,569,7},
               {call,569,
                {remote,569,{atom,569,erlang},{atom,569,setelement}},
                [{integer,569,5},{var,569,'S'},{atom,569,archive}]},
               {atom,570,run}]},
             {var,571,'Mod'}]},
           {var,572,'Bin'}]}]},
       {clause,573,
        [{tuple,573,[{atom,573,ok},{var,573,'_'}]}],
        [],
        [{call,574,{atom,574,fatal},[{string,574,"Illegal archive format"}]}]},
       {clause,575,
        [{tuple,575,[{atom,575,error},{var,575,'Reason'}]}],
        [],
        [{call,576,
          {atom,576,fatal},
          [{call,576,
            {remote,576,{atom,576,file},{atom,576,format_error}},
            [{var,576,'Reason'}]}]}]}]}]}]},
 {function,580,parse_beam,4,
  [{clause,580,
    [{var,580,'S'},
     {var,580,'File'},
     {var,580,'HeaderSz'},
     {var,580,'CheckOnly'}],
    [],
    [{match,581,
      {tuple,581,
       [{atom,581,ok},
        {bin,581,
         [{bin_element,581,{var,581,'_Header'},{var,581,'HeaderSz'},[binary]},
          {bin_element,581,{var,581,'Bin'},default,[binary]}]}]},
      {call,582,
       {remote,582,{atom,582,file},{atom,582,read_file}},
       [{var,582,'File'}]}},
     {'case',583,
      {call,583,
       {remote,583,{atom,583,beam_lib},{atom,583,chunks}},
       [{var,583,'Bin'},{cons,583,{atom,583,exports},{nil,583}}]},
      [{clause,584,
        [{tuple,584,
          [{atom,584,ok},
           {tuple,584,
            [{var,584,'Module'},
             {cons,584,
              {tuple,584,[{atom,584,exports},{var,584,'Exports'}]},
              {nil,584}}]}]}],
        [],
        [{'case',585,
          {var,585,'CheckOnly'},
          [{clause,586,
            [{atom,586,true}],
            [],
            [{'case',587,
              {call,587,
               {remote,587,{atom,587,lists},{atom,587,member}},
               [{tuple,587,[{atom,587,main},{integer,587,1}]},
                {var,587,'Exports'}]},
              [{clause,588,
                [{atom,588,true}],
                [],
                [{call,589,{atom,589,my_halt},[{integer,589,0}]}]},
               {clause,590,
                [{atom,590,false}],
                [],
                [{match,591,
                  {var,591,'Text'},
                  {call,591,
                   {remote,591,{atom,591,lists},{atom,591,concat}},
                   [{cons,591,
                     {string,591,"Function "},
                     {cons,591,
                      {var,591,'Module'},
                      {cons,591,
                       {string,591,":main/1 is not exported"},
                       {nil,591}}}}]}},
                 {call,592,{atom,592,fatal},[{var,592,'Text'}]}]}]}]},
           {clause,594,
            [{atom,594,false}],
            [],
            [{call,595,
              {remote,595,{atom,595,erlang},{atom,595,setelement}},
              [{integer,595,4},
               {call,595,
                {remote,595,{atom,595,erlang},{atom,595,setelement}},
                [{integer,595,3},
                 {call,595,
                  {remote,595,{atom,595,erlang},{atom,595,setelement}},
                  [{integer,595,7},
                   {call,595,
                    {remote,595,{atom,595,erlang},{atom,595,setelement}},
                    [{integer,595,5},{var,595,'S'},{atom,595,beam}]},
                   {atom,596,run}]},
                 {var,597,'Module'}]},
               {var,598,'Bin'}]}]}]}]},
       {clause,600,
        [{tuple,600,
          [{atom,600,error},{atom,600,beam_lib},{var,600,'Reason'}]}],
        [[{call,600,{atom,600,is_tuple},[{var,600,'Reason'}]}]],
        [{call,601,
          {atom,601,fatal},
          [{call,601,
            {atom,601,element},
            [{integer,601,1},{var,601,'Reason'}]}]}]}]}]}]},
 {function,604,parse_source,6,
  [{clause,604,
    [{var,604,'S'},
     {var,604,'File'},
     {var,604,'Fd'},
     {var,604,'StartLine'},
     {var,604,'HeaderSz'},
     {var,604,'CheckOnly'}],
    [],
    [{match,605,
      {tuple,605,[{var,605,'PreDefMacros'},{var,605,'Module'}]},
      {call,605,{atom,605,pre_def_macros},[{var,605,'File'}]}},
     {match,606,{var,606,'IncludePath'},{nil,606}},
     {match,608,
      {tuple,608,[{atom,608,ok},{var,608,'_'}]},
      {call,608,
       {remote,608,{atom,608,file},{atom,608,position}},
       [{var,608,'Fd'},{integer,608,0}]}},
     {match,609,
      {var,609,'_'},
      {call,609,
       {remote,609,{atom,609,io},{atom,609,get_line}},
       [{var,609,'Fd'},{atom,609,''}]}},
     {match,610,
      {var,610,'Encoding'},
      {call,610,
       {remote,610,{atom,610,epp},{atom,610,set_encoding}},
       [{var,610,'Fd'}]}},
     {match,611,
      {tuple,611,[{atom,611,ok},{var,611,'_'}]},
      {call,611,
       {remote,611,{atom,611,file},{atom,611,position}},
       [{var,611,'Fd'},{var,611,'HeaderSz'}]}},
     {'case',612,
      {call,612,
       {remote,612,{atom,612,epp},{atom,612,open}},
       [{var,612,'File'},
        {var,612,'Fd'},
        {var,612,'StartLine'},
        {var,612,'IncludePath'},
        {var,612,'PreDefMacros'}]},
      [{clause,613,
        [{tuple,613,[{atom,613,ok},{var,613,'Epp'}]}],
        [],
        [{match,614,
          {var,614,'_'},
          {lc,614,
           {call,614,
            {remote,614,{atom,614,io},{atom,614,setopts}},
            [{var,614,'Fd'},
             {cons,614,
              {tuple,614,[{atom,614,encoding},{var,614,'Encoding'}]},
              {nil,614}}]},
           [{op,615,'=/=',{var,615,'Encoding'},{atom,615,none}}]}},
         {match,616,
          {tuple,616,[{atom,616,ok},{var,616,'FileForm'}]},
          {call,616,
           {remote,616,{atom,616,epp},{atom,616,parse_erl_form}},
           [{var,616,'Epp'}]}},
         {match,617,
          {var,617,'OptModRes'},
          {call,617,
           {remote,617,{atom,617,epp},{atom,617,parse_erl_form}},
           [{var,617,'Epp'}]}},
         {match,618,
          {var,618,'S2'},
          {call,618,
           {remote,618,{atom,618,erlang},{atom,618,setelement}},
           [{integer,618,3},
            {call,618,
             {remote,618,{atom,618,erlang},{atom,618,setelement}},
             [{integer,618,5},{var,618,'S'},{atom,618,text}]},
            {var,618,'Module'}]}},
         {match,619,
          {var,619,'S3'},
          {'case',620,
           {var,620,'OptModRes'},
           [{clause,621,
             [{tuple,621,
               [{atom,621,ok},
                {match,621,
                 {tuple,621,
                  [{atom,621,attribute},
                   {var,621,'_'},
                   {atom,621,module},
                   {var,621,'M'}]},
                 {var,621,'Form'}}]}],
             [],
             [{call,622,
               {atom,622,epp_parse_file},
               [{var,622,'Epp'},
                {call,622,
                 {remote,622,{atom,622,erlang},{atom,622,setelement}},
                 [{integer,622,3},{var,622,'S2'},{var,622,'M'}]},
                {cons,622,
                 {var,622,'Form'},
                 {cons,622,{var,622,'FileForm'},{nil,622}}}]}]},
            {clause,623,
             [{tuple,623,[{atom,623,ok},{var,623,'_'}]}],
             [],
             [{match,624,
               {var,624,'ModForm'},
               {tuple,624,
                [{atom,624,attribute},
                 {call,624,{atom,624,a1},[]},
                 {atom,624,module},
                 {var,624,'Module'}]}},
              {call,625,
               {atom,625,epp_parse_file2},
               [{var,625,'Epp'},
                {var,625,'S2'},
                {cons,625,
                 {var,625,'ModForm'},
                 {cons,625,{var,625,'FileForm'},{nil,625}}},
                {var,625,'OptModRes'}]}]},
            {clause,626,
             [{tuple,626,[{atom,626,error},{var,626,'_'}]}],
             [],
             [{call,627,
               {atom,627,epp_parse_file2},
               [{var,627,'Epp'},
                {var,627,'S2'},
                {cons,627,{var,627,'FileForm'},{nil,627}},
                {var,627,'OptModRes'}]}]},
            {clause,628,
             [{tuple,628,[{atom,628,eof},{var,628,'LastLine'}]}],
             [],
             [{match,629,
               {var,629,'Anno'},
               {call,629,{atom,629,anno},[{var,629,'LastLine'}]}},
              {call,630,
               {remote,630,{atom,630,erlang},{atom,630,setelement}},
               [{integer,630,4},
                {var,630,'S'},
                {cons,630,
                 {var,630,'FileForm'},
                 {cons,630,
                  {tuple,630,[{atom,630,eof},{var,630,'Anno'}]},
                  {nil,630}}}]}]}]}},
         {match,632,
          {atom,632,ok},
          {call,632,
           {remote,632,{atom,632,epp},{atom,632,close}},
           [{var,632,'Epp'}]}},
         {match,633,
          {atom,633,ok},
          {call,633,
           {remote,633,{atom,633,file},{atom,633,close}},
           [{var,633,'Fd'}]}},
         {call,634,
          {atom,634,check_source},
          [{var,634,'S3'},{var,634,'CheckOnly'}]}]},
       {clause,635,
        [{tuple,635,[{atom,635,error},{var,635,'Reason'}]}],
        [],
        [{call,636,
          {remote,636,{atom,636,io},{atom,636,format}},
          [{string,636,"escript: ~tp\n"},
           {cons,636,{var,636,'Reason'},{nil,636}}]},
         {call,637,
          {atom,637,fatal},
          [{string,637,"Preprocessor error"}]}]}]}]}]},
 {function,640,check_source,2,
  [{clause,640,
    [{var,640,'S'},{var,640,'CheckOnly'}],
    [],
    [{'case',641,
      {var,641,'S'},
      [{clause,642,
        [{tuple,642,
          [{atom,642,state},
           {var,642,'_'},
           {var,642,'_'},
           {var,642,'_'},
           {var,642,'_'},
           {var,642,'Nerrs'},
           {var,642,'_'},
           {var,642,'_'},
           {var,642,'_'}]}],
        [[{op,642,'=/=',{var,642,'Nerrs'},{integer,642,0}}]],
        [{call,643,
          {atom,643,fatal},
          [{string,643,"There were compilation errors."}]}]},
       {clause,644,
        [{tuple,644,
          [{atom,644,state},
           {var,644,'_'},
           {var,644,'_'},
           {cons,645,
            {var,645,'FileForm2'},
            {cons,645,{var,645,'ModForm2'},{var,645,'Forms'}}},
           {var,644,'_'},
           {var,644,'_'},
           {var,644,'_'},
           {var,644,'ExpMain'},
           {var,644,'_'}]}],
        [],
        [{match,647,
          {var,647,'Forms2'},
          {'case',648,
           {var,648,'ExpMain'},
           [{clause,649,
             [{atom,649,false}],
             [],
             [{cons,649,
               {tuple,649,
                [{atom,649,attribute},
                 {call,649,{atom,649,a0},[]},
                 {atom,649,export},
                 {cons,649,
                  {tuple,649,[{atom,649,main},{integer,649,1}]},
                  {nil,649}}]},
               {var,649,'Forms'}}]},
            {clause,650,[{atom,650,true}],[],[{var,650,'Forms'}]}]}},
         {match,652,
          {var,652,'Forms3'},
          {cons,652,
           {var,652,'FileForm2'},
           {cons,652,{var,652,'ModForm2'},{var,652,'Forms2'}}}},
         {'case',653,
          {var,653,'CheckOnly'},
          [{clause,654,
            [{atom,654,true}],
            [],
            [{'case',656,
              {call,656,
               {remote,656,{atom,656,compile},{atom,656,forms}},
               [{var,656,'Forms3'},
                {cons,656,
                 {atom,656,report},
                 {cons,656,{atom,656,strong_validation},{nil,656}}}]},
              [{clause,657,
                [{tuple,657,[{atom,657,ok},{var,657,'_'}]}],
                [],
                [{call,658,{atom,658,my_halt},[{integer,658,0}]}]},
               {clause,659,
                [{var,659,'_Other'}],
                [],
                [{call,660,
                  {atom,660,fatal},
                  [{string,660,"There were compilation errors."}]}]}]}]},
           {clause,662,
            [{atom,662,false}],
            [],
            [{call,663,
              {remote,663,{atom,663,erlang},{atom,663,setelement}},
              [{integer,663,4},{var,663,'S'},{var,663,'Forms3'}]}]}]}]}]}]}]},
 {function,667,pre_def_macros,1,
  [{clause,667,
    [{var,667,'File'}],
    [],
    [{match,668,
      {tuple,668,
       [{var,668,'MegaSecs'},{var,668,'Secs'},{var,668,'MicroSecs'}]},
      {call,668,{remote,668,{atom,668,erlang},{atom,668,timestamp}},[]}},
     {match,669,
      {var,669,'Unique'},
      {call,669,
       {remote,669,{atom,669,erlang},{atom,669,unique_integer}},
       [{cons,669,{atom,669,positive},{nil,669}}]}},
     {match,670,
      {var,670,'Replace'},
      {'fun',670,
       {clauses,
        [{clause,670,
          [{var,670,'Char'}],
          [],
          [{'case',671,
            {var,671,'Char'},
            [{clause,672,[{char,672,46}],[],[{char,672,95}]},
             {clause,673,[{var,673,'_'}],[],[{var,673,'Char'}]}]}]}]}}},
     {match,676,
      {var,676,'CleanBase'},
      {call,676,
       {remote,676,{atom,676,lists},{atom,676,map}},
       [{var,676,'Replace'},
        {call,676,
         {remote,676,{atom,676,filename},{atom,676,basename}},
         [{var,676,'File'}]}]}},
     {match,677,
      {var,677,'ModuleStr'},
      {op,678,'++',
       {var,678,'CleanBase'},
       {op,678,'++',
        {string,678,"__"},
        {op,679,'++',
         {string,679,"escript__"},
         {op,680,'++',
          {call,680,{atom,680,integer_to_list},[{var,680,'MegaSecs'}]},
          {op,680,'++',
           {string,680,"__"},
           {op,681,'++',
            {call,681,{atom,681,integer_to_list},[{var,681,'Secs'}]},
            {op,681,'++',
             {string,681,"__"},
             {op,682,'++',
              {call,682,{atom,682,integer_to_list},[{var,682,'MicroSecs'}]},
              {op,682,'++',
               {string,682,"__"},
               {call,683,
                {atom,683,integer_to_list},
                [{var,683,'Unique'}]}}}}}}}}}}},
     {match,684,
      {var,684,'Module'},
      {call,684,{atom,684,list_to_atom},[{var,684,'ModuleStr'}]}},
     {match,685,
      {var,685,'PreDefMacros'},
      {cons,685,
       {tuple,685,
        [{atom,685,'MODULE'},{var,685,'Module'},{atom,685,redefine}]},
       {cons,686,
        {tuple,686,
         [{atom,686,'MODULE_STRING'},
          {var,686,'ModuleStr'},
          {atom,686,redefine}]},
        {nil,686}}}},
     {tuple,687,[{var,687,'PreDefMacros'},{var,687,'Module'}]}]}]},
 {function,689,epp_parse_file,3,
  [{clause,689,
    [{var,689,'Epp'},{var,689,'S'},{var,689,'Forms'}],
    [],
    [{match,690,
      {var,690,'Parsed'},
      {call,690,
       {remote,690,{atom,690,epp},{atom,690,parse_erl_form}},
       [{var,690,'Epp'}]}},
     {call,691,
      {atom,691,epp_parse_file2},
      [{var,691,'Epp'},
       {var,691,'S'},
       {var,691,'Forms'},
       {var,691,'Parsed'}]}]}]},
 {function,693,epp_parse_file2,4,
  [{clause,693,
    [{var,693,'Epp'},{var,693,'S'},{var,693,'Forms'},{var,693,'Parsed'}],
    [],
    [{'case',695,
      {var,695,'Parsed'},
      [{clause,696,
        [{tuple,696,[{atom,696,ok},{var,696,'Form'}]}],
        [],
        [{'case',697,
          {var,697,'Form'},
          [{clause,698,
            [{tuple,698,
              [{atom,698,attribute},
               {var,698,'_'},
               {atom,698,record},
               {var,698,'_'}]}],
            [],
            [{match,699,
              {var,699,'S2'},
              {call,699,
               {remote,699,{atom,699,erlang},{atom,699,setelement}},
               [{integer,699,9},{var,699,'S'},{atom,699,true}]}},
             {call,700,
              {atom,700,epp_parse_file},
              [{var,700,'Epp'},
               {var,700,'S2'},
               {cons,700,{var,700,'Form'},{var,700,'Forms'}}]}]},
           {clause,701,
            [{tuple,701,
              [{atom,701,attribute},
               {var,701,'Ln'},
               {atom,701,mode},
               {var,701,'NewMode'}]}],
            [],
            [{match,702,
              {var,702,'S2'},
              {call,702,
               {remote,702,{atom,702,erlang},{atom,702,setelement}},
               [{integer,702,7},{var,702,'S'},{var,702,'NewMode'}]}},
             {'if',703,
              [{clause,704,[],
                [[{op,704,'=:=',{var,704,'NewMode'},{atom,704,compile}}],
                 [{op,704,'=:=',{var,704,'NewMode'},{atom,704,interpret}}],
                 [{op,704,'=:=',{var,704,'NewMode'},{atom,704,debug}}],
                 [{op,704,'=:=',{var,704,'NewMode'},{atom,704,native}}]],
                [{call,705,
                  {atom,705,epp_parse_file},
                  [{var,705,'Epp'},
                   {var,705,'S2'},
                   {cons,705,{var,705,'Form'},{var,705,'Forms'}}]}]},
               {clause,706,[],
                [[{atom,706,true}]],
                [{match,707,
                  {var,707,'Args'},
                  {call,707,
                   {remote,707,{atom,707,lists},{atom,707,flatten}},
                   [{call,707,
                     {remote,707,{atom,707,io_lib},{atom,707,format}},
                     [{string,707,"illegal mode attribute: ~p"},
                      {cons,707,{var,707,'NewMode'},{nil,707}}]}]}},
                 {call,708,
                  {remote,708,{atom,708,io},{atom,708,format}},
                  [{string,708,"~ts:~w ~s\n"},
                   {cons,708,
                    {call,708,
                     {remote,708,{atom,708,erlang},{atom,708,element}},
                     [{integer,708,2},{var,708,'S'}]},
                    {cons,708,
                     {var,708,'Ln'},
                     {cons,708,{var,708,'Args'},{nil,708}}}}]},
                 {match,709,
                  {var,709,'Error'},
                  {tuple,709,
                   [{atom,709,error},
                    {tuple,709,
                     [{var,709,'Ln'},
                      {atom,709,erl_parse},
                      {var,709,'Args'}]}]}},
                 {match,710,
                  {var,710,'Nerrs'},
                  {op,710,'+',
                   {call,710,
                    {remote,710,{atom,710,erlang},{atom,710,element}},
                    [{integer,710,6},{var,710,'S'}]},
                   {integer,710,1}}},
                 {call,711,
                  {atom,711,epp_parse_file},
                  [{var,711,'Epp'},
                   {call,711,
                    {remote,711,{atom,711,erlang},{atom,711,setelement}},
                    [{integer,711,6},{var,711,'S2'},{var,711,'Nerrs'}]},
                   {cons,711,{var,711,'Error'},{var,711,'Forms'}}]}]}]}]},
           {clause,713,
            [{tuple,713,
              [{atom,713,attribute},
               {var,713,'_'},
               {atom,713,export},
               {var,713,'Fs'}]}],
            [],
            [{'case',714,
              {call,714,
               {remote,714,{atom,714,lists},{atom,714,member}},
               [{tuple,714,[{atom,714,main},{integer,714,1}]},{var,714,'Fs'}]},
              [{clause,715,
                [{atom,715,false}],
                [],
                [{call,716,
                  {atom,716,epp_parse_file},
                  [{var,716,'Epp'},
                   {var,716,'S'},
                   {cons,716,{var,716,'Form'},{var,716,'Forms'}}]}]},
               {clause,717,
                [{atom,717,true}],
                [],
                [{call,718,
                  {atom,718,epp_parse_file},
                  [{var,718,'Epp'},
                   {call,718,
                    {remote,718,{atom,718,erlang},{atom,718,setelement}},
                    [{integer,718,8},{var,718,'S'},{atom,718,true}]},
                   {cons,718,{var,718,'Form'},{var,718,'Forms'}}]}]}]}]},
           {clause,720,
            [{var,720,'_'}],
            [],
            [{call,721,
              {atom,721,epp_parse_file},
              [{var,721,'Epp'},
               {var,721,'S'},
               {cons,721,{var,721,'Form'},{var,721,'Forms'}}]}]}]}]},
       {clause,723,
        [{match,723,
          {tuple,723,
           [{atom,723,error},
            {tuple,723,[{var,723,'Ln'},{var,723,'Mod'},{var,723,'Args'}]}]},
          {var,723,'Form'}}],
        [],
        [{call,724,
          {remote,724,{atom,724,io},{atom,724,format}},
          [{string,724,"~ts:~w: ~ts\n"},
           {cons,725,
            {call,725,
             {remote,725,{atom,725,erlang},{atom,725,element}},
             [{integer,725,2},{var,725,'S'}]},
            {cons,725,
             {var,725,'Ln'},
             {cons,725,
              {call,725,
               {remote,725,{var,725,'Mod'},{atom,725,format_error}},
               [{var,725,'Args'}]},
              {nil,725}}}}]},
         {call,726,
          {atom,726,epp_parse_file},
          [{var,726,'Epp'},
           {call,726,
            {remote,726,{atom,726,erlang},{atom,726,setelement}},
            [{integer,726,6},
             {var,726,'S'},
             {op,726,'+',
              {call,726,
               {remote,726,{atom,726,erlang},{atom,726,element}},
               [{integer,726,6},{var,726,'S'}]},
              {integer,726,1}}]},
           {cons,726,{var,726,'Form'},{var,726,'Forms'}}]}]},
       {clause,727,
        [{tuple,727,[{atom,727,eof},{var,727,'LastLine'}]}],
        [],
        [{match,728,
          {var,728,'Anno'},
          {call,728,{atom,728,anno},[{var,728,'LastLine'}]}},
         {call,729,
          {remote,729,{atom,729,erlang},{atom,729,setelement}},
          [{integer,729,4},
           {var,729,'S'},
           {call,729,
            {remote,729,{atom,729,lists},{atom,729,reverse}},
            [{cons,729,
              {tuple,729,[{atom,729,eof},{var,729,'Anno'}]},
              {var,729,'Forms'}}]}]}]}]}]}]},
 {function,738,debug,3,
  [{clause,738,
    [{var,738,'Module'},{var,738,'AbsMod'},{var,738,'Args'}],
    [],
    [{'case',739,
      {call,739,
       {atom,739,hidden_apply},
       [{atom,739,debugger},{atom,739,debugger},{atom,739,start},{nil,739}]},
      [{clause,740,
        [{tuple,740,[{atom,740,ok},{var,740,'_'}]}],
        [],
        [{'case',741,
          {call,741,
           {atom,741,hidden_apply},
           [{atom,741,debugger},
            {atom,741,int},
            {atom,741,i},
            {cons,741,{var,741,'AbsMod'},{nil,741}}]},
          [{clause,742,
            [{tuple,742,[{atom,742,module},{var,742,'_'}]}],
            [],
            [{call,743,
              {atom,743,hidden_apply},
              [{atom,743,debugger},
               {atom,743,debugger},
               {atom,743,auto_attach},
               {cons,743,{cons,743,{atom,743,init},{nil,743}},{nil,743}}]},
             {call,744,{atom,744,run},[{var,744,'Module'},{var,744,'Args'}]}]},
           {clause,745,
            [{atom,745,error}],
            [],
            [{match,746,
              {var,746,'Text'},
              {call,746,
               {remote,746,{atom,746,lists},{atom,746,concat}},
               [{cons,746,
                 {string,746,"Cannot load the code for "},
                 {cons,746,
                  {var,746,'Module'},
                  {cons,746,{string,746," into the debugger"},{nil,746}}}}]}},
             {call,747,{atom,747,fatal},[{var,747,'Text'}]}]}]}]},
       {clause,749,
        [{var,749,'_'}],
        [],
        [{call,750,
          {atom,750,fatal},
          [{string,750,"Cannot start the debugger"}]}]}]}]}]},
 {function,755,run,2,
  [{clause,755,
    [{var,755,'Module'},{var,755,'Args'}],
    [],
    [{'try',756,
      [{call,757,
        {remote,757,{var,757,'Module'},{atom,757,main}},
        [{var,757,'Args'}]},
       {call,758,{atom,758,my_halt},[{integer,758,0}]}],
      [],
      [{clause,760,
        [{tuple,760,[{var,760,'Class'},{var,760,'Reason'},{var,760,'_'}]}],
        [],
        [{call,761,
          {atom,761,fatal},
          [{call,761,
            {atom,761,format_exception},
            [{var,761,'Class'},{var,761,'Reason'}]}]}]}],
      []}]}]},
 {function,766,interpret,4,
  [{clause,766,
    [{var,766,'Forms'},{var,766,'HasRecs'},{var,766,'File'},{var,766,'Args'}],
    [],
    [{'case',768,
      {call,768,
       {remote,768,{atom,768,erl_lint},{atom,768,module}},
       [{var,768,'Forms'}]},
      [{clause,769,
        [{tuple,769,[{atom,769,ok},{var,769,'Ws'}]}],
        [],
        [{call,770,{atom,770,report_warnings},[{var,770,'Ws'}]}]},
       {clause,771,
        [{tuple,771,[{atom,771,error},{var,771,'Es'},{var,771,'Ws'}]}],
        [],
        [{call,772,{atom,772,report_errors},[{var,772,'Es'}]},
         {call,773,{atom,773,report_warnings},[{var,773,'Ws'}]},
         {call,774,
          {atom,774,fatal},
          [{string,774,"There were compilation errors."}]}]}]},
     {match,777,
      {var,777,'Forms2'},
      {'case',778,
       {var,778,'HasRecs'},
       [{clause,779,[{atom,779,false}],[],[{var,779,'Forms'}]},
        {clause,780,
         [{atom,780,true}],
         [],
         [{call,780,
           {remote,780,{atom,780,erl_expand_records},{atom,780,module}},
           [{var,780,'Forms'},{nil,780}]}]}]}},
     {match,782,
      {var,782,'Dict'},
      {call,782,{atom,782,parse_to_dict},[{var,782,'Forms2'}]}},
     {match,783,
      {var,783,'ArgsA'},
      {call,783,
       {remote,783,{atom,783,erl_parse},{atom,783,abstract}},
       [{var,783,'Args'},{integer,783,0}]}},
     {match,784,{var,784,'Anno'},{call,784,{atom,784,a0},[]}},
     {match,785,
      {var,785,'Call'},
      {tuple,785,
       [{atom,785,call},
        {var,785,'Anno'},
        {tuple,785,[{atom,785,atom},{var,785,'Anno'},{atom,785,main}]},
        {cons,785,{var,785,'ArgsA'},{nil,785}}]}},
     {'try',786,
      [{match,787,
        {var,787,'_'},
        {call,787,
         {remote,787,{atom,787,erl_eval},{atom,787,expr}},
         [{var,787,'Call'},
          {call,788,
           {remote,788,{atom,788,erl_eval},{atom,788,new_bindings}},
           []},
          {tuple,789,
           [{atom,789,value},
            {'fun',789,
             {clauses,
              [{clause,789,
                [{var,789,'I'},{var,789,'J'}],
                [],
                [{call,790,
                  {atom,790,code_handler},
                  [{var,790,'I'},
                   {var,790,'J'},
                   {var,790,'Dict'},
                   {var,790,'File'}]}]}]}}]}]}},
       {call,792,{atom,792,my_halt},[{integer,792,0}]}],
      [],
      [{clause,794,
        [{tuple,794,[{var,794,'Class'},{var,794,'Reason'},{var,794,'_'}]}],
        [],
        [{call,795,
          {atom,795,fatal},
          [{call,795,
            {atom,795,format_exception},
            [{var,795,'Class'},{var,795,'Reason'}]}]}]}],
      []}]}]},
 {function,798,report_errors,1,
  [{clause,798,
    [{var,798,'Errors'}],
    [],
    [{call,799,
      {remote,799,{atom,799,lists},{atom,799,foreach}},
      [{'fun',799,
        {clauses,
         [{clause,799,
           [{tuple,799,
             [{tuple,799,[{var,799,'F'},{var,799,'_L'}]},{var,799,'Eds'}]}],
           [],
           [{call,799,
             {atom,799,list_errors},
             [{var,799,'F'},{var,799,'Eds'}]}]},
          {clause,800,
           [{tuple,800,[{var,800,'F'},{var,800,'Eds'}]}],
           [],
           [{call,800,
             {atom,800,list_errors},
             [{var,800,'F'},{var,800,'Eds'}]}]}]}},
       {var,801,'Errors'}]}]}]},
 {function,803,list_errors,2,
  [{clause,803,
    [{var,803,'F'},
     {cons,803,
      {tuple,803,[{var,803,'Line'},{var,803,'Mod'},{var,803,'E'}]},
      {var,803,'Es'}}],
    [],
    [{call,804,
      {remote,804,{atom,804,io},{atom,804,fwrite}},
      [{string,804,"~ts:~w: ~ts\n"},
       {cons,804,
        {var,804,'F'},
        {cons,804,
         {var,804,'Line'},
         {cons,804,
          {call,804,
           {remote,804,{var,804,'Mod'},{atom,804,format_error}},
           [{var,804,'E'}]},
          {nil,804}}}}]},
     {call,805,{atom,805,list_errors},[{var,805,'F'},{var,805,'Es'}]}]},
   {clause,806,
    [{var,806,'F'},
     {cons,806,{tuple,806,[{var,806,'Mod'},{var,806,'E'}]},{var,806,'Es'}}],
    [],
    [{call,807,
      {remote,807,{atom,807,io},{atom,807,fwrite}},
      [{string,807,"~ts: ~ts\n"},
       {cons,807,
        {var,807,'F'},
        {cons,807,
         {call,807,
          {remote,807,{var,807,'Mod'},{atom,807,format_error}},
          [{var,807,'E'}]},
         {nil,807}}}]},
     {call,808,{atom,808,list_errors},[{var,808,'F'},{var,808,'Es'}]}]},
   {clause,809,[{var,809,'_F'},{nil,809}],[],[{atom,809,ok}]}]},
 {function,811,report_warnings,1,
  [{clause,811,
    [{var,811,'Ws0'}],
    [],
    [{match,812,
      {var,812,'Ws1'},
      {call,812,
       {remote,812,{atom,812,lists},{atom,812,flatmap}},
       [{'fun',812,
         {clauses,
          [{clause,812,
            [{tuple,812,
              [{tuple,812,[{var,812,'F'},{var,812,'_L'}]},{var,812,'Eds'}]}],
            [],
            [{call,812,
              {atom,812,format_message},
              [{var,812,'F'},{var,812,'Eds'}]}]},
           {clause,813,
            [{tuple,813,[{var,813,'F'},{var,813,'Eds'}]}],
            [],
            [{call,813,
              {atom,813,format_message},
              [{var,813,'F'},{var,813,'Eds'}]}]}]}},
        {var,814,'Ws0'}]}},
     {match,815,
      {var,815,'Ws'},
      {call,815,
       {remote,815,{atom,815,ordsets},{atom,815,from_list}},
       [{var,815,'Ws1'}]}},
     {call,816,
      {remote,816,{atom,816,lists},{atom,816,foreach}},
      [{'fun',816,
        {clauses,
         [{clause,816,
           [{tuple,816,[{var,816,'_'},{var,816,'Str'}]}],
           [],
           [{call,816,
             {remote,816,{atom,816,io},{atom,816,put_chars}},
             [{var,816,'Str'}]}]}]}},
       {var,816,'Ws'}]}]}]},
 {function,818,format_message,2,
  [{clause,818,
    [{var,818,'F'},
     {cons,818,
      {tuple,818,[{var,818,'Line'},{var,818,'Mod'},{var,818,'E'}]},
      {var,818,'Es'}}],
    [],
    [{match,819,
      {var,819,'M'},
      {tuple,819,
       [{tuple,819,[{var,819,'F'},{var,819,'Line'}]},
        {call,819,
         {remote,819,{atom,819,io_lib},{atom,819,format}},
         [{string,819,"~ts:~w: Warning: ~ts\n"},
          {cons,819,
           {var,819,'F'},
           {cons,819,
            {var,819,'Line'},
            {cons,819,
             {call,819,
              {remote,819,{var,819,'Mod'},{atom,819,format_error}},
              [{var,819,'E'}]},
             {nil,819}}}}]}]}},
     {cons,820,
      {var,820,'M'},
      {call,820,{atom,820,format_message},[{var,820,'F'},{var,820,'Es'}]}}]},
   {clause,821,
    [{var,821,'F'},
     {cons,821,{tuple,821,[{var,821,'Mod'},{var,821,'E'}]},{var,821,'Es'}}],
    [],
    [{match,822,
      {var,822,'M'},
      {tuple,822,
       [{atom,822,none},
        {call,822,
         {remote,822,{atom,822,io_lib},{atom,822,format}},
         [{string,822,"~ts: Warning: ~ts\n"},
          {cons,822,
           {var,822,'F'},
           {cons,822,
            {call,822,
             {remote,822,{var,822,'Mod'},{atom,822,format_error}},
             [{var,822,'E'}]},
            {nil,822}}}]}]}},
     {cons,823,
      {var,823,'M'},
      {call,823,{atom,823,format_message},[{var,823,'F'},{var,823,'Es'}]}}]},
   {clause,824,[{var,824,'_'},{nil,824}],[],[{nil,824}]}]},
 {function,826,parse_to_dict,1,
  [{clause,826,
    [{var,826,'L'}],
    [],
    [{call,826,
      {atom,826,parse_to_dict},
      [{var,826,'L'},
       {call,826,{remote,826,{atom,826,dict},{atom,826,new}},[]}]}]}]},
 {function,828,parse_to_dict,2,
  [{clause,828,
    [{cons,828,
      {tuple,828,
       [{atom,828,function},
        {var,828,'_'},
        {var,828,'Name'},
        {var,828,'Arity'},
        {var,828,'Clauses'}]},
      {var,828,'T'}},
     {var,828,'Dict0'}],
    [],
    [{match,829,
      {var,829,'Dict'},
      {call,829,
       {remote,829,{atom,829,dict},{atom,829,store}},
       [{tuple,829,[{atom,829,local},{var,829,'Name'},{var,829,'Arity'}]},
        {var,829,'Clauses'},
        {var,829,'Dict0'}]}},
     {call,830,{atom,830,parse_to_dict},[{var,830,'T'},{var,830,'Dict'}]}]},
   {clause,831,
    [{cons,831,
      {tuple,831,
       [{atom,831,attribute},
        {var,831,'_'},
        {atom,831,import},
        {tuple,831,[{var,831,'Mod'},{var,831,'Funcs'}]}]},
      {var,831,'T'}},
     {var,831,'Dict0'}],
    [],
    [{match,832,
      {var,832,'Dict'},
      {call,832,
       {remote,832,{atom,832,lists},{atom,832,foldl}},
       [{'fun',832,
         {clauses,
          [{clause,832,
            [{var,832,'I'},{var,832,'D'}],
            [],
            [{call,833,
              {remote,833,{atom,833,dict},{atom,833,store}},
              [{tuple,833,[{atom,833,remote},{var,833,'I'}]},
               {var,833,'Mod'},
               {var,833,'D'}]}]}]}},
        {var,834,'Dict0'},
        {var,834,'Funcs'}]}},
     {call,835,{atom,835,parse_to_dict},[{var,835,'T'},{var,835,'Dict'}]}]},
   {clause,836,
    [{cons,836,{var,836,'_'},{var,836,'T'}},{var,836,'Dict'}],
    [],
    [{call,837,{atom,837,parse_to_dict},[{var,837,'T'},{var,837,'Dict'}]}]},
   {clause,838,[{nil,838},{var,838,'Dict'}],[],[{var,839,'Dict'}]}]},
 {function,841,code_handler,4,
  [{clause,841,
    [{atom,841,local},
     {cons,841,{atom,841,file},{nil,841}},
     {var,841,'_'},
     {var,841,'File'}],
    [],
    [{var,842,'File'}]},
   {clause,843,
    [{var,843,'Name'},{var,843,'Args'},{var,843,'Dict'},{var,843,'File'}],
    [],
    [{match,845,
      {var,845,'Arity'},
      {call,845,{atom,845,length},[{var,845,'Args'}]}},
     {'case',846,
      {call,846,
       {remote,846,{atom,846,dict},{atom,846,find}},
       [{tuple,846,[{atom,846,local},{var,846,'Name'},{var,846,'Arity'}]},
        {var,846,'Dict'}]},
      [{clause,847,
        [{tuple,847,[{atom,847,ok},{var,847,'Cs'}]}],
        [],
        [{match,848,
          {var,848,'LF'},
          {tuple,848,
           [{atom,848,value},
            {'fun',848,
             {clauses,
              [{clause,848,
                [{var,848,'I'},{var,848,'J'}],
                [],
                [{call,848,
                  {atom,848,code_handler},
                  [{var,848,'I'},
                   {var,848,'J'},
                   {var,848,'Dict'},
                   {var,848,'File'}]}]}]}}]}},
         {'case',849,
          {call,849,
           {remote,849,{atom,849,erl_eval},{atom,849,match_clause}},
           [{var,849,'Cs'},
            {var,849,'Args'},
            {call,849,
             {remote,849,{atom,849,erl_eval},{atom,849,new_bindings}},
             []},
            {var,849,'LF'}]},
          [{clause,850,
            [{tuple,850,[{var,850,'Body'},{var,850,'Bs'}]}],
            [],
            [{call,851,
              {atom,851,eval_exprs},
              [{var,851,'Body'},
               {var,851,'Bs'},
               {var,851,'LF'},
               {atom,851,none},
               {atom,851,none}]}]},
           {clause,852,
            [{atom,852,nomatch}],
            [],
            [{call,853,
              {remote,853,{atom,853,erlang},{atom,853,error}},
              [{tuple,853,
                [{atom,853,function_clause},
                 {cons,853,
                  {tuple,853,
                   [{atom,853,local},{var,853,'Name'},{var,853,'Args'}]},
                  {nil,853}}]}]}]}]}]},
       {clause,855,
        [{atom,855,error}],
        [],
        [{'case',856,
          {call,856,
           {remote,856,{atom,856,dict},{atom,856,find}},
           [{tuple,856,
             [{atom,856,remote},
              {tuple,856,[{var,856,'Name'},{var,856,'Arity'}]}]},
            {var,856,'Dict'}]},
          [{clause,857,
            [{tuple,857,[{atom,857,ok},{var,857,'Mod'}]}],
            [],
            [{call,859,
              {atom,859,apply},
              [{var,859,'Mod'},{var,859,'Name'},{var,859,'Args'}]}]},
           {clause,860,
            [{atom,860,error}],
            [],
            [{call,861,
              {remote,861,{atom,861,io},{atom,861,format}},
              [{string,861,"Script does not export ~w/~w\n"},
               {cons,861,
                {var,861,'Name'},
                {cons,861,{var,861,'Arity'},{nil,861}}}]},
             {call,862,{atom,862,my_halt},[{integer,862,127}]}]}]}]}]}]}]},
 {function,866,eval_exprs,5,
  [{clause,866,
    [{cons,866,{var,866,'E'},{nil,866}},
     {var,866,'Bs0'},
     {var,866,'Lf'},
     {var,866,'Ef'},
     {var,866,'_RBs'}],
    [],
    [{match,867,{var,867,'RBs1'},{atom,867,value}},
     {call,868,
      {remote,868,{atom,868,erl_eval},{atom,868,expr}},
      [{var,868,'E'},
       {var,868,'Bs0'},
       {var,868,'Lf'},
       {var,868,'Ef'},
       {var,868,'RBs1'}]}]},
   {clause,869,
    [{cons,869,{var,869,'E'},{var,869,'Es'}},
     {var,869,'Bs0'},
     {var,869,'Lf'},
     {var,869,'Ef'},
     {var,869,'RBs'}],
    [],
    [{match,870,{var,870,'RBs1'},{atom,870,none}},
     {match,871,
      {tuple,871,[{atom,871,value},{var,871,'_V'},{var,871,'Bs'}]},
      {call,871,
       {remote,871,{atom,871,erl_eval},{atom,871,expr}},
       [{var,871,'E'},
        {var,871,'Bs0'},
        {var,871,'Lf'},
        {var,871,'Ef'},
        {var,871,'RBs1'}]}},
     {call,872,
      {atom,872,eval_exprs},
      [{var,872,'Es'},
       {var,872,'Bs'},
       {var,872,'Lf'},
       {var,872,'Ef'},
       {var,872,'RBs'}]}]}]},
 {function,874,format_exception,2,
  [{clause,874,
    [{var,874,'Class'},{var,874,'Reason'}],
    [],
    [{match,875,{var,875,'Enc'},{call,875,{atom,875,encoding},[]}},
     {match,876,
      {var,876,'P'},
      {'case',876,
       {var,876,'Enc'},
       [{clause,877,[{atom,877,latin1}],[],[{string,877,"P"}]},
        {clause,878,[{var,878,'_'}],[],[{string,878,"tP"}]}]}},
     {match,880,
      {var,880,'PF'},
      {'fun',880,
       {clauses,
        [{clause,880,
          [{var,880,'Term'},{var,880,'I'}],
          [],
          [{call,881,
            {remote,881,{atom,881,io_lib},{atom,881,format}},
            [{op,881,'++',
              {string,881,"~."},
              {op,881,'++',
               {call,881,{atom,881,integer_to_list},[{var,881,'I'}]},
               {var,881,'P'}}},
             {cons,881,
              {var,881,'Term'},
              {cons,881,{integer,881,50},{nil,881}}}]}]}]}}},
     {match,883,
      {var,883,'StackTrace'},
      {call,883,{remote,883,{atom,883,erlang},{atom,883,get_stacktrace}},[]}},
     {match,884,
      {var,884,'StackFun'},
      {'fun',884,
       {clauses,
        [{clause,884,
          [{var,884,'M'},{var,884,'_F'},{var,884,'_A'}],
          [],
          [{op,884,'or',
            {op,884,'=:=',{var,884,'M'},{atom,884,erl_eval}},
            {op,884,'=:=',{var,884,'M'},{atom,-1,escript}}}]}]}}},
     {call,885,
      {remote,885,{atom,885,lib},{atom,885,format_exception}},
      [{integer,885,1},
       {var,885,'Class'},
       {var,885,'Reason'},
       {var,885,'StackTrace'},
       {var,885,'StackFun'},
       {var,885,'PF'},
       {var,885,'Enc'}]}]}]},
 {function,887,encoding,0,
  [{clause,887,[],[],
    [{match,888,
      {cons,888,
       {tuple,888,[{atom,888,encoding},{var,888,'Encoding'}]},
       {nil,888}},
      {call,888,{atom,888,enc},[]}},
     {var,889,'Encoding'}]}]},
 {function,891,enc,0,
  [{clause,891,[],[],
    [{'case',892,
      {call,892,
       {remote,892,{atom,892,lists},{atom,892,keyfind}},
       [{atom,892,encoding},
        {integer,892,1},
        {call,892,{remote,892,{atom,892,io},{atom,892,getopts}},[]}]},
      [{clause,893,
        [{atom,893,false}],
        [],
        [{cons,893,
          {tuple,893,[{atom,893,encoding},{atom,893,latin1}]},
          {nil,893}}]},
       {clause,894,
        [{var,894,'Enc'}],
        [],
        [{cons,894,{var,894,'Enc'},{nil,894}}]}]}]}]},
 {function,897,a0,0,
  [{clause,897,[],[],[{call,898,{atom,898,anno},[{integer,898,0}]}]}]},
 {function,900,a1,0,
  [{clause,900,[],[],[{call,901,{atom,901,anno},[{integer,901,1}]}]}]},
 {function,903,anno,1,
  [{clause,903,
    [{var,903,'L'}],
    [],
    [{call,904,
      {remote,904,{atom,904,erl_anno},{atom,904,new}},
      [{var,904,'L'}]}]}]},
 {function,906,fatal,1,
  [{clause,906,
    [{var,906,'Str'}],
    [],
    [{call,907,{atom,907,throw},[{var,907,'Str'}]}]}]},
 {function,909,my_halt,1,
  [{clause,909,
    [{var,909,'Reason'}],
    [],
    [{call,910,
      {remote,910,{atom,910,erlang},{atom,910,halt}},
      [{var,910,'Reason'}]}]}]},
 {function,912,hidden_apply,4,
  [{clause,912,
    [{var,912,'App'},{var,912,'M'},{var,912,'F'},{var,912,'Args'}],
    [],
    [{'try',913,
      [{call,914,
        {atom,914,apply},
        [{call,914,
          {'fun',914,{clauses,[{clause,914,[],[],[{var,914,'M'}]}]}},
          []},
         {var,914,'F'},
         {var,914,'Args'}]}],
      [],
      [{clause,916,
        [{tuple,916,[{atom,916,error},{atom,916,undef},{var,916,'_'}]}],
        [],
        [{'case',917,
          {call,917,
           {remote,917,{atom,917,erlang},{atom,917,get_stacktrace}},
           []},
          [{clause,918,
            [{cons,918,
              {tuple,918,
               [{var,918,'M'},{var,918,'F'},{var,918,'Args'},{var,918,'_'}]},
              {var,918,'_'}}],
            [],
            [{match,919,
              {var,919,'Arity'},
              {call,919,{atom,919,length},[{var,919,'Args'}]}},
             {match,920,
              {var,920,'Text'},
              {call,920,
               {remote,920,{atom,920,io_lib},{atom,920,format}},
               [{string,920,"Call to ~w:~w/~w in application ~w failed.\n"},
                {cons,921,
                 {var,921,'M'},
                 {cons,921,
                  {var,921,'F'},
                  {cons,921,
                   {var,921,'Arity'},
                   {cons,921,{var,921,'App'},{nil,921}}}}}]}},
             {call,922,{atom,922,fatal},[{var,922,'Text'}]}]},
           {clause,923,
            [{var,923,'Stk'}],
            [],
            [{call,924,
              {remote,924,{atom,924,erlang},{atom,924,raise}},
              [{atom,924,error},{atom,924,undef},{var,924,'Stk'}]}]}]}]}],
      []}]}]}]
