error_handler
[]
[]
[{function,40,undefined_function,3,
  [{clause,40,
    [{var,40,'Module'},{var,40,'Func'},{var,40,'Args'}],
    [],
    [{'case',41,
      {call,41,{atom,41,ensure_loaded},[{var,41,'Module'}]},
      [{clause,42,
        [{tuple,42,[{atom,42,module},{var,42,'Module'}]}],
        [],
        [{'case',43,
          {call,43,
           {remote,43,{atom,43,erlang},{atom,43,function_exported}},
           [{var,43,'Module'},
            {var,43,'Func'},
            {call,43,{atom,43,length},[{var,43,'Args'}]}]},
          [{clause,44,
            [{atom,44,true}],
            [],
            [{call,45,
              {atom,45,apply},
              [{var,45,'Module'},{var,45,'Func'},{var,45,'Args'}]}]},
           {clause,46,
            [{atom,46,false}],
            [],
            [{call,47,
              {atom,47,call_undefined_function_handler},
              [{var,47,'Module'},{var,47,'Func'},{var,47,'Args'}]}]}]}]},
       {clause,49,
        [{tuple,49,[{atom,49,module},{var,49,'_'}]}],
        [],
        [{call,50,
          {atom,50,crash},
          [{var,50,'Module'},{var,50,'Func'},{var,50,'Args'}]}]},
       {clause,51,
        [{var,51,'_Other'}],
        [],
        [{call,52,
          {atom,52,crash},
          [{var,52,'Module'},{var,52,'Func'},{var,52,'Args'}]}]}]}]}]},
 {function,60,undefined_lambda,3,
  [{clause,60,
    [{var,60,'Module'},{var,60,'Fun'},{var,60,'Args'}],
    [],
    [{'case',61,
      {call,61,{atom,61,ensure_loaded},[{var,61,'Module'}]},
      [{clause,62,
        [{tuple,62,[{atom,62,module},{var,62,'Module'}]}],
        [],
        [{call,65,{atom,65,apply},[{var,65,'Fun'},{var,65,'Args'}]}]},
       {clause,66,
        [{tuple,66,[{atom,66,module},{var,66,'_'}]}],
        [],
        [{call,67,{atom,67,crash},[{var,67,'Fun'},{var,67,'Args'}]}]},
       {clause,68,
        [{var,68,'_Other'}],
        [],
        [{call,69,{atom,69,crash},[{var,69,'Fun'},{var,69,'Args'}]}]}]}]}]},
 {function,75,breakpoint,3,
  [{clause,75,
    [{var,75,'Module'},{var,75,'Func'},{var,75,'Args'}],
    [],
    [{call,76,
      {remote,76,{call,76,{atom,76,int},[]},{atom,76,eval}},
      [{var,76,'Module'},{var,76,'Func'},{var,76,'Args'}]}]}]},
 {function,83,raise_undef_exception,3,
  [{clause,83,
    [{var,83,'Module'},{var,83,'Func'},{var,83,'Args'}],
    [],
    [{call,84,
      {atom,84,crash},
      [{tuple,84,
        [{var,84,'Module'},{var,84,'Func'},{var,84,'Args'},{nil,84}]}]}]}]},
 {function,89,int,0,[{clause,89,[],[],[{atom,89,int}]}]},
 {function,96,crash,2,
  [{clause,96,
    [{var,96,'Fun'},{var,96,'Args'}],
    [],
    [{call,97,
      {atom,97,crash},
      [{tuple,97,[{var,97,'Fun'},{var,97,'Args'},{nil,97}]}]}]}]},
 {function,101,crash,3,
  [{clause,101,
    [{var,101,'M'},{var,101,'F'},{var,101,'A'}],
    [],
    [{call,102,
      {atom,102,crash},
      [{tuple,102,[{var,102,'M'},{var,102,'F'},{var,102,'A'},{nil,102}]}]}]}]},
 {function,106,crash,1,
  [{clause,106,
    [{var,106,'Tuple'}],
    [],
    [{'try',107,
      [{call,107,
        {remote,107,{atom,107,erlang},{atom,107,error}},
        [{atom,107,undef}]}],
      [],
      [{clause,109,
        [{tuple,109,[{atom,109,error},{atom,109,undef},{var,109,'_'}]}],
        [],
        [{match,110,
          {var,110,'Stk'},
          {cons,110,
           {var,110,'Tuple'},
           {call,110,
            {atom,110,tl},
            [{call,110,
              {remote,110,{atom,110,erlang},{atom,110,get_stacktrace}},
              []}]}}},
         {call,111,
          {remote,111,{atom,111,erlang},{atom,111,raise}},
          [{atom,111,error},{atom,111,undef},{var,111,'Stk'}]}]}],
      []}]}]},
 {function,116,ensure_loaded,1,
  [{clause,116,
    [{var,116,'Module'}],
    [],
    [{match,117,{var,117,'Self'},{call,117,{atom,117,self},[]}},
     {'case',118,
      {call,118,{atom,118,whereis},[{atom,118,code_server}]},
      [{clause,124,
        [{var,124,'Self'}],
        [],
        [{match,125,
          {var,125,'Error'},
          {op,125,'++',
           {string,125,"The code server called the unloaded module `"},
           {op,126,'++',
            {call,126,{atom,126,atom_to_list},[{var,126,'Module'}]},
            {string,126,"'"}}}},
         {call,127,{atom,127,halt},[{var,127,'Error'}]}]},
       {clause,128,
        [{var,128,'Pid'}],
        [[{call,128,{atom,128,is_pid},[{var,128,'Pid'}]}]],
        [{call,129,
          {remote,129,{atom,129,code},{atom,129,ensure_loaded}},
          [{var,129,'Module'}]}]},
       {clause,130,
        [{var,130,'_'}],
        [],
        [{call,131,
          {remote,131,{atom,131,init},{atom,131,ensure_loaded}},
          [{var,131,'Module'}]}]}]}]}]},
 {function,136,stub_function,3,
  [{clause,136,
    [{var,136,'Mod'},{var,136,'Func'},{var,136,'Args'}],
    [],
    [{call,137,
      {atom,137,exit},
      [{tuple,137,
        [{atom,137,undef},
         {cons,137,
          {tuple,137,
           [{var,137,'Mod'},{var,137,'Func'},{var,137,'Args'},{nil,137}]},
          {nil,137}}]}]}]}]},
 {function,139,call_undefined_function_handler,3,
  [{clause,139,
    [{var,139,'Module'},{var,139,'Func'},{var,139,'Args'}],
    [],
    [{match,140,{var,140,'Handler'},{atom,140,'$handle_undefined_function'}},
     {'case',141,
      {call,141,
       {remote,141,{atom,141,erlang},{atom,141,function_exported}},
       [{var,141,'Module'},{var,141,'Handler'},{integer,141,2}]},
      [{clause,142,
        [{atom,142,false}],
        [],
        [{call,143,
          {atom,143,crash},
          [{var,143,'Module'},{var,143,'Func'},{var,143,'Args'}]}]},
       {clause,144,
        [{atom,144,true}],
        [],
        [{call,145,
          {remote,145,{var,145,'Module'},{var,145,'Handler'}},
          [{var,145,'Func'},{var,145,'Args'}]}]}]}]}]}]
