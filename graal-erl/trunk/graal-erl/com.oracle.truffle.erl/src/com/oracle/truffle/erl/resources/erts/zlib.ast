zlib
[]
[]
[{function,138,open,0,
  [{clause,138,[],[],
    [{call,139,
      {atom,139,open_port},
      [{tuple,139,[{atom,139,spawn},{string,139,"zlib_drv"}]},
       {cons,139,{atom,139,binary},{nil,139}}]}]}]},
 {function,144,close,1,
  [{clause,144,
    [{var,144,'Z'}],
    [],
    [{'try',145,
      [{match,146,
        {atom,146,true},
        {call,146,{atom,146,port_close},[{var,146,'Z'}]}},
       {'receive',147,
        [{clause,148,
          [{tuple,148,[{atom,148,'EXIT'},{var,148,'Z'},{var,148,'_'}]}],
          [],
          [{atom,148,ok}]}],
        {integer,149,0},
        [{atom,149,ok}]}],
      [],
      [{clause,151,
        [{tuple,151,[{var,151,'_'},{var,151,'_'},{var,151,'_'}]}],
        [],
        [{call,151,
          {remote,151,{atom,151,erlang},{atom,151,error}},
          [{atom,151,badarg}]}]}],
      []}]}]},
 {function,156,deflateInit,1,
  [{clause,156,
    [{var,156,'Z'}],
    [],
    [{call,157,
      {atom,157,call},
      [{var,157,'Z'},
       {integer,90,1},
       {bin,157,
        [{bin_element,47,
          {op,47,'-',{integer,47,1}},
          {integer,157,32},
          default}]}]}]}]},
 {function,162,deflateInit,2,
  [{clause,162,
    [{var,162,'Z'},{var,162,'Level'}],
    [],
    [{call,163,
      {atom,163,call},
      [{var,163,'Z'},
       {integer,90,1},
       {bin,163,
        [{bin_element,163,
          {call,163,{atom,163,arg_level},[{var,163,'Level'}]},
          {integer,163,32},
          default}]}]}]}]},
 {function,173,deflateInit,6,
  [{clause,173,
    [{var,173,'Z'},
     {var,173,'Level'},
     {var,173,'Method'},
     {var,173,'WindowBits'},
     {var,173,'MemLevel'},
     {var,173,'Strategy'}],
    [],
    [{call,174,
      {atom,174,call},
      [{var,174,'Z'},
       {integer,91,2},
       {bin,174,
        [{bin_element,174,
          {call,174,{atom,174,arg_level},[{var,174,'Level'}]},
          {integer,174,32},
          default},
         {bin_element,175,
          {call,175,{atom,175,arg_method},[{var,175,'Method'}]},
          {integer,175,32},
          default},
         {bin_element,176,
          {call,176,{atom,176,arg_bitsz},[{var,176,'WindowBits'}]},
          {integer,176,32},
          default},
         {bin_element,177,
          {call,177,{atom,177,arg_mem},[{var,177,'MemLevel'}]},
          {integer,177,32},
          default},
         {bin_element,178,
          {call,178,{atom,178,arg_strategy},[{var,178,'Strategy'}]},
          {integer,178,32},
          default}]}]}]}]},
 {function,184,deflateSetDictionary,2,
  [{clause,184,
    [{var,184,'Z'},{var,184,'Dictionary'}],
    [],
    [{call,185,
      {atom,185,call},
      [{var,185,'Z'},{integer,92,3},{var,185,'Dictionary'}]}]}]},
 {function,189,deflateReset,1,
  [{clause,189,
    [{var,189,'Z'}],
    [],
    [{call,190,{atom,190,call},[{var,190,'Z'},{integer,93,4},{nil,190}]}]}]},
 {function,196,deflateParams,3,
  [{clause,196,
    [{var,196,'Z'},{var,196,'Level'},{var,196,'Strategy'}],
    [],
    [{call,197,
      {atom,197,call},
      [{var,197,'Z'},
       {integer,95,6},
       {bin,197,
        [{bin_element,197,
          {call,197,{atom,197,arg_level},[{var,197,'Level'}]},
          {integer,197,32},
          default},
         {bin_element,198,
          {call,198,{atom,198,arg_strategy},[{var,198,'Strategy'}]},
          {integer,198,32},
          default}]}]}]}]},
 {function,204,deflate,2,
  [{clause,204,
    [{var,204,'Z'},{var,204,'Data'}],
    [],
    [{call,205,
      {atom,205,deflate},
      [{var,205,'Z'},{var,205,'Data'},{atom,205,none}]}]}]},
 {function,212,deflate,3,
  [{clause,212,
    [{var,212,'Z'},{var,212,'Data'},{var,212,'Flush'}],
    [],
    [{'try',213,
      [{call,213,{atom,213,port_command},[{var,213,'Z'},{var,213,'Data'}]}],
      [{clause,214,
        [{atom,214,true}],
        [],
        [{match,215,
          {var,215,'_'},
          {call,215,
           {atom,215,call},
           [{var,215,'Z'},
            {integer,96,7},
            {bin,215,
             [{bin_element,215,
               {call,215,{atom,215,arg_flush},[{var,215,'Flush'}]},
               {integer,215,32},
               default}]}]}},
         {call,216,{atom,216,collect},[{var,216,'Z'}]}]}],
      [{clause,218,
        [{tuple,218,[{atom,218,error},{var,218,'_Err'},{var,218,'_'}]}],
        [],
        [{call,219,{atom,219,flush},[{var,219,'Z'}]},
         {call,220,
          {remote,220,{atom,220,erlang},{atom,220,error}},
          [{atom,220,badarg}]}]}],
      []}]}]},
 {function,225,deflateEnd,1,
  [{clause,225,
    [{var,225,'Z'}],
    [],
    [{call,226,{atom,226,call},[{var,226,'Z'},{integer,94,5},{nil,226}]}]}]},
 {function,230,inflateInit,1,
  [{clause,230,
    [{var,230,'Z'}],
    [],
    [{call,231,{atom,231,call},[{var,231,'Z'},{integer,98,8},{nil,231}]}]}]},
 {function,236,inflateInit,2,
  [{clause,236,
    [{var,236,'Z'},{var,236,'WindowBits'}],
    [],
    [{call,237,
      {atom,237,call},
      [{var,237,'Z'},
       {integer,99,9},
       {bin,237,
        [{bin_element,237,
          {call,237,{atom,237,arg_bitsz},[{var,237,'WindowBits'}]},
          {integer,237,32},
          default}]}]}]}]},
 {function,242,inflateSetDictionary,2,
  [{clause,242,
    [{var,242,'Z'},{var,242,'Dictionary'}],
    [],
    [{call,243,
      {atom,243,call},
      [{var,243,'Z'},{integer,100,10},{var,243,'Dictionary'}]}]}]},
 {function,246,inflateSync,1,
  [{clause,246,
    [{var,246,'Z'}],
    [],
    [{call,247,{atom,247,call},[{var,247,'Z'},{integer,101,11},{nil,247}]}]}]},
 {function,251,inflateReset,1,
  [{clause,251,
    [{var,251,'Z'}],
    [],
    [{call,252,{atom,252,call},[{var,252,'Z'},{integer,102,12},{nil,252}]}]}]},
 {function,258,inflate,2,
  [{clause,258,
    [{var,258,'Z'},{var,258,'Data'}],
    [],
    [{'try',259,
      [{call,259,{atom,259,port_command},[{var,259,'Z'},{var,259,'Data'}]}],
      [{clause,260,
        [{atom,260,true}],
        [],
        [{match,261,
          {var,261,'_'},
          {call,261,
           {atom,261,call},
           [{var,261,'Z'},
            {integer,104,14},
            {bin,261,
             [{bin_element,38,{integer,38,0},{integer,261,32},default}]}]}},
         {call,262,{atom,262,collect},[{var,262,'Z'}]}]}],
      [{clause,264,
        [{tuple,264,[{atom,264,error},{var,264,'_Err'},{var,264,'_'}]}],
        [],
        [{call,265,{atom,265,flush},[{var,265,'Z'}]},
         {call,266,
          {remote,266,{atom,266,erlang},{atom,266,error}},
          [{atom,266,badarg}]}]}],
      []}]}]},
 {function,273,inflateChunk,2,
  [{clause,273,
    [{var,273,'Z'},{var,273,'Data'}],
    [],
    [{'try',274,
      [{call,274,{atom,274,port_command},[{var,274,'Z'},{var,274,'Data'}]}],
      [{clause,275,
        [{atom,275,true}],
        [],
        [{call,276,{atom,276,inflateChunk},[{var,276,'Z'}]}]}],
      [{clause,278,
        [{tuple,278,[{atom,278,error},{var,278,'_Err'},{var,278,'_'}]}],
        [],
        [{call,279,{atom,279,flush},[{var,279,'Z'}]},
         {call,280,
          {remote,280,{atom,280,erlang},{atom,280,error}},
          [{atom,280,badarg}]}]}],
      []}]}]},
 {function,286,inflateChunk,1,
  [{clause,286,
    [{var,286,'Z'}],
    [],
    [{match,287,
      {var,287,'Status'},
      {call,287,{atom,287,call},[{var,287,'Z'},{integer,105,25},{nil,287}]}},
     {match,288,
      {var,288,'Data'},
      {'receive',288,
       [{clause,289,
         [{tuple,289,
           [{var,289,'Z'},{tuple,289,[{atom,289,data},{var,289,'Bin'}]}]}],
         [],
         [{var,290,'Bin'}]}],
       {integer,291,0},
       [{nil,292}]}},
     {'case',295,
      {var,295,'Status'},
      [{clause,296,
        [{var,296,'Good'}],
        [[{op,296,'orelse',
           {op,296,'==',{var,296,'Good'},{atom,296,ok}},
           {op,296,'==',{var,296,'Good'},{atom,296,stream_end}}}]],
        [{var,297,'Data'}]},
       {clause,298,
        [{atom,298,inflate_has_more}],
        [],
        [{tuple,299,[{atom,299,more},{var,299,'Data'}]}]}]}]}]},
 {function,304,inflateEnd,1,
  [{clause,304,
    [{var,304,'Z'}],
    [],
    [{call,305,{atom,305,call},[{var,305,'Z'},{integer,103,13},{nil,305}]}]}]},
 {function,310,setBufSize,2,
  [{clause,310,
    [{var,310,'Z'},{var,310,'Size'}],
    [],
    [{call,311,
      {atom,311,call},
      [{var,311,'Z'},
       {integer,111,18},
       {bin,311,
        [{bin_element,311,{var,311,'Size'},{integer,311,32},default}]}]}]}]},
 {function,316,getBufSize,1,
  [{clause,316,
    [{var,316,'Z'}],
    [],
    [{call,317,{atom,317,call},[{var,317,'Z'},{integer,112,19},{nil,317}]}]}]},
 {function,322,crc32,1,
  [{clause,322,
    [{var,322,'Z'}],
    [],
    [{call,323,{atom,323,call},[{var,323,'Z'},{integer,107,15},{nil,323}]}]}]},
 {function,329,crc32,2,
  [{clause,329,
    [{var,329,'Z'},{var,329,'Data'}],
    [],
    [{call,330,
      {atom,330,call},
      [{var,330,'Z'},{integer,108,16},{var,330,'Data'}]}]}]},
 {function,337,crc32,3,
  [{clause,337,
    [{var,337,'Z'},{var,337,'CRC'},{var,337,'Data'}],
    [],
    [{call,338,
      {atom,338,call},
      [{var,338,'Z'},
       {integer,109,17},
       {cons,338,
        {bin,338,[{bin_element,338,{var,338,'CRC'},{integer,338,32},default}]},
        {cons,338,{var,338,'Data'},{nil,338}}}]}]}]},
 {function,344,adler32,2,
  [{clause,344,
    [{var,344,'Z'},{var,344,'Data'}],
    [],
    [{call,345,
      {atom,345,call},
      [{var,345,'Z'},{integer,115,21},{var,345,'Data'}]}]}]},
 {function,352,adler32,3,
  [{clause,352,
    [{var,352,'Z'},{var,352,'Adler'},{var,352,'Data'}],
    [[{call,352,{atom,352,is_integer},[{var,352,'Adler'}]}]],
    [{call,353,
      {atom,353,call},
      [{var,353,'Z'},
       {integer,116,22},
       {cons,353,
        {bin,353,
         [{bin_element,353,{var,353,'Adler'},{integer,353,32},default}]},
        {cons,353,{var,353,'Data'},{nil,353}}}]}]},
   {clause,354,
    [{var,354,'_Z'},{var,354,'_Adler'},{var,354,'_Data'}],
    [],
    [{call,355,
      {remote,355,{atom,355,erlang},{atom,355,error}},
      [{atom,355,badarg}]}]}]},
 {function,363,crc32_combine,4,
  [{clause,363,
    [{var,363,'Z'},{var,363,'CRC1'},{var,363,'CRC2'},{var,363,'Len2'}],
    [[{call,364,{atom,364,is_integer},[{var,364,'CRC1'}]},
      {call,364,{atom,364,is_integer},[{var,364,'CRC2'}]},
      {call,364,{atom,364,is_integer},[{var,364,'Len2'}]}]],
    [{call,365,
      {atom,365,call},
      [{var,365,'Z'},
       {integer,118,23},
       {bin,365,
        [{bin_element,365,{var,365,'CRC1'},{integer,365,32},default},
         {bin_element,365,{var,365,'CRC2'},{integer,365,32},default},
         {bin_element,365,{var,365,'Len2'},{integer,365,32},default}]}]}]},
   {clause,366,
    [{var,366,'_Z'},{var,366,'_CRC1'},{var,366,'_CRC2'},{var,366,'_Len2'}],
    [],
    [{call,367,
      {remote,367,{atom,367,erlang},{atom,367,error}},
      [{atom,367,badarg}]}]}]},
 {function,375,adler32_combine,4,
  [{clause,375,
    [{var,375,'Z'},{var,375,'Adler1'},{var,375,'Adler2'},{var,375,'Len2'}],
    [[{call,376,{atom,376,is_integer},[{var,376,'Adler1'}]},
      {call,376,{atom,376,is_integer},[{var,376,'Adler2'}]},
      {call,376,{atom,376,is_integer},[{var,376,'Len2'}]}]],
    [{call,377,
      {atom,377,call},
      [{var,377,'Z'},
       {integer,119,24},
       {bin,377,
        [{bin_element,377,{var,377,'Adler1'},{integer,377,32},default},
         {bin_element,377,{var,377,'Adler2'},{integer,377,32},default},
         {bin_element,377,{var,377,'Len2'},{integer,377,32},default}]}]}]},
   {clause,378,
    [{var,378,'_Z'},{var,378,'_Adler1'},{var,378,'_Adler2'},{var,378,'_Len2'}],
    [],
    [{call,379,
      {remote,379,{atom,379,erlang},{atom,379,error}},
      [{atom,379,badarg}]}]}]},
 {function,382,getQSize,1,
  [{clause,382,
    [{var,382,'Z'}],
    [],
    [{call,383,{atom,383,call},[{var,383,'Z'},{integer,113,20},{nil,383}]}]}]},
 {function,389,compress,1,
  [{clause,389,
    [{var,389,'Data'}],
    [],
    [{match,390,{var,390,'Z'},{call,390,{atom,390,open},[]}},
     {match,391,
      {var,391,'Bs'},
      {'try',391,
       [{call,392,{atom,392,deflateInit},[{var,392,'Z'},{atom,392,default}]},
        {match,393,
         {var,393,'B'},
         {call,393,
          {atom,393,deflate},
          [{var,393,'Z'},{var,393,'Data'},{atom,393,finish}]}},
        {call,394,{atom,394,deflateEnd},[{var,394,'Z'}]},
        {var,395,'B'}],
       [],[],
       [{call,397,{atom,397,close},[{var,397,'Z'}]}]}},
     {call,399,{atom,399,iolist_to_binary},[{var,399,'Bs'}]}]}]},
 {function,404,uncompress,1,
  [{clause,404,
    [{var,404,'Data'}],
    [],
    [{'try',405,
      [{call,405,{atom,405,iolist_size},[{var,405,'Data'}]}],
      [{clause,406,
        [{var,406,'Size'}],
        [],
        [{'if',407,
          [{clause,408,[],
            [[{op,408,'>=',{var,408,'Size'},{integer,408,8}}]],
            [{match,409,{var,409,'Z'},{call,409,{atom,409,open},[]}},
             {match,410,
              {var,410,'Bs'},
              {'try',410,
               [{call,411,{atom,411,inflateInit},[{var,411,'Z'}]},
                {match,412,
                 {var,412,'B'},
                 {call,412,
                  {atom,412,inflate},
                  [{var,412,'Z'},{var,412,'Data'}]}},
                {call,413,{atom,413,inflateEnd},[{var,413,'Z'}]},
                {var,414,'B'}],
               [],[],
               [{call,416,{atom,416,close},[{var,416,'Z'}]}]}},
             {call,418,{atom,418,iolist_to_binary},[{var,418,'Bs'}]}]},
           {clause,419,[],
            [[{atom,419,true}]],
            [{call,420,
              {remote,420,{atom,420,erlang},{atom,420,error}},
              [{atom,420,data_error}]}]}]}]}],
      [{clause,423,
        [{tuple,423,[{var,423,'_'},{var,423,'_'},{var,423,'_'}]}],
        [],
        [{call,424,
          {remote,424,{atom,424,erlang},{atom,424,error}},
          [{atom,424,badarg}]}]}],
      []}]}]},
 {function,431,zip,1,
  [{clause,431,
    [{var,431,'Data'}],
    [],
    [{match,432,{var,432,'Z'},{call,432,{atom,432,open},[]}},
     {match,433,
      {var,433,'Bs'},
      {'try',433,
       [{call,434,
         {atom,434,deflateInit},
         [{var,434,'Z'},
          {atom,434,default},
          {atom,434,deflated},
          {op,434,'-',{integer,60,15}},
          {integer,434,8},
          {atom,434,default}]},
        {match,435,
         {var,435,'B'},
         {call,435,
          {atom,435,deflate},
          [{var,435,'Z'},{var,435,'Data'},{atom,435,finish}]}},
        {call,436,{atom,436,deflateEnd},[{var,436,'Z'}]},
        {var,437,'B'}],
       [],[],
       [{call,439,{atom,439,close},[{var,439,'Z'}]}]}},
     {call,441,{atom,441,iolist_to_binary},[{var,441,'Bs'}]}]}]},
 {function,446,unzip,1,
  [{clause,446,
    [{var,446,'Data'}],
    [],
    [{match,447,{var,447,'Z'},{call,447,{atom,447,open},[]}},
     {match,448,
      {var,448,'Bs'},
      {'try',448,
       [{call,449,
         {atom,449,inflateInit},
         [{var,449,'Z'},{op,449,'-',{integer,60,15}}]},
        {match,450,
         {var,450,'B'},
         {call,450,{atom,450,inflate},[{var,450,'Z'},{var,450,'Data'}]}},
        {call,451,{atom,451,inflateEnd},[{var,451,'Z'}]},
        {var,452,'B'}],
       [],[],
       [{call,454,{atom,454,close},[{var,454,'Z'}]}]}},
     {call,456,{atom,456,iolist_to_binary},[{var,456,'Bs'}]}]}]},
 {function,461,gzip,1,
  [{clause,461,
    [{var,461,'Data'}],
    [],
    [{match,462,{var,462,'Z'},{call,462,{atom,462,open},[]}},
     {match,463,
      {var,463,'Bs'},
      {'try',463,
       [{call,464,
         {atom,464,deflateInit},
         [{var,464,'Z'},
          {atom,464,default},
          {atom,464,deflated},
          {op,464,'+',{integer,464,16},{integer,60,15}},
          {integer,464,8},
          {atom,464,default}]},
        {match,465,
         {var,465,'B'},
         {call,465,
          {atom,465,deflate},
          [{var,465,'Z'},{var,465,'Data'},{atom,465,finish}]}},
        {call,466,{atom,466,deflateEnd},[{var,466,'Z'}]},
        {var,467,'B'}],
       [],[],
       [{call,469,{atom,469,close},[{var,469,'Z'}]}]}},
     {call,471,{atom,471,iolist_to_binary},[{var,471,'Bs'}]}]}]},
 {function,476,gunzip,1,
  [{clause,476,
    [{var,476,'Data'}],
    [],
    [{match,477,{var,477,'Z'},{call,477,{atom,477,open},[]}},
     {match,478,
      {var,478,'Bs'},
      {'try',478,
       [{call,479,
         {atom,479,inflateInit},
         [{var,479,'Z'},{op,479,'+',{integer,479,16},{integer,60,15}}]},
        {match,480,
         {var,480,'B'},
         {call,480,{atom,480,inflate},[{var,480,'Z'},{var,480,'Data'}]}},
        {call,481,{atom,481,inflateEnd},[{var,481,'Z'}]},
        {var,482,'B'}],
       [],[],
       [{call,484,{atom,484,close},[{var,484,'Z'}]}]}},
     {call,486,{atom,486,iolist_to_binary},[{var,486,'Bs'}]}]}]},
 {function,489,collect,1,
  [{clause,489,
    [{var,489,'Z'}],
    [],
    [{call,490,{atom,490,collect},[{var,490,'Z'},{nil,490}]}]}]},
 {function,493,collect,2,
  [{clause,493,
    [{var,493,'Z'},{var,493,'Acc'}],
    [],
    [{'receive',494,
      [{clause,495,
        [{tuple,495,
          [{var,495,'Z'},{tuple,495,[{atom,495,data},{var,495,'Bin'}]}]}],
        [],
        [{call,496,
          {atom,496,collect},
          [{var,496,'Z'},{cons,496,{var,496,'Bin'},{var,496,'Acc'}}]}]}],
      {integer,497,0},
      [{call,498,{atom,498,reverse},[{var,498,'Acc'}]}]}]}]},
 {function,502,flush,1,
  [{clause,502,
    [{var,502,'Z'}],
    [],
    [{'receive',503,
      [{clause,504,
        [{tuple,504,
          [{var,504,'Z'},{tuple,504,[{atom,504,data},{var,504,'_'}]}]}],
        [],
        [{call,505,{atom,505,flush},[{var,505,'Z'}]}]}],
      {integer,506,0},
      [{atom,507,ok}]}]}]},
 {function,510,arg_flush,1,
  [{clause,510,[{atom,510,none}],[],[{integer,38,0}]},
   {clause,512,[{atom,512,sync}],[],[{integer,39,2}]},
   {clause,513,[{atom,513,full}],[],[{integer,40,3}]},
   {clause,514,[{atom,514,finish}],[],[{integer,41,4}]},
   {clause,515,
    [{var,515,'_'}],
    [],
    [{call,515,
      {remote,515,{atom,515,erlang},{atom,515,error}},
      [{atom,515,badarg}]}]}]},
 {function,517,arg_level,1,
  [{clause,517,[{atom,517,none}],[],[{integer,44,0}]},
   {clause,518,[{atom,518,best_speed}],[],[{integer,45,1}]},
   {clause,519,[{atom,519,best_compression}],[],[{integer,46,9}]},
   {clause,520,[{atom,520,default}],[],[{op,47,'-',{integer,47,1}}]},
   {clause,521,
    [{var,521,'Level'}],
    [[{call,521,{atom,521,is_integer},[{var,521,'Level'}]},
      {op,521,'>=',{var,521,'Level'},{integer,521,0}},
      {op,521,'=<',{var,521,'Level'},{integer,521,9}}]],
    [{var,521,'Level'}]},
   {clause,522,
    [{var,522,'_'}],
    [],
    [{call,522,
      {remote,522,{atom,522,erlang},{atom,522,error}},
      [{atom,522,badarg}]}]}]},
 {function,524,arg_strategy,1,
  [{clause,524,[{atom,524,filtered}],[],[{integer,50,1}]},
   {clause,525,[{atom,525,huffman_only}],[],[{integer,51,2}]},
   {clause,526,[{atom,526,rle}],[],[{integer,52,3}]},
   {clause,527,[{atom,527,default}],[],[{integer,53,0}]},
   {clause,528,
    [{var,528,'_'}],
    [],
    [{call,528,
      {remote,528,{atom,528,erlang},{atom,528,error}},
      [{atom,528,badarg}]}]}]},
 {function,530,arg_method,1,
  [{clause,530,[{atom,530,deflated}],[],[{integer,56,8}]},
   {clause,531,
    [{var,531,'_'}],
    [],
    [{call,531,
      {remote,531,{atom,531,erlang},{atom,531,error}},
      [{atom,531,badarg}]}]}]},
 {function,534,arg_bitsz,1,
  [{clause,534,
    [{var,534,'Bits'}],
    [[{op,534,'andalso',
       {call,534,{atom,534,is_integer},[{var,534,'Bits'}]},
       {op,535,'orelse',
        {op,535,'andalso',
         {op,535,'=<',{integer,535,8},{var,535,'Bits'}},
         {op,535,'<',{var,535,'Bits'},{integer,535,48}}},
        {op,536,'andalso',
         {op,536,'=<',{op,536,'-',{integer,536,15}},{var,536,'Bits'}},
         {op,536,'=<',{var,536,'Bits'},{op,536,'-',{integer,536,8}}}}}}]],
    [{var,537,'Bits'}]},
   {clause,538,
    [{var,538,'_'}],
    [],
    [{call,538,
      {remote,538,{atom,538,erlang},{atom,538,error}},
      [{atom,538,badarg}]}]}]},
 {function,541,arg_mem,1,
  [{clause,541,
    [{var,541,'Level'}],
    [[{call,541,{atom,541,is_integer},[{var,541,'Level'}]},
      {op,541,'=<',{integer,541,1},{var,541,'Level'}},
      {op,541,'=<',{var,541,'Level'},{integer,541,9}}]],
    [{var,541,'Level'}]},
   {clause,542,
    [{var,542,'_'}],
    [],
    [{call,542,
      {remote,542,{atom,542,erlang},{atom,542,error}},
      [{atom,542,badarg}]}]}]},
 {function,544,call,3,
  [{clause,544,
    [{var,544,'Z'},{var,544,'Cmd'},{var,544,'Arg'}],
    [],
    [{'try',545,
      [{call,545,
        {atom,545,port_control},
        [{var,545,'Z'},{var,545,'Cmd'},{var,545,'Arg'}]}],
      [{clause,546,
        [{cons,546,{integer,546,0},{var,546,'Res'}}],
        [],
        [{call,546,{atom,546,list_to_atom},[{var,546,'Res'}]}]},
       {clause,547,
        [{cons,547,{integer,547,1},{var,547,'Res'}}],
        [],
        [{call,548,{atom,548,flush},[{var,548,'Z'}]},
         {call,549,
          {remote,549,{atom,549,erlang},{atom,549,error}},
          [{call,549,{atom,549,list_to_atom},[{var,549,'Res'}]}]}]},
       {clause,550,
        [{cons,550,
          {integer,550,2},
          {cons,550,
           {var,550,'A'},
           {cons,550,
            {var,550,'B'},
            {cons,550,{var,550,'C'},{cons,550,{var,550,'D'},{nil,550}}}}}}],
        [],
        [{op,551,'+',
          {op,551,'+',
           {op,551,'+',
            {op,551,'bsl',{var,551,'A'},{integer,551,24}},
            {op,551,'bsl',{var,551,'B'},{integer,551,16}}},
           {op,551,'bsl',{var,551,'C'},{integer,551,8}}},
          {var,551,'D'}}]},
       {clause,552,
        [{cons,552,
          {integer,552,3},
          {cons,552,
           {var,552,'A'},
           {cons,552,
            {var,552,'B'},
            {cons,552,{var,552,'C'},{cons,552,{var,552,'D'},{nil,552}}}}}}],
        [],
        [{call,553,
          {remote,553,{atom,553,erlang},{atom,553,error}},
          [{tuple,553,
            [{atom,553,need_dictionary},
             {op,553,'+',
              {op,553,'+',
               {op,553,'+',
                {op,553,'bsl',{var,553,'A'},{integer,553,24}},
                {op,553,'bsl',{var,553,'B'},{integer,553,16}}},
               {op,553,'bsl',{var,553,'C'},{integer,553,8}}},
              {var,553,'D'}}]}]}]},
       {clause,554,
        [{cons,554,
          {integer,554,4},
          {cons,554,
           {var,554,'_'},
           {cons,554,
            {var,554,'_'},
            {cons,554,{var,554,'_'},{cons,554,{var,554,'_'},{nil,554}}}}}}],
        [],
        [{atom,555,inflate_has_more}]}],
      [{clause,557,
        [{tuple,557,[{atom,557,error},{atom,557,badarg},{var,557,'_'}]}],
        [],
        [{call,558,
          {remote,558,{atom,558,erlang},{atom,558,error}},
          [{atom,558,badarg}]}]}],
      []}]}]},
 {function,561,reverse,1,
  [{clause,561,
    [{var,561,'X'}],
    [],
    [{call,562,{atom,562,reverse},[{var,562,'X'},{nil,562}]}]}]},
 {function,564,reverse,2,
  [{clause,564,
    [{cons,564,{var,564,'H'},{var,564,'T'}},{var,564,'Y'}],
    [],
    [{call,565,
      {atom,565,reverse},
      [{var,565,'T'},{cons,565,{var,565,'H'},{var,565,'Y'}}]}]},
   {clause,566,[{nil,566},{var,566,'X'}],[],[{var,567,'X'}]}]}]
