prim_inet
[]
[]
[{function,67,open,3,
  [{clause,67,
    [{var,67,'Protocol'},{var,67,'Family'},{var,67,'Type'}],
    [],
    [{call,68,
      {atom,68,open},
      [{var,68,'Protocol'},
       {var,68,'Family'},
       {var,68,'Type'},
       {nil,68},
       {integer,63,1},
       {nil,68}]}]}]},
 {function,70,open,4,
  [{clause,70,
    [{var,70,'Protocol'},{var,70,'Family'},{var,70,'Type'},{var,70,'Opts'}],
    [],
    [{call,71,
      {atom,71,open},
      [{var,71,'Protocol'},
       {var,71,'Family'},
       {var,71,'Type'},
       {var,71,'Opts'},
       {integer,63,1},
       {nil,71}]}]}]},
 {function,73,fdopen,4,
  [{clause,73,
    [{var,73,'Protocol'},{var,73,'Family'},{var,73,'Type'},{var,73,'Fd'}],
    [[{call,73,{atom,73,is_integer},[{var,73,'Fd'}]}]],
    [{call,74,
      {atom,74,fdopen},
      [{var,74,'Protocol'},
       {var,74,'Family'},
       {var,74,'Type'},
       {var,74,'Fd'},
       {atom,74,true}]}]}]},
 {function,76,fdopen,5,
  [{clause,76,
    [{var,76,'Protocol'},
     {var,76,'Family'},
     {var,76,'Type'},
     {var,76,'Fd'},
     {var,76,'Bound'}],
    [[{call,77,{atom,77,is_integer},[{var,77,'Fd'}]},
      {op,77,'orelse',
       {op,77,'==',{var,77,'Bound'},{atom,77,true}},
       {op,77,'==',{var,77,'Bound'},{atom,77,false}}}]],
    [{call,78,
      {atom,78,open},
      [{var,78,'Protocol'},
       {var,78,'Family'},
       {var,78,'Type'},
       {nil,78},
       {integer,75,13},
       {cons,79,
        {cons,313,
         {op,313,'band',
          {op,313,'bsr',{var,79,'Fd'},{integer,313,24}},
          {integer,313,255}},
         {cons,313,
          {op,313,'band',
           {op,313,'bsr',{var,79,'Fd'},{integer,313,16}},
           {integer,313,255}},
          {cons,314,
           {op,314,'band',
            {op,314,'bsr',{var,79,'Fd'},{integer,314,8}},
            {integer,314,255}},
           {cons,314,
            {op,314,'band',{var,79,'Fd'},{integer,314,255}},
            {nil,314}}}}},
        {cons,79,
         {call,79,{atom,79,enc_value_2},[{atom,79,bool},{var,79,'Bound'}]},
         {nil,79}}}]}]}]},
 {function,81,open,6,
  [{clause,81,
    [{var,81,'Protocol'},
     {var,81,'Family'},
     {var,81,'Type'},
     {var,81,'Opts'},
     {var,81,'Req'},
     {var,81,'Data'}],
    [],
    [{match,82,
      {var,82,'Drv'},
      {call,82,{atom,82,protocol2drv},[{var,82,'Protocol'}]}},
     {match,83,
      {var,83,'AF'},
      {call,83,{atom,83,enc_family},[{var,83,'Family'}]}},
     {match,84,{var,84,'T'},{call,84,{atom,84,enc_type},[{var,84,'Type'}]}},
     {'try',85,
      [{call,85,
        {remote,85,{atom,85,erlang},{atom,85,open_port}},
        [{tuple,85,[{atom,85,spawn_driver},{var,85,'Drv'}]},
         {cons,85,{atom,85,binary},{nil,85}}]}],
      [{clause,86,
        [{var,86,'S'}],
        [],
        [{'case',87,
          {call,87,{atom,87,setopts},[{var,87,'S'},{var,87,'Opts'}]},
          [{clause,88,
            [{atom,88,ok}],
            [],
            [{'case',89,
              {call,89,
               {atom,89,ctl_cmd},
               [{var,89,'S'},
                {var,89,'Req'},
                {cons,89,
                 {var,89,'AF'},
                 {cons,89,{var,89,'T'},{cons,89,{var,89,'Data'},{nil,89}}}}]},
              [{clause,90,
                [{tuple,90,[{atom,90,ok},{var,90,'_'}]}],
                [],
                [{tuple,90,[{atom,90,ok},{var,90,'S'}]}]},
               {clause,91,
                [{match,91,
                  {tuple,91,[{atom,91,error},{var,91,'_'}]},
                  {var,91,'E1'}}],
                [],
                [{call,92,{atom,92,close},[{var,92,'S'}]},{var,93,'E1'}]}]}]},
           {clause,95,
            [{match,95,
              {tuple,95,[{atom,95,error},{var,95,'_'}]},
              {var,95,'E2'}}],
            [],
            [{call,96,{atom,96,close},[{var,96,'S'}]},{var,97,'E2'}]}]}]}],
      [{clause,102,
        [{tuple,102,[{atom,102,error},{atom,102,badarg},{var,102,'_'}]}],
        [],
        [{tuple,102,[{atom,102,error},{atom,102,eprotonosupport}]}]},
       {clause,104,
        [{tuple,104,[{atom,104,error},{atom,104,system_limit},{var,104,'_'}]}],
        [],
        [{tuple,104,[{atom,104,error},{atom,104,system_limit}]}]}],
      []}]}]},
 {function,107,enc_family,1,
  [{clause,107,[{atom,107,inet}],[],[{integer,28,1}]},
   {clause,108,[{atom,108,inet6}],[],[{integer,29,2}]}]},
 {function,110,enc_type,1,
  [{clause,110,[{atom,110,stream}],[],[{integer,34,1}]},
   {clause,111,[{atom,111,dgram}],[],[{integer,35,2}]},
   {clause,112,[{atom,112,seqpacket}],[],[{integer,36,3}]}]},
 {function,114,protocol2drv,1,
  [{clause,114,[{atom,114,tcp}],[],[{string,114,"tcp_inet"}]},
   {clause,115,[{atom,115,udp}],[],[{string,115,"udp_inet"}]},
   {clause,116,[{atom,116,sctp}],[],[{string,116,"sctp_inet"}]}]},
 {function,118,drv2protocol,1,
  [{clause,118,[{string,118,"tcp_inet"}],[],[{atom,118,tcp}]},
   {clause,119,[{string,119,"udp_inet"}],[],[{atom,119,udp}]},
   {clause,120,[{string,120,"sctp_inet"}],[],[{atom,120,sctp}]},
   {clause,121,[{var,121,'_'}],[],[{atom,121,undefined}]}]},
 {function,130,shutdown,2,
  [{clause,130,
    [{var,130,'S'},{atom,130,read}],
    [[{call,130,{atom,130,is_port},[{var,130,'S'}]}]],
    [{call,131,{atom,131,shutdown_1},[{var,131,'S'},{integer,131,0}]}]},
   {clause,132,
    [{var,132,'S'},{atom,132,write}],
    [[{call,132,{atom,132,is_port},[{var,132,'S'}]}]],
    [{call,133,{atom,133,shutdown_1},[{var,133,'S'},{integer,133,1}]}]},
   {clause,134,
    [{var,134,'S'},{atom,134,read_write}],
    [[{call,134,{atom,134,is_port},[{var,134,'S'}]}]],
    [{call,135,{atom,135,shutdown_1},[{var,135,'S'},{integer,135,2}]}]}]},
 {function,137,shutdown_1,2,
  [{clause,137,
    [{var,137,'S'},{var,137,'How'}],
    [],
    [{'case',138,
      {call,138,
       {atom,138,ctl_cmd},
       [{var,138,'S'},{integer,99,44},{cons,138,{var,138,'How'},{nil,138}}]},
      [{clause,139,[{tuple,139,[{atom,139,ok},{nil,139}]}],[],[{atom,139,ok}]},
       {clause,140,
        [{match,140,
          {tuple,140,[{atom,140,error},{var,140,'_'}]},
          {var,140,'Error'}}],
        [],
        [{var,140,'Error'}]}]}]}]},
 {function,149,close,1,
  [{clause,149,
    [{var,149,'S'}],
    [[{call,149,{atom,149,is_port},[{var,149,'S'}]}]],
    [{'case',150,
      {call,150,{atom,150,getopt},[{var,150,'S'},{atom,150,linger}]},
      [{clause,151,
        [{tuple,151,
          [{atom,151,ok},{tuple,151,[{atom,151,true},{integer,151,0}]}]}],
        [],
        [{call,152,{atom,152,close_port},[{var,152,'S'}]}]},
       {clause,153,
        [{var,153,'_'}],
        [],
        [{'case',154,
          {call,154,
           {atom,154,subscribe},
           [{var,154,'S'},{cons,154,{atom,154,subs_empty_out_q},{nil,154}}]},
          [{clause,155,
            [{tuple,155,
              [{atom,155,ok},
               {cons,155,
                {tuple,155,[{atom,155,subs_empty_out_q},{var,155,'N'}]},
                {nil,155}}]}],
            [[{op,155,'>',{var,155,'N'},{integer,155,0}}]],
            [{call,156,
              {atom,156,close_pend_loop},
              [{var,156,'S'},{var,156,'N'}]}]},
           {clause,157,
            [{var,157,'_'}],
            [],
            [{call,158,{atom,158,close_port},[{var,158,'S'}]}]}]}]}]}]}]},
 {function,162,close_pend_loop,2,
  [{clause,162,
    [{var,162,'S'},{var,162,'N'}],
    [],
    [{'receive',163,
      [{clause,164,
        [{tuple,164,[{atom,164,empty_out_q},{var,164,'S'}]}],
        [],
        [{call,165,{atom,165,close_port},[{var,165,'S'}]}]}],
      {integer,247,5000},
      [{'case',167,
        {call,167,
         {atom,167,getstat},
         [{var,167,'S'},{cons,167,{atom,167,send_pend},{nil,167}}]},
        [{clause,168,
          [{tuple,168,
            [{atom,168,ok},
             {cons,168,
              {tuple,168,[{atom,168,send_pend},{var,168,'N1'}]},
              {nil,168}}]}],
          [],
          [{'if',169,
            [{clause,170,[],
              [[{op,170,'=:=',{var,170,'N1'},{var,170,'N'}}]],
              [{call,171,{atom,171,close_port},[{var,171,'S'}]}]},
             {clause,172,[],
              [[{atom,172,true}]],
              [{call,173,
                {atom,173,close_pend_loop},
                [{var,173,'S'},{var,173,'N1'}]}]}]}]},
         {clause,175,
          [{var,175,'_'}],
          [],
          [{call,176,{atom,176,close_port},[{var,176,'S'}]}]}]}]}]}]},
 {function,180,close_port,1,
  [{clause,180,
    [{var,180,'S'}],
    [],
    [{'catch',181,
      {call,181,
       {remote,181,{atom,181,erlang},{atom,181,port_close}},
       [{var,181,'S'}]}},
     {'receive',182,
      [{clause,182,
        [{tuple,182,[{atom,182,'EXIT'},{var,182,'S'},{var,182,'_'}]}],
        [],
        [{atom,182,ok}]}],
      {integer,182,0},
      [{atom,182,ok}]}]}]},
 {function,192,bind,3,
  [{clause,192,
    [{var,192,'S'},{var,192,'IP'},{var,192,'Port'}],
    [[{call,192,{atom,192,is_port},[{var,192,'S'}]},
      {call,192,{atom,192,is_integer},[{var,192,'Port'}]},
      {op,192,'>=',{var,192,'Port'},{integer,192,0}},
      {op,192,'=<',{var,192,'Port'},{integer,192,65535}}]],
    [{'case',193,
      {call,193,
       {atom,193,ctl_cmd},
       [{var,193,'S'},
        {integer,68,6},
        {call,193,
         {atom,193,enc_value},
         [{atom,193,set},
          {atom,193,addr},
          {tuple,193,[{var,193,'IP'},{var,193,'Port'}]}]}]},
      [{clause,194,
        [{tuple,194,
          [{atom,194,ok},
           {cons,194,{var,194,'P1'},{cons,194,{var,194,'P0'},{nil,194}}}]}],
        [],
        [{tuple,194,
          [{atom,194,ok},
           {op,332,'bor',
            {op,332,'bsl',{var,194,'P1'},{integer,332,8}},
            {var,194,'P0'}}]}]},
       {clause,195,
        [{match,195,
          {tuple,195,[{atom,195,error},{var,195,'_'}]},
          {var,195,'Error'}}],
        [],
        [{var,195,'Error'}]}]}]},
   {clause,201,
    [{var,201,'S'},{var,201,'Op'},{var,201,'Addrs'}],
    [[{call,201,{atom,201,is_port},[{var,201,'S'}]},
      {call,201,{atom,201,is_list},[{var,201,'Addrs'}]}]],
    [{'case',202,
      {var,202,'Op'},
      [{clause,203,
        [{atom,203,add}],
        [],
        [{call,204,
          {atom,204,bindx},
          [{var,204,'S'},{integer,204,1},{var,204,'Addrs'}]}]},
       {clause,205,
        [{atom,205,remove}],
        [],
        [{call,206,
          {atom,206,bindx},
          [{var,206,'S'},{integer,206,0},{var,206,'Addrs'}]}]},
       {clause,207,
        [{var,207,'_'}],
        [],
        [{tuple,207,[{atom,207,error},{atom,207,einval}]}]}]}]},
   {clause,209,
    [{var,209,'_'},{var,209,'_'},{var,209,'_'}],
    [],
    [{tuple,209,[{atom,209,error},{atom,209,einval}]}]}]},
 {function,211,bindx,3,
  [{clause,211,
    [{var,211,'S'},{var,211,'AddFlag'},{var,211,'Addrs'}],
    [],
    [{'case',212,
      {call,212,{atom,212,getprotocol},[{var,212,'S'}]},
      [{clause,213,
        [{atom,213,sctp}],
        [],
        [{match,216,
          {var,216,'Args'},
          {cons,217,
           {cons,305,
            {op,305,'band',{var,217,'AddFlag'},{integer,305,255}},
            {nil,305}},
           {lc,218,
            {call,218,
             {atom,218,enc_value},
             [{atom,218,set},
              {atom,218,addr},
              {tuple,218,[{var,218,'IP'},{var,218,'Port'}]}]},
            [{generate,219,
              {tuple,219,[{var,219,'IP'},{var,219,'Port'}]},
              {var,219,'Addrs'}}]}}},
         {'case',220,
          {call,220,
           {atom,220,ctl_cmd},
           [{var,220,'S'},{integer,103,62},{var,220,'Args'}]},
          [{clause,221,
            [{tuple,221,[{atom,221,ok},{var,221,'_'}]}],
            [],
            [{tuple,221,[{atom,221,ok},{var,221,'S'}]}]},
           {clause,222,
            [{match,222,
              {tuple,222,[{atom,222,error},{var,222,'_'}]},
              {var,222,'Error'}}],
            [],
            [{var,222,'Error'}]}]}]},
       {clause,224,
        [{var,224,'_'}],
        [],
        [{tuple,224,[{atom,224,error},{atom,224,einval}]}]}]}]}]},
 {function,245,connect,3,
  [{clause,245,
    [{var,245,'S'},{var,245,'IP'},{var,245,'Port'}],
    [],
    [{call,245,
      {atom,245,connect0},
      [{var,245,'S'},
       {var,245,'IP'},
       {var,245,'Port'},
       {op,245,'-',{integer,245,1}}]}]}]},
 {function,247,connect,4,
  [{clause,247,
    [{var,247,'S'},{var,247,'IP'},{var,247,'Port'},{atom,247,infinity}],
    [],
    [{call,247,
      {atom,247,connect0},
      [{var,247,'S'},
       {var,247,'IP'},
       {var,247,'Port'},
       {op,247,'-',{integer,247,1}}]}]},
   {clause,248,
    [{var,248,'S'},{var,248,'IP'},{var,248,'Port'},{var,248,'Time'}],
    [],
    [{call,248,
      {atom,248,connect0},
      [{var,248,'S'},{var,248,'IP'},{var,248,'Port'},{var,248,'Time'}]}]}]},
 {function,250,connect0,4,
  [{clause,250,
    [{var,250,'S'},{var,250,'IP'},{var,250,'Port'},{var,250,'Time'}],
    [[{call,250,{atom,250,is_port},[{var,250,'S'}]},
      {op,250,'>',{var,250,'Port'},{integer,250,0}},
      {op,250,'=<',{var,250,'Port'},{integer,250,65535}},
      {call,251,{atom,251,is_integer},[{var,251,'Time'}]}]],
    [{'case',252,
      {call,252,
       {atom,252,async_connect},
       [{var,252,'S'},{var,252,'IP'},{var,252,'Port'},{var,252,'Time'}]},
      [{clause,253,
        [{tuple,253,[{atom,253,ok},{var,253,'S'},{var,253,'Ref'}]}],
        [],
        [{'receive',254,
          [{clause,255,
            [{tuple,255,
              [{atom,255,inet_async},
               {var,255,'S'},
               {var,255,'Ref'},
               {var,255,'Status'}]}],
            [],
            [{var,256,'Status'}]}]}]},
       {clause,258,[{var,258,'Error'}],[],[{var,258,'Error'}]}]}]}]},
 {function,261,async_connect,4,
  [{clause,261,
    [{var,261,'S'},{var,261,'IP'},{var,261,'Port'},{var,261,'Time'}],
    [],
    [{'case',262,
      {call,262,
       {atom,262,ctl_cmd},
       [{var,262,'S'},
        {integer,65,3},
        {cons,263,
         {call,263,{atom,263,enc_time},[{var,263,'Time'}]},
         {cons,307,
          {cons,307,
           {op,307,'band',
            {op,307,'bsr',{var,263,'Port'},{integer,307,8}},
            {integer,307,255}},
           {cons,307,
            {op,307,'band',{var,263,'Port'},{integer,307,255}},
            {nil,307}}},
          {cons,263,
           {call,263,{atom,263,ip_to_bytes},[{var,263,'IP'}]},
           {nil,263}}}}]},
      [{clause,264,
        [{tuple,264,
          [{atom,264,ok},
           {cons,264,{var,264,'R1'},{cons,264,{var,264,'R0'},{nil,264}}}]}],
        [],
        [{tuple,264,
          [{atom,264,ok},
           {var,264,'S'},
           {op,332,'bor',
            {op,332,'bsl',{var,264,'R1'},{integer,332,8}},
            {var,264,'R0'}}]}]},
       {clause,265,
        [{match,265,
          {tuple,265,[{atom,265,error},{var,265,'_'}]},
          {var,265,'Error'}}],
        [],
        [{var,265,'Error'}]}]}]}]},
 {function,288,accept,1,
  [{clause,288,
    [{var,288,'L'}],
    [],
    [{call,288,
      {atom,288,accept0},
      [{var,288,'L'},{op,288,'-',{integer,288,1}}]}]}]},
 {function,290,accept,2,
  [{clause,290,
    [{var,290,'L'},{atom,290,infinity}],
    [],
    [{call,290,
      {atom,290,accept0},
      [{var,290,'L'},{op,290,'-',{integer,290,1}}]}]},
   {clause,291,
    [{var,291,'L'},{var,291,'Time'}],
    [],
    [{call,291,{atom,291,accept0},[{var,291,'L'},{var,291,'Time'}]}]}]},
 {function,293,accept0,2,
  [{clause,293,
    [{var,293,'L'},{var,293,'Time'}],
    [[{call,293,{atom,293,is_port},[{var,293,'L'}]},
      {call,293,{atom,293,is_integer},[{var,293,'Time'}]}]],
    [{'case',294,
      {call,294,{atom,294,async_accept},[{var,294,'L'},{var,294,'Time'}]},
      [{clause,295,
        [{tuple,295,[{atom,295,ok},{var,295,'Ref'}]}],
        [],
        [{'receive',296,
          [{clause,297,
            [{tuple,297,
              [{atom,297,inet_async},
               {var,297,'L'},
               {var,297,'Ref'},
               {tuple,297,[{atom,297,ok},{var,297,'S'}]}]}],
            [],
            [{call,298,{atom,298,accept_opts},[{var,298,'L'},{var,298,'S'}]}]},
           {clause,299,
            [{tuple,299,
              [{atom,299,inet_async},
               {var,299,'L'},
               {var,299,'Ref'},
               {var,299,'Error'}]}],
            [],
            [{var,300,'Error'}]}]}]},
       {clause,302,[{var,302,'Error'}],[],[{var,302,'Error'}]}]}]}]},
 {function,306,accept_opts,2,
  [{clause,306,
    [{var,306,'L'},{var,306,'S'}],
    [],
    [{'case',307,
      {call,307,
       {atom,307,getopts},
       [{var,307,'L'},
        {cons,307,
         {atom,307,active},
         {cons,307,
          {atom,307,nodelay},
          {cons,307,
           {atom,307,keepalive},
           {cons,307,
            {atom,307,delay_send},
            {cons,307,
             {atom,307,priority},
             {cons,307,{atom,307,tos},{nil,307}}}}}}}]},
      [{clause,308,
        [{tuple,308,[{atom,308,ok},{var,308,'Opts'}]}],
        [],
        [{'case',309,
          {call,309,{atom,309,setopts},[{var,309,'S'},{var,309,'Opts'}]},
          [{clause,310,
            [{atom,310,ok}],
            [],
            [{tuple,310,[{atom,310,ok},{var,310,'S'}]}]},
           {clause,311,
            [{var,311,'Error'}],
            [],
            [{call,311,{atom,311,close},[{var,311,'S'}]},
             {var,311,'Error'}]}]}]},
       {clause,313,
        [{var,313,'Error'}],
        [],
        [{call,314,{atom,314,close},[{var,314,'S'}]},{var,314,'Error'}]}]}]}]},
 {function,317,async_accept,2,
  [{clause,317,
    [{var,317,'L'},{var,317,'Time'}],
    [],
    [{'case',318,
      {call,318,
       {atom,318,ctl_cmd},
       [{var,318,'L'},
        {integer,88,26},
        {cons,318,
         {call,318,{atom,318,enc_time},[{var,318,'Time'}]},
         {nil,318}}]},
      [{clause,319,
        [{tuple,319,
          [{atom,319,ok},
           {cons,319,{var,319,'R1'},{cons,319,{var,319,'R0'},{nil,319}}}]}],
        [],
        [{tuple,319,
          [{atom,319,ok},
           {op,332,'bor',
            {op,332,'bsl',{var,319,'R1'},{integer,332,8}},
            {var,319,'R0'}}]}]},
       {clause,320,
        [{match,320,
          {tuple,320,[{atom,320,error},{var,320,'_'}]},
          {var,320,'Error'}}],
        [],
        [{var,320,'Error'}]}]}]}]},
 {function,333,listen,1,
  [{clause,333,
    [{var,333,'S'}],
    [],
    [{call,333,{atom,333,listen},[{var,333,'S'},{integer,244,5}]}]}]},
 {function,335,listen,2,
  [{clause,335,
    [{var,335,'S'},{atom,335,true}],
    [],
    [{call,335,{atom,335,listen},[{var,335,'S'},{integer,244,5}]}]},
   {clause,336,
    [{var,336,'S'},{atom,336,false}],
    [],
    [{call,336,{atom,336,listen},[{var,336,'S'},{integer,336,0}]}]},
   {clause,337,
    [{var,337,'S'},{var,337,'BackLog'}],
    [[{call,337,{atom,337,is_port},[{var,337,'S'}]},
      {call,337,{atom,337,is_integer},[{var,337,'BackLog'}]}]],
    [{'case',338,
      {call,338,
       {atom,338,ctl_cmd},
       [{var,338,'S'},
        {integer,89,27},
        {cons,338,
         {cons,307,
          {op,307,'band',
           {op,307,'bsr',{var,338,'BackLog'},{integer,307,8}},
           {integer,307,255}},
          {cons,307,
           {op,307,'band',{var,338,'BackLog'},{integer,307,255}},
           {nil,307}}},
         {nil,338}}]},
      [{clause,339,
        [{tuple,339,[{atom,339,ok},{var,339,'_'}]}],
        [],
        [{atom,339,ok}]},
       {clause,340,
        [{match,340,
          {tuple,340,[{atom,340,error},{var,340,'_'}]},
          {var,340,'Error'}}],
        [],
        [{var,340,'Error'}]}]}]}]},
 {function,351,peeloff,2,
  [{clause,351,
    [{var,351,'S'},{var,351,'AssocId'}],
    [],
    [{'case',352,
      {call,352,
       {atom,352,ctl_cmd},
       [{var,352,'S'},
        {integer,104,63},
        {cons,352,
         {cons,313,
          {op,313,'band',
           {op,313,'bsr',{var,352,'AssocId'},{integer,313,24}},
           {integer,313,255}},
          {cons,313,
           {op,313,'band',
            {op,313,'bsr',{var,352,'AssocId'},{integer,313,16}},
            {integer,313,255}},
           {cons,314,
            {op,314,'band',
             {op,314,'bsr',{var,352,'AssocId'},{integer,314,8}},
             {integer,314,255}},
            {cons,314,
             {op,314,'band',{var,352,'AssocId'},{integer,314,255}},
             {nil,314}}}}},
         {nil,352}}]},
      [{clause,353,
        [{atom,353,inet_reply}],
        [],
        [{'receive',354,
          [{clause,355,
            [{tuple,355,
              [{atom,355,inet_reply},{var,355,'S'},{var,355,'Res'}]}],
            [],
            [{var,355,'Res'}]}]}]},
       {clause,357,
        [{match,357,
          {tuple,357,[{atom,357,error},{var,357,'_'}]},
          {var,357,'Error'}}],
        [],
        [{var,357,'Error'}]}]}]}]},
 {function,372,send,3,
  [{clause,372,
    [{var,372,'S'},{var,372,'Data'},{var,372,'OptList'}],
    [[{call,372,{atom,372,is_port},[{var,372,'S'}]},
      {call,372,{atom,372,is_list},[{var,372,'OptList'}]}]],
    [{atom,56,ok},
     {'try',374,
      [{call,374,
        {remote,374,{atom,374,erlang},{atom,374,port_command}},
        [{var,374,'S'},{var,374,'Data'},{var,374,'OptList'}]}],
      [{clause,375,
        [{atom,375,false}],
        [],
        [{atom,56,ok},{tuple,377,[{atom,377,error},{atom,377,busy}]}]},
       {clause,378,
        [{atom,378,true}],
        [],
        [{'receive',379,
          [{clause,380,
            [{tuple,380,
              [{atom,380,inet_reply},{var,380,'S'},{var,380,'Status'}]}],
            [],
            [{atom,56,ok},{var,382,'Status'}]}]}]}],
      [{clause,385,
        [{tuple,385,[{atom,385,error},{var,385,'_Error'},{var,385,'_'}]}],
        [],
        [{atom,56,ok},{tuple,387,[{atom,387,error},{atom,387,einval}]}]}],
      []}]}]},
 {function,390,send,2,
  [{clause,390,
    [{var,390,'S'},{var,390,'Data'}],
    [],
    [{call,391,{atom,391,send},[{var,391,'S'},{var,391,'Data'},{nil,391}]}]}]},
 {function,403,sendto,4,
  [{clause,403,
    [{var,403,'S'},{var,403,'IP'},{var,403,'Port'},{var,403,'Data'}],
    [[{call,403,{atom,403,is_port},[{var,403,'S'}]},
      {op,403,'>=',{var,403,'Port'},{integer,403,0}},
      {op,403,'=<',{var,403,'Port'},{integer,403,65535}}]],
    [{atom,56,ok},
     {'try',405,
      [{call,405,
        {remote,405,{atom,405,erlang},{atom,405,port_command}},
        [{var,405,'S'},
         {cons,405,
          {cons,307,
           {op,307,'band',
            {op,307,'bsr',{var,405,'Port'},{integer,307,8}},
            {integer,307,255}},
           {cons,307,
            {op,307,'band',{var,405,'Port'},{integer,307,255}},
            {nil,307}}},
          {cons,405,
           {call,405,{atom,405,ip_to_bytes},[{var,405,'IP'}]},
           {cons,405,{var,405,'Data'},{nil,405}}}}]}],
      [{clause,406,
        [{atom,406,true}],
        [],
        [{'receive',407,
          [{clause,408,
            [{tuple,408,
              [{atom,408,inet_reply},{var,408,'S'},{var,408,'Reply'}]}],
            [],
            [{atom,56,ok},{var,410,'Reply'}]}]}]}],
      [{clause,413,
        [{tuple,413,[{atom,413,error},{var,413,'_'},{var,413,'_'}]}],
        [],
        [{atom,56,ok},{tuple,415,[{atom,415,error},{atom,415,einval}]}]}],
      []}]}]},
 {function,427,sendmsg,3,
  [{clause,427,
    [{var,427,'S'},
     {match,427,
      {tuple,427,
       [{atom,427,sctp_sndrcvinfo},
        {var,427,'_'},
        {var,427,'_'},
        {var,427,'_'},
        {var,427,'_'},
        {var,427,'_'},
        {var,427,'_'},
        {var,427,'_'},
        {var,427,'_'},
        {var,427,'_'}]},
      {var,427,'SRI'}},
     {var,427,'Data'}],
    [[{call,427,{atom,427,is_port},[{var,427,'S'}]}]],
    [{match,428,
      {var,428,'Type'},
      {call,428,
       {atom,428,type_opt},
       [{atom,428,set},{atom,428,sctp_default_send_param}]}},
     {'try',429,
      [{call,429,
        {atom,429,type_value},
        [{atom,429,set},{var,429,'Type'},{var,429,'SRI'}]}],
      [{clause,430,
        [{atom,430,true}],
        [],
        [{call,431,
          {atom,431,send},
          [{var,431,'S'},
           {cons,431,
            {call,431,
             {atom,431,enc_value},
             [{atom,431,set},{var,431,'Type'},{var,431,'SRI'}]},
            {var,431,'Data'}}]}]},
       {clause,432,
        [{atom,432,false}],
        [],
        [{tuple,432,[{atom,432,error},{atom,432,einval}]}]}],
      [{clause,434,
        [{tuple,434,[{atom,434,throw},{var,434,'Reason'},{var,434,'_'}]}],
        [],
        [{tuple,434,[{atom,434,error},{var,434,'Reason'}]}]}],
      []}]}]},
 {function,448,recv,2,
  [{clause,448,
    [{var,448,'S'},{var,448,'Length'}],
    [],
    [{call,448,
      {atom,448,recv0},
      [{var,448,'S'},{var,448,'Length'},{op,448,'-',{integer,448,1}}]}]}]},
 {function,450,recv,3,
  [{clause,450,
    [{var,450,'S'},{var,450,'Length'},{atom,450,infinity}],
    [],
    [{call,450,
      {atom,450,recv0},
      [{var,450,'S'},{var,450,'Length'},{op,450,'-',{integer,450,1}}]}]},
   {clause,452,
    [{var,452,'S'},{var,452,'Length'},{var,452,'Time'}],
    [[{call,452,{atom,452,is_integer},[{var,452,'Time'}]}]],
    [{call,452,
      {atom,452,recv0},
      [{var,452,'S'},{var,452,'Length'},{var,452,'Time'}]}]}]},
 {function,454,recv0,3,
  [{clause,454,
    [{var,454,'S'},{var,454,'Length'},{var,454,'Time'}],
    [[{call,454,{atom,454,is_port},[{var,454,'S'}]},
      {call,454,{atom,454,is_integer},[{var,454,'Length'}]},
      {op,454,'>=',{var,454,'Length'},{integer,454,0}}]],
    [{'case',455,
      {call,455,
       {atom,455,async_recv},
       [{var,455,'S'},{var,455,'Length'},{var,455,'Time'}]},
      [{clause,456,
        [{tuple,456,[{atom,456,ok},{var,456,'Ref'}]}],
        [],
        [{'receive',457,
          [{clause,458,
            [{tuple,458,
              [{atom,458,inet_async},
               {var,458,'S'},
               {var,458,'Ref'},
               {var,458,'Status'}]}],
            [],
            [{var,458,'Status'}]},
           {clause,459,
            [{tuple,459,
              [{atom,459,'EXIT'},{var,459,'S'},{var,459,'_Reason'}]}],
            [],
            [{tuple,460,[{atom,460,error},{atom,460,closed}]}]}]}]},
       {clause,462,[{var,462,'Error'}],[],[{var,462,'Error'}]}]}]}]},
 {function,466,async_recv,3,
  [{clause,466,
    [{var,466,'S'},{var,466,'Length'},{var,466,'Time'}],
    [],
    [{'case',467,
      {call,467,
       {atom,467,ctl_cmd},
       [{var,467,'S'},
        {integer,97,42},
        {cons,467,
         {call,467,{atom,467,enc_time},[{var,467,'Time'}]},
         {cons,313,
          {cons,313,
           {op,313,'band',
            {op,313,'bsr',{var,467,'Length'},{integer,313,24}},
            {integer,313,255}},
           {cons,313,
            {op,313,'band',
             {op,313,'bsr',{var,467,'Length'},{integer,313,16}},
             {integer,313,255}},
            {cons,314,
             {op,314,'band',
              {op,314,'bsr',{var,467,'Length'},{integer,314,8}},
              {integer,314,255}},
             {cons,314,
              {op,314,'band',{var,467,'Length'},{integer,314,255}},
              {nil,314}}}}},
          {nil,467}}}]},
      [{clause,468,
        [{tuple,468,
          [{atom,468,ok},
           {cons,468,{var,468,'R1'},{cons,468,{var,468,'R0'},{nil,468}}}]}],
        [],
        [{tuple,468,
          [{atom,468,ok},
           {op,332,'bor',
            {op,332,'bsl',{var,468,'R1'},{integer,332,8}},
            {var,468,'R0'}}]}]},
       {clause,469,
        [{match,469,
          {tuple,469,[{atom,469,error},{var,469,'_'}]},
          {var,469,'Error'}}],
        [],
        [{var,469,'Error'}]}]}]}]},
 {function,486,recvfrom,2,
  [{clause,486,
    [{var,486,'S'},{var,486,'Length'}],
    [],
    [{call,487,
      {atom,487,recvfrom0},
      [{var,487,'S'},{var,487,'Length'},{op,487,'-',{integer,487,1}}]}]}]},
 {function,489,recvfrom,3,
  [{clause,489,
    [{var,489,'S'},{var,489,'Length'},{atom,489,infinity}],
    [],
    [{call,490,
      {atom,490,recvfrom0},
      [{var,490,'S'},{var,490,'Length'},{op,490,'-',{integer,490,1}}]}]},
   {clause,491,
    [{var,491,'S'},{var,491,'Length'},{var,491,'Time'}],
    [[{call,491,{atom,491,is_integer},[{var,491,'Time'}]},
      {op,491,'<',{var,491,'Time'},{integer,491,4294967295}}]],
    [{call,492,
      {atom,492,recvfrom0},
      [{var,492,'S'},{var,492,'Length'},{var,492,'Time'}]}]},
   {clause,493,
    [{var,493,'_'},{var,493,'_'},{var,493,'_'}],
    [],
    [{tuple,493,[{atom,493,error},{atom,493,einval}]}]}]},
 {function,495,recvfrom0,3,
  [{clause,495,
    [{var,495,'S'},{var,495,'Length'},{var,495,'Time'}],
    [[{call,496,{atom,496,is_port},[{var,496,'S'}]},
      {call,496,{atom,496,is_integer},[{var,496,'Length'}]},
      {op,496,'>=',{var,496,'Length'},{integer,496,0}},
      {op,496,'=<',{var,496,'Length'},{integer,496,4294967295}}]],
    [{'case',497,
      {call,497,
       {atom,497,ctl_cmd},
       [{var,497,'S'},
        {integer,101,60},
        {cons,497,
         {call,497,{atom,497,enc_time},[{var,497,'Time'}]},
         {cons,313,
          {cons,313,
           {op,313,'band',
            {op,313,'bsr',{var,497,'Length'},{integer,313,24}},
            {integer,313,255}},
           {cons,313,
            {op,313,'band',
             {op,313,'bsr',{var,497,'Length'},{integer,313,16}},
             {integer,313,255}},
            {cons,314,
             {op,314,'band',
              {op,314,'bsr',{var,497,'Length'},{integer,314,8}},
              {integer,314,255}},
             {cons,314,
              {op,314,'band',{var,497,'Length'},{integer,314,255}},
              {nil,314}}}}},
          {nil,497}}}]},
      [{clause,498,
        [{tuple,498,
          [{atom,498,ok},
           {cons,498,{var,498,'R1'},{cons,498,{var,498,'R0'},{nil,498}}}]}],
        [],
        [{match,499,
          {var,499,'Ref'},
          {op,332,'bor',
           {op,332,'bsl',{var,499,'R1'},{integer,332,8}},
           {var,499,'R0'}}},
         {'receive',500,
          [{clause,502,
            [{tuple,502,
              [{atom,502,inet_async},
               {var,502,'S'},
               {var,502,'Ref'},
               {tuple,502,
                [{atom,502,ok},
                 {cons,502,
                  {var,502,'F'},
                  {cons,502,
                   {var,502,'P1'},
                   {cons,502,{var,502,'P0'},{var,502,'AddrData'}}}}]}]}],
            [],
            [{match,503,
              {tuple,503,[{var,503,'IP'},{var,503,'Data'}]},
              {call,503,
               {atom,503,get_ip},
               [{var,503,'F'},{var,503,'AddrData'}]}},
             {tuple,504,
              [{atom,504,ok},
               {tuple,504,
                [{var,504,'IP'},
                 {op,332,'bor',
                  {op,332,'bsl',{var,504,'P1'},{integer,332,8}},
                  {var,504,'P0'}},
                 {var,504,'Data'}]}]}]},
           {clause,507,
            [{tuple,507,
              [{atom,507,inet_async},
               {var,507,'S'},
               {var,507,'Ref'},
               {tuple,507,
                [{atom,507,ok},
                 {tuple,507,
                  [{cons,507,
                    {var,507,'F'},
                    {cons,507,
                     {var,507,'P1'},
                     {cons,507,{var,507,'P0'},{var,507,'Addr'}}}},
                   {var,507,'AncData'},
                   {var,507,'DE'}]}]}]}],
            [],
            [{match,508,
              {tuple,508,[{var,508,'IP'},{var,508,'_'}]},
              {call,508,{atom,508,get_ip},[{var,508,'F'},{var,508,'Addr'}]}},
             {tuple,509,
              [{atom,509,ok},
               {tuple,509,
                [{var,509,'IP'},
                 {op,332,'bor',
                  {op,332,'bsl',{var,509,'P1'},{integer,332,8}},
                  {var,509,'P0'}},
                 {var,509,'AncData'},
                 {var,509,'DE'}]}]}]},
           {clause,512,
            [{tuple,512,
              [{atom,512,inet_async},
               {var,512,'S'},
               {var,512,'Ref'},
               {match,512,
                {var,512,'Error'},
                {tuple,512,[{atom,512,error},{var,512,'_'}]}}]}],
            [],
            [{var,513,'Error'}]}]}]},
       {clause,515,
        [{match,515,
          {tuple,515,[{atom,515,error},{var,515,'_'}]},
          {var,515,'Error'}}],
        [],
        [{var,516,'Error'}]}]}]},
   {clause,518,
    [{var,518,'_'},{var,518,'_'},{var,518,'_'}],
    [],
    [{tuple,518,[{atom,518,error},{atom,518,einval}]}]}]},
 {function,526,peername,1,
  [{clause,526,
    [{var,526,'S'}],
    [[{call,526,{atom,526,is_port},[{var,526,'S'}]}]],
    [{'case',527,
      {call,527,{atom,527,ctl_cmd},[{var,527,'S'},{integer,66,4},{nil,527}]},
      [{clause,528,
        [{tuple,528,
          [{atom,528,ok},
           {cons,528,
            {var,528,'F'},
            {cons,528,
             {var,528,'P1'},
             {cons,528,{var,528,'P0'},{var,528,'Addr'}}}}]}],
        [],
        [{match,529,
          {tuple,529,[{var,529,'IP'},{var,529,'_'}]},
          {call,529,{atom,529,get_ip},[{var,529,'F'},{var,529,'Addr'}]}},
         {tuple,530,
          [{atom,530,ok},
           {tuple,530,
            [{var,530,'IP'},
             {op,332,'bor',
              {op,332,'bsl',{var,530,'P1'},{integer,332,8}},
              {var,530,'P0'}}]}]}]},
       {clause,531,
        [{match,531,
          {tuple,531,[{atom,531,error},{var,531,'_'}]},
          {var,531,'Error'}}],
        [],
        [{var,531,'Error'}]}]}]}]},
 {function,534,setpeername,2,
  [{clause,534,
    [{var,534,'S'},{tuple,534,[{var,534,'IP'},{var,534,'Port'}]}],
    [[{call,534,{atom,534,is_port},[{var,534,'S'}]}]],
    [{'case',535,
      {call,535,
       {atom,535,ctl_cmd},
       [{var,535,'S'},
        {integer,82,20},
        {cons,535,
         {cons,307,
          {op,307,'band',
           {op,307,'bsr',{var,535,'Port'},{integer,307,8}},
           {integer,307,255}},
          {cons,307,
           {op,307,'band',{var,535,'Port'},{integer,307,255}},
           {nil,307}}},
         {cons,535,
          {call,535,{atom,535,ip_to_bytes},[{var,535,'IP'}]},
          {nil,535}}}]},
      [{clause,536,[{tuple,536,[{atom,536,ok},{nil,536}]}],[],[{atom,536,ok}]},
       {clause,537,
        [{match,537,
          {tuple,537,[{atom,537,error},{var,537,'_'}]},
          {var,537,'Error'}}],
        [],
        [{var,537,'Error'}]}]}]},
   {clause,539,
    [{var,539,'S'},{atom,539,undefined}],
    [[{call,539,{atom,539,is_port},[{var,539,'S'}]}]],
    [{'case',540,
      {call,540,{atom,540,ctl_cmd},[{var,540,'S'},{integer,82,20},{nil,540}]},
      [{clause,541,[{tuple,541,[{atom,541,ok},{nil,541}]}],[],[{atom,541,ok}]},
       {clause,542,
        [{match,542,
          {tuple,542,[{atom,542,error},{var,542,'_'}]},
          {var,542,'Error'}}],
        [],
        [{var,542,'Error'}]}]}]}]},
 {function,551,peernames,1,
  [{clause,551,
    [{var,551,'S'}],
    [[{call,551,{atom,551,is_port},[{var,551,'S'}]}]],
    [{call,552,{atom,552,peernames},[{var,552,'S'},{atom,552,undefined}]}]}]},
 {function,554,peernames,2,
  [{clause,554,
    [{var,554,'S'},
     {tuple,554,
      [{atom,554,sctp_assoc_change},
       {var,554,'_'},
       {var,554,'_'},
       {var,554,'_'},
       {var,554,'_'},
       {var,554,'AssocId'}]}],
    [[{call,554,{atom,554,is_port},[{var,554,'S'}]}]],
    [{call,555,{atom,555,peernames},[{var,555,'S'},{var,555,'AssocId'}]}]},
   {clause,556,
    [{var,556,'S'},{var,556,'AssocId'}],
    [[{call,557,{atom,557,is_port},[{var,557,'S'}]},
      {call,557,{atom,557,is_integer},[{var,557,'AssocId'}]}],
     [{call,558,{atom,558,is_port},[{var,558,'S'}]},
      {op,558,'=:=',{var,558,'AssocId'},{atom,558,undefined}}]],
    [{match,559,{var,559,'Q'},{atom,559,get}},
     {match,560,
      {var,560,'Type'},
      {cons,560,
       {cons,560,
        {atom,560,sctp_assoc_id},
        {cons,560,{integer,560,0},{nil,560}}},
       {nil,560}}},
     {'case',561,
      {call,561,
       {atom,561,type_value},
       [{var,561,'Q'},{var,561,'Type'},{var,561,'AssocId'}]},
      [{clause,562,
        [{atom,562,true}],
        [],
        [{'case',563,
          {call,563,
           {atom,563,ctl_cmd},
           [{var,564,'S'},
            {integer,92,30},
            {call,565,
             {atom,565,enc_value},
             [{var,565,'Q'},{var,565,'Type'},{var,565,'AssocId'}]}]},
          [{clause,566,
            [{tuple,566,[{atom,566,ok},{var,566,'Addrs'}]}],
            [],
            [{tuple,567,
              [{atom,567,ok},
               {call,567,{atom,567,get_addrs},[{var,567,'Addrs'}]}]}]},
           {clause,568,[{var,568,'Error'}],[],[{var,569,'Error'}]}]}]},
       {clause,571,
        [{atom,571,false}],
        [],
        [{tuple,572,[{atom,572,error},{atom,572,einval}]}]}]}]}]},
 {function,581,sockname,1,
  [{clause,581,
    [{var,581,'S'}],
    [[{call,581,{atom,581,is_port},[{var,581,'S'}]}]],
    [{'case',582,
      {call,582,{atom,582,ctl_cmd},[{var,582,'S'},{integer,67,5},{nil,582}]},
      [{clause,583,
        [{tuple,583,
          [{atom,583,ok},
           {cons,583,
            {var,583,'F'},
            {cons,583,
             {var,583,'P1'},
             {cons,583,{var,583,'P0'},{var,583,'Addr'}}}}]}],
        [],
        [{match,584,
          {tuple,584,[{var,584,'IP'},{var,584,'_'}]},
          {call,584,{atom,584,get_ip},[{var,584,'F'},{var,584,'Addr'}]}},
         {tuple,585,
          [{atom,585,ok},
           {tuple,585,
            [{var,585,'IP'},
             {op,332,'bor',
              {op,332,'bsl',{var,585,'P1'},{integer,332,8}},
              {var,585,'P0'}}]}]}]},
       {clause,586,
        [{match,586,
          {tuple,586,[{atom,586,error},{var,586,'_'}]},
          {var,586,'Error'}}],
        [],
        [{var,586,'Error'}]}]}]}]},
 {function,589,setsockname,2,
  [{clause,589,
    [{var,589,'S'},{tuple,589,[{var,589,'IP'},{var,589,'Port'}]}],
    [[{call,589,{atom,589,is_port},[{var,589,'S'}]}]],
    [{'case',590,
      {call,590,
       {atom,590,ctl_cmd},
       [{var,590,'S'},
        {integer,81,19},
        {cons,590,
         {cons,307,
          {op,307,'band',
           {op,307,'bsr',{var,590,'Port'},{integer,307,8}},
           {integer,307,255}},
          {cons,307,
           {op,307,'band',{var,590,'Port'},{integer,307,255}},
           {nil,307}}},
         {cons,590,
          {call,590,{atom,590,ip_to_bytes},[{var,590,'IP'}]},
          {nil,590}}}]},
      [{clause,591,[{tuple,591,[{atom,591,ok},{nil,591}]}],[],[{atom,591,ok}]},
       {clause,592,
        [{match,592,
          {tuple,592,[{atom,592,error},{var,592,'_'}]},
          {var,592,'Error'}}],
        [],
        [{var,592,'Error'}]}]}]},
   {clause,594,
    [{var,594,'S'},{atom,594,undefined}],
    [[{call,594,{atom,594,is_port},[{var,594,'S'}]}]],
    [{'case',595,
      {call,595,{atom,595,ctl_cmd},[{var,595,'S'},{integer,81,19},{nil,595}]},
      [{clause,596,[{tuple,596,[{atom,596,ok},{nil,596}]}],[],[{atom,596,ok}]},
       {clause,597,
        [{match,597,
          {tuple,597,[{atom,597,error},{var,597,'_'}]},
          {var,597,'Error'}}],
        [],
        [{var,597,'Error'}]}]}]}]},
 {function,606,socknames,1,
  [{clause,606,
    [{var,606,'S'}],
    [[{call,606,{atom,606,is_port},[{var,606,'S'}]}]],
    [{call,607,{atom,607,socknames},[{var,607,'S'},{atom,607,undefined}]}]}]},
 {function,609,socknames,2,
  [{clause,609,
    [{var,609,'S'},
     {tuple,609,
      [{atom,609,sctp_assoc_change},
       {var,609,'_'},
       {var,609,'_'},
       {var,609,'_'},
       {var,609,'_'},
       {var,609,'AssocId'}]}],
    [[{call,609,{atom,609,is_port},[{var,609,'S'}]}]],
    [{call,610,{atom,610,socknames},[{var,610,'S'},{var,610,'AssocId'}]}]},
   {clause,611,
    [{var,611,'S'},{var,611,'AssocId'}],
    [[{call,612,{atom,612,is_port},[{var,612,'S'}]},
      {call,612,{atom,612,is_integer},[{var,612,'AssocId'}]}],
     [{call,613,{atom,613,is_port},[{var,613,'S'}]},
      {op,613,'=:=',{var,613,'AssocId'},{atom,613,undefined}}]],
    [{match,614,{var,614,'Q'},{atom,614,get}},
     {match,615,
      {var,615,'Type'},
      {cons,615,
       {cons,615,
        {atom,615,sctp_assoc_id},
        {cons,615,{integer,615,0},{nil,615}}},
       {nil,615}}},
     {'case',616,
      {call,616,
       {atom,616,type_value},
       [{var,616,'Q'},{var,616,'Type'},{var,616,'AssocId'}]},
      [{clause,617,
        [{atom,617,true}],
        [],
        [{'case',618,
          {call,618,
           {atom,618,ctl_cmd},
           [{var,619,'S'},
            {integer,91,29},
            {call,620,
             {atom,620,enc_value},
             [{var,620,'Q'},{var,620,'Type'},{var,620,'AssocId'}]}]},
          [{clause,621,
            [{tuple,621,[{atom,621,ok},{var,621,'Addrs'}]}],
            [],
            [{tuple,622,
              [{atom,622,ok},
               {call,622,{atom,622,get_addrs},[{var,622,'Addrs'}]}]}]},
           {clause,623,[{var,623,'Error'}],[],[{var,624,'Error'}]}]}]},
       {clause,626,
        [{atom,626,false}],
        [],
        [{tuple,627,[{atom,627,error},{atom,627,einval}]}]}]}]}]},
 {function,639,setopt,3,
  [{clause,639,
    [{var,639,'S'},{var,639,'Opt'},{var,639,'Value'}],
    [[{call,639,{atom,639,is_port},[{var,639,'S'}]}]],
    [{call,640,
      {atom,640,setopts},
      [{var,640,'S'},
       {cons,640,
        {tuple,640,[{var,640,'Opt'},{var,640,'Value'}]},
        {nil,640}}]}]}]},
 {function,642,setopts,2,
  [{clause,642,
    [{var,642,'S'},{var,642,'Opts'}],
    [[{call,642,{atom,642,is_port},[{var,642,'S'}]}]],
    [{'case',643,
      {call,643,{atom,643,encode_opt_val},[{var,643,'Opts'}]},
      [{clause,644,
        [{tuple,644,[{atom,644,ok},{var,644,'Buf'}]}],
        [],
        [{'case',645,
          {call,645,
           {atom,645,ctl_cmd},
           [{var,645,'S'},{integer,69,7},{var,645,'Buf'}]},
          [{clause,646,
            [{tuple,646,[{atom,646,ok},{var,646,'_'}]}],
            [],
            [{atom,646,ok}]},
           {clause,647,
            [{match,647,
              {tuple,647,[{atom,647,error},{var,647,'_'}]},
              {var,647,'Error'}}],
            [],
            [{var,647,'Error'}]}]}]},
       {clause,649,[{var,649,'Error'}],[],[{var,649,'Error'}]}]}]}]},
 {function,660,getopt,2,
  [{clause,660,
    [{var,660,'S'},{var,660,'Opt'}],
    [[{call,660,{atom,660,is_port},[{var,660,'S'}]},
      {call,660,{atom,660,is_atom},[{var,660,'Opt'}]}]],
    [{'case',661,
      {call,661,
       {atom,661,getopts},
       [{var,661,'S'},{cons,661,{var,661,'Opt'},{nil,661}}]},
      [{clause,662,
        [{tuple,662,
          [{atom,662,ok},
           {cons,662,
            {tuple,662,[{var,662,'_'},{var,662,'Value'}]},
            {nil,662}}]}],
        [],
        [{tuple,662,[{atom,662,ok},{var,662,'Value'}]}]},
       {clause,663,[{var,663,'Error'}],[],[{var,663,'Error'}]}]}]}]},
 {function,666,getopts,2,
  [{clause,666,
    [{var,666,'S'},{var,666,'Opts'}],
    [[{call,666,{atom,666,is_port},[{var,666,'S'}]},
      {call,666,{atom,666,is_list},[{var,666,'Opts'}]}]],
    [{'case',667,
      {call,667,{atom,667,encode_opts},[{var,667,'Opts'}]},
      [{clause,668,
        [{tuple,668,[{atom,668,ok},{var,668,'Buf'}]}],
        [],
        [{'case',669,
          {call,669,
           {atom,669,ctl_cmd},
           [{var,669,'S'},{integer,70,8},{var,669,'Buf'}]},
          [{clause,670,
            [{tuple,670,[{atom,670,ok},{var,670,'Rep'}]}],
            [],
            [{call,672,{atom,672,decode_opt_val},[{var,672,'Rep'}]}]},
           {clause,673,
            [{atom,673,inet_reply}],
            [],
            [{'receive',675,
              [{clause,676,
                [{tuple,676,
                  [{atom,676,inet_reply},{var,676,'S'},{var,676,'Res'}]}],
                [],
                [{var,676,'Res'}]}]}]},
           {clause,678,
            [{match,678,
              {tuple,678,[{atom,678,error},{var,678,'_'}]},
              {var,678,'Error'}}],
            [],
            [{var,678,'Error'}]}]}]},
       {clause,680,[{var,680,'Error'}],[],[{var,680,'Error'}]}]}]}]},
 {function,694,chgopt,3,
  [{clause,694,
    [{var,694,'S'},{var,694,'Opt'},{var,694,'Value'}],
    [[{call,694,{atom,694,is_port},[{var,694,'S'}]}]],
    [{call,695,
      {atom,695,chgopts},
      [{var,695,'S'},
       {cons,695,
        {tuple,695,[{var,695,'Opt'},{var,695,'Value'}]},
        {nil,695}}]}]}]},
 {function,697,chgopts,2,
  [{clause,697,
    [{var,697,'S'},{var,697,'Opts'}],
    [[{call,697,{atom,697,is_port},[{var,697,'S'}]},
      {call,697,{atom,697,is_list},[{var,697,'Opts'}]}]],
    [{'case',698,
      {call,698,
       {atom,698,getopts},
       [{var,698,'S'},{call,698,{atom,698,need_template},[{var,698,'Opts'}]}]},
      [{clause,699,
        [{tuple,699,[{atom,699,ok},{var,699,'Templates'}]}],
        [],
        [{'try',700,
          [{call,700,
            {atom,700,merge_options},
            [{var,700,'Opts'},{var,700,'Templates'}]}],
          [{clause,701,
            [{var,701,'NewOpts'}],
            [],
            [{call,702,
              {atom,702,setopts},
              [{var,702,'S'},{var,702,'NewOpts'}]}]}],
          [{clause,704,
            [{tuple,704,[{atom,704,throw},{var,704,'Reason'},{var,704,'_'}]}],
            [],
            [{tuple,704,[{atom,704,error},{var,704,'Reason'}]}]}],
          []}]},
       {clause,706,[{var,706,'Error'}],[],[{var,706,'Error'}]}]}]}]},
 {function,725,getifaddrs,1,
  [{clause,725,
    [{var,725,'S'}],
    [[{call,725,{atom,725,is_port},[{var,725,'S'}]}]],
    [{'case',726,
      {call,726,{atom,726,ctl_cmd},[{var,726,'S'},{integer,87,25},{nil,726}]},
      [{clause,727,
        [{tuple,727,[{atom,727,ok},{var,727,'Data'}]}],
        [],
        [{tuple,728,
          [{atom,728,ok},
           {call,728,
            {atom,728,comp_ifaddrs},
            [{call,728,{atom,728,build_ifaddrs},[{var,728,'Data'}]},
             {call,728,{atom,728,ktree_empty},[]}]}]}]},
       {clause,729,
        [{tuple,729,[{atom,729,error},{atom,729,enotsup}]}],
        [],
        [{'case',730,
          {call,730,{atom,730,getiflist},[{var,730,'S'}]},
          [{clause,731,
            [{tuple,731,[{atom,731,ok},{var,731,'IFs'}]}],
            [],
            [{tuple,732,
              [{atom,732,ok},
               {call,732,
                {atom,732,getifaddrs_ifget},
                [{var,732,'S'},{var,732,'IFs'}]}]}]},
           {clause,733,[{var,733,'Err1'}],[],[{var,733,'Err1'}]}]}]},
       {clause,735,[{var,735,'Err2'}],[],[{var,735,'Err2'}]}]}]}]},
 {function,740,comp_ifaddrs,2,
  [{clause,740,
    [{cons,740,
      {tuple,740,[{var,740,'If'},{var,740,'Opts'}]},
      {var,740,'IfOpts'}},
     {var,740,'T'}],
    [],
    [{'case',741,
      {call,741,{atom,741,ktree_is_defined},[{var,741,'If'},{var,741,'T'}]},
      [{clause,742,
        [{atom,742,true}],
        [],
        [{match,743,
          {var,743,'OptSet'},
          {call,743,
           {atom,743,comp_ifaddrs_add},
           [{call,743,{atom,743,ktree_get},[{var,743,'If'},{var,743,'T'}]},
            {var,743,'Opts'}]}},
         {call,744,
          {atom,744,comp_ifaddrs},
          [{var,744,'IfOpts'},
           {call,744,
            {atom,744,ktree_update},
            [{var,744,'If'},{var,744,'OptSet'},{var,744,'T'}]}]}]},
       {clause,745,
        [{atom,745,false}],
        [],
        [{match,746,
          {var,746,'OptSet'},
          {call,746,
           {atom,746,comp_ifaddrs_add},
           [{call,746,{atom,746,ktree_empty},[]},{var,746,'Opts'}]}},
         {call,747,
          {atom,747,comp_ifaddrs},
          [{var,747,'IfOpts'},
           {call,747,
            {atom,747,ktree_insert},
            [{var,747,'If'},{var,747,'OptSet'},{var,747,'T'}]}]}]}]}]},
   {clause,749,
    [{nil,749},{var,749,'T'}],
    [],
    [{lc,750,
      {tuple,750,
       [{var,750,'If'},
        {call,750,
         {atom,750,ktree_keys},
         [{call,750,{atom,750,ktree_get},[{var,750,'If'},{var,750,'T'}]}]}]},
      [{generate,750,
        {var,750,'If'},
        {call,750,{atom,750,ktree_keys},[{var,750,'T'}]}}]}]}]},
 {function,752,comp_ifaddrs_add,2,
  [{clause,752,
    [{var,752,'OptSet'},{cons,752,{var,752,'Opt'},{var,752,'Opts'}}],
    [],
    [{'case',753,
      {call,753,
       {atom,753,ktree_is_defined},
       [{var,753,'Opt'},{var,753,'OptSet'}]},
      [{clause,754,
        [{atom,754,true}],
        [[{op,755,'=:=',
           {call,755,{atom,755,element},[{integer,755,1},{var,755,'Opt'}]},
           {atom,755,flags}}],
         [{op,756,'=:=',
           {call,756,{atom,756,element},[{integer,756,1},{var,756,'Opt'}]},
           {atom,756,hwaddr}}]],
        [{call,757,
          {atom,757,comp_ifaddrs_add},
          [{var,757,'OptSet'},{var,757,'Opts'}]}]},
       {clause,758,
        [{var,758,'_'}],
        [],
        [{call,759,
          {atom,759,comp_ifaddrs_add},
          [{call,759,
            {atom,759,ktree_insert},
            [{var,759,'Opt'},{atom,759,undefined},{var,759,'OptSet'}]},
           {var,759,'Opts'}]}]}]}]},
   {clause,761,[{var,761,'OptSet'},{nil,761}],[],[{var,761,'OptSet'}]}]},
 {function,765,getifaddrs_ifget,2,
  [{clause,765,[{var,765,'_'},{nil,765}],[],[{nil,765}]},
   {clause,766,
    [{var,766,'S'},{cons,766,{var,766,'IF'},{var,766,'IFs'}}],
    [],
    [{'case',767,
      {call,767,
       {atom,767,ifget},
       [{var,767,'S'},{var,767,'IF'},{cons,767,{atom,767,flags},{nil,767}}]},
      [{clause,768,
        [{tuple,768,
          [{atom,768,ok},
           {match,768,
            {cons,768,
             {tuple,768,[{atom,768,flags},{var,768,'Flags'}]},
             {nil,768}},
            {var,768,'FlagsVals'}}]}],
        [],
        [{match,769,
          {var,769,'BroadOpts'},
          {'case',770,
           {call,770,
            {atom,770,member},
            [{atom,770,broadcast},{var,770,'Flags'}]},
           [{clause,771,
             [{atom,771,true}],
             [],
             [{cons,772,
               {atom,772,broadaddr},
               {cons,772,{atom,772,hwaddr},{nil,772}}}]},
            {clause,773,
             [{atom,773,false}],
             [],
             [{cons,774,{atom,774,hwaddr},{nil,774}}]}]}},
         {match,776,
          {var,776,'P2POpts'},
          {'case',777,
           {call,777,
            {atom,777,member},
            [{atom,777,pointtopoint},{var,777,'Flags'}]},
           [{clause,778,
             [{atom,778,true}],
             [],
             [{cons,779,{atom,779,dstaddr},{var,779,'BroadOpts'}}]},
            {clause,780,[{atom,780,false}],[],[{var,781,'BroadOpts'}]}]}},
         {call,783,
          {atom,783,getifaddrs_ifget},
          [{var,783,'S'},
           {var,783,'IFs'},
           {var,783,'IF'},
           {var,783,'FlagsVals'},
           {cons,783,
            {atom,783,addr},
            {cons,783,{atom,783,netmask},{var,783,'P2POpts'}}}]}]},
       {clause,784,
        [{var,784,'_'}],
        [],
        [{call,785,
          {atom,785,getifaddrs_ifget},
          [{var,785,'S'},
           {var,785,'IFs'},
           {var,785,'IF'},
           {nil,785},
           {cons,785,
            {atom,785,addr},
            {cons,785,
             {atom,785,netmask},
             {cons,785,{atom,785,hwaddr},{nil,785}}}}]}]}]}]}]},
 {function,788,getifaddrs_ifget,5,
  [{clause,788,
    [{var,788,'S'},
     {var,788,'IFs'},
     {var,788,'IF'},
     {var,788,'FlagsVals'},
     {var,788,'Opts'}],
    [],
    [{match,789,
      {var,789,'OptVals'},
      {'case',790,
       {call,790,
        {atom,790,ifget},
        [{var,790,'S'},{var,790,'IF'},{var,790,'Opts'}]},
       [{clause,791,
         [{tuple,791,[{atom,791,ok},{var,791,'OVs'}]}],
         [],
         [{var,791,'OVs'}]},
        {clause,792,[{var,792,'_'}],[],[{nil,792}]}]}},
     {cons,794,
      {tuple,794,
       [{var,794,'IF'},
        {op,794,'++',{var,794,'FlagsVals'},{var,794,'OptVals'}}]},
      {call,794,
       {atom,794,getifaddrs_ifget},
       [{var,794,'S'},{var,794,'IFs'}]}}]}]},
 {function,804,getiflist,1,
  [{clause,804,
    [{var,804,'S'}],
    [[{call,804,{atom,804,is_port},[{var,804,'S'}]}]],
    [{'case',805,
      {call,805,{atom,805,ctl_cmd},[{var,805,'S'},{integer,83,21},{nil,805}]},
      [{clause,806,
        [{tuple,806,[{atom,806,ok},{var,806,'Data'}]}],
        [],
        [{tuple,806,
          [{atom,806,ok},
           {call,806,{atom,806,build_iflist},[{var,806,'Data'}]}]}]},
       {clause,807,
        [{match,807,
          {tuple,807,[{atom,807,error},{var,807,'_'}]},
          {var,807,'Error'}}],
        [],
        [{var,807,'Error'}]}]}]}]},
 {function,818,ifget,3,
  [{clause,818,
    [{var,818,'S'},{var,818,'Name'},{var,818,'Opts'}],
    [],
    [{'case',819,
      {call,819,{atom,819,encode_ifname},[{var,819,'Name'}]},
      [{clause,820,
        [{tuple,820,[{atom,820,ok},{var,820,'Buf1'}]}],
        [],
        [{'case',821,
          {call,821,{atom,821,encode_ifopts},[{var,821,'Opts'},{nil,821}]},
          [{clause,822,
            [{tuple,822,[{atom,822,ok},{var,822,'Buf2'}]}],
            [],
            [{'case',823,
              {call,823,
               {atom,823,ctl_cmd},
               [{var,823,'S'},
                {integer,84,22},
                {cons,823,
                 {var,823,'Buf1'},
                 {cons,823,{var,823,'Buf2'},{nil,823}}}]},
              [{clause,824,
                [{tuple,824,[{atom,824,ok},{var,824,'Data'}]}],
                [],
                [{call,824,
                  {atom,824,decode_ifopts},
                  [{var,824,'Data'},{nil,824}]}]},
               {clause,825,
                [{match,825,
                  {tuple,825,[{atom,825,error},{var,825,'_'}]},
                  {var,825,'Error'}}],
                [],
                [{var,825,'Error'}]}]}]},
           {clause,827,[{var,827,'Error'}],[],[{var,827,'Error'}]}]}]},
       {clause,829,[{var,829,'Error'}],[],[{var,829,'Error'}]}]}]}]},
 {function,840,ifset,3,
  [{clause,840,
    [{var,840,'S'},{var,840,'Name'},{var,840,'Opts'}],
    [],
    [{'case',841,
      {call,841,{atom,841,encode_ifname},[{var,841,'Name'}]},
      [{clause,842,
        [{tuple,842,[{atom,842,ok},{var,842,'Buf1'}]}],
        [],
        [{'case',843,
          {call,843,{atom,843,encode_ifopt_val},[{var,843,'Opts'},{nil,843}]},
          [{clause,844,
            [{tuple,844,[{atom,844,ok},{var,844,'Buf2'}]}],
            [],
            [{'case',845,
              {call,845,
               {atom,845,ctl_cmd},
               [{var,845,'S'},
                {integer,85,23},
                {cons,845,
                 {var,845,'Buf1'},
                 {cons,845,{var,845,'Buf2'},{nil,845}}}]},
              [{clause,846,
                [{tuple,846,[{atom,846,ok},{var,846,'_'}]}],
                [],
                [{atom,846,ok}]},
               {clause,847,
                [{match,847,
                  {tuple,847,[{atom,847,error},{var,847,'_'}]},
                  {var,847,'Error'}}],
                [],
                [{var,847,'Error'}]}]}]},
           {clause,849,[{var,849,'Error'}],[],[{var,849,'Error'}]}]}]},
       {clause,851,[{var,851,'Error'}],[],[{var,851,'Error'}]}]}]}]},
 {function,870,subscribe,2,
  [{clause,870,
    [{var,870,'S'},{var,870,'Sub'}],
    [[{call,870,{atom,870,is_port},[{var,870,'S'}]},
      {call,870,{atom,870,is_list},[{var,870,'Sub'}]}]],
    [{'case',871,
      {call,871,{atom,871,encode_subs},[{var,871,'Sub'}]},
      [{clause,872,
        [{tuple,872,[{atom,872,ok},{var,872,'Bytes'}]}],
        [],
        [{'case',873,
          {call,873,
           {atom,873,ctl_cmd},
           [{var,873,'S'},{integer,86,24},{var,873,'Bytes'}]},
          [{clause,874,
            [{tuple,874,[{atom,874,ok},{var,874,'Data'}]}],
            [],
            [{call,874,{atom,874,decode_subs},[{var,874,'Data'}]}]},
           {clause,875,
            [{match,875,
              {tuple,875,[{atom,875,error},{var,875,'_'}]},
              {var,875,'Error'}}],
            [],
            [{var,875,'Error'}]}]}]},
       {clause,877,[{var,877,'Error'}],[],[{var,877,'Error'}]}]}]}]},
 {function,888,getstat,2,
  [{clause,888,
    [{var,888,'S'},{var,888,'Stats'}],
    [[{call,888,{atom,888,is_port},[{var,888,'S'}]},
      {call,888,{atom,888,is_list},[{var,888,'Stats'}]}]],
    [{'case',889,
      {call,889,{atom,889,encode_stats},[{var,889,'Stats'}]},
      [{clause,890,
        [{tuple,890,[{atom,890,ok},{var,890,'Bytes'}]}],
        [],
        [{'case',891,
          {call,891,
           {atom,891,ctl_cmd},
           [{var,891,'S'},{integer,73,11},{var,891,'Bytes'}]},
          [{clause,892,
            [{tuple,892,[{atom,892,ok},{var,892,'Data'}]}],
            [],
            [{call,892,{atom,892,decode_stats},[{var,892,'Data'}]}]},
           {clause,893,
            [{match,893,
              {tuple,893,[{atom,893,error},{var,893,'_'}]},
              {var,893,'Error'}}],
            [],
            [{var,893,'Error'}]}]}]},
       {clause,895,[{var,895,'Error'}],[],[{var,895,'Error'}]}]}]}]},
 {function,906,getfd,1,
  [{clause,906,
    [{var,906,'S'}],
    [[{call,906,{atom,906,is_port},[{var,906,'S'}]}]],
    [{'case',907,
      {call,907,{atom,907,ctl_cmd},[{var,907,'S'},{integer,76,14},{nil,907}]},
      [{clause,908,
        [{tuple,908,
          [{atom,908,ok},
           {cons,908,
            {var,908,'S3'},
            {cons,908,
             {var,908,'S2'},
             {cons,908,
              {var,908,'S1'},
              {cons,908,{var,908,'S0'},{nil,908}}}}}]}],
        [],
        [{tuple,908,
          [{atom,908,ok},
           {op,326,'bor',
            {op,326,'bor',
             {op,326,'bor',
              {op,326,'bsl',{var,908,'S3'},{integer,326,24}},
              {op,326,'bsl',{var,908,'S2'},{integer,326,16}}},
             {op,326,'bsl',{var,908,'S1'},{integer,326,8}}},
            {var,908,'S0'}}]}]},
       {clause,909,
        [{match,909,
          {tuple,909,[{atom,909,error},{var,909,'_'}]},
          {var,909,'Error'}}],
        [],
        [{var,909,'Error'}]}]}]}]},
 {function,920,ignorefd,2,
  [{clause,920,
    [{var,920,'S'},{var,920,'Bool'}],
    [[{call,920,{atom,920,is_port},[{var,920,'S'}]}]],
    [{match,921,
      {var,921,'Val'},
      {'if',921,
       [{clause,921,[],[[{var,921,'Bool'}]],[{integer,921,1}]},
        {clause,921,[],[[{atom,921,true}]],[{integer,921,0}]}]}},
     {'case',922,
      {call,922,
       {atom,922,ctl_cmd},
       [{var,922,'S'},{integer,90,28},{cons,922,{var,922,'Val'},{nil,922}}]},
      [{clause,923,
        [{tuple,923,[{atom,923,ok},{var,923,'_'}]}],
        [],
        [{atom,923,ok}]},
       {clause,924,[{var,924,'Error'}],[],[{var,924,'Error'}]}]}]}]},
 {function,935,getindex,1,
  [{clause,935,
    [{var,935,'S'}],
    [[{call,935,{atom,935,is_port},[{var,935,'S'}]}]],
    [{tuple,937,[{atom,937,error},{atom,937,einval}]}]}]},
 {function,947,gettype,1,
  [{clause,947,
    [{var,947,'S'}],
    [[{call,947,{atom,947,is_port},[{var,947,'S'}]}]],
    [{'case',948,
      {call,948,{atom,948,ctl_cmd},[{var,948,'S'},{integer,77,15},{nil,948}]},
      [{clause,949,
        [{tuple,949,
          [{atom,949,ok},
           {cons,949,
            {var,949,'F3'},
            {cons,949,
             {var,949,'F2'},
             {cons,949,
              {var,949,'F1'},
              {cons,949,
               {var,949,'F0'},
               {cons,949,
                {var,949,'T3'},
                {cons,949,
                 {var,949,'T2'},
                 {cons,949,
                  {var,949,'T1'},
                  {cons,949,{var,949,'T0'},{nil,949}}}}}}}}}]}],
        [],
        [{match,950,
          {var,950,'Family'},
          {'case',950,
           {op,326,'bor',
            {op,326,'bor',
             {op,326,'bor',
              {op,326,'bsl',{var,950,'F3'},{integer,326,24}},
              {op,326,'bsl',{var,950,'F2'},{integer,326,16}}},
             {op,326,'bsl',{var,950,'F1'},{integer,326,8}}},
            {var,950,'F0'}},
           [{clause,28,[{integer,28,1}],[],[{atom,951,inet}]},
            {clause,29,[{integer,29,2}],[],[{atom,952,inet6}]},
            {clause,953,[{var,953,'_'}],[],[{atom,953,undefined}]}]}},
         {match,955,
          {var,955,'Type'},
          {'case',955,
           {op,326,'bor',
            {op,326,'bor',
             {op,326,'bor',
              {op,326,'bsl',{var,955,'T3'},{integer,326,24}},
              {op,326,'bsl',{var,955,'T2'},{integer,326,16}}},
             {op,326,'bsl',{var,955,'T1'},{integer,326,8}}},
            {var,955,'T0'}},
           [{clause,34,[{integer,34,1}],[],[{atom,956,stream}]},
            {clause,35,[{integer,35,2}],[],[{atom,957,dgram}]},
            {clause,36,[{integer,36,3}],[],[{atom,958,seqpacket}]},
            {clause,959,[{var,959,'_'}],[],[{atom,959,undefined}]}]}},
         {tuple,961,
          [{atom,961,ok},{tuple,961,[{var,961,'Family'},{var,961,'Type'}]}]}]},
       {clause,962,
        [{match,962,
          {tuple,962,[{atom,962,error},{var,962,'_'}]},
          {var,962,'Error'}}],
        [],
        [{var,962,'Error'}]}]}]}]},
 {function,965,getprotocol,1,
  [{clause,965,
    [{var,965,'S'}],
    [[{call,965,{atom,965,is_port},[{var,965,'S'}]}]],
    [{match,966,
      {tuple,966,[{atom,966,name},{var,966,'Drv'}]},
      {call,966,
       {remote,966,{atom,966,erlang},{atom,966,port_info}},
       [{var,966,'S'},{atom,966,name}]}},
     {call,967,{atom,967,drv2protocol},[{var,967,'Drv'}]}]}]},
 {function,986,getstatus,1,
  [{clause,986,
    [{var,986,'S'}],
    [[{call,986,{atom,986,is_port},[{var,986,'S'}]}]],
    [{'case',987,
      {call,987,{atom,987,ctl_cmd},[{var,987,'S'},{integer,78,16},{nil,987}]},
      [{clause,988,
        [{tuple,988,
          [{atom,988,ok},
           {cons,988,
            {var,988,'S3'},
            {cons,988,
             {var,988,'S2'},
             {cons,988,
              {var,988,'S1'},
              {cons,988,{var,988,'S0'},{nil,988}}}}}]}],
        [],
        [{tuple,989,
          [{atom,989,ok},
           {call,989,
            {atom,989,dec_status},
            [{op,326,'bor',
              {op,326,'bor',
               {op,326,'bor',
                {op,326,'bsl',{var,989,'S3'},{integer,326,24}},
                {op,326,'bsl',{var,989,'S2'},{integer,326,16}}},
               {op,326,'bsl',{var,989,'S1'},{integer,326,8}}},
              {var,989,'S0'}}]}]}]},
       {clause,990,
        [{match,990,
          {tuple,990,[{atom,990,error},{var,990,'_'}]},
          {var,990,'Error'}}],
        [],
        [{var,990,'Error'}]}]}]}]},
 {function,1001,gethostname,1,
  [{clause,1001,
    [{var,1001,'S'}],
    [[{call,1001,{atom,1001,is_port},[{var,1001,'S'}]}]],
    [{call,1002,
      {atom,1002,ctl_cmd},
      [{var,1002,'S'},{integer,74,12},{nil,1002}]}]}]},
 {function,1012,getservbyname,3,
  [{clause,1012,
    [{var,1012,'S'},{var,1012,'Name'},{var,1012,'Proto'}],
    [[{call,1012,{atom,1012,is_port},[{var,1012,'S'}]},
      {call,1012,{atom,1012,is_atom},[{var,1012,'Name'}]},
      {call,1012,{atom,1012,is_atom},[{var,1012,'Proto'}]}]],
    [{call,1013,
      {atom,1013,getservbyname1},
      [{var,1013,'S'},
       {call,1013,{atom,1013,atom_to_list},[{var,1013,'Name'}]},
       {call,1013,{atom,1013,atom_to_list},[{var,1013,'Proto'}]}]}]},
   {clause,1014,
    [{var,1014,'S'},{var,1014,'Name'},{var,1014,'Proto'}],
    [[{call,1014,{atom,1014,is_port},[{var,1014,'S'}]},
      {call,1014,{atom,1014,is_atom},[{var,1014,'Name'}]},
      {call,1014,{atom,1014,is_list},[{var,1014,'Proto'}]}]],
    [{call,1015,
      {atom,1015,getservbyname1},
      [{var,1015,'S'},
       {call,1015,{atom,1015,atom_to_list},[{var,1015,'Name'}]},
       {var,1015,'Proto'}]}]},
   {clause,1016,
    [{var,1016,'S'},{var,1016,'Name'},{var,1016,'Proto'}],
    [[{call,1016,{atom,1016,is_port},[{var,1016,'S'}]},
      {call,1016,{atom,1016,is_list},[{var,1016,'Name'}]},
      {call,1016,{atom,1016,is_atom},[{var,1016,'Proto'}]}]],
    [{call,1017,
      {atom,1017,getservbyname1},
      [{var,1017,'S'},
       {var,1017,'Name'},
       {call,1017,{atom,1017,atom_to_list},[{var,1017,'Proto'}]}]}]},
   {clause,1018,
    [{var,1018,'S'},{var,1018,'Name'},{var,1018,'Proto'}],
    [[{call,1018,{atom,1018,is_port},[{var,1018,'S'}]},
      {call,1018,{atom,1018,is_list},[{var,1018,'Name'}]},
      {call,1018,{atom,1018,is_list},[{var,1018,'Proto'}]}]],
    [{call,1019,
      {atom,1019,getservbyname1},
      [{var,1019,'S'},{var,1019,'Name'},{var,1019,'Proto'}]}]},
   {clause,1020,
    [{var,1020,'_'},{var,1020,'_'},{var,1020,'_'}],
    [],
    [{tuple,1021,[{atom,1021,error},{atom,1021,einval}]}]}]},
 {function,1023,getservbyname1,3,
  [{clause,1023,
    [{var,1023,'S'},{var,1023,'Name'},{var,1023,'Proto'}],
    [],
    [{match,1024,
      {var,1024,'L1'},
      {call,1024,{atom,1024,length},[{var,1024,'Name'}]}},
     {match,1025,
      {var,1025,'L2'},
      {call,1025,{atom,1025,length},[{var,1025,'Proto'}]}},
     {'if',1026,
      [{clause,1026,[],
        [[{op,1026,'>',{var,1026,'L1'},{integer,1026,255}}]],
        [{tuple,1026,[{atom,1026,error},{atom,1026,einval}]}]},
       {clause,1027,[],
        [[{op,1027,'>',{var,1027,'L2'},{integer,1027,255}}]],
        [{tuple,1027,[{atom,1027,error},{atom,1027,einval}]}]},
       {clause,1028,[],
        [[{atom,1028,true}]],
        [{'case',1029,
          {call,1029,
           {atom,1029,ctl_cmd},
           [{var,1029,'S'},
            {integer,79,17},
            {cons,1029,
             {var,1029,'L1'},
             {cons,1029,
              {var,1029,'Name'},
              {cons,1029,
               {var,1029,'L2'},
               {cons,1029,{var,1029,'Proto'},{nil,1029}}}}}]},
          [{clause,1030,
            [{tuple,1030,
              [{atom,1030,ok},
               {cons,1030,
                {var,1030,'P1'},
                {cons,1030,{var,1030,'P0'},{nil,1030}}}]}],
            [],
            [{tuple,1031,
              [{atom,1031,ok},
               {op,332,'bor',
                {op,332,'bsl',{var,1031,'P1'},{integer,332,8}},
                {var,1031,'P0'}}]}]},
           {clause,1032,
            [{match,1032,
              {tuple,1032,[{atom,1032,error},{var,1032,'_'}]},
              {var,1032,'Error'}}],
            [],
            [{var,1033,'Error'}]}]}]}]}]}]},
 {function,1045,getservbyport,3,
  [{clause,1045,
    [{var,1045,'S'},{var,1045,'Port'},{var,1045,'Proto'}],
    [[{call,1045,{atom,1045,is_port},[{var,1045,'S'}]},
      {call,1045,{atom,1045,is_atom},[{var,1045,'Proto'}]}]],
    [{call,1046,
      {atom,1046,getservbyport1},
      [{var,1046,'S'},
       {var,1046,'Port'},
       {call,1046,{atom,1046,atom_to_list},[{var,1046,'Proto'}]}]}]},
   {clause,1047,
    [{var,1047,'S'},{var,1047,'Port'},{var,1047,'Proto'}],
    [[{call,1047,{atom,1047,is_port},[{var,1047,'S'}]},
      {call,1047,{atom,1047,is_list},[{var,1047,'Proto'}]}]],
    [{call,1048,
      {atom,1048,getservbyport1},
      [{var,1048,'S'},{var,1048,'Port'},{var,1048,'Proto'}]}]},
   {clause,1049,
    [{var,1049,'_'},{var,1049,'_'},{var,1049,'_'}],
    [],
    [{tuple,1050,[{atom,1050,error},{atom,1050,einval}]}]}]},
 {function,1052,getservbyport1,3,
  [{clause,1052,
    [{var,1052,'S'},{var,1052,'Port'},{var,1052,'Proto'}],
    [],
    [{match,1053,
      {var,1053,'L'},
      {call,1053,{atom,1053,length},[{var,1053,'Proto'}]}},
     {'if',1054,
      [{clause,1054,[],
        [[{op,1054,'<',{var,1054,'Port'},{integer,1054,0}}]],
        [{tuple,1054,[{atom,1054,error},{atom,1054,einval}]}]},
       {clause,1055,[],
        [[{op,1055,'>',{var,1055,'Port'},{integer,1055,65535}}]],
        [{tuple,1055,[{atom,1055,error},{atom,1055,einval}]}]},
       {clause,1056,[],
        [[{op,1056,'>',{var,1056,'L'},{integer,1056,255}}]],
        [{tuple,1056,[{atom,1056,error},{atom,1056,einval}]}]},
       {clause,1057,[],
        [[{atom,1057,true}]],
        [{'case',1058,
          {call,1058,
           {atom,1058,ctl_cmd},
           [{var,1058,'S'},
            {integer,80,18},
            {cons,1058,
             {cons,307,
              {op,307,'band',
               {op,307,'bsr',{var,1058,'Port'},{integer,307,8}},
               {integer,307,255}},
              {cons,307,
               {op,307,'band',{var,1058,'Port'},{integer,307,255}},
               {nil,307}}},
             {cons,1058,
              {var,1058,'L'},
              {cons,1058,{var,1058,'Proto'},{nil,1058}}}}]},
          [{clause,1059,
            [{tuple,1059,[{atom,1059,ok},{var,1059,'Name'}]}],
            [],
            [{tuple,1059,[{atom,1059,ok},{var,1059,'Name'}]}]},
           {clause,1060,
            [{match,1060,
              {tuple,1060,[{atom,1060,error},{var,1060,'_'}]},
              {var,1060,'Error'}}],
            [],
            [{var,1060,'Error'}]}]}]}]}]}]},
 {function,1071,unrecv,2,
  [{clause,1071,
    [{var,1071,'S'},{var,1071,'Data'}],
    [],
    [{'case',1072,
      {call,1072,
       {atom,1072,ctl_cmd},
       [{var,1072,'S'},{integer,98,43},{var,1072,'Data'}]},
      [{clause,1073,
        [{tuple,1073,[{atom,1073,ok},{var,1073,'_'}]}],
        [],
        [{atom,1073,ok}]},
       {clause,1074,
        [{match,1074,
          {tuple,1074,[{atom,1074,error},{var,1074,'_'}]},
          {var,1074,'Error'}}],
        [],
        [{var,1074,'Error'}]}]}]}]},
 {function,1089,detach,1,
  [{clause,1089,
    [{var,1089,'S'}],
    [[{call,1089,{atom,1089,is_port},[{var,1089,'S'}]}]],
    [{call,1090,{atom,1090,unlink},[{var,1090,'S'}]},{atom,1091,ok}]}]},
 {function,1093,attach,1,
  [{clause,1093,
    [{var,1093,'S'}],
    [[{call,1093,{atom,1093,is_port},[{var,1093,'S'}]}]],
    [{'try',1094,
      [{call,1094,
        {remote,1094,{atom,1094,erlang},{atom,1094,port_connect}},
        [{var,1094,'S'},{call,1094,{atom,1094,self},[]}]}],
      [{clause,1095,
        [{atom,1095,true}],
        [],
        [{call,1095,{atom,1095,link},[{var,1095,'S'}]},{atom,1095,ok}]}],
      [{clause,1097,
        [{tuple,1097,[{atom,1097,error},{var,1097,'Reason'},{var,1097,'_'}]}],
        [],
        [{tuple,1097,[{atom,1097,error},{var,1097,'Reason'}]}]}],
      []}]}]},
 {function,1106,is_sockopt_val,2,
  [{clause,1106,
    [{var,1106,'Opt'},{var,1106,'Val'}],
    [],
    [{match,1107,
      {var,1107,'Type'},
      {call,1107,{atom,1107,type_opt},[{atom,1107,set},{var,1107,'Opt'}]}},
     {'try',1108,
      [{call,1108,
        {atom,1108,type_value},
        [{atom,1108,set},{var,1108,'Type'},{var,1108,'Val'}]}],
      [],
      [{clause,1110,
        [{tuple,1110,[{atom,1110,throw},{var,1110,'_'},{var,1110,'_'}]}],
        [],
        [{atom,1110,false}]}],
      []}]}]},
 {function,1116,enc_opt,1,
  [{clause,1116,[{atom,1116,reuseaddr}],[],[{integer,115,0}]},
   {clause,1117,[{atom,1117,keepalive}],[],[{integer,116,1}]},
   {clause,1118,[{atom,1118,dontroute}],[],[{integer,117,2}]},
   {clause,1119,[{atom,1119,linger}],[],[{integer,118,3}]},
   {clause,1120,[{atom,1120,broadcast}],[],[{integer,119,4}]},
   {clause,1121,[{atom,1121,sndbuf}],[],[{integer,121,6}]},
   {clause,1122,[{atom,1122,recbuf}],[],[{integer,122,7}]},
   {clause,1123,[{atom,1123,priority}],[],[{integer,123,8}]},
   {clause,1124,[{atom,1124,tos}],[],[{integer,124,9}]},
   {clause,1125,[{atom,1125,nodelay}],[],[{integer,125,10}]},
   {clause,1126,[{atom,1126,multicast_if}],[],[{integer,126,11}]},
   {clause,1127,[{atom,1127,multicast_ttl}],[],[{integer,127,12}]},
   {clause,1128,[{atom,1128,multicast_loop}],[],[{integer,128,13}]},
   {clause,1129,[{atom,1129,add_membership}],[],[{integer,129,14}]},
   {clause,1130,[{atom,1130,drop_membership}],[],[{integer,130,15}]},
   {clause,1131,[{atom,1131,ipv6_v6only}],[],[{integer,131,16}]},
   {clause,1132,[{atom,1132,buffer}],[],[{integer,133,20}]},
   {clause,1133,[{atom,1133,header}],[],[{integer,134,21}]},
   {clause,1134,[{atom,1134,active}],[],[{integer,135,22}]},
   {clause,1135,[{atom,1135,packet}],[],[{integer,136,23}]},
   {clause,1136,[{atom,1136,mode}],[],[{integer,137,24}]},
   {clause,1137,[{atom,1137,deliver}],[],[{integer,138,25}]},
   {clause,1138,[{atom,1138,exit_on_close}],[],[{integer,139,26}]},
   {clause,1139,[{atom,1139,high_watermark}],[],[{integer,140,27}]},
   {clause,1140,[{atom,1140,low_watermark}],[],[{integer,141,28}]},
   {clause,1141,[{atom,1141,high_msgq_watermark}],[],[{integer,148,36}]},
   {clause,1142,[{atom,1142,low_msgq_watermark}],[],[{integer,149,37}]},
   {clause,1143,[{atom,1143,send_timeout}],[],[{integer,142,30}]},
   {clause,1144,[{atom,1144,send_timeout_close}],[],[{integer,147,35}]},
   {clause,1145,[{atom,1145,delay_send}],[],[{integer,143,31}]},
   {clause,1146,[{atom,1146,packet_size}],[],[{integer,144,32}]},
   {clause,1147,[{atom,1147,read_packets}],[],[{integer,145,33}]},
   {clause,1148,[{atom,1148,netns}],[],[{integer,150,38}]},
   {clause,1149,[{atom,1149,show_econnreset}],[],[{integer,151,39}]},
   {clause,1150,[{atom,1150,raw}],[],[{integer,146,34}]},
   {clause,1152,[{atom,1152,sctp_rtoinfo}],[],[{integer,153,100}]},
   {clause,1153,[{atom,1153,sctp_associnfo}],[],[{integer,154,101}]},
   {clause,1154,[{atom,1154,sctp_initmsg}],[],[{integer,155,102}]},
   {clause,1155,[{atom,1155,sctp_autoclose}],[],[{integer,156,103}]},
   {clause,1156,[{atom,1156,sctp_nodelay}],[],[{integer,157,104}]},
   {clause,1157,[{atom,1157,sctp_disable_fragments}],[],[{integer,158,105}]},
   {clause,1158,
    [{atom,1158,sctp_i_want_mapped_v4_addr}],
    [],
    [{integer,159,106}]},
   {clause,1159,[{atom,1159,sctp_maxseg}],[],[{integer,160,107}]},
   {clause,1160,
    [{atom,1160,sctp_set_peer_primary_addr}],
    [],
    [{integer,161,108}]},
   {clause,1161,[{atom,1161,sctp_primary_addr}],[],[{integer,162,109}]},
   {clause,1162,[{atom,1162,sctp_adaptation_layer}],[],[{integer,163,110}]},
   {clause,1163,[{atom,1163,sctp_peer_addr_params}],[],[{integer,164,111}]},
   {clause,1164,[{atom,1164,sctp_default_send_param}],[],[{integer,165,112}]},
   {clause,1165,[{atom,1165,sctp_events}],[],[{integer,166,113}]},
   {clause,1166,[{atom,1166,sctp_delayed_ack_time}],[],[{integer,167,114}]},
   {clause,1167,[{atom,1167,sctp_status}],[],[{integer,168,115}]},
   {clause,1168,
    [{atom,1168,sctp_get_peer_addr_info}],
    [],
    [{integer,169,116}]}]},
 {function,1174,dec_opt,1,
  [{clause,1174,[{integer,115,0}],[],[{atom,1174,reuseaddr}]},
   {clause,1175,[{integer,116,1}],[],[{atom,1175,keepalive}]},
   {clause,1176,[{integer,117,2}],[],[{atom,1176,dontroute}]},
   {clause,1177,[{integer,118,3}],[],[{atom,1177,linger}]},
   {clause,1178,[{integer,119,4}],[],[{atom,1178,broadcast}]},
   {clause,1179,[{integer,121,6}],[],[{atom,1179,sndbuf}]},
   {clause,1180,[{integer,122,7}],[],[{atom,1180,recbuf}]},
   {clause,1181,[{integer,123,8}],[],[{atom,1181,priority}]},
   {clause,1182,[{integer,124,9}],[],[{atom,1182,tos}]},
   {clause,1183,[{integer,125,10}],[],[{atom,1183,nodelay}]},
   {clause,1184,[{integer,126,11}],[],[{atom,1184,multicast_if}]},
   {clause,1185,[{integer,127,12}],[],[{atom,1185,multicast_ttl}]},
   {clause,1186,[{integer,128,13}],[],[{atom,1186,multicast_loop}]},
   {clause,1187,[{integer,129,14}],[],[{atom,1187,add_membership}]},
   {clause,1188,[{integer,130,15}],[],[{atom,1188,drop_membership}]},
   {clause,1189,[{integer,131,16}],[],[{atom,1189,ipv6_v6only}]},
   {clause,1190,[{integer,133,20}],[],[{atom,1190,buffer}]},
   {clause,1191,[{integer,134,21}],[],[{atom,1191,header}]},
   {clause,1192,[{integer,135,22}],[],[{atom,1192,active}]},
   {clause,1193,[{integer,136,23}],[],[{atom,1193,packet}]},
   {clause,1194,[{integer,137,24}],[],[{atom,1194,mode}]},
   {clause,1195,[{integer,138,25}],[],[{atom,1195,deliver}]},
   {clause,1196,[{integer,139,26}],[],[{atom,1196,exit_on_close}]},
   {clause,1197,[{integer,140,27}],[],[{atom,1197,high_watermark}]},
   {clause,1198,[{integer,141,28}],[],[{atom,1198,low_watermark}]},
   {clause,1199,[{integer,148,36}],[],[{atom,1199,high_msgq_watermark}]},
   {clause,1200,[{integer,149,37}],[],[{atom,1200,low_msgq_watermark}]},
   {clause,1201,[{integer,142,30}],[],[{atom,1201,send_timeout}]},
   {clause,1202,[{integer,147,35}],[],[{atom,1202,send_timeout_close}]},
   {clause,1203,[{integer,143,31}],[],[{atom,1203,delay_send}]},
   {clause,1204,[{integer,144,32}],[],[{atom,1204,packet_size}]},
   {clause,1205,[{integer,145,33}],[],[{atom,1205,read_packets}]},
   {clause,1206,[{integer,150,38}],[],[{atom,1206,netns}]},
   {clause,1207,[{integer,151,39}],[],[{atom,1207,show_econnreset}]},
   {clause,1208,[{integer,146,34}],[],[{atom,1208,raw}]},
   {clause,1209,
    [{var,1209,'I'}],
    [[{call,1209,{atom,1209,is_integer},[{var,1209,'I'}]}]],
    [{atom,1209,undefined}]}]},
 {function,1229,type_opt,2,
  [{clause,1229,
    [{atom,1229,get},{atom,1229,raw}],
    [],
    [{cons,1229,
      {tuple,1229,
       [{cons,1229,{atom,1229,int},{nil,1229}},
        {cons,1229,{atom,1229,int},{nil,1229}},
        {cons,1229,{atom,1229,binary_or_uint},{nil,1229}}]},
      {nil,1229}}]},
   {clause,1230,
    [{var,1230,'_'},{atom,1230,raw}],
    [],
    [{tuple,1230,[{atom,1230,int},{atom,1230,int},{atom,1230,binary}]}]},
   {clause,1233,
    [{atom,1233,get},{atom,1233,sctp_status}],
    [],
    [{cons,1234,
      {tuple,1234,
       [{atom,1234,record},
        {tuple,1234,
         [{atom,1234,sctp_status},
          {cons,1235,{atom,1235,sctp_assoc_id},{nil,1235}},
          {nil,1236},
          {nil,1236},
          {nil,1236},
          {nil,1236},
          {nil,1236},
          {nil,1236},
          {nil,1236},
          {nil,1236}]}]},
      {nil,1236}}]},
   {clause,1237,
    [{atom,1237,get},{atom,1237,sctp_get_peer_addr_info}],
    [],
    [{cons,1238,
      {tuple,1238,
       [{atom,1238,record},
        {tuple,1238,
         [{atom,1238,sctp_paddrinfo},
          {cons,1239,
           {cons,1239,
            {atom,1239,sctp_assoc_id},
            {cons,1239,{integer,1239,0},{nil,1239}}},
           {nil,1239}},
          {cons,1240,
           {cons,1240,
            {atom,1240,addr},
            {cons,1240,
             {tuple,1240,[{atom,1240,any},{integer,1240,0}]},
             {nil,1240}}},
           {nil,1240}},
          {nil,1241},
          {nil,1241},
          {nil,1241},
          {nil,1241},
          {nil,1241}]}]},
      {nil,1241}}]},
   {clause,1242,
    [{var,1242,'_'},{var,1242,'Opt'}],
    [],
    [{call,1243,{atom,1243,type_opt_1},[{var,1243,'Opt'}]}]}]},
 {function,1247,type_opt_1,1,
  [{clause,1247,[{atom,1247,reuseaddr}],[],[{atom,1247,bool}]},
   {clause,1248,[{atom,1248,keepalive}],[],[{atom,1248,bool}]},
   {clause,1249,[{atom,1249,dontroute}],[],[{atom,1249,bool}]},
   {clause,1250,
    [{atom,1250,linger}],
    [],
    [{tuple,1250,[{atom,1250,bool},{atom,1250,int}]}]},
   {clause,1251,[{atom,1251,broadcast}],[],[{atom,1251,bool}]},
   {clause,1252,[{atom,1252,sndbuf}],[],[{atom,1252,int}]},
   {clause,1253,[{atom,1253,recbuf}],[],[{atom,1253,int}]},
   {clause,1254,[{atom,1254,priority}],[],[{atom,1254,int}]},
   {clause,1255,[{atom,1255,tos}],[],[{atom,1255,int}]},
   {clause,1256,[{atom,1256,nodelay}],[],[{atom,1256,bool}]},
   {clause,1257,[{atom,1257,ipv6_v6only}],[],[{atom,1257,bool}]},
   {clause,1259,[{atom,1259,multicast_ttl}],[],[{atom,1259,int}]},
   {clause,1260,[{atom,1260,multicast_loop}],[],[{atom,1260,bool}]},
   {clause,1261,[{atom,1261,multicast_if}],[],[{atom,1261,ip}]},
   {clause,1262,
    [{atom,1262,add_membership}],
    [],
    [{tuple,1262,[{atom,1262,ip},{atom,1262,ip}]}]},
   {clause,1263,
    [{atom,1263,drop_membership}],
    [],
    [{tuple,1263,[{atom,1263,ip},{atom,1263,ip}]}]},
   {clause,1265,[{atom,1265,header}],[],[{atom,1265,uint}]},
   {clause,1266,[{atom,1266,buffer}],[],[{atom,1266,int}]},
   {clause,1267,
    [{atom,1267,active}],
    [],
    [{tuple,1268,
      [{atom,1268,enum},
       {cons,1268,
        {tuple,1268,[{atom,1268,false},{integer,47,0}]},
        {cons,1269,
         {tuple,1269,[{atom,1269,true},{integer,48,1}]},
         {cons,1270,
          {tuple,1270,[{atom,1270,once},{integer,49,2}]},
          {cons,1271,
           {tuple,1271,[{atom,1271,multi},{integer,50,3}]},
           {nil,1271}}}}}]}]},
   {clause,1272,
    [{atom,1272,packet}],
    [],
    [{tuple,1273,
      [{atom,1273,enum},
       {cons,1273,
        {tuple,1273,[{integer,1273,0},{integer,181,0}]},
        {cons,1274,
         {tuple,1274,[{integer,1274,1},{integer,182,1}]},
         {cons,1275,
          {tuple,1275,[{integer,1275,2},{integer,183,2}]},
          {cons,1276,
           {tuple,1276,[{integer,1276,4},{integer,184,3}]},
           {cons,1277,
            {tuple,1277,[{atom,1277,raw},{integer,181,0}]},
            {cons,1278,
             {tuple,1278,[{atom,1278,sunrm},{integer,186,5}]},
             {cons,1279,
              {tuple,1279,[{atom,1279,asn1},{integer,185,4}]},
              {cons,1280,
               {tuple,1280,[{atom,1280,cdr},{integer,187,6}]},
               {cons,1281,
                {tuple,1281,[{atom,1281,fcgi},{integer,188,7}]},
                {cons,1282,
                 {tuple,1282,[{atom,1282,line},{integer,189,8}]},
                 {cons,1283,
                  {tuple,1283,[{atom,1283,tpkt},{integer,190,9}]},
                  {cons,1284,
                   {tuple,1284,[{atom,1284,http},{integer,191,10}]},
                   {cons,1285,
                    {tuple,1285,[{atom,1285,httph},{integer,192,11}]},
                    {cons,1286,
                     {tuple,1286,[{atom,1286,http_bin},{integer,194,13}]},
                     {cons,1287,
                      {tuple,1287,[{atom,1287,httph_bin},{integer,195,14}]},
                      {cons,1288,
                       {tuple,1288,[{atom,1288,ssl},{integer,193,12}]},
                       {cons,1289,
                        {tuple,1289,[{atom,1289,ssl_tls},{integer,193,12}]},
                        {nil,1289}}}}}}}}}}}}}}}}}}]}]},
   {clause,1290,
    [{atom,1290,mode}],
    [],
    [{tuple,1291,
      [{atom,1291,enum},
       {cons,1291,
        {tuple,1291,[{atom,1291,list},{integer,39,0}]},
        {cons,1292,
         {tuple,1292,[{atom,1292,binary},{integer,40,1}]},
         {nil,1292}}}]}]},
   {clause,1293,
    [{atom,1293,deliver}],
    [],
    [{tuple,1294,
      [{atom,1294,enum},
       {cons,1294,
        {tuple,1294,[{atom,1294,port},{integer,43,0}]},
        {cons,1295,
         {tuple,1295,[{atom,1295,term},{integer,44,1}]},
         {nil,1295}}}]}]},
   {clause,1296,[{atom,1296,exit_on_close}],[],[{atom,1296,bool}]},
   {clause,1297,[{atom,1297,low_watermark}],[],[{atom,1297,int}]},
   {clause,1298,[{atom,1298,high_watermark}],[],[{atom,1298,int}]},
   {clause,1299,[{atom,1299,low_msgq_watermark}],[],[{atom,1299,int}]},
   {clause,1300,[{atom,1300,high_msgq_watermark}],[],[{atom,1300,int}]},
   {clause,1301,[{atom,1301,send_timeout}],[],[{atom,1301,time}]},
   {clause,1302,[{atom,1302,send_timeout_close}],[],[{atom,1302,bool}]},
   {clause,1303,[{atom,1303,delay_send}],[],[{atom,1303,bool}]},
   {clause,1304,[{atom,1304,packet_size}],[],[{atom,1304,uint}]},
   {clause,1305,[{atom,1305,read_packets}],[],[{atom,1305,uint}]},
   {clause,1306,[{atom,1306,netns}],[],[{atom,1306,binary}]},
   {clause,1307,[{atom,1307,show_econnreset}],[],[{atom,1307,bool}]},
   {clause,1314,
    [{atom,1314,sctp_rtoinfo}],
    [],
    [{cons,1315,
      {tuple,1315,
       [{atom,1315,record},
        {tuple,1315,
         [{atom,1315,sctp_rtoinfo},
          {cons,1316,
           {cons,1316,
            {atom,1316,sctp_assoc_id},
            {cons,1316,{integer,1316,0},{nil,1316}}},
           {nil,1316}},
          {cons,1317,
           {atom,1317,uint32},
           {cons,1317,{integer,1317,0},{nil,1317}}},
          {cons,1318,
           {atom,1318,uint32},
           {cons,1318,{integer,1318,0},{nil,1318}}},
          {cons,1319,
           {atom,1319,uint32},
           {cons,1319,{integer,1319,0},{nil,1319}}}]}]},
      {nil,1319}}]},
   {clause,1321,
    [{atom,1321,sctp_associnfo}],
    [],
    [{cons,1322,
      {tuple,1322,
       [{atom,1322,record},
        {tuple,1322,
         [{atom,1322,sctp_assocparams},
          {cons,1323,
           {cons,1323,
            {atom,1323,sctp_assoc_id},
            {cons,1323,{integer,1323,0},{nil,1323}}},
           {nil,1323}},
          {cons,1324,
           {atom,1324,uint16},
           {cons,1324,{integer,1324,0},{nil,1324}}},
          {cons,1325,
           {atom,1325,uint16},
           {cons,1325,{integer,1325,0},{nil,1325}}},
          {cons,1326,
           {atom,1326,uint32},
           {cons,1326,{integer,1326,0},{nil,1326}}},
          {cons,1327,
           {atom,1327,uint32},
           {cons,1327,{integer,1327,0},{nil,1327}}},
          {cons,1328,
           {atom,1328,uint32},
           {cons,1328,{integer,1328,0},{nil,1328}}}]}]},
      {nil,1328}}]},
   {clause,1330,
    [{atom,1330,sctp_initmsg}],
    [],
    [{cons,1331,
      {tuple,1331,
       [{atom,1331,record},
        {tuple,1331,
         [{atom,1331,sctp_initmsg},
          {cons,1332,
           {atom,1332,uint16},
           {cons,1332,{integer,1332,0},{nil,1332}}},
          {cons,1333,
           {atom,1333,uint16},
           {cons,1333,{integer,1333,0},{nil,1333}}},
          {cons,1334,
           {atom,1334,uint16},
           {cons,1334,{integer,1334,0},{nil,1334}}},
          {cons,1335,
           {atom,1335,uint16},
           {cons,1335,{integer,1335,0},{nil,1335}}}]}]},
      {nil,1335}}]},
   {clause,1337,[{atom,1337,sctp_nodelay}],[],[{atom,1337,bool}]},
   {clause,1338,[{atom,1338,sctp_autoclose}],[],[{atom,1338,uint}]},
   {clause,1339,[{atom,1339,sctp_disable_fragments}],[],[{atom,1339,bool}]},
   {clause,1340,
    [{atom,1340,sctp_i_want_mapped_v4_addr}],
    [],
    [{atom,1340,bool}]},
   {clause,1341,[{atom,1341,sctp_maxseg}],[],[{atom,1341,uint}]},
   {clause,1343,
    [{atom,1343,sctp_primary_addr}],
    [],
    [{cons,1344,
      {tuple,1344,
       [{atom,1344,record},
        {tuple,1344,
         [{atom,1344,sctp_prim},
          {cons,1345,{atom,1345,sctp_assoc_id},{nil,1345}},
          {atom,1346,addr}]}]},
      {nil,1346}}]},
   {clause,1348,
    [{atom,1348,sctp_set_peer_primary_addr}],
    [],
    [{cons,1349,
      {tuple,1349,
       [{atom,1349,record},
        {tuple,1349,
         [{atom,1349,sctp_setpeerprim},
          {cons,1350,{atom,1350,sctp_assoc_id},{nil,1350}},
          {atom,1351,addr}]}]},
      {nil,1351}}]},
   {clause,1353,
    [{atom,1353,sctp_adaptation_layer}],
    [],
    [{cons,1354,
      {tuple,1354,
       [{atom,1354,record},
        {tuple,1354,
         [{atom,1354,sctp_setadaptation},
          {cons,1355,
           {atom,1355,uint32},
           {cons,1355,{integer,1355,0},{nil,1355}}}]}]},
      {nil,1355}}]},
   {clause,1357,
    [{atom,1357,sctp_peer_addr_params}],
    [],
    [{cons,1358,
      {tuple,1358,
       [{atom,1358,record},
        {tuple,1358,
         [{atom,1358,sctp_paddrparams},
          {cons,1359,
           {cons,1359,
            {atom,1359,sctp_assoc_id},
            {cons,1359,{integer,1359,0},{nil,1359}}},
           {nil,1359}},
          {cons,1360,
           {cons,1360,
            {atom,1360,addr},
            {cons,1360,
             {tuple,1360,[{atom,1360,any},{integer,1360,0}]},
             {nil,1360}}},
           {nil,1360}},
          {cons,1361,
           {atom,1361,uint32},
           {cons,1361,{integer,1361,0},{nil,1361}}},
          {cons,1362,
           {atom,1362,uint16},
           {cons,1362,{integer,1362,0},{nil,1362}}},
          {cons,1363,
           {atom,1363,uint32},
           {cons,1363,{integer,1363,0},{nil,1363}}},
          {cons,1364,
           {atom,1364,uint32},
           {cons,1364,{integer,1364,0},{nil,1364}}},
          {cons,1366,
           {tuple,1366,
            [{atom,1366,bitenumlist},
             {cons,1367,
              {tuple,1367,[{atom,1367,hb_enable},{integer,232,1}]},
              {cons,1368,
               {tuple,1368,[{atom,1368,hb_disable},{integer,233,2}]},
               {cons,1369,
                {tuple,1369,[{atom,1369,hb_demand},{integer,234,4}]},
                {cons,1370,
                 {tuple,1370,[{atom,1370,pmtud_enable},{integer,235,8}]},
                 {cons,1371,
                  {tuple,1371,[{atom,1371,pmtud_disable},{integer,236,16}]},
                  {cons,1372,
                   {tuple,1372,
                    [{atom,1372,sackdelay_enable},{integer,237,32}]},
                   {cons,1373,
                    {tuple,1373,
                     [{atom,1373,sackdelay_disable},{integer,238,64}]},
                    {nil,1373}}}}}}}},
             {atom,1374,uint32}]},
           {cons,1374,{nil,1374},{nil,1374}}}]}]},
      {nil,1374}}]},
   {clause,1376,
    [{atom,1376,sctp_default_send_param}],
    [],
    [{cons,1377,
      {tuple,1377,
       [{atom,1377,record},
        {tuple,1377,
         [{atom,1377,sctp_sndrcvinfo},
          {cons,1378,
           {atom,1378,uint16},
           {cons,1378,{integer,1378,0},{nil,1378}}},
          {nil,1379},
          {cons,1381,
           {tuple,1381,
            [{atom,1381,bitenumlist},
             {cons,1382,
              {tuple,1382,[{atom,1382,unordered},{integer,225,1}]},
              {cons,1383,
               {tuple,1383,[{atom,1383,addr_over},{integer,226,2}]},
               {cons,1384,
                {tuple,1384,[{atom,1384,abort},{integer,227,4}]},
                {cons,1385,
                 {tuple,1385,[{atom,1385,eof},{integer,228,8}]},
                 {nil,1385}}}}},
             {atom,1386,uint16}]},
           {cons,1386,{nil,1386},{nil,1386}}},
          {cons,1387,
           {atom,1387,uint32},
           {cons,1387,{integer,1387,0},{nil,1387}}},
          {cons,1388,
           {atom,1388,uint32},
           {cons,1388,{integer,1388,0},{nil,1388}}},
          {cons,1389,
           {atom,1389,uint32},
           {cons,1389,{integer,1389,0},{nil,1389}}},
          {nil,1390},
          {nil,1391},
          {cons,1392,
           {cons,1392,
            {atom,1392,sctp_assoc_id},
            {cons,1392,{integer,1392,0},{nil,1392}}},
           {nil,1392}}]}]},
      {nil,1392}}]},
   {clause,1394,
    [{atom,1394,sctp_events}],
    [],
    [{cons,1395,
      {tuple,1395,
       [{atom,1395,record},
        {tuple,1395,
         [{atom,1395,sctp_event_subscribe},
          {cons,1396,
           {atom,1396,bool8},
           {cons,1396,{atom,1396,true},{nil,1396}}},
          {cons,1397,
           {atom,1397,bool8},
           {cons,1397,{atom,1397,true},{nil,1397}}},
          {cons,1398,
           {atom,1398,bool8},
           {cons,1398,{atom,1398,true},{nil,1398}}},
          {cons,1399,
           {atom,1399,bool8},
           {cons,1399,{atom,1399,true},{nil,1399}}},
          {cons,1400,
           {atom,1400,bool8},
           {cons,1400,{atom,1400,true},{nil,1400}}},
          {cons,1401,
           {atom,1401,bool8},
           {cons,1401,{atom,1401,true},{nil,1401}}},
          {cons,1402,
           {atom,1402,bool8},
           {cons,1402,{atom,1402,true},{nil,1402}}},
          {cons,1403,
           {atom,1403,bool8},
           {cons,1403,{atom,1403,false},{nil,1403}}},
          {cons,1404,
           {atom,1404,bool8},
           {cons,1404,{atom,1404,false},{nil,1404}}}]}]},
      {nil,1404}}]},
   {clause,1406,
    [{atom,1406,sctp_delayed_ack_time}],
    [],
    [{cons,1407,
      {tuple,1407,
       [{atom,1407,record},
        {tuple,1407,
         [{atom,1407,sctp_assoc_value},
          {cons,1408,
           {cons,1408,
            {atom,1408,sctp_assoc_id},
            {cons,1408,{integer,1408,0},{nil,1408}}},
           {nil,1408}},
          {cons,1409,
           {atom,1409,uint32},
           {cons,1409,{integer,1409,0},{nil,1409}}}]}]},
      {nil,1409}}]},
   {clause,1411,[{atom,1411,undefined}],[],[{atom,1411,undefined}]},
   {clause,1412,
    [{var,1412,'O'}],
    [[{call,1412,{atom,1412,is_atom},[{var,1412,'O'}]}]],
    [{atom,1412,undefined}]}]},
 {function,1417,type_value,2,
  [{clause,1417,
    [{atom,1417,get},{atom,1417,undefined}],
    [],
    [{atom,1417,false}]},
   {clause,1425,
    [{atom,1425,get},
     {cons,1425,
      {tuple,1425,[{atom,1425,record},{var,1425,'Types'}]},
      {nil,1425}}],
    [],
    [{call,1426,
      {atom,1426,type_value_record},
      [{atom,1426,get},
       {var,1426,'Types'},
       {call,1427,
        {remote,1427,{atom,1427,erlang},{atom,1427,make_tuple}},
        [{call,1427,{atom,1427,tuple_size},[{var,1427,'Types'}]},
         {atom,1427,undefined}]},
       {integer,1427,2}]}]},
   {clause,1428,
    [{atom,1428,get},{cons,1428,{var,1428,'_'},{nil,1428}}],
    [],
    [{atom,1428,false}]},
   {clause,1429,[{atom,1429,get},{var,1429,'_'}],[],[{atom,1429,true}]}]},
 {function,1432,type_value,3,
  [{clause,1432,
    [{var,1432,'_'},{atom,1432,undefined},{var,1432,'_'}],
    [],
    [{atom,1432,false}]},
   {clause,1433,
    [{var,1433,'_'},{nil,1433},{atom,1433,undefined}],
    [],
    [{atom,1433,true}]},
   {clause,1434,
    [{var,1434,'_'},{nil,1434},{var,1434,'_'}],
    [],
    [{atom,1434,false}]},
   {clause,1435,
    [{var,1435,'Q'},
     {cons,1435,{var,1435,'Type'},{nil,1435}},
     {var,1435,'Value'}],
    [],
    [{call,1436,
      {atom,1436,type_value_default},
      [{var,1436,'Q'},{var,1436,'Type'},{var,1436,'Value'}]}]},
   {clause,1437,
    [{atom,1437,set},{var,1437,'Type'},{var,1437,'Value'}],
    [],
    [{call,1438,
      {atom,1438,type_value_default},
      [{atom,1438,set},{var,1438,'Type'},{var,1438,'Value'}]}]},
   {clause,1439,
    [{var,1439,'_'},{var,1439,'_'},{atom,1439,undefined}],
    [],
    [{atom,1439,true}]},
   {clause,1440,
    [{var,1440,'_'},{var,1440,'_'},{var,1440,'_'}],
    [],
    [{atom,1440,false}]}]},
 {function,1442,type_value_default,3,
  [{clause,1442,
    [{var,1442,'Q'},
     {cons,1442,{var,1442,'Type'},{cons,1442,{var,1442,'Default'},{nil,1442}}},
     {atom,1442,undefined}],
    [],
    [{call,1443,
      {atom,1443,type_value_1},
      [{var,1443,'Q'},{var,1443,'Type'},{var,1443,'Default'}]}]},
   {clause,1444,
    [{var,1444,'Q'},
     {cons,1444,{var,1444,'Type'},{cons,1444,{var,1444,'_'},{nil,1444}}},
     {var,1444,'Value'}],
    [],
    [{call,1445,
      {atom,1445,type_value_1},
      [{var,1445,'Q'},{var,1445,'Type'},{var,1445,'Value'}]}]},
   {clause,1446,
    [{var,1446,'Q'},{var,1446,'Type'},{var,1446,'Value'}],
    [],
    [{call,1447,
      {atom,1447,type_value_1},
      [{var,1447,'Q'},{var,1447,'Type'},{var,1447,'Value'}]}]}]},
 {function,1449,type_value_1,3,
  [{clause,1449,
    [{var,1449,'Q'},
     {tuple,1449,[{atom,1449,record},{var,1449,'Types'}]},
     {atom,1449,undefined}],
    [],
    [{call,1450,
      {atom,1450,type_value_record},
      [{var,1450,'Q'},
       {var,1450,'Types'},
       {call,1451,
        {remote,1451,{atom,1451,erlang},{atom,1451,make_tuple}},
        [{call,1451,{atom,1451,tuple_size},[{var,1451,'Types'}]},
         {atom,1451,undefined}]},
       {integer,1451,2}]}]},
   {clause,1452,
    [{var,1452,'Q'},
     {tuple,1452,[{atom,1452,record},{var,1452,'Types'}]},
     {var,1452,'Values'}],
    [[{op,1453,'=:=',
       {call,1453,{atom,1453,tuple_size},[{var,1453,'Types'}]},
       {call,1453,{atom,1453,tuple_size},[{var,1453,'Values'}]}}]],
    [{call,1454,
      {atom,1454,type_value_record},
      [{var,1454,'Q'},
       {var,1454,'Types'},
       {var,1454,'Values'},
       {integer,1454,2}]}]},
   {clause,1455,
    [{var,1455,'Q'},{var,1455,'Types'},{var,1455,'Values'}],
    [[{op,1456,'=:=',
       {call,1456,{atom,1456,tuple_size},[{var,1456,'Types'}]},
       {call,1456,{atom,1456,tuple_size},[{var,1456,'Values'}]}}]],
    [{call,1457,
      {atom,1457,type_value_tuple},
      [{var,1457,'Q'},
       {var,1457,'Types'},
       {var,1457,'Values'},
       {integer,1457,1}]}]},
   {clause,1458,
    [{var,1458,'_'},{var,1458,'Type'},{var,1458,'Value'}],
    [],
    [{call,1459,
      {atom,1459,type_value_2},
      [{var,1459,'Type'},{var,1459,'Value'}]}]}]},
 {function,1461,type_value_tuple,4,
  [{clause,1461,
    [{var,1461,'Q'},{var,1461,'Types'},{var,1461,'Values'},{var,1461,'N'}],
    [[{call,1462,{atom,1462,is_integer},[{var,1462,'N'}]},
      {op,1462,'=<',
       {var,1462,'N'},
       {call,1462,{atom,1462,tuple_size},[{var,1462,'Types'}]}}]],
    [{op,1464,'andalso',
      {call,1463,
       {atom,1463,type_value},
       [{var,1463,'Q'},
        {call,1463,{atom,1463,element},[{var,1463,'N'},{var,1463,'Types'}]},
        {call,1463,{atom,1463,element},[{var,1463,'N'},{var,1463,'Values'}]}]},
      {call,1464,
       {atom,1464,type_value_tuple},
       [{var,1464,'Q'},
        {var,1464,'Types'},
        {var,1464,'Values'},
        {op,1464,'+',{var,1464,'N'},{integer,1464,1}}]}}]},
   {clause,1465,
    [{var,1465,'_'},{var,1465,'_'},{var,1465,'_'},{var,1465,'_'}],
    [],
    [{atom,1465,true}]}]},
 {function,1467,type_value_record,4,
  [{clause,1467,
    [{var,1467,'Q'},{var,1467,'Types'},{var,1467,'Values'},{var,1467,'N'}],
    [[{call,1468,{atom,1468,is_integer},[{var,1468,'N'}]},
      {op,1468,'=<',
       {var,1468,'N'},
       {call,1468,{atom,1468,tuple_size},[{var,1468,'Types'}]}}]],
    [{'case',1469,
      {call,1469,
       {atom,1469,type_value},
       [{var,1469,'Q'},
        {call,1469,{atom,1469,element},[{var,1469,'N'},{var,1469,'Types'}]},
        {call,1469,{atom,1469,element},[{var,1469,'N'},{var,1469,'Values'}]}]},
      [{clause,1470,
        [{atom,1470,true}],
        [],
        [{call,1470,
          {atom,1470,type_value_record},
          [{var,1470,'Q'},
           {var,1470,'Types'},
           {var,1470,'Values'},
           {op,1470,'+',{var,1470,'N'},{integer,1470,1}}]}]},
       {clause,1471,
        [{atom,1471,false}],
        [],
        [{call,1472,
          {remote,1472,{atom,1472,erlang},{atom,1472,throw}},
          [{tuple,1472,
            [{atom,1472,type},
             {tuple,1472,
              [{atom,1472,record},
               {var,1472,'Q'},
               {var,1472,'Types'},
               {var,1472,'Values'},
               {var,1472,'N'}]}]}]}]}]}]},
   {clause,1474,
    [{var,1474,'_'},{var,1474,'_'},{var,1474,'_'},{var,1474,'_'}],
    [],
    [{atom,1474,true}]}]},
 {function,1481,type_value_2,2,
  [{clause,1481,[{atom,1481,undefined},{var,1481,'_'}],[],[{atom,1481,false}]},
   {clause,1483,[{atom,1483,bool},{atom,1483,true}],[],[{atom,1483,true}]},
   {clause,1484,[{atom,1484,bool},{atom,1484,false}],[],[{atom,1484,true}]},
   {clause,1485,[{atom,1485,bool8},{atom,1485,true}],[],[{atom,1485,true}]},
   {clause,1486,[{atom,1486,bool8},{atom,1486,false}],[],[{atom,1486,true}]},
   {clause,1487,
    [{atom,1487,int},{var,1487,'X'}],
    [[{call,1487,{atom,1487,is_integer},[{var,1487,'X'}]}]],
    [{atom,1487,true}]},
   {clause,1488,
    [{atom,1488,uint},{var,1488,'X'}],
    [[{call,1488,{atom,1488,is_integer},[{var,1488,'X'}]},
      {op,1488,'>=',{var,1488,'X'},{integer,1488,0}}]],
    [{atom,1488,true}]},
   {clause,1489,
    [{atom,1489,uint32},{var,1489,'X'}],
    [[{op,1489,'=:=',
       {op,1489,'band',{var,1489,'X'},{integer,1489,4294967295}},
       {var,1489,'X'}}]],
    [{atom,1489,true}]},
   {clause,1490,
    [{atom,1490,uint24},{var,1490,'X'}],
    [[{op,1490,'=:=',
       {op,1490,'band',{var,1490,'X'},{integer,1490,16777215}},
       {var,1490,'X'}}]],
    [{atom,1490,true}]},
   {clause,1491,
    [{atom,1491,uint16},{var,1491,'X'}],
    [[{op,1491,'=:=',
       {op,1491,'band',{var,1491,'X'},{integer,1491,65535}},
       {var,1491,'X'}}]],
    [{atom,1491,true}]},
   {clause,1492,
    [{atom,1492,uint8},{var,1492,'X'}],
    [[{op,1492,'=:=',
       {op,1492,'band',{var,1492,'X'},{integer,1492,255}},
       {var,1492,'X'}}]],
    [{atom,1492,true}]},
   {clause,1493,[{atom,1493,time},{atom,1493,infinity}],[],[{atom,1493,true}]},
   {clause,1494,
    [{atom,1494,time},{var,1494,'X'}],
    [[{call,1494,{atom,1494,is_integer},[{var,1494,'X'}]},
      {op,1494,'>=',{var,1494,'X'},{integer,1494,0}}]],
    [{atom,1494,true}]},
   {clause,1495,
    [{atom,1495,ip},
     {tuple,1495,
      [{var,1495,'A'},{var,1495,'B'},{var,1495,'C'},{var,1495,'D'}]}],
    [[{op,355,'=:=',
       {op,355,'band',
        {op,355,'bor',
         {op,355,'bor',
          {op,355,'bor',{var,1495,'A'},{var,1495,'B'}},
          {var,1495,'C'}},
         {var,1495,'D'}},
        {op,355,'bnot',{integer,355,255}}},
       {integer,355,0}}]],
    [{atom,1495,true}]},
   {clause,1496,
    [{atom,1496,addr},{tuple,1496,[{atom,1496,any},{var,1496,'Port'}]}],
    [],
    [{call,1497,
      {atom,1497,type_value_2},
      [{atom,1497,uint16},{var,1497,'Port'}]}]},
   {clause,1498,
    [{atom,1498,addr},{tuple,1498,[{atom,1498,loopback},{var,1498,'Port'}]}],
    [],
    [{call,1499,
      {atom,1499,type_value_2},
      [{atom,1499,uint16},{var,1499,'Port'}]}]},
   {clause,1500,
    [{atom,1500,addr},
     {tuple,1500,
      [{tuple,1500,
        [{var,1500,'A'},{var,1500,'B'},{var,1500,'C'},{var,1500,'D'}]},
       {var,1500,'Port'}]}],
    [[{op,355,'=:=',
       {op,355,'band',
        {op,355,'bor',
         {op,355,'bor',
          {op,355,'bor',{var,1500,'A'},{var,1500,'B'}},
          {var,1500,'C'}},
         {var,1500,'D'}},
        {op,355,'bnot',{integer,355,255}}},
       {integer,355,0}}]],
    [{call,1501,
      {atom,1501,type_value_2},
      [{atom,1501,uint16},{var,1501,'Port'}]}]},
   {clause,1502,
    [{atom,1502,addr},
     {tuple,1502,
      [{tuple,1502,
        [{var,1502,'A'},
         {var,1502,'B'},
         {var,1502,'C'},
         {var,1502,'D'},
         {var,1502,'E'},
         {var,1502,'F'},
         {var,1502,'G'},
         {var,1502,'H'}]},
       {var,1502,'Port'}]}],
    [[{op,359,'=:=',
       {op,359,'band',
        {op,358,'bor',
         {op,358,'bor',
          {op,358,'bor',
           {op,358,'bor',
            {op,358,'bor',
             {op,358,'bor',
              {op,358,'bor',{var,1502,'A'},{var,1502,'B'}},
              {var,1502,'C'}},
             {var,1502,'D'}},
            {var,1502,'E'}},
           {var,1502,'F'}},
          {var,1502,'G'}},
         {var,1502,'H'}},
        {op,359,'bnot',{integer,359,65535}}},
       {integer,359,0}}]],
    [{call,1503,
      {atom,1503,type_value_2},
      [{atom,1503,uint16},{var,1503,'Port'}]}]},
   {clause,1504,
    [{atom,1504,ether},
     {cons,1504,
      {var,1504,'X1'},
      {cons,1504,
       {var,1504,'X2'},
       {cons,1504,
        {var,1504,'X3'},
        {cons,1504,
         {var,1504,'X4'},
         {cons,1504,
          {var,1504,'X5'},
          {cons,1504,{var,1504,'X6'},{nil,1504}}}}}}}],
    [[{op,363,'=:=',
       {op,363,'band',
        {op,362,'bor',
         {op,362,'bor',
          {op,362,'bor',
           {op,362,'bor',
            {op,362,'bor',{var,1505,'X1'},{var,1505,'X2'}},
            {var,1505,'X3'}},
           {var,1505,'X4'}},
          {var,1505,'X5'}},
         {var,1505,'X6'}},
        {op,363,'bnot',{integer,363,255}}},
       {integer,363,0}}]],
    [{atom,1505,true}]},
   {clause,1506,
    [{tuple,1506,[{atom,1506,enum},{var,1506,'List'}]},{var,1506,'Enum'}],
    [],
    [{'case',1507,
      {call,1507,{atom,1507,enum_val},[{var,1507,'Enum'},{var,1507,'List'}]},
      [{clause,1508,
        [{tuple,1508,[{atom,1508,value},{var,1508,'_'}]}],
        [],
        [{atom,1508,true}]},
       {clause,1509,[{atom,1509,false}],[],[{atom,1509,false}]}]}]},
   {clause,1511,
    [{atom,1511,sockaddr},{var,1511,'Addr'}],
    [],
    [{'case',1512,
      {var,1512,'Addr'},
      [{clause,1513,[{atom,1513,any}],[],[{atom,1513,true}]},
       {clause,1514,[{atom,1514,loopback}],[],[{atom,1514,true}]},
       {clause,1515,
        [{tuple,1515,
          [{var,1515,'A'},{var,1515,'B'},{var,1515,'C'},{var,1515,'D'}]}],
        [[{op,355,'=:=',
           {op,355,'band',
            {op,355,'bor',
             {op,355,'bor',
              {op,355,'bor',{var,1515,'A'},{var,1515,'B'}},
              {var,1515,'C'}},
             {var,1515,'D'}},
            {op,355,'bnot',{integer,355,255}}},
           {integer,355,0}}]],
        [{atom,1515,true}]},
       {clause,1516,
        [{tuple,1516,
          [{var,1516,'A'},
           {var,1516,'B'},
           {var,1516,'C'},
           {var,1516,'D'},
           {var,1516,'E'},
           {var,1516,'F'},
           {var,1516,'G'},
           {var,1516,'H'}]}],
        [[{op,359,'=:=',
           {op,359,'band',
            {op,358,'bor',
             {op,358,'bor',
              {op,358,'bor',
               {op,358,'bor',
                {op,358,'bor',
                 {op,358,'bor',
                  {op,358,'bor',{var,1516,'A'},{var,1516,'B'}},
                  {var,1516,'C'}},
                 {var,1516,'D'}},
                {var,1516,'E'}},
               {var,1516,'F'}},
              {var,1516,'G'}},
             {var,1516,'H'}},
            {op,359,'bnot',{integer,359,65535}}},
           {integer,359,0}}]],
        [{atom,1516,true}]},
       {clause,1517,[{var,1517,'_'}],[],[{atom,1517,false}]}]}]},
   {clause,1519,
    [{atom,1519,linkaddr},{var,1519,'Addr'}],
    [[{call,1519,{atom,1519,is_list},[{var,1519,'Addr'}]}]],
    [{'case',1520,
      {call,1520,{atom,1520,len},[{var,1520,'Addr'},{integer,1520,32768}]},
      [{clause,1521,[{atom,1521,undefined}],[],[{atom,1521,false}]},
       {clause,1522,[{var,1522,'_'}],[],[{atom,1522,true}]}]}]},
   {clause,1524,
    [{tuple,1524,[{atom,1524,bitenumlist},{var,1524,'List'}]},
     {var,1524,'EnumList'}],
    [],
    [{'case',1525,
      {call,1525,
       {atom,1525,enum_vals},
       [{var,1525,'EnumList'},{var,1525,'List'}]},
      [{clause,1526,
        [{var,1526,'Ls'}],
        [[{call,1526,{atom,1526,is_list},[{var,1526,'Ls'}]}]],
        [{atom,1526,true}]},
       {clause,1527,[{atom,1527,false}],[],[{atom,1527,false}]}]}]},
   {clause,1529,
    [{tuple,1529,[{atom,1529,bitenumlist},{var,1529,'List'},{var,1529,'_'}]},
     {var,1529,'EnumList'}],
    [],
    [{'case',1530,
      {call,1530,
       {atom,1530,enum_vals},
       [{var,1530,'EnumList'},{var,1530,'List'}]},
      [{clause,1531,
        [{var,1531,'Ls'}],
        [[{call,1531,{atom,1531,is_list},[{var,1531,'Ls'}]}]],
        [{atom,1531,true}]},
       {clause,1532,[{atom,1532,false}],[],[{atom,1532,false}]}]}]},
   {clause,1534,
    [{atom,1534,binary},{var,1534,'Bin'}],
    [[{call,1535,{atom,1535,is_binary},[{var,1535,'Bin'}]},
      {op,1535,'<',
       {call,1535,{atom,1535,byte_size},[{var,1535,'Bin'}]},
       {op,1535,'bsl',{integer,1535,1},{integer,1535,32}}}]],
    [{atom,1535,true}]},
   {clause,1536,
    [{atom,1536,binary_or_uint},{var,1536,'Bin'}],
    [[{call,1537,{atom,1537,is_binary},[{var,1537,'Bin'}]},
      {op,1537,'<',
       {call,1537,{atom,1537,byte_size},[{var,1537,'Bin'}]},
       {op,1537,'bsl',{integer,1537,1},{integer,1537,32}}}]],
    [{atom,1537,true}]},
   {clause,1538,
    [{atom,1538,binary_or_uint},{var,1538,'Int'}],
    [[{call,1539,{atom,1539,is_integer},[{var,1539,'Int'}]},
      {op,1539,'>=',{var,1539,'Int'},{integer,1539,0}}]],
    [{atom,1539,true}]},
   {clause,1541,
    [{atom,1541,sctp_assoc_id},{var,1541,'X'}],
    [[{op,1542,'=:=',
       {op,1542,'band',{var,1542,'X'},{integer,1542,4294967295}},
       {var,1542,'X'}}]],
    [{atom,1542,true}]},
   {clause,1543,[{var,1543,'_'},{var,1543,'_'}],[],[{atom,1543,false}]}]},
 {function,1556,enc_value,2,
  [{clause,1556,
    [{atom,1556,get},
     {cons,1556,
      {tuple,1556,[{atom,1556,record},{var,1556,'Types'}]},
      {nil,1556}}],
    [],
    [{call,1557,
      {atom,1557,enc_value_tuple},
      [{atom,1557,get},
       {var,1557,'Types'},
       {call,1558,
        {remote,1558,{atom,1558,erlang},{atom,1558,make_tuple}},
        [{call,1558,{atom,1558,tuple_size},[{var,1558,'Types'}]},
         {atom,1558,undefined}]},
       {integer,1558,2}]}]},
   {clause,1559,[{atom,1559,get},{var,1559,'_'}],[],[{nil,1559}]}]},
 {function,1562,enc_value,3,
  [{clause,1562,[{var,1562,'_'},{nil,1562},{var,1562,'_'}],[],[{nil,1562}]},
   {clause,1563,
    [{var,1563,'Q'},
     {cons,1563,{var,1563,'Type'},{nil,1563}},
     {var,1563,'Value'}],
    [],
    [{call,1564,
      {atom,1564,enc_value_default},
      [{var,1564,'Q'},{var,1564,'Type'},{var,1564,'Value'}]}]},
   {clause,1565,
    [{atom,1565,set},{var,1565,'Type'},{var,1565,'Value'}],
    [],
    [{call,1566,
      {atom,1566,enc_value_default},
      [{atom,1566,set},{var,1566,'Type'},{var,1566,'Value'}]}]},
   {clause,1567,
    [{var,1567,'_'},{var,1567,'_'},{var,1567,'_'}],
    [],
    [{nil,1567}]}]},
 {function,1569,enc_value_default,3,
  [{clause,1569,
    [{var,1569,'Q'},
     {cons,1569,{var,1569,'Type'},{cons,1569,{var,1569,'Default'},{nil,1569}}},
     {atom,1569,undefined}],
    [],
    [{call,1570,
      {atom,1570,enc_value_1},
      [{var,1570,'Q'},{var,1570,'Type'},{var,1570,'Default'}]}]},
   {clause,1571,
    [{var,1571,'Q'},
     {cons,1571,{var,1571,'Type'},{cons,1571,{var,1571,'_'},{nil,1571}}},
     {var,1571,'Value'}],
    [],
    [{call,1572,
      {atom,1572,enc_value_1},
      [{var,1572,'Q'},{var,1572,'Type'},{var,1572,'Value'}]}]},
   {clause,1573,
    [{var,1573,'Q'},{var,1573,'Type'},{var,1573,'Value'}],
    [],
    [{call,1574,
      {atom,1574,enc_value_1},
      [{var,1574,'Q'},{var,1574,'Type'},{var,1574,'Value'}]}]}]},
 {function,1576,enc_value_1,3,
  [{clause,1576,
    [{var,1576,'Q'},
     {tuple,1576,[{atom,1576,record},{var,1576,'Types'}]},
     {atom,1576,undefined}],
    [],
    [{call,1577,
      {atom,1577,enc_value_tuple},
      [{var,1577,'Q'},
       {var,1577,'Types'},
       {call,1578,
        {remote,1578,{atom,1578,erlang},{atom,1578,make_tuple}},
        [{call,1578,{atom,1578,tuple_size},[{var,1578,'Types'}]},
         {atom,1578,undefined}]},
       {integer,1578,2}]}]},
   {clause,1579,
    [{var,1579,'Q'},
     {tuple,1579,[{atom,1579,record},{var,1579,'Types'}]},
     {var,1579,'Values'}],
    [[{op,1580,'=:=',
       {call,1580,{atom,1580,tuple_size},[{var,1580,'Types'}]},
       {call,1580,{atom,1580,tuple_size},[{var,1580,'Values'}]}}]],
    [{call,1581,
      {atom,1581,enc_value_tuple},
      [{var,1581,'Q'},
       {var,1581,'Types'},
       {var,1581,'Values'},
       {integer,1581,2}]}]},
   {clause,1582,
    [{var,1582,'Q'},{var,1582,'Types'},{var,1582,'Values'}],
    [[{op,1582,'=:=',
       {call,1582,{atom,1582,tuple_size},[{var,1582,'Types'}]},
       {call,1582,{atom,1582,tuple_size},[{var,1582,'Values'}]}}]],
    [{call,1583,
      {atom,1583,enc_value_tuple},
      [{var,1583,'Q'},
       {var,1583,'Types'},
       {var,1583,'Values'},
       {integer,1583,1}]}]},
   {clause,1584,
    [{var,1584,'_'},{var,1584,'Type'},{var,1584,'Value'}],
    [],
    [{call,1585,
      {atom,1585,enc_value_2},
      [{var,1585,'Type'},{var,1585,'Value'}]}]}]},
 {function,1587,enc_value_tuple,4,
  [{clause,1587,
    [{var,1587,'Q'},{var,1587,'Types'},{var,1587,'Values'},{var,1587,'N'}],
    [[{call,1588,{atom,1588,is_integer},[{var,1588,'N'}]},
      {op,1588,'=<',
       {var,1588,'N'},
       {call,1588,{atom,1588,tuple_size},[{var,1588,'Types'}]}}]],
    [{cons,1589,
      {call,1589,
       {atom,1589,enc_value},
       [{var,1589,'Q'},
        {call,1589,{atom,1589,element},[{var,1589,'N'},{var,1589,'Types'}]},
        {call,1589,{atom,1589,element},[{var,1589,'N'},{var,1589,'Values'}]}]},
      {call,1590,
       {atom,1590,enc_value_tuple},
       [{var,1590,'Q'},
        {var,1590,'Types'},
        {var,1590,'Values'},
        {op,1590,'+',{var,1590,'N'},{integer,1590,1}}]}}]},
   {clause,1591,
    [{var,1591,'_'},{var,1591,'_'},{var,1591,'_'},{var,1591,'_'}],
    [],
    [{nil,1591}]}]},
 {function,1596,enc_value_2,2,
  [{clause,1596,
    [{atom,1596,bool},{atom,1596,true}],
    [],
    [{cons,1596,
      {integer,1596,0},
      {cons,1596,
       {integer,1596,0},
       {cons,1596,
        {integer,1596,0},
        {cons,1596,{integer,1596,1},{nil,1596}}}}}]},
   {clause,1597,
    [{atom,1597,bool},{atom,1597,false}],
    [],
    [{cons,1597,
      {integer,1597,0},
      {cons,1597,
       {integer,1597,0},
       {cons,1597,
        {integer,1597,0},
        {cons,1597,{integer,1597,0},{nil,1597}}}}}]},
   {clause,1598,
    [{atom,1598,bool8},{atom,1598,true}],
    [],
    [{cons,1598,{integer,1598,1},{nil,1598}}]},
   {clause,1599,
    [{atom,1599,bool8},{atom,1599,false}],
    [],
    [{cons,1599,{integer,1599,0},{nil,1599}}]},
   {clause,1600,
    [{atom,1600,int},{var,1600,'Val'}],
    [],
    [{cons,313,
      {op,313,'band',
       {op,313,'bsr',{var,1600,'Val'},{integer,313,24}},
       {integer,313,255}},
      {cons,313,
       {op,313,'band',
        {op,313,'bsr',{var,1600,'Val'},{integer,313,16}},
        {integer,313,255}},
       {cons,314,
        {op,314,'band',
         {op,314,'bsr',{var,1600,'Val'},{integer,314,8}},
         {integer,314,255}},
        {cons,314,
         {op,314,'band',{var,1600,'Val'},{integer,314,255}},
         {nil,314}}}}}]},
   {clause,1601,
    [{atom,1601,uint},{var,1601,'Val'}],
    [],
    [{cons,313,
      {op,313,'band',
       {op,313,'bsr',{var,1601,'Val'},{integer,313,24}},
       {integer,313,255}},
      {cons,313,
       {op,313,'band',
        {op,313,'bsr',{var,1601,'Val'},{integer,313,16}},
        {integer,313,255}},
       {cons,314,
        {op,314,'band',
         {op,314,'bsr',{var,1601,'Val'},{integer,314,8}},
         {integer,314,255}},
        {cons,314,
         {op,314,'band',{var,1601,'Val'},{integer,314,255}},
         {nil,314}}}}}]},
   {clause,1602,
    [{atom,1602,uint32},{var,1602,'Val'}],
    [],
    [{cons,313,
      {op,313,'band',
       {op,313,'bsr',{var,1602,'Val'},{integer,313,24}},
       {integer,313,255}},
      {cons,313,
       {op,313,'band',
        {op,313,'bsr',{var,1602,'Val'},{integer,313,16}},
        {integer,313,255}},
       {cons,314,
        {op,314,'band',
         {op,314,'bsr',{var,1602,'Val'},{integer,314,8}},
         {integer,314,255}},
        {cons,314,
         {op,314,'band',{var,1602,'Val'},{integer,314,255}},
         {nil,314}}}}}]},
   {clause,1603,
    [{atom,1603,uint24},{var,1603,'Val'}],
    [],
    [{cons,309,
      {op,309,'band',
       {op,309,'bsr',{var,1603,'Val'},{integer,309,16}},
       {integer,309,255}},
      {cons,310,
       {op,310,'band',
        {op,310,'bsr',{var,1603,'Val'},{integer,310,8}},
        {integer,310,255}},
       {cons,310,
        {op,310,'band',{var,1603,'Val'},{integer,310,255}},
        {nil,310}}}}]},
   {clause,1604,
    [{atom,1604,uint16},{var,1604,'Val'}],
    [],
    [{cons,307,
      {op,307,'band',
       {op,307,'bsr',{var,1604,'Val'},{integer,307,8}},
       {integer,307,255}},
      {cons,307,
       {op,307,'band',{var,1604,'Val'},{integer,307,255}},
       {nil,307}}}]},
   {clause,1605,
    [{atom,1605,uint8},{var,1605,'Val'}],
    [],
    [{cons,305,{op,305,'band',{var,1605,'Val'},{integer,305,255}},{nil,305}}]},
   {clause,1606,
    [{atom,1606,time},{atom,1606,infinity}],
    [],
    [{cons,313,
      {op,313,'band',
       {op,313,'bsr',{op,1606,'-',{integer,1606,1}},{integer,313,24}},
       {integer,313,255}},
      {cons,313,
       {op,313,'band',
        {op,313,'bsr',{op,1606,'-',{integer,1606,1}},{integer,313,16}},
        {integer,313,255}},
       {cons,314,
        {op,314,'band',
         {op,314,'bsr',{op,1606,'-',{integer,1606,1}},{integer,314,8}},
         {integer,314,255}},
        {cons,314,
         {op,314,'band',{op,1606,'-',{integer,1606,1}},{integer,314,255}},
         {nil,314}}}}}]},
   {clause,1607,
    [{atom,1607,time},{var,1607,'Val'}],
    [],
    [{cons,313,
      {op,313,'band',
       {op,313,'bsr',{var,1607,'Val'},{integer,313,24}},
       {integer,313,255}},
      {cons,313,
       {op,313,'band',
        {op,313,'bsr',{var,1607,'Val'},{integer,313,16}},
        {integer,313,255}},
       {cons,314,
        {op,314,'band',
         {op,314,'bsr',{var,1607,'Val'},{integer,314,8}},
         {integer,314,255}},
        {cons,314,
         {op,314,'band',{var,1607,'Val'},{integer,314,255}},
         {nil,314}}}}}]},
   {clause,1608,
    [{atom,1608,ip},
     {tuple,1608,
      [{var,1608,'A'},{var,1608,'B'},{var,1608,'C'},{var,1608,'D'}]}],
    [],
    [{cons,1608,
      {var,1608,'A'},
      {cons,1608,
       {var,1608,'B'},
       {cons,1608,{var,1608,'C'},{cons,1608,{var,1608,'D'},{nil,1608}}}}}]},
   {clause,1609,
    [{atom,1609,ip},{atom,1609,any}],
    [],
    [{cons,1609,
      {integer,1609,0},
      {cons,1609,
       {integer,1609,0},
       {cons,1609,
        {integer,1609,0},
        {cons,1609,{integer,1609,0},{nil,1609}}}}}]},
   {clause,1610,
    [{atom,1610,ip},{atom,1610,loopback}],
    [],
    [{cons,1610,
      {integer,1610,127},
      {cons,1610,
       {integer,1610,0},
       {cons,1610,
        {integer,1610,0},
        {cons,1610,{integer,1610,1},{nil,1610}}}}}]},
   {clause,1611,
    [{atom,1611,addr},{tuple,1611,[{atom,1611,any},{var,1611,'Port'}]}],
    [],
    [{cons,1612,
      {integer,30,3},
      {cons,307,
       {op,307,'band',
        {op,307,'bsr',{var,1612,'Port'},{integer,307,8}},
        {integer,307,255}},
       {cons,307,
        {op,307,'band',{var,1612,'Port'},{integer,307,255}},
        {nil,307}}}}]},
   {clause,1613,
    [{atom,1613,addr},{tuple,1613,[{atom,1613,loopback},{var,1613,'Port'}]}],
    [],
    [{cons,1614,
      {integer,31,4},
      {cons,307,
       {op,307,'band',
        {op,307,'bsr',{var,1614,'Port'},{integer,307,8}},
        {integer,307,255}},
       {cons,307,
        {op,307,'band',{var,1614,'Port'},{integer,307,255}},
        {nil,307}}}}]},
   {clause,1615,
    [{atom,1615,addr},{tuple,1615,[{var,1615,'IP'},{var,1615,'Port'}]}],
    [[{op,1615,'=:=',
       {call,1615,{atom,1615,tuple_size},[{var,1615,'IP'}]},
       {integer,1615,4}}]],
    [{cons,1616,
      {integer,28,1},
      {cons,307,
       {cons,307,
        {op,307,'band',
         {op,307,'bsr',{var,1616,'Port'},{integer,307,8}},
         {integer,307,255}},
        {cons,307,
         {op,307,'band',{var,1616,'Port'},{integer,307,255}},
         {nil,307}}},
       {call,1616,{atom,1616,ip4_to_bytes},[{var,1616,'IP'}]}}}]},
   {clause,1617,
    [{atom,1617,addr},{tuple,1617,[{var,1617,'IP'},{var,1617,'Port'}]}],
    [[{op,1617,'=:=',
       {call,1617,{atom,1617,tuple_size},[{var,1617,'IP'}]},
       {integer,1617,8}}]],
    [{cons,1618,
      {integer,29,2},
      {cons,307,
       {cons,307,
        {op,307,'band',
         {op,307,'bsr',{var,1618,'Port'},{integer,307,8}},
         {integer,307,255}},
        {cons,307,
         {op,307,'band',{var,1618,'Port'},{integer,307,255}},
         {nil,307}}},
       {call,1618,{atom,1618,ip6_to_bytes},[{var,1618,'IP'}]}}}]},
   {clause,1619,
    [{atom,1619,ether},
     {match,1619,
      {cons,1619,
       {var,1619,'_'},
       {cons,1619,
        {var,1619,'_'},
        {cons,1619,
         {var,1619,'_'},
         {cons,1619,
          {var,1619,'_'},
          {cons,1619,{var,1619,'_'},{cons,1619,{var,1619,'_'},{nil,1619}}}}}}},
      {var,1619,'Xs'}}],
    [],
    [{var,1619,'Xs'}]},
   {clause,1620,
    [{atom,1620,sockaddr},{atom,1620,any}],
    [],
    [{cons,1621,{integer,30,3},{nil,1621}}]},
   {clause,1622,
    [{atom,1622,sockaddr},{atom,1622,loopback}],
    [],
    [{cons,1623,{integer,31,4},{nil,1623}}]},
   {clause,1624,
    [{atom,1624,sockaddr},{var,1624,'IP'}],
    [[{op,1624,'=:=',
       {call,1624,{atom,1624,tuple_size},[{var,1624,'IP'}]},
       {integer,1624,4}}]],
    [{cons,1625,
      {integer,28,1},
      {call,1625,{atom,1625,ip4_to_bytes},[{var,1625,'IP'}]}}]},
   {clause,1626,
    [{atom,1626,sockaddr},{var,1626,'IP'}],
    [[{op,1626,'=:=',
       {call,1626,{atom,1626,tuple_size},[{var,1626,'IP'}]},
       {integer,1626,8}}]],
    [{cons,1627,
      {integer,29,2},
      {call,1627,{atom,1627,ip6_to_bytes},[{var,1627,'IP'}]}}]},
   {clause,1628,
    [{atom,1628,linkaddr},{var,1628,'Linkaddr'}],
    [],
    [{cons,1629,
      {cons,307,
       {op,307,'band',
        {op,307,'bsr',
         {call,1629,{atom,1629,length},[{var,1629,'Linkaddr'}]},
         {integer,307,8}},
        {integer,307,255}},
       {cons,307,
        {op,307,'band',
         {call,1629,{atom,1629,length},[{var,1629,'Linkaddr'}]},
         {integer,307,255}},
        {nil,307}}},
      {cons,1629,{var,1629,'Linkaddr'},{nil,1629}}}]},
   {clause,1630,
    [{atom,1630,sctp_assoc_id},{var,1630,'Val'}],
    [],
    [{cons,313,
      {op,313,'band',
       {op,313,'bsr',{var,1630,'Val'},{integer,313,24}},
       {integer,313,255}},
      {cons,313,
       {op,313,'band',
        {op,313,'bsr',{var,1630,'Val'},{integer,313,16}},
        {integer,313,255}},
       {cons,314,
        {op,314,'band',
         {op,314,'bsr',{var,1630,'Val'},{integer,314,8}},
         {integer,314,255}},
        {cons,314,
         {op,314,'band',{var,1630,'Val'},{integer,314,255}},
         {nil,314}}}}}]},
   {clause,1632,
    [{tuple,1632,[{atom,1632,enum},{var,1632,'List'}]},{var,1632,'Enum'}],
    [],
    [{match,1633,
      {tuple,1633,[{atom,1633,value},{var,1633,'Val'}]},
      {call,1633,{atom,1633,enum_val},[{var,1633,'Enum'},{var,1633,'List'}]}},
     {cons,313,
      {op,313,'band',
       {op,313,'bsr',{var,1634,'Val'},{integer,313,24}},
       {integer,313,255}},
      {cons,313,
       {op,313,'band',
        {op,313,'bsr',{var,1634,'Val'},{integer,313,16}},
        {integer,313,255}},
       {cons,314,
        {op,314,'band',
         {op,314,'bsr',{var,1634,'Val'},{integer,314,8}},
         {integer,314,255}},
        {cons,314,
         {op,314,'band',{var,1634,'Val'},{integer,314,255}},
         {nil,314}}}}}]},
   {clause,1635,
    [{tuple,1635,[{atom,1635,bitenumlist},{var,1635,'List'}]},
     {var,1635,'EnumList'}],
    [],
    [{match,1636,
      {var,1636,'Vs'},
      {call,1636,
       {atom,1636,enum_vals},
       [{var,1636,'EnumList'},{var,1636,'List'}]}},
     {match,1637,
      {var,1637,'Val'},
      {call,1637,{atom,1637,borlist},[{var,1637,'Vs'},{integer,1637,0}]}},
     {cons,313,
      {op,313,'band',
       {op,313,'bsr',{var,1638,'Val'},{integer,313,24}},
       {integer,313,255}},
      {cons,313,
       {op,313,'band',
        {op,313,'bsr',{var,1638,'Val'},{integer,313,16}},
        {integer,313,255}},
       {cons,314,
        {op,314,'band',
         {op,314,'bsr',{var,1638,'Val'},{integer,314,8}},
         {integer,314,255}},
        {cons,314,
         {op,314,'band',{var,1638,'Val'},{integer,314,255}},
         {nil,314}}}}}]},
   {clause,1639,
    [{tuple,1639,
      [{atom,1639,bitenumlist},{var,1639,'List'},{var,1639,'Type'}]},
     {var,1639,'EnumList'}],
    [],
    [{match,1640,
      {var,1640,'Vs'},
      {call,1640,
       {atom,1640,enum_vals},
       [{var,1640,'EnumList'},{var,1640,'List'}]}},
     {match,1641,
      {var,1641,'Value'},
      {call,1641,{atom,1641,borlist},[{var,1641,'Vs'},{integer,1641,0}]}},
     {call,1642,
      {atom,1642,enc_value_2},
      [{var,1642,'Type'},{var,1642,'Value'}]}]},
   {clause,1643,
    [{atom,1643,binary},{var,1643,'Bin'}],
    [],
    [{cons,1643,
      {cons,313,
       {op,313,'band',
        {op,313,'bsr',
         {call,1643,{atom,1643,byte_size},[{var,1643,'Bin'}]},
         {integer,313,24}},
        {integer,313,255}},
       {cons,313,
        {op,313,'band',
         {op,313,'bsr',
          {call,1643,{atom,1643,byte_size},[{var,1643,'Bin'}]},
          {integer,313,16}},
         {integer,313,255}},
        {cons,314,
         {op,314,'band',
          {op,314,'bsr',
           {call,1643,{atom,1643,byte_size},[{var,1643,'Bin'}]},
           {integer,314,8}},
          {integer,314,255}},
         {cons,314,
          {op,314,'band',
           {call,1643,{atom,1643,byte_size},[{var,1643,'Bin'}]},
           {integer,314,255}},
          {nil,314}}}}},
      {cons,1643,{var,1643,'Bin'},{nil,1643}}}]},
   {clause,1644,
    [{atom,1644,binary_or_uint},{var,1644,'Datum'}],
    [[{call,1644,{atom,1644,is_binary},[{var,1644,'Datum'}]}]],
    [{cons,1645,
      {integer,1645,1},
      {cons,1645,
       {call,1645,
        {atom,1645,enc_value_2},
        [{atom,1645,binary},{var,1645,'Datum'}]},
       {nil,1645}}}]},
   {clause,1646,
    [{atom,1646,binary_or_uint},{var,1646,'Datum'}],
    [[{call,1646,{atom,1646,is_integer},[{var,1646,'Datum'}]}]],
    [{cons,1647,
      {integer,1647,0},
      {cons,1647,
       {call,1647,
        {atom,1647,enc_value_2},
        [{atom,1647,uint},{var,1647,'Datum'}]},
       {nil,1647}}}]}]},
 {function,1655,dec_value,2,
  [{clause,1655,
    [{atom,1655,bool},
     {cons,1655,
      {integer,1655,0},
      {cons,1655,
       {integer,1655,0},
       {cons,1655,
        {integer,1655,0},
        {cons,1655,{integer,1655,0},{var,1655,'T'}}}}}],
    [],
    [{tuple,1655,[{atom,1655,false},{var,1655,'T'}]}]},
   {clause,1656,
    [{atom,1656,bool},
     {cons,1656,
      {var,1656,'_'},
      {cons,1656,
       {var,1656,'_'},
       {cons,1656,{var,1656,'_'},{cons,1656,{var,1656,'_'},{var,1656,'T'}}}}}],
    [],
    [{tuple,1656,[{atom,1656,true},{var,1656,'T'}]}]},
   {clause,1660,
    [{atom,1660,int},
     {cons,1660,
      {var,1660,'X3'},
      {cons,1660,
       {var,1660,'X2'},
       {cons,1660,
        {var,1660,'X1'},
        {cons,1660,{var,1660,'X0'},{var,1660,'T'}}}}}],
    [],
    [{tuple,1660,
      [{op,338,'-',
        {op,326,'bor',
         {op,326,'bor',
          {op,326,'bor',
           {op,326,'bsl',{var,1660,'X3'},{integer,326,24}},
           {op,326,'bsl',{var,1660,'X2'},{integer,326,16}}},
          {op,326,'bsl',{var,1660,'X1'},{integer,326,8}}},
         {var,1660,'X0'}},
        {'if',339,
         [{clause,339,[],
           [[{op,339,'>',{var,1660,'X3'},{integer,339,127}}]],
           [{integer,339,4294967296}]},
          {clause,339,[],[[{atom,339,true}]],[{integer,339,0}]}]}},
       {var,1660,'T'}]}]},
   {clause,1661,
    [{atom,1661,uint},
     {cons,1661,
      {var,1661,'X3'},
      {cons,1661,
       {var,1661,'X2'},
       {cons,1661,
        {var,1661,'X1'},
        {cons,1661,{var,1661,'X0'},{var,1661,'T'}}}}}],
    [],
    [{tuple,1661,
      [{op,326,'bor',
        {op,326,'bor',
         {op,326,'bor',
          {op,326,'bsl',{var,1661,'X3'},{integer,326,24}},
          {op,326,'bsl',{var,1661,'X2'},{integer,326,16}}},
         {op,326,'bsl',{var,1661,'X1'},{integer,326,8}}},
        {var,1661,'X0'}},
       {var,1661,'T'}]}]},
   {clause,1667,
    [{atom,1667,time},
     {cons,1667,
      {var,1667,'X3'},
      {cons,1667,
       {var,1667,'X2'},
       {cons,1667,
        {var,1667,'X1'},
        {cons,1667,{var,1667,'X0'},{var,1667,'T'}}}}}],
    [],
    [{'case',1668,
      {op,338,'-',
       {op,326,'bor',
        {op,326,'bor',
         {op,326,'bor',
          {op,326,'bsl',{var,1668,'X3'},{integer,326,24}},
          {op,326,'bsl',{var,1668,'X2'},{integer,326,16}}},
         {op,326,'bsl',{var,1668,'X1'},{integer,326,8}}},
        {var,1668,'X0'}},
       {'if',339,
        [{clause,339,[],
          [[{op,339,'>',{var,1668,'X3'},{integer,339,127}}]],
          [{integer,339,4294967296}]},
         {clause,339,[],[[{atom,339,true}]],[{integer,339,0}]}]}},
      [{clause,1669,
        [{op,1669,'-',{integer,1669,1}}],
        [],
        [{tuple,1669,[{atom,1669,infinity},{var,1669,'T'}]}]},
       {clause,1670,
        [{var,1670,'Val'}],
        [],
        [{tuple,1670,[{var,1670,'Val'},{var,1670,'T'}]}]}]}]},
   {clause,1672,
    [{atom,1672,ip},
     {cons,1672,
      {var,1672,'A'},
      {cons,1672,
       {var,1672,'B'},
       {cons,1672,{var,1672,'C'},{cons,1672,{var,1672,'D'},{var,1672,'T'}}}}}],
    [],
    [{tuple,1672,
      [{tuple,1672,
        [{var,1672,'A'},{var,1672,'B'},{var,1672,'C'},{var,1672,'D'}]},
       {var,1672,'T'}]}]},
   {clause,1674,
    [{atom,1674,sockaddr},{cons,1674,{var,1674,'X'},{var,1674,'T'}}],
    [],
    [{call,1675,{atom,1675,get_ip},[{var,1675,'X'},{var,1675,'T'}]}]},
   {clause,1676,
    [{atom,1676,linkaddr},
     {cons,1676,{var,1676,'X1'},{cons,1676,{var,1676,'X0'},{var,1676,'T'}}}],
    [],
    [{call,1677,
      {atom,1677,split},
      [{op,346,'-',
        {op,332,'bor',
         {op,332,'bsl',{var,1677,'X1'},{integer,332,8}},
         {var,1677,'X0'}},
        {'if',347,
         [{clause,347,[],
           [[{op,347,'>',{var,1677,'X1'},{integer,347,127}}]],
           [{integer,347,65536}]},
          {clause,347,[],[[{atom,347,true}]],[{integer,347,0}]}]}},
       {var,1677,'T'}]}]},
   {clause,1678,
    [{tuple,1678,[{atom,1678,enum},{var,1678,'List'}]},
     {cons,1678,
      {var,1678,'X3'},
      {cons,1678,
       {var,1678,'X2'},
       {cons,1678,
        {var,1678,'X1'},
        {cons,1678,{var,1678,'X0'},{var,1678,'T'}}}}}],
    [],
    [{match,1679,
      {var,1679,'Val'},
      {op,338,'-',
       {op,326,'bor',
        {op,326,'bor',
         {op,326,'bor',
          {op,326,'bsl',{var,1679,'X3'},{integer,326,24}},
          {op,326,'bsl',{var,1679,'X2'},{integer,326,16}}},
         {op,326,'bsl',{var,1679,'X1'},{integer,326,8}}},
        {var,1679,'X0'}},
       {'if',339,
        [{clause,339,[],
          [[{op,339,'>',{var,1679,'X3'},{integer,339,127}}]],
          [{integer,339,4294967296}]},
         {clause,339,[],[[{atom,339,true}]],[{integer,339,0}]}]}}},
     {'case',1680,
      {call,1680,{atom,1680,enum_name},[{var,1680,'Val'},{var,1680,'List'}]},
      [{clause,1681,
        [{tuple,1681,[{atom,1681,name},{var,1681,'Enum'}]}],
        [],
        [{tuple,1681,[{var,1681,'Enum'},{var,1681,'T'}]}]},
       {clause,1682,
        [{var,1682,'_'}],
        [],
        [{tuple,1682,[{atom,1682,undefined},{var,1682,'T'}]}]}]}]},
   {clause,1684,
    [{tuple,1684,[{atom,1684,bitenumlist},{var,1684,'List'}]},
     {cons,1684,
      {var,1684,'X3'},
      {cons,1684,
       {var,1684,'X2'},
       {cons,1684,
        {var,1684,'X1'},
        {cons,1684,{var,1684,'X0'},{var,1684,'T'}}}}}],
    [],
    [{match,1685,
      {var,1685,'Val'},
      {op,338,'-',
       {op,326,'bor',
        {op,326,'bor',
         {op,326,'bor',
          {op,326,'bsl',{var,1685,'X3'},{integer,326,24}},
          {op,326,'bsl',{var,1685,'X2'},{integer,326,16}}},
         {op,326,'bsl',{var,1685,'X1'},{integer,326,8}}},
        {var,1685,'X0'}},
       {'if',339,
        [{clause,339,[],
          [[{op,339,'>',{var,1685,'X3'},{integer,339,127}}]],
          [{integer,339,4294967296}]},
         {clause,339,[],[[{atom,339,true}]],[{integer,339,0}]}]}}},
     {tuple,1686,
      [{call,1686,{atom,1686,enum_names},[{var,1686,'Val'},{var,1686,'List'}]},
       {var,1686,'T'}]}]},
   {clause,1691,
    [{atom,1691,binary},
     {cons,1691,
      {var,1691,'L0'},
      {cons,1691,
       {var,1691,'L1'},
       {cons,1691,
        {var,1691,'L2'},
        {cons,1691,{var,1691,'L3'},{var,1691,'List'}}}}}],
    [],
    [{match,1692,
      {var,1692,'Len'},
      {op,338,'-',
       {op,326,'bor',
        {op,326,'bor',
         {op,326,'bor',
          {op,326,'bsl',{var,1692,'L0'},{integer,326,24}},
          {op,326,'bsl',{var,1692,'L1'},{integer,326,16}}},
         {op,326,'bsl',{var,1692,'L2'},{integer,326,8}}},
        {var,1692,'L3'}},
       {'if',339,
        [{clause,339,[],
          [[{op,339,'>',{var,1692,'L0'},{integer,339,127}}]],
          [{integer,339,4294967296}]},
         {clause,339,[],[[{atom,339,true}]],[{integer,339,0}]}]}}},
     {match,1693,
      {tuple,1693,[{var,1693,'X'},{var,1693,'T'}]},
      {call,1693,{atom,1693,split},[{var,1693,'Len'},{var,1693,'List'}]}},
     {tuple,1694,
      [{call,1694,{atom,1694,list_to_binary},[{var,1694,'X'}]},
       {var,1694,'T'}]}]},
   {clause,1695,
    [{var,1695,'Types'},{var,1695,'List'}],
    [[{call,1695,{atom,1695,is_tuple},[{var,1695,'Types'}]}]],
    [{match,1696,
      {tuple,1696,[{var,1696,'L'},{var,1696,'T'}]},
      {call,1696,
       {atom,1696,dec_value_tuple},
       [{var,1696,'Types'},{var,1696,'List'},{integer,1696,1},{nil,1696}]}},
     {tuple,1697,
      [{call,1697,{atom,1697,list_to_tuple},[{var,1697,'L'}]},
       {var,1697,'T'}]}]},
   {clause,1698,
    [{var,1698,'Type'},{var,1698,'Val'}],
    [],
    [{call,1699,
      {remote,1699,{atom,1699,erlang},{atom,1699,error}},
      [{tuple,1699,
        [{atom,1699,decode},{var,1699,'Type'},{var,1699,'Val'}]}]}]}]},
 {function,1703,dec_value_tuple,4,
  [{clause,1703,
    [{var,1703,'Types'},{var,1703,'List'},{var,1703,'N'},{var,1703,'Acc'}],
    [[{call,1704,{atom,1704,is_integer},[{var,1704,'N'}]},
      {op,1704,'=<',
       {var,1704,'N'},
       {call,1704,{atom,1704,tuple_size},[{var,1704,'Types'}]}}]],
    [{match,1705,
      {tuple,1705,[{var,1705,'Term'},{var,1705,'Tail'}]},
      {call,1705,
       {atom,1705,dec_value},
       [{call,1705,{atom,1705,element},[{var,1705,'N'},{var,1705,'Types'}]},
        {var,1705,'List'}]}},
     {call,1706,
      {atom,1706,dec_value_tuple},
      [{var,1706,'Types'},
       {var,1706,'Tail'},
       {op,1706,'+',{var,1706,'N'},{integer,1706,1}},
       {cons,1706,{var,1706,'Term'},{var,1706,'Acc'}}]}]},
   {clause,1707,
    [{var,1707,'_'},{var,1707,'List'},{var,1707,'_'},{var,1707,'Acc'}],
    [],
    [{tuple,1708,
      [{call,1708,{atom,1708,rev},[{var,1708,'Acc'}]},{var,1708,'List'}]}]}]},
 {function,1710,borlist,2,
  [{clause,1710,
    [{cons,1710,{var,1710,'V'},{var,1710,'Vs'}},{var,1710,'Value'}],
    [],
    [{call,1711,
      {atom,1711,borlist},
      [{var,1711,'Vs'},{op,1711,'bor',{var,1711,'V'},{var,1711,'Value'}}]}]},
   {clause,1712,[{nil,1712},{var,1712,'Value'}],[],[{var,1712,'Value'}]}]},
 {function,1715,enum_vals,2,
  [{clause,1715,
    [{cons,1715,{var,1715,'Enum'},{var,1715,'Es'}},{var,1715,'List'}],
    [],
    [{'case',1716,
      {call,1716,{atom,1716,enum_val},[{var,1716,'Enum'},{var,1716,'List'}]},
      [{clause,1717,[{atom,1717,false}],[],[{atom,1717,false}]},
       {clause,1718,
        [{tuple,1718,[{atom,1718,value},{var,1718,'Value'}]}],
        [],
        [{cons,1718,
          {var,1718,'Value'},
          {call,1718,
           {atom,1718,enum_vals},
           [{var,1718,'Es'},{var,1718,'List'}]}}]}]}]},
   {clause,1720,[{nil,1720},{var,1720,'_'}],[],[{nil,1720}]}]},
 {function,1722,enum_names,2,
  [{clause,1722,
    [{var,1722,'Val'},
     {cons,1722,
      {tuple,1722,[{var,1722,'Enum'},{var,1722,'BitVal'}]},
      {var,1722,'List'}}],
    [],
    [{'if',1723,
      [{clause,1723,[],
        [[{op,1723,'=:=',
           {op,1723,'band',{var,1723,'Val'},{var,1723,'BitVal'}},
           {var,1723,'BitVal'}}]],
        [{cons,1724,
          {var,1724,'Enum'},
          {call,1724,
           {atom,1724,enum_names},
           [{var,1724,'Val'},{var,1724,'List'}]}}]},
       {clause,1725,[],
        [[{atom,1725,true}]],
        [{call,1726,
          {atom,1726,enum_names},
          [{var,1726,'Val'},{var,1726,'List'}]}]}]}]},
   {clause,1728,[{var,1728,'_'},{nil,1728}],[],[{nil,1728}]}]},
 {function,1730,enum_val,2,
  [{clause,1730,
    [{var,1730,'Enum'},
     {cons,1730,
      {tuple,1730,[{var,1730,'Enum'},{var,1730,'Value'}]},
      {var,1730,'_'}}],
    [],
    [{tuple,1730,[{atom,1730,value},{var,1730,'Value'}]}]},
   {clause,1731,
    [{var,1731,'Enum'},{cons,1731,{var,1731,'_'},{var,1731,'List'}}],
    [],
    [{call,1731,{atom,1731,enum_val},[{var,1731,'Enum'},{var,1731,'List'}]}]},
   {clause,1732,[{var,1732,'_'},{nil,1732}],[],[{atom,1732,false}]}]},
 {function,1734,enum_name,2,
  [{clause,1734,
    [{var,1734,'Val'},
     {cons,1734,
      {tuple,1734,[{var,1734,'Enum'},{var,1734,'Val'}]},
      {var,1734,'_'}}],
    [],
    [{tuple,1734,[{atom,1734,name},{var,1734,'Enum'}]}]},
   {clause,1735,
    [{var,1735,'Val'},{cons,1735,{var,1735,'_'},{var,1735,'List'}}],
    [],
    [{call,1735,{atom,1735,enum_name},[{var,1735,'Val'},{var,1735,'List'}]}]},
   {clause,1736,[{var,1736,'_'},{nil,1736}],[],[{atom,1736,false}]}]},
 {function,1744,encode_opt_val,1,
  [{clause,1744,
    [{var,1744,'Opts'}],
    [],
    [{'try',1745,
      [{call,1746,{atom,1746,enc_opt_val},[{var,1746,'Opts'},{nil,1746}]}],
      [],
      [{clause,1748,
        [{tuple,1748,[{atom,1748,throw},{var,1748,'Reason'},{var,1748,'_'}]}],
        [],
        [{tuple,1748,[{atom,1748,error},{var,1748,'Reason'}]}]}],
      []}]}]},
 {function,1755,enc_opt_val,2,
  [{clause,1755,
    [{cons,1755,
      {tuple,1755,[{atom,1755,active},{atom,1755,once}]},
      {var,1755,'Opts'}},
     {var,1755,'Acc'}],
    [],
    [{call,1756,
      {atom,1756,enc_opt_val},
      [{var,1756,'Opts'},
       {cons,1756,
        {bin,1756,
         [{bin_element,135,{integer,135,22},{integer,1756,8},default},
          {bin_element,49,{integer,49,2},{integer,1756,32},default}]},
        {var,1756,'Acc'}}]}]},
   {clause,1757,
    [{cons,1757,
      {tuple,1757,[{atom,1757,active},{var,1757,'N'}]},
      {var,1757,'Opts'}},
     {var,1757,'Acc'}],
    [[{call,1757,{atom,1757,is_integer},[{var,1757,'N'}]},
      {op,1757,'<',{var,1757,'N'},{integer,1757,32768}},
      {op,1757,'>=',{var,1757,'N'},{op,1757,'-',{integer,1757,32768}}}]],
    [{call,1758,
      {atom,1758,enc_opt_val},
      [{var,1758,'Opts'},
       {cons,1758,
        {bin,1758,
         [{bin_element,135,{integer,135,22},{integer,1758,8},default},
          {bin_element,50,{integer,50,3},{integer,1758,32},default},
          {bin_element,1758,{var,1758,'N'},{integer,1758,16},default}]},
        {var,1758,'Acc'}}]}]},
   {clause,1759,
    [{cons,1759,
      {tuple,1759,
       [{atom,1759,raw},{var,1759,'P'},{var,1759,'O'},{var,1759,'B'}]},
      {var,1759,'Opts'}},
     {var,1759,'Acc'}],
    [],
    [{call,1760,
      {atom,1760,enc_opt_val},
      [{var,1760,'Opts'},
       {var,1760,'Acc'},
       {atom,1760,raw},
       {tuple,1760,[{var,1760,'P'},{var,1760,'O'},{var,1760,'B'}]}]}]},
   {clause,1761,
    [{cons,1761,
      {tuple,1761,[{var,1761,'Opt'},{var,1761,'Val'}]},
      {var,1761,'Opts'}},
     {var,1761,'Acc'}],
    [],
    [{call,1762,
      {atom,1762,enc_opt_val},
      [{var,1762,'Opts'},
       {var,1762,'Acc'},
       {var,1762,'Opt'},
       {var,1762,'Val'}]}]},
   {clause,1763,
    [{cons,1763,{atom,1763,binary},{var,1763,'Opts'}},{var,1763,'Acc'}],
    [],
    [{call,1764,
      {atom,1764,enc_opt_val},
      [{var,1764,'Opts'},
       {var,1764,'Acc'},
       {atom,1764,mode},
       {atom,1764,binary}]}]},
   {clause,1765,
    [{cons,1765,{atom,1765,list},{var,1765,'Opts'}},{var,1765,'Acc'}],
    [],
    [{call,1766,
      {atom,1766,enc_opt_val},
      [{var,1766,'Opts'},
       {var,1766,'Acc'},
       {atom,1766,mode},
       {atom,1766,list}]}]},
   {clause,1767,
    [{cons,1767,{var,1767,'_'},{var,1767,'_'}},{var,1767,'_'}],
    [],
    [{tuple,1767,[{atom,1767,error},{atom,1767,einval}]}]},
   {clause,1768,
    [{nil,1768},{var,1768,'Acc'}],
    [],
    [{tuple,1768,[{atom,1768,ok},{var,1768,'Acc'}]}]}]},
 {function,1770,enc_opt_val,4,
  [{clause,1770,
    [{var,1770,'Opts'},{var,1770,'Acc'},{var,1770,'Opt'},{var,1770,'Val'}],
    [[{call,1770,{atom,1770,is_atom},[{var,1770,'Opt'}]}]],
    [{match,1771,
      {var,1771,'Type'},
      {call,1771,{atom,1771,type_opt},[{atom,1771,set},{var,1771,'Opt'}]}},
     {'case',1772,
      {call,1772,
       {atom,1772,type_value},
       [{atom,1772,set},{var,1772,'Type'},{var,1772,'Val'}]},
      [{clause,1773,
        [{atom,1773,true}],
        [],
        [{call,1774,
          {atom,1774,enc_opt_val},
          [{var,1774,'Opts'},
           {cons,1774,
            {call,1774,{atom,1774,enc_opt},[{var,1774,'Opt'}]},
            {cons,1774,
             {call,1774,
              {atom,1774,enc_value},
              [{atom,1774,set},{var,1774,'Type'},{var,1774,'Val'}]},
             {var,1774,'Acc'}}}]}]},
       {clause,1775,
        [{atom,1775,false}],
        [],
        [{tuple,1775,[{atom,1775,error},{atom,1775,einval}]}]}]}]},
   {clause,1777,
    [{var,1777,'_'},{var,1777,'_'},{var,1777,'_'},{var,1777,'_'}],
    [],
    [{tuple,1777,[{atom,1777,error},{atom,1777,einval}]}]}]},
 {function,1785,encode_opts,1,
  [{clause,1785,
    [{var,1785,'Opts'}],
    [],
    [{'try',1786,
      [{call,1786,{atom,1786,enc_opts},[{var,1786,'Opts'}]}],
      [{clause,1787,
        [{var,1787,'Buf'}],
        [],
        [{tuple,1787,[{atom,1787,ok},{var,1787,'Buf'}]}]}],
      [{clause,1789,
        [{tuple,1789,[{atom,1789,throw},{var,1789,'Error'},{var,1789,'_'}]}],
        [],
        [{tuple,1789,[{atom,1789,error},{var,1789,'Error'}]}]}],
      []}]}]},
 {function,1794,enc_opts,1,
  [{clause,1794,
    [{cons,1794,
      {tuple,1794,
       [{atom,1794,raw},{var,1794,'P'},{var,1794,'O'},{var,1794,'S'}]},
      {var,1794,'Opts'}}],
    [],
    [{call,1795,
      {atom,1795,enc_opts},
      [{var,1795,'Opts'},
       {atom,1795,raw},
       {tuple,1795,[{var,1795,'P'},{var,1795,'O'},{var,1795,'S'}]}]}]},
   {clause,1796,
    [{cons,1796,
      {tuple,1796,[{var,1796,'Opt'},{var,1796,'Val'}]},
      {var,1796,'Opts'}}],
    [],
    [{call,1797,
      {atom,1797,enc_opts},
      [{var,1797,'Opts'},{var,1797,'Opt'},{var,1797,'Val'}]}]},
   {clause,1798,
    [{cons,1798,{var,1798,'Opt'},{var,1798,'Opts'}}],
    [],
    [{call,1799,{atom,1799,enc_opts},[{var,1799,'Opts'},{var,1799,'Opt'}]}]},
   {clause,1800,[{nil,1800}],[],[{nil,1800}]}]},
 {function,1802,enc_opts,2,
  [{clause,1802,
    [{var,1802,'Opts'},{var,1802,'Opt'}],
    [[{call,1802,{atom,1802,is_atom},[{var,1802,'Opt'}]}]],
    [{match,1803,
      {var,1803,'Type'},
      {call,1803,{atom,1803,type_opt},[{atom,1803,get},{var,1803,'Opt'}]}},
     {'case',1804,
      {call,1804,{atom,1804,type_value},[{atom,1804,get},{var,1804,'Type'}]},
      [{clause,1805,
        [{atom,1805,true}],
        [],
        [{cons,1806,
          {call,1806,{atom,1806,enc_opt},[{var,1806,'Opt'}]},
          {cons,1806,
           {call,1806,
            {atom,1806,enc_value},
            [{atom,1806,get},{var,1806,'Type'}]},
           {call,1806,{atom,1806,enc_opts},[{var,1806,'Opts'}]}}}]},
       {clause,1807,
        [{atom,1807,false}],
        [],
        [{call,1808,{atom,1808,throw},[{atom,1808,einval}]}]}]}]},
   {clause,1810,
    [{var,1810,'_'},{var,1810,'_'}],
    [],
    [{call,1811,{atom,1811,throw},[{atom,1811,einval}]}]}]},
 {function,1813,enc_opts,3,
  [{clause,1813,
    [{var,1813,'Opts'},{var,1813,'Opt'},{var,1813,'Val'}],
    [[{call,1813,{atom,1813,is_atom},[{var,1813,'Opt'}]}]],
    [{match,1814,
      {var,1814,'Type'},
      {call,1814,{atom,1814,type_opt},[{atom,1814,get},{var,1814,'Opt'}]}},
     {'case',1815,
      {call,1815,
       {atom,1815,type_value},
       [{atom,1815,get},{var,1815,'Type'},{var,1815,'Val'}]},
      [{clause,1816,
        [{atom,1816,true}],
        [],
        [{cons,1817,
          {call,1817,{atom,1817,enc_opt},[{var,1817,'Opt'}]},
          {cons,1817,
           {call,1817,
            {atom,1817,enc_value},
            [{atom,1817,get},{var,1817,'Type'},{var,1817,'Val'}]},
           {call,1817,{atom,1817,enc_opts},[{var,1817,'Opts'}]}}}]},
       {clause,1818,
        [{atom,1818,false}],
        [],
        [{call,1819,{atom,1819,throw},[{atom,1819,einval}]}]}]}]},
   {clause,1821,
    [{var,1821,'_'},{var,1821,'_'},{var,1821,'_'}],
    [],
    [{call,1822,{atom,1822,throw},[{atom,1822,einval}]}]}]},
 {function,1828,decode_opt_val,1,
  [{clause,1828,
    [{var,1828,'Buf'}],
    [],
    [{'try',1829,
      [{call,1829,{atom,1829,dec_opt_val},[{var,1829,'Buf'}]}],
      [{clause,1830,
        [{var,1830,'Result'}],
        [],
        [{tuple,1830,[{atom,1830,ok},{var,1830,'Result'}]}]}],
      [{clause,1832,
        [{tuple,1832,[{atom,1832,throw},{var,1832,'Error'},{var,1832,'_'}]}],
        [],
        [{tuple,1832,[{atom,1832,error},{var,1832,'Error'}]}]}],
      []}]}]},
 {function,1835,dec_opt_val,1,
  [{clause,1835,
    [{match,1835,
      {cons,1835,{var,1835,'B'},{var,1835,'Buf'}},
      {var,1835,'BBuf'}}],
    [],
    [{'case',1836,
      {call,1836,{atom,1836,dec_opt},[{var,1836,'B'}]},
      [{clause,1837,
        [{atom,1837,undefined}],
        [],
        [{call,1838,
          {remote,1838,{atom,1838,erlang},{atom,1838,error}},
          [{tuple,1838,[{atom,1838,decode},{var,1838,'BBuf'}]}]}]},
       {clause,1839,
        [{var,1839,'Opt'}],
        [],
        [{match,1840,
          {var,1840,'Type'},
          {call,1840,{atom,1840,type_opt},[{atom,1840,dec},{var,1840,'Opt'}]}},
         {call,1841,
          {atom,1841,dec_opt_val},
          [{var,1841,'Buf'},{var,1841,'Opt'},{var,1841,'Type'}]}]}]}]},
   {clause,1843,[{nil,1843}],[],[{nil,1843}]}]},
 {function,1845,dec_opt_val,3,
  [{clause,1845,
    [{var,1845,'Buf'},{atom,1845,raw},{var,1845,'Type'}],
    [],
    [{match,1846,
      {tuple,1846,
       [{tuple,1846,[{var,1846,'P'},{var,1846,'O'},{var,1846,'B'}]},
        {var,1846,'T'}]},
      {call,1846,{atom,1846,dec_value},[{var,1846,'Type'},{var,1846,'Buf'}]}},
     {cons,1847,
      {tuple,1847,
       [{atom,1847,raw},{var,1847,'P'},{var,1847,'O'},{var,1847,'B'}]},
      {call,1847,{atom,1847,dec_opt_val},[{var,1847,'T'}]}}]},
   {clause,1848,
    [{var,1848,'Buf'},{atom,1848,active},{var,1848,'Type'}],
    [],
    [{'case',1849,
      {call,1849,{atom,1849,dec_value},[{var,1849,'Type'},{var,1849,'Buf'}]},
      [{clause,1850,
        [{tuple,1850,
          [{atom,1850,multi},
           {cons,1850,
            {var,1850,'M0'},
            {cons,1850,{var,1850,'M1'},{var,1850,'T'}}}]}],
        [],
        [{match,1851,
          {bin,1851,
           [{bin_element,1851,{var,1851,'N'},{integer,1851,16},default}]},
          {call,1851,
           {atom,1851,list_to_binary},
           [{cons,1851,
             {var,1851,'M0'},
             {cons,1851,{var,1851,'M1'},{nil,1851}}}]}},
         {cons,1852,
          {tuple,1852,[{atom,1852,active},{var,1852,'N'}]},
          {call,1852,{atom,1852,dec_opt_val},[{var,1852,'T'}]}}]},
       {clause,1853,
        [{tuple,1853,[{var,1853,'Val'},{var,1853,'T'}]}],
        [],
        [{cons,1854,
          {tuple,1854,[{atom,1854,active},{var,1854,'Val'}]},
          {call,1854,{atom,1854,dec_opt_val},[{var,1854,'T'}]}}]}]}]},
   {clause,1856,
    [{var,1856,'Buf'},{var,1856,'Opt'},{var,1856,'Type'}],
    [],
    [{match,1857,
      {tuple,1857,[{var,1857,'Val'},{var,1857,'T'}]},
      {call,1857,{atom,1857,dec_value},[{var,1857,'Type'},{var,1857,'Buf'}]}},
     {cons,1858,
      {tuple,1858,[{var,1858,'Opt'},{var,1858,'Val'}]},
      {call,1858,{atom,1858,dec_opt_val},[{var,1858,'T'}]}}]}]},
 {function,1867,need_template,1,
  [{clause,1867,
    [{cons,1867,
      {match,1867,
       {tuple,1867,[{var,1867,'Opt'},{atom,1867,undefined}]},
       {var,1867,'OV'}},
      {var,1867,'Opts'}}],
    [[{call,1867,{atom,1867,is_atom},[{var,1867,'Opt'}]}]],
    [{cons,1868,
      {var,1868,'OV'},
      {call,1868,{atom,1868,need_template},[{var,1868,'Opts'}]}}]},
   {clause,1869,
    [{cons,1869,
      {tuple,1869,[{var,1869,'Opt'},{var,1869,'Val'}]},
      {var,1869,'Opts'}}],
    [[{call,1869,{atom,1869,is_atom},[{var,1869,'Opt'}]}]],
    [{'case',1870,
      {call,1870,
       {atom,1870,need_template},
       [{var,1870,'Val'},{integer,1870,2}]},
      [{clause,1871,
        [{atom,1871,true}],
        [],
        [{cons,1872,
          {tuple,1872,[{var,1872,'Opt'},{atom,1872,undefined}]},
          {call,1872,{atom,1872,need_template},[{var,1872,'Opts'}]}}]},
       {clause,1873,
        [{atom,1873,false}],
        [],
        [{call,1874,{atom,1874,need_template},[{var,1874,'Opts'}]}]}]}]},
   {clause,1876,
    [{cons,1876,{var,1876,'_'},{var,1876,'Opts'}}],
    [],
    [{call,1877,{atom,1877,need_template},[{var,1877,'Opts'}]}]},
   {clause,1878,[{nil,1878}],[],[{nil,1878}]}]},
 {function,1880,need_template,2,
  [{clause,1880,
    [{var,1880,'T'},{var,1880,'N'}],
    [[{call,1880,{atom,1880,is_integer},[{var,1880,'N'}]},
      {op,1880,'=<',
       {var,1880,'N'},
       {call,1880,{atom,1880,tuple_size},[{var,1880,'T'}]}}]],
    [{'case',1881,
      {call,1881,{atom,1881,element},[{var,1881,'N'},{var,1881,'T'}]},
      [{clause,1882,[{atom,1882,undefined}],[],[{atom,1882,true}]},
       {clause,1883,
        [{var,1883,'_'}],
        [],
        [{call,1884,
          {atom,1884,need_template},
          [{var,1884,'T'},
           {op,1884,'+',{var,1884,'N'},{integer,1884,1}}]}]}]}]},
   {clause,1886,[{var,1886,'_'},{var,1886,'_'}],[],[{atom,1886,false}]}]},
 {function,1891,merge_options,2,
  [{clause,1891,
    [{cons,1891,
      {tuple,1891,[{var,1891,'Opt'},{atom,1891,undefined}]},
      {var,1891,'Opts'}},
     {cons,1891,
      {match,1891,
       {tuple,1891,[{var,1891,'Opt'},{var,1891,'_'}]},
       {var,1891,'T'}},
      {var,1891,'Templates'}}],
    [],
    [{cons,1892,
      {var,1892,'T'},
      {call,1892,
       {atom,1892,merge_options},
       [{var,1892,'Opts'},{var,1892,'Templates'}]}}]},
   {clause,1893,
    [{cons,1893,
      {tuple,1893,[{var,1893,'Opt'},{var,1893,'Val'}]},
      {var,1893,'Opts'}},
     {cons,1893,
      {tuple,1893,[{var,1893,'Opt'},{var,1893,'Template'}]},
      {var,1893,'Templates'}}],
    [[{call,1894,{atom,1894,is_atom},[{var,1894,'Opt'}]},
      {op,1894,'>=',
       {call,1894,{atom,1894,tuple_size},[{var,1894,'Val'}]},
       {integer,1894,2}}]],
    [{match,1895,
      {var,1895,'Key'},
      {call,1895,{atom,1895,element},[{integer,1895,1},{var,1895,'Val'}]}},
     {match,1896,
      {var,1896,'Size'},
      {call,1896,{atom,1896,tuple_size},[{var,1896,'Val'}]}},
     {'if',1897,
      [{clause,1897,[],
        [[{op,1897,'=:=',
           {var,1897,'Size'},
           {call,1897,{atom,1897,tuple_size},[{var,1897,'Template'}]}},
          {op,1897,'=:=',
           {var,1897,'Key'},
           {call,1897,
            {atom,1897,element},
            [{integer,1897,1},{var,1897,'Template'}]}}]],
        [{cons,1899,
          {tuple,1899,
           [{var,1899,'Opt'},
            {call,1899,
             {atom,1899,list_to_tuple},
             [{cons,1899,
               {var,1899,'Key'},
               {call,1899,
                {atom,1899,merge_fields},
                [{var,1899,'Val'},
                 {var,1899,'Template'},
                 {integer,1899,2}]}}]}]},
          {call,1900,
           {atom,1900,merge_options},
           [{var,1900,'Opts'},{var,1900,'Templates'}]}}]},
       {clause,1901,[],
        [[{atom,1901,true}]],
        [{call,1902,
          {atom,1902,throw},
          [{tuple,1902,
            [{atom,1902,merge},
             {var,1902,'Val'},
             {var,1902,'Template'}]}]}]}]}]},
   {clause,1904,
    [{cons,1904,{var,1904,'OptVal'},{var,1904,'Opts'}},{var,1904,'Templates'}],
    [],
    [{cons,1905,
      {var,1905,'OptVal'},
      {call,1905,
       {atom,1905,merge_options},
       [{var,1905,'Opts'},{var,1905,'Templates'}]}}]},
   {clause,1906,[{nil,1906},{nil,1906}],[],[{nil,1906}]},
   {clause,1907,
    [{var,1907,'Opts'},{var,1907,'Templates'}],
    [],
    [{call,1908,
      {atom,1908,throw},
      [{tuple,1908,
        [{atom,1908,merge},{var,1908,'Opts'},{var,1908,'Templates'}]}]}]}]},
 {function,1910,merge_fields,3,
  [{clause,1910,
    [{var,1910,'Opt'},{var,1910,'Template'},{var,1910,'N'}],
    [[{call,1910,{atom,1910,is_integer},[{var,1910,'N'}]},
      {op,1910,'=<',
       {var,1910,'N'},
       {call,1910,{atom,1910,tuple_size},[{var,1910,'Opt'}]}}]],
    [{'case',1911,
      {call,1911,{atom,1911,element},[{var,1911,'N'},{var,1911,'Opt'}]},
      [{clause,1912,
        [{atom,1912,undefined}],
        [],
        [{cons,1913,
          {call,1913,
           {atom,1913,element},
           [{var,1913,'N'},{var,1913,'Template'}]},
          {call,1913,
           {atom,1913,merge_fields},
           [{var,1913,'Opt'},
            {var,1913,'Template'},
            {op,1913,'+',{var,1913,'N'},{integer,1913,1}}]}}]},
       {clause,1914,
        [{var,1914,'Val'}],
        [],
        [{cons,1915,
          {var,1915,'Val'},
          {call,1915,
           {atom,1915,merge_fields},
           [{var,1915,'Opt'},
            {var,1915,'Template'},
            {op,1915,'+',{var,1915,'N'},{integer,1915,1}}]}}]}]}]},
   {clause,1917,
    [{var,1917,'_'},{var,1917,'_'},{var,1917,'_'}],
    [],
    [{nil,1917}]}]},
 {function,1926,type_ifopt,1,
  [{clause,1926,[{atom,1926,addr}],[],[{atom,1926,sockaddr}]},
   {clause,1927,[{atom,1927,broadaddr}],[],[{atom,1927,sockaddr}]},
   {clause,1928,[{atom,1928,dstaddr}],[],[{atom,1928,sockaddr}]},
   {clause,1929,[{atom,1929,mtu}],[],[{atom,1929,int}]},
   {clause,1930,[{atom,1930,netmask}],[],[{atom,1930,sockaddr}]},
   {clause,1931,
    [{atom,1931,flags}],
    [],
    [{tuple,1932,
      [{atom,1932,bitenumlist},
       {cons,1933,
        {tuple,1933,[{atom,1933,up},{integer,212,1}]},
        {cons,1934,
         {tuple,1934,[{atom,1934,down},{integer,219,256}]},
         {cons,1935,
          {tuple,1935,[{atom,1935,broadcast},{integer,213,2}]},
          {cons,1936,
           {tuple,1936,[{atom,1936,no_broadcast},{integer,220,512}]},
           {cons,1937,
            {tuple,1937,[{atom,1937,loopback},{integer,214,4}]},
            {cons,1938,
             {tuple,1938,[{atom,1938,pointtopoint},{integer,215,8}]},
             {cons,1939,
              {tuple,1939,[{atom,1939,no_pointtopoint},{integer,221,2048}]},
              {cons,1940,
               {tuple,1940,[{atom,1940,running},{integer,216,16}]},
               {cons,1941,
                {tuple,1941,[{atom,1941,multicast},{integer,217,32}]},
                {nil,1941}}}}}}}}}}]}]},
   {clause,1942,[{atom,1942,hwaddr}],[],[{atom,1942,linkaddr}]},
   {clause,1943,
    [{var,1943,'Opt'}],
    [[{call,1943,{atom,1943,is_atom},[{var,1943,'Opt'}]}]],
    [{atom,1943,undefined}]}]},
 {function,1945,enc_ifopt,1,
  [{clause,1945,[{atom,1945,addr}],[],[{integer,172,1}]},
   {clause,1946,[{atom,1946,broadaddr}],[],[{integer,173,2}]},
   {clause,1947,[{atom,1947,dstaddr}],[],[{integer,174,3}]},
   {clause,1948,[{atom,1948,mtu}],[],[{integer,175,4}]},
   {clause,1949,[{atom,1949,netmask}],[],[{integer,176,5}]},
   {clause,1950,[{atom,1950,flags}],[],[{integer,177,6}]},
   {clause,1951,[{atom,1951,hwaddr}],[],[{integer,178,7}]},
   {clause,1952,
    [{var,1952,'Opt'}],
    [[{call,1952,{atom,1952,is_atom},[{var,1952,'Opt'}]}]],
    [{op,1952,'-',{integer,1952,1}}]}]},
 {function,1954,dec_ifopt,1,
  [{clause,1954,[{integer,172,1}],[],[{atom,1954,addr}]},
   {clause,1955,[{integer,173,2}],[],[{atom,1955,broadaddr}]},
   {clause,1956,[{integer,174,3}],[],[{atom,1956,dstaddr}]},
   {clause,1957,[{integer,175,4}],[],[{atom,1957,mtu}]},
   {clause,1958,[{integer,176,5}],[],[{atom,1958,netmask}]},
   {clause,1959,[{integer,177,6}],[],[{atom,1959,flags}]},
   {clause,1960,[{integer,178,7}],[],[{atom,1960,hwaddr}]},
   {clause,1961,
    [{var,1961,'I'}],
    [[{call,1961,{atom,1961,is_integer},[{var,1961,'I'}]}]],
    [{atom,1961,undefined}]}]},
 {function,1964,decode_ifopts,2,
  [{clause,1964,
    [{cons,1964,{var,1964,'B'},{var,1964,'Buf'}},{var,1964,'Acc'}],
    [],
    [{'case',1965,
      {call,1965,{atom,1965,dec_ifopt},[{var,1965,'B'}]},
      [{clause,1966,
        [{atom,1966,undefined}],
        [],
        [{tuple,1967,[{atom,1967,error},{atom,1967,einval}]}]},
       {clause,1968,
        [{var,1968,'Opt'}],
        [],
        [{match,1969,
          {tuple,1969,[{var,1969,'Val'},{var,1969,'T'}]},
          {call,1969,
           {atom,1969,dec_value},
           [{call,1969,{atom,1969,type_ifopt},[{var,1969,'Opt'}]},
            {var,1969,'Buf'}]}},
         {call,1970,
          {atom,1970,decode_ifopts},
          [{var,1970,'T'},
           {cons,1970,
            {tuple,1970,[{var,1970,'Opt'},{var,1970,'Val'}]},
            {var,1970,'Acc'}}]}]}]}]},
   {clause,1972,
    [{var,1972,'_'},{var,1972,'Acc'}],
    [],
    [{tuple,1972,[{atom,1972,ok},{var,1972,'Acc'}]}]}]},
 {function,1976,encode_ifopts,2,
  [{clause,1976,
    [{cons,1976,{var,1976,'Opt'},{var,1976,'Opts'}},{var,1976,'Acc'}],
    [],
    [{'case',1977,
      {call,1977,{atom,1977,enc_ifopt},[{var,1977,'Opt'}]},
      [{clause,1978,
        [{op,1978,'-',{integer,1978,1}}],
        [],
        [{tuple,1978,[{atom,1978,error},{atom,1978,einval}]}]},
       {clause,1979,
        [{var,1979,'B'}],
        [],
        [{call,1979,
          {atom,1979,encode_ifopts},
          [{var,1979,'Opts'},
           {cons,1979,{var,1979,'B'},{var,1979,'Acc'}}]}]}]}]},
   {clause,1981,
    [{nil,1981},{var,1981,'Acc'}],
    [],
    [{tuple,1981,[{atom,1981,ok},{var,1981,'Acc'}]}]}]},
 {function,1985,encode_ifopt_val,2,
  [{clause,1985,
    [{cons,1985,
      {tuple,1985,[{var,1985,'Opt'},{var,1985,'Val'}]},
      {var,1985,'Opts'}},
     {var,1985,'Buf'}],
    [],
    [{match,1986,
      {var,1986,'Type'},
      {call,1986,{atom,1986,type_ifopt},[{var,1986,'Opt'}]}},
     {'try',1987,
      [{call,1987,
        {atom,1987,type_value},
        [{atom,1987,set},{var,1987,'Type'},{var,1987,'Val'}]}],
      [{clause,1988,
        [{atom,1988,true}],
        [],
        [{call,1989,
          {atom,1989,encode_ifopt_val},
          [{var,1989,'Opts'},
           {cons,1990,
            {var,1990,'Buf'},
            {cons,1990,
             {call,1990,{atom,1990,enc_ifopt},[{var,1990,'Opt'}]},
             {cons,1990,
              {call,1990,
               {atom,1990,enc_value},
               [{atom,1990,set},{var,1990,'Type'},{var,1990,'Val'}]},
              {nil,1990}}}}]}]},
       {clause,1991,
        [{atom,1991,false}],
        [],
        [{tuple,1991,[{atom,1991,error},{atom,1991,einval}]}]}],
      [{clause,1993,
        [{tuple,1993,[{atom,1993,throw},{var,1993,'Reason'},{var,1993,'_'}]}],
        [],
        [{tuple,1993,[{atom,1993,error},{var,1993,'Reason'}]}]}],
      []}]},
   {clause,1995,
    [{nil,1995},{var,1995,'Buf'}],
    [],
    [{tuple,1995,[{atom,1995,ok},{var,1995,'Buf'}]}]}]},
 {function,2004,encode_subs,1,
  [{clause,2004,
    [{var,2004,'L'}],
    [],
    [{'try',2005,
      [{call,2005,{atom,2005,enc_subs},[{var,2005,'L'}]}],
      [{clause,2006,
        [{var,2006,'Result'}],
        [],
        [{tuple,2006,[{atom,2006,ok},{var,2006,'Result'}]}]}],
      [{clause,2008,
        [{tuple,2008,[{atom,2008,throw},{var,2008,'Error'},{var,2008,'_'}]}],
        [],
        [{tuple,2008,[{atom,2008,error},{var,2008,'Error'}]}]}],
      []}]}]},
 {function,2011,enc_subs,1,
  [{clause,2011,
    [{cons,2011,{var,2011,'H'},{var,2011,'T'}}],
    [],
    [{'case',2012,
      {var,2012,'H'},
      [{clause,2013,
        [{atom,2013,subs_empty_out_q}],
        [],
        [{cons,2013,
          {integer,107,1},
          {call,2013,{atom,2013,enc_subs},[{var,2013,'T'}]}}]}]}]},
   {clause,2016,[{nil,2016}],[],[{nil,2016}]}]},
 {function,2019,decode_subs,1,
  [{clause,2019,
    [{var,2019,'Bytes'}],
    [],
    [{'try',2020,
      [{call,2020,{atom,2020,dec_subs},[{var,2020,'Bytes'}]}],
      [{clause,2021,
        [{var,2021,'Result'}],
        [],
        [{tuple,2021,[{atom,2021,ok},{var,2021,'Result'}]}]}],
      [{clause,2023,
        [{tuple,2023,[{atom,2023,throw},{var,2023,'Error'},{var,2023,'_'}]}],
        [],
        [{tuple,2023,[{atom,2023,error},{var,2023,'Error'}]}]}],
      []}]}]},
 {function,2026,dec_subs,1,
  [{clause,2026,
    [{cons,2026,
      {var,2026,'X'},
      {cons,2026,
       {var,2026,'X3'},
       {cons,2026,
        {var,2026,'X2'},
        {cons,2026,
         {var,2026,'X1'},
         {cons,2026,{var,2026,'X0'},{var,2026,'R'}}}}}}],
    [],
    [{match,2027,
      {var,2027,'Val'},
      {op,326,'bor',
       {op,326,'bor',
        {op,326,'bor',
         {op,326,'bsl',{var,2027,'X3'},{integer,326,24}},
         {op,326,'bsl',{var,2027,'X2'},{integer,326,16}}},
        {op,326,'bsl',{var,2027,'X1'},{integer,326,8}}},
       {var,2027,'X0'}}},
     {'case',2028,
      {var,2028,'X'},
      [{clause,107,
        [{integer,107,1}],
        [],
        [{cons,2029,
          {tuple,2029,[{atom,2029,subs_empty_out_q},{var,2029,'Val'}]},
          {call,2029,{atom,2029,dec_subs},[{var,2029,'R'}]}}]},
       {clause,2030,
        [{var,2030,'_'}],
        [],
        [{call,2030,{atom,2030,throw},[{atom,2030,einval}]}]}]}]},
   {clause,2032,[{nil,2032}],[],[{nil,2032}]}]},
 {function,2040,encode_stats,1,
  [{clause,2040,
    [{var,2040,'L'}],
    [],
    [{'try',2041,
      [{call,2041,{atom,2041,enc_stats},[{var,2041,'L'}]}],
      [{clause,2042,
        [{var,2042,'Result'}],
        [],
        [{tuple,2042,[{atom,2042,ok},{var,2042,'Result'}]}]}],
      [{clause,2044,
        [{tuple,2044,[{atom,2044,throw},{var,2044,'Error'},{var,2044,'_'}]}],
        [],
        [{tuple,2044,[{atom,2044,error},{var,2044,'Error'}]}]}],
      []}]}]},
 {function,2047,enc_stats,1,
  [{clause,2047,
    [{cons,2047,{var,2047,'H'},{var,2047,'T'}}],
    [],
    [{'case',2048,
      {var,2048,'H'},
      [{clause,2049,
        [{atom,2049,recv_cnt}],
        [],
        [{cons,2049,
          {integer,199,1},
          {call,2049,{atom,2049,enc_stats},[{var,2049,'T'}]}}]},
       {clause,2050,
        [{atom,2050,recv_max}],
        [],
        [{cons,2050,
          {integer,200,2},
          {call,2050,{atom,2050,enc_stats},[{var,2050,'T'}]}}]},
       {clause,2051,
        [{atom,2051,recv_avg}],
        [],
        [{cons,2051,
          {integer,201,3},
          {call,2051,{atom,2051,enc_stats},[{var,2051,'T'}]}}]},
       {clause,2052,
        [{atom,2052,recv_dvi}],
        [],
        [{cons,2052,
          {integer,202,4},
          {call,2052,{atom,2052,enc_stats},[{var,2052,'T'}]}}]},
       {clause,2053,
        [{atom,2053,send_cnt}],
        [],
        [{cons,2053,
          {integer,203,5},
          {call,2053,{atom,2053,enc_stats},[{var,2053,'T'}]}}]},
       {clause,2054,
        [{atom,2054,send_max}],
        [],
        [{cons,2054,
          {integer,204,6},
          {call,2054,{atom,2054,enc_stats},[{var,2054,'T'}]}}]},
       {clause,2055,
        [{atom,2055,send_avg}],
        [],
        [{cons,2055,
          {integer,205,7},
          {call,2055,{atom,2055,enc_stats},[{var,2055,'T'}]}}]},
       {clause,2056,
        [{atom,2056,send_pend}],
        [],
        [{cons,2056,
          {integer,206,8},
          {call,2056,{atom,2056,enc_stats},[{var,2056,'T'}]}}]},
       {clause,2057,
        [{atom,2057,send_oct}],
        [],
        [{cons,2057,
          {integer,208,10},
          {call,2057,{atom,2057,enc_stats},[{var,2057,'T'}]}}]},
       {clause,2058,
        [{atom,2058,recv_oct}],
        [],
        [{cons,2058,
          {integer,207,9},
          {call,2058,{atom,2058,enc_stats},[{var,2058,'T'}]}}]},
       {clause,2059,
        [{var,2059,'_'}],
        [],
        [{call,2059,{atom,2059,throw},[{atom,2059,einval}]}]}]}]},
   {clause,2061,[{nil,2061}],[],[{nil,2061}]}]},
 {function,2064,decode_stats,1,
  [{clause,2064,
    [{var,2064,'Bytes'}],
    [],
    [{'try',2065,
      [{call,2065,{atom,2065,dec_stats},[{var,2065,'Bytes'}]}],
      [{clause,2066,
        [{var,2066,'Result'}],
        [],
        [{tuple,2066,[{atom,2066,ok},{var,2066,'Result'}]}]}],
      [{clause,2068,
        [{tuple,2068,[{atom,2068,throw},{var,2068,'Error'},{var,2068,'_'}]}],
        [],
        [{tuple,2068,[{atom,2068,error},{var,2068,'Error'}]}]}],
      []}]}]},
 {function,2072,dec_stats,1,
  [{clause,2072,
    [{cons,2072,
      {integer,208,10},
      {cons,2072,
       {var,2072,'X7'},
       {cons,2072,
        {var,2072,'X6'},
        {cons,2072,
         {var,2072,'X5'},
         {cons,2072,
          {var,2072,'X4'},
          {cons,2072,
           {var,2072,'X3'},
           {cons,2072,
            {var,2072,'X2'},
            {cons,2072,
             {var,2072,'X1'},
             {cons,2072,{var,2072,'X0'},{var,2072,'R'}}}}}}}}}}],
    [],
    [{match,2073,
      {var,2073,'Val'},
      {op,323,'bor',
       {op,322,'bor',
        {op,322,'bor',
         {op,322,'bor',
          {op,321,'bor',
           {op,321,'bor',
            {op,321,'bor',
             {op,321,'bsl',{var,2073,'X7'},{integer,321,56}},
             {op,321,'bsl',{var,2073,'X6'},{integer,321,48}}},
            {op,321,'bsl',{var,2073,'X5'},{integer,321,40}}},
           {op,322,'bsl',{var,2073,'X4'},{integer,322,32}}},
          {op,322,'bsl',{var,2073,'X3'},{integer,322,24}}},
         {op,322,'bsl',{var,2073,'X2'},{integer,322,16}}},
        {op,323,'bsl',{var,2073,'X1'},{integer,323,8}}},
       {var,2073,'X0'}}},
     {cons,2074,
      {tuple,2074,[{atom,2074,send_oct},{var,2074,'Val'}]},
      {call,2074,{atom,2074,dec_stats},[{var,2074,'R'}]}}]},
   {clause,2075,
    [{cons,2075,
      {integer,207,9},
      {cons,2075,
       {var,2075,'X7'},
       {cons,2075,
        {var,2075,'X6'},
        {cons,2075,
         {var,2075,'X5'},
         {cons,2075,
          {var,2075,'X4'},
          {cons,2075,
           {var,2075,'X3'},
           {cons,2075,
            {var,2075,'X2'},
            {cons,2075,
             {var,2075,'X1'},
             {cons,2075,{var,2075,'X0'},{var,2075,'R'}}}}}}}}}}],
    [],
    [{match,2076,
      {var,2076,'Val'},
      {op,323,'bor',
       {op,322,'bor',
        {op,322,'bor',
         {op,322,'bor',
          {op,321,'bor',
           {op,321,'bor',
            {op,321,'bor',
             {op,321,'bsl',{var,2076,'X7'},{integer,321,56}},
             {op,321,'bsl',{var,2076,'X6'},{integer,321,48}}},
            {op,321,'bsl',{var,2076,'X5'},{integer,321,40}}},
           {op,322,'bsl',{var,2076,'X4'},{integer,322,32}}},
          {op,322,'bsl',{var,2076,'X3'},{integer,322,24}}},
         {op,322,'bsl',{var,2076,'X2'},{integer,322,16}}},
        {op,323,'bsl',{var,2076,'X1'},{integer,323,8}}},
       {var,2076,'X0'}}},
     {cons,2077,
      {tuple,2077,[{atom,2077,recv_oct},{var,2077,'Val'}]},
      {call,2077,{atom,2077,dec_stats},[{var,2077,'R'}]}}]},
   {clause,2078,
    [{cons,2078,
      {var,2078,'X'},
      {cons,2078,
       {var,2078,'X3'},
       {cons,2078,
        {var,2078,'X2'},
        {cons,2078,
         {var,2078,'X1'},
         {cons,2078,{var,2078,'X0'},{var,2078,'R'}}}}}}],
    [],
    [{match,2079,
      {var,2079,'Val'},
      {op,326,'bor',
       {op,326,'bor',
        {op,326,'bor',
         {op,326,'bsl',{var,2079,'X3'},{integer,326,24}},
         {op,326,'bsl',{var,2079,'X2'},{integer,326,16}}},
        {op,326,'bsl',{var,2079,'X1'},{integer,326,8}}},
       {var,2079,'X0'}}},
     {'case',2080,
      {var,2080,'X'},
      [{clause,199,
        [{integer,199,1}],
        [],
        [{cons,2081,
          {tuple,2081,[{atom,2081,recv_cnt},{var,2081,'Val'}]},
          {call,2081,{atom,2081,dec_stats},[{var,2081,'R'}]}}]},
       {clause,200,
        [{integer,200,2}],
        [],
        [{cons,2082,
          {tuple,2082,[{atom,2082,recv_max},{var,2082,'Val'}]},
          {call,2082,{atom,2082,dec_stats},[{var,2082,'R'}]}}]},
       {clause,201,
        [{integer,201,3}],
        [],
        [{cons,2083,
          {tuple,2083,[{atom,2083,recv_avg},{var,2083,'Val'}]},
          {call,2083,{atom,2083,dec_stats},[{var,2083,'R'}]}}]},
       {clause,202,
        [{integer,202,4}],
        [],
        [{cons,2084,
          {tuple,2084,[{atom,2084,recv_dvi},{var,2084,'Val'}]},
          {call,2084,{atom,2084,dec_stats},[{var,2084,'R'}]}}]},
       {clause,203,
        [{integer,203,5}],
        [],
        [{cons,2085,
          {tuple,2085,[{atom,2085,send_cnt},{var,2085,'Val'}]},
          {call,2085,{atom,2085,dec_stats},[{var,2085,'R'}]}}]},
       {clause,204,
        [{integer,204,6}],
        [],
        [{cons,2086,
          {tuple,2086,[{atom,2086,send_max},{var,2086,'Val'}]},
          {call,2086,{atom,2086,dec_stats},[{var,2086,'R'}]}}]},
       {clause,205,
        [{integer,205,7}],
        [],
        [{cons,2087,
          {tuple,2087,[{atom,2087,send_avg},{var,2087,'Val'}]},
          {call,2087,{atom,2087,dec_stats},[{var,2087,'R'}]}}]},
       {clause,206,
        [{integer,206,8}],
        [],
        [{cons,2088,
          {tuple,2088,[{atom,2088,send_pend},{var,2088,'Val'}]},
          {call,2088,{atom,2088,dec_stats},[{var,2088,'R'}]}}]},
       {clause,2089,
        [{var,2089,'_'}],
        [],
        [{call,2089,{atom,2089,throw},[{atom,2089,einval}]}]}]}]},
   {clause,2091,[{nil,2091}],[],[{nil,2091}]}]},
 {function,2099,dec_status,1,
  [{clause,2099,
    [{var,2099,'Flags'}],
    [],
    [{call,2100,
      {atom,2100,enum_names},
      [{var,2100,'Flags'},
       {cons,2101,
        {tuple,2102,[{atom,2102,busy},{integer,60,128}]},
        {cons,2104,
         {tuple,2104,[{atom,2104,accepting},{integer,58,32}]},
         {cons,2105,
          {tuple,2105,[{atom,2105,connecting},{integer,57,16}]},
          {cons,2106,
           {tuple,2106,[{atom,2106,listen},{integer,56,8}]},
           {cons,2107,
            {tuple,2107,[{atom,2107,connected},{integer,55,4}]},
            {cons,2108,
             {tuple,2108,[{atom,2108,bound},{integer,54,2}]},
             {cons,2109,
              {tuple,2109,[{atom,2109,open},{integer,53,1}]},
              {nil,2110}}}}}}}}]}]}]},
 {function,2118,enc_time,1,
  [{clause,2118,
    [{var,2118,'Time'}],
    [[{op,2118,'<',{var,2118,'Time'},{integer,2118,0}}]],
    [{cons,2118,
      {integer,2118,255},
      {cons,2118,
       {integer,2118,255},
       {cons,2118,
        {integer,2118,255},
        {cons,2118,{integer,2118,255},{nil,2118}}}}}]},
   {clause,2119,
    [{var,2119,'Time'}],
    [],
    [{cons,313,
      {op,313,'band',
       {op,313,'bsr',{var,2119,'Time'},{integer,313,24}},
       {integer,313,255}},
      {cons,313,
       {op,313,'band',
        {op,313,'bsr',{var,2119,'Time'},{integer,313,16}},
        {integer,313,255}},
       {cons,314,
        {op,314,'band',
         {op,314,'bsr',{var,2119,'Time'},{integer,314,8}},
         {integer,314,255}},
        {cons,314,
         {op,314,'band',{var,2119,'Time'},{integer,314,255}},
         {nil,314}}}}}]}]},
 {function,2121,encode_ifname,1,
  [{clause,2121,
    [{var,2121,'Name'}],
    [[{call,2121,{atom,2121,is_atom},[{var,2121,'Name'}]}]],
    [{call,2121,
      {atom,2121,encode_ifname},
      [{call,2121,{atom,2121,atom_to_list},[{var,2121,'Name'}]}]}]},
   {clause,2122,
    [{var,2122,'Name'}],
    [],
    [{match,2123,
      {var,2123,'N'},
      {call,2123,{atom,2123,length},[{var,2123,'Name'}]}},
     {'if',2124,
      [{clause,2124,[],
        [[{op,2124,'>',{var,2124,'N'},{integer,2124,255}}]],
        [{tuple,2124,[{atom,2124,error},{atom,2124,einval}]}]},
       {clause,2125,[],
        [[{atom,2125,true}]],
        [{tuple,2125,
          [{atom,2125,ok},
           {cons,2125,{var,2125,'N'},{var,2125,'Name'}}]}]}]}]}]},
 {function,2128,build_ifaddrs,1,
  [{clause,2128,
    [{var,2128,'Cs'}],
    [],
    [{call,2129,{atom,2129,build_ifaddrs},[{var,2129,'Cs'},{nil,2129}]}]}]},
 {function,2131,build_ifaddrs,2,
  [{clause,2131,[{nil,2131},{nil,2131}],[],[{nil,2132}]},
   {clause,2133,
    [{cons,2133,{integer,2133,0},{var,2133,'Cs'}},{var,2133,'Acc'}],
    [],
    [{match,2134,
      {var,2134,'Name'},
      {call,2134,
       {atom,2134,utf8_to_characters},
       [{call,2134,{atom,2134,rev},[{var,2134,'Acc'}]}]}},
     {match,2135,
      {tuple,2135,[{var,2135,'Opts'},{var,2135,'Rest'}]},
      {call,2135,{atom,2135,build_ifaddrs_opts},[{var,2135,'Cs'},{nil,2135}]}},
     {cons,2136,
      {tuple,2136,[{var,2136,'Name'},{var,2136,'Opts'}]},
      {call,2136,{atom,2136,build_ifaddrs},[{var,2136,'Rest'}]}}]},
   {clause,2137,
    [{cons,2137,{var,2137,'C'},{var,2137,'Cs'}},{var,2137,'Acc'}],
    [],
    [{call,2138,
      {atom,2138,build_ifaddrs},
      [{var,2138,'Cs'},{cons,2138,{var,2138,'C'},{var,2138,'Acc'}}]}]}]},
 {function,2140,build_ifaddrs_opts,2,
  [{clause,2140,
    [{cons,2140,{integer,2140,0},{var,2140,'Cs'}},{var,2140,'Acc'}],
    [],
    [{tuple,2141,
      [{call,2141,{atom,2141,rev},[{var,2141,'Acc'}]},{var,2141,'Cs'}]}]},
   {clause,2142,
    [{match,2142,{cons,2142,{var,2142,'C'},{var,2142,'Cs'}},{var,2142,'CCs'}},
     {var,2142,'Acc'}],
    [],
    [{'case',2143,
      {call,2143,{atom,2143,dec_ifopt},[{var,2143,'C'}]},
      [{clause,2144,
        [{atom,2144,undefined}],
        [],
        [{call,2145,
          {remote,2145,{atom,2145,erlang},{atom,2145,error}},
          [{atom,2145,badarg},
           {cons,2145,
            {var,2145,'CCs'},
            {cons,2145,{var,2145,'Acc'},{nil,2145}}}]}]},
       {clause,2146,
        [{var,2146,'Opt'}],
        [],
        [{match,2147,
          {var,2147,'Type'},
          {call,2147,{atom,2147,type_ifopt},[{var,2147,'Opt'}]}},
         {match,2148,
          {tuple,2148,[{var,2148,'Val'},{var,2148,'Rest'}]},
          {call,2148,
           {atom,2148,dec_value},
           [{var,2148,'Type'},{var,2148,'Cs'}]}},
         {call,2149,
          {atom,2149,build_ifaddrs_opts},
          [{var,2149,'Rest'},
           {cons,2149,
            {tuple,2149,[{var,2149,'Opt'},{var,2149,'Val'}]},
            {var,2149,'Acc'}}]}]}]}]}]},
 {function,2152,build_iflist,1,
  [{clause,2152,
    [{var,2152,'Cs'}],
    [],
    [{call,2153,
      {atom,2153,build_iflist},
      [{var,2153,'Cs'},{nil,2153},{nil,2153}]}]}]},
 {function,2157,build_iflist,3,
  [{clause,2157,
    [{cons,2157,{integer,2157,0},{var,2157,'L'}},
     {var,2157,'Acc'},
     {cons,2157,{var,2157,'H'},{var,2157,'T'}}],
    [],
    [{'case',2158,
      {call,2158,{atom,2158,rev},[{var,2158,'Acc'}]},
      [{clause,2159,
        [{var,2159,'H'}],
        [],
        [{call,2159,
          {atom,2159,build_iflist},
          [{var,2159,'L'},
           {nil,2159},
           {cons,2159,{var,2159,'H'},{var,2159,'T'}}]}]},
       {clause,2160,
        [{var,2160,'N'}],
        [],
        [{call,2160,
          {atom,2160,build_iflist},
          [{var,2160,'L'},
           {nil,2160},
           {cons,2160,
            {var,2160,'N'},
            {cons,2160,{var,2160,'H'},{var,2160,'T'}}}]}]}]}]},
   {clause,2162,
    [{cons,2162,{integer,2162,0},{var,2162,'L'}},{var,2162,'Acc'},{nil,2162}],
    [],
    [{call,2163,
      {atom,2163,build_iflist},
      [{var,2163,'L'},
       {nil,2163},
       {cons,2163,
        {call,2163,{atom,2163,rev},[{var,2163,'Acc'}]},
        {nil,2163}}]}]},
   {clause,2164,
    [{cons,2164,{var,2164,'C'},{var,2164,'L'}},
     {var,2164,'Acc'},
     {var,2164,'List'}],
    [],
    [{call,2165,
      {atom,2165,build_iflist},
      [{var,2165,'L'},
       {cons,2165,{var,2165,'C'},{var,2165,'Acc'}},
       {var,2165,'List'}]}]},
   {clause,2166,
    [{nil,2166},{nil,2166},{var,2166,'List'}],
    [],
    [{call,2167,{atom,2167,rev},[{var,2167,'List'}]}]},
   {clause,2168,
    [{nil,2168},{var,2168,'Acc'},{var,2168,'List'}],
    [],
    [{call,2169,
      {atom,2169,build_iflist},
      [{cons,2169,{integer,2169,0},{nil,2169}},
       {var,2169,'Acc'},
       {var,2169,'List'}]}]}]},
 {function,2171,rev,1,
  [{clause,2171,
    [{var,2171,'L'}],
    [],
    [{call,2171,{atom,2171,rev},[{var,2171,'L'},{nil,2171}]}]}]},
 {function,2172,rev,2,
  [{clause,2172,
    [{cons,2172,{var,2172,'C'},{var,2172,'L'}},{var,2172,'Acc'}],
    [],
    [{call,2172,
      {atom,2172,rev},
      [{var,2172,'L'},{cons,2172,{var,2172,'C'},{var,2172,'Acc'}}]}]},
   {clause,2173,[{nil,2173},{var,2173,'Acc'}],[],[{var,2173,'Acc'}]}]},
 {function,2175,split,2,
  [{clause,2175,
    [{var,2175,'N'},{var,2175,'L'}],
    [],
    [{call,2175,
      {atom,2175,split},
      [{var,2175,'N'},{var,2175,'L'},{nil,2175}]}]}]},
 {function,2176,split,3,
  [{clause,2176,
    [{integer,2176,0},{var,2176,'L'},{var,2176,'R'}],
    [[{call,2176,{atom,2176,is_list},[{var,2176,'L'}]}]],
    [{tuple,2176,
      [{call,2176,{atom,2176,rev},[{var,2176,'R'}]},{var,2176,'L'}]}]},
   {clause,2177,
    [{var,2177,'N'},{cons,2177,{var,2177,'H'},{var,2177,'T'}},{var,2177,'R'}],
    [[{call,2177,{atom,2177,is_integer},[{var,2177,'N'}]},
      {op,2177,'>',{var,2177,'N'},{integer,2177,0}}]],
    [{call,2177,
      {atom,2177,split},
      [{op,2177,'-',{var,2177,'N'},{integer,2177,1}},
       {var,2177,'T'},
       {cons,2177,{var,2177,'H'},{var,2177,'R'}}]}]}]},
 {function,2179,len,2,
  [{clause,2179,
    [{var,2179,'L'},{var,2179,'N'}],
    [],
    [{call,2179,
      {atom,2179,len},
      [{var,2179,'L'},{var,2179,'N'},{integer,2179,0}]}]}]},
 {function,2180,len,3,
  [{clause,2180,
    [{nil,2180},{var,2180,'N'},{var,2180,'C'}],
    [[{call,2180,{atom,2180,is_integer},[{var,2180,'N'}]},
      {op,2180,'>=',{var,2180,'N'},{integer,2180,0}}]],
    [{var,2180,'C'}]},
   {clause,2181,
    [{var,2181,'L'},{integer,2181,0},{var,2181,'_'}],
    [[{call,2181,{atom,2181,is_list},[{var,2181,'L'}]}]],
    [{atom,2181,undefined}]},
   {clause,2182,
    [{cons,2182,{var,2182,'_'},{var,2182,'L'}},{var,2182,'N'},{var,2182,'C'}],
    [[{call,2182,{atom,2182,is_integer},[{var,2182,'N'}]},
      {op,2182,'>=',{var,2182,'N'},{integer,2182,0}}]],
    [{call,2182,
      {atom,2182,len},
      [{var,2182,'L'},
       {op,2182,'-',{var,2182,'N'},{integer,2182,1}},
       {op,2182,'+',{var,2182,'C'},{integer,2182,1}}]}]}]},
 {function,2184,member,2,
  [{clause,2184,
    [{var,2184,'X'},{cons,2184,{var,2184,'X'},{var,2184,'_'}}],
    [],
    [{atom,2184,true}]},
   {clause,2185,
    [{var,2185,'X'},{cons,2185,{var,2185,'_'},{var,2185,'Xs'}}],
    [],
    [{call,2185,{atom,2185,member},[{var,2185,'X'},{var,2185,'Xs'}]}]},
   {clause,2186,[{var,2186,'_'},{nil,2186}],[],[{atom,2186,false}]}]},
 {function,2192,ktree_empty,0,
  [{clause,2192,[],[],
    [{tuple,2192,[{nil,2192},{call,2192,{atom,2192,tree},[]}]}]}]},
 {function,2193,ktree_is_defined,2,
  [{clause,2193,
    [{var,2193,'Key'},{tuple,2193,[{var,2193,'_'},{var,2193,'T'}]}],
    [],
    [{call,2193,
      {atom,2193,tree},
      [{var,2193,'T'},{var,2193,'Key'},{atom,2193,is_defined}]}]}]},
 {function,2194,ktree_get,2,
  [{clause,2194,
    [{var,2194,'Key'},{tuple,2194,[{var,2194,'_'},{var,2194,'T'}]}],
    [],
    [{call,2194,
      {atom,2194,tree},
      [{var,2194,'T'},{var,2194,'Key'},{atom,2194,get}]}]}]},
 {function,2195,ktree_insert,3,
  [{clause,2195,
    [{var,2195,'Key'},
     {var,2195,'V'},
     {tuple,2195,[{var,2195,'Keys'},{var,2195,'T'}]}],
    [],
    [{tuple,2195,
      [{cons,2195,{var,2195,'Key'},{var,2195,'Keys'}},
       {call,2195,
        {atom,2195,tree},
        [{var,2195,'T'},
         {var,2195,'Key'},
         {tuple,2195,[{atom,2195,insert},{var,2195,'V'}]}]}]}]}]},
 {function,2196,ktree_update,3,
  [{clause,2196,
    [{var,2196,'Key'},
     {var,2196,'V'},
     {tuple,2196,[{var,2196,'Keys'},{var,2196,'T'}]}],
    [],
    [{tuple,2196,
      [{var,2196,'Keys'},
       {call,2196,
        {atom,2196,tree},
        [{var,2196,'T'},
         {var,2196,'Key'},
         {tuple,2196,[{atom,2196,update},{var,2196,'V'}]}]}]}]}]},
 {function,2197,ktree_keys,1,
  [{clause,2197,
    [{tuple,2197,[{var,2197,'Keys'},{var,2197,'_'}]}],
    [],
    [{call,2197,{atom,2197,rev},[{var,2197,'Keys'}]}]}]},
 {function,2202,tree,0,[{clause,2202,[],[],[{atom,2202,nil}]}]},
 {function,2203,tree,3,
  [{clause,2203,
    [{var,2203,'T'},{var,2203,'Key'},{var,2203,'Op'}],
    [],
    [{call,2203,
      {atom,2203,tree},
      [{var,2203,'T'},
       {var,2203,'Key'},
       {var,2203,'Op'},
       {call,2203,
        {remote,2203,{atom,2203,erlang},{atom,2203,phash2}},
        [{var,2203,'Key'}]}]}]}]},
 {function,2205,tree,4,
  [{clause,2205,
    [{atom,2205,nil},{var,2205,'_'},{atom,2205,is_defined},{var,2205,'_'}],
    [],
    [{atom,2205,false}]},
   {clause,2206,
    [{atom,2206,nil},
     {var,2206,'K'},
     {tuple,2206,[{atom,2206,insert},{var,2206,'V'}]},
     {var,2206,'_'}],
    [],
    [{tuple,2206,
      [{var,2206,'K'},{var,2206,'V'},{atom,2206,nil},{atom,2206,nil}]}]},
   {clause,2207,
    [{tuple,2207,
      [{var,2207,'K'},{var,2207,'_'},{var,2207,'_'},{var,2207,'_'}]},
     {var,2207,'K'},
     {atom,2207,is_defined},
     {var,2207,'_'}],
    [],
    [{atom,2207,true}]},
   {clause,2208,
    [{tuple,2208,
      [{var,2208,'K'},{var,2208,'V'},{var,2208,'_'},{var,2208,'_'}]},
     {var,2208,'K'},
     {atom,2208,get},
     {var,2208,'_'}],
    [],
    [{var,2208,'V'}]},
   {clause,2209,
    [{tuple,2209,
      [{var,2209,'K'},{var,2209,'_'},{var,2209,'L'},{var,2209,'R'}]},
     {var,2209,'K'},
     {tuple,2209,[{atom,2209,update},{var,2209,'V'}]},
     {var,2209,'_'}],
    [],
    [{tuple,2209,
      [{var,2209,'K'},{var,2209,'V'},{var,2209,'L'},{var,2209,'R'}]}]},
   {clause,2210,
    [{tuple,2210,
      [{var,2210,'K0'},{var,2210,'V0'},{var,2210,'L'},{var,2210,'R'}]},
     {var,2210,'K'},
     {var,2210,'Op'},
     {var,2210,'H'}],
    [],
    [{match,2211,
      {var,2211,'H0'},
      {call,2211,
       {remote,2211,{atom,2211,erlang},{atom,2211,phash2}},
       [{var,2211,'K0'}]}},
     {'if',2212,
      [{clause,2212,[],
        [[{op,2212,'<',{var,2212,'H0'},{var,2212,'H'}}],
         [{op,2212,'=:=',{var,2212,'H0'},{var,2212,'H'}},
          {op,2212,'<',{var,2212,'K0'},{var,2212,'K'}}]],
        [{'if',2213,
          [{clause,2213,[],
            [[{call,2213,{atom,2213,is_tuple},[{var,2213,'Op'}]}]],
            [{tuple,2214,
              [{var,2214,'K0'},
               {var,2214,'V0'},
               {call,2214,
                {atom,2214,tree},
                [{var,2214,'L'},
                 {var,2214,'K'},
                 {var,2214,'Op'},
                 {var,2214,'H'}]},
               {var,2214,'R'}]}]},
           {clause,2215,[],
            [[{atom,2215,true}]],
            [{call,2216,
              {atom,2216,tree},
              [{var,2216,'L'},
               {var,2216,'K'},
               {var,2216,'Op'},
               {var,2216,'H'}]}]}]}]},
       {clause,2218,[],
        [[{atom,2218,true}]],
        [{'if',2219,
          [{clause,2219,[],
            [[{call,2219,{atom,2219,is_tuple},[{var,2219,'Op'}]}]],
            [{tuple,2220,
              [{var,2220,'K0'},
               {var,2220,'V0'},
               {var,2220,'L'},
               {call,2220,
                {atom,2220,tree},
                [{var,2220,'R'},
                 {var,2220,'K'},
                 {var,2220,'Op'},
                 {var,2220,'H'}]}]}]},
           {clause,2221,[],
            [[{atom,2221,true}]],
            [{call,2222,
              {atom,2222,tree},
              [{var,2222,'R'},
               {var,2222,'K'},
               {var,2222,'Op'},
               {var,2222,'H'}]}]}]}]}]}]}]},
 {function,2228,utf8_to_characters,1,
  [{clause,2228,[{nil,2228}],[],[{nil,2228}]},
   {clause,2229,
    [{match,2229,{cons,2229,{var,2229,'B'},{var,2229,'Bs'}},{var,2229,'Arg'}}],
    [[{op,2229,'=:=',
       {op,2229,'band',{var,2229,'B'},{integer,2229,255}},
       {var,2229,'B'}}]],
    [{'if',2230,
      [{clause,2230,[],
        [[{op,2230,'=<',{integer,2230,248},{var,2230,'B'}}]],
        [{call,2231,
          {remote,2231,{atom,2231,erlang},{atom,2231,error}},
          [{atom,2231,badarg},{cons,2231,{var,2231,'Arg'},{nil,2231}}]}]},
       {clause,2232,[],
        [[{op,2232,'=<',{integer,2232,240},{var,2232,'B'}}]],
        [{call,2233,
          {atom,2233,utf8_to_characters},
          [{var,2233,'Bs'},
           {op,2233,'band',{var,2233,'B'},{integer,2233,7}},
           {integer,2233,3}]}]},
       {clause,2234,[],
        [[{op,2234,'=<',{integer,2234,224},{var,2234,'B'}}]],
        [{call,2235,
          {atom,2235,utf8_to_characters},
          [{var,2235,'Bs'},
           {op,2235,'band',{var,2235,'B'},{integer,2235,15}},
           {integer,2235,2}]}]},
       {clause,2236,[],
        [[{op,2236,'=<',{integer,2236,192},{var,2236,'B'}}]],
        [{call,2237,
          {atom,2237,utf8_to_characters},
          [{var,2237,'Bs'},
           {op,2237,'band',{var,2237,'B'},{integer,2237,31}},
           {integer,2237,1}]}]},
       {clause,2238,[],
        [[{op,2238,'=<',{integer,2238,128},{var,2238,'B'}}]],
        [{call,2239,
          {remote,2239,{atom,2239,erlang},{atom,2239,error}},
          [{atom,2239,badarg},{cons,2239,{var,2239,'Arg'},{nil,2239}}]}]},
       {clause,2240,[],
        [[{atom,2240,true}]],
        [{cons,2241,
          {var,2241,'B'},
          {call,2241,
           {atom,2241,utf8_to_characters},
           [{var,2241,'Bs'}]}}]}]}]}]},
 {function,2244,utf8_to_characters,3,
  [{clause,2244,
    [{var,2244,'Bs'},{var,2244,'U'},{integer,2244,0}],
    [],
    [{cons,2245,
      {var,2245,'U'},
      {call,2245,{atom,2245,utf8_to_characters},[{var,2245,'Bs'}]}}]},
   {clause,2246,
    [{cons,2246,{var,2246,'B'},{var,2246,'Bs'}},{var,2246,'U'},{var,2246,'N'}],
    [[{op,2246,'=:=',
       {op,2246,'bor',
        {op,2246,'band',{var,2246,'B'},{integer,2246,63}},
        {integer,2246,128}},
       {var,2246,'B'}}]],
    [{call,2247,
      {atom,2247,utf8_to_characters},
      [{var,2247,'Bs'},
       {op,2247,'bor',
        {op,2247,'bsl',{var,2247,'U'},{integer,2247,6}},
        {op,2247,'band',{var,2247,'B'},{integer,2247,63}}},
       {op,2247,'-',{var,2247,'N'},{integer,2247,1}}]}]}]},
 {function,2249,ip_to_bytes,1,
  [{clause,2249,
    [{var,2249,'IP'}],
    [[{op,2249,'=:=',
       {call,2249,{atom,2249,tuple_size},[{var,2249,'IP'}]},
       {integer,2249,4}}]],
    [{call,2249,{atom,2249,ip4_to_bytes},[{var,2249,'IP'}]}]},
   {clause,2250,
    [{var,2250,'IP'}],
    [[{op,2250,'=:=',
       {call,2250,{atom,2250,tuple_size},[{var,2250,'IP'}]},
       {integer,2250,8}}]],
    [{call,2250,{atom,2250,ip6_to_bytes},[{var,2250,'IP'}]}]}]},
 {function,2252,ip4_to_bytes,1,
  [{clause,2252,
    [{tuple,2252,
      [{var,2252,'A'},{var,2252,'B'},{var,2252,'C'},{var,2252,'D'}]}],
    [],
    [{cons,2253,
      {op,2253,'band',{var,2253,'A'},{integer,2253,255}},
      {cons,2253,
       {op,2253,'band',{var,2253,'B'},{integer,2253,255}},
       {cons,2253,
        {op,2253,'band',{var,2253,'C'},{integer,2253,255}},
        {cons,2253,
         {op,2253,'band',{var,2253,'D'},{integer,2253,255}},
         {nil,2253}}}}}]}]},
 {function,2255,ip6_to_bytes,1,
  [{clause,2255,
    [{tuple,2255,
      [{var,2255,'A'},
       {var,2255,'B'},
       {var,2255,'C'},
       {var,2255,'D'},
       {var,2255,'E'},
       {var,2255,'F'},
       {var,2255,'G'},
       {var,2255,'H'}]}],
    [],
    [{cons,2256,
      {cons,307,
       {op,307,'band',
        {op,307,'bsr',{var,2256,'A'},{integer,307,8}},
        {integer,307,255}},
       {cons,307,{op,307,'band',{var,2256,'A'},{integer,307,255}},{nil,307}}},
      {cons,307,
       {cons,307,
        {op,307,'band',
         {op,307,'bsr',{var,2256,'B'},{integer,307,8}},
         {integer,307,255}},
        {cons,307,{op,307,'band',{var,2256,'B'},{integer,307,255}},{nil,307}}},
       {cons,307,
        {cons,307,
         {op,307,'band',
          {op,307,'bsr',{var,2256,'C'},{integer,307,8}},
          {integer,307,255}},
         {cons,307,
          {op,307,'band',{var,2256,'C'},{integer,307,255}},
          {nil,307}}},
        {cons,307,
         {cons,307,
          {op,307,'band',
           {op,307,'bsr',{var,2256,'D'},{integer,307,8}},
           {integer,307,255}},
          {cons,307,
           {op,307,'band',{var,2256,'D'},{integer,307,255}},
           {nil,307}}},
         {cons,307,
          {cons,307,
           {op,307,'band',
            {op,307,'bsr',{var,2257,'E'},{integer,307,8}},
            {integer,307,255}},
           {cons,307,
            {op,307,'band',{var,2257,'E'},{integer,307,255}},
            {nil,307}}},
          {cons,307,
           {cons,307,
            {op,307,'band',
             {op,307,'bsr',{var,2257,'F'},{integer,307,8}},
             {integer,307,255}},
            {cons,307,
             {op,307,'band',{var,2257,'F'},{integer,307,255}},
             {nil,307}}},
           {cons,307,
            {cons,307,
             {op,307,'band',
              {op,307,'bsr',{var,2257,'G'},{integer,307,8}},
              {integer,307,255}},
             {cons,307,
              {op,307,'band',{var,2257,'G'},{integer,307,255}},
              {nil,307}}},
            {cons,307,
             {cons,307,
              {op,307,'band',
               {op,307,'bsr',{var,2257,'H'},{integer,307,8}},
               {integer,307,255}},
              {cons,307,
               {op,307,'band',{var,2257,'H'},{integer,307,255}},
               {nil,307}}},
             {nil,2257}}}}}}}}}]}]},
 {function,2259,get_addrs,1,
  [{clause,2259,[{nil,2259}],[],[{nil,2260}]},
   {clause,2261,
    [{cons,2261,
      {var,2261,'F'},
      {cons,2261,
       {var,2261,'P1'},
       {cons,2261,{var,2261,'P0'},{var,2261,'Addr'}}}}],
    [],
    [{match,2262,
      {tuple,2262,[{var,2262,'IP'},{var,2262,'Addrs'}]},
      {call,2262,{atom,2262,get_ip},[{var,2262,'F'},{var,2262,'Addr'}]}},
     {cons,2263,
      {tuple,2263,
       [{var,2263,'IP'},
        {op,332,'bor',
         {op,332,'bsl',{var,2263,'P1'},{integer,332,8}},
         {var,2263,'P0'}}]},
      {call,2263,{atom,2263,get_addrs},[{var,2263,'Addrs'}]}}]}]},
 {function,2265,get_ip,2,
  [{clause,2265,
    [{integer,28,1},{var,2265,'Addr'}],
    [],
    [{call,2265,{atom,2265,get_ip4},[{var,2265,'Addr'}]}]},
   {clause,2266,
    [{integer,29,2},{var,2266,'Addr'}],
    [],
    [{call,2266,{atom,2266,get_ip6},[{var,2266,'Addr'}]}]}]},
 {function,2268,get_ip4,1,
  [{clause,2268,
    [{cons,2268,
      {var,2268,'A'},
      {cons,2268,
       {var,2268,'B'},
       {cons,2268,{var,2268,'C'},{cons,2268,{var,2268,'D'},{var,2268,'T'}}}}}],
    [],
    [{tuple,2268,
      [{tuple,2268,
        [{var,2268,'A'},{var,2268,'B'},{var,2268,'C'},{var,2268,'D'}]},
       {var,2268,'T'}]}]}]},
 {function,2270,get_ip6,1,
  [{clause,2270,
    [{cons,2270,
      {var,2270,'X1'},
      {cons,2270,
       {var,2270,'X2'},
       {cons,2270,
        {var,2270,'X3'},
        {cons,2270,
         {var,2270,'X4'},
         {cons,2270,
          {var,2270,'X5'},
          {cons,2270,
           {var,2270,'X6'},
           {cons,2270,
            {var,2270,'X7'},
            {cons,2270,
             {var,2270,'X8'},
             {cons,2270,
              {var,2270,'X9'},
              {cons,2270,
               {var,2270,'X10'},
               {cons,2270,
                {var,2270,'X11'},
                {cons,2270,
                 {var,2270,'X12'},
                 {cons,2270,
                  {var,2270,'X13'},
                  {cons,2270,
                   {var,2270,'X14'},
                   {cons,2270,
                    {var,2270,'X15'},
                    {cons,2270,
                     {var,2270,'X16'},
                     {var,2270,'T'}}}}}}}}}}}}}}}}}],
    [],
    [{tuple,2271,
      [{tuple,2271,
        [{op,332,'bor',
          {op,332,'bsl',{var,2271,'X1'},{integer,332,8}},
          {var,2271,'X2'}},
         {op,332,'bor',
          {op,332,'bsl',{var,2271,'X3'},{integer,332,8}},
          {var,2271,'X4'}},
         {op,332,'bor',
          {op,332,'bsl',{var,2271,'X5'},{integer,332,8}},
          {var,2271,'X6'}},
         {op,332,'bor',
          {op,332,'bsl',{var,2271,'X7'},{integer,332,8}},
          {var,2271,'X8'}},
         {op,332,'bor',
          {op,332,'bsl',{var,2272,'X9'},{integer,332,8}},
          {var,2272,'X10'}},
         {op,332,'bor',
          {op,332,'bsl',{var,2272,'X11'},{integer,332,8}},
          {var,2272,'X12'}},
         {op,332,'bor',
          {op,332,'bsl',{var,2272,'X13'},{integer,332,8}},
          {var,2272,'X14'}},
         {op,332,'bor',
          {op,332,'bsl',{var,2272,'X15'},{integer,332,8}},
          {var,2272,'X16'}}]},
       {var,2272,'T'}]}]}]},
 {function,2276,ctl_cmd,3,
  [{clause,2276,
    [{var,2276,'Port'},{var,2276,'Cmd'},{var,2276,'Args'}],
    [],
    [{atom,56,ok},
     {match,2278,
      {var,2278,'Result'},
      {'try',2279,
       [{call,2279,
         {remote,2279,{atom,2279,erlang},{atom,2279,port_control}},
         [{var,2279,'Port'},{var,2279,'Cmd'},{var,2279,'Args'}]}],
       [{clause,2280,
         [{cons,2280,{integer,111,1},{var,2280,'Reply'}}],
         [],
         [{tuple,2280,[{atom,2280,ok},{var,2280,'Reply'}]}]},
        {clause,2281,
         [{cons,2281,{integer,112,2},{nil,2281}}],
         [],
         [{atom,2281,inet_reply}]},
        {clause,2282,
         [{cons,2282,{integer,110,0},{var,2282,'Err'}}],
         [],
         [{tuple,2282,
           [{atom,2282,error},
            {call,2282,{atom,2282,list_to_atom},[{var,2282,'Err'}]}]}]}],
       [{clause,2284,
         [{tuple,2284,[{atom,2284,error},{var,2284,'_'},{var,2284,'_'}]}],
         [],
         [{tuple,2284,[{atom,2284,error},{atom,2284,einval}]}]}],
       []}},
     {atom,56,ok},
     {var,2287,'Result'}]}]}]
