binary
[]
[]
[{function,43,at,2,
  [{clause,43,
    [{var,43,'_'},{var,43,'_'}],
    [],
    [{call,44,
      {remote,44,{atom,44,erlang},{atom,44,nif_error}},
      [{atom,44,undef}]}]}]},
 {function,49,bin_to_list,1,
  [{clause,49,
    [{var,49,'_'}],
    [],
    [{call,50,
      {remote,50,{atom,50,erlang},{atom,50,nif_error}},
      [{atom,50,undef}]}]}]},
 {function,56,bin_to_list,2,
  [{clause,56,
    [{var,56,'_'},{var,56,'_'}],
    [],
    [{call,57,
      {remote,57,{atom,57,erlang},{atom,57,nif_error}},
      [{atom,57,undef}]}]}]},
 {function,64,bin_to_list,3,
  [{clause,64,
    [{var,64,'_'},{var,64,'_'},{var,64,'_'}],
    [],
    [{call,65,
      {remote,65,{atom,65,erlang},{atom,65,nif_error}},
      [{atom,65,undef}]}]}]},
 {function,70,compile_pattern,1,
  [{clause,70,
    [{var,70,'_'}],
    [],
    [{call,71,
      {remote,71,{atom,71,erlang},{atom,71,nif_error}},
      [{atom,71,undef}]}]}]},
 {function,76,copy,1,
  [{clause,76,
    [{var,76,'_'}],
    [],
    [{call,77,
      {remote,77,{atom,77,erlang},{atom,77,nif_error}},
      [{atom,77,undef}]}]}]},
 {function,83,copy,2,
  [{clause,83,
    [{var,83,'_'},{var,83,'_'}],
    [],
    [{call,84,
      {remote,84,{atom,84,erlang},{atom,84,nif_error}},
      [{atom,84,undef}]}]}]},
 {function,90,decode_unsigned,1,
  [{clause,90,
    [{var,90,'_'}],
    [],
    [{call,91,
      {remote,91,{atom,91,erlang},{atom,91,nif_error}},
      [{atom,91,undef}]}]}]},
 {function,98,decode_unsigned,2,
  [{clause,98,
    [{var,98,'_'},{var,98,'_'}],
    [],
    [{call,99,
      {remote,99,{atom,99,erlang},{atom,99,nif_error}},
      [{atom,99,undef}]}]}]},
 {function,104,encode_unsigned,1,
  [{clause,104,
    [{var,104,'_'}],
    [],
    [{call,105,
      {remote,105,{atom,105,erlang},{atom,105,nif_error}},
      [{atom,105,undef}]}]}]},
 {function,111,encode_unsigned,2,
  [{clause,111,
    [{var,111,'_'},{var,111,'_'}],
    [],
    [{call,112,
      {remote,112,{atom,112,erlang},{atom,112,nif_error}},
      [{atom,112,undef}]}]}]},
 {function,117,first,1,
  [{clause,117,
    [{var,117,'_'}],
    [],
    [{call,118,
      {remote,118,{atom,118,erlang},{atom,118,nif_error}},
      [{atom,118,undef}]}]}]},
 {function,123,last,1,
  [{clause,123,
    [{var,123,'_'}],
    [],
    [{call,124,
      {remote,124,{atom,124,erlang},{atom,124,nif_error}},
      [{atom,124,undef}]}]}]},
 {function,129,list_to_bin,1,
  [{clause,129,
    [{var,129,'_'}],
    [],
    [{call,130,
      {remote,130,{atom,130,erlang},{atom,130,nif_error}},
      [{atom,130,undef}]}]}]},
 {function,135,longest_common_prefix,1,
  [{clause,135,
    [{var,135,'_'}],
    [],
    [{call,136,
      {remote,136,{atom,136,erlang},{atom,136,nif_error}},
      [{atom,136,undef}]}]}]},
 {function,141,longest_common_suffix,1,
  [{clause,141,
    [{var,141,'_'}],
    [],
    [{call,142,
      {remote,142,{atom,142,erlang},{atom,142,nif_error}},
      [{atom,142,undef}]}]}]},
 {function,149,match,2,
  [{clause,149,
    [{var,149,'_'},{var,149,'_'}],
    [],
    [{call,150,
      {remote,150,{atom,150,erlang},{atom,150,nif_error}},
      [{atom,150,undef}]}]}]},
 {function,159,match,3,
  [{clause,159,
    [{var,159,'_'},{var,159,'_'},{var,159,'_'}],
    [],
    [{call,160,
      {remote,160,{atom,160,erlang},{atom,160,nif_error}},
      [{atom,160,undef}]}]}]},
 {function,167,matches,2,
  [{clause,167,
    [{var,167,'_'},{var,167,'_'}],
    [],
    [{call,168,
      {remote,168,{atom,168,erlang},{atom,168,nif_error}},
      [{atom,168,undef}]}]}]},
 {function,177,matches,3,
  [{clause,177,
    [{var,177,'_'},{var,177,'_'},{var,177,'_'}],
    [],
    [{call,178,
      {remote,178,{atom,178,erlang},{atom,178,nif_error}},
      [{atom,178,undef}]}]}]},
 {function,184,part,2,
  [{clause,184,
    [{var,184,'_'},{var,184,'_'}],
    [],
    [{call,185,
      {remote,185,{atom,185,erlang},{atom,185,nif_error}},
      [{atom,185,undef}]}]}]},
 {function,192,part,3,
  [{clause,192,
    [{var,192,'_'},{var,192,'_'},{var,192,'_'}],
    [],
    [{call,193,
      {remote,193,{atom,193,erlang},{atom,193,nif_error}},
      [{atom,193,undef}]}]}]},
 {function,198,referenced_byte_size,1,
  [{clause,198,
    [{var,198,'_'}],
    [],
    [{call,199,
      {remote,199,{atom,199,erlang},{atom,199,nif_error}},
      [{atom,199,undef}]}]}]},
 {function,212,split,2,
  [{clause,212,
    [{var,212,'H'},{var,212,'N'}],
    [],
    [{call,213,{atom,213,split},[{var,213,'H'},{var,213,'N'},{nil,213}]}]}]},
 {function,222,split,3,
  [{clause,222,
    [{var,222,'Haystack'},{var,222,'Needles'},{var,222,'Options'}],
    [],
    [{'try',223,
      [{match,224,
        {tuple,224,
         [{var,224,'Part'},
          {var,224,'Global'},
          {var,224,'Trim'},
          {var,224,'TrimAll'}]},
        {call,225,
         {atom,225,get_opts_split},
         [{var,225,'Options'},
          {tuple,225,
           [{atom,225,no},
            {atom,225,false},
            {atom,225,false},
            {atom,225,false}]}]}},
       {match,226,
        {var,226,'Moptlist'},
        {'case',226,
         {var,226,'Part'},
         [{clause,227,[{atom,227,no}],[],[{nil,228}]},
          {clause,229,
           [{tuple,229,[{var,229,'A'},{var,229,'B'}]}],
           [],
           [{cons,230,
             {tuple,230,
              [{atom,230,scope},{tuple,230,[{var,230,'A'},{var,230,'B'}]}]},
             {nil,230}}]}]}},
       {match,232,
        {var,232,'MList'},
        {'if',232,
         [{clause,233,[],
           [[{var,233,'Global'}]],
           [{call,234,
             {remote,234,{atom,234,binary},{atom,234,matches}},
             [{var,234,'Haystack'},
              {var,234,'Needles'},
              {var,234,'Moptlist'}]}]},
          {clause,235,[],
           [[{atom,235,true}]],
           [{'case',236,
             {call,236,
              {remote,236,{atom,236,binary},{atom,236,match}},
              [{var,236,'Haystack'},{var,236,'Needles'},{var,236,'Moptlist'}]},
             [{clause,237,[{atom,237,nomatch}],[],[{nil,237}]},
              {clause,238,
               [{var,238,'Match'}],
               [],
               [{cons,238,{var,238,'Match'},{nil,238}}]}]}]}]}},
       {call,241,
        {atom,241,do_split},
        [{var,241,'Haystack'},
         {var,241,'MList'},
         {integer,241,0},
         {var,241,'Trim'},
         {var,241,'TrimAll'}]}],
      [],
      [{clause,243,
        [{tuple,243,[{var,243,'_'},{var,243,'_'},{var,243,'_'}]}],
        [],
        [{call,244,
          {remote,244,{atom,244,erlang},{atom,244,error}},
          [{atom,244,badarg}]}]}],
      []}]}]},
 {function,247,do_split,5,
  [{clause,247,
    [{var,247,'H'},{nil,247},{var,247,'N'},{atom,247,true},{var,247,'_'}],
    [[{op,247,'>=',
       {var,247,'N'},
       {call,247,{atom,247,byte_size},[{var,247,'H'}]}}]],
    [{nil,248}]},
   {clause,249,
    [{var,249,'H'},{nil,249},{var,249,'N'},{var,249,'_'},{atom,249,true}],
    [[{op,249,'>=',
       {var,249,'N'},
       {call,249,{atom,249,byte_size},[{var,249,'H'}]}}]],
    [{nil,250}]},
   {clause,251,
    [{var,251,'H'},{nil,251},{var,251,'N'},{var,251,'_'},{var,251,'_'}],
    [],
    [{cons,252,
      {call,252,
       {remote,252,{atom,252,binary},{atom,252,part}},
       [{var,252,'H'},
        {tuple,252,
         [{var,252,'N'},
          {op,252,'-',
           {call,252,{atom,252,byte_size},[{var,252,'H'}]},
           {var,252,'N'}}]}]},
      {nil,252}}]},
   {clause,253,
    [{var,253,'H'},
     {cons,253,{tuple,253,[{var,253,'A'},{var,253,'B'}]},{var,253,'T'}},
     {var,253,'N'},
     {var,253,'Trim'},
     {var,253,'TrimAll'}],
    [],
    [{'case',254,
      {call,254,
       {remote,254,{atom,254,binary},{atom,254,part}},
       [{var,254,'H'},
        {tuple,254,[{var,254,'N'},{op,254,'-',{var,254,'A'},{var,254,'N'}}]}]},
      [{clause,255,
        [{bin,255,[]}],
        [[{op,255,'==',{var,255,'TrimAll'},{atom,255,true}}]],
        [{call,256,
          {atom,256,do_split},
          [{var,256,'H'},
           {var,256,'T'},
           {op,256,'+',{var,256,'A'},{var,256,'B'}},
           {var,256,'Trim'},
           {var,256,'TrimAll'}]}]},
       {clause,257,
        [{bin,257,[]}],
        [],
        [{match,258,
          {var,258,'Rest'},
          {call,258,
           {atom,258,do_split},
           [{var,258,'H'},
            {var,258,'T'},
            {op,258,'+',{var,258,'A'},{var,258,'B'}},
            {var,258,'Trim'},
            {var,258,'TrimAll'}]}},
         {'case',259,
          {tuple,259,[{var,259,'Trim'},{var,259,'Rest'}]},
          [{clause,260,
            [{tuple,260,[{atom,260,true},{nil,260}]}],
            [],
            [{nil,261}]},
           {clause,262,
            [{var,262,'_'}],
            [],
            [{cons,263,{bin,263,[]},{var,263,'Rest'}}]}]}]},
       {clause,265,
        [{var,265,'Oth'}],
        [],
        [{cons,266,
          {var,266,'Oth'},
          {call,266,
           {atom,266,do_split},
           [{var,266,'H'},
            {var,266,'T'},
            {op,266,'+',{var,266,'A'},{var,266,'B'}},
            {var,266,'Trim'},
            {var,266,'TrimAll'}]}}]}]}]}]},
 {function,280,replace,3,
  [{clause,280,
    [{var,280,'H'},{var,280,'N'},{var,280,'R'}],
    [],
    [{call,281,
      {atom,281,replace},
      [{var,281,'H'},{var,281,'N'},{var,281,'R'},{nil,281}]}]}]},
 {function,293,replace,4,
  [{clause,293,
    [{var,293,'Haystack'},
     {var,293,'Needles'},
     {var,293,'Replacement'},
     {var,293,'Options'}],
    [],
    [{'try',294,
      [{match,295,
        {atom,295,true},
        {call,295,{atom,295,is_binary},[{var,295,'Replacement'}]}},
       {match,296,
        {tuple,296,[{var,296,'Part'},{var,296,'Global'},{var,296,'Insert'}]},
        {call,296,
         {atom,296,get_opts_replace},
         [{var,296,'Options'},
          {tuple,296,[{atom,296,no},{atom,296,false},{nil,296}]}]}},
       {match,297,
        {var,297,'Moptlist'},
        {'case',297,
         {var,297,'Part'},
         [{clause,298,[{atom,298,no}],[],[{nil,299}]},
          {clause,300,
           [{tuple,300,[{var,300,'A'},{var,300,'B'}]}],
           [],
           [{cons,301,
             {tuple,301,
              [{atom,301,scope},{tuple,301,[{var,301,'A'},{var,301,'B'}]}]},
             {nil,301}}]}]}},
       {match,303,
        {var,303,'MList'},
        {'if',303,
         [{clause,304,[],
           [[{var,304,'Global'}]],
           [{call,305,
             {remote,305,{atom,305,binary},{atom,305,matches}},
             [{var,305,'Haystack'},
              {var,305,'Needles'},
              {var,305,'Moptlist'}]}]},
          {clause,306,[],
           [[{atom,306,true}]],
           [{'case',307,
             {call,307,
              {remote,307,{atom,307,binary},{atom,307,match}},
              [{var,307,'Haystack'},{var,307,'Needles'},{var,307,'Moptlist'}]},
             [{clause,308,[{atom,308,nomatch}],[],[{nil,308}]},
              {clause,309,
               [{var,309,'Match'}],
               [],
               [{cons,309,{var,309,'Match'},{nil,309}}]}]}]}]}},
       {match,312,
        {var,312,'ReplList'},
        {'case',312,
         {var,312,'Insert'},
         [{clause,313,[{nil,313}],[],[{var,314,'Replacement'}]},
          {clause,315,
           [{var,315,'Y'}],
           [[{call,315,{atom,315,is_integer},[{var,315,'Y'}]}]],
           [{call,316,
             {atom,316,splitat},
             [{var,316,'Replacement'},
              {integer,316,0},
              {cons,316,{var,316,'Y'},{nil,316}}]}]},
          {clause,317,
           [{var,317,'Li'}],
           [[{call,317,{atom,317,is_list},[{var,317,'Li'}]}]],
           [{call,318,
             {atom,318,splitat},
             [{var,318,'Replacement'},
              {integer,318,0},
              {call,318,
               {remote,318,{atom,318,lists},{atom,318,sort}},
               [{var,318,'Li'}]}]}]}]}},
       {call,320,
        {remote,320,{atom,320,erlang},{atom,320,iolist_to_binary}},
        [{call,320,
          {atom,320,do_replace},
          [{var,320,'Haystack'},
           {var,320,'MList'},
           {var,320,'ReplList'},
           {integer,320,0}]}]}],
      [],
      [{clause,322,
        [{tuple,322,[{var,322,'_'},{var,322,'_'},{var,322,'_'}]}],
        [],
        [{call,323,
          {remote,323,{atom,323,erlang},{atom,323,error}},
          [{atom,323,badarg}]}]}],
      []}]}]},
 {function,327,do_replace,4,
  [{clause,327,
    [{var,327,'H'},{nil,327},{var,327,'_'},{var,327,'N'}],
    [],
    [{cons,328,
      {call,328,
       {remote,328,{atom,328,binary},{atom,328,part}},
       [{var,328,'H'},
        {tuple,328,
         [{var,328,'N'},
          {op,328,'-',
           {call,328,{atom,328,byte_size},[{var,328,'H'}]},
           {var,328,'N'}}]}]},
      {nil,328}}]},
   {clause,329,
    [{var,329,'H'},
     {cons,329,{tuple,329,[{var,329,'A'},{var,329,'B'}]},{var,329,'T'}},
     {var,329,'Replacement'},
     {var,329,'N'}],
    [],
    [{cons,330,
      {call,330,
       {remote,330,{atom,330,binary},{atom,330,part}},
       [{var,330,'H'},
        {tuple,330,[{var,330,'N'},{op,330,'-',{var,330,'A'},{var,330,'N'}}]}]},
      {cons,331,
       {'if',331,
        [{clause,332,[],
          [[{call,332,{atom,332,is_list},[{var,332,'Replacement'}]}]],
          [{call,333,
            {atom,333,do_insert},
            [{var,333,'Replacement'},
             {call,333,
              {remote,333,{atom,333,binary},{atom,333,part}},
              [{var,333,'H'},{tuple,333,[{var,333,'A'},{var,333,'B'}]}]}]}]},
         {clause,334,[],[[{atom,334,true}]],[{var,335,'Replacement'}]}]},
       {call,337,
        {atom,337,do_replace},
        [{var,337,'H'},
         {var,337,'T'},
         {var,337,'Replacement'},
         {op,337,'+',{var,337,'A'},{var,337,'B'}}]}}}]}]},
 {function,339,do_insert,2,
  [{clause,339,
    [{cons,339,{var,339,'X'},{nil,339}},{var,339,'_'}],
    [],
    [{cons,340,{var,340,'X'},{nil,340}}]},
   {clause,341,
    [{cons,341,{var,341,'H'},{var,341,'T'}},{var,341,'R'}],
    [],
    [{cons,342,
      {var,342,'H'},
      {cons,342,
       {var,342,'R'},
       {call,342,{atom,342,do_insert},[{var,342,'T'},{var,342,'R'}]}}}]}]},
 {function,344,splitat,3,
  [{clause,344,
    [{var,344,'H'},{var,344,'N'},{nil,344}],
    [],
    [{cons,345,
      {call,345,
       {remote,345,{atom,345,binary},{atom,345,part}},
       [{var,345,'H'},
        {tuple,345,
         [{var,345,'N'},
          {op,345,'-',
           {call,345,{atom,345,byte_size},[{var,345,'H'}]},
           {var,345,'N'}}]}]},
      {nil,345}}]},
   {clause,346,
    [{var,346,'H'},{var,346,'N'},{cons,346,{var,346,'I'},{var,346,'T'}}],
    [],
    [{cons,347,
      {call,347,
       {remote,347,{atom,347,binary},{atom,347,part}},
       [{var,347,'H'},
        {tuple,347,[{var,347,'N'},{op,347,'-',{var,347,'I'},{var,347,'N'}}]}]},
      {call,347,
       {atom,347,splitat},
       [{var,347,'H'},{var,347,'I'},{var,347,'T'}]}}]}]},
 {function,355,get_opts_split,2,
  [{clause,355,
    [{nil,355},
     {tuple,355,
      [{var,355,'Part'},
       {var,355,'Global'},
       {var,355,'Trim'},
       {var,355,'TrimAll'}]}],
    [],
    [{tuple,356,
      [{var,356,'Part'},
       {var,356,'Global'},
       {var,356,'Trim'},
       {var,356,'TrimAll'}]}]},
   {clause,357,
    [{cons,357,
      {tuple,357,[{atom,357,scope},{tuple,357,[{var,357,'A'},{var,357,'B'}]}]},
      {var,357,'T'}},
     {tuple,357,
      [{var,357,'_Part'},
       {var,357,'Global'},
       {var,357,'Trim'},
       {var,357,'TrimAll'}]}],
    [],
    [{call,358,
      {atom,358,get_opts_split},
      [{var,358,'T'},
       {tuple,358,
        [{tuple,358,[{var,358,'A'},{var,358,'B'}]},
         {var,358,'Global'},
         {var,358,'Trim'},
         {var,358,'TrimAll'}]}]}]},
   {clause,359,
    [{cons,359,{atom,359,global},{var,359,'T'}},
     {tuple,359,
      [{var,359,'Part'},
       {var,359,'_Global'},
       {var,359,'Trim'},
       {var,359,'TrimAll'}]}],
    [],
    [{call,360,
      {atom,360,get_opts_split},
      [{var,360,'T'},
       {tuple,360,
        [{var,360,'Part'},
         {atom,360,true},
         {var,360,'Trim'},
         {var,360,'TrimAll'}]}]}]},
   {clause,361,
    [{cons,361,{atom,361,trim},{var,361,'T'}},
     {tuple,361,
      [{var,361,'Part'},
       {var,361,'Global'},
       {var,361,'_Trim'},
       {var,361,'TrimAll'}]}],
    [],
    [{call,362,
      {atom,362,get_opts_split},
      [{var,362,'T'},
       {tuple,362,
        [{var,362,'Part'},
         {var,362,'Global'},
         {atom,362,true},
         {var,362,'TrimAll'}]}]}]},
   {clause,363,
    [{cons,363,{atom,363,trim_all},{var,363,'T'}},
     {tuple,363,
      [{var,363,'Part'},
       {var,363,'Global'},
       {var,363,'Trim'},
       {var,363,'_TrimAll'}]}],
    [],
    [{call,364,
      {atom,364,get_opts_split},
      [{var,364,'T'},
       {tuple,364,
        [{var,364,'Part'},
         {var,364,'Global'},
         {var,364,'Trim'},
         {atom,364,true}]}]}]},
   {clause,365,
    [{var,365,'_'},{var,365,'_'}],
    [],
    [{call,366,{atom,366,throw},[{atom,366,badopt}]}]}]},
 {function,368,get_opts_replace,2,
  [{clause,368,
    [{nil,368},
     {tuple,368,[{var,368,'Part'},{var,368,'Global'},{var,368,'Insert'}]}],
    [],
    [{tuple,369,[{var,369,'Part'},{var,369,'Global'},{var,369,'Insert'}]}]},
   {clause,370,
    [{cons,370,
      {tuple,370,[{atom,370,scope},{tuple,370,[{var,370,'A'},{var,370,'B'}]}]},
      {var,370,'T'}},
     {tuple,370,[{var,370,'_Part'},{var,370,'Global'},{var,370,'Insert'}]}],
    [],
    [{call,371,
      {atom,371,get_opts_replace},
      [{var,371,'T'},
       {tuple,371,
        [{tuple,371,[{var,371,'A'},{var,371,'B'}]},
         {var,371,'Global'},
         {var,371,'Insert'}]}]}]},
   {clause,372,
    [{cons,372,{atom,372,global},{var,372,'T'}},
     {tuple,372,[{var,372,'Part'},{var,372,'_Global'},{var,372,'Insert'}]}],
    [],
    [{call,373,
      {atom,373,get_opts_replace},
      [{var,373,'T'},
       {tuple,373,[{var,373,'Part'},{atom,373,true},{var,373,'Insert'}]}]}]},
   {clause,374,
    [{cons,374,
      {tuple,374,[{atom,374,insert_replaced},{var,374,'N'}]},
      {var,374,'T'}},
     {tuple,374,[{var,374,'Part'},{var,374,'Global'},{var,374,'_Insert'}]}],
    [],
    [{call,375,
      {atom,375,get_opts_replace},
      [{var,375,'T'},
       {tuple,375,[{var,375,'Part'},{var,375,'Global'},{var,375,'N'}]}]}]},
   {clause,376,
    [{var,376,'_'},{var,376,'_'}],
    [],
    [{call,377,{atom,377,throw},[{atom,377,badopt}]}]}]}]
