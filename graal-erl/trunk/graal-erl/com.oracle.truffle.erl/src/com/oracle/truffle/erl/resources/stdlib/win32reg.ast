win32reg
[]
[]
[{function,70,open,1,
  [{clause,70,
    [{var,70,'Modes'}],
    [],
    [{'case',71,
      {call,71,{remote,71,{atom,71,os},{atom,71,type}},[]},
      [{clause,72,
        [{tuple,72,[{atom,72,win32},{var,72,'_'}]}],
        [],
        [{'case',73,
          {call,73,{atom,73,open_mode},[{var,73,'Modes'},{nil,73}]},
          [{clause,74,
            [{tuple,74,[{atom,74,error},{var,74,'Reason'}]}],
            [],
            [{tuple,75,[{atom,75,error},{var,75,'Reason'}]}]},
           {clause,76,
            [{var,76,'ModeStr'}],
            [],
            [{match,77,
              {var,77,'P'},
              {call,77,
               {atom,77,open_port},
               [{tuple,77,
                 [{atom,77,spawn},
                  {op,77,'++',
                   {string,77,"registry__drv__ "},
                   {var,77,'ModeStr'}}]},
                {nil,77}]}},
             {tuple,78,
              [{atom,78,ok},
               {tuple,78,[{atom,78,win32reg},{var,78,'P'}]}]}]}]}]},
       {clause,80,
        [{var,80,'_'}],
        [],
        [{tuple,81,[{atom,81,error},{atom,81,enotsup}]}]}]}]}]},
 {function,87,close,1,
  [{clause,87,
    [{tuple,87,[{atom,87,win32reg},{var,87,'Reg'}]}],
    [[{call,87,{atom,87,is_port},[{var,87,'Reg'}]}]],
    [{call,88,{atom,88,unlink},[{var,88,'Reg'}]},
     {call,89,{atom,89,exit},[{var,89,'Reg'},{atom,89,die}]},
     {atom,90,ok}]}]},
 {function,96,current_key,1,
  [{clause,96,
    [{tuple,96,[{atom,96,win32reg},{var,96,'Reg'}]}],
    [[{call,96,{atom,96,is_port},[{var,96,'Reg'}]}]],
    [{match,97,{var,97,'Cmd'},{cons,97,{integer,41,0},{nil,97}}},
     {op,98,'!',
      {var,98,'Reg'},
      {tuple,98,
       [{call,98,{atom,98,self},[]},
        {tuple,98,[{atom,98,command},{var,98,'Cmd'}]}]}},
     {match,99,
      {tuple,99,[{atom,99,state},{var,99,'Hkey'},{var,99,'Name'}]},
      {call,99,{atom,99,get_result},[{var,99,'Reg'}]}},
     {match,100,
      {var,100,'Root'},
      {call,100,{atom,100,hkey_to_string},[{var,100,'Hkey'}]}},
     {tuple,101,
      [{atom,101,ok},
       {'case',101,
        {var,101,'Name'},
        [{clause,102,[{nil,102}],[],[{var,102,'Root'}]},
         {clause,103,
          [{var,103,'_'}],
          [],
          [{op,103,'++',
            {var,103,'Root'},
            {cons,103,{char,103,92},{var,103,'Name'}}}]}]}]}]}]},
 {function,111,change_key,2,
  [{clause,111,
    [{tuple,111,[{atom,111,win32reg},{var,111,'Reg'}]},{var,111,'Key'}],
    [[{call,111,{atom,111,is_port},[{var,111,'Reg'}]}]],
    [{call,112,
      {atom,112,change_key},
      [{var,112,'Reg'},{integer,42,1},{var,112,'Key'}]}]}]},
 {function,119,change_key_create,2,
  [{clause,119,
    [{tuple,119,[{atom,119,win32reg},{var,119,'Reg'}]},{var,119,'Key'}],
    [[{call,119,{atom,119,is_port},[{var,119,'Reg'}]}]],
    [{call,120,
      {atom,120,change_key},
      [{var,120,'Reg'},{integer,43,2},{var,120,'Key'}]}]}]},
 {function,122,change_key,3,
  [{clause,122,
    [{var,122,'Reg'},{var,122,'Cmd'},{var,122,'Key'}],
    [],
    [{'case',123,
      {call,123,{atom,123,parse_key},[{var,123,'Key'},{var,123,'Reg'}]},
      [{clause,124,
        [{tuple,124,[{atom,124,ok},{var,124,'Hkey'},{var,124,'Path'}]}],
        [],
        [{op,125,'!',
          {var,125,'Reg'},
          {tuple,125,
           [{call,125,{atom,125,self},[]},
            {tuple,125,
             [{atom,125,command},
              {cons,125,
               {var,125,'Cmd'},
               {cons,125,
                {call,125,{atom,125,i32},[{var,125,'Hkey'}]},
                {cons,125,
                 {var,125,'Path'},
                 {cons,125,{integer,125,0},{nil,125}}}}}]}]}},
         {call,126,{atom,126,get_result},[{var,126,'Reg'}]}]},
       {clause,127,
        [{tuple,127,[{atom,127,error},{var,127,'Reason'}]}],
        [],
        [{tuple,128,[{atom,128,error},{var,128,'Reason'}]}]}]}]}]},
 {function,136,sub_keys,1,
  [{clause,136,
    [{tuple,136,[{atom,136,win32reg},{var,136,'Reg'}]}],
    [[{call,136,{atom,136,is_port},[{var,136,'Reg'}]}]],
    [{match,137,{var,137,'Cmd'},{cons,137,{integer,44,3},{nil,137}}},
     {op,138,'!',
      {var,138,'Reg'},
      {tuple,138,
       [{call,138,{atom,138,self},[]},
        {tuple,138,[{atom,138,command},{var,138,'Cmd'}]}]}},
     {call,139,{atom,139,collect_keys},[{var,139,'Reg'},{nil,139}]}]}]},
 {function,145,delete_key,1,
  [{clause,145,
    [{tuple,145,[{atom,145,win32reg},{var,145,'Reg'}]}],
    [[{call,145,{atom,145,is_port},[{var,145,'Reg'}]}]],
    [{match,146,{var,146,'Cmd'},{cons,146,{integer,48,7},{nil,146}}},
     {op,147,'!',
      {var,147,'Reg'},
      {tuple,147,
       [{call,147,{atom,147,self},[]},
        {tuple,147,[{atom,147,command},{var,147,'Cmd'}]}]}},
     {call,148,{atom,148,get_result},[{var,148,'Reg'}]}]}]},
 {function,156,set_value,3,
  [{clause,156,
    [{tuple,156,[{atom,156,win32reg},{var,156,'Reg'}]},
     {var,156,'Name0'},
     {var,156,'Value'}],
    [[{call,156,{atom,156,is_port},[{var,156,'Reg'}]}]],
    [{match,157,
      {var,157,'Name'},
      {'case',158,
       {var,158,'Name0'},
       [{clause,159,[{atom,159,default}],[],[{nil,159}]},
        {clause,160,[{var,160,'_'}],[],[{var,160,'Name0'}]}]}},
     {match,162,
      {tuple,162,[{var,162,'Type'},{var,162,'V'}]},
      {call,162,{atom,162,term_to_value},[{var,162,'Value'}]}},
     {match,163,
      {var,163,'Cmd'},
      {cons,163,
       {integer,47,6},
       {cons,163,
        {var,163,'Type'},
        {cons,163,
         {var,163,'Name'},
         {cons,163,{integer,163,0},{cons,163,{var,163,'V'},{nil,163}}}}}}},
     {op,164,'!',
      {var,164,'Reg'},
      {tuple,164,
       [{call,164,{atom,164,self},[]},
        {tuple,164,[{atom,164,command},{var,164,'Cmd'}]}]}},
     {call,165,{atom,165,get_result},[{var,165,'Reg'}]}]}]},
 {function,172,value,2,
  [{clause,172,
    [{tuple,172,[{atom,172,win32reg},{var,172,'Reg'}]},{var,172,'Name'}],
    [[{call,172,{atom,172,is_port},[{var,172,'Reg'}]}]],
    [{match,173,
      {var,173,'Cmd'},
      {cons,173,
       {integer,45,4},
       {cons,173,{var,173,'Name'},{cons,173,{integer,173,0},{nil,173}}}}},
     {op,174,'!',
      {var,174,'Reg'},
      {tuple,174,
       [{call,174,{atom,174,self},[]},
        {tuple,174,[{atom,174,command},{var,174,'Cmd'}]}]}},
     {'case',175,
      {call,175,{atom,175,get_result},[{var,175,'Reg'}]},
      [{clause,176,
        [{tuple,176,
          [{atom,176,value},
           {tuple,176,[{var,176,'Name'},{var,176,'Value'}]}]}],
        [],
        [{tuple,177,[{atom,177,ok},{var,177,'Value'}]}]},
       {clause,178,
        [{tuple,178,[{atom,178,error},{var,178,'Reason'}]}],
        [],
        [{tuple,179,[{atom,179,error},{var,179,'Reason'}]}]}]}]}]},
 {function,187,values,1,
  [{clause,187,
    [{tuple,187,[{atom,187,win32reg},{var,187,'Reg'}]}],
    [[{call,187,{atom,187,is_port},[{var,187,'Reg'}]}]],
    [{match,188,{var,188,'Cmd'},{cons,188,{integer,46,5},{nil,188}}},
     {op,189,'!',
      {var,189,'Reg'},
      {tuple,189,
       [{call,189,{atom,189,self},[]},
        {tuple,189,[{atom,189,command},{var,189,'Cmd'}]}]}},
     {call,190,{atom,190,collect_values},[{var,190,'Reg'},{nil,190}]}]}]},
 {function,197,delete_value,2,
  [{clause,197,
    [{tuple,197,[{atom,197,win32reg},{var,197,'Reg'}]},{var,197,'Name0'}],
    [[{call,197,{atom,197,is_port},[{var,197,'Reg'}]}]],
    [{match,198,
      {var,198,'Name'},
      {'case',199,
       {var,199,'Name0'},
       [{clause,200,[{atom,200,default}],[],[{nil,200}]},
        {clause,201,[{var,201,'_'}],[],[{var,201,'Name0'}]}]}},
     {match,203,
      {var,203,'Cmd'},
      {cons,203,
       {integer,49,8},
       {cons,203,{var,203,'Name'},{cons,203,{integer,203,0},{nil,203}}}}},
     {op,204,'!',
      {var,204,'Reg'},
      {tuple,204,
       [{call,204,{atom,204,self},[]},
        {tuple,204,[{atom,204,command},{var,204,'Cmd'}]}]}},
     {call,205,{atom,205,get_result},[{var,205,'Reg'}]}]}]},
 {function,211,expand,1,
  [{clause,211,
    [{var,211,'Value'}],
    [],
    [{call,212,{atom,212,expand},[{var,212,'Value'},{nil,212},{nil,212}]}]}]},
 {function,214,expand,3,
  [{clause,214,
    [{cons,214,{char,214,37},{cons,214,{char,214,37},{var,214,'Rest'}}},
     {nil,214},
     {var,214,'Result'}],
    [],
    [{call,215,
      {atom,215,expand},
      [{var,215,'Rest'},
       {nil,215},
       {cons,215,{char,215,37},{var,215,'Result'}}]}]},
   {clause,216,
    [{cons,216,{char,216,37},{cons,216,{var,216,'C'},{var,216,'Rest'}}},
     {nil,216},
     {var,216,'Result'}],
    [],
    [{call,217,
      {atom,217,expand},
      [{var,217,'Rest'},
       {cons,217,{var,217,'C'},{nil,217}},
       {var,217,'Result'}]}]},
   {clause,218,
    [{cons,218,{var,218,'C'},{var,218,'Rest'}},{nil,218},{var,218,'Result'}],
    [],
    [{call,219,
      {atom,219,expand},
      [{var,219,'Rest'},
       {nil,219},
       {cons,219,{var,219,'C'},{var,219,'Result'}}]}]},
   {clause,220,
    [{cons,220,{char,220,37},{var,220,'Rest'}},
     {var,220,'Env0'},
     {var,220,'Result'}],
    [],
    [{match,221,
      {var,221,'Env'},
      {call,221,
       {remote,221,{atom,221,lists},{atom,221,reverse}},
       [{var,221,'Env0'}]}},
     {call,222,
      {atom,222,expand},
      [{var,222,'Rest'},
       {nil,222},
       {op,222,'++',
        {call,222,
         {remote,222,{atom,222,lists},{atom,222,reverse}},
         [{call,222,
           {remote,222,{atom,222,os},{atom,222,getenv}},
           [{var,222,'Env'},{string,222,[]}]}]},
        {var,222,'Result'}}]}]},
   {clause,223,
    [{cons,223,{var,223,'C'},{var,223,'Rest'}},
     {var,223,'Env'},
     {var,223,'Result'}],
    [],
    [{call,224,
      {atom,224,expand},
      [{var,224,'Rest'},
       {cons,224,{var,224,'C'},{var,224,'Env'}},
       {var,224,'Result'}]}]},
   {clause,225,
    [{nil,225},{nil,225},{var,225,'Result'}],
    [],
    [{call,226,
      {remote,226,{atom,226,lists},{atom,226,reverse}},
      [{var,226,'Result'}]}]}]},
 {function,232,format_error,1,
  [{clause,232,
    [{var,232,'ErrorId'}],
    [],
    [{call,233,
      {remote,233,{atom,233,erl_posix_msg},{atom,233,message}},
      [{var,233,'ErrorId'}]}]}]},
 {function,240,collect_values,2,
  [{clause,240,
    [{var,240,'P'},{var,240,'Result'}],
    [],
    [{'case',241,
      {call,241,{atom,241,get_result},[{var,241,'P'}]},
      [{clause,242,
        [{atom,242,ok}],
        [],
        [{tuple,243,
          [{atom,243,ok},
           {call,243,
            {remote,243,{atom,243,lists},{atom,243,reverse}},
            [{var,243,'Result'}]}]}]},
       {clause,244,
        [{tuple,244,[{atom,244,value},{var,244,'ValueData'}]}],
        [],
        [{call,245,
          {atom,245,collect_values},
          [{var,245,'P'},
           {cons,245,{var,245,'ValueData'},{var,245,'Result'}}]}]},
       {clause,246,
        [{tuple,246,[{atom,246,error},{var,246,'Reason'}]}],
        [],
        [{tuple,247,[{atom,247,error},{var,247,'Reason'}]}]}]}]}]},
 {function,252,collect_keys,2,
  [{clause,252,
    [{var,252,'P'},{var,252,'Result'}],
    [],
    [{'case',253,
      {call,253,{atom,253,get_result},[{var,253,'P'}]},
      [{clause,254,
        [{atom,254,ok}],
        [],
        [{tuple,255,
          [{atom,255,ok},
           {call,255,
            {remote,255,{atom,255,lists},{atom,255,reverse}},
            [{var,255,'Result'}]}]}]},
       {clause,256,
        [{tuple,256,[{atom,256,key},{var,256,'KeyData'}]}],
        [],
        [{call,257,
          {atom,257,collect_keys},
          [{var,257,'P'},{cons,257,{var,257,'KeyData'},{var,257,'Result'}}]}]},
       {clause,258,
        [{tuple,258,[{atom,258,error},{var,258,'Reason'}]}],
        [],
        [{tuple,259,[{atom,259,error},{var,259,'Reason'}]}]}]}]}]},
 {function,262,get_result,1,
  [{clause,262,
    [{var,262,'P'}],
    [],
    [{'receive',263,
      [{clause,264,
        [{tuple,264,
          [{var,264,'P'},{tuple,264,[{atom,264,data},{var,264,'Data'}]}]}],
        [],
        [{call,265,{atom,265,get_result1},[{var,265,'Data'}]}]}]}]}]},
 {function,268,get_result1,1,
  [{clause,268,
    [{cons,268,{char,268,101},{var,268,'Reason'}}],
    [],
    [{tuple,269,
      [{atom,269,error},
       {call,269,{atom,269,list_to_atom},[{var,269,'Reason'}]}]}]},
   {clause,270,[{cons,270,{char,270,111},{nil,270}}],[],[{atom,271,ok}]},
   {clause,272,
    [{cons,272,{char,272,107},{var,272,'Name'}}],
    [],
    [{tuple,273,[{atom,273,key},{var,273,'Name'}]}]},
   {clause,274,
    [{cons,274,{char,274,118},{var,274,'Rest0'}}],
    [],
    [{match,275,
      {tuple,275,[{atom,275,ok},{var,275,'Type'},{var,275,'Rest1'}]},
      {call,275,{atom,275,i32_on_head},[{var,275,'Rest0'}]}},
     {match,276,
      {tuple,276,[{atom,276,ok},{var,276,'Name0'},{var,276,'Value'}]},
      {call,276,{atom,276,get_cstring},[{var,276,'Rest1'}]}},
     {match,277,
      {var,277,'Name'},
      {'case',278,
       {var,278,'Name0'},
       [{clause,279,[{nil,279}],[],[{atom,279,default}]},
        {clause,280,[{var,280,'_'}],[],[{var,280,'Name0'}]}]}},
     {tuple,282,
      [{atom,282,value},
       {tuple,282,
        [{var,282,'Name'},
         {call,282,
          {atom,282,encode_value},
          [{var,282,'Type'},{var,282,'Value'}]}]}]}]},
   {clause,283,
    [{cons,283,{char,283,115},{var,283,'Rest0'}}],
    [],
    [{match,284,
      {tuple,284,[{atom,284,ok},{var,284,'Hkey'},{var,284,'Name'}]},
      {call,284,{atom,284,i32_on_head},[{var,284,'Rest0'}]}},
     {tuple,285,[{atom,285,state},{var,285,'Hkey'},{var,285,'Name'}]}]}]},
 {function,287,encode_value,2,
  [{clause,287,[{integer,52,1},{var,287,'Value'}],[],[{var,288,'Value'}]},
   {clause,289,[{integer,53,2},{var,289,'Value'}],[],[{var,290,'Value'}]},
   {clause,291,
    [{integer,55,4},{var,291,'Value'}],
    [],
    [{call,292,{atom,292,i32},[{var,292,'Value'}]}]},
   {clause,293,
    [{var,293,'_'},{var,293,'Value'}],
    [],
    [{call,294,{atom,294,list_to_binary},[{var,294,'Value'}]}]}]},
 {function,296,term_to_value,1,
  [{clause,296,
    [{var,296,'Int'}],
    [[{call,296,{atom,296,is_integer},[{var,296,'Int'}]}]],
    [{tuple,297,
      [{call,297,{atom,297,i32},[{integer,55,4}]},
       {call,297,{atom,297,i32},[{var,297,'Int'}]}]}]},
   {clause,298,
    [{var,298,'String'}],
    [[{call,298,{atom,298,is_list},[{var,298,'String'}]}]],
    [{tuple,299,
      [{call,299,{atom,299,i32},[{integer,52,1}]},
       {cons,299,{var,299,'String'},{cons,299,{integer,299,0},{nil,299}}}]}]},
   {clause,300,
    [{var,300,'Bin'}],
    [[{call,300,{atom,300,is_binary},[{var,300,'Bin'}]}]],
    [{tuple,301,
      [{call,301,{atom,301,i32},[{integer,54,3}]},{var,301,'Bin'}]}]},
   {clause,302,
    [{var,302,'_'}],
    [],
    [{call,303,{atom,303,exit},[{atom,303,badarg}]}]}]},
 {function,305,get_cstring,1,
  [{clause,305,
    [{var,305,'List'}],
    [],
    [{call,306,{atom,306,get_cstring},[{var,306,'List'},{nil,306}]}]}]},
 {function,308,get_cstring,2,
  [{clause,308,
    [{cons,308,{integer,308,0},{var,308,'Rest'}},{var,308,'Result'}],
    [],
    [{tuple,309,
      [{atom,309,ok},
       {call,309,
        {remote,309,{atom,309,lists},{atom,309,reverse}},
        [{var,309,'Result'}]},
       {var,309,'Rest'}]}]},
   {clause,310,
    [{cons,310,{var,310,'C'},{var,310,'Rest'}},{var,310,'Result'}],
    [],
    [{call,311,
      {atom,311,get_cstring},
      [{var,311,'Rest'},{cons,311,{var,311,'C'},{var,311,'Result'}}]}]},
   {clause,312,
    [{nil,312},{var,312,'Result'}],
    [],
    [{tuple,313,
      [{atom,313,ok},
       {call,313,
        {remote,313,{atom,313,lists},{atom,313,reverse}},
        [{var,313,'Result'}]},
       {nil,313}]}]}]},
 {function,315,i32,1,
  [{clause,315,
    [{var,315,'Int'}],
    [[{call,315,{atom,315,is_integer},[{var,315,'Int'}]}]],
    [{cons,316,
      {op,316,'band',
       {op,316,'bsr',{var,316,'Int'},{integer,316,24}},
       {integer,316,255}},
      {cons,317,
       {op,317,'band',
        {op,317,'bsr',{var,317,'Int'},{integer,317,16}},
        {integer,317,255}},
       {cons,318,
        {op,318,'band',
         {op,318,'bsr',{var,318,'Int'},{integer,318,8}},
         {integer,318,255}},
        {cons,319,
         {op,319,'band',{var,319,'Int'},{integer,319,255}},
         {nil,319}}}}}]},
   {clause,320,
    [{cons,320,
      {var,320,'X1'},
      {cons,320,
       {var,320,'X2'},
       {cons,320,{var,320,'X3'},{cons,320,{var,320,'X4'},{nil,320}}}}}],
    [],
    [{op,321,'bor',
      {op,321,'bor',
       {op,321,'bor',
        {op,321,'bsl',{var,321,'X1'},{integer,321,24}},
        {op,321,'bsl',{var,321,'X2'},{integer,321,16}}},
       {op,321,'bsl',{var,321,'X3'},{integer,321,8}}},
      {var,321,'X4'}}]}]},
 {function,323,i32_on_head,1,
  [{clause,323,
    [{cons,323,
      {var,323,'X1'},
      {cons,323,
       {var,323,'X2'},
       {cons,323,{var,323,'X3'},{cons,323,{var,323,'X4'},{var,323,'Rest'}}}}}],
    [],
    [{tuple,324,
      [{atom,324,ok},
       {op,324,'bor',
        {op,324,'bor',
         {op,324,'bor',
          {op,324,'bsl',{var,324,'X1'},{integer,324,24}},
          {op,324,'bsl',{var,324,'X2'},{integer,324,16}}},
         {op,324,'bsl',{var,324,'X3'},{integer,324,8}}},
        {var,324,'X4'}},
       {var,324,'Rest'}]}]}]},
 {function,326,parse_key,2,
  [{clause,326,
    [{cons,326,{char,326,92},{var,326,'Rest'}},{var,326,'_'}],
    [],
    [{call,327,{atom,327,parse_root},[{var,327,'Rest'},{nil,327}]}]},
   {clause,328,
    [{var,328,'Key'},{var,328,'Reg'}],
    [],
    [{call,329,
      {atom,329,parse_relative},
      [{var,329,'Key'},{var,329,'Reg'}]}]}]},
 {function,331,parse_relative,2,
  [{clause,331,
    [{var,331,'Path'},{var,331,'Reg'}],
    [],
    [{match,332,{var,332,'Cmd'},{cons,332,{integer,41,0},{nil,332}}},
     {op,333,'!',
      {var,333,'Reg'},
      {tuple,333,
       [{call,333,{atom,333,self},[]},
        {tuple,333,[{atom,333,command},{var,333,'Cmd'}]}]}},
     {match,334,
      {tuple,334,[{atom,334,state},{var,334,'RootHandle'},{var,334,'Name'}]},
      {call,334,{atom,334,get_result},[{var,334,'Reg'}]}},
     {match,335,
      {var,335,'Original'},
      {call,335,{atom,335,split_key},[{var,335,'Name'}]}},
     {match,336,
      {var,336,'Relative'},
      {call,336,
       {remote,336,{atom,336,lists},{atom,336,reverse}},
       [{call,336,{atom,336,split_key},[{var,336,'Path'}]}]}},
     {'case',337,
      {call,337,
       {atom,337,parse_relative1},
       [{var,337,'Relative'},{var,337,'Original'}]},
      [{clause,338,
        [{var,338,'NewPath'}],
        [],
        [{tuple,339,
          [{atom,339,ok},{var,339,'RootHandle'},{var,339,'NewPath'}]}]}]}]}]},
 {function,343,parse_relative1,2,
  [{clause,343,
    [{cons,343,{string,343,".."},{var,343,'T1'}},
     {cons,343,{var,343,'_'},{var,343,'T2'}}],
    [],
    [{call,344,{atom,344,parse_relative1},[{var,344,'T1'},{var,344,'T2'}]}]},
   {clause,345,
    [{cons,345,{var,345,'Comp'},{var,345,'Rest'}},{var,345,'Result'}],
    [],
    [{call,346,
      {atom,346,parse_relative1},
      [{var,346,'Rest'},{cons,346,{var,346,'Comp'},{var,346,'Result'}}]}]},
   {clause,347,
    [{nil,347},{var,347,'Result'}],
    [],
    [{call,348,{atom,348,reverse_and_join},[{var,348,'Result'},{nil,348}]}]}]},
 {function,350,reverse_and_join,2,
  [{clause,350,
    [{cons,350,{var,350,'X'},{var,350,'Rest'}},{nil,350}],
    [],
    [{call,351,
      {atom,351,reverse_and_join},
      [{var,351,'Rest'},{cons,351,{var,351,'X'},{nil,351}}]}]},
   {clause,352,
    [{cons,352,{var,352,'X'},{var,352,'Rest'}},{var,352,'Result'}],
    [],
    [{call,353,
      {atom,353,reverse_and_join},
      [{var,353,'Rest'},
       {cons,353,
        {var,353,'X'},
        {cons,353,{string,353,"\\"},{var,353,'Result'}}}]}]},
   {clause,354,[{nil,354},{var,354,'Result'}],[],[{var,355,'Result'}]}]},
 {function,357,split_key,1,
  [{clause,357,
    [{var,357,'Key'}],
    [],
    [{call,358,{atom,358,split_key},[{var,358,'Key'},{nil,358},{nil,358}]}]}]},
 {function,360,split_key,3,
  [{clause,360,
    [{cons,360,{char,360,92},{var,360,'Rest'}},
     {var,360,'Current'},
     {var,360,'Result'}],
    [],
    [{call,361,
      {atom,361,split_key},
      [{var,361,'Rest'},
       {nil,361},
       {cons,361,
        {call,361,
         {remote,361,{atom,361,lists},{atom,361,reverse}},
         [{var,361,'Current'}]},
        {var,361,'Result'}}]}]},
   {clause,362,
    [{cons,362,{var,362,'C'},{var,362,'Rest'}},
     {var,362,'Current'},
     {var,362,'Result'}],
    [],
    [{call,363,
      {atom,363,split_key},
      [{var,363,'Rest'},
       {cons,363,{var,363,'C'},{var,363,'Current'}},
       {var,363,'Result'}]}]},
   {clause,364,
    [{nil,364},{nil,364},{var,364,'Result'}],
    [],
    [{var,365,'Result'}]},
   {clause,366,
    [{nil,366},{var,366,'Current'},{var,366,'Result'}],
    [],
    [{cons,367,
      {call,367,
       {remote,367,{atom,367,lists},{atom,367,reverse}},
       [{var,367,'Current'}]},
      {var,367,'Result'}}]}]},
 {function,369,parse_root,2,
  [{clause,369,
    [{cons,369,{char,369,92},{var,369,'Rest'}},{var,369,'Result'}],
    [],
    [{match,370,
      {var,370,'Root'},
      {'case',371,
       {call,371,
        {remote,371,{atom,371,lists},{atom,371,reverse}},
        [{var,371,'Result'}]},
       [{clause,372,
         [{cons,372,
           {char,372,104},
           {cons,372,
            {char,372,107},
            {cons,372,
             {char,372,101},
             {cons,372,
              {char,372,121},
              {cons,372,{char,372,95},{var,372,'Root0'}}}}}}],
         [],
         [{var,373,'Root0'}]},
        {clause,374,[{var,374,'Root0'}],[],[{var,375,'Root0'}]}]}},
     {'case',377,
      {call,377,
       {atom,377,root_to_handle},
       [{call,377,{atom,377,list_to_atom},[{var,377,'Root'}]}]},
      [{clause,378,
        [{atom,378,false}],
        [],
        [{tuple,379,[{atom,379,error},{atom,379,enoent}]}]},
       {clause,380,
        [{var,380,'Handle'}],
        [],
        [{tuple,381,[{atom,381,ok},{var,381,'Handle'},{var,381,'Rest'}]}]}]}]},
   {clause,383,
    [{cons,383,{var,383,'C'},{var,383,'Rest'}},{var,383,'Result'}],
    [],
    [{call,384,
      {atom,384,parse_root},
      [{var,384,'Rest'},{cons,384,{var,384,'C'},{var,384,'Result'}}]}]},
   {clause,385,
    [{nil,385},{var,385,'Result'}],
    [],
    [{call,386,
      {atom,386,parse_root},
      [{cons,386,{char,386,92},{nil,386}},{var,386,'Result'}]}]}]},
 {function,388,root_to_handle,1,
  [{clause,388,[{atom,388,classes_root}],[],[{integer,32,2147483648}]},
   {clause,389,[{atom,389,hkcr}],[],[{integer,32,2147483648}]},
   {clause,390,[{atom,390,current_user}],[],[{integer,33,2147483649}]},
   {clause,391,[{atom,391,hkcu}],[],[{integer,33,2147483649}]},
   {clause,392,[{atom,392,local_machine}],[],[{integer,34,2147483650}]},
   {clause,393,[{atom,393,hklm}],[],[{integer,34,2147483650}]},
   {clause,394,[{atom,394,users}],[],[{integer,35,2147483651}]},
   {clause,395,[{atom,395,hku}],[],[{integer,35,2147483651}]},
   {clause,396,[{atom,396,current_config}],[],[{integer,37,2147483653}]},
   {clause,397,[{atom,397,hkcc}],[],[{integer,37,2147483653}]},
   {clause,398,[{atom,398,dyn_data}],[],[{integer,38,2147483654}]},
   {clause,399,[{atom,399,hkdd}],[],[{integer,38,2147483654}]},
   {clause,400,[{atom,400,performance_data}],[],[{integer,36,2147483652}]},
   {clause,401,[{var,401,'_'}],[],[{atom,401,false}]}]},
 {function,403,hkey_to_string,1,
  [{clause,403,
    [{integer,32,2147483648}],
    [],
    [{string,403,"\\hkey_classes_root"}]},
   {clause,404,
    [{integer,33,2147483649}],
    [],
    [{string,404,"\\hkey_current_user"}]},
   {clause,405,
    [{integer,34,2147483650}],
    [],
    [{string,405,"\\hkey_local_machine"}]},
   {clause,406,[{integer,35,2147483651}],[],[{string,406,"\\hkey_users"}]},
   {clause,407,
    [{integer,36,2147483652}],
    [],
    [{string,407,"\\hkey_performance_data"}]},
   {clause,408,
    [{integer,37,2147483653}],
    [],
    [{string,408,"\\hkey_current_config"}]},
   {clause,409,
    [{integer,38,2147483654}],
    [],
    [{string,409,"\\hkey_dyn_data"}]}]},
 {function,411,open_mode,2,
  [{clause,411,
    [{cons,411,{atom,411,read},{var,411,'Rest'}},{var,411,'Result'}],
    [],
    [{call,412,
      {atom,412,open_mode},
      [{var,412,'Rest'},{cons,412,{char,412,114},{var,412,'Result'}}]}]},
   {clause,413,
    [{cons,413,{atom,413,write},{var,413,'Rest'}},{var,413,'Result'}],
    [],
    [{call,414,
      {atom,414,open_mode},
      [{var,414,'Rest'},{cons,414,{char,414,119},{var,414,'Result'}}]}]},
   {clause,415,[{nil,415},{var,415,'Result'}],[],[{var,416,'Result'}]},
   {clause,417,
    [{var,417,'_'},{var,417,'_'}],
    [],
    [{tuple,418,[{atom,418,error},{atom,418,einval}]}]}]}]
