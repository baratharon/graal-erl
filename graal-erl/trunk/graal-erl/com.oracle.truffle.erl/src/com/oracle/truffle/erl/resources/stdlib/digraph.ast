digraph
[]
[]
[{function,69,new,0,[{clause,69,[],[],[{call,69,{atom,69,new},[{nil,69}]}]}]},
 {function,74,new,1,
  [{clause,74,
    [{var,74,'Type'}],
    [],
    [{'case',75,
      {call,75,
       {atom,75,check_type},
       [{var,75,'Type'},{atom,75,protected},{nil,75}]},
      [{clause,76,
        [{tuple,76,[{var,76,'Access'},{var,76,'Ts'}]}],
        [],
        [{match,77,
          {var,77,'V'},
          {call,77,
           {remote,77,{atom,77,ets},{atom,77,new}},
           [{atom,77,vertices},
            {cons,77,{atom,77,set},{cons,77,{var,77,'Access'},{nil,77}}}]}},
         {match,78,
          {var,78,'E'},
          {call,78,
           {remote,78,{atom,78,ets},{atom,78,new}},
           [{atom,78,edges},
            {cons,78,{atom,78,set},{cons,78,{var,78,'Access'},{nil,78}}}]}},
         {match,79,
          {var,79,'N'},
          {call,79,
           {remote,79,{atom,79,ets},{atom,79,new}},
           [{atom,79,neighbours},
            {cons,79,{atom,79,bag},{cons,79,{var,79,'Access'},{nil,79}}}]}},
         {call,80,
          {remote,80,{atom,80,ets},{atom,80,insert}},
          [{var,80,'N'},
           {cons,80,
            {tuple,80,[{atom,80,'$vid'},{integer,80,0}]},
            {cons,80,{tuple,80,[{atom,80,'$eid'},{integer,80,0}]},{nil,80}}}]},
         {call,81,
          {atom,81,set_type},
          [{var,81,'Ts'},
           {tuple,81,
            [{atom,81,digraph},
             {var,81,'V'},
             {var,81,'E'},
             {var,81,'N'},
             {atom,45,true}]}]}]},
       {clause,82,
        [{atom,82,error}],
        [],
        [{call,83,
          {remote,83,{atom,83,erlang},{atom,83,error}},
          [{atom,83,badarg}]}]}]}]}]},
 {function,92,check_type,3,
  [{clause,92,
    [{cons,92,{atom,92,acyclic},{var,92,'Ts'}},{var,92,'A'},{var,92,'L'}],
    [],
    [{call,93,
      {atom,93,check_type},
      [{var,93,'Ts'},
       {var,93,'A'},
       {cons,93,
        {tuple,93,[{atom,93,cyclic},{atom,93,false}]},
        {var,93,'L'}}]}]},
   {clause,94,
    [{cons,94,{atom,94,cyclic},{var,94,'Ts'}},{var,94,'A'},{var,94,'L'}],
    [],
    [{call,95,
      {atom,95,check_type},
      [{var,95,'Ts'},
       {var,95,'A'},
       {cons,95,{tuple,95,[{atom,95,cyclic},{atom,95,true}]},{var,95,'L'}}]}]},
   {clause,96,
    [{cons,96,{atom,96,protected},{var,96,'Ts'}},{var,96,'_'},{var,96,'L'}],
    [],
    [{call,97,
      {atom,97,check_type},
      [{var,97,'Ts'},{atom,97,protected},{var,97,'L'}]}]},
   {clause,98,
    [{cons,98,{atom,98,private},{var,98,'Ts'}},{var,98,'_'},{var,98,'L'}],
    [],
    [{call,99,
      {atom,99,check_type},
      [{var,99,'Ts'},{atom,99,private},{var,99,'L'}]}]},
   {clause,100,
    [{nil,100},{var,100,'A'},{var,100,'L'}],
    [],
    [{tuple,100,[{var,100,'A'},{var,100,'L'}]}]},
   {clause,101,
    [{var,101,'_'},{var,101,'_'},{var,101,'_'}],
    [],
    [{atom,101,error}]}]},
 {function,108,set_type,2,
  [{clause,108,
    [{cons,108,{tuple,108,[{atom,108,cyclic},{var,108,'V'}]},{var,108,'Ks'}},
     {var,108,'G'}],
    [],
    [{call,109,
      {atom,109,set_type},
      [{var,109,'Ks'},
       {call,109,
        {remote,109,{atom,109,erlang},{atom,109,setelement}},
        [{integer,109,5},{var,109,'G'},{var,109,'V'}]}]}]},
   {clause,110,[{nil,110},{var,110,'G'}],[],[{var,110,'G'}]}]},
 {function,118,delete,1,
  [{clause,118,
    [{var,118,'G'}],
    [],
    [{call,119,
      {remote,119,{atom,119,ets},{atom,119,delete}},
      [{call,119,
        {remote,119,{atom,119,erlang},{atom,119,element}},
        [{integer,119,2},{var,119,'G'}]}]},
     {call,120,
      {remote,120,{atom,120,ets},{atom,120,delete}},
      [{call,120,
        {remote,120,{atom,120,erlang},{atom,120,element}},
        [{integer,120,3},{var,120,'G'}]}]},
     {call,121,
      {remote,121,{atom,121,ets},{atom,121,delete}},
      [{call,121,
        {remote,121,{atom,121,erlang},{atom,121,element}},
        [{integer,121,4},{var,121,'G'}]}]}]}]},
 {function,129,info,1,
  [{clause,129,
    [{var,129,'G'}],
    [],
    [{match,130,
      {var,130,'VT'},
      {call,130,
       {remote,130,{atom,130,erlang},{atom,130,element}},
       [{integer,130,2},{var,130,'G'}]}},
     {match,131,
      {var,131,'ET'},
      {call,131,
       {remote,131,{atom,131,erlang},{atom,131,element}},
       [{integer,131,3},{var,131,'G'}]}},
     {match,132,
      {var,132,'NT'},
      {call,132,
       {remote,132,{atom,132,erlang},{atom,132,element}},
       [{integer,132,4},{var,132,'G'}]}},
     {match,133,
      {var,133,'Cyclicity'},
      {'case',133,
       {call,133,
        {remote,133,{atom,133,erlang},{atom,133,element}},
        [{integer,133,5},{var,133,'G'}]},
       [{clause,134,[{atom,134,true}],[],[{atom,134,cyclic}]},
        {clause,135,[{atom,135,false}],[],[{atom,135,acyclic}]}]}},
     {match,137,
      {var,137,'Protection'},
      {call,137,
       {remote,137,{atom,137,ets},{atom,137,info}},
       [{var,137,'VT'},{atom,137,protection}]}},
     {match,138,
      {var,138,'Memory'},
      {op,138,'+',
       {op,138,'+',
        {call,138,
         {remote,138,{atom,138,ets},{atom,138,info}},
         [{var,138,'VT'},{atom,138,memory}]},
        {call,138,
         {remote,138,{atom,138,ets},{atom,138,info}},
         [{var,138,'ET'},{atom,138,memory}]}},
       {call,138,
        {remote,138,{atom,138,ets},{atom,138,info}},
        [{var,138,'NT'},{atom,138,memory}]}}},
     {cons,139,
      {tuple,139,[{atom,139,cyclicity},{var,139,'Cyclicity'}]},
      {cons,139,
       {tuple,139,[{atom,139,memory},{var,139,'Memory'}]},
       {cons,139,
        {tuple,139,[{atom,139,protection},{var,139,'Protection'}]},
        {nil,139}}}}]}]},
 {function,144,add_vertex,1,
  [{clause,144,
    [{var,144,'G'}],
    [],
    [{call,145,
      {atom,145,do_add_vertex},
      [{tuple,145,
        [{call,145,{atom,145,new_vertex_id},[{var,145,'G'}]},{nil,145}]},
       {var,145,'G'}]}]}]},
 {function,151,add_vertex,2,
  [{clause,151,
    [{var,151,'G'},{var,151,'V'}],
    [],
    [{call,152,
      {atom,152,do_add_vertex},
      [{tuple,152,[{var,152,'V'},{nil,152}]},{var,152,'G'}]}]}]},
 {function,159,add_vertex,3,
  [{clause,159,
    [{var,159,'G'},{var,159,'V'},{var,159,'D'}],
    [],
    [{call,160,
      {atom,160,do_add_vertex},
      [{tuple,160,[{var,160,'V'},{var,160,'D'}]},{var,160,'G'}]}]}]},
 {function,166,del_vertex,2,
  [{clause,166,
    [{var,166,'G'},{var,166,'V'}],
    [],
    [{call,167,{atom,167,do_del_vertex},[{var,167,'V'},{var,167,'G'}]}]}]},
 {function,173,del_vertices,2,
  [{clause,173,
    [{var,173,'G'},{var,173,'Vs'}],
    [],
    [{call,174,{atom,174,do_del_vertices},[{var,174,'Vs'},{var,174,'G'}]}]}]},
 {function,181,vertex,2,
  [{clause,181,
    [{var,181,'G'},{var,181,'V'}],
    [],
    [{'case',182,
      {call,182,
       {remote,182,{atom,182,ets},{atom,182,lookup}},
       [{call,182,
         {remote,182,{atom,182,erlang},{atom,182,element}},
         [{integer,182,2},{var,182,'G'}]},
        {var,182,'V'}]},
      [{clause,183,[{nil,183}],[],[{atom,183,false}]},
       {clause,184,
        [{cons,184,{var,184,'Vertex'},{nil,184}}],
        [],
        [{var,184,'Vertex'}]}]}]}]},
 {function,190,no_vertices,1,
  [{clause,190,
    [{var,190,'G'}],
    [],
    [{call,191,
      {remote,191,{atom,191,ets},{atom,191,info}},
      [{call,191,
        {remote,191,{atom,191,erlang},{atom,191,element}},
        [{integer,191,2},{var,191,'G'}]},
       {atom,191,size}]}]}]},
 {function,197,vertices,1,
  [{clause,197,
    [{var,197,'G'}],
    [],
    [{call,198,
      {remote,198,{atom,198,ets},{atom,198,select}},
      [{call,198,
        {remote,198,{atom,198,erlang},{atom,198,element}},
        [{integer,198,2},{var,198,'G'}]},
       {cons,198,
        {tuple,198,
         [{tuple,198,[{atom,198,'$1'},{atom,198,'_'}]},
          {nil,198},
          {cons,198,{atom,198,'$1'},{nil,198}}]},
        {nil,198}}]}]}]},
 {function,202,source_vertices,1,
  [{clause,202,
    [{var,202,'G'}],
    [],
    [{call,203,{atom,203,collect_vertices},[{var,203,'G'},{atom,203,in}]}]}]},
 {function,207,sink_vertices,1,
  [{clause,207,
    [{var,207,'G'}],
    [],
    [{call,208,{atom,208,collect_vertices},[{var,208,'G'},{atom,208,out}]}]}]},
 {function,214,in_degree,2,
  [{clause,214,
    [{var,214,'G'},{var,214,'V'}],
    [],
    [{call,215,
      {atom,215,length},
      [{call,215,
        {remote,215,{atom,215,ets},{atom,215,lookup}},
        [{call,215,
          {remote,215,{atom,215,erlang},{atom,215,element}},
          [{integer,215,4},{var,215,'G'}]},
         {tuple,215,[{atom,215,in},{var,215,'V'}]}]}]}]}]},
 {function,222,in_neighbours,2,
  [{clause,222,
    [{var,222,'G'},{var,222,'V'}],
    [],
    [{match,223,
      {var,223,'ET'},
      {call,223,
       {remote,223,{atom,223,erlang},{atom,223,element}},
       [{integer,223,3},{var,223,'G'}]}},
     {match,224,
      {var,224,'NT'},
      {call,224,
       {remote,224,{atom,224,erlang},{atom,224,element}},
       [{integer,224,4},{var,224,'G'}]}},
     {call,225,
      {atom,225,collect_elems},
      [{call,225,
        {remote,225,{atom,225,ets},{atom,225,lookup}},
        [{var,225,'NT'},{tuple,225,[{atom,225,in},{var,225,'V'}]}]},
       {var,225,'ET'},
       {integer,225,2}]}]}]},
 {function,232,in_edges,2,
  [{clause,232,
    [{var,232,'G'},{var,232,'V'}],
    [],
    [{call,233,
      {remote,233,{atom,233,ets},{atom,233,select}},
      [{call,233,
        {remote,233,{atom,233,erlang},{atom,233,element}},
        [{integer,233,4},{var,233,'G'}]},
       {cons,233,
        {tuple,233,
         [{tuple,233,
           [{tuple,233,[{atom,233,in},{var,233,'V'}]},{atom,233,'$1'}]},
          {nil,233},
          {cons,233,{atom,233,'$1'},{nil,233}}]},
        {nil,233}}]}]}]},
 {function,239,out_degree,2,
  [{clause,239,
    [{var,239,'G'},{var,239,'V'}],
    [],
    [{call,240,
      {atom,240,length},
      [{call,240,
        {remote,240,{atom,240,ets},{atom,240,lookup}},
        [{call,240,
          {remote,240,{atom,240,erlang},{atom,240,element}},
          [{integer,240,4},{var,240,'G'}]},
         {tuple,240,[{atom,240,out},{var,240,'V'}]}]}]}]}]},
 {function,247,out_neighbours,2,
  [{clause,247,
    [{var,247,'G'},{var,247,'V'}],
    [],
    [{match,248,
      {var,248,'ET'},
      {call,248,
       {remote,248,{atom,248,erlang},{atom,248,element}},
       [{integer,248,3},{var,248,'G'}]}},
     {match,249,
      {var,249,'NT'},
      {call,249,
       {remote,249,{atom,249,erlang},{atom,249,element}},
       [{integer,249,4},{var,249,'G'}]}},
     {call,250,
      {atom,250,collect_elems},
      [{call,250,
        {remote,250,{atom,250,ets},{atom,250,lookup}},
        [{var,250,'NT'},{tuple,250,[{atom,250,out},{var,250,'V'}]}]},
       {var,250,'ET'},
       {integer,250,3}]}]}]},
 {function,257,out_edges,2,
  [{clause,257,
    [{var,257,'G'},{var,257,'V'}],
    [],
    [{call,258,
      {remote,258,{atom,258,ets},{atom,258,select}},
      [{call,258,
        {remote,258,{atom,258,erlang},{atom,258,element}},
        [{integer,258,4},{var,258,'G'}]},
       {cons,258,
        {tuple,258,
         [{tuple,258,
           [{tuple,258,[{atom,258,out},{var,258,'V'}]},{atom,258,'$1'}]},
          {nil,258},
          {cons,258,{atom,258,'$1'},{nil,258}}]},
        {nil,258}}]}]}]},
 {function,265,add_edge,3,
  [{clause,265,
    [{var,265,'G'},{var,265,'V1'},{var,265,'V2'}],
    [],
    [{call,266,
      {atom,266,do_add_edge},
      [{tuple,266,
        [{call,266,{atom,266,new_edge_id},[{var,266,'G'}]},
         {var,266,'V1'},
         {var,266,'V2'},
         {nil,266}]},
       {var,266,'G'}]}]}]},
 {function,274,add_edge,4,
  [{clause,274,
    [{var,274,'G'},{var,274,'V1'},{var,274,'V2'},{var,274,'D'}],
    [],
    [{call,275,
      {atom,275,do_add_edge},
      [{tuple,275,
        [{call,275,{atom,275,new_edge_id},[{var,275,'G'}]},
         {var,275,'V1'},
         {var,275,'V2'},
         {var,275,'D'}]},
       {var,275,'G'}]}]}]},
 {function,284,add_edge,5,
  [{clause,284,
    [{var,284,'G'},{var,284,'E'},{var,284,'V1'},{var,284,'V2'},{var,284,'D'}],
    [],
    [{call,285,
      {atom,285,do_add_edge},
      [{tuple,285,[{var,285,'E'},{var,285,'V1'},{var,285,'V2'},{var,285,'D'}]},
       {var,285,'G'}]}]}]},
 {function,291,del_edge,2,
  [{clause,291,
    [{var,291,'G'},{var,291,'E'}],
    [],
    [{call,292,
      {atom,292,do_del_edges},
      [{cons,292,{var,292,'E'},{nil,292}},{var,292,'G'}]}]}]},
 {function,298,del_edges,2,
  [{clause,298,
    [{var,298,'G'},{var,298,'Es'}],
    [],
    [{call,299,{atom,299,do_del_edges},[{var,299,'Es'},{var,299,'G'}]}]}]},
 {function,304,no_edges,1,
  [{clause,304,
    [{var,304,'G'}],
    [],
    [{call,305,
      {remote,305,{atom,305,ets},{atom,305,info}},
      [{call,305,
        {remote,305,{atom,305,erlang},{atom,305,element}},
        [{integer,305,3},{var,305,'G'}]},
       {atom,305,size}]}]}]},
 {function,311,edges,1,
  [{clause,311,
    [{var,311,'G'}],
    [],
    [{call,312,
      {remote,312,{atom,312,ets},{atom,312,select}},
      [{call,312,
        {remote,312,{atom,312,erlang},{atom,312,element}},
        [{integer,312,3},{var,312,'G'}]},
       {cons,312,
        {tuple,312,
         [{tuple,312,
           [{atom,312,'$1'},{atom,312,'_'},{atom,312,'_'},{atom,312,'_'}]},
          {nil,312},
          {cons,312,{atom,312,'$1'},{nil,312}}]},
        {nil,312}}]}]}]},
 {function,319,edges,2,
  [{clause,319,
    [{var,319,'G'},{var,319,'V'}],
    [],
    [{call,320,
      {remote,320,{atom,320,ets},{atom,320,select}},
      [{call,320,
        {remote,320,{atom,320,erlang},{atom,320,element}},
        [{integer,320,4},{var,320,'G'}]},
       {cons,320,
        {tuple,320,
         [{tuple,320,
           [{tuple,320,[{atom,320,out},{var,320,'V'}]},{atom,320,'$1'}]},
          {nil,320},
          {cons,320,{atom,320,'$1'},{nil,320}}]},
        {cons,321,
         {tuple,321,
          [{tuple,321,
            [{tuple,321,[{atom,321,in},{var,321,'V'}]},{atom,321,'$1'}]},
           {nil,321},
           {cons,321,{atom,321,'$1'},{nil,321}}]},
         {nil,321}}}]}]}]},
 {function,330,edge,2,
  [{clause,330,
    [{var,330,'G'},{var,330,'E'}],
    [],
    [{'case',331,
      {call,331,
       {remote,331,{atom,331,ets},{atom,331,lookup}},
       [{call,331,
         {remote,331,{atom,331,erlang},{atom,331,element}},
         [{integer,331,3},{var,331,'G'}]},
        {var,331,'E'}]},
      [{clause,332,[{nil,332}],[],[{atom,332,false}]},
       {clause,333,
        [{cons,333,{var,333,'Edge'},{nil,333}}],
        [],
        [{var,333,'Edge'}]}]}]}]},
 {function,341,new_edge_id,1,
  [{clause,341,
    [{var,341,'G'}],
    [],
    [{match,342,
      {var,342,'NT'},
      {call,342,
       {remote,342,{atom,342,erlang},{atom,342,element}},
       [{integer,342,4},{var,342,'G'}]}},
     {match,343,
      {cons,343,{tuple,343,[{atom,343,'$eid'},{var,343,'K'}]},{nil,343}},
      {call,343,
       {remote,343,{atom,343,ets},{atom,343,lookup}},
       [{var,343,'NT'},{atom,343,'$eid'}]}},
     {match,344,
      {atom,344,true},
      {call,344,
       {remote,344,{atom,344,ets},{atom,344,delete}},
       [{var,344,'NT'},{atom,344,'$eid'}]}},
     {match,345,
      {atom,345,true},
      {call,345,
       {remote,345,{atom,345,ets},{atom,345,insert}},
       [{var,345,'NT'},
        {tuple,345,
         [{atom,345,'$eid'},{op,345,'+',{var,345,'K'},{integer,345,1}}]}]}},
     {cons,346,{atom,346,'$e'},{var,346,'K'}}]}]},
 {function,353,new_vertex_id,1,
  [{clause,353,
    [{var,353,'G'}],
    [],
    [{match,354,
      {var,354,'NT'},
      {call,354,
       {remote,354,{atom,354,erlang},{atom,354,element}},
       [{integer,354,4},{var,354,'G'}]}},
     {match,355,
      {cons,355,{tuple,355,[{atom,355,'$vid'},{var,355,'K'}]},{nil,355}},
      {call,355,
       {remote,355,{atom,355,ets},{atom,355,lookup}},
       [{var,355,'NT'},{atom,355,'$vid'}]}},
     {match,356,
      {atom,356,true},
      {call,356,
       {remote,356,{atom,356,ets},{atom,356,delete}},
       [{var,356,'NT'},{atom,356,'$vid'}]}},
     {match,357,
      {atom,357,true},
      {call,357,
       {remote,357,{atom,357,ets},{atom,357,insert}},
       [{var,357,'NT'},
        {tuple,357,
         [{atom,357,'$vid'},{op,357,'+',{var,357,'K'},{integer,357,1}}]}]}},
     {cons,358,{atom,358,'$v'},{var,358,'K'}}]}]},
 {function,363,collect_elems,3,
  [{clause,363,
    [{var,363,'Keys'},{var,363,'Table'},{var,363,'Index'}],
    [],
    [{call,364,
      {atom,364,collect_elems},
      [{var,364,'Keys'},{var,364,'Table'},{var,364,'Index'},{nil,364}]}]}]},
 {function,366,collect_elems,4,
  [{clause,366,
    [{cons,366,{tuple,366,[{var,366,'_'},{var,366,'Key'}]},{var,366,'Keys'}},
     {var,366,'Table'},
     {var,366,'Index'},
     {var,366,'Acc'}],
    [],
    [{call,367,
      {atom,367,collect_elems},
      [{var,367,'Keys'},
       {var,367,'Table'},
       {var,367,'Index'},
       {cons,368,
        {call,368,
         {remote,368,{atom,368,ets},{atom,368,lookup_element}},
         [{var,368,'Table'},{var,368,'Key'},{var,368,'Index'}]},
        {var,368,'Acc'}}]}]},
   {clause,369,
    [{nil,369},{var,369,'_'},{var,369,'_'},{var,369,'Acc'}],
    [],
    [{var,369,'Acc'}]}]},
 {function,373,do_add_vertex,2,
  [{clause,373,
    [{match,373,{tuple,373,[{var,373,'V'},{var,373,'_Label'}]},{var,373,'VL'}},
     {var,373,'G'}],
    [],
    [{call,374,
      {remote,374,{atom,374,ets},{atom,374,insert}},
      [{call,374,
        {remote,374,{atom,374,erlang},{atom,374,element}},
        [{integer,374,2},{var,374,'G'}]},
       {var,374,'VL'}]},
     {var,375,'V'}]}]},
 {function,380,collect_vertices,2,
  [{clause,380,
    [{var,380,'G'},{var,380,'Type'}],
    [],
    [{match,381,{var,381,'Vs'},{call,381,{atom,381,vertices},[{var,381,'G'}]}},
     {call,382,
      {remote,382,{atom,382,lists},{atom,382,foldl}},
      [{'fun',382,
        {clauses,
         [{clause,382,
           [{var,382,'V'},{var,382,'A'}],
           [],
           [{'case',383,
             {call,383,
              {remote,383,{atom,383,ets},{atom,383,member}},
              [{call,383,
                {remote,383,{atom,383,erlang},{atom,383,element}},
                [{integer,383,4},{var,383,'G'}]},
               {tuple,383,[{var,383,'Type'},{var,383,'V'}]}]},
             [{clause,384,[{atom,384,true}],[],[{var,384,'A'}]},
              {clause,385,
               [{atom,385,false}],
               [],
               [{cons,385,{var,385,'V'},{var,385,'A'}}]}]}]}]}},
       {nil,387},
       {var,387,'Vs'}]}]}]},
 {function,392,do_del_vertices,2,
  [{clause,392,
    [{cons,392,{var,392,'V'},{var,392,'Vs'}},{var,392,'G'}],
    [],
    [{call,393,{atom,393,do_del_vertex},[{var,393,'V'},{var,393,'G'}]},
     {call,394,{atom,394,do_del_vertices},[{var,394,'Vs'},{var,394,'G'}]}]},
   {clause,395,
    [{nil,395},
     {tuple,395,
      [{atom,395,digraph},
       {var,395,'_'},
       {var,395,'_'},
       {var,395,'_'},
       {var,395,'_'}]}],
    [],
    [{atom,395,true}]}]},
 {function,397,do_del_vertex,2,
  [{clause,397,
    [{var,397,'V'},{var,397,'G'}],
    [],
    [{call,398,
      {atom,398,do_del_nedges},
      [{call,398,
        {remote,398,{atom,398,ets},{atom,398,lookup}},
        [{call,398,
          {remote,398,{atom,398,erlang},{atom,398,element}},
          [{integer,398,4},{var,398,'G'}]},
         {tuple,398,[{atom,398,in},{var,398,'V'}]}]},
       {var,398,'G'}]},
     {call,399,
      {atom,399,do_del_nedges},
      [{call,399,
        {remote,399,{atom,399,ets},{atom,399,lookup}},
        [{call,399,
          {remote,399,{atom,399,erlang},{atom,399,element}},
          [{integer,399,4},{var,399,'G'}]},
         {tuple,399,[{atom,399,out},{var,399,'V'}]}]},
       {var,399,'G'}]},
     {call,400,
      {remote,400,{atom,400,ets},{atom,400,delete}},
      [{call,400,
        {remote,400,{atom,400,erlang},{atom,400,element}},
        [{integer,400,2},{var,400,'G'}]},
       {var,400,'V'}]}]}]},
 {function,402,do_del_nedges,2,
  [{clause,402,
    [{cons,402,{tuple,402,[{var,402,'_'},{var,402,'E'}]},{var,402,'Ns'}},
     {var,402,'G'}],
    [],
    [{'case',403,
      {call,403,
       {remote,403,{atom,403,ets},{atom,403,lookup}},
       [{call,403,
         {remote,403,{atom,403,erlang},{atom,403,element}},
         [{integer,403,3},{var,403,'G'}]},
        {var,403,'E'}]},
      [{clause,404,
        [{cons,404,
          {tuple,404,
           [{var,404,'E'},{var,404,'V1'},{var,404,'V2'},{var,404,'_'}]},
          {nil,404}}],
        [],
        [{call,405,
          {atom,405,do_del_edge},
          [{var,405,'E'},{var,405,'V1'},{var,405,'V2'},{var,405,'G'}]},
         {call,406,{atom,406,do_del_nedges},[{var,406,'Ns'},{var,406,'G'}]}]},
       {clause,407,
        [{nil,407}],
        [],
        [{call,408,
          {atom,408,do_del_nedges},
          [{var,408,'Ns'},{var,408,'G'}]}]}]}]},
   {clause,410,
    [{nil,410},
     {tuple,410,
      [{atom,410,digraph},
       {var,410,'_'},
       {var,410,'_'},
       {var,410,'_'},
       {var,410,'_'}]}],
    [],
    [{atom,410,true}]}]},
 {function,415,do_del_edges,2,
  [{clause,415,
    [{cons,415,{var,415,'E'},{var,415,'Es'}},{var,415,'G'}],
    [],
    [{'case',416,
      {call,416,
       {remote,416,{atom,416,ets},{atom,416,lookup}},
       [{call,416,
         {remote,416,{atom,416,erlang},{atom,416,element}},
         [{integer,416,3},{var,416,'G'}]},
        {var,416,'E'}]},
      [{clause,417,
        [{cons,417,
          {tuple,417,
           [{var,417,'E'},{var,417,'V1'},{var,417,'V2'},{var,417,'_'}]},
          {nil,417}}],
        [],
        [{call,418,
          {atom,418,do_del_edge},
          [{var,418,'E'},{var,418,'V1'},{var,418,'V2'},{var,418,'G'}]},
         {call,419,{atom,419,do_del_edges},[{var,419,'Es'},{var,419,'G'}]}]},
       {clause,420,
        [{nil,420}],
        [],
        [{call,421,
          {atom,421,do_del_edges},
          [{var,421,'Es'},{var,421,'G'}]}]}]}]},
   {clause,423,
    [{nil,423},
     {tuple,423,
      [{atom,423,digraph},
       {var,423,'_'},
       {var,423,'_'},
       {var,423,'_'},
       {var,423,'_'}]}],
    [],
    [{atom,423,true}]}]},
 {function,425,do_del_edge,4,
  [{clause,425,
    [{var,425,'E'},{var,425,'V1'},{var,425,'V2'},{var,425,'G'}],
    [],
    [{call,426,
      {remote,426,{atom,426,ets},{atom,426,select_delete}},
      [{call,426,
        {remote,426,{atom,426,erlang},{atom,426,element}},
        [{integer,426,4},{var,426,'G'}]},
       {cons,426,
        {tuple,426,
         [{tuple,426,
           [{tuple,426,[{atom,426,in},{var,426,'V2'}]},{var,426,'E'}]},
          {nil,426},
          {cons,426,{atom,426,true},{nil,426}}]},
        {cons,427,
         {tuple,427,
          [{tuple,427,
            [{tuple,427,[{atom,427,out},{var,427,'V1'}]},{var,427,'E'}]},
           {nil,427},
           {cons,427,{atom,427,true},{nil,427}}]},
         {nil,427}}}]},
     {call,428,
      {remote,428,{atom,428,ets},{atom,428,delete}},
      [{call,428,
        {remote,428,{atom,428,erlang},{atom,428,element}},
        [{integer,428,3},{var,428,'G'}]},
       {var,428,'E'}]}]}]},
 {function,432,rm_edges,2,
  [{clause,432,
    [{cons,432,{var,432,'V1'},{cons,432,{var,432,'V2'},{var,432,'Vs'}}},
     {var,432,'G'}],
    [],
    [{call,433,
      {atom,433,rm_edge},
      [{var,433,'V1'},{var,433,'V2'},{var,433,'G'}]},
     {call,434,
      {atom,434,rm_edges},
      [{cons,434,{var,434,'V2'},{var,434,'Vs'}},{var,434,'G'}]}]},
   {clause,435,[{var,435,'_'},{var,435,'_'}],[],[{atom,435,true}]}]},
 {function,439,rm_edge,3,
  [{clause,439,
    [{var,439,'V1'},{var,439,'V2'},{var,439,'G'}],
    [],
    [{match,440,
      {var,440,'Es'},
      {call,440,{atom,440,out_edges},[{var,440,'G'},{var,440,'V1'}]}},
     {call,441,
      {atom,441,rm_edge_0},
      [{var,441,'Es'},{var,441,'V1'},{var,441,'V2'},{var,441,'G'}]}]}]},
 {function,443,rm_edge_0,4,
  [{clause,443,
    [{cons,443,{var,443,'E'},{var,443,'Es'}},
     {var,443,'V1'},
     {var,443,'V2'},
     {var,443,'G'}],
    [],
    [{'case',444,
      {call,444,
       {remote,444,{atom,444,ets},{atom,444,lookup}},
       [{call,444,
         {remote,444,{atom,444,erlang},{atom,444,element}},
         [{integer,444,3},{var,444,'G'}]},
        {var,444,'E'}]},
      [{clause,445,
        [{cons,445,
          {tuple,445,
           [{var,445,'E'},{var,445,'V1'},{var,445,'V2'},{var,445,'_'}]},
          {nil,445}}],
        [],
        [{call,446,
          {atom,446,do_del_edge},
          [{var,446,'E'},{var,446,'V1'},{var,446,'V2'},{var,446,'G'}]},
         {call,447,
          {atom,447,rm_edge_0},
          [{var,447,'Es'},{var,447,'V1'},{var,447,'V2'},{var,447,'G'}]}]},
       {clause,448,
        [{var,448,'_'}],
        [],
        [{call,449,
          {atom,449,rm_edge_0},
          [{var,449,'Es'},{var,449,'V1'},{var,449,'V2'},{var,449,'G'}]}]}]}]},
   {clause,451,
    [{nil,451},
     {var,451,'_'},
     {var,451,'_'},
     {tuple,451,
      [{atom,451,digraph},
       {var,451,'_'},
       {var,451,'_'},
       {var,451,'_'},
       {var,451,'_'}]}],
    [],
    [{atom,451,ok}]}]},
 {function,459,do_add_edge,2,
  [{clause,459,
    [{tuple,459,
      [{var,459,'E'},{var,459,'V1'},{var,459,'V2'},{var,459,'Label'}]},
     {var,459,'G'}],
    [],
    [{'case',460,
      {call,460,
       {remote,460,{atom,460,ets},{atom,460,member}},
       [{call,460,
         {remote,460,{atom,460,erlang},{atom,460,element}},
         [{integer,460,2},{var,460,'G'}]},
        {var,460,'V1'}]},
      [{clause,461,
        [{atom,461,false}],
        [],
        [{tuple,461,
          [{atom,461,error},
           {tuple,461,[{atom,461,bad_vertex},{var,461,'V1'}]}]}]},
       {clause,462,
        [{atom,462,true}],
        [],
        [{'case',463,
          {call,463,
           {remote,463,{atom,463,ets},{atom,463,member}},
           [{call,463,
             {remote,463,{atom,463,erlang},{atom,463,element}},
             [{integer,463,2},{var,463,'G'}]},
            {var,463,'V2'}]},
          [{clause,464,
            [{atom,464,false}],
            [],
            [{tuple,464,
              [{atom,464,error},
               {tuple,464,[{atom,464,bad_vertex},{var,464,'V2'}]}]}]},
           {clause,465,
            [{atom,465,true}],
            [],
            [{'case',466,
              {call,466,
               {atom,466,other_edge_exists},
               [{var,466,'G'},{var,466,'E'},{var,466,'V1'},{var,466,'V2'}]},
              [{clause,467,
                [{atom,467,true}],
                [],
                [{tuple,467,
                  [{atom,467,error},
                   {tuple,467,
                    [{atom,467,bad_edge},
                     {cons,467,
                      {var,467,'V1'},
                      {cons,467,{var,467,'V2'},{nil,467}}}]}]}]},
               {clause,468,
                [{atom,468,false}],
                [[{op,468,'=:=',
                   {call,468,
                    {remote,468,{atom,468,erlang},{atom,468,element}},
                    [{integer,468,5},{var,468,'G'}]},
                   {atom,468,false}}]],
                [{call,469,
                  {atom,469,acyclic_add_edge},
                  [{var,469,'E'},
                   {var,469,'V1'},
                   {var,469,'V2'},
                   {var,469,'Label'},
                   {var,469,'G'}]}]},
               {clause,470,
                [{atom,470,false}],
                [],
                [{call,471,
                  {atom,471,do_insert_edge},
                  [{var,471,'E'},
                   {var,471,'V1'},
                   {var,471,'V2'},
                   {var,471,'Label'},
                   {var,471,'G'}]}]}]}]}]}]}]}]}]},
 {function,476,other_edge_exists,4,
  [{clause,476,
    [{tuple,476,
      [{atom,476,digraph},
       {var,476,'_'},
       {var,476,'ET'},
       {var,476,'_'},
       {var,476,'_'}]},
     {var,476,'E'},
     {var,476,'V1'},
     {var,476,'V2'}],
    [],
    [{'case',477,
      {call,477,
       {remote,477,{atom,477,ets},{atom,477,lookup}},
       [{var,477,'ET'},{var,477,'E'}]},
      [{clause,478,
        [{cons,478,
          {tuple,478,
           [{var,478,'E'},{var,478,'Vert1'},{var,478,'Vert2'},{var,478,'_'}]},
          {nil,478}}],
        [[{op,478,'=/=',{var,478,'Vert1'},{var,478,'V1'}}],
         [{op,478,'=/=',{var,478,'Vert2'},{var,478,'V2'}}]],
        [{atom,479,true}]},
       {clause,480,[{var,480,'_'}],[],[{atom,481,false}]}]}]}]},
 {function,486,do_insert_edge,5,
  [{clause,486,
    [{var,486,'E'},
     {var,486,'V1'},
     {var,486,'V2'},
     {var,486,'Label'},
     {tuple,486,
      [{atom,486,digraph},
       {var,486,'_'},
       {var,486,'ET'},
       {var,486,'NT'},
       {var,486,'_'}]}],
    [],
    [{call,487,
      {remote,487,{atom,487,ets},{atom,487,insert}},
      [{var,487,'NT'},
       {cons,487,
        {tuple,487,
         [{tuple,487,[{atom,487,out},{var,487,'V1'}]},{var,487,'E'}]},
        {cons,487,
         {tuple,487,
          [{tuple,487,[{atom,487,in},{var,487,'V2'}]},{var,487,'E'}]},
         {nil,487}}}]},
     {call,488,
      {remote,488,{atom,488,ets},{atom,488,insert}},
      [{var,488,'ET'},
       {tuple,488,
        [{var,488,'E'},{var,488,'V1'},{var,488,'V2'},{var,488,'Label'}]}]},
     {var,489,'E'}]}]},
 {function,494,acyclic_add_edge,5,
  [{clause,494,
    [{var,494,'_E'},
     {var,494,'V1'},
     {var,494,'V2'},
     {var,494,'_L'},
     {var,494,'_G'}],
    [[{op,494,'=:=',{var,494,'V1'},{var,494,'V2'}}]],
    [{tuple,495,
      [{atom,495,error},
       {tuple,495,
        [{atom,495,bad_edge},
         {cons,495,{var,495,'V1'},{cons,495,{var,495,'V2'},{nil,495}}}]}]}]},
   {clause,496,
    [{var,496,'E'},
     {var,496,'V1'},
     {var,496,'V2'},
     {var,496,'Label'},
     {var,496,'G'}],
    [],
    [{'case',497,
      {call,497,
       {atom,497,get_path},
       [{var,497,'G'},{var,497,'V2'},{var,497,'V1'}]},
      [{clause,498,
        [{atom,498,false}],
        [],
        [{call,498,
          {atom,498,do_insert_edge},
          [{var,498,'E'},
           {var,498,'V1'},
           {var,498,'V2'},
           {var,498,'Label'},
           {var,498,'G'}]}]},
       {clause,499,
        [{var,499,'Path'}],
        [],
        [{tuple,499,
          [{atom,499,error},
           {tuple,499,[{atom,499,bad_edge},{var,499,'Path'}]}]}]}]}]}]},
 {function,511,del_path,3,
  [{clause,511,
    [{var,511,'G'},{var,511,'V1'},{var,511,'V2'}],
    [],
    [{'case',512,
      {call,512,
       {atom,512,get_path},
       [{var,512,'G'},{var,512,'V1'},{var,512,'V2'}]},
      [{clause,513,[{atom,513,false}],[],[{atom,513,true}]},
       {clause,514,
        [{var,514,'Path'}],
        [],
        [{call,515,{atom,515,rm_edges},[{var,515,'Path'},{var,515,'G'}]},
         {call,516,
          {atom,516,del_path},
          [{var,516,'G'},{var,516,'V1'},{var,516,'V2'}]}]}]}]}]},
 {function,533,get_cycle,2,
  [{clause,533,
    [{var,533,'G'},{var,533,'V'}],
    [],
    [{'case',534,
      {call,534,
       {atom,534,one_path},
       [{call,534,{atom,534,out_neighbours},[{var,534,'G'},{var,534,'V'}]},
        {var,534,'V'},
        {nil,534},
        {cons,534,{var,534,'V'},{nil,534}},
        {cons,534,{var,534,'V'},{nil,534}},
        {integer,534,2},
        {var,534,'G'},
        {integer,534,1}]},
      [{clause,535,
        [{atom,535,false}],
        [],
        [{'case',536,
          {call,536,
           {remote,536,{atom,536,lists},{atom,536,member}},
           [{var,536,'V'},
            {call,536,
             {atom,536,out_neighbours},
             [{var,536,'G'},{var,536,'V'}]}]},
          [{clause,537,
            [{atom,537,true}],
            [],
            [{cons,537,{var,537,'V'},{nil,537}}]},
           {clause,538,[{atom,538,false}],[],[{atom,538,false}]}]}]},
       {clause,540,[{var,540,'Vs'}],[],[{var,540,'Vs'}]}]}]}]},
 {function,555,get_path,3,
  [{clause,555,
    [{var,555,'G'},{var,555,'V1'},{var,555,'V2'}],
    [],
    [{call,556,
      {atom,556,one_path},
      [{call,556,{atom,556,out_neighbours},[{var,556,'G'},{var,556,'V1'}]},
       {var,556,'V2'},
       {nil,556},
       {cons,556,{var,556,'V1'},{nil,556}},
       {cons,556,{var,556,'V1'},{nil,556}},
       {integer,556,1},
       {var,556,'G'},
       {integer,556,1}]}]}]},
 {function,563,prune_short_path,2,
  [{clause,563,
    [{var,563,'Counter'},{var,563,'Min'}],
    [[{op,563,'<',{var,563,'Counter'},{var,563,'Min'}}]],
    [{atom,564,short}]},
   {clause,565,[{var,565,'_Counter'},{var,565,'_Min'}],[],[{atom,566,ok}]}]},
 {function,568,one_path,8,
  [{clause,568,
    [{cons,568,{var,568,'W'},{var,568,'Ws'}},
     {var,568,'W'},
     {var,568,'Cont'},
     {var,568,'Xs'},
     {var,568,'Ps'},
     {var,568,'Prune'},
     {var,568,'G'},
     {var,568,'Counter'}],
    [],
    [{'case',569,
      {call,569,
       {atom,569,prune_short_path},
       [{var,569,'Counter'},{var,569,'Prune'}]},
      [{clause,570,
        [{atom,570,short}],
        [],
        [{call,570,
          {atom,570,one_path},
          [{var,570,'Ws'},
           {var,570,'W'},
           {var,570,'Cont'},
           {var,570,'Xs'},
           {var,570,'Ps'},
           {var,570,'Prune'},
           {var,570,'G'},
           {var,570,'Counter'}]}]},
       {clause,571,
        [{atom,571,ok}],
        [],
        [{call,571,
          {remote,571,{atom,571,lists},{atom,571,reverse}},
          [{cons,571,{var,571,'W'},{var,571,'Ps'}}]}]}]}]},
   {clause,573,
    [{cons,573,{var,573,'V'},{var,573,'Vs'}},
     {var,573,'W'},
     {var,573,'Cont'},
     {var,573,'Xs'},
     {var,573,'Ps'},
     {var,573,'Prune'},
     {var,573,'G'},
     {var,573,'Counter'}],
    [],
    [{'case',574,
      {call,574,
       {remote,574,{atom,574,lists},{atom,574,member}},
       [{var,574,'V'},{var,574,'Xs'}]},
      [{clause,575,
        [{atom,575,true}],
        [],
        [{call,575,
          {atom,575,one_path},
          [{var,575,'Vs'},
           {var,575,'W'},
           {var,575,'Cont'},
           {var,575,'Xs'},
           {var,575,'Ps'},
           {var,575,'Prune'},
           {var,575,'G'},
           {var,575,'Counter'}]}]},
       {clause,576,
        [{atom,576,false}],
        [],
        [{call,576,
          {atom,576,one_path},
          [{call,576,{atom,576,out_neighbours},[{var,576,'G'},{var,576,'V'}]},
           {var,576,'W'},
           {cons,577,
            {tuple,577,[{var,577,'Vs'},{var,577,'Ps'}]},
            {var,577,'Cont'}},
           {cons,577,{var,577,'V'},{var,577,'Xs'}},
           {cons,577,{var,577,'V'},{var,577,'Ps'}},
           {var,578,'Prune'},
           {var,578,'G'},
           {op,578,'+',{var,578,'Counter'},{integer,578,1}}]}]}]}]},
   {clause,580,
    [{nil,580},
     {var,580,'W'},
     {cons,580,{tuple,580,[{var,580,'Vs'},{var,580,'Ps'}]},{var,580,'Cont'}},
     {var,580,'Xs'},
     {var,580,'_'},
     {var,580,'Prune'},
     {var,580,'G'},
     {var,580,'Counter'}],
    [],
    [{call,581,
      {atom,581,one_path},
      [{var,581,'Vs'},
       {var,581,'W'},
       {var,581,'Cont'},
       {var,581,'Xs'},
       {var,581,'Ps'},
       {var,581,'Prune'},
       {var,581,'G'},
       {op,581,'-',{var,581,'Counter'},{integer,581,1}}]}]},
   {clause,582,
    [{nil,582},
     {var,582,'_'},
     {nil,582},
     {var,582,'_'},
     {var,582,'_'},
     {var,582,'_'},
     {var,582,'_'},
     {var,582,'_Counter'}],
    [],
    [{atom,582,false}]}]},
 {function,593,get_short_cycle,2,
  [{clause,593,
    [{var,593,'G'},{var,593,'V'}],
    [],
    [{call,594,
      {atom,594,get_short_path},
      [{var,594,'G'},{var,594,'V'},{var,594,'V'}]}]}]},
 {function,607,get_short_path,3,
  [{clause,607,
    [{var,607,'G'},{var,607,'V1'},{var,607,'V2'}],
    [],
    [{match,608,{var,608,'T'},{call,608,{atom,608,new},[]}},
     {call,609,{atom,609,add_vertex},[{var,609,'T'},{var,609,'V1'}]},
     {match,610,
      {var,610,'Q'},
      {call,610,{remote,610,{atom,610,queue},{atom,610,new}},[]}},
     {match,611,
      {var,611,'Q1'},
      {call,611,
       {atom,611,queue_out_neighbours},
       [{var,611,'V1'},{var,611,'G'},{var,611,'Q'}]}},
     {match,612,
      {var,612,'L'},
      {call,612,
       {atom,612,spath},
       [{var,612,'Q1'},{var,612,'G'},{var,612,'V2'},{var,612,'T'}]}},
     {call,613,{atom,613,delete},[{var,613,'T'}]},
     {var,614,'L'}]}]},
 {function,616,spath,4,
  [{clause,616,
    [{var,616,'Q'},{var,616,'G'},{var,616,'Sink'},{var,616,'T'}],
    [],
    [{'case',617,
      {call,617,{remote,617,{atom,617,queue},{atom,617,out}},[{var,617,'Q'}]},
      [{clause,618,
        [{tuple,618,
          [{tuple,618,[{atom,618,value},{var,618,'E'}]},{var,618,'Q1'}]}],
        [],
        [{match,619,
          {tuple,619,
           [{var,619,'_E'},{var,619,'V1'},{var,619,'V2'},{var,619,'_Label'}]},
          {call,619,{atom,619,edge},[{var,619,'G'},{var,619,'E'}]}},
         {'if',620,
          [{clause,621,[],
            [[{op,621,'=:=',{var,621,'Sink'},{var,621,'V2'}}]],
            [{call,622,
              {atom,622,follow_path},
              [{var,622,'V1'},
               {var,622,'T'},
               {cons,622,{var,622,'V2'},{nil,622}}]}]},
           {clause,623,[],
            [[{atom,623,true}]],
            [{'case',624,
              {call,624,{atom,624,vertex},[{var,624,'T'},{var,624,'V2'}]},
              [{clause,625,
                [{atom,625,false}],
                [],
                [{call,626,
                  {atom,626,add_vertex},
                  [{var,626,'T'},{var,626,'V2'}]},
                 {call,627,
                  {atom,627,add_edge},
                  [{var,627,'T'},{var,627,'V2'},{var,627,'V1'}]},
                 {match,628,
                  {var,628,'NQ'},
                  {call,628,
                   {atom,628,queue_out_neighbours},
                   [{var,628,'V2'},{var,628,'G'},{var,628,'Q1'}]}},
                 {call,629,
                  {atom,629,spath},
                  [{var,629,'NQ'},
                   {var,629,'G'},
                   {var,629,'Sink'},
                   {var,629,'T'}]}]},
               {clause,630,
                [{var,630,'_V'}],
                [],
                [{call,631,
                  {atom,631,spath},
                  [{var,631,'Q1'},
                   {var,631,'G'},
                   {var,631,'Sink'},
                   {var,631,'T'}]}]}]}]}]}]},
       {clause,634,
        [{tuple,634,[{atom,634,empty},{var,634,'_Q1'}]}],
        [],
        [{atom,635,false}]}]}]}]},
 {function,638,follow_path,3,
  [{clause,638,
    [{var,638,'V'},{var,638,'T'},{var,638,'P'}],
    [],
    [{match,639,{var,639,'P1'},{cons,639,{var,639,'V'},{var,639,'P'}}},
     {'case',640,
      {call,640,{atom,640,out_neighbours},[{var,640,'T'},{var,640,'V'}]},
      [{clause,641,
        [{cons,641,{var,641,'N'},{nil,641}}],
        [],
        [{call,642,
          {atom,642,follow_path},
          [{var,642,'N'},{var,642,'T'},{var,642,'P1'}]}]},
       {clause,643,[{nil,643}],[],[{var,644,'P1'}]}]}]}]},
 {function,647,queue_out_neighbours,3,
  [{clause,647,
    [{var,647,'V'},{var,647,'G'},{var,647,'Q0'}],
    [],
    [{call,648,
      {remote,648,{atom,648,lists},{atom,648,foldl}},
      [{'fun',648,
        {clauses,
         [{clause,648,
           [{var,648,'E'},{var,648,'Q'}],
           [],
           [{call,648,
             {remote,648,{atom,648,queue},{atom,648,in}},
             [{var,648,'E'},{var,648,'Q'}]}]}]}},
       {var,648,'Q0'},
       {call,648,{atom,648,out_edges},[{var,648,'G'},{var,648,'V'}]}]}]}]}]
