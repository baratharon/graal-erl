dets_v8
[]
[]
[{function,201,mark_dirty,1,
  [{clause,201,
    [{var,201,'Head'}],
    [],
    [{match,202,
      {var,202,'Dirty'},
      {cons,202,
       {tuple,202,
        [{integer,143,8},
         {bin,202,
          [{bin_element,173,{integer,173,0},{integer,202,32},default}]}]},
       {nil,202}}},
     {match,203,
      {tuple,203,[{var,203,'_NewHead'},{atom,203,ok}]},
      {call,203,
       {remote,203,{atom,203,dets_utils},{atom,203,pwrite}},
       [{var,203,'Head'},{var,203,'Dirty'}]}},
     {match,204,
      {atom,204,ok},
      {call,204,
       {remote,204,{atom,204,dets_utils},{atom,204,sync}},
       [{var,204,'Head'}]}},
     {match,205,
      {tuple,205,[{atom,205,ok},{var,205,'_Pos'}]},
      {call,205,
       {remote,205,{atom,205,dets_utils},{atom,205,position}},
       [{var,205,'Head'},
        {call,205,
         {remote,205,{atom,205,erlang},{atom,205,element}},
         [{integer,205,13},{var,205,'Head'}]}]}},
     {match,206,
      {atom,206,ok},
      {call,206,
       {remote,206,{atom,206,dets_utils},{atom,206,truncate}},
       [{var,206,'Head'},{atom,206,cur}]}}]}]},
 {function,209,initiate_file,11,
  [{clause,209,
    [{var,209,'Fd'},
     {var,209,'Tab'},
     {var,209,'Fname'},
     {var,209,'Type'},
     {var,209,'Kp'},
     {var,209,'MinSlots'},
     {var,209,'MaxSlots'},
     {var,210,'Ram'},
     {var,210,'CacheSz'},
     {var,210,'Auto'},
     {var,210,'_DoInitSegments'}],
    [],
    [{match,211,{var,211,'Freelist'},{integer,211,0}},
     {match,212,{var,212,'Cookie'},{integer,31,11259375}},
     {match,213,{var,213,'ClosedProperly'},{integer,173,0}},
     {match,214,{var,214,'Version'},{integer,180,8}},
     {match,215,
      {var,215,'Factor'},
      {call,215,{atom,215,est_no_segments},[{var,215,'MinSlots'}]}},
     {match,216,{var,216,'N'},{integer,216,0}},
     {match,217,
      {var,217,'M'},
      {match,217,
       {var,217,'Next'},
       {op,217,'*',{integer,128,256},{var,217,'Factor'}}}},
     {match,218,{var,218,'NoObjects'},{integer,218,0}},
     {call,219,
      {remote,219,{atom,219,dets_utils},{atom,219,pwrite}},
      [{var,219,'Fd'},
       {var,219,'Fname'},
       {integer,219,0},
       {bin,220,
        [{bin_element,220,{var,220,'Freelist'},{integer,220,32},default},
         {bin_element,221,{var,221,'Cookie'},{integer,221,32},default},
         {bin_element,222,{var,222,'ClosedProperly'},{integer,222,32},default},
         {bin_element,223,
          {call,223,
           {remote,223,{atom,223,dets_utils},{atom,223,type_to_code}},
           [{var,223,'Type'}]},
          {integer,223,32},
          default},
         {bin_element,224,{var,224,'Version'},{integer,224,32},default},
         {bin_element,225,{var,225,'M'},{integer,225,32},default},
         {bin_element,226,{var,226,'Next'},{integer,226,32},default},
         {bin_element,227,{var,227,'Kp'},{integer,227,32},default},
         {bin_element,228,{var,228,'NoObjects'},{integer,228,32},default},
         {bin_element,229,{var,229,'N'},{integer,229,32},default},
         {bin_element,230,
          {integer,230,0},
          {op,230,'*',{integer,130,8192},{integer,230,4}},
          [{unit,8}]},
         {bin_element,231,
          {integer,231,0},
          {op,231,'*',{integer,128,256},{integer,231,4}},
          [{unit,8}]}]}]},
     {match,234,
      {var,234,'Pos'},
      {op,131,'+',
       {integer,127,40},
       {op,131,'*',{integer,131,4},{integer,234,0}}}},
     {match,235,
      {var,235,'SegP'},
      {op,235,'+',
       {integer,127,40},
       {op,235,'*',{integer,235,4},{integer,130,8192}}}},
     {call,236,
      {remote,236,{atom,236,dets_utils},{atom,236,pwrite}},
      [{var,236,'Fd'},
       {var,236,'Fname'},
       {var,236,'Pos'},
       {bin,236,
        [{bin_element,236,{var,236,'SegP'},{integer,236,32},default}]}]},
     {call,237,{atom,237,segp_cache},[{var,237,'Pos'},{var,237,'SegP'}]},
     {match,239,
      {var,239,'Ftab'},
      {call,239,
       {remote,239,{atom,239,dets_utils},{atom,239,init_alloc}},
       [{op,131,'+',
         {integer,127,40},
         {op,131,'*',
          {integer,131,4},
          {op,132,'+',{integer,128,256},{integer,130,8192}}}}]}},
     {match,240,
      {var,240,'H0'},
      {tuple,240,
       [{atom,240,head},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {var,240,'Fd'},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {var,240,'Ftab'},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,69,false},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,78,read_write},
        {atom,79,false},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {atom,240,undefined},
        {op,131,'+',
         {integer,127,40},
         {op,131,'*',
          {integer,131,4},
          {op,132,'+',{integer,128,256},{integer,130,8192}}}}]}},
     {match,241,
      {tuple,241,[{var,241,'H1'},{var,241,'Ws'}]},
      {call,241,
       {atom,241,init_more_segments},
       [{var,241,'H0'},
        {integer,241,1},
        {var,241,'Factor'},
        {atom,241,undefined},
        {nil,241}]}},
     {call,244,
      {remote,244,{atom,244,dets_utils},{atom,244,pwrite}},
      [{var,244,'Fd'},{var,244,'Fname'},{var,244,'Ws'}]},
     {match,247,
      {var,247,'Head'},
      {tuple,247,
       [{atom,247,head},
        {var,248,'M'},
        {op,249,'*',{var,249,'M'},{integer,249,2}},
        {var,250,'Next'},
        {var,251,'Fd'},
        {var,252,'NoObjects'},
        {atom,247,undefined},
        {atom,247,undefined},
        {var,253,'N'},
        {var,254,'Type'},
        {var,259,'Kp'},
        {call,256,
         {remote,256,{atom,256,erlang},{atom,256,element}},
         [{integer,256,12},{var,256,'H1'}]},
        {atom,247,undefined},
        {atom,247,undefined},
        {var,257,'Auto'},
        {atom,255,dirty},
        {atom,69,false},
        {atom,258,phash},
        {atom,247,undefined},
        {op,260,'*',{var,260,'Factor'},{integer,128,256}},
        {op,261,'*',
         {call,261,{atom,261,no_segs},[{var,261,'MaxSlots'}]},
         {integer,128,256}},
        {call,266,
         {remote,266,{atom,266,dets_utils},{atom,266,new_cache}},
         [{var,266,'CacheSz'}]},
        {var,264,'Fname'},
        {atom,78,read_write},
        {var,263,'Ram'},
        {var,265,'Tab'},
        {atom,247,undefined},
        {atom,247,undefined},
        {var,267,'Version'},
        {atom,-1,dets_v8},
        {integer,193,16},
        {op,131,'+',
         {integer,127,40},
         {op,131,'*',
          {integer,131,4},
          {op,132,'+',{integer,128,256},{integer,130,8192}}}}]}},
     {tuple,272,[{atom,272,ok},{var,272,'Head'}]}]}]},
 {function,274,est_no_segments,1,
  [{clause,274,
    [{var,274,'MinSlots'}],
    [[{op,274,'>',
       {op,274,'+',
        {integer,274,1},
        {op,135,'bsr',{var,274,'MinSlots'},{integer,129,8}}},
       {integer,130,8192}}]],
    [{integer,130,8192}]},
   {clause,276,
    [{var,276,'MinSlots'}],
    [],
    [{op,277,'+',
      {integer,277,1},
      {op,135,'bsr',{var,277,'MinSlots'},{integer,129,8}}}]}]},
 {function,279,init_more_segments,5,
  [{clause,279,
    [{var,279,'Head'},
     {var,279,'SegNo'},
     {var,279,'Factor'},
     {atom,279,undefined},
     {var,279,'Ws'}],
    [[{op,279,'<',{var,279,'SegNo'},{var,279,'Factor'}}]],
    [{call,280,
      {atom,280,init_more_segments},
      [{var,280,'Head'},
       {var,280,'SegNo'},
       {var,280,'Factor'},
       {call,280,{atom,280,seg_zero},[]},
       {var,280,'Ws'}]}]},
   {clause,281,
    [{var,281,'Head'},
     {var,281,'SegNo'},
     {var,281,'Factor'},
     {var,281,'SegZero'},
     {var,281,'Ws'}],
    [[{op,281,'<',{var,281,'SegNo'},{var,281,'Factor'}}]],
    [{match,282,
      {tuple,282,[{var,282,'NewHead'},{var,282,'W'}]},
      {call,282,
       {atom,282,allocate_segment},
       [{var,282,'Head'},{var,282,'SegZero'},{var,282,'SegNo'}]}},
     {call,283,
      {atom,283,init_more_segments},
      [{var,283,'NewHead'},
       {op,283,'+',{var,283,'SegNo'},{integer,283,1}},
       {var,283,'Factor'},
       {var,283,'SegZero'},
       {op,283,'++',{var,283,'W'},{var,283,'Ws'}}]}]},
   {clause,284,
    [{var,284,'Head'},
     {var,284,'_SegNo'},
     {var,284,'_Factor'},
     {var,284,'_SegZero'},
     {var,284,'Ws'}],
    [],
    [{tuple,285,[{var,285,'Head'},{var,285,'Ws'}]}]}]},
 {function,287,allocate_segment,3,
  [{clause,287,
    [{var,287,'Head'},{var,287,'SegZero'},{var,287,'SegNo'}],
    [],
    [{match,289,
      {tuple,289,[{var,289,'NewHead'},{var,289,'Segment'},{var,289,'_'}]},
      {call,289,
       {remote,289,{atom,289,dets_utils},{atom,289,alloc}},
       [{var,289,'Head'},{op,289,'*',{integer,289,4},{integer,128,256}}]}},
     {match,290,
      {var,290,'InitSegment'},
      {tuple,290,[{var,290,'Segment'},{var,290,'SegZero'}]}},
     {match,291,
      {var,291,'Pos'},
      {op,131,'+',
       {integer,127,40},
       {op,131,'*',{integer,131,4},{var,291,'SegNo'}}}},
     {call,292,{atom,292,segp_cache},[{var,292,'Pos'},{var,292,'Segment'}]},
     {match,293,
      {var,293,'SegPointer'},
      {tuple,293,
       [{var,293,'Pos'},
        {bin,293,
         [{bin_element,293,{var,293,'Segment'},{integer,293,32},default}]}]}},
     {tuple,294,
      [{var,294,'NewHead'},
       {cons,294,
        {var,294,'InitSegment'},
        {cons,294,{var,294,'SegPointer'},{nil,294}}}]}]}]},
 {function,297,init_freelist,2,
  [{clause,297,
    [{var,297,'Head'},
     {tuple,297,[{atom,297,convert_freelist},{var,297,'_Version'}]}],
    [],
    [{match,304,
      {var,304,'Ftab'},
      {call,304,
       {remote,304,{atom,304,dets_utils},{atom,304,empty_free_lists}},
       []}},
     {match,305,
      {var,305,'Pos'},
      {call,305,
       {remote,305,{atom,305,erlang},{atom,305,element}},
       [{integer,305,13},{var,305,'Head'}]}},
     {'case',306,
      {'catch',306,
       {call,306,
        {atom,306,prterm},
        [{var,306,'Head'},{var,306,'Pos'},{integer,188,12}]}},
      [{clause,307,
        [{tuple,307,[{integer,307,0},{var,307,'_Sz'},{var,307,'Term'}]}],
        [],
        [{match,308,
          {var,308,'FreeList1'},
          {call,308,
           {remote,308,{atom,308,lists},{atom,308,reverse}},
           [{var,308,'Term'}]}},
         {match,309,
          {var,309,'FreeList'},
          {call,309,
           {remote,309,
            {atom,309,dets_utils},
            {atom,309,init_slots_from_old_file}},
           [{var,309,'FreeList1'},{var,309,'Ftab'}]}},
         {call,310,
          {remote,310,{atom,310,erlang},{atom,310,setelement}},
          [{integer,310,32},
           {call,310,
            {remote,310,{atom,310,erlang},{atom,310,setelement}},
            [{integer,310,12},{var,310,'Head'},{var,310,'FreeList'}]},
           {op,131,'+',
            {integer,127,40},
            {op,131,'*',
             {integer,131,4},
             {op,132,'+',{integer,128,256},{integer,130,8192}}}}]}]},
       {clause,311,
        [{var,311,'_'}],
        [],
        [{call,312,
          {atom,312,throw},
          [{tuple,312,
            [{atom,312,error},
             {tuple,312,
              [{atom,312,bad_freelists},
               {call,312,
                {remote,312,{atom,312,erlang},{atom,312,element}},
                [{integer,312,23},{var,312,'Head'}]}]}]}]}]}]}]},
   {clause,314,
    [{var,314,'Head'},{var,314,'_'}],
    [],
    [{match,316,
      {var,316,'Pos'},
      {call,316,
       {remote,316,{atom,316,erlang},{atom,316,element}},
       [{integer,316,13},{var,316,'Head'}]}},
     {'case',317,
      {'catch',317,
       {call,317,
        {atom,317,prterm},
        [{var,317,'Head'},{var,317,'Pos'},{integer,188,12}]}},
      [{clause,318,
        [{tuple,318,[{integer,318,0},{var,318,'_Sz'},{var,318,'Term'}]}],
        [],
        [{call,319,
          {remote,319,{atom,319,erlang},{atom,319,setelement}},
          [{integer,319,32},
           {call,319,
            {remote,319,{atom,319,erlang},{atom,319,setelement}},
            [{integer,319,12},{var,319,'Head'},{var,319,'Term'}]},
           {op,131,'+',
            {integer,127,40},
            {op,131,'*',
             {integer,131,4},
             {op,132,'+',{integer,128,256},{integer,130,8192}}}}]}]},
       {clause,320,
        [{var,320,'_'}],
        [],
        [{call,321,
          {atom,321,throw},
          [{tuple,321,
            [{atom,321,error},
             {tuple,321,
              [{atom,321,bad_freelists},
               {call,321,
                {remote,321,{atom,321,erlang},{atom,321,element}},
                [{integer,321,23},{var,321,'Head'}]}]}]}]}]}]}]}]},
 {function,325,read_file_header,2,
  [{clause,325,
    [{var,325,'Fd'},{var,325,'FileName'}],
    [],
    [{match,326,
      {tuple,326,[{atom,326,ok},{var,326,'Bin'}]},
      {call,326,
       {remote,326,{atom,326,dets_utils},{atom,326,pread_close}},
       [{var,326,'Fd'},
        {var,326,'FileName'},
        {integer,326,0},
        {integer,127,40}]}},
     {match,327,
      {cons,327,
       {var,327,'Freelist'},
       {cons,327,
        {var,327,'Cookie'},
        {cons,327,
         {var,327,'CP'},
         {cons,327,
          {var,327,'Type2'},
          {cons,327,
           {var,327,'Version'},
           {cons,327,
            {var,327,'M'},
            {cons,327,
             {var,327,'Next'},
             {cons,327,
              {var,327,'Kp'},
              {cons,327,
               {var,327,'NoObjects'},
               {cons,327,{var,327,'N'},{nil,327}}}}}}}}}}},
      {call,328,{atom,328,bin2ints},[{var,328,'Bin'}]}},
     {match,329,
      {tuple,329,[{atom,329,ok},{var,329,'EOF'}]},
      {call,329,
       {remote,329,{atom,329,dets_utils},{atom,329,position_close}},
       [{var,329,'Fd'},{var,329,'FileName'},{atom,329,eof}]}},
     {match,330,
      {tuple,330,
       [{atom,330,ok},
        {bin,330,
         [{bin_element,330,{var,330,'FileSize'},{integer,330,32},default}]}]},
      {call,330,
       {remote,330,{atom,330,dets_utils},{atom,330,pread_close}},
       [{var,330,'Fd'},
        {var,330,'FileName'},
        {op,330,'-',{var,330,'EOF'},{integer,330,4}},
        {integer,330,4}]}},
     {match,331,
      {var,331,'FH'},
      {tuple,331,
       [{atom,331,fileheader},
        {var,331,'Freelist'},
        {op,131,'+',
         {integer,127,40},
         {op,131,'*',
          {integer,131,4},
          {op,132,'+',{integer,128,256},{integer,130,8192}}}},
        {var,333,'Cookie'},
        {var,334,'CP'},
        {call,335,
         {remote,335,{atom,335,dets_utils},{atom,335,code_to_type}},
         [{var,335,'Type2'}]},
        {var,336,'Version'},
        {var,337,'M'},
        {var,338,'Next'},
        {var,339,'Kp'},
        {var,340,'NoObjects'},
        {atom,331,undefined},
        {integer,21,256},
        {op,22,'*',
         {op,22,'*',{integer,22,32},{integer,22,1024}},
         {integer,22,1024}},
        {atom,331,undefined},
        {atom,331,undefined},
        {atom,331,undefined},
        {atom,331,undefined},
        {atom,331,undefined},
        {var,343,'FileSize'},
        {var,344,'EOF'},
        {var,345,'N'},
        {atom,-1,dets_v8}]}},
     {tuple,347,[{atom,347,ok},{var,347,'Fd'},{var,347,'FH'}]}]}]},
 {function,351,check_file_header,2,
  [{clause,351,
    [{var,351,'FH'},{var,351,'Fd'}],
    [],
    [{match,352,
      {var,352,'Test'},
      {'if',353,
       [{clause,354,[],
         [[{op,354,'=/=',
            {call,354,
             {remote,354,{atom,354,erlang},{atom,354,element}},
             [{integer,354,4},{var,354,'FH'}]},
            {integer,31,11259375}}]],
         [{tuple,355,[{atom,355,error},{atom,355,not_a_dets_file}]}]},
        {clause,356,[],
         [[{op,356,'=:=',
            {call,356,
             {remote,356,{atom,356,erlang},{atom,356,element}},
             [{integer,356,6},{var,356,'FH'}]},
            {atom,356,badtype}}]],
         [{tuple,357,[{atom,357,error},{atom,357,invalid_type_code}]}]},
        {clause,358,[],
         [[{op,358,'=/=',
            {call,358,
             {remote,358,{atom,358,erlang},{atom,358,element}},
             [{integer,358,7},{var,358,'FH'}]},
            {integer,180,8}}]],
         [{'case',359,
           {call,359,
            {remote,359,{atom,359,lists},{atom,359,member}},
            [{call,359,
              {remote,359,{atom,359,erlang},{atom,359,element}},
              [{integer,359,7},{var,359,'FH'}]},
             {cons,181,{integer,181,6},{cons,181,{integer,181,7},{nil,181}}}]},
           [{clause,361,
             [{atom,361,true}],
             [],
             [{tuple,362,[{atom,362,error},{atom,362,version_bump}]}]},
            {clause,363,
             [{atom,363,false}],
             [],
             [{tuple,364,[{atom,364,error},{atom,364,bad_version}]}]}]}]},
        {clause,366,[],
         [[{op,366,'=/=',
            {call,366,
             {remote,366,{atom,366,erlang},{atom,366,element}},
             [{integer,366,20},{var,366,'FH'}]},
            {call,366,
             {remote,366,{atom,366,erlang},{atom,366,element}},
             [{integer,366,21},{var,366,'FH'}]}}]],
         [{tuple,367,[{atom,367,error},{atom,367,not_closed}]}]},
        {clause,368,[],
         [[{op,368,'=:=',
            {call,368,
             {remote,368,{atom,368,erlang},{atom,368,element}},
             [{integer,368,5},{var,368,'FH'}]},
            {integer,174,1}}]],
         [{'case',369,
           {call,369,
            {remote,369,{atom,369,lists},{atom,369,member}},
            [{call,369,
              {remote,369,{atom,369,erlang},{atom,369,element}},
              [{integer,369,7},{var,369,'FH'}]},
             {cons,182,{integer,182,8},{nil,182}}]},
           [{clause,371,
             [{atom,371,true}],
             [],
             [{tuple,372,
               [{atom,372,ok},
                {tuple,372,
                 [{atom,372,convert_freelist},
                  {call,372,
                   {remote,372,{atom,372,erlang},{atom,372,element}},
                   [{integer,372,7},{var,372,'FH'}]}]},
                {atom,372,hash}]}]},
            {clause,373,
             [{atom,373,false}],
             [],
             [{tuple,374,[{atom,374,error},{atom,374,not_closed}]}]}]}]},
        {clause,376,[],
         [[{op,376,'=:=',
            {call,376,
             {remote,376,{atom,376,erlang},{atom,376,element}},
             [{integer,376,5},{var,376,'FH'}]},
            {integer,175,2}}]],
         [{tuple,377,[{atom,377,ok},{atom,377,true},{atom,377,hash}]}]},
        {clause,378,[],
         [[{op,378,'=:=',
            {call,378,
             {remote,378,{atom,378,erlang},{atom,378,element}},
             [{integer,378,5},{var,378,'FH'}]},
            {integer,176,3}}]],
         [{tuple,380,
           [{atom,380,ok},{atom,380,need_compacting},{atom,380,hash}]}]},
        {clause,381,[],
         [[{op,381,'=:=',
            {call,381,
             {remote,381,{atom,381,erlang},{atom,381,element}},
             [{integer,381,5},{var,381,'FH'}]},
            {integer,177,4}}]],
         [{tuple,382,[{atom,382,ok},{atom,382,true},{atom,382,phash}]}]},
        {clause,383,[],
         [[{op,383,'=:=',
            {call,383,
             {remote,383,{atom,383,erlang},{atom,383,element}},
             [{integer,383,5},{var,383,'FH'}]},
            {integer,178,5}}]],
         [{tuple,385,
           [{atom,385,ok},{atom,385,need_compacting},{atom,385,phash}]}]},
        {clause,386,[],
         [[{op,386,'=:=',
            {call,386,
             {remote,386,{atom,386,erlang},{atom,386,element}},
             [{integer,386,5},{var,386,'FH'}]},
            {integer,173,0}}]],
         [{tuple,387,[{atom,387,error},{atom,387,not_closed}]}]},
        {clause,388,[],
         [[{op,388,'>',
            {call,388,
             {remote,388,{atom,388,erlang},{atom,388,element}},
             [{integer,388,5},{var,388,'FH'}]},
            {integer,178,5}}]],
         [{tuple,390,[{atom,390,error},{atom,390,not_closed}]}]},
        {clause,391,[],
         [[{atom,391,true}]],
         [{tuple,392,[{atom,392,error},{atom,392,not_a_dets_file}]}]}]}},
     {'case',394,
      {var,394,'Test'},
      [{clause,395,
        [{tuple,395,
          [{atom,395,ok},{var,395,'ExtraInfo'},{var,395,'HashAlg'}]}],
        [],
        [{match,396,
          {var,396,'H'},
          {tuple,396,
           [{atom,396,head},
            {call,397,
             {remote,397,{atom,397,erlang},{atom,397,element}},
             [{integer,397,8},{var,397,'FH'}]},
            {op,398,'*',
             {call,398,
              {remote,398,{atom,398,erlang},{atom,398,element}},
              [{integer,398,8},{var,398,'FH'}]},
             {integer,398,2}},
            {call,399,
             {remote,399,{atom,399,erlang},{atom,399,element}},
             [{integer,399,9},{var,399,'FH'}]},
            {var,400,'Fd'},
            {call,401,
             {remote,401,{atom,401,erlang},{atom,401,element}},
             [{integer,401,11},{var,401,'FH'}]},
            {atom,396,undefined},
            {atom,396,undefined},
            {call,402,
             {remote,402,{atom,402,erlang},{atom,402,element}},
             [{integer,402,22},{var,402,'FH'}]},
            {call,403,
             {remote,403,{atom,403,erlang},{atom,403,element}},
             [{integer,403,6},{var,403,'FH'}]},
            {call,409,
             {remote,409,{atom,409,erlang},{atom,409,element}},
             [{integer,409,10},{var,409,'FH'}]},
            {atom,396,undefined},
            {call,407,
             {remote,407,{atom,407,erlang},{atom,407,element}},
             [{integer,407,2},{var,407,'FH'}]},
            {atom,396,undefined},
            {atom,405,infinity},
            {atom,404,saved},
            {atom,406,false},
            {var,408,'HashAlg'},
            {atom,396,undefined},
            {call,410,
             {remote,410,{atom,410,erlang},{atom,410,element}},
             [{integer,410,13},{var,410,'FH'}]},
            {call,411,
             {remote,411,{atom,411,erlang},{atom,411,element}},
             [{integer,411,14},{var,411,'FH'}]},
            {atom,396,undefined},
            {atom,396,undefined},
            {atom,78,read_write},
            {atom,79,false},
            {atom,396,undefined},
            {atom,396,undefined},
            {atom,396,undefined},
            {integer,180,8},
            {atom,-1,dets_v8},
            {integer,193,16},
            {call,415,
             {remote,415,{atom,415,erlang},{atom,415,element}},
             [{integer,415,3},{var,415,'FH'}]}]}},
         {tuple,416,[{atom,416,ok},{var,416,'H'},{var,416,'ExtraInfo'}]}]},
       {clause,417,[{var,417,'Error'}],[],[{var,418,'Error'}]}]}]}]},
 {function,421,cache_segps,3,
  [{clause,421,
    [{var,421,'Fd'},{var,421,'FileName'},{var,421,'M'}],
    [],
    [{match,422,
      {var,422,'NSegs'},
      {call,422,{atom,422,no_segs},[{var,422,'M'}]}},
     {match,423,
      {tuple,423,[{atom,423,ok},{var,423,'Bin'}]},
      {call,423,
       {remote,423,{atom,423,dets_utils},{atom,423,pread_close}},
       [{var,423,'Fd'},
        {var,423,'FileName'},
        {integer,127,40},
        {op,423,'*',{integer,423,4},{var,423,'NSegs'}}]}},
     {match,424,
      {var,424,'Fun'},
      {'fun',424,
       {clauses,
        [{clause,424,
          [{var,424,'S'},{var,424,'P'}],
          [],
          [{call,424,{atom,424,segp_cache},[{var,424,'P'},{var,424,'S'}]},
           {op,424,'+',{var,424,'P'},{integer,424,4}}]}]}}},
     {call,425,
      {remote,425,{atom,425,lists},{atom,425,foldl}},
      [{var,425,'Fun'},
       {integer,127,40},
       {call,425,{atom,425,bin2ints},[{var,425,'Bin'}]}]}]}]},
 {function,427,no_segs,1,
  [{clause,427,
    [{var,427,'NoSlots'}],
    [],
    [{op,428,'+',
      {op,135,'bsr',
       {op,428,'-',{var,428,'NoSlots'},{integer,428,1}},
       {integer,129,8}},
      {integer,428,1}}]}]},
 {function,430,bin2ints,1,
  [{clause,430,
    [{bin,430,
      [{bin_element,430,{var,430,'Int'},{integer,430,32},default},
       {bin_element,430,{var,430,'B'},default,[binary]}]}],
    [],
    [{cons,431,
      {var,431,'Int'},
      {call,431,{atom,431,bin2ints},[{var,431,'B'}]}}]},
   {clause,432,[{bin,432,[]}],[],[{nil,433}]}]},
 {function,439,bulk_input,3,
  [{clause,439,
    [{var,439,'Head'},{var,439,'InitFun'},{var,439,'Cntrs'}],
    [],
    [{call,440,
      {atom,440,bulk_input},
      [{var,440,'Head'},
       {var,440,'InitFun'},
       {var,440,'Cntrs'},
       {call,440,{atom,440,make_ref},[]}]}]}]},
 {function,442,bulk_input,4,
  [{clause,442,
    [{var,442,'Head'},{var,442,'InitFun'},{var,442,'Cntrs'},{var,442,'Ref'}],
    [],
    [{'fun',443,
      {clauses,
       [{clause,443,[{atom,443,close}],[],[{atom,444,ok}]},
        {clause,445,
         [{atom,445,read}],
         [],
         [{'case',446,
           {'catch',446,
            {tuple,446,
             [{var,446,'Ref'},
              {call,446,{var,446,'InitFun'},[{atom,446,read}]}]}},
           [{clause,447,
             [{tuple,447,[{var,447,'Ref'},{atom,447,end_of_input}]}],
             [],
             [{atom,448,end_of_input}]},
            {clause,449,
             [{tuple,449,
               [{var,449,'Ref'},
                {tuple,449,[{var,449,'L0'},{var,449,'NewInitFun'}]}]}],
             [[{call,449,{atom,449,is_list},[{var,449,'L0'}]},
               {call,450,{atom,450,is_function},[{var,450,'NewInitFun'}]}]],
             [{match,451,
               {var,451,'Kp'},
               {call,451,
                {remote,451,{atom,451,erlang},{atom,451,element}},
                [{integer,451,11},{var,451,'Head'}]}},
              {'case',452,
               {'catch',452,
                {call,452,
                 {atom,452,bulk_objects},
                 [{var,452,'L0'},
                  {var,452,'Head'},
                  {var,452,'Cntrs'},
                  {var,452,'Kp'},
                  {nil,452}]}},
               [{clause,453,
                 [{tuple,453,[{atom,453,'EXIT'},{var,453,'_Error'}]}],
                 [],
                 [{match,454,
                   {var,454,'_'},
                   {'catch',454,
                    {call,454,{var,454,'NewInitFun'},[{atom,454,close}]}}},
                  {tuple,455,
                   [{atom,455,error},{atom,455,invalid_objects_list}]}]},
                {clause,456,
                 [{var,456,'L'}],
                 [],
                 [{tuple,457,
                   [{var,457,'L'},
                    {call,457,
                     {atom,457,bulk_input},
                     [{var,457,'Head'},
                      {var,457,'NewInitFun'},
                      {var,457,'Cntrs'},
                      {var,457,'Ref'}]}]}]}]}]},
            {clause,459,
             [{tuple,459,[{var,459,'Ref'},{var,459,'Value'}]}],
             [],
             [{tuple,460,
               [{atom,460,error},
                {tuple,460,[{atom,460,init_fun},{var,460,'Value'}]}]}]},
            {clause,461,
             [{var,461,'Error'}],
             [],
             [{call,462,
               {atom,462,throw},
               [{tuple,462,
                 [{atom,462,thrown},{var,462,'Error'}]}]}]}]}]}]}}]}]},
 {function,466,bulk_objects,5,
  [{clause,466,
    [{cons,466,{var,466,'T'},{var,466,'Ts'}},
     {var,466,'Head'},
     {var,466,'Cntrs'},
     {var,466,'Kp'},
     {var,466,'L'}],
    [],
    [{match,467,
      {var,467,'BT'},
      {call,467,{atom,467,term_to_binary},[{var,467,'T'}]}},
     {match,468,
      {var,468,'Sz'},
      {call,468,{atom,468,byte_size},[{var,468,'BT'}]}},
     {match,469,
      {var,469,'LogSz'},
      {call,469,
       {atom,469,sz2pos},
       [{op,469,'+',{var,469,'Sz'},{integer,188,12}}]}},
     {call,470,{atom,470,count_object},[{var,470,'Cntrs'},{var,470,'LogSz'}]},
     {match,471,
      {var,471,'Key'},
      {call,471,{atom,471,element},[{var,471,'Kp'},{var,471,'T'}]}},
     {call,472,
      {atom,472,bulk_objects},
      [{var,472,'Ts'},
       {var,472,'Head'},
       {var,472,'Cntrs'},
       {var,472,'Kp'},
       {cons,472,
        {call,472,
         {atom,472,make_object},
         [{var,472,'Head'},{var,472,'Key'},{var,472,'LogSz'},{var,472,'BT'}]},
        {var,472,'L'}}]}]},
   {clause,473,
    [{nil,473},
     {var,473,'_Head'},
     {var,473,'_Cntrs'},
     {var,473,'_Kp'},
     {var,473,'L'}],
    [],
    [{var,474,'L'}]}]},
 {function,485,output_objs,4,
  [{clause,485,
    [{var,485,'OldVersion'},
     {var,485,'Head'},
     {var,485,'SlotNumbers'},
     {var,485,'Cntrs'}],
    [],
    [{'fun',486,
      {clauses,
       [{clause,486,
         [{atom,486,close}],
         [],
         [{tuple,487,[{atom,487,ok},{integer,487,0},{var,487,'Head'}]}]},
        {clause,488,
         [{nil,488}],
         [],
         [{call,489,
           {atom,489,output_objs},
           [{var,489,'OldVersion'},
            {var,489,'Head'},
            {var,489,'SlotNumbers'},
            {var,489,'Cntrs'}]}]},
        {clause,490,
         [{var,490,'L'}],
         [],
         [{match,492,
           {var,492,'Count'},
           {call,492,
            {remote,492,{atom,492,lists},{atom,492,sort}},
            [{call,492,
              {remote,492,{atom,492,ets},{atom,492,tab2list}},
              [{var,492,'Cntrs'}]}]}},
          {match,493,
           {var,493,'RCount'},
           {call,493,
            {remote,493,{atom,493,lists},{atom,493,reverse}},
            [{var,493,'Count'}]}},
          {match,494,
           {var,494,'NoObjects'},
           {call,494,
            {remote,494,{atom,494,lists},{atom,494,foldl}},
            [{'fun',494,
              {clauses,
               [{clause,494,
                 [{tuple,494,[{var,494,'_Sz'},{var,494,'No'}]},{var,494,'A'}],
                 [],
                 [{op,494,'+',{var,494,'A'},{var,494,'No'}}]}]}},
             {integer,494,0},
             {var,494,'Count'}]}},
          {match,495,
           {tuple,495,[{var,495,'_'},{var,495,'MinSlots'},{var,495,'_'}]},
           {var,495,'SlotNumbers'}},
          {'if',496,
           [{clause,501,[],
             [[{op,501,'=/=',{var,501,'MinSlots'},{atom,501,bulk_init}},
               {op,502,'>',
                {call,502,
                 {atom,502,abs},
                 [{op,502,'-',
                   {op,135,'bsr',{var,502,'NoObjects'},{integer,129,8}},
                   {op,135,'bsr',{var,502,'MinSlots'},{integer,129,8}}}]},
                {integer,502,5}},
               {op,503,'<',
                {var,503,'NoObjects'},
                {op,133,'*',{integer,128,256},{integer,130,8192}}}]],
             [{tuple,504,[{atom,504,try_again},{var,504,'NoObjects'}]}]},
            {clause,505,[],
             [[{atom,505,true}]],
             [{match,506,
               {var,506,'Head1'},
               {call,506,
                {remote,506,{atom,506,erlang},{atom,506,setelement}},
                [{integer,506,6},{var,506,'Head'},{var,506,'NoObjects'}]}},
              {match,507,
               {var,507,'SegSz'},
               {call,507,{atom,507,actual_seg_size},[]}},
              {match,508,
               {tuple,508,[{var,508,'_'},{var,508,'End'},{var,508,'_'}]},
               {call,508,
                {remote,508,{atom,508,dets_utils},{atom,508,alloc}},
                [{var,508,'Head'},
                 {op,508,'-',{var,508,'SegSz'},{integer,508,1}}]}},
              {match,511,
               {tuple,511,[{var,511,'Head2'},{var,511,'CT'}]},
               {call,511,
                {atom,511,allocate_all_objects},
                [{var,511,'Head1'},{var,511,'RCount'},{var,511,'Cntrs'}]}},
              {match,512,
               {cons,512,{var,512,'E'},{var,512,'Es'}},
               {call,512,{atom,512,bin2term},[{var,512,'L'},{nil,512}]}},
              {match,513,
               {tuple,513,[{var,513,'NE'},{var,513,'Acc'},{var,513,'DCT1'}]},
               {call,514,
                {atom,514,output_slots},
                [{var,514,'E'},
                 {var,514,'Es'},
                 {cons,514,{var,514,'E'},{nil,514}},
                 {var,514,'Head2'},
                 {cons,478,{integer,514,0},{var,514,'CT'}}]}},
              {match,515,
               {var,515,'NDCT'},
               {call,515,
                {atom,515,write_all_sizes},
                [{var,515,'DCT1'},{var,515,'Cntrs'}]}},
              {match,516,
               {var,516,'Max'},
               {call,516,
                {remote,516,{atom,516,ets},{atom,516,info}},
                [{var,516,'Cntrs'},{atom,516,size}]}},
              {call,517,
               {atom,517,output_objs2},
               [{var,517,'NE'},
                {var,517,'Acc'},
                {var,517,'Head2'},
                {var,517,'Cntrs'},
                {var,517,'NDCT'},
                {var,517,'End'},
                {var,517,'Max'},
                {var,517,'Max'}]}]}]}]}]}}]}]},
 {function,521,output_objs2,8,
  [{clause,521,
    [{var,521,'E'},
     {var,521,'Acc'},
     {var,521,'Head'},
     {var,521,'Cntrs'},
     {var,521,'DCT'},
     {var,521,'End'},
     {integer,521,0},
     {var,521,'MaxNoChunks'}],
    [],
    [{match,522,
      {var,522,'NDCT'},
      {call,522,
       {atom,522,write_all_sizes},
       [{var,522,'DCT'},{var,522,'Cntrs'}]}},
     {call,523,
      {atom,523,output_objs2},
      [{var,523,'E'},
       {var,523,'Acc'},
       {var,523,'Head'},
       {var,523,'Cntrs'},
       {var,523,'NDCT'},
       {var,523,'End'},
       {var,523,'MaxNoChunks'},
       {var,523,'MaxNoChunks'}]}]},
   {clause,524,
    [{var,524,'E'},
     {var,524,'Acc'},
     {var,524,'Head'},
     {var,524,'Cntrs'},
     {var,524,'DCT'},
     {var,524,'End'},
     {var,524,'ChunkI'},
     {var,524,'MaxNoChunks'}],
    [],
    [{'fun',525,
      {clauses,
       [{clause,525,
         [{atom,525,close}],
         [],
         [{match,526,
           {var,526,'DCT1'},
           {call,526,
            {atom,526,output_slot},
            [{var,526,'Acc'},{var,526,'Head'},{var,526,'DCT'}]}},
          {match,527,
           {var,527,'NDCT'},
           {call,527,
            {atom,527,write_all_sizes},
            [{var,527,'DCT1'},{var,527,'Cntrs'}]}},
          {match,528,
           {cons,478,{var,528,'NoDups'},{var,528,'CT'}},
           {var,528,'NDCT'}},
          {match,529,
           {cons,529,{var,529,'SegAddr'},{nil,529}},
           {call,482,
            {atom,482,element},
            [{call,529,{atom,529,tuple_size},[{var,529,'CT'}]},
             {var,529,'CT'}]}},
          {match,530,
           {var,530,'FinalZ'},
           {op,530,'-',{var,530,'End'},{var,530,'SegAddr'}}},
          {match,531,
           {cons,531,
            {tuple,531,
             [{integer,476,10000},
              {var,531,'_'},
              {tuple,531,[{var,531,'FileName'},{var,531,'Fd'}]},
              {var,531,'_'}]},
            {nil,531}},
           {call,532,
            {remote,532,{atom,532,ets},{atom,532,lookup}},
            [{var,532,'Cntrs'},{integer,476,10000}]}},
          {match,533,
           {atom,533,ok},
           {call,533,
            {remote,533,{atom,533,dets_utils},{atom,533,fwrite}},
            [{var,533,'Fd'},
             {var,533,'FileName'},
             {call,534,
              {remote,534,{atom,534,dets_utils},{atom,534,make_zeros}},
              [{var,534,'FinalZ'}]}]}},
          {match,535,
           {var,535,'NewHead'},
           {call,535,
            {remote,535,{atom,535,erlang},{atom,535,setelement}},
            [{integer,535,6},
             {var,535,'Head'},
             {op,535,'-',
              {call,535,
               {remote,535,{atom,535,erlang},{atom,535,element}},
               [{integer,535,6},{var,535,'Head'}]},
              {var,535,'NoDups'}}]}},
          {tuple,536,[{atom,536,ok},{var,536,'NoDups'},{var,536,'NewHead'}]}]},
        {clause,537,
         [{var,537,'L'}],
         [],
         [{match,538,
           {var,538,'Es'},
           {call,538,{atom,538,bin2term},[{var,538,'L'},{nil,538}]}},
          {match,539,
           {tuple,539,[{var,539,'NE'},{var,539,'NAcc'},{var,539,'NDCT'}]},
           {call,539,
            {atom,539,output_slots},
            [{var,539,'E'},
             {var,539,'Es'},
             {var,539,'Acc'},
             {var,539,'Head'},
             {var,539,'DCT'}]}},
          {call,540,
           {atom,540,output_objs2},
           [{var,540,'NE'},
            {var,540,'NAcc'},
            {var,540,'Head'},
            {var,540,'Cntrs'},
            {var,540,'NDCT'},
            {var,540,'End'},
            {op,541,'-',{var,541,'ChunkI'},{integer,541,1}},
            {var,541,'MaxNoChunks'}]}]}]}}]}]},
 {function,549,allocate_all_objects,3,
  [{clause,549,
    [{var,549,'Head'},{var,549,'Count'},{var,549,'Cntrs'}],
    [],
    [{match,550,{var,550,'SegSize'},{call,550,{atom,550,actual_seg_size},[]}},
     {match,551,
      {tuple,551,
       [{var,551,'Head1'},{var,551,'HSz'},{var,551,'HN'},{var,551,'HA'}]},
      {call,551,
       {atom,551,alloc_hole},
       [{var,551,'Count'},{var,551,'Head'},{var,551,'SegSize'}]}},
     {match,552,
      {tuple,552,[{var,552,'Max'},{var,552,'_'}]},
      {call,552,{atom,552,hd},[{var,552,'Count'}]}},
     {match,553,
      {var,553,'CT'},
      {call,480,
       {remote,480,{atom,480,erlang},{atom,480,make_tuple}},
       [{op,553,'+',{var,553,'Max'},{integer,553,1}},{atom,553,not_used}]}},
     {match,554,
      {tuple,554,[{var,554,'Head2'},{var,554,'NCT'}]},
      {call,554,
       {atom,554,allocate_all},
       [{var,554,'Head1'},
        {var,554,'Count'},
        {var,554,'Cntrs'},
        {var,554,'CT'}]}},
     {match,555,
      {var,555,'Head3'},
      {call,555,
       {atom,555,free_hole},
       [{var,555,'Head2'},{var,555,'HSz'},{var,555,'HN'},{var,555,'HA'}]}},
     {tuple,556,[{var,556,'Head3'},{var,556,'NCT'}]}]}]},
 {function,558,alloc_hole,3,
  [{clause,558,
    [{cons,558,{tuple,558,[{var,558,'LSize'},{var,558,'_'}]},{var,558,'_'}},
     {var,558,'Head'},
     {var,558,'SegSz'}],
    [[{op,558,'>',
       {op,42,'bsl',
        {integer,42,1},
        {op,558,'-',{var,558,'LSize'},{integer,558,1}}},
       {var,558,'SegSz'}}]],
    [{match,559,
      {tuple,559,[{var,559,'_'},{var,559,'SegAddr'},{var,559,'_'}]},
      {call,559,
       {remote,559,{atom,559,dets_utils},{atom,559,alloc}},
       [{var,559,'Head'},{op,559,'-',{var,559,'SegSz'},{integer,559,1}}]}},
     {match,560,
      {var,560,'Size'},
      {op,560,'-',
       {op,42,'bsl',
        {integer,42,1},
        {op,560,'-',{var,560,'LSize'},{integer,560,1}}},
       {integer,560,1}}},
     {match,561,
      {tuple,561,[{var,561,'_'},{var,561,'Addr'},{var,561,'_'}]},
      {call,561,
       {remote,561,{atom,561,dets_utils},{atom,561,alloc}},
       [{var,561,'Head'},{var,561,'Size'}]}},
     {match,562,
      {var,562,'N'},
      {op,562,'div',
       {op,562,'-',{var,562,'Addr'},{var,562,'SegAddr'}},
       {var,562,'SegSz'}}},
     {match,563,
      {var,563,'Head1'},
      {call,563,
       {remote,563,{atom,563,dets_utils},{atom,563,alloc_many}},
       [{var,563,'Head'},
        {var,563,'SegSz'},
        {var,563,'N'},
        {var,563,'SegAddr'}]}},
     {tuple,564,
      [{var,564,'Head1'},
       {op,564,'-',{var,564,'SegSz'},{integer,564,1}},
       {var,564,'N'},
       {var,564,'SegAddr'}]}]},
   {clause,565,
    [{var,565,'_Count'},{var,565,'Head'},{var,565,'_SegSz'}],
    [],
    [{tuple,566,
      [{var,566,'Head'},{integer,566,0},{integer,566,0},{integer,566,0}]}]}]},
 {function,568,free_hole,4,
  [{clause,568,
    [{var,568,'Head'},{var,568,'_Size'},{integer,568,0},{var,568,'_Addr'}],
    [],
    [{var,569,'Head'}]},
   {clause,570,
    [{var,570,'Head'},{var,570,'Size'},{var,570,'N'},{var,570,'Addr'}],
    [],
    [{match,571,
      {tuple,571,[{var,571,'Head1'},{var,571,'_'}]},
      {call,571,
       {remote,571,{atom,571,dets_utils},{atom,571,free}},
       [{var,571,'Head'},{var,571,'Addr'},{var,571,'Size'}]}},
     {call,572,
      {atom,572,free_hole},
      [{var,572,'Head1'},
       {var,572,'Size'},
       {op,572,'-',{var,572,'N'},{integer,572,1}},
       {op,572,'+',
        {op,572,'+',{var,572,'Addr'},{var,572,'Size'}},
        {integer,572,1}}]}]}]},
 {function,576,allocate_all,4,
  [{clause,576,
    [{var,576,'Head'},
     {cons,576,
      {tuple,576,[{var,576,'LSize'},{var,576,'NoObjects'}]},
      {var,576,'Count'}},
     {var,576,'Cntrs'},
     {var,576,'CT'}],
    [],
    [{match,577,
      {var,577,'Size'},
      {op,577,'-',
       {op,42,'bsl',
        {integer,42,1},
        {op,577,'-',{var,577,'LSize'},{integer,577,1}}},
       {integer,577,1}}},
     {match,578,
      {tuple,578,[{var,578,'_Head'},{var,578,'Addr'},{var,578,'_'}]},
      {call,578,
       {remote,578,{atom,578,dets_utils},{atom,578,alloc}},
       [{var,578,'Head'},{var,578,'Size'}]}},
     {match,579,
      {var,579,'NewHead'},
      {call,579,
       {remote,579,{atom,579,dets_utils},{atom,579,alloc_many}},
       [{var,579,'Head'},
        {op,579,'+',{var,579,'Size'},{integer,579,1}},
        {var,579,'NoObjects'},
        {var,579,'Addr'}]}},
     {match,580,
      {tuple,580,[{var,580,'FileName'},{var,580,'Fd'}]},
      {call,580,{atom,580,temp_file},[{var,580,'Head'},{var,580,'LSize'}]}},
     {match,581,
      {atom,581,true},
      {call,581,
       {remote,581,{atom,581,ets},{atom,581,insert}},
       [{var,581,'Cntrs'},
        {tuple,581,
         [{var,581,'LSize'},
          {var,581,'Addr'},
          {tuple,581,[{var,581,'FileName'},{var,581,'Fd'}]},
          {var,581,'NoObjects'}]}]}},
     {match,582,
      {var,582,'NCT'},
      {call,481,
       {atom,481,setelement},
       [{var,582,'LSize'},
        {var,582,'CT'},
        {cons,582,{var,582,'Addr'},{nil,582}}]}},
     {call,583,
      {atom,583,allocate_all},
      [{var,583,'NewHead'},
       {var,583,'Count'},
       {var,583,'Cntrs'},
       {var,583,'NCT'}]}]},
   {clause,584,
    [{var,584,'Head'},{nil,584},{var,584,'Cntrs'},{var,584,'CT'}],
    [],
    [{match,587,
      {tuple,587,[{var,587,'FileName'},{var,587,'Fd'}]},
      {call,587,{atom,587,temp_file},[{var,587,'Head'},{integer,476,10000}]}},
     {match,588,
      {var,588,'Addr'},
      {op,131,'+',
       {integer,127,40},
       {op,131,'*',{integer,131,4},{integer,130,8192}}}},
     {match,589,
      {atom,589,true},
      {call,589,
       {remote,589,{atom,589,ets},{atom,589,insert}},
       [{var,589,'Cntrs'},
        {tuple,589,
         [{integer,476,10000},
          {var,589,'Addr'},
          {tuple,589,[{var,589,'FileName'},{var,589,'Fd'}]},
          {integer,589,0}]}]}},
     {match,590,
      {var,590,'NCT'},
      {call,481,
       {atom,481,setelement},
       [{call,590,{atom,590,tuple_size},[{var,590,'CT'}]},
        {var,590,'CT'},
        {cons,590,{var,590,'Addr'},{nil,590}}]}},
     {tuple,591,[{var,591,'Head'},{var,591,'NCT'}]}]}]},
 {function,593,temp_file,2,
  [{clause,593,
    [{var,593,'Head'},{var,593,'N'}],
    [],
    [{match,594,
      {var,594,'TmpName'},
      {call,594,
       {remote,594,{atom,594,lists},{atom,594,concat}},
       [{cons,594,
         {call,594,
          {remote,594,{atom,594,erlang},{atom,594,element}},
          [{integer,594,23},{var,594,'Head'}]},
         {cons,594,{atom,594,'.'},{cons,594,{var,594,'N'},{nil,594}}}}]}},
     {match,595,
      {tuple,595,[{atom,595,ok},{var,595,'Fd'}]},
      {call,595,
       {remote,595,{atom,595,dets_utils},{atom,595,open}},
       [{var,595,'TmpName'},
        {cons,595,
         {atom,595,raw},
         {cons,595,
          {atom,595,binary},
          {cons,595,{atom,595,write},{nil,595}}}}]}},
     {tuple,596,[{var,596,'TmpName'},{var,596,'Fd'}]}]}]},
 {function,598,bin2term,2,
  [{clause,598,
    [{cons,598,
      {bin,598,
       [{bin_element,598,{var,598,'Slot'},{integer,598,32},default},
        {bin_element,598,{var,598,'LogSize'},{integer,598,8},default},
        {bin_element,598,{var,598,'BinTerm'},default,[binary]}]},
      {var,598,'BTs'}},
     {var,598,'L'}],
    [],
    [{call,599,
      {atom,599,bin2term},
      [{var,599,'BTs'},
       {cons,599,
        {tuple,599,[{var,599,'Slot'},{var,599,'LogSize'},{var,599,'BinTerm'}]},
        {var,599,'L'}}]}]},
   {clause,600,
    [{nil,600},{var,600,'L'}],
    [],
    [{call,601,
      {remote,601,{atom,601,lists},{atom,601,reverse}},
      [{var,601,'L'}]}]}]},
 {function,603,write_all_sizes,2,
  [{clause,603,
    [{cons,478,{var,603,'D'},{var,603,'CT'}},{var,603,'Cntrs'}],
    [],
    [{cons,478,
      {var,604,'D'},
      {call,604,
       {atom,604,write_sizes},
       [{integer,604,1},
        {call,604,{atom,604,tuple_size},[{var,604,'CT'}]},
        {var,604,'CT'},
        {var,604,'Cntrs'}]}}]}]},
 {function,606,write_sizes,4,
  [{clause,606,
    [{var,606,'Sz'},{var,606,'Sz'},{var,606,'CT'},{var,606,'Cntrs'}],
    [],
    [{call,607,
      {atom,607,write_size},
      [{var,607,'Sz'},{integer,476,10000},{var,607,'CT'},{var,607,'Cntrs'}]}]},
   {clause,608,
    [{var,608,'Sz'},{var,608,'MaxSz'},{var,608,'CT'},{var,608,'Cntrs'}],
    [],
    [{match,609,
      {var,609,'NCT'},
      {call,609,
       {atom,609,write_size},
       [{var,609,'Sz'},{var,609,'Sz'},{var,609,'CT'},{var,609,'Cntrs'}]}},
     {call,610,
      {atom,610,write_sizes},
      [{op,610,'+',{var,610,'Sz'},{integer,610,1}},
       {var,610,'MaxSz'},
       {var,610,'NCT'},
       {var,610,'Cntrs'}]}]}]},
 {function,612,write_size,4,
  [{clause,612,
    [{var,612,'Sz'},{var,612,'I'},{var,612,'CT'},{var,612,'Cntrs'}],
    [],
    [{'case',613,
      {call,482,{atom,482,element},[{var,613,'Sz'},{var,613,'CT'}]},
      [{clause,614,[{atom,614,not_used}],[],[{var,615,'CT'}]},
       {clause,616,
        [{cons,616,{var,616,'Addr'},{var,616,'L'}}],
        [],
        [{match,617,
          {tuple,617,[{var,617,'FileName'},{var,617,'Fd'}]},
          {call,617,
           {remote,617,{atom,617,ets},{atom,617,lookup_element}},
           [{var,617,'Cntrs'},{var,617,'I'},{integer,617,3}]}},
         {'case',618,
          {call,618,
           {remote,618,{atom,618,file},{atom,618,write}},
           [{var,618,'Fd'},
            {call,618,
             {remote,618,{atom,618,lists},{atom,618,reverse}},
             [{var,618,'L'}]}]},
          [{clause,619,
            [{atom,619,ok}],
            [],
            [{call,481,
              {atom,481,setelement},
              [{var,620,'Sz'},
               {var,620,'CT'},
               {cons,620,{var,620,'Addr'},{nil,620}}]}]},
           {clause,621,
            [{var,621,'Error'}],
            [],
            [{call,622,
              {remote,622,{atom,622,dets_utils},{atom,622,file_error}},
              [{var,622,'FileName'},{var,622,'Error'}]}]}]}]}]}]}]},
 {function,626,output_slots,5,
  [{clause,626,
    [{var,626,'E'},
     {cons,626,{var,626,'E1'},{var,626,'Es'}},
     {var,626,'Acc'},
     {var,626,'Head'},
     {var,626,'DCT'}],
    [[{op,627,'=:=',
       {call,627,{atom,627,element},[{integer,627,1},{var,627,'E'}]},
       {call,627,{atom,627,element},[{integer,627,1},{var,627,'E1'}]}}]],
    [{call,628,
      {atom,628,output_slots},
      [{var,628,'E1'},
       {var,628,'Es'},
       {cons,628,{var,628,'E1'},{var,628,'Acc'}},
       {var,628,'Head'},
       {var,628,'DCT'}]}]},
   {clause,629,
    [{var,629,'_E'},
     {cons,629,{var,629,'E'},{var,629,'L'}},
     {var,629,'Acc'},
     {var,629,'Head'},
     {var,629,'DCT'}],
    [],
    [{match,630,
      {var,630,'NDCT'},
      {call,630,
       {atom,630,output_slot},
       [{var,630,'Acc'},{var,630,'Head'},{var,630,'DCT'}]}},
     {call,631,
      {atom,631,output_slots},
      [{var,631,'E'},
       {var,631,'L'},
       {cons,631,{var,631,'E'},{nil,631}},
       {var,631,'Head'},
       {var,631,'NDCT'}]}]},
   {clause,632,
    [{var,632,'E'},
     {nil,632},
     {var,632,'Acc'},
     {var,632,'_Head'},
     {var,632,'DCT'}],
    [],
    [{tuple,633,[{var,633,'E'},{var,633,'Acc'},{var,633,'DCT'}]}]}]},
 {function,635,output_slot,3,
  [{clause,635,
    [{cons,635,{var,635,'E'},{nil,635}},
     {var,635,'_Head'},
     {cons,478,{var,635,'D'},{var,635,'CT'}}],
    [],
    [{cons,478,
      {var,636,'D'},
      {call,636,
       {atom,636,output_slot},
       [{cons,636,{tuple,636,[{atom,636,foo},{var,636,'E'}]},{nil,636}},
        {integer,636,0},
        {atom,636,foo},
        {var,636,'CT'}]}}]},
   {clause,637,
    [{var,637,'Es0'},{var,637,'Head'},{cons,478,{var,637,'D'},{var,637,'CT'}}],
    [],
    [{match,638,
      {var,638,'Kp'},
      {call,638,
       {remote,638,{atom,638,erlang},{atom,638,element}},
       [{integer,638,11},{var,638,'Head'}]}},
     {match,639,
      {var,639,'Fun'},
      {'fun',639,
       {clauses,
        [{clause,639,
          [{match,639,
            {tuple,639,
             [{var,639,'_Slot'},{var,639,'_LSize'},{var,639,'BinTerm'}]},
            {var,639,'E'}}],
          [],
          [{match,640,
            {var,640,'Key'},
            {call,640,
             {atom,640,element},
             [{var,640,'Kp'},
              {call,640,{atom,640,binary_to_term},[{var,640,'BinTerm'}]}]}},
           {tuple,641,[{var,641,'Key'},{var,641,'E'}]}]}]}}},
     {match,643,
      {var,643,'Es'},
      {call,643,
       {remote,643,{atom,643,lists},{atom,643,map}},
       [{var,643,'Fun'},{var,643,'Es0'}]}},
     {match,644,
      {var,644,'NEs'},
      {'case',644,
       {call,644,
        {remote,644,{atom,644,erlang},{atom,644,element}},
        [{integer,644,10},{var,644,'Head'}]},
       [{clause,645,
         [{atom,645,set}],
         [],
         [{match,646,
           {cons,646,
            {match,646,
             {tuple,646,[{var,646,'Key0'},{var,646,'_'}]},
             {var,646,'E'}},
            {var,646,'L0'}},
           {call,646,
            {remote,646,{atom,646,lists},{atom,646,sort}},
            [{var,646,'Es'}]}},
          {call,647,
           {atom,647,choose_one},
           [{call,647,
             {remote,647,{atom,647,lists},{atom,647,sort}},
             [{var,647,'L0'}]},
            {var,647,'Key0'},
            {cons,647,{var,647,'E'},{nil,647}}]}]},
        {clause,648,
         [{atom,648,bag}],
         [],
         [{call,649,
           {remote,649,{atom,649,lists},{atom,649,usort}},
           [{var,649,'Es'}]}]},
        {clause,650,
         [{atom,650,duplicate_bag}],
         [],
         [{call,651,
           {remote,651,{atom,651,lists},{atom,651,sort}},
           [{var,651,'Es'}]}]}]}},
     {match,653,
      {var,653,'Dups'},
      {op,653,'-',
       {op,653,'+',
        {var,653,'D'},
        {call,653,{atom,653,length},[{var,653,'Es'}]}},
       {call,653,{atom,653,length},[{var,653,'NEs'}]}}},
     {cons,478,
      {var,654,'Dups'},
      {call,654,
       {atom,654,output_slot},
       [{var,654,'NEs'},{integer,654,0},{atom,654,foo},{var,654,'CT'}]}}]}]},
 {function,656,choose_one,3,
  [{clause,656,
    [{cons,656,{tuple,656,[{var,656,'Key'},{var,656,'_'}]},{var,656,'Es'}},
     {var,656,'Key'},
     {var,656,'L'}],
    [],
    [{call,657,
      {atom,657,choose_one},
      [{var,657,'Es'},{var,657,'Key'},{var,657,'L'}]}]},
   {clause,658,
    [{cons,658,
      {match,658,{tuple,658,[{var,658,'Key'},{var,658,'_'}]},{var,658,'E'}},
      {var,658,'Es'}},
     {var,658,'_Key'},
     {var,658,'L'}],
    [],
    [{call,659,
      {atom,659,choose_one},
      [{var,659,'Es'},
       {var,659,'Key'},
       {cons,659,{var,659,'E'},{var,659,'L'}}]}]},
   {clause,660,
    [{nil,660},{var,660,'_Key'},{var,660,'L'}],
    [],
    [{var,661,'L'}]}]},
 {function,663,output_slot,4,
  [{clause,663,
    [{cons,663,{var,663,'E'},{var,663,'Es'}},
     {var,663,'Next'},
     {var,663,'_Slot'},
     {var,663,'CT'}],
    [],
    [{match,664,
      {tuple,664,
       [{var,664,'_Key'},
        {tuple,664,[{var,664,'Slot'},{var,664,'LSize'},{var,664,'BinTerm'}]}]},
      {var,664,'E'}},
     {match,665,
      {var,665,'Size'},
      {call,665,{atom,665,byte_size},[{var,665,'BinTerm'}]}},
     {match,666,
      {var,666,'Size2'},
      {op,42,'bsl',
       {integer,42,1},
       {op,666,'-',{var,666,'LSize'},{integer,666,1}}}},
     {match,667,
      {var,667,'Pad'},
      {bin,667,
       [{bin_element,667,
         {integer,667,0},
         {op,667,'-',
          {op,667,'-',{var,667,'Size2'},{var,667,'Size'}},
          {integer,188,12}},
         [{unit,8}]}]}},
     {match,668,
      {var,668,'BinObject'},
      {cons,668,
       {bin,668,
        [{bin_element,668,{var,668,'Next'},{integer,668,32},default},
         {bin_element,668,{var,668,'Size'},{integer,668,32},default},
         {bin_element,34,{integer,34,305419896},{integer,668,32},default}]},
       {cons,668,{var,668,'BinTerm'},{var,668,'Pad'}}}},
     {match,669,
      {cons,669,{var,669,'Addr'},{var,669,'L'}},
      {call,482,{atom,482,element},[{var,669,'LSize'},{var,669,'CT'}]}},
     {match,670,
      {var,670,'NCT'},
      {call,481,
       {atom,481,setelement},
       [{var,670,'LSize'},
        {var,670,'CT'},
        {cons,670,
         {op,670,'+',{var,670,'Addr'},{var,670,'Size2'}},
         {cons,670,{var,670,'BinObject'},{var,670,'L'}}}]}},
     {call,671,
      {atom,671,output_slot},
      [{var,671,'Es'},{var,671,'Addr'},{var,671,'Slot'},{var,671,'NCT'}]}]},
   {clause,672,
    [{nil,672},{var,672,'Next'},{var,672,'Slot'},{var,672,'CT'}],
    [],
    [{match,673,
      {var,673,'I'},
      {call,673,{atom,673,tuple_size},[{var,673,'CT'}]}},
     {match,674,
      {cons,674,{var,674,'Addr'},{var,674,'L'}},
      {call,482,{atom,482,element},[{var,674,'I'},{var,674,'CT'}]}},
     {match,675,
      {tuple,675,[{var,675,'Pos'},{var,675,'_'}]},
      {call,675,{atom,675,slot_position},[{var,675,'Slot'}]}},
     {match,676,
      {var,676,'NoZeros'},
      {op,676,'-',{var,676,'Pos'},{var,676,'Addr'}}},
     {match,677,
      {var,677,'BinObject'},
      {'if',677,
       [{clause,678,[],
         [[{op,678,'>',{var,678,'NoZeros'},{integer,678,100}}]],
         [{cons,679,
           {call,679,
            {remote,679,{atom,679,dets_utils},{atom,679,make_zeros}},
            [{var,679,'NoZeros'}]},
           {bin,679,
            [{bin_element,679,{var,679,'Next'},{integer,679,32},default}]}}]},
        {clause,680,[],
         [[{atom,680,true}]],
         [{bin,681,
           [{bin_element,681,{integer,681,0},{var,681,'NoZeros'},[{unit,8}]},
            {bin_element,681,{var,681,'Next'},{integer,681,32},default}]}]}]}},
     {match,683,
      {var,683,'Size'},
      {op,683,'+',{var,683,'NoZeros'},{integer,683,4}}},
     {call,481,
      {atom,481,setelement},
      [{var,684,'I'},
       {var,684,'CT'},
       {cons,684,
        {op,684,'+',{var,684,'Addr'},{var,684,'Size'}},
        {cons,684,{var,684,'BinObject'},{var,684,'L'}}}]}]}]},
 {function,687,fsck_input,4,
  [{clause,687,
    [{var,687,'Head'},
     {var,687,'Fd'},
     {var,687,'Cntrs'},
     {var,687,'_FileHeader'}],
    [],
    [{match,690,
      {var,690,'MaxSz'},
      {'case',690,
       {call,690,
        {remote,690,{atom,690,file},{atom,690,position}},
        [{var,690,'Fd'},{atom,690,eof}]},
       [{clause,691,
         [{tuple,691,[{atom,691,ok},{var,691,'Pos'}]}],
         [],
         [{var,692,'Pos'}]},
        {clause,693,
         [{var,693,'_'}],
         [],
         [{op,694,'-',
           {op,694,'bsl',{integer,694,1},{integer,694,32}},
           {integer,694,1}}]}]}},
     {match,696,
      {var,696,'State0'},
      {call,696,
       {atom,696,fsck_read},
       [{op,131,'+',
         {integer,127,40},
         {op,131,'*',
          {integer,131,4},
          {op,132,'+',{integer,128,256},{integer,130,8192}}}},
        {var,696,'Fd'},
        {nil,696}]}},
     {call,697,
      {atom,697,fsck_input1},
      [{var,697,'Head'},
       {var,697,'State0'},
       {var,697,'Fd'},
       {var,697,'MaxSz'},
       {var,697,'Cntrs'}]}]}]},
 {function,699,fsck_input1,5,
  [{clause,699,
    [{var,699,'Head'},
     {var,699,'State'},
     {var,699,'Fd'},
     {var,699,'MaxSz'},
     {var,699,'Cntrs'}],
    [],
    [{'fun',700,
      {clauses,
       [{clause,700,[{atom,700,close}],[],[{atom,701,ok}]},
        {clause,702,
         [{atom,702,read}],
         [],
         [{'case',703,
           {var,703,'State'},
           [{clause,704,[{atom,704,done}],[],[{atom,705,end_of_input}]},
            {clause,706,
             [{tuple,706,[{atom,706,done},{var,706,'L'}]}],
             [],
             [{match,707,
               {var,707,'R'},
               {call,707,
                {atom,707,count_input},
                [{var,707,'Cntrs'},{var,707,'L'},{nil,707}]}},
              {tuple,708,
               [{var,708,'R'},
                {call,708,
                 {atom,708,fsck_input1},
                 [{var,708,'Head'},
                  {atom,708,done},
                  {var,708,'Fd'},
                  {var,708,'MaxSz'},
                  {var,708,'Cntrs'}]}]}]},
            {clause,709,
             [{tuple,709,
               [{atom,709,cont},
                {var,709,'L'},
                {var,709,'Bin'},
                {var,709,'Pos'}]}],
             [],
             [{match,710,
               {var,710,'R'},
               {call,710,
                {atom,710,count_input},
                [{var,710,'Cntrs'},{var,710,'L'},{nil,710}]}},
              {match,711,
               {var,711,'FR'},
               {call,711,
                {atom,711,fsck_objs},
                [{var,711,'Bin'},
                 {call,711,
                  {remote,711,{atom,711,erlang},{atom,711,element}},
                  [{integer,711,11},{var,711,'Head'}]},
                 {var,711,'Head'},
                 {nil,711}]}},
              {match,712,
               {var,712,'NewState'},
               {call,712,
                {atom,712,fsck_read},
                [{var,712,'FR'},
                 {var,712,'Pos'},
                 {var,712,'Fd'},
                 {var,712,'MaxSz'},
                 {var,712,'Head'}]}},
              {tuple,713,
               [{var,713,'R'},
                {call,713,
                 {atom,713,fsck_input1},
                 [{var,713,'Head'},
                  {var,713,'NewState'},
                  {var,713,'Fd'},
                  {var,713,'MaxSz'},
                  {var,713,'Cntrs'}]}]}]}]}]}]}}]}]},
 {function,718,count_input,3,
  [{clause,718,
    [{var,718,'Cntrs'},
     {cons,718,{cons,718,{var,718,'LogSz'},{var,718,'B'}},{var,718,'Ts'}},
     {var,718,'L'}],
    [],
    [{call,719,{atom,719,count_object},[{var,719,'Cntrs'},{var,719,'LogSz'}]},
     {call,720,
      {atom,720,count_input},
      [{var,720,'Cntrs'},
       {var,720,'Ts'},
       {cons,720,{var,720,'B'},{var,720,'L'}}]}]},
   {clause,721,
    [{var,721,'_Cntrs'},{nil,721},{var,721,'L'}],
    [],
    [{var,722,'L'}]}]},
 {function,724,count_object,2,
  [{clause,724,
    [{var,724,'Cntrs'},{var,724,'LogSz'}],
    [],
    [{'case',725,
      {'catch',725,
       {call,725,
        {remote,725,{atom,725,ets},{atom,725,update_counter}},
        [{var,725,'Cntrs'},{var,725,'LogSz'},{integer,725,1}]}},
      [{clause,726,
        [{var,726,'N'}],
        [[{call,726,{atom,726,is_integer},[{var,726,'N'}]}]],
        [{atom,726,ok}]},
       {clause,727,
        [{var,727,'_Badarg'}],
        [],
        [{match,727,
          {atom,727,true},
          {call,727,
           {remote,727,{atom,727,ets},{atom,727,insert}},
           [{var,727,'Cntrs'},
            {tuple,727,[{var,727,'LogSz'},{integer,727,1}]}]}}]}]}]}]},
 {function,730,fsck_read,3,
  [{clause,730,
    [{var,730,'Pos'},{var,730,'F'},{var,730,'L'}],
    [],
    [{'case',731,
      {call,731,
       {remote,731,{atom,731,file},{atom,731,position}},
       [{var,731,'F'},{var,731,'Pos'}]},
      [{clause,732,
        [{tuple,732,[{atom,732,ok},{var,732,'_'}]}],
        [],
        [{call,733,
          {atom,733,read_more_bytes},
          [{bin,733,[]},
           {integer,733,0},
           {var,733,'Pos'},
           {var,733,'F'},
           {var,733,'L'}]}]},
       {clause,734,
        [{var,734,'_Error'}],
        [],
        [{tuple,735,[{atom,735,done},{var,735,'L'}]}]}]}]}]},
 {function,738,fsck_read,5,
  [{clause,738,
    [{tuple,738,
      [{atom,738,more},{var,738,'Bin'},{var,738,'Sz'},{var,738,'L'}]},
     {var,738,'Pos'},
     {var,738,'F'},
     {var,738,'MaxSz'},
     {var,738,'Head'}],
    [[{op,738,'>',{var,738,'Sz'},{var,738,'MaxSz'}}]],
    [{match,739,
      {var,739,'FR'},
      {call,739,
       {atom,739,skip_bytes},
       [{var,739,'Bin'},
        {integer,193,16},
        {call,739,
         {remote,739,{atom,739,erlang},{atom,739,element}},
         [{integer,739,11},{var,739,'Head'}]},
        {var,739,'Head'},
        {var,739,'L'}]}},
     {call,740,
      {atom,740,fsck_read},
      [{var,740,'FR'},
       {var,740,'Pos'},
       {var,740,'F'},
       {var,740,'MaxSz'},
       {var,740,'Head'}]}]},
   {clause,741,
    [{tuple,741,
      [{atom,741,more},{var,741,'Bin'},{var,741,'Sz'},{var,741,'L'}]},
     {var,741,'Pos'},
     {var,741,'F'},
     {var,741,'_MaxSz'},
     {var,741,'_Head'}],
    [],
    [{call,742,
      {atom,742,read_more_bytes},
      [{var,742,'Bin'},
       {var,742,'Sz'},
       {var,742,'Pos'},
       {var,742,'F'},
       {var,742,'L'}]}]},
   {clause,743,
    [{tuple,743,[{atom,743,new},{var,743,'Skip'},{var,743,'L'}]},
     {var,743,'Pos'},
     {var,743,'F'},
     {var,743,'_MaxSz'},
     {var,743,'_Head'}],
    [],
    [{match,744,
      {var,744,'NewPos'},
      {op,744,'+',{var,744,'Pos'},{var,744,'Skip'}}},
     {call,745,
      {atom,745,fsck_read},
      [{var,745,'NewPos'},{var,745,'F'},{var,745,'L'}]}]}]},
 {function,747,read_more_bytes,5,
  [{clause,747,
    [{var,747,'B'},
     {var,747,'Min'},
     {var,747,'Pos'},
     {var,747,'F'},
     {var,747,'L'}],
    [],
    [{match,748,
      {var,748,'Max'},
      {'if',748,
       [{clause,749,[],
         [[{op,749,'<',{var,749,'Min'},{integer,38,8192}}]],
         [{integer,38,8192}]},
        {clause,750,[],[[{atom,750,true}]],[{var,750,'Min'}]}]}},
     {'case',752,
      {call,752,
       {remote,752,{atom,752,dets_utils},{atom,752,read_n}},
       [{var,752,'F'},{var,752,'Max'}]},
      [{clause,753,
        [{atom,753,eof}],
        [],
        [{tuple,754,[{atom,754,done},{var,754,'L'}]}]},
       {clause,755,
        [{var,755,'Bin'}],
        [],
        [{match,756,
          {var,756,'NewPos'},
          {op,756,'+',
           {var,756,'Pos'},
           {call,756,{atom,756,byte_size},[{var,756,'Bin'}]}}},
         {tuple,757,
          [{atom,757,cont},
           {var,757,'L'},
           {call,757,
            {atom,757,list_to_binary},
            [{cons,757,{var,757,'B'},{cons,757,{var,757,'Bin'},{nil,757}}}]},
           {var,757,'NewPos'}]}]}]}]}]},
 {function,760,fsck_objs,4,
  [{clause,760,
    [{match,760,
      {var,760,'Bin'},
      {bin,760,
       [{bin_element,760,{var,760,'_N'},{integer,760,32},default},
        {bin_element,760,{var,760,'Sz'},{integer,760,32},default},
        {bin_element,760,{var,760,'Status'},{integer,760,32},default},
        {bin_element,760,{var,760,'Tail'},default,[binary]}]}},
     {var,760,'Kp'},
     {var,760,'Head'},
     {var,760,'L'}],
    [],
    [{'if',761,
      [{clause,762,[],
        [[{op,762,'=:=',{var,762,'Status'},{integer,34,305419896}}]],
        [{'case',763,
          {var,763,'Tail'},
          [{clause,764,
            [{bin,764,
              [{bin_element,764,{var,764,'BinTerm'},{var,764,'Sz'},[binary]},
               {bin_element,764,{var,764,'Tail2'},default,[binary]}]}],
            [],
            [{'case',765,
              {'catch',765,
               {call,765,
                {atom,765,element},
                [{var,765,'Kp'},
                 {call,765,{atom,765,binary_to_term},[{var,765,'BinTerm'}]}]}},
              [{clause,766,
                [{tuple,766,[{atom,766,'EXIT'},{var,766,'_'}]}],
                [],
                [{call,767,
                  {atom,767,skip_bytes},
                  [{var,767,'Bin'},
                   {integer,193,16},
                   {var,767,'Kp'},
                   {var,767,'Head'},
                   {var,767,'L'}]}]},
               {clause,768,
                [{var,768,'Key'}],
                [],
                [{match,769,
                  {var,769,'LogSz'},
                  {call,769,
                   {atom,769,sz2pos},
                   [{op,769,'+',{var,769,'Sz'},{integer,188,12}}]}},
                 {match,770,
                  {var,770,'Obj'},
                  {call,770,
                   {atom,770,make_object},
                   [{var,770,'Head'},
                    {var,770,'Key'},
                    {var,770,'LogSz'},
                    {var,770,'BinTerm'}]}},
                 {match,771,
                  {var,771,'NL'},
                  {cons,771,
                   {cons,771,{var,771,'LogSz'},{var,771,'Obj'}},
                   {var,771,'L'}}},
                 {match,772,
                  {var,772,'Skip'},
                  {op,772,'-',
                   {op,772,'-',
                    {op,42,'bsl',
                     {integer,42,1},
                     {op,772,'-',{var,772,'LogSz'},{integer,772,1}}},
                    {var,772,'Sz'}},
                   {integer,188,12}}},
                 {call,773,
                  {atom,773,skip_bytes},
                  [{var,773,'Tail2'},
                   {var,773,'Skip'},
                   {var,773,'Kp'},
                   {var,773,'Head'},
                   {var,773,'NL'}]}]}]}]},
           {clause,775,
            [{var,775,'_'}],
            [],
            [{tuple,776,
              [{atom,776,more},
               {var,776,'Bin'},
               {var,776,'Sz'},
               {var,776,'L'}]}]}]}]},
       {clause,778,[],
        [[{atom,778,true}]],
        [{call,779,
          {atom,779,skip_bytes},
          [{var,779,'Bin'},
           {integer,193,16},
           {var,779,'Kp'},
           {var,779,'Head'},
           {var,779,'L'}]}]}]}]},
   {clause,781,
    [{var,781,'Bin'},{var,781,'_Kp'},{var,781,'_Head'},{var,781,'L'}],
    [],
    [{tuple,782,
      [{atom,782,more},{var,782,'Bin'},{integer,782,0},{var,782,'L'}]}]}]},
 {function,785,make_object,4,
  [{clause,785,
    [{var,785,'Head'},{var,785,'Key'},{var,785,'_LogSz'},{var,785,'BT'}],
    [[{op,785,'=:=',
       {call,785,
        {remote,785,{atom,785,erlang},{atom,785,element}},
        [{integer,785,29},{var,785,'Head'}]},
       {integer,785,9}}]],
    [{match,786,
      {var,786,'Slot'},
      {call,786,
       {remote,786,{atom,786,dets_v9},{atom,786,db_hash}},
       [{var,786,'Key'},{var,786,'Head'}]}},
     {bin,787,
      [{bin_element,787,{var,787,'Slot'},{integer,787,32},default},
       {bin_element,787,{var,787,'BT'},default,[binary]}]}]},
   {clause,788,
    [{var,788,'Head'},{var,788,'Key'},{var,788,'LogSz'},{var,788,'BT'}],
    [],
    [{match,789,
      {var,789,'Slot'},
      {call,789,{atom,789,db_hash},[{var,789,'Key'},{var,789,'Head'}]}},
     {bin,790,
      [{bin_element,790,{var,790,'Slot'},{integer,790,32},default},
       {bin_element,790,{var,790,'LogSz'},{integer,790,8},default},
       {bin_element,790,{var,790,'BT'},default,[binary]}]}]}]},
 {function,793,skip_bytes,5,
  [{clause,793,
    [{var,793,'Bin'},
     {var,793,'Skip'},
     {var,793,'Kp'},
     {var,793,'Head'},
     {var,793,'L'}],
    [],
    [{'case',794,
      {var,794,'Bin'},
      [{clause,795,
        [{bin,795,
          [{bin_element,795,{var,795,'_'},{var,795,'Skip'},[binary]},
           {bin_element,795,{var,795,'Tail'},default,[binary]}]}],
        [],
        [{call,796,
          {atom,796,fsck_objs},
          [{var,796,'Tail'},{var,796,'Kp'},{var,796,'Head'},{var,796,'L'}]}]},
       {clause,797,
        [{var,797,'_'}],
        [],
        [{tuple,798,
          [{atom,798,new},
           {op,798,'-',
            {var,798,'Skip'},
            {call,798,{atom,798,byte_size},[{var,798,'Bin'}]}},
           {var,798,'L'}]}]}]}]}]},
 {function,802,do_perform_save,1,
  [{clause,802,
    [{var,802,'H'}],
    [],
    [{match,803,
      {var,803,'FL'},
      {call,803,
       {remote,803,{atom,803,dets_utils},{atom,803,get_freelists}},
       [{var,803,'H'}]}},
     {match,804,
      {var,804,'B'},
      {call,804,{atom,804,term_to_binary},[{var,804,'FL'}]}},
     {match,805,
      {var,805,'Size'},
      {call,805,{atom,805,byte_size},[{var,805,'B'}]}},
     {atom,198,void},
     {atom,198,void},
     {atom,198,void},
     {match,810,
      {tuple,810,[{atom,810,ok},{var,810,'Pos'}]},
      {call,810,
       {remote,810,{atom,810,dets_utils},{atom,810,position}},
       [{var,810,'H'},{atom,810,eof}]}},
     {match,811,
      {var,811,'H1'},
      {call,811,
       {remote,811,{atom,811,erlang},{atom,811,setelement}},
       [{integer,811,13},{var,811,'H'},{var,811,'Pos'}]}},
     {match,812,
      {var,812,'W1'},
      {tuple,812,
       [{integer,142,0},
        {bin,812,
         [{bin_element,812,{var,812,'Pos'},{integer,812,32},default}]}]}},
     {match,813,
      {var,813,'W2'},
      {tuple,813,
       [{var,813,'Pos'},
        {cons,813,
         {bin,813,
          [{bin_element,813,{integer,813,0},{integer,813,32},default},
           {bin_element,813,{var,813,'Size'},{integer,813,32},default},
           {bin_element,33,{integer,33,61591023},{integer,813,32},default}]},
         {cons,813,{var,813,'B'},{nil,813}}}]}},
     {match,815,
      {var,815,'W3'},
      {tuple,815,
       [{integer,144,20},
        {bin,815,
         [{bin_element,815,
           {call,815,
            {remote,815,{atom,815,erlang},{atom,815,element}},
            [{integer,815,2},{var,815,'H1'}]},
           {integer,815,32},
           default},
          {bin_element,816,
           {call,816,
            {remote,816,{atom,816,erlang},{atom,816,element}},
            [{integer,816,4},{var,816,'H1'}]},
           {integer,816,32},
           default},
          {bin_element,817,
           {call,817,
            {remote,817,{atom,817,erlang},{atom,817,element}},
            [{integer,817,11},{var,817,'H1'}]},
           {integer,817,32},
           default},
          {bin_element,818,
           {call,818,
            {remote,818,{atom,818,erlang},{atom,818,element}},
            [{integer,818,6},{var,818,'H1'}]},
           {integer,818,32},
           default},
          {bin_element,819,
           {call,819,
            {remote,819,{atom,819,erlang},{atom,819,element}},
            [{integer,819,9},{var,819,'H1'}]},
           {integer,819,32},
           default}]}]}},
     {match,820,
      {tuple,820,
       [{var,820,'ClosedProperly'},{var,820,'ClosedProperlyNeedCompacitng'}]},
      {'case',821,
       {call,821,
        {remote,821,{atom,821,erlang},{atom,821,element}},
        [{integer,821,18},{var,821,'H1'}]},
       [{clause,822,
         [{atom,822,hash}],
         [],
         [{tuple,823,[{integer,175,2},{integer,176,3}]}]},
        {clause,824,
         [{atom,824,phash}],
         [],
         [{tuple,825,[{integer,177,4},{integer,178,5}]}]}]}},
     {match,828,
      {var,828,'W4'},
      {'if',829,
       [{clause,830,[],
         [[{op,830,'>',{var,830,'Size'},{integer,830,1000}},
           {op,830,'>',
            {var,830,'Size'},
            {call,830,
             {remote,830,{atom,830,erlang},{atom,830,element}},
             [{integer,830,6},{var,830,'H1'}]}}]],
         [{tuple,831,
           [{integer,143,8},
            {bin,832,
             [{bin_element,832,
               {var,832,'ClosedProperlyNeedCompacitng'},
               {integer,832,32},
               default}]}]}]},
        {clause,833,[],
         [[{atom,833,true}]],
         [{tuple,834,
           [{integer,143,8},
            {bin,834,
             [{bin_element,834,
               {var,834,'ClosedProperly'},
               {integer,834,32},
               default}]}]}]}]}},
     {match,836,
      {var,836,'W5'},
      {tuple,836,
       [{integer,36,16},
        {bin,836,
         [{bin_element,180,{integer,180,8},{integer,836,32},default}]}]}},
     {match,837,
      {tuple,837,[{var,837,'H2'},{atom,837,ok}]},
      {call,837,
       {remote,837,{atom,837,dets_utils},{atom,837,pwrite}},
       [{var,837,'H1'},
        {cons,837,
         {var,837,'W1'},
         {cons,837,
          {var,837,'W2'},
          {cons,837,
           {var,837,'W3'},
           {cons,837,{var,837,'W4'},{cons,837,{var,837,'W5'},{nil,837}}}}}}]}},
     {match,838,
      {tuple,838,[{atom,838,ok},{var,838,'Pos2'}]},
      {call,838,
       {remote,838,{atom,838,dets_utils},{atom,838,position}},
       [{var,838,'H2'},{atom,838,eof}]}},
     {atom,198,void},
     {call,840,
      {remote,840,{atom,840,dets_utils},{atom,840,pwrite}},
      [{var,840,'H2'},
       {cons,840,
        {tuple,840,
         [{var,840,'Pos2'},
          {bin,840,
           [{bin_element,840,
             {op,840,'+',{var,840,'Pos2'},{integer,840,4}},
             {integer,840,32},
             default}]}]},
        {nil,840}}]}]}]},
 {function,843,slot_objs,2,
  [{clause,843,
    [{var,843,'H'},{var,843,'Slot'}],
    [[{op,843,'>=',
       {var,843,'Slot'},
       {call,843,
        {remote,843,{atom,843,erlang},{atom,843,element}},
        [{integer,843,4},{var,843,'H'}]}}]],
    [{atom,844,'$end_of_table'}]},
   {clause,845,
    [{var,845,'H'},{var,845,'Slot'}],
    [],
    [{match,846,
      {tuple,846,[{var,846,'_Pos'},{var,846,'Chain'}]},
      {call,846,{atom,846,chain},[{var,846,'H'},{var,846,'Slot'}]}},
     {call,847,{atom,847,collect_chain},[{var,847,'H'},{var,847,'Chain'}]}]}]},
 {function,849,collect_chain,2,
  [{clause,849,[{var,849,'_H'},{integer,849,0}],[],[{nil,849}]},
   {clause,850,
    [{var,850,'H'},{var,850,'Pos'}],
    [],
    [{match,851,
      {tuple,851,[{var,851,'Next'},{var,851,'_Sz'},{var,851,'Term'}]},
      {call,851,
       {atom,851,prterm},
       [{var,851,'H'},{var,851,'Pos'},{integer,195,512}]}},
     {cons,852,
      {var,852,'Term'},
      {call,852,
       {atom,852,collect_chain},
       [{var,852,'H'},{var,852,'Next'}]}}]}]},
 {function,854,db_hash,2,
  [{clause,854,
    [{var,854,'Key'},{var,854,'Head'}],
    [],
    [{match,855,
      {var,855,'H'},
      {call,855,
       {atom,855,h},
       [{var,855,'Key'},
        {call,855,
         {remote,855,{atom,855,erlang},{atom,855,element}},
         [{integer,855,18},{var,855,'Head'}]}]}},
     {match,856,
      {var,856,'Hash'},
      {op,856,'rem',
       {var,856,'H'},
       {call,856,
        {remote,856,{atom,856,erlang},{atom,856,element}},
        [{integer,856,2},{var,856,'Head'}]}}},
     {'if',857,
      [{clause,858,[],
        [[{op,858,'<',
           {var,858,'Hash'},
           {call,858,
            {remote,858,{atom,858,erlang},{atom,858,element}},
            [{integer,858,9},{var,858,'Head'}]}}]],
        [{op,859,'rem',
          {var,859,'H'},
          {call,859,
           {remote,859,{atom,859,erlang},{atom,859,element}},
           [{integer,859,3},{var,859,'Head'}]}}]},
       {clause,860,[],[[{atom,860,true}]],[{var,861,'Hash'}]}]}]}]},
 {function,864,h,2,
  [{clause,864,
    [{var,864,'I'},{atom,864,phash}],
    [],
    [{op,864,'-',
      {call,864,
       {remote,864,{atom,864,erlang},{atom,864,phash}},
       [{var,864,'I'},{integer,139,16777215}]},
      {integer,864,1}}]},
   {clause,865,
    [{var,865,'I'},{var,865,'HF'}],
    [],
    [{op,865,'-',
      {call,865,
       {remote,865,{atom,865,erlang},{var,865,'HF'}},
       [{var,865,'I'},{integer,139,16777215}]},
      {integer,865,1}}]}]},
 {function,867,no_slots,1,
  [{clause,867,[{var,867,'_Head'}],[],[{atom,868,undefined}]}]},
 {function,870,table_parameters,1,
  [{clause,870,[{var,870,'_Head'}],[],[{atom,871,undefined}]}]},
 {function,884,re_hash,2,
  [{clause,884,
    [{var,884,'Head'},{var,884,'SlotStart'}],
    [],
    [{match,885,
      {tuple,885,[{var,885,'SlotPos'},{var,885,'_4'}]},
      {call,885,{atom,885,slot_position},[{var,885,'SlotStart'}]}},
     {match,886,
      {tuple,886,[{atom,886,ok},{var,886,'Bin'}]},
      {call,886,
       {remote,886,{atom,886,dets_utils},{atom,886,pread}},
       [{var,886,'Head'},
        {var,886,'SlotPos'},
        {op,886,'*',{integer,886,4},{integer,128,256}},
        {integer,886,0}]}},
     {match,887,
      {tuple,887,[{var,887,'Read'},{var,887,'Cs'}]},
      {call,887,
       {atom,887,split_bin},
       [{var,887,'SlotPos'},{var,887,'Bin'},{nil,887},{nil,887}]}},
     {call,888,
      {atom,888,re_hash_read},
      [{var,888,'Head'},{nil,888},{var,888,'Read'},{var,888,'Cs'}]}]}]},
 {function,890,split_bin,4,
  [{clause,890,
    [{var,890,'Pos'},
     {bin,890,
      [{bin_element,890,{var,890,'P'},{integer,890,32},default},
       {bin_element,890,{var,890,'B'},default,[binary]}]},
     {var,890,'R'},
     {var,890,'Cs'}],
    [],
    [{'if',891,
      [{clause,892,[],
        [[{op,892,'=:=',{var,892,'P'},{integer,892,0}}]],
        [{call,893,
          {atom,893,split_bin},
          [{op,893,'+',{var,893,'Pos'},{integer,893,4}},
           {var,893,'B'},
           {var,893,'R'},
           {var,893,'Cs'}]}]},
       {clause,894,[],
        [[{atom,894,true}]],
        [{call,895,
          {atom,895,split_bin},
          [{op,895,'+',{var,895,'Pos'},{integer,895,4}},
           {var,895,'B'},
           {cons,895,
            {tuple,895,[{var,895,'P'},{integer,195,512}]},
            {var,895,'R'}},
           {cons,895,
            {cons,895,{var,895,'Pos'},{nil,895}},
            {var,895,'Cs'}}]}]}]}]},
   {clause,897,
    [{var,897,'_Pos'},{bin,897,[]},{var,897,'R'},{var,897,'Cs'}],
    [],
    [{tuple,898,[{var,898,'R'},{var,898,'Cs'}]}]}]},
 {function,900,re_hash_read,4,
  [{clause,900,
    [{var,900,'Head'},{var,900,'Cs'},{var,900,'R'},{var,900,'RCs'}],
    [],
    [{match,901,
      {tuple,901,[{atom,901,ok},{var,901,'Bins'}]},
      {call,901,
       {remote,901,{atom,901,dets_utils},{atom,901,pread}},
       [{var,901,'R'},{var,901,'Head'}]}},
     {call,902,
      {atom,902,re_hash_read},
      [{var,902,'Head'},
       {var,902,'R'},
       {var,902,'RCs'},
       {var,902,'Bins'},
       {var,902,'Cs'},
       {nil,902},
       {nil,902}]}]}]},
 {function,904,re_hash_read,7,
  [{clause,904,
    [{var,904,'Head'},
     {cons,904,{tuple,904,[{var,904,'Pos'},{var,904,'Size'}]},{var,904,'Ps'}},
     {cons,904,{var,904,'C'},{var,904,'Cs'}},
     {cons,905,
      {bin,905,
       [{bin_element,905,{var,905,'Next'},{integer,905,32},default},
        {bin_element,905,{var,905,'Sz'},{integer,905,32},default},
        {bin_element,905,{var,905,'_Status'},{integer,905,32},default},
        {bin_element,905,{var,905,'Bin0'},default,[binary]}]},
      {var,905,'Bins'}},
     {var,906,'DoneCs'},
     {var,906,'R'},
     {var,906,'RCs'}],
    [],
    [{'case',907,
      {call,907,{atom,907,byte_size},[{var,907,'Bin0'}]},
      [{clause,908,
        [{var,908,'BinSz'}],
        [[{op,908,'>=',{var,908,'BinSz'},{var,908,'Sz'}}]],
        [{'case',909,
          {'catch',909,
           {call,909,{atom,909,binary_to_term},[{var,909,'Bin0'}]}},
          [{clause,910,
            [{tuple,910,[{atom,910,'EXIT'},{var,910,'_Error'}]}],
            [],
            [{call,911,
              {atom,911,throw},
              [{call,911,
                {remote,911,{atom,911,dets_utils},{atom,911,corrupt_reason}},
                [{var,911,'Head'},{atom,911,bad_object}]}]}]},
           {clause,912,
            [{var,912,'Term'}],
            [],
            [{match,913,
              {var,913,'Key'},
              {call,913,
               {atom,913,element},
               [{call,913,
                 {remote,913,{atom,913,erlang},{atom,913,element}},
                 [{integer,913,11},{var,913,'Head'}]},
                {var,913,'Term'}]}},
             {match,914,
              {var,914,'New'},
              {op,914,'rem',
               {call,914,
                {atom,914,h},
                [{var,914,'Key'},
                 {call,914,
                  {remote,914,{atom,914,erlang},{atom,914,element}},
                  [{integer,914,18},{var,914,'Head'}]}]},
               {call,914,
                {remote,914,{atom,914,erlang},{atom,914,element}},
                [{integer,914,3},{var,914,'Head'}]}}},
             {match,915,
              {var,915,'NC'},
              {'case',915,
               {op,915,'>=',
                {var,915,'New'},
                {call,915,
                 {remote,915,{atom,915,erlang},{atom,915,element}},
                 [{integer,915,2},{var,915,'Head'}]}},
               [{clause,916,
                 [{atom,916,true}],
                 [],
                 [{cons,916,
                   {tuple,916,[{var,916,'Pos'},{var,916,'New'}]},
                   {var,916,'C'}}]},
                {clause,917,
                 [{atom,917,false}],
                 [],
                 [{cons,917,{var,917,'Pos'},{var,917,'C'}}]}]}},
             {'if',919,
              [{clause,920,[],
                [[{op,920,'=:=',{var,920,'Next'},{integer,920,0}}]],
                [{match,921,
                  {var,921,'NDoneCs'},
                  {cons,921,{var,921,'NC'},{var,921,'DoneCs'}}},
                 {call,922,
                  {atom,922,re_hash_read},
                  [{var,922,'Head'},
                   {var,922,'Ps'},
                   {var,922,'Cs'},
                   {var,922,'Bins'},
                   {var,922,'NDoneCs'},
                   {var,922,'R'},
                   {var,922,'RCs'}]}]},
               {clause,923,[],
                [[{atom,923,true}]],
                [{match,924,
                  {var,924,'NR'},
                  {cons,924,
                   {tuple,924,[{var,924,'Next'},{integer,195,512}]},
                   {var,924,'R'}}},
                 {match,925,
                  {var,925,'NRCs'},
                  {cons,925,{var,925,'NC'},{var,925,'RCs'}}},
                 {call,926,
                  {atom,926,re_hash_read},
                  [{var,926,'Head'},
                   {var,926,'Ps'},
                   {var,926,'Cs'},
                   {var,926,'Bins'},
                   {var,926,'DoneCs'},
                   {var,926,'NR'},
                   {var,926,'NRCs'}]}]}]}]}]}]},
       {clause,929,
        [{var,929,'BinSz'}],
        [[{op,929,'=:=',
           {var,929,'Size'},
           {op,929,'+',{var,929,'BinSz'},{integer,188,12}}}]],
        [{match,930,
          {var,930,'NR'},
          {cons,930,
           {tuple,930,
            [{var,930,'Pos'},{op,930,'+',{var,930,'Sz'},{integer,188,12}}]},
           {var,930,'R'}}},
         {call,931,
          {atom,931,re_hash_read},
          [{var,931,'Head'},
           {var,931,'Ps'},
           {var,931,'Cs'},
           {var,931,'Bins'},
           {var,931,'DoneCs'},
           {var,931,'NR'},
           {cons,931,{var,931,'C'},{var,931,'RCs'}}]}]},
       {clause,932,
        [{var,932,'_BinSz'}],
        [],
        [{call,933,
          {atom,933,throw},
          [{tuple,933,
            [{var,933,'Head'},
             {tuple,933,
              [{atom,933,error},
               {tuple,933,
                [{atom,933,premature_eof},
                 {call,933,
                  {remote,933,{atom,933,erlang},{atom,933,element}},
                  [{integer,933,23},{var,933,'Head'}]}]}]}]}]}]}]}]},
   {clause,935,
    [{var,935,'Head'},
     {nil,935},
     {nil,935},
     {nil,935},
     {var,935,'Cs'},
     {nil,935},
     {nil,935}],
    [],
    [{call,936,
      {atom,936,re_hash_traverse_chains},
      [{var,936,'Cs'},{var,936,'Head'},{nil,936},{nil,936},{nil,936}]}]},
   {clause,937,
    [{var,937,'Head'},
     {nil,937},
     {nil,937},
     {nil,937},
     {var,937,'Cs'},
     {var,937,'R'},
     {var,937,'RCs'}],
    [],
    [{call,938,
      {atom,938,re_hash_read},
      [{var,938,'Head'},{var,938,'Cs'},{var,938,'R'},{var,938,'RCs'}]}]}]},
 {function,940,re_hash_traverse_chains,5,
  [{clause,940,
    [{cons,940,{var,940,'C'},{var,940,'Cs'}},
     {var,940,'Head'},
     {var,940,'Rs'},
     {var,940,'Ns'},
     {var,940,'Ws'}],
    [],
    [{'case',941,
      {call,941,
       {atom,941,re_hash_find_new},
       [{var,941,'C'},{var,941,'Rs'},{atom,941,start},{atom,941,start}]},
      [{clause,942,
        [{atom,942,false}],
        [],
        [{call,943,
          {atom,943,re_hash_traverse_chains},
          [{var,943,'Cs'},
           {var,943,'Head'},
           {var,943,'Rs'},
           {var,943,'Ns'},
           {var,943,'Ws'}]}]},
       {clause,944,
        [{tuple,944,
          [{var,944,'NRs'},{var,944,'FirstNew'},{var,944,'LastNew'}]}],
        [],
        [{match,945,
          {var,945,'LastInNew'},
          {'case',945,
           {var,945,'C'},
           [{clause,946,
             [{cons,946,
               {tuple,946,[{var,946,'_'},{var,946,'_'}]},
               {var,946,'_'}}],
             [],
             [{atom,946,true}]},
            {clause,947,[{var,947,'_'}],[],[{atom,947,false}]}]}},
         {match,949,
          {var,949,'N'},
          {tuple,949,
           [{var,949,'FirstNew'},{var,949,'LastNew'},{var,949,'LastInNew'}]}},
         {match,950,
          {var,950,'NWs'},
          {call,950,
           {atom,950,re_hash_link},
           [{var,950,'C'},
            {atom,950,start},
            {atom,950,start},
            {atom,950,start},
            {var,950,'Ws'}]}},
         {call,951,
          {atom,951,re_hash_traverse_chains},
          [{var,951,'Cs'},
           {var,951,'Head'},
           {var,951,'NRs'},
           {cons,951,{var,951,'N'},{var,951,'Ns'}},
           {var,951,'NWs'}]}]}]}]},
   {clause,953,
    [{nil,953},{var,953,'Head'},{var,953,'Rs'},{var,953,'Ns'},{var,953,'Ws'}],
    [],
    [{match,954,
      {tuple,954,[{atom,954,ok},{var,954,'Bins'}]},
      {call,954,
       {remote,954,{atom,954,dets_utils},{atom,954,pread}},
       [{var,954,'Rs'},{var,954,'Head'}]}},
     {tuple,955,
      [{atom,955,ok},
       {call,955,
        {atom,955,insert_new},
        [{var,955,'Rs'},{var,955,'Bins'},{var,955,'Ns'},{var,955,'Ws'}]}]}]}]},
 {function,957,re_hash_find_new,4,
  [{clause,957,
    [{cons,957,
      {tuple,957,[{var,957,'Pos'},{var,957,'NewSlot'}]},
      {var,957,'C'}},
     {var,957,'R'},
     {atom,957,start},
     {atom,957,start}],
    [],
    [{match,958,
      {tuple,958,[{var,958,'SPos'},{var,958,'_4'}]},
      {call,958,{atom,958,slot_position},[{var,958,'NewSlot'}]}},
     {call,959,
      {atom,959,re_hash_find_new},
      [{var,959,'C'},
       {cons,959,{tuple,959,[{var,959,'SPos'},{integer,959,4}]},{var,959,'R'}},
       {var,959,'Pos'},
       {var,959,'Pos'}]}]},
   {clause,960,
    [{cons,960,{tuple,960,[{var,960,'Pos'},{var,960,'_SPos'}]},{var,960,'C'}},
     {var,960,'R'},
     {var,960,'_FirstNew'},
     {var,960,'LastNew'}],
    [],
    [{call,961,
      {atom,961,re_hash_find_new},
      [{var,961,'C'},{var,961,'R'},{var,961,'Pos'},{var,961,'LastNew'}]}]},
   {clause,962,
    [{cons,962,{var,962,'_Pos'},{var,962,'C'}},
     {var,962,'R'},
     {var,962,'FirstNew'},
     {var,962,'LastNew'}],
    [],
    [{call,963,
      {atom,963,re_hash_find_new},
      [{var,963,'C'},
       {var,963,'R'},
       {var,963,'FirstNew'},
       {var,963,'LastNew'}]}]},
   {clause,964,
    [{nil,964},{var,964,'_R'},{atom,964,start},{atom,964,start}],
    [],
    [{atom,965,false}]},
   {clause,966,
    [{nil,966},{var,966,'R'},{var,966,'FirstNew'},{var,966,'LastNew'}],
    [],
    [{tuple,967,[{var,967,'R'},{var,967,'FirstNew'},{var,967,'LastNew'}]}]}]},
 {function,969,re_hash_link,5,
  [{clause,969,
    [{cons,969,{tuple,969,[{var,969,'Pos'},{var,969,'_SPos'}]},{var,969,'C'}},
     {var,969,'LastOld'},
     {atom,969,start},
     {var,969,'_LastInNew'},
     {var,969,'Ws'}],
    [],
    [{call,970,
      {atom,970,re_hash_link},
      [{var,970,'C'},
       {var,970,'LastOld'},
       {var,970,'Pos'},
       {atom,970,true},
       {var,970,'Ws'}]}]},
   {clause,971,
    [{cons,971,{tuple,971,[{var,971,'Pos'},{var,971,'_SPos'}]},{var,971,'C'}},
     {var,971,'LastOld'},
     {var,971,'LastNew'},
     {atom,971,false},
     {var,971,'Ws'}],
    [],
    [{call,972,
      {atom,972,re_hash_link},
      [{var,972,'C'},
       {var,972,'LastOld'},
       {var,972,'Pos'},
       {atom,972,true},
       {cons,972,
        {tuple,972,
         [{var,972,'Pos'},
          {bin,972,
           [{bin_element,972,{var,972,'LastNew'},{integer,972,32},default}]}]},
        {var,972,'Ws'}}]}]},
   {clause,973,
    [{cons,973,{tuple,973,[{var,973,'Pos'},{var,973,'_SPos'}]},{var,973,'C'}},
     {var,973,'LastOld'},
     {var,973,'_LastNew'},
     {var,973,'LastInNew'},
     {var,973,'Ws'}],
    [],
    [{call,974,
      {atom,974,re_hash_link},
      [{var,974,'C'},
       {var,974,'LastOld'},
       {var,974,'Pos'},
       {var,974,'LastInNew'},
       {var,974,'Ws'}]}]},
   {clause,975,
    [{cons,975,{var,975,'Pos'},{var,975,'C'}},
     {atom,975,start},
     {var,975,'LastNew'},
     {atom,975,true},
     {var,975,'Ws'}],
    [],
    [{call,976,
      {atom,976,re_hash_link},
      [{var,976,'C'},
       {var,976,'Pos'},
       {var,976,'LastNew'},
       {atom,976,false},
       {cons,976,
        {tuple,976,
         [{var,976,'Pos'},
          {bin,976,
           [{bin_element,976,{integer,976,0},{integer,976,32},default}]}]},
        {var,976,'Ws'}}]}]},
   {clause,977,
    [{cons,977,{var,977,'Pos'},{var,977,'C'}},
     {var,977,'LastOld'},
     {var,977,'LastNew'},
     {atom,977,true},
     {var,977,'Ws'}],
    [],
    [{call,978,
      {atom,978,re_hash_link},
      [{var,978,'C'},
       {var,978,'Pos'},
       {var,978,'LastNew'},
       {atom,978,false},
       {cons,978,
        {tuple,978,
         [{var,978,'Pos'},
          {bin,978,
           [{bin_element,978,{var,978,'LastOld'},{integer,978,32},default}]}]},
        {var,978,'Ws'}}]}]},
   {clause,979,
    [{cons,979,{var,979,'Pos'},{var,979,'C'}},
     {var,979,'_LastOld'},
     {var,979,'LastNew'},
     {var,979,'LastInNew'},
     {var,979,'Ws'}],
    [],
    [{call,980,
      {atom,980,re_hash_link},
      [{var,980,'C'},
       {var,980,'Pos'},
       {var,980,'LastNew'},
       {var,980,'LastInNew'},
       {var,980,'Ws'}]}]},
   {clause,981,
    [{nil,981},
     {var,981,'_LastOld'},
     {var,981,'_LastNew'},
     {var,981,'_LastInNew'},
     {var,981,'Ws'}],
    [],
    [{var,982,'Ws'}]}]},
 {function,984,insert_new,4,
  [{clause,984,
    [{cons,984,
      {tuple,984,[{var,984,'NewSlotPos'},{var,984,'_4'}]},
      {var,984,'Rs'}},
     {cons,984,
      {match,984,
       {bin,984,[{bin_element,984,{var,984,'P'},{integer,984,32},default}]},
       {var,984,'PB'}},
      {var,984,'Bins'}},
     {cons,984,{var,984,'N'},{var,984,'Ns'}},
     {var,984,'Ws'}],
    [],
    [{match,985,
      {tuple,985,
       [{var,985,'FirstNew'},{var,985,'LastNew'},{var,985,'LastInNew'}]},
      {var,985,'N'}},
     {match,986,
      {var,986,'Ws1'},
      {'case',986,
       {var,986,'P'},
       [{clause,987,
         [{integer,987,0}],
         [[{var,987,'LastInNew'}]],
         [{var,988,'Ws'}]},
        {clause,989,
         [{integer,989,0}],
         [],
         [{cons,990,
           {tuple,990,
            [{var,990,'LastNew'},
             {bin,990,
              [{bin_element,990,{integer,990,0},{integer,990,32},default}]}]},
           {var,990,'Ws'}}]},
        {clause,991,
         [{var,991,'_'}],
         [],
         [{cons,992,
           {tuple,992,[{var,992,'LastNew'},{var,992,'PB'}]},
           {var,992,'Ws'}}]}]}},
     {match,994,
      {var,994,'NWs'},
      {cons,994,
       {tuple,994,
        [{var,994,'NewSlotPos'},
         {bin,994,
          [{bin_element,994,{var,994,'FirstNew'},{integer,994,32},default}]}]},
       {var,994,'Ws1'}}},
     {call,995,
      {atom,995,insert_new},
      [{var,995,'Rs'},{var,995,'Bins'},{var,995,'Ns'},{var,995,'NWs'}]}]},
   {clause,996,
    [{nil,996},{nil,996},{nil,996},{var,996,'Ws'}],
    [],
    [{var,997,'Ws'}]}]},
 {function,1016,write_cache,1,
  [{clause,1016,
    [{var,1016,'Head'}],
    [],
    [{match,1017,
      {tuple,1017,
       [{atom,1017,head},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'Type'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'C'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'},
        {var,1017,'_'}]},
      {var,1017,'Head'}},
     {'case',1018,
      {call,1018,
       {remote,1018,{atom,1018,dets_utils},{atom,1018,is_empty_cache}},
       [{var,1018,'C'}]},
      [{clause,1019,
        [{atom,1019,true}],
        [],
        [{tuple,1019,[{var,1019,'Head'},{nil,1019},{nil,1019}]}]},
       {clause,1020,
        [{atom,1020,false}],
        [],
        [{match,1021,
          {tuple,1021,
           [{var,1021,'NewC'},{var,1021,'_MaxInserts'},{var,1021,'PerKey'}]},
          {call,1021,
           {remote,1021,{atom,1021,dets_utils},{atom,1021,reset_cache}},
           [{var,1021,'C'}]}},
         {match,1023,
          {tuple,1023,[{var,1023,'WL'},{var,1023,'NoInsertedKeys'}]},
          {call,1023,
           {atom,1023,make_wl},
           [{var,1023,'PerKey'},{var,1023,'Type'}]}},
         {match,1024,
          {var,1024,'Head1'},
          {call,1024,
           {remote,1024,{atom,1024,erlang},{atom,1024,setelement}},
           [{integer,1024,22},{var,1024,'Head'},{var,1024,'NewC'}]}},
         {'case',1025,
          {call,1025,
           {atom,1025,may_grow},
           [{var,1025,'Head1'},{var,1025,'NoInsertedKeys'},{atom,1025,once}]},
          [{clause,1026,
            [{tuple,1026,[{var,1026,'Head2'},{atom,1026,ok}]}],
            [],
            [{call,1027,
              {atom,1027,eval_work_list},
              [{var,1027,'Head2'},{var,1027,'WL'}]}]},
           {clause,1028,
            [{var,1028,'HeadError'}],
            [],
            [{call,1029,
              {atom,1029,throw},
              [{var,1029,'HeadError'}]}]}]}]}]}]}]},
 {function,1033,make_wl,2,
  [{clause,1033,
    [{var,1033,'PerKey'},{var,1033,'Type'}],
    [],
    [{call,1034,
      {atom,1034,make_wl},
      [{var,1034,'PerKey'},{var,1034,'Type'},{nil,1034},{integer,1034,0}]}]}]},
 {function,1036,make_wl,4,
  [{clause,1036,
    [{cons,1036,
      {tuple,1036,[{var,1036,'Key'},{var,1036,'L'}]},
      {var,1036,'PerKey'}},
     {var,1036,'Type'},
     {var,1036,'WL'},
     {var,1036,'Ins'}],
    [],
    [{match,1037,
      {cons,1037,{var,1037,'Cs'},{var,1037,'I'}},
      {call,1037,{atom,1037,wl},[{var,1037,'L'},{var,1037,'Type'}]}},
     {call,1038,
      {atom,1038,make_wl},
      [{var,1038,'PerKey'},
       {var,1038,'Type'},
       {cons,1038,
        {tuple,1038,[{var,1038,'Key'},{var,1038,'Cs'}]},
        {var,1038,'WL'}},
       {op,1038,'+',{var,1038,'Ins'},{var,1038,'I'}}]}]},
   {clause,1039,
    [{nil,1039},{var,1039,'_Type'},{var,1039,'WL'},{var,1039,'Ins'}],
    [],
    [{tuple,1040,[{var,1040,'WL'},{var,1040,'Ins'}]}]}]},
 {function,1042,wl,2,
  [{clause,1042,
    [{var,1042,'L'},{var,1042,'Type'}],
    [],
    [{call,1043,
      {atom,1043,wl},
      [{var,1043,'L'},
       {var,1043,'Type'},
       {atom,1043,keep},
       {atom,1043,skip},
       {integer,1043,0},
       {nil,1043}]}]}]},
 {function,1045,wl,6,
  [{clause,1045,
    [{cons,1045,
      {tuple,1045,[{var,1045,'_Seq'},{atom,1045,delete_key}]},
      {var,1045,'Cs'}},
     {var,1045,'Type'},
     {var,1045,'_Del'},
     {var,1045,'Lookup'},
     {var,1045,'_I'},
     {var,1045,'_Objs'}],
    [],
    [{call,1046,
      {atom,1046,wl},
      [{var,1046,'Cs'},
       {var,1046,'Type'},
       {atom,1046,delete},
       {var,1046,'Lookup'},
       {integer,1046,0},
       {nil,1046}]}]},
   {clause,1047,
    [{cons,1047,
      {tuple,1047,
       [{var,1047,'_Seq'},
        {tuple,1047,[{atom,1047,delete_object},{var,1047,'Object'}]}]},
      {var,1047,'Cs'}},
     {var,1047,'Type'},
     {var,1047,'Del'},
     {var,1047,'Lookup'},
     {var,1047,'I'},
     {var,1047,'Objs'}],
    [],
    [{match,1048,
      {var,1048,'NObjs'},
      {call,1048,
       {remote,1048,{atom,1048,lists},{atom,1048,keydelete}},
       [{var,1048,'Object'},{integer,1048,1},{var,1048,'Objs'}]}},
     {call,1049,
      {atom,1049,wl},
      [{var,1049,'Cs'},
       {var,1049,'Type'},
       {var,1049,'Del'},
       {var,1049,'Lookup'},
       {var,1049,'I'},
       {cons,1049,
        {tuple,1049,[{var,1049,'Object'},{integer,1049,0}]},
        {var,1049,'NObjs'}}]}]},
   {clause,1050,
    [{cons,1050,
      {tuple,1050,
       [{var,1050,'_Seq'},
        {tuple,1050,[{atom,1050,insert},{var,1050,'Object'}]}]},
      {var,1050,'Cs'}},
     {var,1050,'Type'},
     {var,1050,'_Del'},
     {var,1050,'Lookup'},
     {var,1050,'_I'},
     {var,1050,'_Objs'}],
    [[{op,1051,'=:=',{var,1051,'Type'},{atom,1051,set}}]],
    [{call,1052,
      {atom,1052,wl},
      [{var,1052,'Cs'},
       {var,1052,'Type'},
       {atom,1052,delete},
       {var,1052,'Lookup'},
       {integer,1052,1},
       {cons,1052,
        {tuple,1052,[{var,1052,'Object'},{op,1052,'-',{integer,1052,1}}]},
        {nil,1052}}]}]},
   {clause,1053,
    [{cons,1053,
      {tuple,1053,
       [{var,1053,'_Seq'},
        {tuple,1053,[{atom,1053,insert},{var,1053,'Object'}]}]},
      {var,1053,'Cs'}},
     {var,1053,'Type'},
     {var,1053,'Del'},
     {var,1053,'Lookup'},
     {var,1053,'_I'},
     {var,1053,'Objs'}],
    [],
    [{match,1054,
      {var,1054,'NObjs'},
      {'case',1055,
       {call,1055,
        {remote,1055,{atom,1055,lists},{atom,1055,keyfind}},
        [{var,1055,'Object'},{integer,1055,1},{var,1055,'Objs'}]},
       [{clause,1056,
         [{tuple,1056,[{var,1056,'_'},{integer,1056,0}]}],
         [],
         [{call,1057,
           {remote,1057,{atom,1057,lists},{atom,1057,keyreplace}},
           [{var,1057,'Object'},
            {integer,1057,1},
            {var,1057,'Objs'},
            {tuple,1057,
             [{var,1057,'Object'},{op,1057,'-',{integer,1057,1}}]}]}]},
        {clause,1058,
         [{tuple,1058,[{var,1058,'_'},{var,1058,'_C'}]}],
         [[{op,1058,'=:=',{var,1058,'Type'},{atom,1058,bag}}]],
         [{var,1059,'Objs'}]},
        {clause,1060,
         [{tuple,1060,[{var,1060,'_'},{var,1060,'C'}]}],
         [[{op,1060,'<',{var,1060,'C'},{integer,1060,0}}]],
         [{call,1061,
           {remote,1061,{atom,1061,lists},{atom,1061,keyreplace}},
           [{var,1061,'Object'},
            {integer,1061,1},
            {var,1061,'Objs'},
            {tuple,1061,
             [{var,1061,'Object'},
              {op,1061,'-',{var,1061,'C'},{integer,1061,1}}]}]}]},
        {clause,1062,
         [{tuple,1062,[{var,1062,'_'},{var,1062,'C'}]}],
         [],
         [{call,1063,
           {remote,1063,{atom,1063,lists},{atom,1063,keyreplace}},
           [{var,1063,'Object'},
            {integer,1063,1},
            {var,1063,'Objs'},
            {tuple,1063,
             [{var,1063,'Object'},
              {op,1063,'+',{var,1063,'C'},{integer,1063,1}}]}]}]},
        {clause,1064,
         [{atom,1064,false}],
         [[{op,1064,'=:=',{var,1064,'Del'},{atom,1064,delete}}]],
         [{cons,1065,
           {tuple,1065,[{var,1065,'Object'},{op,1065,'-',{integer,1065,1}}]},
           {var,1065,'Objs'}}]},
        {clause,1066,
         [{atom,1066,false}],
         [],
         [{cons,1067,
           {tuple,1067,[{var,1067,'Object'},{integer,1067,1}]},
           {var,1067,'Objs'}}]}]}},
     {call,1069,
      {atom,1069,wl},
      [{var,1069,'Cs'},
       {var,1069,'Type'},
       {var,1069,'Del'},
       {var,1069,'Lookup'},
       {integer,1069,1},
       {var,1069,'NObjs'}]}]},
   {clause,1070,
    [{cons,1070,
      {tuple,1070,
       [{var,1070,'_Seq'},
        {match,1070,
         {tuple,1070,[{atom,1070,lookup},{var,1070,'_Pid'}]},
         {var,1070,'Lookup'}}]},
      {var,1070,'Cs'}},
     {var,1070,'Type'},
     {var,1070,'Del'},
     {var,1070,'_Lookup'},
     {var,1070,'I'},
     {var,1070,'Objs'}],
    [],
    [{call,1071,
      {atom,1071,wl},
      [{var,1071,'Cs'},
       {var,1071,'Type'},
       {var,1071,'Del'},
       {var,1071,'Lookup'},
       {var,1071,'I'},
       {var,1071,'Objs'}]}]},
   {clause,1072,
    [{nil,1072},
     {var,1072,'_Type'},
     {var,1072,'Del'},
     {var,1072,'Lookup'},
     {var,1072,'I'},
     {var,1072,'Objs'}],
    [],
    [{cons,1073,
      {tuple,1073,[{var,1073,'Del'},{var,1073,'Lookup'},{var,1073,'Objs'}]},
      {var,1073,'I'}}]}]},
 {function,1076,may_grow,3,
  [{clause,1076,
    [{var,1076,'Head'},{integer,1076,0},{atom,1076,once}],
    [],
    [{tuple,1077,[{var,1077,'Head'},{atom,1077,ok}]}]},
   {clause,1078,
    [{var,1078,'Head'},{var,1078,'_N'},{var,1078,'_How'}],
    [[{op,1078,'=/=',
       {call,1078,
        {remote,1078,{atom,1078,erlang},{atom,1078,element}},
        [{integer,1078,17},{var,1078,'Head'}]},
       {atom,1078,false}}]],
    [{tuple,1079,[{var,1079,'Head'},{atom,1079,ok}]}]},
   {clause,1080,
    [{match,1080,
      {tuple,1080,
       [{atom,1080,head},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {atom,1080,read},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'},
        {var,1080,'_'}]},
      {var,1080,'Head'}},
     {var,1080,'_N'},
     {var,1080,'_How'}],
    [],
    [{tuple,1081,[{var,1081,'Head'},{atom,1081,ok}]}]},
   {clause,1082,
    [{var,1082,'Head'},{var,1082,'_N'},{var,1082,'_How'}],
    [[{op,1082,'>=',
       {call,1082,
        {remote,1082,{atom,1082,erlang},{atom,1082,element}},
        [{integer,1082,4},{var,1082,'Head'}]},
       {op,133,'*',{integer,128,256},{integer,130,8192}}}]],
    [{tuple,1083,[{var,1083,'Head'},{atom,1083,ok}]}]},
   {clause,1084,
    [{var,1084,'Head'},{var,1084,'N'},{var,1084,'How'}],
    [],
    [{match,1085,
      {var,1085,'Extra'},
      {call,1085,
       {remote,1085,{atom,1085,erlang},{atom,1085,min}},
       [{op,1085,'*',{integer,1085,2},{integer,128,256}},
        {op,1085,'-',
         {op,1085,'+',
          {call,1085,
           {remote,1085,{atom,1085,erlang},{atom,1085,element}},
           [{integer,1085,6},{var,1085,'Head'}]},
          {var,1085,'N'}},
         {call,1085,
          {remote,1085,{atom,1085,erlang},{atom,1085,element}},
          [{integer,1085,4},{var,1085,'Head'}]}}]}},
     {'case',1086,
      {'catch',1086,
       {call,1086,
        {atom,1086,may_grow1},
        [{var,1086,'Head'},{var,1086,'Extra'},{var,1086,'How'}]}},
      [{clause,1087,
        [{tuple,1087,[{atom,1087,error},{var,1087,'Reason'}]}],
        [],
        [{tuple,1088,
          [{var,1088,'Head'},
           {tuple,1088,[{atom,1088,error},{var,1088,'Reason'}]}]}]},
       {clause,1089,[{var,1089,'Reply'}],[],[{var,1090,'Reply'}]}]}]}]},
 {function,1093,may_grow1,3,
  [{clause,1093,
    [{var,1093,'Head'},{var,1093,'Extra'},{atom,1093,many_times}],
    [[{op,1093,'>',{var,1093,'Extra'},{integer,128,256}}]],
    [{match,1094,
      {var,1094,'Reply'},
      {call,1094,
       {atom,1094,grow},
       [{var,1094,'Head'},{integer,1094,1},{atom,1094,undefined}]}},
     {op,1095,'!',
      {call,1095,{atom,1095,self},[]},
      {tuple,47,
       [{atom,47,'$dets_call'},
        {call,1095,{atom,1095,self},[]},
        {atom,1095,may_grow}]}},
     {var,1096,'Reply'}]},
   {clause,1097,
    [{var,1097,'Head'},{var,1097,'Extra'},{var,1097,'_How'}],
    [],
    [{call,1098,
      {atom,1098,grow},
      [{var,1098,'Head'},{var,1098,'Extra'},{atom,1098,undefined}]}]}]},
 {function,1101,grow,3,
  [{clause,1101,
    [{var,1101,'Head'},{var,1101,'Extra'},{var,1101,'_SegZero'}],
    [[{op,1101,'=<',{var,1101,'Extra'},{integer,1101,0}}]],
    [{tuple,1102,[{var,1102,'Head'},{atom,1102,ok}]}]},
   {clause,1103,
    [{var,1103,'Head'},{var,1103,'Extra'},{atom,1103,undefined}],
    [],
    [{call,1104,
      {atom,1104,grow},
      [{var,1104,'Head'},
       {var,1104,'Extra'},
       {call,1104,{atom,1104,seg_zero},[]}]}]},
   {clause,1105,
    [{var,1105,'Head'},{var,1105,'Extra'},{var,1105,'SegZero'}],
    [],
    [{match,1106,
      {tuple,1106,
       [{atom,1106,head},
        {var,1106,'M'},
        {var,1106,'_'},
        {var,1106,'Next'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'N'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'},
        {var,1106,'_'}]},
      {var,1106,'Head'}},
     {match,1107,
      {var,1107,'SegNum'},
      {op,135,'bsr',{var,1107,'Next'},{integer,129,8}}},
     {match,1108,
      {tuple,1108,[{var,1108,'Head0'},{var,1108,'Ws1'}]},
      {call,1108,
       {atom,1108,allocate_segment},
       [{var,1108,'Head'},{var,1108,'SegZero'},{var,1108,'SegNum'}]}},
     {match,1109,
      {tuple,1109,[{var,1109,'Head1'},{atom,1109,ok}]},
      {call,1109,
       {remote,1109,{atom,1109,dets_utils},{atom,1109,pwrite}},
       [{var,1109,'Head0'},{var,1109,'Ws1'}]}},
     {match,1111,
      {tuple,1111,[{atom,1111,ok},{var,1111,'Ws2'}]},
      {call,1111,{atom,1111,re_hash},[{var,1111,'Head1'},{var,1111,'N'}]}},
     {match,1112,
      {tuple,1112,[{var,1112,'Head2'},{atom,1112,ok}]},
      {call,1112,
       {remote,1112,{atom,1112,dets_utils},{atom,1112,pwrite}},
       [{var,1112,'Head1'},{var,1112,'Ws2'}]}},
     {match,1113,
      {var,1113,'NewHead'},
      {'if',1114,
       [{clause,1115,[],
         [[{op,1115,'=:=',
            {op,1115,'+',{var,1115,'N'},{integer,128,256}},
            {var,1115,'M'}}]],
         [{call,1116,
           {remote,1116,{atom,1116,erlang},{atom,1116,setelement}},
           [{integer,1116,3},
            {call,1116,
             {remote,1116,{atom,1116,erlang},{atom,1116,setelement}},
             [{integer,1116,2},
              {call,1116,
               {remote,1116,{atom,1116,erlang},{atom,1116,setelement}},
               [{integer,1116,4},
                {call,1116,
                 {remote,1116,{atom,1116,erlang},{atom,1116,setelement}},
                 [{integer,1116,9},{var,1116,'Head2'},{integer,1116,0}]},
                {op,1116,'+',{var,1116,'Next'},{integer,128,256}}]},
              {op,1116,'*',{integer,1116,2},{var,1116,'M'}}]},
            {op,1116,'*',{integer,1116,4},{var,1116,'M'}}]}]},
        {clause,1117,[],
         [[{atom,1117,true}]],
         [{call,1118,
           {remote,1118,{atom,1118,erlang},{atom,1118,setelement}},
           [{integer,1118,4},
            {call,1118,
             {remote,1118,{atom,1118,erlang},{atom,1118,setelement}},
             [{integer,1118,9},
              {var,1118,'Head2'},
              {op,1118,'+',{var,1118,'N'},{integer,128,256}}]},
            {op,1118,'+',{var,1118,'Next'},{integer,128,256}}]}]}]}},
     {call,1120,
      {atom,1120,grow},
      [{var,1120,'NewHead'},
       {op,1120,'-',{var,1120,'Extra'},{integer,128,256}},
       {var,1120,'SegZero'}]}]}]},
 {function,1122,seg_zero,0,
  [{clause,1122,[],[],
    [{bin,1123,
      [{bin_element,1123,
        {integer,1123,0},
        {op,1123,'*',{integer,1123,4},{integer,128,256}},
        [{unit,8}]}]}]}]},
 {function,1125,find_object,2,
  [{clause,1125,
    [{var,1125,'Head'},{var,1125,'Object'}],
    [],
    [{match,1126,
      {var,1126,'Key'},
      {call,1126,
       {atom,1126,element},
       [{call,1126,
         {remote,1126,{atom,1126,erlang},{atom,1126,element}},
         [{integer,1126,11},{var,1126,'Head'}]},
        {var,1126,'Object'}]}},
     {match,1127,
      {var,1127,'Slot'},
      {call,1127,{atom,1127,db_hash},[{var,1127,'Key'},{var,1127,'Head'}]}},
     {call,1128,
      {atom,1128,find_object},
      [{var,1128,'Head'},{var,1128,'Object'},{var,1128,'Slot'}]}]}]},
 {function,1130,find_object,3,
  [{clause,1130,
    [{var,1130,'H'},{var,1130,'_Obj'},{var,1130,'Slot'}],
    [[{op,1130,'>=',
       {var,1130,'Slot'},
       {call,1130,
        {remote,1130,{atom,1130,erlang},{atom,1130,element}},
        [{integer,1130,4},{var,1130,'H'}]}}]],
    [{atom,1131,false}]},
   {clause,1132,
    [{var,1132,'H'},{var,1132,'Obj'},{var,1132,'Slot'}],
    [],
    [{match,1133,
      {tuple,1133,[{var,1133,'_Pos'},{var,1133,'Chain'}]},
      {call,1133,{atom,1133,chain},[{var,1133,'H'},{var,1133,'Slot'}]}},
     {'case',1134,
      {'catch',1134,
       {call,1134,
        {atom,1134,find_obj},
        [{var,1134,'H'},{var,1134,'Obj'},{var,1134,'Chain'}]}},
      [{clause,1135,
        [{tuple,1135,[{atom,1135,ok},{var,1135,'Pos'}]}],
        [],
        [{tuple,1136,[{atom,1136,ok},{var,1136,'Pos'}]}]},
       {clause,1137,[{var,1137,'_Else'}],[],[{atom,1138,false}]}]}]}]},
 {function,1141,find_obj,3,
  [{clause,1141,
    [{var,1141,'H'},{var,1141,'Obj'},{var,1141,'Pos'}],
    [[{op,1141,'>',{var,1141,'Pos'},{integer,1141,0}}]],
    [{match,1142,
      {tuple,1142,[{var,1142,'Next'},{var,1142,'_Sz'},{var,1142,'Term'}]},
      {call,1142,
       {atom,1142,prterm},
       [{var,1142,'H'},{var,1142,'Pos'},{integer,195,512}]}},
     {'if',1143,
      [{clause,1144,[],
        [[{op,1144,'==',{var,1144,'Term'},{var,1144,'Obj'}}]],
        [{tuple,1145,[{atom,1145,ok},{var,1145,'Pos'}]}]},
       {clause,1146,[],
        [[{atom,1146,true}]],
        [{call,1147,
          {atom,1147,find_obj},
          [{var,1147,'H'},{var,1147,'Obj'},{var,1147,'Next'}]}]}]}]}]},
 {function,1154,chain,2,
  [{clause,1154,
    [{var,1154,'Head'},{var,1154,'Slot'}],
    [],
    [{match,1155,
      {var,1155,'Pos'},
      {op,131,'+',
       {integer,127,40},
       {op,131,'*',
        {integer,131,4},
        {op,135,'bsr',{var,1155,'Slot'},{integer,129,8}}}}},
     {match,1156,
      {var,1156,'Segment'},
      {call,1156,{atom,1156,get_segp},[{var,1156,'Pos'}]}},
     {match,1157,
      {var,1157,'FinalPos'},
      {op,1157,'+',
       {var,1157,'Segment'},
       {op,1157,'*',
        {integer,1157,4},
        {op,45,'band',
         {var,1157,'Slot'},
         {op,45,'-',{integer,128,256},{integer,45,1}}}}}},
     {match,1158,
      {tuple,1158,
       [{atom,1158,ok},
        {bin,1158,
         [{bin_element,1158,{var,1158,'Chain'},{integer,1158,32},default}]}]},
      {call,1158,
       {remote,1158,{atom,1158,dets_utils},{atom,1158,pread}},
       [{var,1158,'Head'},
        {var,1158,'FinalPos'},
        {integer,1158,4},
        {integer,1158,0}]}},
     {tuple,1159,[{var,1159,'FinalPos'},{var,1159,'Chain'}]}]}]},
 {function,1166,eval_work_list,2,
  [{clause,1166,
    [{var,1166,'Head'},{var,1166,'WorkLists'}],
    [],
    [{match,1167,
      {var,1167,'SWLs'},
      {call,1167,
       {atom,1167,tag_with_slot},
       [{var,1167,'WorkLists'},{var,1167,'Head'},{nil,1167}]}},
     {match,1168,
      {var,1168,'P1'},
      {call,1168,
       {remote,1168,{atom,1168,dets_utils},{atom,1168,family}},
       [{var,1168,'SWLs'}]}},
     {match,1169,
      {tuple,1169,[{var,1169,'PerSlot'},{var,1169,'SlotPositions'}]},
      {call,1169,
       {atom,1169,remove_slot_tag},
       [{var,1169,'P1'},{nil,1169},{nil,1169}]}},
     {match,1170,
      {tuple,1170,[{atom,1170,ok},{var,1170,'Bins'}]},
      {call,1170,
       {remote,1170,{atom,1170,dets_utils},{atom,1170,pread}},
       [{var,1170,'SlotPositions'},{var,1170,'Head'}]}},
     {call,1171,
      {atom,1171,first_object},
      [{var,1171,'PerSlot'},
       {var,1171,'SlotPositions'},
       {var,1171,'Bins'},
       {var,1171,'Head'},
       {nil,1171},
       {nil,1171},
       {nil,1171},
       {nil,1171}]}]}]},
 {function,1173,tag_with_slot,3,
  [{clause,1173,
    [{cons,1173,
      {match,1173,
       {tuple,1173,[{var,1173,'K'},{var,1173,'_'}]},
       {var,1173,'WL'}},
      {var,1173,'WLs'}},
     {var,1173,'Head'},
     {var,1173,'L'}],
    [],
    [{call,1174,
      {atom,1174,tag_with_slot},
      [{var,1174,'WLs'},
       {var,1174,'Head'},
       {cons,1174,
        {tuple,1174,
         [{call,1174,{atom,1174,db_hash},[{var,1174,'K'},{var,1174,'Head'}]},
          {var,1174,'WL'}]},
        {var,1174,'L'}}]}]},
   {clause,1175,
    [{nil,1175},{var,1175,'_Head'},{var,1175,'L'}],
    [],
    [{var,1176,'L'}]}]},
 {function,1178,remove_slot_tag,3,
  [{clause,1178,
    [{cons,1178,
      {tuple,1178,[{var,1178,'S'},{var,1178,'SWLs'}]},
      {var,1178,'SSWLs'}},
     {var,1178,'Ls'},
     {var,1178,'SPs'}],
    [],
    [{call,1179,
      {atom,1179,remove_slot_tag},
      [{var,1179,'SSWLs'},
       {cons,1179,{var,1179,'SWLs'},{var,1179,'Ls'}},
       {cons,1179,
        {call,1179,{atom,1179,slot_position},[{var,1179,'S'}]},
        {var,1179,'SPs'}}]}]},
   {clause,1180,
    [{nil,1180},{var,1180,'Ls'},{var,1180,'SPs'}],
    [],
    [{tuple,1181,[{var,1181,'Ls'},{var,1181,'SPs'}]}]}]},
 {function,1191,first_object,8,
  [{clause,1191,
    [{cons,1191,{var,1191,'WorkLists'},{var,1191,'SPs'}},
     {cons,1191,
      {tuple,1191,[{var,1191,'P1'},{var,1191,'_4'}]},
      {var,1191,'Ss'}},
     {cons,1191,
      {bin,1191,
       [{bin_element,1191,{var,1191,'P2'},{integer,1191,32},default}]},
      {var,1191,'Bs'}},
     {var,1191,'Head'},
     {var,1192,'ObjsToRead'},
     {var,1192,'ToRead'},
     {var,1192,'Ls'},
     {var,1192,'LU'}],
    [[{op,1192,'=:=',{var,1192,'P2'},{integer,1192,0}}]],
    [{match,1193,
      {var,1193,'L0'},
      {cons,1193,{tuple,1193,[{atom,1193,old},{var,1193,'P1'}]},{nil,1193}}},
     {match,1194,
      {tuple,1194,[{var,1194,'L'},{var,1194,'NLU'}]},
      {call,1194,
       {atom,1194,eval_slot},
       [{var,1194,'Head'},
        {integer,195,512},
        {var,1194,'P2'},
        {var,1194,'WorkLists'},
        {var,1194,'L0'},
        {var,1194,'LU'}]}},
     {call,1195,
      {atom,1195,first_object},
      [{var,1195,'SPs'},
       {var,1195,'Ss'},
       {var,1195,'Bs'},
       {var,1195,'Head'},
       {var,1195,'ObjsToRead'},
       {var,1195,'ToRead'},
       {cons,1195,{var,1195,'L'},{var,1195,'Ls'}},
       {var,1195,'NLU'}]}]},
   {clause,1196,
    [{cons,1196,{var,1196,'WorkLists'},{var,1196,'SPs'}},
     {cons,1196,
      {tuple,1196,[{var,1196,'P1'},{var,1196,'_4'}]},
      {var,1196,'Ss'}},
     {cons,1196,
      {bin,1196,
       [{bin_element,1196,{var,1196,'P2'},{integer,1196,32},default}]},
      {var,1196,'Bs'}},
     {var,1196,'Head'},
     {var,1197,'ObjsToRead'},
     {var,1197,'ToRead'},
     {var,1197,'Ls'},
     {var,1197,'LU'}],
    [],
    [{match,1198,
      {var,1198,'E'},
      {tuple,1198,[{var,1198,'P1'},{var,1198,'P2'},{var,1198,'WorkLists'}]}},
     {call,1199,
      {atom,1199,first_object},
      [{var,1199,'SPs'},
       {var,1199,'Ss'},
       {var,1199,'Bs'},
       {var,1199,'Head'},
       {cons,1200,{var,1200,'E'},{var,1200,'ObjsToRead'}},
       {cons,1200,
        {tuple,1200,[{var,1200,'P2'},{integer,195,512}]},
        {var,1200,'ToRead'}},
       {var,1200,'Ls'},
       {var,1200,'LU'}]}]},
   {clause,1201,
    [{nil,1201},
     {nil,1201},
     {nil,1201},
     {var,1201,'Head'},
     {var,1201,'ObjsToRead'},
     {var,1201,'ToRead'},
     {var,1201,'Ls'},
     {var,1201,'LU'}],
    [],
    [{match,1202,
      {tuple,1202,[{atom,1202,ok},{var,1202,'Bins'}]},
      {call,1202,
       {remote,1202,{atom,1202,dets_utils},{atom,1202,pread}},
       [{var,1202,'ToRead'},{var,1202,'Head'}]}},
     {'case',1203,
      {'catch',1203,
       {call,1203,
        {atom,1203,eval_first},
        [{var,1203,'Bins'},
         {var,1203,'ObjsToRead'},
         {var,1203,'Head'},
         {var,1203,'Ls'},
         {var,1203,'LU'}]}},
      [{clause,1204,
        [{tuple,1204,[{atom,1204,ok},{var,1204,'NLs'},{var,1204,'NLU'}]}],
        [],
        [{'case',1205,
          {call,1205,
           {atom,1205,create_writes},
           [{var,1205,'NLs'},{var,1205,'Head'},{nil,1205},{integer,1205,0}]},
          [{clause,1206,
            [{tuple,1206,[{var,1206,'Head1'},{nil,1206},{integer,1206,0}]}],
            [],
            [{tuple,1207,[{var,1207,'Head1'},{var,1207,'NLU'},{nil,1207}]}]},
           {clause,1208,
            [{tuple,1208,
              [{var,1208,'Head1'},{var,1208,'Ws'},{var,1208,'No'}]}],
            [],
            [{match,1209,
              {tuple,1209,[{var,1209,'NewHead'},{var,1209,'Ws2'}]},
              {call,1209,
               {atom,1209,update_no_objects},
               [{var,1209,'Head1'},{var,1209,'Ws'},{var,1209,'No'}]}},
             {tuple,1210,
              [{var,1210,'NewHead'},{var,1210,'NLU'},{var,1210,'Ws2'}]}]}]}]},
       {clause,1212,
        [{var,1212,'_Error'}],
        [],
        [{call,1213,
          {atom,1213,throw},
          [{call,1213,
            {remote,1213,{atom,1213,dets_utils},{atom,1213,corrupt_reason}},
            [{var,1213,'Head'},{atom,1213,bad_object}]}]}]}]}]}]},
 {function,1218,update_no_objects,3,
  [{clause,1218,
    [{var,1218,'Head'},{var,1218,'Ws'},{integer,1218,0}],
    [],
    [{tuple,1218,[{var,1218,'Head'},{var,1218,'Ws'}]}]},
   {clause,1219,
    [{var,1219,'Head'},{var,1219,'Ws'},{var,1219,'Delta'}],
    [],
    [{match,1220,
      {var,1220,'No'},
      {call,1220,
       {remote,1220,{atom,1220,erlang},{atom,1220,element}},
       [{integer,1220,6},{var,1220,'Head'}]}},
     {match,1221,
      {var,1221,'NewNo'},
      {op,1221,'+',{var,1221,'No'},{var,1221,'Delta'}}},
     {match,1222,
      {var,1222,'NWs'},
      {'if',1223,
       [{clause,1224,[],
         [[{op,1224,'>',
            {var,1224,'NewNo'},
            {op,133,'*',{integer,128,256},{integer,130,8192}}}]],
         [{var,1225,'Ws'}]},
        {clause,1226,[],
         [[{op,1226,'=:=',
            {op,135,'bsr',{var,1226,'No'},{integer,129,8}},
            {op,135,'bsr',{var,1226,'NewNo'},{integer,129,8}}}]],
         [{var,1227,'Ws'}]},
        {clause,1228,[],
         [[{atom,1228,true}]],
         [{cons,1229,
           {tuple,1229,
            [{op,145,'+',{integer,144,20},{integer,145,12}},
             {bin,1229,
              [{bin_element,1229,
                {var,1229,'NewNo'},
                {integer,1229,32},
                default}]}]},
           {var,1229,'Ws'}}]}]}},
     {tuple,1231,
      [{call,1231,
        {remote,1231,{atom,1231,erlang},{atom,1231,setelement}},
        [{integer,1231,6},{var,1231,'Head'},{var,1231,'NewNo'}]},
       {var,1231,'NWs'}]}]}]},
 {function,1233,eval_first,5,
  [{clause,1233,
    [{cons,1233,
      {bin,1233,
       [{bin_element,1233,{var,1233,'Next'},{integer,1233,32},default},
        {bin_element,1233,{var,1233,'Sz'},{integer,1233,32},default},
        {bin_element,1233,{var,1233,'_Status'},{integer,1233,32},default},
        {bin_element,1233,{var,1233,'Bin'},default,[binary]}]},
      {var,1233,'Bins'}},
     {cons,1234,{var,1234,'SP'},{var,1234,'SPs'}},
     {var,1234,'Head'},
     {var,1234,'Ls'},
     {var,1234,'LU'}],
    [],
    [{match,1235,
      {tuple,1235,[{var,1235,'P1'},{var,1235,'P2'},{var,1235,'WLs'}]},
      {var,1235,'SP'}},
     {match,1236,
      {var,1236,'L0'},
      {cons,1236,{tuple,1236,[{atom,1236,old},{var,1236,'P1'}]},{nil,1236}}},
     {'case',1237,
      {call,1237,{atom,1237,byte_size},[{var,1237,'Bin'}]},
      [{clause,1238,
        [{var,1238,'BinSz'}],
        [[{op,1238,'>=',{var,1238,'BinSz'},{var,1238,'Sz'}}]],
        [{match,1239,
          {var,1239,'Term'},
          {call,1239,{atom,1239,binary_to_term},[{var,1239,'Bin'}]}},
         {match,1240,
          {var,1240,'Key'},
          {call,1240,
           {atom,1240,element},
           [{call,1240,
             {remote,1240,{atom,1240,erlang},{atom,1240,element}},
             [{integer,1240,11},{var,1240,'Head'}]},
            {var,1240,'Term'}]}},
         {match,1241,
          {tuple,1241,[{var,1241,'L'},{var,1241,'NLU'}]},
          {call,1241,
           {atom,1241,find_key},
           [{var,1241,'Head'},
            {var,1241,'P2'},
            {var,1241,'Next'},
            {var,1241,'Sz'},
            {var,1241,'Term'},
            {var,1241,'Key'},
            {var,1241,'WLs'},
            {var,1241,'L0'},
            {var,1241,'LU'}]}},
         {call,1242,
          {atom,1242,eval_first},
          [{var,1242,'Bins'},
           {var,1242,'SPs'},
           {var,1242,'Head'},
           {cons,1242,{var,1242,'L'},{var,1242,'Ls'}},
           {var,1242,'NLU'}]}]},
       {clause,1243,
        [{var,1243,'_BinSz'}],
        [],
        [{match,1244,
          {tuple,1244,[{var,1244,'L'},{var,1244,'NLU'}]},
          {call,1244,
           {atom,1244,eval_slot},
           [{var,1244,'Head'},
            {op,1244,'+',{var,1244,'Sz'},{integer,188,12}},
            {var,1244,'P2'},
            {var,1244,'WLs'},
            {var,1244,'L0'},
            {var,1244,'LU'}]}},
         {call,1245,
          {atom,1245,eval_first},
          [{var,1245,'Bins'},
           {var,1245,'SPs'},
           {var,1245,'Head'},
           {cons,1245,{var,1245,'L'},{var,1245,'Ls'}},
           {var,1245,'NLU'}]}]}]}]},
   {clause,1247,
    [{nil,1247},{nil,1247},{var,1247,'_Head'},{var,1247,'Ls'},{var,1247,'LU'}],
    [],
    [{tuple,1248,[{atom,1248,ok},{var,1248,'Ls'},{var,1248,'LU'}]}]}]},
 {function,1250,eval_slot,6,
  [{clause,1250,
    [{var,1250,'_Head'},
     {var,1250,'_TrySize'},
     {match,1250,{var,1250,'_Pos'},{integer,1250,0}},
     {nil,1250},
     {var,1250,'L'},
     {var,1250,'LU'}],
    [],
    [{tuple,1251,[{var,1251,'L'},{var,1251,'LU'}]}]},
   {clause,1252,
    [{var,1252,'Head'},
     {var,1252,'_TrySize'},
     {match,1252,{var,1252,'Pos'},{integer,1252,0}},
     {cons,1252,{var,1252,'WL'},{var,1252,'WLs'}},
     {var,1252,'L'},
     {var,1252,'LU'}],
    [],
    [{match,1253,
      {tuple,1253,
       [{var,1253,'_Key'},
        {tuple,1253,
         [{var,1253,'_Delete'},{var,1253,'LookUp'},{var,1253,'Objects'}]}]},
      {var,1253,'WL'}},
     {match,1254,
      {tuple,1254,[{var,1254,'NL'},{var,1254,'NLU'}]},
      {call,1254,
       {atom,1254,end_of_key},
       [{var,1254,'Objects'},{var,1254,'LookUp'},{var,1254,'L'},{nil,1254}]}},
     {call,1255,
      {atom,1255,eval_slot},
      [{var,1255,'Head'},
       {integer,195,512},
       {var,1255,'Pos'},
       {var,1255,'WLs'},
       {var,1255,'NL'},
       {op,1255,'++',{var,1255,'NLU'},{var,1255,'LU'}}]}]},
   {clause,1256,
    [{var,1256,'Head'},
     {var,1256,'TrySize'},
     {var,1256,'Pos'},
     {var,1256,'WLs'},
     {var,1256,'L'},
     {var,1256,'LU'}],
    [],
    [{match,1257,
      {tuple,1257,[{var,1257,'NextPos'},{var,1257,'Size'},{var,1257,'Term'}]},
      {call,1257,
       {atom,1257,prterm},
       [{var,1257,'Head'},{var,1257,'Pos'},{var,1257,'TrySize'}]}},
     {match,1258,
      {var,1258,'Key'},
      {call,1258,
       {atom,1258,element},
       [{call,1258,
         {remote,1258,{atom,1258,erlang},{atom,1258,element}},
         [{integer,1258,11},{var,1258,'Head'}]},
        {var,1258,'Term'}]}},
     {call,1259,
      {atom,1259,find_key},
      [{var,1259,'Head'},
       {var,1259,'Pos'},
       {var,1259,'NextPos'},
       {var,1259,'Size'},
       {var,1259,'Term'},
       {var,1259,'Key'},
       {var,1259,'WLs'},
       {var,1259,'L'},
       {var,1259,'LU'}]}]}]},
 {function,1261,find_key,9,
  [{clause,1261,
    [{var,1261,'Head'},
     {var,1261,'Pos'},
     {var,1261,'NextPos'},
     {var,1261,'Size'},
     {var,1261,'Term'},
     {var,1261,'Key'},
     {var,1261,'WLs'},
     {var,1261,'L'},
     {var,1261,'LU'}],
    [],
    [{'case',1262,
      {call,1262,
       {remote,1262,{atom,1262,lists},{atom,1262,keyfind}},
       [{var,1262,'Key'},{integer,1262,1},{var,1262,'WLs'}]},
      [{clause,1263,
        [{match,1263,
          {tuple,1263,
           [{var,1263,'_'},
            {tuple,1263,
             [{var,1263,'Delete'},{var,1263,'LookUp'},{var,1263,'Objects'}]}]},
          {var,1263,'WL'}}],
        [],
        [{match,1264,
          {var,1264,'NWLs'},
          {call,1264,
           {remote,1264,{atom,1264,lists},{atom,1264,delete}},
           [{var,1264,'WL'},{var,1264,'WLs'}]}},
         {match,1265,
          {tuple,1265,
           [{var,1265,'NewObjects'},{var,1265,'NL'},{var,1265,'LUK'}]},
          {call,1265,
           {atom,1265,eval_object},
           [{var,1265,'Size'},
            {var,1265,'Term'},
            {var,1265,'Delete'},
            {var,1265,'LookUp'},
            {var,1266,'Objects'},
            {var,1266,'Head'},
            {var,1266,'Pos'},
            {var,1266,'L'},
            {nil,1266}]}},
         {call,1267,
          {atom,1267,eval_key},
          [{var,1267,'Key'},
           {var,1267,'Delete'},
           {var,1267,'LookUp'},
           {var,1267,'NewObjects'},
           {var,1267,'Head'},
           {var,1267,'NextPos'},
           {var,1268,'NWLs'},
           {var,1268,'NL'},
           {var,1268,'LU'},
           {var,1268,'LUK'}]}]},
       {clause,1269,
        [{atom,1269,false}],
        [],
        [{match,1270,
          {var,1270,'L0'},
          {cons,1270,
           {tuple,1270,[{atom,1270,old},{var,1270,'Pos'}]},
           {var,1270,'L'}}},
         {call,1271,
          {atom,1271,eval_slot},
          [{var,1271,'Head'},
           {integer,195,512},
           {var,1271,'NextPos'},
           {var,1271,'WLs'},
           {var,1271,'L0'},
           {var,1271,'LU'}]}]}]}]}]},
 {function,1274,eval_key,10,
  [{clause,1274,
    [{var,1274,'_Key'},
     {var,1274,'_Delete'},
     {var,1274,'Lookup'},
     {var,1274,'_Objects'},
     {var,1274,'Head'},
     {var,1274,'Pos'},
     {var,1274,'WLs'},
     {var,1274,'L'},
     {var,1274,'LU'},
     {var,1274,'LUK'}],
    [[{op,1275,'=:=',
       {call,1275,
        {remote,1275,{atom,1275,erlang},{atom,1275,element}},
        [{integer,1275,10},{var,1275,'Head'}]},
       {atom,1275,set}}]],
    [{match,1276,
      {var,1276,'NLU'},
      {'case',1276,
       {var,1276,'Lookup'},
       [{clause,1277,
         [{tuple,1277,[{atom,1277,lookup},{var,1277,'Pid'}]}],
         [],
         [{cons,1277,
           {tuple,1277,[{var,1277,'Pid'},{var,1277,'LUK'}]},
           {var,1277,'LU'}}]},
        {clause,1278,[{atom,1278,skip}],[],[{var,1278,'LU'}]}]}},
     {call,1280,
      {atom,1280,eval_slot},
      [{var,1280,'Head'},
       {integer,195,512},
       {var,1280,'Pos'},
       {var,1280,'WLs'},
       {var,1280,'L'},
       {var,1280,'NLU'}]}]},
   {clause,1281,
    [{var,1281,'_Key'},
     {var,1281,'_Delete'},
     {var,1281,'LookUp'},
     {var,1281,'Objects'},
     {var,1281,'Head'},
     {var,1281,'Pos'},
     {var,1281,'WLs'},
     {var,1281,'L'},
     {var,1281,'LU'},
     {var,1281,'LUK'}],
    [[{op,1282,'=:=',{var,1282,'Pos'},{integer,1282,0}}]],
    [{match,1283,
      {tuple,1283,[{var,1283,'NL'},{var,1283,'NLU'}]},
      {call,1283,
       {atom,1283,end_of_key},
       [{var,1283,'Objects'},
        {var,1283,'LookUp'},
        {var,1283,'L'},
        {var,1283,'LUK'}]}},
     {call,1284,
      {atom,1284,eval_slot},
      [{var,1284,'Head'},
       {integer,195,512},
       {var,1284,'Pos'},
       {var,1284,'WLs'},
       {var,1284,'NL'},
       {op,1284,'++',{var,1284,'NLU'},{var,1284,'LU'}}]}]},
   {clause,1285,
    [{var,1285,'Key'},
     {var,1285,'Delete'},
     {var,1285,'LookUp'},
     {var,1285,'Objects'},
     {var,1285,'Head'},
     {var,1285,'Pos'},
     {var,1285,'WLs'},
     {var,1285,'L'},
     {var,1285,'LU'},
     {var,1285,'LUK'}],
    [],
    [{match,1286,
      {tuple,1286,[{var,1286,'NextPos'},{var,1286,'Size'},{var,1286,'Term'}]},
      {call,1286,
       {atom,1286,prterm},
       [{var,1286,'Head'},{var,1286,'Pos'},{integer,195,512}]}},
     {'case',1287,
      {call,1287,
       {atom,1287,element},
       [{call,1287,
         {remote,1287,{atom,1287,erlang},{atom,1287,element}},
         [{integer,1287,11},{var,1287,'Head'}]},
        {var,1287,'Term'}]},
      [{clause,1288,
        [{var,1288,'Key'}],
        [],
        [{match,1289,
          {tuple,1289,
           [{var,1289,'NewObjects'},{var,1289,'NL'},{var,1289,'LUK1'}]},
          {call,1290,
           {atom,1290,eval_object},
           [{var,1290,'Size'},
            {var,1290,'Term'},
            {var,1290,'Delete'},
            {var,1290,'LookUp'},
            {var,1290,'Objects'},
            {var,1290,'Head'},
            {var,1290,'Pos'},
            {var,1290,'L'},
            {var,1290,'LUK'}]}},
         {call,1291,
          {atom,1291,eval_key},
          [{var,1291,'Key'},
           {var,1291,'Delete'},
           {var,1291,'LookUp'},
           {var,1291,'NewObjects'},
           {var,1291,'Head'},
           {var,1291,'NextPos'},
           {var,1291,'WLs'},
           {var,1292,'NL'},
           {var,1292,'LU'},
           {var,1292,'LUK1'}]}]},
       {clause,1293,
        [{var,1293,'Key2'}],
        [],
        [{match,1294,
          {tuple,1294,[{var,1294,'L1'},{var,1294,'NLU'}]},
          {call,1294,
           {atom,1294,end_of_key},
           [{var,1294,'Objects'},
            {var,1294,'LookUp'},
            {var,1294,'L'},
            {var,1294,'LUK'}]}},
         {call,1295,
          {atom,1295,find_key},
          [{var,1295,'Head'},
           {var,1295,'Pos'},
           {var,1295,'NextPos'},
           {var,1295,'Size'},
           {var,1295,'Term'},
           {var,1295,'Key2'},
           {var,1295,'WLs'},
           {var,1295,'L1'},
           {op,1295,'++',{var,1295,'NLU'},{var,1295,'LU'}}]}]}]}]}]},
 {function,1299,eval_object,9,
  [{clause,1299,
    [{var,1299,'Size'},
     {var,1299,'Term'},
     {var,1299,'Delete'},
     {var,1299,'LookUp'},
     {var,1299,'Objects'},
     {var,1299,'Head'},
     {var,1299,'Pos'},
     {var,1299,'L'},
     {var,1299,'LU'}],
    [],
    [{match,1300,
      {var,1300,'Type'},
      {call,1300,
       {remote,1300,{atom,1300,erlang},{atom,1300,element}},
       [{integer,1300,10},{var,1300,'Head'}]}},
     {'case',1301,
      {call,1301,
       {remote,1301,{atom,1301,lists},{atom,1301,keyfind}},
       [{var,1301,'Term'},{integer,1301,1},{var,1301,'Objects'}]},
      [{clause,1302,
        [{tuple,1302,[{var,1302,'_Object'},{var,1302,'N'}]}],
        [[{op,1302,'=:=',{var,1302,'N'},{integer,1302,0}}]],
        [{match,1303,
          {var,1303,'L1'},
          {cons,1303,
           {tuple,1303,
            [{atom,1303,delete},{var,1303,'Pos'},{var,1303,'Size'}]},
           {var,1303,'L'}}},
         {tuple,1304,[{var,1304,'Objects'},{var,1304,'L1'},{var,1304,'LU'}]}]},
       {clause,1305,
        [{tuple,1305,[{var,1305,'_Object'},{var,1305,'N'}]}],
        [[{op,1305,'<',{var,1305,'N'},{integer,1305,0}},
          {op,1305,'=:=',{var,1305,'Type'},{atom,1305,set}}]],
        [{match,1306,
          {var,1306,'L1'},
          {cons,1306,
           {tuple,1306,[{atom,1306,old},{var,1306,'Pos'}]},
           {var,1306,'L'}}},
         {call,1307,
          {atom,1307,wl_lookup},
          [{var,1307,'LookUp'},
           {var,1307,'Objects'},
           {var,1307,'Term'},
           {var,1307,'L1'},
           {var,1307,'LU'}]}]},
       {clause,1308,
        [{tuple,1308,[{var,1308,'Object'},{var,1308,'_N'}]}],
        [[{op,1308,'=:=',{var,1308,'Type'},{atom,1308,bag}}]],
        [{match,1309,
          {var,1309,'L1'},
          {cons,1309,
           {tuple,1309,[{atom,1309,old},{var,1309,'Pos'}]},
           {var,1309,'L'}}},
         {match,1310,
          {var,1310,'Objects1'},
          {call,1310,
           {remote,1310,{atom,1310,lists},{atom,1310,keydelete}},
           [{var,1310,'Object'},{integer,1310,1},{var,1310,'Objects'}]}},
         {call,1311,
          {atom,1311,wl_lookup},
          [{var,1311,'LookUp'},
           {var,1311,'Objects1'},
           {var,1311,'Term'},
           {var,1311,'L1'},
           {var,1311,'LU'}]}]},
       {clause,1312,
        [{tuple,1312,[{var,1312,'Object'},{var,1312,'N'}]}],
        [[{op,1312,'<',{var,1312,'N'},{integer,1312,0}},
          {op,1312,'=:=',{var,1312,'Type'},{atom,1312,duplicate_bag}}]],
        [{match,1313,
          {var,1313,'L1'},
          {cons,1313,
           {tuple,1313,[{atom,1313,old},{var,1313,'Pos'}]},
           {var,1313,'L'}}},
         {match,1314,
          {var,1314,'Objects1'},
          {call,1314,
           {remote,1314,{atom,1314,lists},{atom,1314,keyreplace}},
           [{var,1314,'Object'},
            {integer,1314,1},
            {var,1314,'Objects'},
            {tuple,1314,
             [{var,1314,'Object'},
              {op,1314,'+',{var,1314,'N'},{integer,1314,1}}]}]}},
         {call,1315,
          {atom,1315,wl_lookup},
          [{var,1315,'LookUp'},
           {var,1315,'Objects1'},
           {var,1315,'Term'},
           {var,1315,'L1'},
           {var,1315,'LU'}]}]},
       {clause,1316,
        [{tuple,1316,[{var,1316,'_Object'},{var,1316,'N'}]}],
        [[{op,1316,'>',{var,1316,'N'},{integer,1316,0}},
          {op,1316,'=:=',{var,1316,'Type'},{atom,1316,duplicate_bag}}]],
        [{match,1317,
          {var,1317,'L1'},
          {cons,1317,
           {tuple,1317,[{atom,1317,old},{var,1317,'Pos'}]},
           {var,1317,'L'}}},
         {call,1318,
          {atom,1318,wl_lookup},
          [{var,1318,'LookUp'},
           {var,1318,'Objects'},
           {var,1318,'Term'},
           {var,1318,'L1'},
           {var,1318,'LU'}]}]},
       {clause,1319,
        [{atom,1319,false}],
        [[{op,1319,'=:=',{var,1319,'Type'},{atom,1319,set}},
          {op,1319,'=:=',{var,1319,'Delete'},{atom,1319,delete}}]],
        [{'case',1320,
          {call,1320,
           {remote,1320,{atom,1320,lists},{atom,1320,keyfind}},
           [{op,1320,'-',{integer,1320,1}},
            {integer,1320,2},
            {var,1320,'Objects'}]},
          [{clause,1321,
            [{atom,1321,false}],
            [],
            [{match,1322,
              {var,1322,'L1'},
              {cons,1322,
               {tuple,1322,
                [{atom,1322,delete},{var,1322,'Pos'},{var,1322,'Size'}]},
               {var,1322,'L'}}},
             {tuple,1323,[{nil,1323},{var,1323,'L1'},{var,1323,'LU'}]}]},
           {clause,1324,
            [{tuple,1324,[{var,1324,'Term2'},{op,1324,'-',{integer,1324,1}}]}],
            [],
            [{match,1325,
              {var,1325,'Bin2'},
              {call,1325,{atom,1325,term_to_binary},[{var,1325,'Term2'}]}},
             {match,1326,
              {var,1326,'NSize'},
              {call,1326,{atom,1326,byte_size},[{var,1326,'Bin2'}]}},
             {match,1327,
              {var,1327,'Overwrite'},
              {'if',1328,
               [{clause,1329,[],
                 [[{op,1329,'=:=',{var,1329,'NSize'},{var,1329,'Size'}}]],
                 [{atom,1330,true}]},
                {clause,1331,[],
                 [[{atom,1331,true}]],
                 [{match,1332,
                   {var,1332,'SizePos'},
                   {call,1332,
                    {atom,1332,sz2pos},
                    [{op,1332,'+',{var,1332,'Size'},{integer,188,12}}]}},
                  {match,1333,
                   {var,1333,'NSizePos'},
                   {call,1333,
                    {atom,1333,sz2pos},
                    [{op,1333,'+',{var,1333,'NSize'},{integer,188,12}}]}},
                  {op,1334,'=:=',
                   {var,1334,'SizePos'},
                   {var,1334,'NSizePos'}}]}]}},
             {match,1336,
              {var,1336,'E'},
              {'if',1336,
               [{clause,1337,[],
                 [[{var,1337,'Overwrite'}]],
                 [{tuple,1338,
                   [{atom,1338,overwrite},
                    {var,1338,'Bin2'},
                    {var,1338,'Pos'}]}]},
                {clause,1339,[],
                 [[{atom,1339,true}]],
                 [{tuple,1340,
                   [{atom,1340,replace},
                    {var,1340,'Bin2'},
                    {var,1340,'Pos'},
                    {var,1340,'Size'}]}]}]}},
             {call,1342,
              {atom,1342,wl_lookup},
              [{var,1342,'LookUp'},
               {nil,1342},
               {var,1342,'Term2'},
               {cons,1342,{var,1342,'E'},{var,1342,'L'}},
               {var,1342,'LU'}]}]}]}]},
       {clause,1344,
        [{atom,1344,false}],
        [[{op,1344,'=:=',{var,1344,'Delete'},{atom,1344,delete}}]],
        [{match,1345,
          {var,1345,'L1'},
          {cons,1345,
           {tuple,1345,
            [{atom,1345,delete},{var,1345,'Pos'},{var,1345,'Size'}]},
           {var,1345,'L'}}},
         {tuple,1346,[{var,1346,'Objects'},{var,1346,'L1'},{var,1346,'LU'}]}]},
       {clause,1347,
        [{atom,1347,false}],
        [],
        [{match,1348,
          {var,1348,'L1'},
          {cons,1348,
           {tuple,1348,[{atom,1348,old},{var,1348,'Pos'}]},
           {var,1348,'L'}}},
         {call,1349,
          {atom,1349,wl_lookup},
          [{var,1349,'LookUp'},
           {var,1349,'Objects'},
           {var,1349,'Term'},
           {var,1349,'L1'},
           {var,1349,'LU'}]}]}]}]}]},
 {function,1353,wl_lookup,5,
  [{clause,1353,
    [{tuple,1353,[{atom,1353,lookup},{var,1353,'_'}]},
     {var,1353,'Objects'},
     {var,1353,'Term'},
     {var,1353,'L'},
     {var,1353,'LU'}],
    [],
    [{tuple,1354,
      [{var,1354,'Objects'},
       {var,1354,'L'},
       {cons,1354,{var,1354,'Term'},{var,1354,'LU'}}]}]},
   {clause,1355,
    [{atom,1355,skip},
     {var,1355,'Objects'},
     {var,1355,'_Term'},
     {var,1355,'L'},
     {var,1355,'LU'}],
    [],
    [{tuple,1356,[{var,1356,'Objects'},{var,1356,'L'},{var,1356,'LU'}]}]}]},
 {function,1358,end_of_key,4,
  [{clause,1358,
    [{cons,1358,
      {tuple,1358,[{var,1358,'Object'},{var,1358,'N0'}]},
      {var,1358,'Objs'}},
     {var,1358,'LookUp'},
     {var,1358,'L'},
     {var,1358,'LU'}],
    [[{op,1358,'=/=',{var,1358,'N0'},{integer,1358,0}}]],
    [{match,1359,{var,1359,'N'},{call,1359,{atom,1359,abs},[{var,1359,'N0'}]}},
     {match,1360,
      {var,1360,'NL'},
      {cons,1360,
       {tuple,1360,
        [{atom,1360,insert},
         {var,1360,'N'},
         {call,1360,{atom,1360,term_to_binary},[{var,1360,'Object'}]}]},
       {var,1360,'L'}}},
     {match,1361,
      {var,1361,'NLU'},
      {'case',1361,
       {var,1361,'LookUp'},
       [{clause,1362,
         [{tuple,1362,[{atom,1362,lookup},{var,1362,'_'}]}],
         [],
         [{op,1363,'++',
           {call,1363,
            {remote,1363,{atom,1363,lists},{atom,1363,duplicate}},
            [{var,1363,'N'},{var,1363,'Object'}]},
           {var,1363,'LU'}}]},
        {clause,1364,[{atom,1364,skip}],[],[{var,1365,'LU'}]}]}},
     {call,1367,
      {atom,1367,end_of_key},
      [{var,1367,'Objs'},
       {var,1367,'LookUp'},
       {var,1367,'NL'},
       {var,1367,'NLU'}]}]},
   {clause,1368,
    [{cons,1368,{var,1368,'_'},{var,1368,'Objects'}},
     {var,1368,'LookUp'},
     {var,1368,'L'},
     {var,1368,'LU'}],
    [],
    [{call,1369,
      {atom,1369,end_of_key},
      [{var,1369,'Objects'},
       {var,1369,'LookUp'},
       {var,1369,'L'},
       {var,1369,'LU'}]}]},
   {clause,1370,
    [{nil,1370},
     {tuple,1370,[{atom,1370,lookup},{var,1370,'Pid'}]},
     {var,1370,'L'},
     {var,1370,'LU'}],
    [],
    [{tuple,1371,
      [{var,1371,'L'},
       {cons,1371,
        {tuple,1371,[{var,1371,'Pid'},{var,1371,'LU'}]},
        {nil,1371}}]}]},
   {clause,1372,
    [{nil,1372},{atom,1372,skip},{var,1372,'L'},{var,1372,'LU'}],
    [],
    [{tuple,1373,[{var,1373,'L'},{var,1373,'LU'}]}]}]},
 {function,1375,create_writes,4,
  [{clause,1375,
    [{cons,1375,{var,1375,'L'},{var,1375,'Ls'}},
     {var,1375,'H'},
     {var,1375,'Ws'},
     {var,1375,'No'}],
    [],
    [{match,1376,
      {tuple,1376,[{var,1376,'NH'},{var,1376,'NWs'},{var,1376,'NNo'}]},
      {call,1376,
       {atom,1376,create_writes},
       [{var,1376,'L'},
        {var,1376,'H'},
        {var,1376,'Ws'},
        {var,1376,'No'},
        {integer,1376,0},
        {atom,1376,true}]}},
     {call,1377,
      {atom,1377,create_writes},
      [{var,1377,'Ls'},{var,1377,'NH'},{var,1377,'NWs'},{var,1377,'NNo'}]}]},
   {clause,1378,
    [{nil,1378},{var,1378,'H'},{var,1378,'Ws'},{var,1378,'No'}],
    [],
    [{tuple,1379,
      [{var,1379,'H'},
       {call,1379,
        {remote,1379,{atom,1379,lists},{atom,1379,reverse}},
        [{var,1379,'Ws'}]},
       {var,1379,'No'}]}]}]},
 {function,1381,create_writes,6,
  [{clause,1381,
    [{cons,1381,
      {tuple,1381,[{atom,1381,old},{var,1381,'Pos'}]},
      {var,1381,'L'}},
     {var,1381,'H'},
     {var,1381,'Ws'},
     {var,1381,'No'},
     {var,1381,'_Next'},
     {atom,1381,true}],
    [],
    [{call,1382,
      {atom,1382,create_writes},
      [{var,1382,'L'},
       {var,1382,'H'},
       {var,1382,'Ws'},
       {var,1382,'No'},
       {var,1382,'Pos'},
       {atom,1382,true}]}]},
   {clause,1383,
    [{cons,1383,
      {tuple,1383,[{atom,1383,old},{var,1383,'Pos'}]},
      {var,1383,'L'}},
     {var,1383,'H'},
     {var,1383,'Ws'},
     {var,1383,'No'},
     {var,1383,'Next'},
     {atom,1383,false}],
    [],
    [{match,1384,
      {var,1384,'W'},
      {tuple,1384,
       [{var,1384,'Pos'},
        {bin,1384,
         [{bin_element,1384,{var,1384,'Next'},{integer,1384,32},default}]}]}},
     {call,1385,
      {atom,1385,create_writes},
      [{var,1385,'L'},
       {var,1385,'H'},
       {cons,1385,{var,1385,'W'},{var,1385,'Ws'}},
       {var,1385,'No'},
       {var,1385,'Pos'},
       {atom,1385,true}]}]},
   {clause,1386,
    [{cons,1386,
      {tuple,1386,[{atom,1386,insert},{var,1386,'N'},{var,1386,'Bin'}]},
      {var,1386,'L'}},
     {var,1386,'H'},
     {var,1386,'Ws'},
     {var,1386,'No'},
     {var,1386,'Next'},
     {var,1386,'_NextIsOld'}],
    [],
    [{match,1387,
      {tuple,1387,[{var,1387,'NH'},{var,1387,'NWs'},{var,1387,'Pos'}]},
      {call,1387,
       {atom,1387,create_inserts},
       [{var,1387,'N'},
        {var,1387,'H'},
        {var,1387,'Ws'},
        {var,1387,'Next'},
        {call,1387,{atom,1387,byte_size},[{var,1387,'Bin'}]},
        {var,1387,'Bin'}]}},
     {call,1388,
      {atom,1388,create_writes},
      [{var,1388,'L'},
       {var,1388,'NH'},
       {var,1388,'NWs'},
       {op,1388,'+',{var,1388,'No'},{var,1388,'N'}},
       {var,1388,'Pos'},
       {atom,1388,false}]}]},
   {clause,1389,
    [{cons,1389,
      {tuple,1389,[{atom,1389,overwrite},{var,1389,'Bin'},{var,1389,'Pos'}]},
      {var,1389,'L'}},
     {var,1389,'H'},
     {var,1389,'Ws'},
     {var,1389,'No'},
     {var,1389,'Next'},
     {var,1389,'_'}],
    [],
    [{match,1390,
      {var,1390,'Size'},
      {call,1390,{atom,1390,byte_size},[{var,1390,'Bin'}]}},
     {match,1391,
      {var,1391,'W'},
      {tuple,1391,
       [{var,1391,'Pos'},
        {cons,1391,
         {bin,1391,
          [{bin_element,1391,{var,1391,'Next'},{integer,1391,32},default},
           {bin_element,1391,{var,1391,'Size'},{integer,1391,32},default},
           {bin_element,34,{integer,34,305419896},{integer,1391,32},default}]},
         {cons,1391,{var,1391,'Bin'},{nil,1391}}}]}},
     {call,1392,
      {atom,1392,create_writes},
      [{var,1392,'L'},
       {var,1392,'H'},
       {cons,1392,{var,1392,'W'},{var,1392,'Ws'}},
       {var,1392,'No'},
       {var,1392,'Pos'},
       {atom,1392,true}]}]},
   {clause,1393,
    [{cons,1393,
      {tuple,1393,
       [{atom,1393,replace},
        {var,1393,'Bin'},
        {var,1393,'Pos'},
        {var,1393,'OSize'}]},
      {var,1393,'L'}},
     {var,1393,'H'},
     {var,1393,'Ws'},
     {var,1393,'No'},
     {var,1393,'Next'},
     {var,1393,'_'}],
    [],
    [{match,1394,
      {var,1394,'Size'},
      {call,1394,{atom,1394,byte_size},[{var,1394,'Bin'}]}},
     {match,1395,
      {tuple,1395,[{var,1395,'H1'},{var,1395,'_'}]},
      {call,1395,
       {remote,1395,{atom,1395,dets_utils},{atom,1395,free}},
       [{var,1395,'H'},
        {var,1395,'Pos'},
        {op,1395,'+',{var,1395,'OSize'},{integer,188,12}}]}},
     {match,1396,
      {tuple,1396,[{var,1396,'NH'},{var,1396,'NewPos'},{var,1396,'_'}]},
      {call,1396,
       {remote,1396,{atom,1396,dets_utils},{atom,1396,alloc}},
       [{var,1396,'H1'},{op,1396,'+',{integer,188,12},{var,1396,'Size'}}]}},
     {match,1397,
      {var,1397,'W1'},
      {tuple,1397,
       [{var,1397,'NewPos'},
        {cons,1397,
         {bin,1397,
          [{bin_element,1397,{var,1397,'Next'},{integer,1397,32},default},
           {bin_element,1397,{var,1397,'Size'},{integer,1397,32},default},
           {bin_element,34,{integer,34,305419896},{integer,1397,32},default}]},
         {cons,1397,{var,1397,'Bin'},{nil,1397}}}]}},
     {match,1398,
      {var,1398,'NWs'},
      {'if',1398,
       [{clause,1399,[],
         [[{op,1399,'=:=',{var,1399,'Pos'},{var,1399,'NewPos'}}]],
         [{cons,1400,{var,1400,'W1'},{var,1400,'Ws'}}]},
        {clause,1401,[],
         [[{atom,1401,true}]],
         [{match,1402,
           {var,1402,'W2'},
           {tuple,1402,
            [{op,1402,'+',{var,1402,'Pos'},{integer,189,8}},
             {bin,1402,
              [{bin_element,33,
                {integer,33,61591023},
                {integer,1402,32},
                default}]}]}},
          {cons,1403,
           {var,1403,'W1'},
           {cons,1403,{var,1403,'W2'},{var,1403,'Ws'}}}]}]}},
     {call,1405,
      {atom,1405,create_writes},
      [{var,1405,'L'},
       {var,1405,'NH'},
       {var,1405,'NWs'},
       {var,1405,'No'},
       {var,1405,'NewPos'},
       {atom,1405,false}]}]},
   {clause,1406,
    [{cons,1406,
      {tuple,1406,[{atom,1406,delete},{var,1406,'Pos'},{var,1406,'Size'}]},
      {var,1406,'L'}},
     {var,1406,'H'},
     {var,1406,'Ws'},
     {var,1406,'No'},
     {var,1406,'Next'},
     {var,1406,'_'}],
    [],
    [{match,1407,
      {tuple,1407,[{var,1407,'NH'},{var,1407,'_'}]},
      {call,1407,
       {remote,1407,{atom,1407,dets_utils},{atom,1407,free}},
       [{var,1407,'H'},
        {var,1407,'Pos'},
        {op,1407,'+',{var,1407,'Size'},{integer,188,12}}]}},
     {match,1408,
      {var,1408,'NWs'},
      {cons,1408,
       {tuple,1408,
        [{op,1408,'+',{var,1408,'Pos'},{integer,189,8}},
         {bin,1408,
          [{bin_element,33,
            {integer,33,61591023},
            {integer,1408,32},
            default}]}]},
       {var,1408,'Ws'}}},
     {call,1409,
      {atom,1409,create_writes},
      [{var,1409,'L'},
       {var,1409,'NH'},
       {var,1409,'NWs'},
       {op,1409,'-',{var,1409,'No'},{integer,1409,1}},
       {var,1409,'Next'},
       {atom,1409,false}]}]},
   {clause,1410,
    [{nil,1410},
     {var,1410,'H'},
     {var,1410,'Ws'},
     {var,1410,'No'},
     {var,1410,'_Next'},
     {var,1410,'_NextIsOld'}],
    [],
    [{tuple,1411,[{var,1411,'H'},{var,1411,'Ws'},{var,1411,'No'}]}]}]},
 {function,1413,create_inserts,6,
  [{clause,1413,
    [{integer,1413,0},
     {var,1413,'H'},
     {var,1413,'Ws'},
     {var,1413,'Next'},
     {var,1413,'_Size'},
     {var,1413,'_Bin'}],
    [],
    [{tuple,1414,[{var,1414,'H'},{var,1414,'Ws'},{var,1414,'Next'}]}]},
   {clause,1415,
    [{var,1415,'N'},
     {var,1415,'H'},
     {var,1415,'Ws'},
     {var,1415,'Next'},
     {var,1415,'Size'},
     {var,1415,'Bin'}],
    [],
    [{match,1416,
      {tuple,1416,[{var,1416,'NH'},{var,1416,'Pos'},{var,1416,'_'}]},
      {call,1416,
       {remote,1416,{atom,1416,dets_utils},{atom,1416,alloc}},
       [{var,1416,'H'},{op,1416,'+',{integer,188,12},{var,1416,'Size'}}]}},
     {match,1417,
      {var,1417,'W'},
      {tuple,1417,
       [{var,1417,'Pos'},
        {cons,1417,
         {bin,1417,
          [{bin_element,1417,{var,1417,'Next'},{integer,1417,32},default},
           {bin_element,1417,{var,1417,'Size'},{integer,1417,32},default},
           {bin_element,34,{integer,34,305419896},{integer,1417,32},default}]},
         {cons,1417,{var,1417,'Bin'},{nil,1417}}}]}},
     {call,1418,
      {atom,1418,create_inserts},
      [{op,1418,'-',{var,1418,'N'},{integer,1418,1}},
       {var,1418,'NH'},
       {cons,1418,{var,1418,'W'},{var,1418,'Ws'}},
       {var,1418,'Pos'},
       {var,1418,'Size'},
       {var,1418,'Bin'}]}]}]},
 {function,1420,slot_position,1,
  [{clause,1420,
    [{var,1420,'S'}],
    [],
    [{match,1421,
      {var,1421,'Pos'},
      {op,131,'+',
       {integer,127,40},
       {op,131,'*',
        {integer,131,4},
        {op,135,'bsr',{var,1421,'S'},{integer,129,8}}}}},
     {match,1422,
      {var,1422,'Segment'},
      {call,1422,{atom,1422,get_segp},[{var,1422,'Pos'}]}},
     {match,1423,
      {var,1423,'FinalPos'},
      {op,1423,'+',
       {var,1423,'Segment'},
       {op,1423,'*',
        {integer,1423,4},
        {op,45,'band',
         {var,1423,'S'},
         {op,45,'-',{integer,128,256},{integer,45,1}}}}}},
     {tuple,1424,[{var,1424,'FinalPos'},{integer,1424,4}]}]}]},
 {function,1427,actual_seg_size,0,
  [{clause,1427,[],[],
    [{op,42,'bsl',
      {integer,42,1},
      {op,1428,'-',
       {call,1428,
        {atom,1428,sz2pos},
        [{op,1428,'*',{integer,128,256},{integer,1428,4}}]},
       {integer,1428,1}}}]}]},
 {function,1430,segp_cache,2,
  [{clause,1430,
    [{var,1430,'Pos'},{var,1430,'Segment'}],
    [],
    [{call,1431,{atom,1431,put},[{var,1431,'Pos'},{var,1431,'Segment'}]}]}]},
 {function,1434,get_segp,1,
  [{clause,1434,
    [{var,1434,'Pos'}],
    [],
    [{call,1435,{atom,1435,get},[{var,1435,'Pos'}]}]}]},
 {function,1439,sz2pos,1,
  [{clause,1439,
    [{var,1439,'N'}],
    [],
    [{op,1440,'+',
      {integer,1440,1},
      {call,1440,
       {remote,1440,{atom,1440,dets_utils},{atom,1440,log2}},
       [{op,1440,'+',{var,1440,'N'},{integer,1440,1}}]}}]}]},
 {function,1442,scan_objs,8,
  [{clause,1442,
    [{var,1442,'_Head'},
     {var,1442,'Bin'},
     {var,1442,'From'},
     {var,1442,'To'},
     {var,1442,'L'},
     {var,1442,'Ts'},
     {var,1442,'R'},
     {var,1442,'_Type'}],
    [],
    [{call,1443,
      {atom,1443,scan_objs},
      [{var,1443,'Bin'},
       {var,1443,'From'},
       {var,1443,'To'},
       {var,1443,'L'},
       {var,1443,'Ts'},
       {var,1443,'R'}]}]}]},
 {function,1445,scan_objs,6,
  [{clause,1445,
    [{var,1445,'Bin'},
     {var,1445,'From'},
     {var,1445,'To'},
     {var,1445,'L'},
     {var,1445,'Ts'},
     {op,1445,'-',{integer,1445,1}}],
    [],
    [{tuple,1446,
      [{atom,1446,stop},
       {var,1446,'Bin'},
       {var,1446,'From'},
       {var,1446,'To'},
       {var,1446,'L'},
       {var,1446,'Ts'}]}]},
   {clause,1447,
    [{match,1447,
      {var,1447,'B'},
      {bin,1447,
       [{bin_element,1447,{var,1447,'_N'},{integer,1447,32},default},
        {bin_element,1447,{var,1447,'Sz'},{integer,1447,32},default},
        {bin_element,1447,{var,1447,'St'},{integer,1447,32},default},
        {bin_element,1447,{var,1447,'T'},default,[binary]}]}},
     {var,1447,'From'},
     {var,1447,'To'},
     {var,1447,'L'},
     {var,1447,'Ts'},
     {var,1447,'R'}],
    [],
    [{'if',1448,
      [{clause,1449,[],
        [[{op,1449,'=:=',{var,1449,'St'},{integer,34,305419896}}],
         [{op,1450,'=:=',{var,1450,'St'},{integer,33,61591023}}]],
        [{'case',1451,
          {var,1451,'T'},
          [{clause,1452,
            [{bin,1452,
              [{bin_element,1452,
                {var,1452,'BinTerm'},
                {var,1452,'Sz'},
                [binary]},
               {bin_element,1452,{var,1452,'T2'},default,[binary]}]}],
            [],
            [{match,1453,
              {var,1453,'NTs'},
              {cons,1453,{var,1453,'BinTerm'},{var,1453,'Ts'}}},
             {match,1454,
              {var,1454,'OSz'},
              {op,1454,'+',{var,1454,'Sz'},{integer,188,12}}},
             {match,1455,
              {var,1455,'Skip'},
              {op,1455,'-',
               {op,42,'bsl',
                {integer,42,1},
                {op,1455,'-',
                 {call,1455,{atom,1455,sz2pos},[{var,1455,'OSz'}]},
                 {integer,1455,1}}},
               {var,1455,'OSz'}}},
             {match,1456,
              {var,1456,'F2'},
              {op,1456,'+',{var,1456,'From'},{var,1456,'OSz'}}},
             {match,1457,
              {var,1457,'NR'},
              {'if',1457,
               [{clause,1458,[],
                 [[{op,1458,'<',{var,1458,'R'},{integer,1458,0}}]],
                 [{op,1459,'+',{var,1459,'R'},{integer,1459,1}}]},
                {clause,1460,[],
                 [[{atom,1460,true}]],
                 [{op,1461,'+',
                   {op,1461,'+',{var,1461,'R'},{var,1461,'OSz'}},
                   {var,1461,'Skip'}}]}]}},
             {call,1463,
              {atom,1463,scan_skip},
              [{var,1463,'T2'},
               {var,1463,'F2'},
               {var,1463,'To'},
               {var,1463,'Skip'},
               {var,1463,'L'},
               {var,1463,'NTs'},
               {var,1463,'NR'}]}]},
           {clause,1464,
            [{var,1464,'_'}],
            [],
            [{tuple,1465,
              [{atom,1465,more},
               {var,1465,'From'},
               {var,1465,'To'},
               {var,1465,'L'},
               {var,1465,'Ts'},
               {var,1465,'R'},
               {op,1465,'+',{var,1465,'Sz'},{integer,188,12}}]}]}]}]},
       {clause,1467,[],
        [[{atom,1467,true}]],
        [{call,1468,
          {atom,1468,scan_skip},
          [{var,1468,'B'},
           {var,1468,'From'},
           {var,1468,'To'},
           {call,1468,{atom,1468,actual_seg_size},[]},
           {var,1468,'L'},
           {var,1468,'Ts'},
           {var,1468,'R'}]}]}]}]},
   {clause,1470,
    [{var,1470,'_B'},
     {var,1470,'From'},
     {var,1470,'To'},
     {var,1470,'L'},
     {var,1470,'Ts'},
     {var,1470,'R'}],
    [],
    [{tuple,1471,
      [{atom,1471,more},
       {var,1471,'From'},
       {var,1471,'To'},
       {var,1471,'L'},
       {var,1471,'Ts'},
       {var,1471,'R'},
       {integer,1471,0}]}]}]},
 {function,1473,scan_skip,7,
  [{clause,1473,
    [{var,1473,'Bin'},
     {var,1473,'From'},
     {var,1473,'To'},
     {var,1473,'Skip'},
     {var,1473,'L'},
     {var,1473,'Ts'},
     {var,1473,'R'}],
    [[{op,1473,'<',
       {op,1473,'+',{var,1473,'From'},{var,1473,'Skip'}},
       {var,1473,'To'}}]],
    [{match,1474,
      {var,1474,'SkipPos'},
      {op,1474,'+',{var,1474,'From'},{var,1474,'Skip'}}},
     {'case',1475,
      {var,1475,'Bin'},
      [{clause,1476,
        [{bin,1476,
          [{bin_element,1476,{var,1476,'_'},{var,1476,'Skip'},[binary]},
           {bin_element,1476,{var,1476,'Tail'},default,[binary]}]}],
        [],
        [{call,1477,
          {atom,1477,scan_objs},
          [{var,1477,'Tail'},
           {var,1477,'SkipPos'},
           {var,1477,'To'},
           {var,1477,'L'},
           {var,1477,'Ts'},
           {var,1477,'R'}]}]},
       {clause,1478,
        [{var,1478,'_'}],
        [],
        [{tuple,1479,
          [{atom,1479,more},
           {var,1479,'SkipPos'},
           {var,1479,'To'},
           {var,1479,'L'},
           {var,1479,'Ts'},
           {var,1479,'R'},
           {integer,1479,0}]}]}]}]},
   {clause,1481,
    [{var,1481,'Bin'},
     {var,1481,'From'},
     {var,1481,'To'},
     {var,1481,'Skip'},
     {var,1481,'L'},
     {var,1481,'Ts'},
     {var,1481,'R'}],
    [[{op,1481,'=:=',
       {op,1481,'+',{var,1481,'From'},{var,1481,'Skip'}},
       {var,1481,'To'}}]],
    [{call,1482,
      {atom,1482,scan_next_allocated},
      [{var,1482,'Bin'},
       {var,1482,'From'},
       {var,1482,'To'},
       {var,1482,'L'},
       {var,1482,'Ts'},
       {var,1482,'R'}]}]},
   {clause,1483,
    [{var,1483,'_Bin'},
     {var,1483,'From'},
     {var,1483,'_To'},
     {var,1483,'Skip'},
     {var,1483,'L'},
     {var,1483,'Ts'},
     {var,1483,'R'}],
    [],
    [{match,1484,
      {var,1484,'From1'},
      {op,1484,'+',{var,1484,'From'},{var,1484,'Skip'}}},
     {tuple,1485,
      [{atom,1485,more},
       {var,1485,'From1'},
       {var,1485,'From1'},
       {var,1485,'L'},
       {var,1485,'Ts'},
       {var,1485,'R'},
       {integer,1485,0}]}]}]},
 {function,1487,scan_next_allocated,6,
  [{clause,1487,
    [{var,1487,'_Bin'},
     {var,1487,'_From'},
     {var,1487,'To'},
     {match,1487,{bin,1487,[]},{var,1487,'L'}},
     {var,1487,'Ts'},
     {var,1487,'R'}],
    [],
    [{tuple,1488,
      [{atom,1488,more},
       {var,1488,'To'},
       {var,1488,'To'},
       {var,1488,'L'},
       {var,1488,'Ts'},
       {var,1488,'R'},
       {integer,1488,0}]}]},
   {clause,1489,
    [{var,1489,'Bin'},
     {var,1489,'From0'},
     {var,1489,'_To'},
     {bin,1489,
      [{bin_element,1489,{var,1489,'From'},{integer,1489,32},default},
       {bin_element,1489,{var,1489,'To'},{integer,1489,32},default},
       {bin_element,1489,{var,1489,'L'},default,[binary]}]},
     {var,1489,'Ts'},
     {var,1489,'R'}],
    [],
    [{match,1490,
      {var,1490,'Skip'},
      {op,1490,'-',{var,1490,'From'},{var,1490,'From0'}}},
     {call,1491,
      {atom,1491,scan_skip},
      [{var,1491,'Bin'},
       {var,1491,'From0'},
       {var,1491,'To'},
       {var,1491,'Skip'},
       {var,1491,'L'},
       {var,1491,'Ts'},
       {var,1491,'R'}]}]}]},
 {function,1494,prterm,3,
  [{clause,1494,
    [{var,1494,'Head'},{var,1494,'Pos'},{var,1494,'ReadAhead'}],
    [],
    [{match,1495,
      {var,1495,'Res'},
      {call,1495,
       {remote,1495,{atom,1495,dets_utils},{atom,1495,pread}},
       [{var,1495,'Head'},
        {var,1495,'Pos'},
        {integer,188,12},
        {var,1495,'ReadAhead'}]}},
     {atom,198,void},
     {match,1497,
      {tuple,1497,
       [{atom,1497,ok},
        {bin,1497,
         [{bin_element,1497,{var,1497,'Next'},{integer,1497,32},default},
          {bin_element,1497,{var,1497,'Sz'},{integer,1497,32},default},
          {bin_element,1497,{var,1497,'_Status'},{integer,1497,32},default},
          {bin_element,1497,{var,1497,'Bin0'},default,[binary]}]}]},
      {var,1497,'Res'}},
     {atom,198,void},
     {match,1499,
      {var,1499,'Bin'},
      {'case',1499,
       {call,1499,{atom,1499,byte_size},[{var,1499,'Bin0'}]},
       [{clause,1500,
         [{var,1500,'Actual'}],
         [[{op,1500,'>=',{var,1500,'Actual'},{var,1500,'Sz'}}]],
         [{var,1501,'Bin0'}]},
        {clause,1502,
         [{var,1502,'_'}],
         [],
         [{match,1503,
           {tuple,1503,[{atom,1503,ok},{var,1503,'Bin1'}]},
           {call,1503,
            {remote,1503,{atom,1503,dets_utils},{atom,1503,pread}},
            [{var,1503,'Head'},
             {op,1503,'+',{var,1503,'Pos'},{integer,188,12}},
             {var,1503,'Sz'},
             {integer,1503,0}]}},
          {var,1504,'Bin1'}]}]}},
     {match,1506,
      {var,1506,'Term'},
      {call,1506,{atom,1506,binary_to_term},[{var,1506,'Bin'}]}},
     {tuple,1507,[{var,1507,'Next'},{var,1507,'Sz'},{var,1507,'Term'}]}]}]},
 {function,1511,file_info,1,
  [{clause,1511,
    [{var,1511,'FH'}],
    [],
    [{match,1515,
      {tuple,1512,
       [{atom,1512,fileheader},
        {var,1512,'_'},
        {var,1512,'_'},
        {var,1512,'_'},
        {var,1512,'CP'},
        {var,1514,'Type'},
        {var,1513,'Version'},
        {var,1513,'M'},
        {var,1513,'Next'},
        {var,1512,'Kp'},
        {var,1514,'NoObjects'},
        {var,1512,'_'},
        {var,1512,'_'},
        {var,1512,'_'},
        {var,1512,'_'},
        {var,1512,'_'},
        {var,1512,'_'},
        {var,1512,'_'},
        {var,1512,'_'},
        {var,1512,'_'},
        {var,1512,'_'},
        {var,1513,'N'},
        {var,1512,'_'}]},
      {var,1515,'FH'}},
     {'if',1516,
      [{clause,1517,[],
        [[{op,1517,'=:=',{var,1517,'CP'},{integer,1517,0}}]],
        [{tuple,1518,[{atom,1518,error},{atom,1518,not_closed}]}]},
       {clause,1519,[],
        [[{op,1519,'=/=',
           {call,1519,
            {remote,1519,{atom,1519,erlang},{atom,1519,element}},
            [{integer,1519,4},{var,1519,'FH'}]},
           {integer,31,11259375}}]],
        [{tuple,1520,[{atom,1520,error},{atom,1520,not_a_dets_file}]}]},
       {clause,1521,[],
        [[{op,1521,'=/=',
           {call,1521,
            {remote,1521,{atom,1521,erlang},{atom,1521,element}},
            [{integer,1521,7},{var,1521,'FH'}]},
           {integer,180,8}}]],
        [{tuple,1522,[{atom,1522,error},{atom,1522,bad_version}]}]},
       {clause,1523,[],
        [[{atom,1523,true}]],
        [{tuple,1524,
          [{atom,1524,ok},
           {cons,1524,
            {tuple,1524,[{atom,1524,closed_properly},{var,1524,'CP'}]},
            {cons,1524,
             {tuple,1524,[{atom,1524,keypos},{var,1524,'Kp'}]},
             {cons,1524,
              {tuple,1524,[{atom,1524,m},{var,1524,'M'}]},
              {cons,1525,
               {tuple,1525,[{atom,1525,n},{var,1525,'N'}]},
               {cons,1525,
                {tuple,1525,[{atom,1525,next},{var,1525,'Next'}]},
                {cons,1525,
                 {tuple,1525,[{atom,1525,no_objects},{var,1525,'NoObjects'}]},
                 {cons,1526,
                  {tuple,1526,[{atom,1526,type},{var,1526,'Type'}]},
                  {cons,1526,
                   {tuple,1526,[{atom,1526,version},{var,1526,'Version'}]},
                   {nil,1526}}}}}}}}}]}]}]}]}]},
 {function,1529,v_segments,1,
  [{clause,1529,
    [{var,1529,'H'}],
    [],
    [{call,1530,{atom,1530,v_segments},[{var,1530,'H'},{integer,1530,0}]}]}]},
 {function,1532,v_segments,2,
  [{clause,1532,[{var,1532,'_H'},{integer,130,8192}],[],[{atom,1533,done}]},
   {clause,1534,
    [{var,1534,'H'},{var,1534,'SegNo'}],
    [],
    [{match,1535,
      {var,1535,'Seg'},
      {call,1535,
       {remote,1535,{atom,1535,dets_utils},{atom,1535,read_4}},
       [{call,1535,
         {remote,1535,{atom,1535,erlang},{atom,1535,element}},
         [{integer,1535,5},{var,1535,'H'}]},
        {op,131,'+',
         {integer,127,40},
         {op,131,'*',{integer,131,4},{var,1535,'SegNo'}}}]}},
     {'if',1536,
      [{clause,1537,[],
        [[{op,1537,'=:=',{var,1537,'Seg'},{integer,1537,0}}]],
        [{atom,1538,done}]},
       {clause,1539,[],
        [[{atom,1539,true}]],
        [{call,1540,
          {remote,1540,{atom,1540,io},{atom,1540,format}},
          [{string,1540,"SEGMENT ~w "},
           {cons,1540,{var,1540,'SegNo'},{nil,1540}}]},
         {call,1541,
          {remote,1541,{atom,1541,io},{atom,1541,format}},
          [{string,1541,"At position ~w~n"},
           {cons,1541,{var,1541,'Seg'},{nil,1541}}]},
         {call,1542,
          {atom,1542,v_segment},
          [{var,1542,'H'},
           {var,1542,'SegNo'},
           {var,1542,'Seg'},
           {integer,1542,0}]},
         {call,1543,
          {atom,1543,v_segments},
          [{var,1543,'H'},
           {op,1543,'+',{var,1543,'SegNo'},{integer,1543,1}}]}]}]}]}]},
 {function,1546,v_segment,4,
  [{clause,1546,
    [{var,1546,'_H'},{var,1546,'_'},{var,1546,'_SegPos'},{integer,128,256}],
    [],
    [{atom,1547,done}]},
   {clause,1548,
    [{var,1548,'H'},
     {var,1548,'SegNo'},
     {var,1548,'SegPos'},
     {var,1548,'SegSlot'}],
    [],
    [{match,1549,
      {var,1549,'Slot'},
      {op,1549,'+',
       {var,1549,'SegSlot'},
       {op,1549,'*',{var,1549,'SegNo'},{integer,128,256}}}},
     {match,1550,
      {var,1550,'Chain'},
      {call,1550,
       {remote,1550,{atom,1550,dets_utils},{atom,1550,read_4}},
       [{call,1550,
         {remote,1550,{atom,1550,erlang},{atom,1550,element}},
         [{integer,1550,5},{var,1550,'H'}]},
        {op,1550,'+',
         {var,1550,'SegPos'},
         {op,1550,'*',{integer,1550,4},{var,1550,'SegSlot'}}}]}},
     {'if',1551,
      [{clause,1552,[],
        [[{op,1552,'=:=',{var,1552,'Chain'},{integer,1552,0}}]],
        [{atom,1553,true}]},
       {clause,1554,[],
        [[{atom,1554,true}]],
        [{call,1555,
          {remote,1555,{atom,1555,io},{atom,1555,format}},
          [{string,1555,"   <~p>~p: ["},
           {cons,1555,
            {op,1555,'+',
             {var,1555,'SegPos'},
             {op,1555,'*',{integer,1555,4},{var,1555,'SegSlot'}}},
            {cons,1555,{var,1555,'Slot'},{nil,1555}}}]},
         {call,1556,
          {atom,1556,print_chain},
          [{var,1556,'H'},{var,1556,'Chain'}]}]}]},
     {call,1558,
      {atom,1558,v_segment},
      [{var,1558,'H'},
       {var,1558,'SegNo'},
       {var,1558,'SegPos'},
       {op,1558,'+',{var,1558,'SegSlot'},{integer,1558,1}}]}]}]},
 {function,1560,print_chain,2,
  [{clause,1560,
    [{var,1560,'_H'},{integer,1560,0}],
    [],
    [{call,1561,
      {remote,1561,{atom,1561,io},{atom,1561,format}},
      [{string,1561,"] \n"},{nil,1561}]}]},
   {clause,1562,
    [{var,1562,'H'},{var,1562,'Pos'}],
    [],
    [{match,1563,
      {tuple,1563,[{atom,1563,ok},{var,1563,'_'}]},
      {call,1563,
       {remote,1563,{atom,1563,file},{atom,1563,position}},
       [{call,1563,
         {remote,1563,{atom,1563,erlang},{atom,1563,element}},
         [{integer,1563,5},{var,1563,'H'}]},
        {var,1563,'Pos'}]}},
     {'case',1564,
      {call,1564,
       {atom,1564,rterm},
       [{call,1564,
         {remote,1564,{atom,1564,erlang},{atom,1564,element}},
         [{integer,1564,5},{var,1564,'H'}]}]},
      [{clause,1565,
        [{tuple,1565,
          [{atom,1565,ok},
           {integer,1565,0},
           {var,1565,'_Sz'},
           {var,1565,'Term'}]}],
        [],
        [{call,1566,
          {remote,1566,{atom,1566,io},{atom,1566,format}},
          [{string,1566,"<~p>~p] \n"},
           {cons,1566,
            {var,1566,'Pos'},
            {cons,1566,{var,1566,'Term'},{nil,1566}}}]}]},
       {clause,1567,
        [{tuple,1567,
          [{atom,1567,ok},
           {var,1567,'Next'},
           {var,1567,'_Sz'},
           {var,1567,'Term'}]}],
        [],
        [{call,1568,
          {remote,1568,{atom,1568,io},{atom,1568,format}},
          [{string,1568,"<~p>~p, "},
           {cons,1568,
            {var,1568,'Pos'},
            {cons,1568,{var,1568,'Term'},{nil,1568}}}]},
         {call,1569,
          {atom,1569,print_chain},
          [{var,1569,'H'},{var,1569,'Next'}]}]},
       {clause,1570,
        [{var,1570,'Other'}],
        [],
        [{call,1571,
          {remote,1571,{atom,1571,io},{atom,1571,format}},
          [{string,1571,"~nERROR ~p~n"},
           {cons,1571,{var,1571,'Other'},{nil,1571}}]}]}]}]}]},
 {function,1576,rterm,1,
  [{clause,1576,
    [{var,1576,'F'}],
    [],
    [{'case',1577,
      {'catch',1577,{call,1577,{atom,1577,rterm2},[{var,1577,'F'}]}},
      [{clause,1578,
        [{tuple,1578,[{atom,1578,'EXIT'},{var,1578,'Reason'}]}],
        [],
        [{call,1579,
          {remote,1579,{atom,1579,dets_utils},{atom,1579,vformat}},
          [{string,1579,"** dets: Corrupt or truncated dets file~n"},
           {nil,1580}]},
         {tuple,1581,[{atom,1581,error},{var,1581,'Reason'}]}]},
       {clause,1582,[{var,1582,'Other'}],[],[{var,1583,'Other'}]}]}]}]},
 {function,1586,rterm2,1,
  [{clause,1586,
    [{var,1586,'F'}],
    [],
    [{match,1587,
      {tuple,1587,
       [{atom,1587,ok},
        {bin,1587,
         [{bin_element,1587,{var,1587,'Next'},{integer,1587,32},default},
          {bin_element,1587,{var,1587,'Sz'},{integer,1587,32},default},
          {bin_element,1587,{var,1587,'_'},{integer,1587,32},default}]}]},
      {call,1587,
       {remote,1587,{atom,1587,file},{atom,1587,read}},
       [{var,1587,'F'},{integer,188,12}]}},
     {match,1588,
      {tuple,1588,[{atom,1588,ok},{var,1588,'Bin'}]},
      {call,1588,
       {remote,1588,{atom,1588,file},{atom,1588,read}},
       [{var,1588,'F'},{var,1588,'Sz'}]}},
     {match,1589,
      {var,1589,'Term'},
      {call,1589,{atom,1589,binary_to_term},[{var,1589,'Bin'}]}},
     {tuple,1590,
      [{atom,1590,ok},
       {var,1590,'Next'},
       {var,1590,'Sz'},
       {var,1590,'Term'}]}]}]}]
